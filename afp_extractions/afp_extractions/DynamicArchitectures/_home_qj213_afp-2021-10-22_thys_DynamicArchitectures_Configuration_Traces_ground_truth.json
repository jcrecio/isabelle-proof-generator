{"file_name": "/home/qj213/afp-2021-10-22/thys/DynamicArchitectures/Configuration_Traces.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/DynamicArchitectures", "problem_names": ["lemma boundedGreatest:\n  assumes \"P (i::nat)\"\n    and \"\\<forall>n' > n. \\<not> P n'\"\n  shows \"\\<exists>i'\\<le>n. P i' \\<and> (\\<forall>n'. P n' \\<longrightarrow> n'\\<le>i')\"", "lemma enat_min:\n  assumes \"m \\<ge> enat n'\"\n    and \"enat n < m - enat n'\"\n  shows \"enat n + enat n' < m\"", "lemma lnth_lappend[simp]:\n  assumes \"lfinite xs\"\n    and \"\\<not> lnull ys\"\n  shows \"lnth (xs @\\<^sub>l ys) (the_enat (llength xs)) = lhd ys\"", "lemma lfilter_ltake:\n  assumes \"\\<forall>(n::nat)\\<le>llength xs. n\\<ge>i \\<longrightarrow> (\\<not> P (lnth xs n))\"\n  shows \"lfilter P xs = lfilter P (ltake i xs)\"", "lemma lfilter_lfinite[simp]:\n  assumes \"lfinite (lfilter P t)\"\n    and \"\\<not> lfinite t\"\n  shows \"\\<exists>n. \\<forall>n'>n. \\<not> P (lnth t n')\"", "lemma impI[intro!]:\n  fixes t n\n  assumes \"\\<gamma> t n \\<Longrightarrow> \\<gamma>' t n\"\n  shows \"(\\<gamma> \\<longrightarrow>\\<^sup>c \\<gamma>') t n\"", "lemma impE[elim!]:\n  fixes t n\n  assumes \"(\\<gamma> \\<longrightarrow>\\<^sup>c \\<gamma>') t n\" and \"\\<gamma> t n\" and \"\\<gamma>' t n \\<Longrightarrow> \\<gamma>'' t n\"\n  shows \"\\<gamma>'' t n\"", "lemma disjI1[intro]:\n  assumes \"\\<gamma> t n\"\n  shows \"(\\<gamma> \\<or>\\<^sup>c \\<gamma>') t n\"", "lemma disjI2[intro]:\n  assumes \"\\<gamma>' t n\"\n  shows \"(\\<gamma> \\<or>\\<^sup>c \\<gamma>') t n\"", "lemma disjE[elim!]:\n  assumes \"(\\<gamma> \\<or>\\<^sup>c \\<gamma>') t n\"\n    and \"\\<gamma> t n \\<Longrightarrow> \\<gamma>'' t n\"\n    and \"\\<gamma>' t n \\<Longrightarrow> \\<gamma>'' t n\"\n  shows \"\\<gamma>'' t n\"", "lemma conjI[intro!]:\n  fixes n\n  assumes \"\\<gamma> t n\" and \"\\<gamma>' t n\"\n  shows \"(\\<gamma> \\<and>\\<^sup>c \\<gamma>') t n\"", "lemma conjE[elim!]:\n  fixes n\n  assumes \"(\\<gamma> \\<and>\\<^sup>c \\<gamma>') t n\" and \"\\<gamma> t n \\<Longrightarrow> \\<gamma>' t n \\<Longrightarrow> \\<gamma>'' t n\"\n  shows \"\\<gamma>'' t n\"", "lemma negI[intro!]:\n  assumes \"\\<gamma> t n \\<Longrightarrow> False\"\n  shows \"(\\<not>\\<^sup>c \\<gamma>) t n\"", "lemma negE[elim!]:\n  assumes \"(\\<not>\\<^sup>c \\<gamma>) t n\"\n    and \"\\<gamma> t n\"\n  shows \"\\<gamma>' t n\"", "lemma allI[intro!]:\n  assumes \"\\<And>x. \\<gamma> x t n\"\n  shows \"(\\<forall>\\<^sub>cx. \\<gamma> x) t n\"", "lemma allE[elim!]:\n  fixes n\n  assumes \"(\\<forall>\\<^sub>cx. \\<gamma> x) t n\" and \"\\<gamma> x t n \\<Longrightarrow> \\<gamma>' t n\"\n  shows \"\\<gamma>' t n\"", "lemma exI[intro!]:\n  assumes \"\\<gamma> x t n\"\n  shows \"(\\<exists>\\<^sub>cx. \\<gamma> x) t n\"", "lemma exE[elim!]:\n  assumes \"(\\<exists>\\<^sub>cx. \\<gamma> x) t n\" and \"\\<And>x. \\<gamma> x t n \\<Longrightarrow> \\<gamma>' t n\"\n  shows \"\\<gamma>' t n\"", "lemma caI[intro]:\n  fixes n\n  assumes \"\\<phi> (t n)\"\n  shows \"(ca \\<phi>) t n\"", "lemma caE[elim]:\n  fixes n\n  assumes \"(ca \\<phi>) t n\"\n  shows \"\\<phi> (t n)\"", "lemma globI[intro!]:\n  fixes n'\n  assumes \"\\<forall>n\\<ge>n'. \\<gamma> t n\"\n  shows \"(\\<box>\\<^sub>c(\\<gamma>)) t n'\"", "lemma globE[elim!]:\n  fixes n n'\n  assumes \"(\\<box>\\<^sub>c(\\<gamma>)) t n\" and \"n'\\<ge>n\"\n  shows \"\\<gamma> t n'\"", "lemma untilI[intro]:\n  fixes n\n  assumes \"\\<exists>n''\\<ge>n. \\<gamma> t n'' \\<and> (\\<forall>n'\\<ge>n. n'<n'' \\<longrightarrow> \\<gamma>' t n')\"\n  shows \"(\\<gamma>' \\<UU>\\<^sub>c \\<gamma>) t n\"", "lemma untilE[elim]:\n  fixes n\n  assumes \"(\\<gamma>' \\<UU>\\<^sub>c \\<gamma>) t n\"\n  shows \"\\<exists>n''\\<ge>n. \\<gamma> t n'' \\<and> (\\<forall>n'\\<ge>n. n'<n'' \\<longrightarrow> \\<gamma>' t n')\"", "lemma wUntilI[intro]:\n  fixes n\n  assumes \"(\\<exists>n''\\<ge>n. \\<gamma> t n'' \\<and> (\\<forall>n'\\<ge>n. n'<n'' \\<longrightarrow> \\<gamma>' t n')) \\<or> (\\<forall>n'\\<ge>n. \\<gamma>' t n')\"\n  shows \"(\\<gamma>' \\<WW>\\<^sub>c \\<gamma>) t n\"", "lemma wUntilE[elim]:\n  fixes n n'\n  assumes \"(\\<gamma>' \\<WW>\\<^sub>c \\<gamma>) t n\"\n  shows \"(\\<exists>n''\\<ge>n. \\<gamma> t n'' \\<and> (\\<forall>n'\\<ge>n. n'<n'' \\<longrightarrow> \\<gamma>' t n')) \\<or> (\\<forall>n'\\<ge>n. \\<gamma>' t n')\"", "lemma wUntil_Glob:\n  assumes \"(\\<gamma>' \\<WW>\\<^sub>c \\<gamma>) t n\"\n    and \"(\\<box>\\<^sub>c(\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'')) t n\"\n  shows \"(\\<gamma>'' \\<WW>\\<^sub>c \\<gamma>) t n\"", "lemma nact_active:\n  fixes t::\"nat \\<Rightarrow> cnf\"\n    and n::nat\n    and n''\n    and id\n  assumes \"\\<parallel>id\\<parallel>\\<^bsub>t n\\<^esub>\"\n    and \"n'' \\<ge> n\"    \n    and \"\\<not> (\\<exists>n'\\<ge>n. n' < n'' \\<and> \\<parallel>id\\<parallel>\\<^bsub>t n'\\<^esub>)\"    \n  shows \"n=n''\"", "lemma nact_exists:\n  fixes t::\"nat \\<Rightarrow> cnf\"\n  assumes \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n  shows \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and> (\\<nexists>k. n\\<le>k \\<and> k<i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\"", "lemma lActive_least:\n  assumes \"\\<exists>i\\<ge>n. i < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n  shows \"\\<exists>i\\<ge>n. (i < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub> \\<and> (\\<nexists>k. n\\<le>k \\<and> k<i \\<and> k<llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>))\"", "lemma proj_lnil [simp,intro]:\n  \"\\<pi>\\<^bsub>c\\<^esub>([]\\<^sub>l) = []\\<^sub>l\"", "lemma proj_lnull [simp]:\n  \"\\<pi>\\<^bsub>c\\<^esub>(t) = []\\<^sub>l \\<longleftrightarrow> (\\<forall>k \\<in> lset t. \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>)\"", "lemma proj_LCons [simp]:\n  \"\\<pi>\\<^bsub>i\\<^esub>(x #\\<^sub>l xs) = (if \\<parallel>i\\<parallel>\\<^bsub>x\\<^esub> then (\\<sigma>\\<^bsub>i\\<^esub>(x)) #\\<^sub>l (\\<pi>\\<^bsub>i\\<^esub>(xs)) else \\<pi>\\<^bsub>i\\<^esub>(xs))\"", "lemma proj_llength[simp]:\n  \"llength (\\<pi>\\<^bsub>c\\<^esub>(t)) \\<le> llength t\"", "lemma proj_ltake:\n  assumes \"\\<forall>(n'::nat)\\<le>llength t. n'\\<ge>n \\<longrightarrow> (\\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n'\\<^esub>)\"\n  shows \"\\<pi>\\<^bsub>c\\<^esub>(t) = \\<pi>\\<^bsub>c\\<^esub>(ltake n t)\"", "lemma proj_finite_bound:\n  assumes \"lfinite (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))\"\n  shows \"\\<exists>n. \\<forall>n'>n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\"", "lemma proj_mcont:\n  shows \"mcont lSup lprefix lSup lprefix (proj c)\"", "lemma proj_mcont2mcont:\n  assumes \"mcont lub ord lSup lprefix f\"\n  shows \"mcont lub ord lSup lprefix (\\<lambda>x. \\<pi>\\<^bsub>c\\<^esub>(f x))\"", "lemma proj_mono_prefix[simp]:\n  assumes \"lprefix t t'\"\n  shows \"lprefix (\\<pi>\\<^bsub>c\\<^esub>(t)) (\\<pi>\\<^bsub>c\\<^esub>(t'))\"", "lemma proj_finite[simp]:\n  assumes \"lfinite t\"\n  shows \"lfinite (\\<pi>\\<^bsub>c\\<^esub>(t))\"", "lemma proj_finite2:\n  assumes \"\\<forall>(n'::nat)\\<le>llength t. n'\\<ge>n \\<longrightarrow> (\\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n'\\<^esub>)\"\n  shows \"lfinite (\\<pi>\\<^bsub>c\\<^esub>(t))\"", "lemma proj_append_lfinite[simp]:\n  fixes t t'\n  assumes \"lfinite t\"\n  shows \"\\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') = (\\<pi>\\<^bsub>c\\<^esub>(t)) @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>(t'))\" (is \"?lhs=?rhs\")", "lemma proj_one:\n  assumes \"\\<exists>i. i < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n  shows \"llength (\\<pi>\\<^bsub>c\\<^esub>(t)) \\<ge> 1\"", "lemma proj_not_active[simp]:\n  assumes \"enat n < llength t\"\n    and \"\\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n\\<^esub>\"\n  shows \"\\<pi>\\<^bsub>c\\<^esub>(ltake (Suc n) t) = \\<pi>\\<^bsub>c\\<^esub>(ltake n t)\" (is \"?lhs = ?rhs\")", "lemma proj_not_active_same:\n  assumes \"enat n \\<le> (n'::enat)\"\n      and \"\\<not> lfinite t \\<or> n'-1 < llength t\"\n      and \"\\<nexists>k. k\\<ge>n \\<and> k<n' \\<and> k < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\"\n    shows \"\\<pi>\\<^bsub>c\\<^esub>(ltake n' t) = \\<pi>\\<^bsub>c\\<^esub>(ltake n t)\"", "lemma proj_active[simp]:\n  assumes \"enat i < llength t\" \"\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n  shows \"\\<pi>\\<^bsub>c\\<^esub>(ltake (Suc i) t) = (\\<pi>\\<^bsub>c\\<^esub>(ltake i t)) @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l []\\<^sub>l)\" (is \"?lhs = ?rhs\")", "lemma proj_active_append:\n  assumes a1: \"(n::nat) \\<le> i\"\n      and a2: \"enat i < (n'::enat)\"\n      and a3: \"\\<not> lfinite t \\<or> n'-1 < llength t\"\n      and a4: \"\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n      and \"\\<forall>i'. (n \\<le> i' \\<and> enat i'<n' \\<and> i' < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub>) \\<longrightarrow> (i' = i)\"\n    shows \"\\<pi>\\<^bsub>c\\<^esub>(ltake n' t) = (\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l []\\<^sub>l)\" (is \"?lhs = ?rhs\")", "lemma proj_same_not_active:\n  assumes \"n \\<le> n'\"\n    and \"enat (n'-1) < llength t\"\n    and \"\\<pi>\\<^bsub>c\\<^esub>(ltake n' t) = \\<pi>\\<^bsub>c\\<^esub>(ltake n t)\"\n  shows \"\\<nexists>k. k\\<ge>n \\<and> k<n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\"", "lemma proj_not_same_active:\n  assumes \"enat n \\<le> (n'::enat)\"\n    and \"(\\<not> lfinite t) \\<or> n'-1 < llength t\"\n    and \"\\<not>(\\<pi>\\<^bsub>c\\<^esub>(ltake n' t) = \\<pi>\\<^bsub>c\\<^esub>(ltake n t))\"\n  shows \"\\<exists>k. k\\<ge>n \\<and> k<n' \\<and> enat k < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\"", "lemma nAct_0[simp]:\n  \"\\<langle>c #\\<^bsub>0\\<^esub> t\\<rangle> = 0\"", "lemma nAct_NIL[simp]:\n  \"\\<langle>c #\\<^bsub>n\\<^esub> []\\<^sub>l\\<rangle> = 0\"", "lemma nAct_Null:\n  assumes \"llength t \\<ge> n\"\n      and \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> = 0\"\n    shows \"\\<forall>i<n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"", "lemma nAct_ge_one[simp]:\n  assumes \"llength t \\<ge> n\"\n      and \"i < n\"\n      and \"\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n    shows \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> \\<ge> enat 1\"", "lemma nAct_finite[simp]:\n  assumes \"n \\<noteq> \\<infinity>\"\n  shows \"\\<exists>n'. \\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> = enat n'\"", "lemma nAct_enat_the_nat[simp]:\n  assumes \"n \\<noteq> \\<infinity>\"\n  shows \"enat (the_enat (\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle>)) = \\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle>\"", "lemma nAct_mcont:\n  shows \"mcont lSup lprefix Sup (\\<le>) (nAct c n)\"", "lemma nAct_mono:\n  assumes \"n \\<le> n'\"\n    shows \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> \\<le> \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\"", "lemma nAct_strict_mono_back:\n  assumes \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> < \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\"\n    shows \"n < n'\"", "lemma nAct_not_active[simp]:\n  fixes n::nat\n    and n'::nat\n    and t::\"(cnf llist)\"\n    and c::'id\n  assumes \"enat i < llength t\"\n    and \"\\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n  shows \"\\<langle>c #\\<^bsub>Suc i\\<^esub> t\\<rangle> = \\<langle>c #\\<^bsub>i\\<^esub> t\\<rangle>\"", "lemma nAct_not_active_same:\n  assumes \"enat n \\<le> (n'::enat)\"\n      and \"n'-1 < llength t\"\n      and \"\\<nexists>k. enat k\\<ge>n \\<and> k<n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\"\n    shows \"\\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle> = \\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle>\"", "lemma nAct_active[simp]:\n  fixes n::nat\n    and n'::nat\n    and t::\"(cnf llist)\"\n    and c::'id\n  assumes \"enat i < llength t\"\n    and \"\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n  shows \"\\<langle>c #\\<^bsub>Suc i\\<^esub> t\\<rangle> = eSuc (\\<langle>c #\\<^bsub>i\\<^esub> t\\<rangle>)\"", "lemma nAct_active_suc:\n  fixes n::nat\n    and n'::enat\n    and t::\"(cnf llist)\"\n    and c::'id\n  assumes \"\\<not> lfinite t \\<or> n'-1 < llength t\"\n    and \"n \\<le> i\"\n    and \"enat i < n'\"\n    and \"\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n    and \"\\<forall>i'. (n \\<le> i' \\<and> enat i'<n' \\<and> i' < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub>) \\<longrightarrow> (i' = i)\"\n  shows \"\\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle> = eSuc (\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle>)\"", "lemma nAct_less:\n  assumes \"enat k < llength t\"\n    and \"n \\<le> k\"\n    and \"k < (n'::enat)\"\n    and \"\\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\"\n  shows \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> < \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\"", "lemma nAct_less_active:\n  assumes \"n' - 1 < llength t\"\n      and \"\\<langle>c #\\<^bsub>enat n\\<^esub> t\\<rangle> < \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\"\n  shows \"\\<exists>i\\<ge>n. i<n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"", "lemma nAct_same_not_active:\n  assumes \"\\<langle>c #\\<^bsub>n'\\<^esub> inf_llist t\\<rangle> = \\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>\"\n  shows \"\\<forall>k\\<ge>n. k<n' \\<longrightarrow> \\<not> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>\"", "lemma nAct_not_same_active:\n  assumes \"\\<langle>c #\\<^bsub>enat n\\<^esub> t\\<rangle> < \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\"\n    and \"\\<not> lfinite t \\<or> n' - 1 < llength t\"\n  shows \"\\<exists>(i::nat)\\<ge>n. enat i< n' \\<and> i<llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"", "lemma nAct_less_llength_active:\n  assumes \"x < llength (\\<pi>\\<^bsub>c\\<^esub>(t))\"\n    and \"enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub> t\\<rangle>\"\n  shows \"\\<exists>(i::nat)\\<ge>n'. i<llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"", "lemma nAct_exists:\n  assumes \"x < llength (\\<pi>\\<^bsub>c\\<^esub>(t))\"\n  shows \"\\<exists>(n'::nat). enat x = \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\"", "lemma nAct_le_proj:\n  \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>(t))\"", "lemma proj_nAct:\n  assumes \"(enat n < llength t)\"\n  shows \"\\<pi>\\<^bsub>c\\<^esub>(ltake n t) = ltake (\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle>) (\\<pi>\\<^bsub>c\\<^esub>(t))\" (is \"?lhs = ?rhs\")", "lemma proj_active_nth:\n  assumes \"enat (Suc i) < llength t\" \"\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n  shows \"lnth (\\<pi>\\<^bsub>c\\<^esub>(t)) (the_enat (\\<langle>c #\\<^bsub>i\\<^esub> t\\<rangle>)) = \\<sigma>\\<^bsub>c\\<^esub>(lnth t i)\"", "lemma nAct_eq_proj:\n  assumes \"\\<not>(\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\"\n  shows \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> = llength (\\<pi>\\<^bsub>c\\<^esub>(t))\" (is \"?lhs = ?rhs\")", "lemma nAct_llength_proj:\n  assumes \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n  shows \"llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)) \\<ge> eSuc (\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>)\"", "lemma lNact0[simp]:\n  \"\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>0\\<^esub> = 0\"", "lemma lNact_least:\n  assumes \"n=n' \\<or> n'<n \\<and> (\\<nexists>k. k\\<ge>n' \\<and> k<n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\"\n  shows \"\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\"", "lemma lNAct_ex: \"\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>=n \\<or> \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub><n \\<and> (\\<nexists>k. k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and> k<n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\"", "lemma lNact_notActive:\n  fixes c t n k\n  assumes \"k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\"\n    and \"k<n\"\n  shows \"\\<not>\\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>\"", "lemma lNactGe:\n  fixes c t n n'\n  assumes \"n' \\<ge> \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\" \n    and \"\\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\"\n  shows \"n' \\<ge> n\"", "lemma lNactLe[simp]:\n  fixes n n'\n  shows \"\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n\"", "lemma lNactLe_nact:\n  fixes n n'\n  assumes \"n'=n \\<or> (n'<n \\<and> (\\<nexists>k. k\\<ge>n' \\<and> k<n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\"\n  shows \"\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\"", "lemma lNact_active:\n  fixes cid t n\n  assumes \"\\<forall>k<n. \\<parallel>cid\\<parallel>\\<^bsub>t k\\<^esub>\"\n  shows \"\\<langle>cid \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = n\"", "lemma nAct_mono_back:\n  fixes c t and n and n'\n  assumes \"\\<langle>c #\\<^bsub>n'\\<^esub> inf_llist t\\<rangle> \\<ge> \\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>\"\n  shows \"n'\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\"", "lemma nAct_mono_lNact:\n  assumes \"\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\"\n  shows \"\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle> \\<le> \\<langle>c #\\<^bsub>n'\\<^esub> inf_llist t\\<rangle>\"", "lemma nxtActI:\n  fixes n::nat\n    and t::\"nat \\<Rightarrow> cnf\"\n    and c::'id\n  assumes \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n  shows \"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<ge> n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> \\<and> (\\<nexists>k. k\\<ge>n \\<and> k<\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\"", "lemma nxtActLe:\n  fixes n n'\n  assumes \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n  shows \"n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\"", "lemma nxtAct_eq:\n  assumes \"n'\\<ge>n\"\n    and \"\\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\"\n    and \"\\<forall>n''\\<ge>n. n''<n' \\<longrightarrow> \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n''\\<^esub>\"\n  shows \"n' = \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\"", "lemma nxtAct_active:\n  fixes i::nat\n    and t::\"nat \\<Rightarrow> cnf\"\n    and c::'id\n  assumes \"\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n  shows \"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>i\\<^esub> = i\"", "lemma nxtActive_no_active:\n  assumes \"\\<exists>!i. i\\<ge>n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n  shows \"\\<not> (\\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>. \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)\"", "lemma nxt_geq_lNact[simp]:\n  assumes \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n  shows \"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\"", "lemma active_geq_nxtAct:\n  assumes \"\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"the_enat (\\<langle>c #\\<^bsub>i\\<^esub> inf_llist t\\<rangle>)\\<ge>the_enat (\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>)\"\n  shows \"i\\<ge>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\"", "lemma nAct_same:\n  assumes \"\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\" and \"n' \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\"\n  shows \"the_enat (\\<langle>c #\\<^bsub>enat n'\\<^esub> inf_llist t\\<rangle>) = the_enat (\\<langle>c #\\<^bsub>enat n\\<^esub> inf_llist t\\<rangle>)\"", "lemma nAct_mono_nxtAct:\n  assumes \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\"\n  shows \"\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle> \\<le> \\<langle>c #\\<^bsub>n'\\<^esub> inf_llist t\\<rangle>\"", "lemma latestActEx:\n  assumes \"\\<exists>n'<n. \\<parallel>nid\\<parallel>\\<^bsub>t n'\\<^esub>\"\n  shows \"\\<exists>n'. latestAct_cond nid t n n' \\<and> (\\<forall>n''. latestAct_cond nid t n n'' \\<longrightarrow> n'' \\<le> n')\"", "lemma latestAct_prop:\n  assumes \"\\<exists>n'<n. \\<parallel>nid\\<parallel>\\<^bsub>t n'\\<^esub>\"\n  shows \"\\<parallel>nid\\<parallel>\\<^bsub>t (latestAct nid t n)\\<^esub>\" and \"latestAct nid t n<n\"", "lemma latestAct_less:\n  assumes \"latestAct_cond nid t n n'\"\n  shows \"n' \\<le> \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\"", "lemma latestActNxt:\n  assumes \"\\<exists>n'<n. \\<parallel>nid\\<parallel>\\<^bsub>t n'\\<^esub>\"\n  shows \"\\<langle>nid \\<rightarrow> t\\<rangle>\\<^bsub>\\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>=\\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\"", "lemma latestActNxtAct:\n  assumes \"\\<exists>n'\\<ge>n. \\<parallel>tid\\<parallel>\\<^bsub>t n'\\<^esub>\"\n    and \"\\<exists>n'<n. \\<parallel>tid\\<parallel>\\<^bsub>t n'\\<^esub>\"\n  shows \"\\<langle>tid \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> > \\<langle>tid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\"", "lemma latestActless:\n  assumes \"\\<exists>n'\\<ge>n\\<^sub>s. n'<n \\<and> \\<parallel>nid\\<parallel>\\<^bsub>t n'\\<^esub>\"\n  shows \"\\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<ge>n\\<^sub>s\"", "lemma latestActEq:\n  fixes nid::'id\n  assumes \"\\<parallel>nid\\<parallel>\\<^bsub>t n'\\<^esub>\" and \"\\<not>(\\<exists>n''>n'. n''<n \\<and> \\<parallel>nid\\<parallel>\\<^bsub>t n'\\<^esub>)\" and \"n'<n\"\n  shows \"\\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = n'\"", "lemma lActive_active:\n  assumes \"\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"\\<forall>n' > n. \\<not> (\\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>)\"\n  shows \"\\<parallel>c\\<parallel>\\<^bsub>t (\\<langle>c \\<and> t\\<rangle>)\\<^esub>\"", "lemma lActive_less:\n  assumes \"\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"\\<forall>n' > n. \\<not> (\\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>)\"\n  shows \"\\<langle>c \\<and> t\\<rangle> \\<le> n\"", "lemma lActive_greatest:\n  assumes \"\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"\\<forall>n' > n. \\<not> (\\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>)\"\n  shows \"i \\<le> \\<langle>c \\<and> t\\<rangle>\"", "lemma lActive_greater_active:\n  assumes \"n > \\<langle>c \\<and> t\\<rangle>\"\n    and \"\\<forall>n'' > n'. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n''\\<^esub>\"\n  shows \"\\<not> \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>\"", "lemma lActive_greater_active_all:\n  assumes \"\\<forall>n'' > n'. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n''\\<^esub>\"\n  shows \"\\<not>(\\<exists>n > \\<langle>c \\<and> t\\<rangle>. \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>)\"", "lemma lActive_equality:\n  assumes \"\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"(\\<And>x. \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub> \\<Longrightarrow> x \\<le> i)\"\n  shows \"\\<langle>c \\<and> t\\<rangle> = i\"", "lemma nxtActive_lactive:\n  assumes \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"\\<not> (\\<exists>i>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\"\n  shows \"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>=\\<langle>c \\<and> t\\<rangle>\"", "lemma cnf2bhv_mono:\n  assumes \"n'\\<ge>n\"\n  shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n') \\<ge> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n)\"", "lemma cnf2bhv_mono_strict:\n  assumes \"n\\<ge>\\<langle>c \\<and> t\\<rangle>\" and \"n'>n\"\n  shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n') > \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n)\"", "lemma cnf2bhv_ge_llength[simp]:\n  assumes \"n\\<ge>\\<langle>c \\<and> t\\<rangle>\"\n  shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n) \\<ge> the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\"", "lemma cnf2bhv_greater_llength[simp]:\n  assumes \"n>\\<langle>c \\<and> t\\<rangle>\"\n  shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n) > the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\"", "lemma cnf2bhv_suc[simp]:\n  assumes \"n\\<ge>\\<langle>c \\<and> t\\<rangle>\"\n  shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(Suc n) = Suc (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n))\"", "lemma cnf2bhv_lActive[simp]:\n  shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<langle>c \\<and> t\\<rangle>) = the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\"", "lemma cnf2bhv_lnth_lappend:\n  assumes act: \"\\<exists>i. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and nAct: \"\\<nexists>i. i\\<ge>n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n  shows \"lnth ((\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)) @\\<^sub>l (inf_llist t')) (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n)) = lnth (inf_llist t') (n - \\<langle>c \\<and> t\\<rangle> - 1)\"\n    (is \"?lhs = ?rhs\")", "lemma nAct_cnf2proj_Suc_dist:\n  assumes \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"\\<not>(\\<exists>i>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\"\n  shows \"Suc (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>)=\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\"", "lemma bhv2cnf_mono:\n  assumes \"n'\\<ge>n\"\n  shows \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n') \\<ge> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n)\"", "lemma bhv2cnf_mono_strict:\n  assumes \"n'>n\"\n    and \"n \\<ge> the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\"\n  shows \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n') > \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n)\"", "lemma bhv2cnf_ge_lActive[simp]:\n  shows \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n) \\<ge> \\<langle>c \\<and> t\\<rangle>\"", "lemma bhv2cnf_greater_lActive[simp]:\n  assumes \"n>the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\"\n  shows \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n) > \\<langle>c \\<and> t\\<rangle>\"", "lemma bhv2cnf_lActive[simp]:\n  assumes \"\\<exists>i. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"lfinite (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))\"\n  shows \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)))) = Suc (\\<langle>c \\<and> t\\<rangle>)\"", "lemma bhv2cnf_cnf2bhv:\n  assumes \"n \\<ge> \\<langle>c \\<and> t\\<rangle>\"\n  shows \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n)) = n\" (is \"?lhs = ?rhs\")", "lemma cnf2bhv_bhv2cnf:\n  assumes \"n \\<ge> the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\"\n  shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n)) = n\" (is \"?lhs = ?rhs\")", "lemma p2c_mono_c2p:\n  assumes \"n \\<ge> \\<langle>c \\<and> t\\<rangle>\"\n      and \"n' \\<ge> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n)\"\n    shows \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n') \\<ge> n\"", "lemma p2c_mono_c2p_strict:\n  assumes \"n \\<ge> \\<langle>c \\<and> t\\<rangle>\"\n      and \"n<\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n')\"\n  shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n) < n'\"", "lemma c2p_mono_p2c:\n  assumes \"n \\<ge> the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\"\n      and \"n' \\<ge> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n)\"\n    shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n') \\<ge> n\"", "lemma c2p_mono_p2c_strict:\n  assumes \"n \\<ge> the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\"\n      and \"n<\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n')\"\n  shows \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n) < n'\""], "translations": [["", "lemma boundedGreatest:\n  assumes \"P (i::nat)\"\n    and \"\\<forall>n' > n. \\<not> P n'\"\n  shows \"\\<exists>i'\\<le>n. P i' \\<and> (\\<forall>n'. P n' \\<longrightarrow> n'\\<le>i')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i'\\<le>n.\n       P i' \\<and> (\\<forall>n'. P n' \\<longrightarrow> n' \\<le> i')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i'\\<le>n.\n       P i' \\<and> (\\<forall>n'. P n' \\<longrightarrow> n' \\<le> i')", "have \"P (i::nat) \\<Longrightarrow> n\\<ge>i \\<Longrightarrow> \\<forall>n' > n. \\<not> P n' \\<Longrightarrow> (\\<exists>i'\\<le>n. P i' \\<and> (\\<forall>n'\\<le>n. P n' \\<longrightarrow> n'\\<le>i'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>n.\n                             P n' \\<longrightarrow> n' \\<le> i')", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P i; i \\<le> 0; \\<forall>n'>0. \\<not> P n'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>0.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>0.\n                             P n' \\<longrightarrow> n' \\<le> i')\n 2. \\<And>n.\n       \\<lbrakk>\\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n                \\<Longrightarrow> \\<exists>i'\\<le>n.\n                                     P i' \\<and>\n                                     (\\<forall>n'\\<le>n.\n   P n' \\<longrightarrow> n' \\<le> i');\n        P i; i \\<le> Suc n; \\<forall>n'>Suc n. \\<not> P n'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                            P i' \\<and>\n                            (\\<forall>n'\\<le>Suc n.\n                                P n' \\<longrightarrow> n' \\<le> i')", "case 0"], ["proof (state)\nthis:\n  P i\n  i \\<le> 0\n  \\<forall>n'>0. \\<not> P n'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P i; i \\<le> 0; \\<forall>n'>0. \\<not> P n'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>0.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>0.\n                             P n' \\<longrightarrow> n' \\<le> i')\n 2. \\<And>n.\n       \\<lbrakk>\\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n                \\<Longrightarrow> \\<exists>i'\\<le>n.\n                                     P i' \\<and>\n                                     (\\<forall>n'\\<le>n.\n   P n' \\<longrightarrow> n' \\<le> i');\n        P i; i \\<le> Suc n; \\<forall>n'>Suc n. \\<not> P n'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                            P i' \\<and>\n                            (\\<forall>n'\\<le>Suc n.\n                                P n' \\<longrightarrow> n' \\<le> i')", "then"], ["proof (chain)\npicking this:\n  P i\n  i \\<le> 0\n  \\<forall>n'>0. \\<not> P n'", "show ?case"], ["proof (prove)\nusing this:\n  P i\n  i \\<le> 0\n  \\<forall>n'>0. \\<not> P n'\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<le>0.\n       P i' \\<and> (\\<forall>n'\\<le>0. P n' \\<longrightarrow> n' \\<le> i')", "by auto"], ["proof (state)\nthis:\n  \\<exists>i'\\<le>0.\n     P i' \\<and> (\\<forall>n'\\<le>0. P n' \\<longrightarrow> n' \\<le> i')\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n                \\<Longrightarrow> \\<exists>i'\\<le>n.\n                                     P i' \\<and>\n                                     (\\<forall>n'\\<le>n.\n   P n' \\<longrightarrow> n' \\<le> i');\n        P i; i \\<le> Suc n; \\<forall>n'>Suc n. \\<not> P n'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                            P i' \\<and>\n                            (\\<forall>n'\\<le>Suc n.\n                                P n' \\<longrightarrow> n' \\<le> i')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n                \\<Longrightarrow> \\<exists>i'\\<le>n.\n                                     P i' \\<and>\n                                     (\\<forall>n'\\<le>n.\n   P n' \\<longrightarrow> n' \\<le> i');\n        P i; i \\<le> Suc n; \\<forall>n'>Suc n. \\<not> P n'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                            P i' \\<and>\n                            (\\<forall>n'\\<le>Suc n.\n                                P n' \\<longrightarrow> n' \\<le> i')", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i'\\<le>n.\n                       P i' \\<and>\n                       (\\<forall>n'\\<le>n.\n                           P n' \\<longrightarrow> n' \\<le> i')\n  P i\n  i \\<le> Suc n\n  \\<forall>n'>Suc n. \\<not> P n'\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n                \\<Longrightarrow> \\<exists>i'\\<le>n.\n                                     P i' \\<and>\n                                     (\\<forall>n'\\<le>n.\n   P n' \\<longrightarrow> n' \\<le> i');\n        P i; i \\<le> Suc n; \\<forall>n'>Suc n. \\<not> P n'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                            P i' \\<and>\n                            (\\<forall>n'\\<le>Suc n.\n                                P n' \\<longrightarrow> n' \\<le> i')", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i'\\<le>n.\n                       P i' \\<and>\n                       (\\<forall>n'\\<le>n.\n                           P n' \\<longrightarrow> n' \\<le> i')\n  P i\n  i \\<le> Suc n\n  \\<forall>n'>Suc n. \\<not> P n'", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i'\\<le>n.\n                       P i' \\<and>\n                       (\\<forall>n'\\<le>n.\n                           P n' \\<longrightarrow> n' \\<le> i')\n  P i\n  i \\<le> Suc n\n  \\<forall>n'>Suc n. \\<not> P n'\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<le>Suc n.\n       P i' \\<and>\n       (\\<forall>n'\\<le>Suc n. P n' \\<longrightarrow> n' \\<le> i')", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n             \\<Longrightarrow> \\<exists>i'\\<le>n.\n                                  P i' \\<and>\n                                  (\\<forall>n'\\<le>n.\nP n' \\<longrightarrow> n' \\<le> i');\n     P i; i \\<le> Suc n; \\<forall>n'>Suc n. \\<not> P n'; ?P4\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')\n 2. \\<lbrakk>\\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n             \\<Longrightarrow> \\<exists>i'\\<le>n.\n                                  P i' \\<and>\n                                  (\\<forall>n'\\<le>n.\nP n' \\<longrightarrow> n' \\<le> i');\n     P i; i \\<le> Suc n; \\<forall>n'>Suc n. \\<not> P n'; \\<not> ?P4\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')", "assume \"i = Suc n\""], ["proof (state)\nthis:\n  i = Suc n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n             \\<Longrightarrow> \\<exists>i'\\<le>n.\n                                  P i' \\<and>\n                                  (\\<forall>n'\\<le>n.\nP n' \\<longrightarrow> n' \\<le> i');\n     P i; i \\<le> Suc n; \\<forall>n'>Suc n. \\<not> P n'; ?P4\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')\n 2. \\<lbrakk>\\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n             \\<Longrightarrow> \\<exists>i'\\<le>n.\n                                  P i' \\<and>\n                                  (\\<forall>n'\\<le>n.\nP n' \\<longrightarrow> n' \\<le> i');\n     P i; i \\<le> Suc n; \\<forall>n'>Suc n. \\<not> P n'; \\<not> ?P4\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')", "then"], ["proof (chain)\npicking this:\n  i = Suc n", "show ?thesis"], ["proof (prove)\nusing this:\n  i = Suc n\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<le>Suc n.\n       P i' \\<and>\n       (\\<forall>n'\\<le>Suc n. P n' \\<longrightarrow> n' \\<le> i')", "using Suc.prems"], ["proof (prove)\nusing this:\n  i = Suc n\n  P i\n  i \\<le> Suc n\n  \\<forall>n'>Suc n. \\<not> P n'\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<le>Suc n.\n       P i' \\<and>\n       (\\<forall>n'\\<le>Suc n. P n' \\<longrightarrow> n' \\<le> i')", "by auto"], ["proof (state)\nthis:\n  \\<exists>i'\\<le>Suc n.\n     P i' \\<and> (\\<forall>n'\\<le>Suc n. P n' \\<longrightarrow> n' \\<le> i')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n             \\<Longrightarrow> \\<exists>i'\\<le>n.\n                                  P i' \\<and>\n                                  (\\<forall>n'\\<le>n.\nP n' \\<longrightarrow> n' \\<le> i');\n     P i; i \\<le> Suc n; \\<forall>n'>Suc n. \\<not> P n';\n     i \\<noteq> Suc n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n             \\<Longrightarrow> \\<exists>i'\\<le>n.\n                                  P i' \\<and>\n                                  (\\<forall>n'\\<le>n.\nP n' \\<longrightarrow> n' \\<le> i');\n     P i; i \\<le> Suc n; \\<forall>n'>Suc n. \\<not> P n';\n     i \\<noteq> Suc n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')", "assume \"\\<not>(i = Suc n)\""], ["proof (state)\nthis:\n  i \\<noteq> Suc n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n             \\<Longrightarrow> \\<exists>i'\\<le>n.\n                                  P i' \\<and>\n                                  (\\<forall>n'\\<le>n.\nP n' \\<longrightarrow> n' \\<le> i');\n     P i; i \\<le> Suc n; \\<forall>n'>Suc n. \\<not> P n';\n     i \\<noteq> Suc n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')", "thus ?thesis"], ["proof (prove)\nusing this:\n  i \\<noteq> Suc n\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<le>Suc n.\n       P i' \\<and>\n       (\\<forall>n'\\<le>Suc n. P n' \\<longrightarrow> n' \\<le> i')", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<noteq> Suc n; ?P1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')\n 2. \\<lbrakk>i \\<noteq> Suc n; \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')", "assume \"P (Suc n)\""], ["proof (state)\nthis:\n  P (Suc n)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<noteq> Suc n; ?P1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')\n 2. \\<lbrakk>i \\<noteq> Suc n; \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')", "thus ?thesis"], ["proof (prove)\nusing this:\n  P (Suc n)\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<le>Suc n.\n       P i' \\<and>\n       (\\<forall>n'\\<le>Suc n. P n' \\<longrightarrow> n' \\<le> i')", "by auto"], ["proof (state)\nthis:\n  \\<exists>i'\\<le>Suc n.\n     P i' \\<and> (\\<forall>n'\\<le>Suc n. P n' \\<longrightarrow> n' \\<le> i')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> Suc n; \\<not> P (Suc n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> Suc n; \\<not> P (Suc n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')", "assume \"\\<not> P (Suc n)\""], ["proof (state)\nthis:\n  \\<not> P (Suc n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> Suc n; \\<not> P (Suc n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')", "with Suc.prems"], ["proof (chain)\npicking this:\n  P i\n  i \\<le> Suc n\n  \\<forall>n'>Suc n. \\<not> P n'\n  \\<not> P (Suc n)", "have \"\\<forall>n' > n. \\<not> P n'\""], ["proof (prove)\nusing this:\n  P i\n  i \\<le> Suc n\n  \\<forall>n'>Suc n. \\<not> P n'\n  \\<not> P (Suc n)\n\ngoal (1 subgoal):\n 1. \\<forall>n'>n. \\<not> P n'", "using Suc_lessI"], ["proof (prove)\nusing this:\n  P i\n  i \\<le> Suc n\n  \\<forall>n'>Suc n. \\<not> P n'\n  \\<not> P (Suc n)\n  \\<lbrakk>?m < ?n; Suc ?m \\<noteq> ?n\\<rbrakk>\n  \\<Longrightarrow> Suc ?m < ?n\n\ngoal (1 subgoal):\n 1. \\<forall>n'>n. \\<not> P n'", "by blast"], ["proof (state)\nthis:\n  \\<forall>n'>n. \\<not> P n'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> Suc n; \\<not> P (Suc n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')", "moreover"], ["proof (state)\nthis:\n  \\<forall>n'>n. \\<not> P n'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> Suc n; \\<not> P (Suc n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')", "from \\<open>\\<not>(i = Suc n)\\<close>"], ["proof (chain)\npicking this:\n  i \\<noteq> Suc n", "have \"i \\<le> n\" and \"P i\""], ["proof (prove)\nusing this:\n  i \\<noteq> Suc n\n\ngoal (1 subgoal):\n 1. i \\<le> n &&& P i", "using Suc.prems"], ["proof (prove)\nusing this:\n  i \\<noteq> Suc n\n  P i\n  i \\<le> Suc n\n  \\<forall>n'>Suc n. \\<not> P n'\n\ngoal (1 subgoal):\n 1. i \\<le> n &&& P i", "by auto"], ["proof (state)\nthis:\n  i \\<le> n\n  P i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> Suc n; \\<not> P (Suc n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>n'>n. \\<not> P n'\n  i \\<le> n\n  P i", "obtain i' where \"i'\\<le>n \\<and> P i' \\<and> (\\<forall>n'\\<le>n. P n' \\<longrightarrow> n' \\<le> i')\""], ["proof (prove)\nusing this:\n  \\<forall>n'>n. \\<not> P n'\n  i \\<le> n\n  P i\n\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        i' \\<le> n \\<and>\n        P i' \\<and>\n        (\\<forall>n'\\<le>n.\n            P n' \\<longrightarrow> n' \\<le> i') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using Suc.IH"], ["proof (prove)\nusing this:\n  \\<forall>n'>n. \\<not> P n'\n  i \\<le> n\n  P i\n  \\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i'\\<le>n.\n                       P i' \\<and>\n                       (\\<forall>n'\\<le>n.\n                           P n' \\<longrightarrow> n' \\<le> i')\n\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        i' \\<le> n \\<and>\n        P i' \\<and>\n        (\\<forall>n'\\<le>n.\n            P n' \\<longrightarrow> n' \\<le> i') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i' \\<le> n \\<and>\n  P i' \\<and> (\\<forall>n'\\<le>n. P n' \\<longrightarrow> n' \\<le> i')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> Suc n; \\<not> P (Suc n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')", "hence \"i' \\<le> n\" and \"P i'\" and \"(\\<forall>n'\\<le>n. P n' \\<longrightarrow> n' \\<le> i')\""], ["proof (prove)\nusing this:\n  i' \\<le> n \\<and>\n  P i' \\<and> (\\<forall>n'\\<le>n. P n' \\<longrightarrow> n' \\<le> i')\n\ngoal (1 subgoal):\n 1. i' \\<le> n &&&\n    P i' &&& \\<forall>n'\\<le>n. P n' \\<longrightarrow> n' \\<le> i'", "by auto"], ["proof (state)\nthis:\n  i' \\<le> n\n  P i'\n  \\<forall>n'\\<le>n. P n' \\<longrightarrow> n' \\<le> i'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> Suc n; \\<not> P (Suc n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i'\\<le>Suc n.\n                         P i' \\<and>\n                         (\\<forall>n'\\<le>Suc n.\n                             P n' \\<longrightarrow> n' \\<le> i')", "thus ?thesis"], ["proof (prove)\nusing this:\n  i' \\<le> n\n  P i'\n  \\<forall>n'\\<le>n. P n' \\<longrightarrow> n' \\<le> i'\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<le>Suc n.\n       P i' \\<and>\n       (\\<forall>n'\\<le>Suc n. P n' \\<longrightarrow> n' \\<le> i')", "by (metis le_SucI le_Suc_eq)"], ["proof (state)\nthis:\n  \\<exists>i'\\<le>Suc n.\n     P i' \\<and> (\\<forall>n'\\<le>Suc n. P n' \\<longrightarrow> n' \\<le> i')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i'\\<le>Suc n.\n     P i' \\<and> (\\<forall>n'\\<le>Suc n. P n' \\<longrightarrow> n' \\<le> i')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i'\\<le>Suc n.\n     P i' \\<and> (\\<forall>n'\\<le>Suc n. P n' \\<longrightarrow> n' \\<le> i')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i'\\<le>n.\n                       P i' \\<and>\n                       (\\<forall>n'\\<le>n.\n                           P n' \\<longrightarrow> n' \\<le> i')\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<le>n.\n       P i' \\<and> (\\<forall>n'. P n' \\<longrightarrow> n' \\<le> i')", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i'\\<le>n.\n                       P i' \\<and>\n                       (\\<forall>n'\\<le>n.\n                           P n' \\<longrightarrow> n' \\<le> i')\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<le>n.\n       P i' \\<and> (\\<forall>n'. P n' \\<longrightarrow> n' \\<le> i')", "have \"n\\<ge>i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<le> n", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i \\<le> n \\<Longrightarrow> False", "assume \"\\<not> (n \\<ge> i)\""], ["proof (state)\nthis:\n  \\<not> i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> i \\<le> n \\<Longrightarrow> False", "hence \"n < i\""], ["proof (prove)\nusing this:\n  \\<not> i \\<le> n\n\ngoal (1 subgoal):\n 1. n < i", "by arith"], ["proof (state)\nthis:\n  n < i\n\ngoal (1 subgoal):\n 1. \\<not> i \\<le> n \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  n < i\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  n < i\n  P i\n  \\<forall>n'>n. \\<not> P n'\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<le>n.\n       P i' \\<and> (\\<forall>n'. P n' \\<longrightarrow> n' \\<le> i')", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i'\\<le>n.\n                       P i' \\<and>\n                       (\\<forall>n'\\<le>n.\n                           P n' \\<longrightarrow> n' \\<le> i')\n  i \\<le> n", "obtain i' where \"i'\\<le>n\" and \"P i'\" and \"\\<forall>n'\\<le>n. P n' \\<longrightarrow> n' \\<le> i'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i'\\<le>n.\n                       P i' \\<and>\n                       (\\<forall>n'\\<le>n.\n                           P n' \\<longrightarrow> n' \\<le> i')\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        \\<lbrakk>i' \\<le> n; P i';\n         \\<forall>n'\\<le>n. P n' \\<longrightarrow> n' \\<le> i'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>P i; i \\<le> n; \\<forall>n'>n. \\<not> P n'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i'\\<le>n.\n                       P i' \\<and>\n                       (\\<forall>n'\\<le>n.\n                           P n' \\<longrightarrow> n' \\<le> i')\n  i \\<le> n\n  P i\n  \\<forall>n'>n. \\<not> P n'\n\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        \\<lbrakk>i' \\<le> n; P i';\n         \\<forall>n'\\<le>n. P n' \\<longrightarrow> n' \\<le> i'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i' \\<le> n\n  P i'\n  \\<forall>n'\\<le>n. P n' \\<longrightarrow> n' \\<le> i'\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<le>n.\n       P i' \\<and> (\\<forall>n'. P n' \\<longrightarrow> n' \\<le> i')", "with assms"], ["proof (chain)\npicking this:\n  P i\n  \\<forall>n'>n. \\<not> P n'\n  i' \\<le> n\n  P i'\n  \\<forall>n'\\<le>n. P n' \\<longrightarrow> n' \\<le> i'", "have \"\\<forall>n'. P n' \\<longrightarrow> n' \\<le> i'\""], ["proof (prove)\nusing this:\n  P i\n  \\<forall>n'>n. \\<not> P n'\n  i' \\<le> n\n  P i'\n  \\<forall>n'\\<le>n. P n' \\<longrightarrow> n' \\<le> i'\n\ngoal (1 subgoal):\n 1. \\<forall>n'. P n' \\<longrightarrow> n' \\<le> i'", "using not_le_imp_less"], ["proof (prove)\nusing this:\n  P i\n  \\<forall>n'>n. \\<not> P n'\n  i' \\<le> n\n  P i'\n  \\<forall>n'\\<le>n. P n' \\<longrightarrow> n' \\<le> i'\n  \\<not> ?y \\<le> ?x \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. \\<forall>n'. P n' \\<longrightarrow> n' \\<le> i'", "by blast"], ["proof (state)\nthis:\n  \\<forall>n'. P n' \\<longrightarrow> n' \\<le> i'\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<le>n.\n       P i' \\<and> (\\<forall>n'. P n' \\<longrightarrow> n' \\<le> i')", "with \\<open>i' \\<le> n\\<close> and \\<open>P i'\\<close>"], ["proof (chain)\npicking this:\n  i' \\<le> n\n  P i'\n  \\<forall>n'. P n' \\<longrightarrow> n' \\<le> i'", "show ?thesis"], ["proof (prove)\nusing this:\n  i' \\<le> n\n  P i'\n  \\<forall>n'. P n' \\<longrightarrow> n' \\<le> i'\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<le>n.\n       P i' \\<and> (\\<forall>n'. P n' \\<longrightarrow> n' \\<le> i')", "by auto"], ["proof (state)\nthis:\n  \\<exists>i'\\<le>n.\n     P i' \\<and> (\\<forall>n'. P n' \\<longrightarrow> n' \\<le> i')\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Extended Natural Numbers\""], ["", "text \\<open>\n  We provide one simple property for the \\emph{strict} order over extended natural numbers.\n\\<close>"], ["", "lemma enat_min:\n  assumes \"m \\<ge> enat n'\"\n    and \"enat n < m - enat n'\"\n  shows \"enat n + enat n' < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat n + enat n' < m", "using assms"], ["proof (prove)\nusing this:\n  enat n' \\<le> m\n  enat n < m - enat n'\n\ngoal (1 subgoal):\n 1. enat n + enat n' < m", "by (metis add.commute enat.simps(3) enat_add_mono enat_add_sub_same le_iff_add)"], ["", "subsection \"Lazy Lists\""], ["", "text \\<open>\n  In the following we provide some additional notation and properties for lazy lists.\n\\<close>"], ["", "notation LNil (\"[]\\<^sub>l\")"], ["", "notation LCons (infixl \"#\\<^sub>l\" 60)"], ["", "notation lappend (infixl \"@\\<^sub>l\" 60)"], ["", "lemma lnth_lappend[simp]:\n  assumes \"lfinite xs\"\n    and \"\\<not> lnull ys\"\n  shows \"lnth (xs @\\<^sub>l ys) (the_enat (llength xs)) = lhd ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (xs @\\<^sub>l ys) (the_enat (llength xs)) = lhd ys", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lnth (xs @\\<^sub>l ys) (the_enat (llength xs)) = lhd ys", "from assms"], ["proof (chain)\npicking this:\n  lfinite xs\n  \\<not> lnull ys", "have \"\\<exists>k. llength xs = enat k\""], ["proof (prove)\nusing this:\n  lfinite xs\n  \\<not> lnull ys\n\ngoal (1 subgoal):\n 1. \\<exists>k. llength xs = enat k", "using lfinite_conv_llength_enat"], ["proof (prove)\nusing this:\n  lfinite xs\n  \\<not> lnull ys\n  lfinite ?xs = (\\<exists>n. llength ?xs = enat n)\n\ngoal (1 subgoal):\n 1. \\<exists>k. llength xs = enat k", "by auto"], ["proof (state)\nthis:\n  \\<exists>k. llength xs = enat k\n\ngoal (1 subgoal):\n 1. lnth (xs @\\<^sub>l ys) (the_enat (llength xs)) = lhd ys", "then"], ["proof (chain)\npicking this:\n  \\<exists>k. llength xs = enat k", "obtain k where \"llength xs = enat k\""], ["proof (prove)\nusing this:\n  \\<exists>k. llength xs = enat k\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        llength xs = enat k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  llength xs = enat k\n\ngoal (1 subgoal):\n 1. lnth (xs @\\<^sub>l ys) (the_enat (llength xs)) = lhd ys", "hence \"lnth (xs @\\<^sub>l ys) (the_enat (llength xs)) = lnth ys 0\""], ["proof (prove)\nusing this:\n  llength xs = enat k\n\ngoal (1 subgoal):\n 1. lnth (xs @\\<^sub>l ys) (the_enat (llength xs)) = lnth ys 0", "using lnth_lappend2[of xs k k ys]"], ["proof (prove)\nusing this:\n  llength xs = enat k\n  \\<lbrakk>llength xs = enat k; k \\<le> k\\<rbrakk>\n  \\<Longrightarrow> lnth (xs @\\<^sub>l ys) k = lnth ys (k - k)\n\ngoal (1 subgoal):\n 1. lnth (xs @\\<^sub>l ys) (the_enat (llength xs)) = lnth ys 0", "by simp"], ["proof (state)\nthis:\n  lnth (xs @\\<^sub>l ys) (the_enat (llength xs)) = lnth ys 0\n\ngoal (1 subgoal):\n 1. lnth (xs @\\<^sub>l ys) (the_enat (llength xs)) = lhd ys", "with assms"], ["proof (chain)\npicking this:\n  lfinite xs\n  \\<not> lnull ys\n  lnth (xs @\\<^sub>l ys) (the_enat (llength xs)) = lnth ys 0", "show ?thesis"], ["proof (prove)\nusing this:\n  lfinite xs\n  \\<not> lnull ys\n  lnth (xs @\\<^sub>l ys) (the_enat (llength xs)) = lnth ys 0\n\ngoal (1 subgoal):\n 1. lnth (xs @\\<^sub>l ys) (the_enat (llength xs)) = lhd ys", "using lnth_0_conv_lhd"], ["proof (prove)\nusing this:\n  lfinite xs\n  \\<not> lnull ys\n  lnth (xs @\\<^sub>l ys) (the_enat (llength xs)) = lnth ys 0\n  \\<not> lnull ?xs \\<Longrightarrow> lnth ?xs 0 = lhd ?xs\n\ngoal (1 subgoal):\n 1. lnth (xs @\\<^sub>l ys) (the_enat (llength xs)) = lhd ys", "by simp"], ["proof (state)\nthis:\n  lnth (xs @\\<^sub>l ys) (the_enat (llength xs)) = lhd ys\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lfilter_ltake:\n  assumes \"\\<forall>(n::nat)\\<le>llength xs. n\\<ge>i \\<longrightarrow> (\\<not> P (lnth xs n))\"\n  shows \"lfilter P xs = lfilter P (ltake i xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfilter P xs = lfilter P (ltake (enat i) xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lfilter P xs = lfilter P (ltake (enat i) xs)", "have \"lfilter P xs = lfilter P ((ltake i xs) @\\<^sub>l (ldrop i xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfilter P xs = lfilter P (ltake (enat i) xs @\\<^sub>l ldrop (enat i) xs)", "using lappend_ltake_ldrop[of \"(enat i)\" xs]"], ["proof (prove)\nusing this:\n  ltake (enat i) xs @\\<^sub>l ldrop (enat i) xs = xs\n\ngoal (1 subgoal):\n 1. lfilter P xs = lfilter P (ltake (enat i) xs @\\<^sub>l ldrop (enat i) xs)", "by simp"], ["proof (state)\nthis:\n  lfilter P xs = lfilter P (ltake (enat i) xs @\\<^sub>l ldrop (enat i) xs)\n\ngoal (1 subgoal):\n 1. lfilter P xs = lfilter P (ltake (enat i) xs)", "hence \"lfilter P xs = (lfilter P ((ltake i) xs)) @\\<^sub>l (lfilter P (ldrop i xs))\""], ["proof (prove)\nusing this:\n  lfilter P xs = lfilter P (ltake (enat i) xs @\\<^sub>l ldrop (enat i) xs)\n\ngoal (1 subgoal):\n 1. lfilter P xs =\n    lfilter P (ltake (enat i) xs) @\\<^sub>l lfilter P (ldrop (enat i) xs)", "by simp"], ["proof (state)\nthis:\n  lfilter P xs =\n  lfilter P (ltake (enat i) xs) @\\<^sub>l lfilter P (ldrop (enat i) xs)\n\ngoal (1 subgoal):\n 1. lfilter P xs = lfilter P (ltake (enat i) xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. lfilter P xs = lfilter P (ltake (enat i) xs)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> lfilter P xs = lfilter P (ltake (enat i) xs)\n 2. \\<not> ?P \\<Longrightarrow> lfilter P xs = lfilter P (ltake (enat i) xs)", "assume \"enat i \\<le> llength xs\""], ["proof (state)\nthis:\n  enat i \\<le> llength xs\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> lfilter P xs = lfilter P (ltake (enat i) xs)\n 2. \\<not> ?P \\<Longrightarrow> lfilter P xs = lfilter P (ltake (enat i) xs)", "have \"\\<forall>x<llength (ldrop i xs). \\<not> P (lnth (ldrop i xs) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       enat x < llength (ldrop (enat i) xs) \\<longrightarrow>\n       \\<not> P (lnth (ldrop (enat i) xs) x)", "proof (rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       enat x < llength (ldrop (enat i) xs) \\<longrightarrow>\n       \\<not> P (lnth (ldrop (enat i) xs) x)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       enat x < llength (ldrop (enat i) xs) \\<longrightarrow>\n       \\<not> P (lnth (ldrop (enat i) xs) x)", "show \"enat x < llength (ldrop (enat i) xs) \\<longrightarrow> \\<not> P (lnth (ldrop (enat i) xs) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat x < llength (ldrop (enat i) xs) \\<longrightarrow>\n    \\<not> P (lnth (ldrop (enat i) xs) x)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. enat x < llength (ldrop (enat i) xs) \\<Longrightarrow>\n    \\<not> P (lnth (ldrop (enat i) xs) x)", "assume \"enat x < llength (ldrop (enat i) xs)\""], ["proof (state)\nthis:\n  enat x < llength (ldrop (enat i) xs)\n\ngoal (1 subgoal):\n 1. enat x < llength (ldrop (enat i) xs) \\<Longrightarrow>\n    \\<not> P (lnth (ldrop (enat i) xs) x)", "moreover"], ["proof (state)\nthis:\n  enat x < llength (ldrop (enat i) xs)\n\ngoal (1 subgoal):\n 1. enat x < llength (ldrop (enat i) xs) \\<Longrightarrow>\n    \\<not> P (lnth (ldrop (enat i) xs) x)", "have \"llength (ldrop (enat i) xs) = llength xs - enat i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. llength (ldrop (enat i) xs) = llength xs - enat i", "using llength_ldrop[of \"enat i\"]"], ["proof (prove)\nusing this:\n  llength (ldrop (enat i) ?xs) =\n  (if enat i = \\<infinity> then 0 else llength ?xs - enat i)\n\ngoal (1 subgoal):\n 1. llength (ldrop (enat i) xs) = llength xs - enat i", "by simp"], ["proof (state)\nthis:\n  llength (ldrop (enat i) xs) = llength xs - enat i\n\ngoal (1 subgoal):\n 1. enat x < llength (ldrop (enat i) xs) \\<Longrightarrow>\n    \\<not> P (lnth (ldrop (enat i) xs) x)", "ultimately"], ["proof (chain)\npicking this:\n  enat x < llength (ldrop (enat i) xs)\n  llength (ldrop (enat i) xs) = llength xs - enat i", "have \"enat x < llength xs - enat i\""], ["proof (prove)\nusing this:\n  enat x < llength (ldrop (enat i) xs)\n  llength (ldrop (enat i) xs) = llength xs - enat i\n\ngoal (1 subgoal):\n 1. enat x < llength xs - enat i", "by simp"], ["proof (state)\nthis:\n  enat x < llength xs - enat i\n\ngoal (1 subgoal):\n 1. enat x < llength (ldrop (enat i) xs) \\<Longrightarrow>\n    \\<not> P (lnth (ldrop (enat i) xs) x)", "with \\<open>enat i \\<le> llength xs\\<close>"], ["proof (chain)\npicking this:\n  enat i \\<le> llength xs\n  enat x < llength xs - enat i", "have \"enat x + enat i < llength xs\""], ["proof (prove)\nusing this:\n  enat i \\<le> llength xs\n  enat x < llength xs - enat i\n\ngoal (1 subgoal):\n 1. enat x + enat i < llength xs", "using enat_min[of i \"llength xs\" x]"], ["proof (prove)\nusing this:\n  enat i \\<le> llength xs\n  enat x < llength xs - enat i\n  \\<lbrakk>enat i \\<le> llength xs; enat x < llength xs - enat i\\<rbrakk>\n  \\<Longrightarrow> enat x + enat i < llength xs\n\ngoal (1 subgoal):\n 1. enat x + enat i < llength xs", "by simp"], ["proof (state)\nthis:\n  enat x + enat i < llength xs\n\ngoal (1 subgoal):\n 1. enat x < llength (ldrop (enat i) xs) \\<Longrightarrow>\n    \\<not> P (lnth (ldrop (enat i) xs) x)", "moreover"], ["proof (state)\nthis:\n  enat x + enat i < llength xs\n\ngoal (1 subgoal):\n 1. enat x < llength (ldrop (enat i) xs) \\<Longrightarrow>\n    \\<not> P (lnth (ldrop (enat i) xs) x)", "have \"enat i + enat x = enat x + enat i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat i + enat x = enat x + enat i", "by simp"], ["proof (state)\nthis:\n  enat i + enat x = enat x + enat i\n\ngoal (1 subgoal):\n 1. enat x < llength (ldrop (enat i) xs) \\<Longrightarrow>\n    \\<not> P (lnth (ldrop (enat i) xs) x)", "ultimately"], ["proof (chain)\npicking this:\n  enat x + enat i < llength xs\n  enat i + enat x = enat x + enat i", "have \"enat i + enat x < llength xs\""], ["proof (prove)\nusing this:\n  enat x + enat i < llength xs\n  enat i + enat x = enat x + enat i\n\ngoal (1 subgoal):\n 1. enat i + enat x < llength xs", "by arith"], ["proof (state)\nthis:\n  enat i + enat x < llength xs\n\ngoal (1 subgoal):\n 1. enat x < llength (ldrop (enat i) xs) \\<Longrightarrow>\n    \\<not> P (lnth (ldrop (enat i) xs) x)", "hence \"i + x < llength xs\""], ["proof (prove)\nusing this:\n  enat i + enat x < llength xs\n\ngoal (1 subgoal):\n 1. enat (i + x) < llength xs", "by simp"], ["proof (state)\nthis:\n  enat (i + x) < llength xs\n\ngoal (1 subgoal):\n 1. enat x < llength (ldrop (enat i) xs) \\<Longrightarrow>\n    \\<not> P (lnth (ldrop (enat i) xs) x)", "hence \"lnth (ldrop i xs) x = lnth xs (x + the_enat i)\""], ["proof (prove)\nusing this:\n  enat (i + x) < llength xs\n\ngoal (1 subgoal):\n 1. lnth (ldrop (enat i) xs) x = lnth xs (x + the_enat (enat i))", "using lnth_ldrop[of \"enat i\" \"x\" xs]"], ["proof (prove)\nusing this:\n  enat (i + x) < llength xs\n  enat i + enat x < llength xs \\<Longrightarrow>\n  lnth (ldrop (enat i) xs) x = lnth xs (x + the_enat (enat i))\n\ngoal (1 subgoal):\n 1. lnth (ldrop (enat i) xs) x = lnth xs (x + the_enat (enat i))", "by simp"], ["proof (state)\nthis:\n  lnth (ldrop (enat i) xs) x = lnth xs (x + the_enat (enat i))\n\ngoal (1 subgoal):\n 1. enat x < llength (ldrop (enat i) xs) \\<Longrightarrow>\n    \\<not> P (lnth (ldrop (enat i) xs) x)", "moreover"], ["proof (state)\nthis:\n  lnth (ldrop (enat i) xs) x = lnth xs (x + the_enat (enat i))\n\ngoal (1 subgoal):\n 1. enat x < llength (ldrop (enat i) xs) \\<Longrightarrow>\n    \\<not> P (lnth (ldrop (enat i) xs) x)", "have \"x + i \\<ge> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<le> x + i", "by simp"], ["proof (state)\nthis:\n  i \\<le> x + i\n\ngoal (1 subgoal):\n 1. enat x < llength (ldrop (enat i) xs) \\<Longrightarrow>\n    \\<not> P (lnth (ldrop (enat i) xs) x)", "with assms \\<open>i + x < llength xs\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>n.\n     enat n \\<le> llength xs \\<longrightarrow>\n     i \\<le> n \\<longrightarrow> \\<not> P (lnth xs n)\n  enat (i + x) < llength xs\n  i \\<le> x + i", "have \"\\<not> P (lnth xs (x + the_enat i))\""], ["proof (prove)\nusing this:\n  \\<forall>n.\n     enat n \\<le> llength xs \\<longrightarrow>\n     i \\<le> n \\<longrightarrow> \\<not> P (lnth xs n)\n  enat (i + x) < llength xs\n  i \\<le> x + i\n\ngoal (1 subgoal):\n 1. \\<not> P (lnth xs (x + the_enat (enat i)))", "by (simp add: assms(1) add.commute)"], ["proof (state)\nthis:\n  \\<not> P (lnth xs (x + the_enat (enat i)))\n\ngoal (1 subgoal):\n 1. enat x < llength (ldrop (enat i) xs) \\<Longrightarrow>\n    \\<not> P (lnth (ldrop (enat i) xs) x)", "ultimately"], ["proof (chain)\npicking this:\n  lnth (ldrop (enat i) xs) x = lnth xs (x + the_enat (enat i))\n  \\<not> P (lnth xs (x + the_enat (enat i)))", "show \"\\<not> P (lnth (ldrop i xs) x)\""], ["proof (prove)\nusing this:\n  lnth (ldrop (enat i) xs) x = lnth xs (x + the_enat (enat i))\n  \\<not> P (lnth xs (x + the_enat (enat i)))\n\ngoal (1 subgoal):\n 1. \\<not> P (lnth (ldrop (enat i) xs) x)", "using assms"], ["proof (prove)\nusing this:\n  lnth (ldrop (enat i) xs) x = lnth xs (x + the_enat (enat i))\n  \\<not> P (lnth xs (x + the_enat (enat i)))\n  \\<forall>n.\n     enat n \\<le> llength xs \\<longrightarrow>\n     i \\<le> n \\<longrightarrow> \\<not> P (lnth xs n)\n\ngoal (1 subgoal):\n 1. \\<not> P (lnth (ldrop (enat i) xs) x)", "by simp"], ["proof (state)\nthis:\n  \\<not> P (lnth (ldrop (enat i) xs) x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  enat x < llength (ldrop (enat i) xs) \\<longrightarrow>\n  \\<not> P (lnth (ldrop (enat i) xs) x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x.\n     enat x < llength (ldrop (enat i) xs) \\<longrightarrow>\n     \\<not> P (lnth (ldrop (enat i) xs) x)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> lfilter P xs = lfilter P (ltake (enat i) xs)\n 2. \\<not> ?P \\<Longrightarrow> lfilter P xs = lfilter P (ltake (enat i) xs)", "hence \"lfilter P (ldrop i xs) = []\\<^sub>l\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     enat x < llength (ldrop (enat i) xs) \\<longrightarrow>\n     \\<not> P (lnth (ldrop (enat i) xs) x)\n\ngoal (1 subgoal):\n 1. lfilter P (ldrop (enat i) xs) = []\\<^sub>l", "by (metis diverge_lfilter_LNil in_lset_conv_lnth)"], ["proof (state)\nthis:\n  lfilter P (ldrop (enat i) xs) = []\\<^sub>l\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> lfilter P xs = lfilter P (ltake (enat i) xs)\n 2. \\<not> ?P \\<Longrightarrow> lfilter P xs = lfilter P (ltake (enat i) xs)", "with \\<open>lfilter P xs = (lfilter P ((ltake i) xs)) @\\<^sub>l (lfilter P (ldrop i xs))\\<close>"], ["proof (chain)\npicking this:\n  lfilter P xs =\n  lfilter P (ltake (enat i) xs) @\\<^sub>l lfilter P (ldrop (enat i) xs)\n  lfilter P (ldrop (enat i) xs) = []\\<^sub>l", "show \"lfilter P xs = lfilter P (ltake i xs)\""], ["proof (prove)\nusing this:\n  lfilter P xs =\n  lfilter P (ltake (enat i) xs) @\\<^sub>l lfilter P (ldrop (enat i) xs)\n  lfilter P (ldrop (enat i) xs) = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. lfilter P xs = lfilter P (ltake (enat i) xs)", "by simp"], ["proof (state)\nthis:\n  lfilter P xs = lfilter P (ltake (enat i) xs)\n\ngoal (1 subgoal):\n 1. \\<not> enat i \\<le> llength xs \\<Longrightarrow>\n    lfilter P xs = lfilter P (ltake (enat i) xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> enat i \\<le> llength xs \\<Longrightarrow>\n    lfilter P xs = lfilter P (ltake (enat i) xs)", "assume \"\\<not> enat i \\<le> llength xs\""], ["proof (state)\nthis:\n  \\<not> enat i \\<le> llength xs\n\ngoal (1 subgoal):\n 1. \\<not> enat i \\<le> llength xs \\<Longrightarrow>\n    lfilter P xs = lfilter P (ltake (enat i) xs)", "hence \"enat i > llength xs\""], ["proof (prove)\nusing this:\n  \\<not> enat i \\<le> llength xs\n\ngoal (1 subgoal):\n 1. llength xs < enat i", "by simp"], ["proof (state)\nthis:\n  llength xs < enat i\n\ngoal (1 subgoal):\n 1. \\<not> enat i \\<le> llength xs \\<Longrightarrow>\n    lfilter P xs = lfilter P (ltake (enat i) xs)", "hence \"ldrop i xs = []\\<^sub>l\""], ["proof (prove)\nusing this:\n  llength xs < enat i\n\ngoal (1 subgoal):\n 1. ldrop (enat i) xs = []\\<^sub>l", "by simp"], ["proof (state)\nthis:\n  ldrop (enat i) xs = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. \\<not> enat i \\<le> llength xs \\<Longrightarrow>\n    lfilter P xs = lfilter P (ltake (enat i) xs)", "hence \"lfilter P (ldrop i xs) = []\\<^sub>l\""], ["proof (prove)\nusing this:\n  ldrop (enat i) xs = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. lfilter P (ldrop (enat i) xs) = []\\<^sub>l", "using lfilter_LNil[of P]"], ["proof (prove)\nusing this:\n  ldrop (enat i) xs = []\\<^sub>l\n  lfilter P []\\<^sub>l = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. lfilter P (ldrop (enat i) xs) = []\\<^sub>l", "by arith"], ["proof (state)\nthis:\n  lfilter P (ldrop (enat i) xs) = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. \\<not> enat i \\<le> llength xs \\<Longrightarrow>\n    lfilter P xs = lfilter P (ltake (enat i) xs)", "with \\<open>lfilter P xs = (lfilter P ((ltake i) xs)) @\\<^sub>l (lfilter P (ldrop i xs))\\<close>"], ["proof (chain)\npicking this:\n  lfilter P xs =\n  lfilter P (ltake (enat i) xs) @\\<^sub>l lfilter P (ldrop (enat i) xs)\n  lfilter P (ldrop (enat i) xs) = []\\<^sub>l", "show \"lfilter P xs = lfilter P (ltake i xs)\""], ["proof (prove)\nusing this:\n  lfilter P xs =\n  lfilter P (ltake (enat i) xs) @\\<^sub>l lfilter P (ldrop (enat i) xs)\n  lfilter P (ldrop (enat i) xs) = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. lfilter P xs = lfilter P (ltake (enat i) xs)", "by simp"], ["proof (state)\nthis:\n  lfilter P xs = lfilter P (ltake (enat i) xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lfilter P xs = lfilter P (ltake (enat i) xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lfilter_lfinite[simp]:\n  assumes \"lfinite (lfilter P t)\"\n    and \"\\<not> lfinite t\"\n  shows \"\\<exists>n. \\<forall>n'>n. \\<not> P (lnth t n')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. \\<forall>n'>n. \\<not> P (lnth t n')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n. \\<forall>n'>n. \\<not> P (lnth t n')", "from assms"], ["proof (chain)\npicking this:\n  lfinite (lfilter P t)\n  \\<not> lfinite t", "have \"finite {n. enat n < llength t \\<and> P (lnth t n)}\""], ["proof (prove)\nusing this:\n  lfinite (lfilter P t)\n  \\<not> lfinite t\n\ngoal (1 subgoal):\n 1. finite {n. enat n < llength t \\<and> P (lnth t n)}", "using lfinite_lfilter"], ["proof (prove)\nusing this:\n  lfinite (lfilter P t)\n  \\<not> lfinite t\n  lfinite (lfilter ?P ?xs) =\n  (lfinite ?xs \\<or>\n   finite {n. enat n < llength ?xs \\<and> ?P (lnth ?xs n)})\n\ngoal (1 subgoal):\n 1. finite {n. enat n < llength t \\<and> P (lnth t n)}", "by auto"], ["proof (state)\nthis:\n  finite {n. enat n < llength t \\<and> P (lnth t n)}\n\ngoal (1 subgoal):\n 1. \\<exists>n. \\<forall>n'>n. \\<not> P (lnth t n')", "then"], ["proof (chain)\npicking this:\n  finite {n. enat n < llength t \\<and> P (lnth t n)}", "obtain k\n    where sset: \"{n. enat n < llength t \\<and> P (lnth t n)} \\<subseteq> {n. n<k \\<and> enat n < llength t \\<and> P (lnth t n)}\""], ["proof (prove)\nusing this:\n  finite {n. enat n < llength t \\<and> P (lnth t n)}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        {n. enat n < llength t \\<and> P (lnth t n)}\n        \\<subseteq> {n. n < k \\<and>\n                        enat n < llength t \\<and>\n                        P (lnth t n)} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using finite_nat_bounded[of \"{n. enat n < llength t \\<and> P (lnth t n)}\"]"], ["proof (prove)\nusing this:\n  finite {n. enat n < llength t \\<and> P (lnth t n)}\n  finite {n. enat n < llength t \\<and> P (lnth t n)} \\<Longrightarrow>\n  \\<exists>k. {n. enat n < llength t \\<and> P (lnth t n)} \\<subseteq> {..<k}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        {n. enat n < llength t \\<and> P (lnth t n)}\n        \\<subseteq> {n. n < k \\<and>\n                        enat n < llength t \\<and>\n                        P (lnth t n)} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  {n. enat n < llength t \\<and> P (lnth t n)}\n  \\<subseteq> {n. n < k \\<and> enat n < llength t \\<and> P (lnth t n)}\n\ngoal (1 subgoal):\n 1. \\<exists>n. \\<forall>n'>n. \\<not> P (lnth t n')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. \\<forall>n'>n. \\<not> P (lnth t n')", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>n. \\<forall>n'>n. \\<not> P (lnth t n') \\<Longrightarrow> False", "assume \"\\<not>(\\<exists>n. \\<forall>n'>n. \\<not> P (lnth t n'))\""], ["proof (state)\nthis:\n  \\<nexists>n. \\<forall>n'>n. \\<not> P (lnth t n')\n\ngoal (1 subgoal):\n 1. \\<nexists>n. \\<forall>n'>n. \\<not> P (lnth t n') \\<Longrightarrow> False", "hence \"\\<forall>n. \\<exists>n'>n. P (lnth t n')\""], ["proof (prove)\nusing this:\n  \\<nexists>n. \\<forall>n'>n. \\<not> P (lnth t n')\n\ngoal (1 subgoal):\n 1. \\<forall>n. \\<exists>n'>n. P (lnth t n')", "by simp"], ["proof (state)\nthis:\n  \\<forall>n. \\<exists>n'>n. P (lnth t n')\n\ngoal (1 subgoal):\n 1. \\<nexists>n. \\<forall>n'>n. \\<not> P (lnth t n') \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>n. \\<exists>n'>n. P (lnth t n')", "obtain n' where \"n'>k\" and \"P (lnth t n')\""], ["proof (prove)\nusing this:\n  \\<forall>n. \\<exists>n'>n. P (lnth t n')\n\ngoal (1 subgoal):\n 1. (\\<And>n'.\n        \\<lbrakk>k < n'; P (lnth t n')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k < n'\n  P (lnth t n')\n\ngoal (1 subgoal):\n 1. \\<nexists>n. \\<forall>n'>n. \\<not> P (lnth t n') \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  k < n'\n  P (lnth t n')\n\ngoal (1 subgoal):\n 1. \\<nexists>n. \\<forall>n'>n. \\<not> P (lnth t n') \\<Longrightarrow> False", "from \\<open>\\<not> lfinite t\\<close>"], ["proof (chain)\npicking this:\n  \\<not> lfinite t", "have \"n' < llength t\""], ["proof (prove)\nusing this:\n  \\<not> lfinite t\n\ngoal (1 subgoal):\n 1. enat n' < llength t", "by (simp add: not_lfinite_llength)"], ["proof (state)\nthis:\n  enat n' < llength t\n\ngoal (1 subgoal):\n 1. \\<nexists>n. \\<forall>n'>n. \\<not> P (lnth t n') \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  k < n'\n  P (lnth t n')\n  enat n' < llength t", "have \"n' \\<notin> {n. n<k \\<and> enat n < llength t \\<and> P (lnth t n)}\" and\n      \"n'\\<in>{n. enat n < llength t \\<and> P (lnth t n)}\""], ["proof (prove)\nusing this:\n  k < n'\n  P (lnth t n')\n  enat n' < llength t\n\ngoal (1 subgoal):\n 1. n' \\<notin> {n. n < k \\<and> enat n < llength t \\<and> P (lnth t n)} &&&\n    n' \\<in> {n. enat n < llength t \\<and> P (lnth t n)}", "by auto"], ["proof (state)\nthis:\n  n' \\<notin> {n. n < k \\<and> enat n < llength t \\<and> P (lnth t n)}\n  n' \\<in> {n. enat n < llength t \\<and> P (lnth t n)}\n\ngoal (1 subgoal):\n 1. \\<nexists>n. \\<forall>n'>n. \\<not> P (lnth t n') \\<Longrightarrow> False", "with sset"], ["proof (chain)\npicking this:\n  {n. enat n < llength t \\<and> P (lnth t n)}\n  \\<subseteq> {n. n < k \\<and> enat n < llength t \\<and> P (lnth t n)}\n  n' \\<notin> {n. n < k \\<and> enat n < llength t \\<and> P (lnth t n)}\n  n' \\<in> {n. enat n < llength t \\<and> P (lnth t n)}", "show False"], ["proof (prove)\nusing this:\n  {n. enat n < llength t \\<and> P (lnth t n)}\n  \\<subseteq> {n. n < k \\<and> enat n < llength t \\<and> P (lnth t n)}\n  n' \\<notin> {n. n < k \\<and> enat n < llength t \\<and> P (lnth t n)}\n  n' \\<in> {n. enat n < llength t \\<and> P (lnth t n)}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>n. \\<forall>n'>n. \\<not> P (lnth t n')\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Specifying Dynamic Architectures\""], ["", "text \\<open>\n  In the following we formalize dynamic architectures in terms of configuration traces, i.e., sequences of architecture configurations.\n  Moreover, we introduce definitions for operations to support the specification of configuration traces.\n\\<close>"], ["", "typedecl cnf"], ["", "type_synonym trace = \"nat \\<Rightarrow> cnf\""], ["", "consts arch:: \"trace set\""], ["", "type_synonym cta = \"trace \\<Rightarrow> nat \\<Rightarrow> bool\""], ["", "subsubsection \"Implication\""], ["", "definition imp :: \"cta \\<Rightarrow> cta \\<Rightarrow> cta\" (infixl \"\\<longrightarrow>\\<^sup>c\" 10)\n  where \"\\<gamma> \\<longrightarrow>\\<^sup>c \\<gamma>' \\<equiv> \\<lambda> t n. \\<gamma> t n \\<longrightarrow> \\<gamma>' t n\""], ["", "declare imp_def[simp]"], ["", "lemma impI[intro!]:\n  fixes t n\n  assumes \"\\<gamma> t n \\<Longrightarrow> \\<gamma>' t n\"\n  shows \"(\\<gamma> \\<longrightarrow>\\<^sup>c \\<gamma>') t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<gamma> \\<longrightarrow>\\<^sup>c \\<gamma>') t n", "using assms"], ["proof (prove)\nusing this:\n  \\<gamma> t n \\<Longrightarrow> \\<gamma>' t n\n\ngoal (1 subgoal):\n 1. (\\<gamma> \\<longrightarrow>\\<^sup>c \\<gamma>') t n", "by simp"], ["", "lemma impE[elim!]:\n  fixes t n\n  assumes \"(\\<gamma> \\<longrightarrow>\\<^sup>c \\<gamma>') t n\" and \"\\<gamma> t n\" and \"\\<gamma>' t n \\<Longrightarrow> \\<gamma>'' t n\"\n  shows \"\\<gamma>'' t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gamma>'' t n", "using assms"], ["proof (prove)\nusing this:\n  (\\<gamma> \\<longrightarrow>\\<^sup>c \\<gamma>') t n\n  \\<gamma> t n\n  \\<gamma>' t n \\<Longrightarrow> \\<gamma>'' t n\n\ngoal (1 subgoal):\n 1. \\<gamma>'' t n", "by simp"], ["", "subsubsection \"Disjunction\""], ["", "definition disj :: \"cta \\<Rightarrow> cta \\<Rightarrow> cta\" (infixl \"\\<or>\\<^sup>c\" 15)\n  where \"\\<gamma> \\<or>\\<^sup>c \\<gamma>' \\<equiv> \\<lambda> t n. \\<gamma> t n \\<or> \\<gamma>' t n\""], ["", "declare disj_def[simp]"], ["", "lemma disjI1[intro]:\n  assumes \"\\<gamma> t n\"\n  shows \"(\\<gamma> \\<or>\\<^sup>c \\<gamma>') t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<gamma> \\<or>\\<^sup>c \\<gamma>') t n", "using assms"], ["proof (prove)\nusing this:\n  \\<gamma> t n\n\ngoal (1 subgoal):\n 1. (\\<gamma> \\<or>\\<^sup>c \\<gamma>') t n", "by simp"], ["", "lemma disjI2[intro]:\n  assumes \"\\<gamma>' t n\"\n  shows \"(\\<gamma> \\<or>\\<^sup>c \\<gamma>') t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<gamma> \\<or>\\<^sup>c \\<gamma>') t n", "using assms"], ["proof (prove)\nusing this:\n  \\<gamma>' t n\n\ngoal (1 subgoal):\n 1. (\\<gamma> \\<or>\\<^sup>c \\<gamma>') t n", "by simp"], ["", "lemma disjE[elim!]:\n  assumes \"(\\<gamma> \\<or>\\<^sup>c \\<gamma>') t n\"\n    and \"\\<gamma> t n \\<Longrightarrow> \\<gamma>'' t n\"\n    and \"\\<gamma>' t n \\<Longrightarrow> \\<gamma>'' t n\"\n  shows \"\\<gamma>'' t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gamma>'' t n", "using assms"], ["proof (prove)\nusing this:\n  (\\<gamma> \\<or>\\<^sup>c \\<gamma>') t n\n  \\<gamma> t n \\<Longrightarrow> \\<gamma>'' t n\n  \\<gamma>' t n \\<Longrightarrow> \\<gamma>'' t n\n\ngoal (1 subgoal):\n 1. \\<gamma>'' t n", "by auto"], ["", "subsubsection \"Conjunction\""], ["", "definition conj :: \"cta \\<Rightarrow> cta \\<Rightarrow> cta\" (infixl \"\\<and>\\<^sup>c\" 20)\n  where \"\\<gamma> \\<and>\\<^sup>c \\<gamma>' \\<equiv> \\<lambda> t n. \\<gamma> t n \\<and> \\<gamma>' t n\""], ["", "declare conj_def[simp]"], ["", "lemma conjI[intro!]:\n  fixes n\n  assumes \"\\<gamma> t n\" and \"\\<gamma>' t n\"\n  shows \"(\\<gamma> \\<and>\\<^sup>c \\<gamma>') t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<gamma> \\<and>\\<^sup>c \\<gamma>') t n", "using assms"], ["proof (prove)\nusing this:\n  \\<gamma> t n\n  \\<gamma>' t n\n\ngoal (1 subgoal):\n 1. (\\<gamma> \\<and>\\<^sup>c \\<gamma>') t n", "by simp"], ["", "lemma conjE[elim!]:\n  fixes n\n  assumes \"(\\<gamma> \\<and>\\<^sup>c \\<gamma>') t n\" and \"\\<gamma> t n \\<Longrightarrow> \\<gamma>' t n \\<Longrightarrow> \\<gamma>'' t n\"\n  shows \"\\<gamma>'' t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gamma>'' t n", "using assms"], ["proof (prove)\nusing this:\n  (\\<gamma> \\<and>\\<^sup>c \\<gamma>') t n\n  \\<lbrakk>\\<gamma> t n; \\<gamma>' t n\\<rbrakk>\n  \\<Longrightarrow> \\<gamma>'' t n\n\ngoal (1 subgoal):\n 1. \\<gamma>'' t n", "by simp"], ["", "subsubsection \"Negation\""], ["", "definition neg :: \"cta \\<Rightarrow> cta\" (\"\\<not>\\<^sup>c _\" [19] 19)\n  where \"\\<not>\\<^sup>c \\<gamma> \\<equiv> \\<lambda> t n. \\<not> \\<gamma> t n\""], ["", "declare neg_def[simp]"], ["", "lemma negI[intro!]:\n  assumes \"\\<gamma> t n \\<Longrightarrow> False\"\n  shows \"(\\<not>\\<^sup>c \\<gamma>) t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not>\\<^sup>c \\<gamma>) t n", "using assms"], ["proof (prove)\nusing this:\n  \\<gamma> t n \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. (\\<not>\\<^sup>c \\<gamma>) t n", "by auto"], ["", "lemma negE[elim!]:\n  assumes \"(\\<not>\\<^sup>c \\<gamma>) t n\"\n    and \"\\<gamma> t n\"\n  shows \"\\<gamma>' t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gamma>' t n", "using assms"], ["proof (prove)\nusing this:\n  (\\<not>\\<^sup>c \\<gamma>) t n\n  \\<gamma> t n\n\ngoal (1 subgoal):\n 1. \\<gamma>' t n", "by simp"], ["", "subsubsection \"Quantifiers\""], ["", "definition all :: \"('a \\<Rightarrow> cta)\n  \\<Rightarrow> cta\" (binder \"\\<forall>\\<^sub>c\" 10)\n  where \"all P \\<equiv> \\<lambda>t n. (\\<forall>y. (P y t n))\""], ["", "declare all_def[simp]"], ["", "lemma allI[intro!]:\n  assumes \"\\<And>x. \\<gamma> x t n\"\n  shows \"(\\<forall>\\<^sub>cx. \\<gamma> x) t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>\\<^sub>cx. \\<gamma> x) t n", "using assms"], ["proof (prove)\nusing this:\n  \\<gamma> ?x t n\n\ngoal (1 subgoal):\n 1. (\\<forall>\\<^sub>cx. \\<gamma> x) t n", "by simp"], ["", "lemma allE[elim!]:\n  fixes n\n  assumes \"(\\<forall>\\<^sub>cx. \\<gamma> x) t n\" and \"\\<gamma> x t n \\<Longrightarrow> \\<gamma>' t n\"\n  shows \"\\<gamma>' t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gamma>' t n", "using assms"], ["proof (prove)\nusing this:\n  (\\<forall>\\<^sub>cx. \\<gamma> x) t n\n  \\<gamma> x t n \\<Longrightarrow> \\<gamma>' t n\n\ngoal (1 subgoal):\n 1. \\<gamma>' t n", "by simp"], ["", "definition ex :: \"('a \\<Rightarrow> cta)\n  \\<Rightarrow> cta\" (binder \"\\<exists>\\<^sub>c\" 10)\n  where \"ex P \\<equiv> \\<lambda>t n. (\\<exists>y. (P y t n))\""], ["", "declare ex_def[simp]"], ["", "lemma exI[intro!]:\n  assumes \"\\<gamma> x t n\"\n  shows \"(\\<exists>\\<^sub>cx. \\<gamma> x) t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>\\<^sub>cx. \\<gamma> x) t n", "using assms HOL.exI"], ["proof (prove)\nusing this:\n  \\<gamma> x t n\n  ?P ?x \\<Longrightarrow> \\<exists>x. ?P x\n\ngoal (1 subgoal):\n 1. (\\<exists>\\<^sub>cx. \\<gamma> x) t n", "by simp"], ["", "lemma exE[elim!]:\n  assumes \"(\\<exists>\\<^sub>cx. \\<gamma> x) t n\" and \"\\<And>x. \\<gamma> x t n \\<Longrightarrow> \\<gamma>' t n\"\n  shows \"\\<gamma>' t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gamma>' t n", "using assms HOL.exE"], ["proof (prove)\nusing this:\n  (\\<exists>\\<^sub>cx. \\<gamma> x) t n\n  \\<gamma> ?x t n \\<Longrightarrow> \\<gamma>' t n\n  \\<lbrakk>\\<exists>x. ?P x; \\<And>x. ?P x \\<Longrightarrow> ?Q\\<rbrakk>\n  \\<Longrightarrow> ?Q\n\ngoal (1 subgoal):\n 1. \\<gamma>' t n", "by auto"], ["", "subsubsection \"Atomic Assertions\""], ["", "text \\<open>\n  First we provide rules for basic behavior assertions.\n\\<close>"], ["", "definition ca :: \"(cnf \\<Rightarrow> bool) \\<Rightarrow> cta\"\n  where \"ca \\<phi> \\<equiv> \\<lambda> t n. \\<phi> (t n)\""], ["", "lemma caI[intro]:\n  fixes n\n  assumes \"\\<phi> (t n)\"\n  shows \"(ca \\<phi>) t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ca \\<phi> t n", "using assms ca_def"], ["proof (prove)\nusing this:\n  \\<phi> (t n)\n  ca ?\\<phi> \\<equiv> \\<lambda>t n. ?\\<phi> (t n)\n\ngoal (1 subgoal):\n 1. ca \\<phi> t n", "by simp"], ["", "lemma caE[elim]:\n  fixes n\n  assumes \"(ca \\<phi>) t n\"\n  shows \"\\<phi> (t n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> (t n)", "using assms ca_def"], ["proof (prove)\nusing this:\n  ca \\<phi> t n\n  ca ?\\<phi> \\<equiv> \\<lambda>t n. ?\\<phi> (t n)\n\ngoal (1 subgoal):\n 1. \\<phi> (t n)", "by simp"], ["", "subsubsection \"Next Operator\""], ["", "definition nxt :: \"cta \\<Rightarrow> cta\" (\"\\<circle>\\<^sub>c(_)\" 24)\n  where \"\\<circle>\\<^sub>c(\\<gamma>) \\<equiv> \\<lambda>(t::(nat \\<Rightarrow> cnf)) n. \\<gamma> t (Suc n)\""], ["", "subsubsection \"Eventually Operator\""], ["", "definition evt :: \"cta \\<Rightarrow> cta\" (\"\\<diamond>\\<^sub>c(_)\" 23)\n  where \"\\<diamond>\\<^sub>c(\\<gamma>) \\<equiv> \\<lambda>(t::(nat \\<Rightarrow> cnf)) n. \\<exists>n'\\<ge>n. \\<gamma> t n'\""], ["", "subsubsection \"Globally Operator\""], ["", "definition glob :: \"cta \\<Rightarrow> cta\" (\"\\<box>\\<^sub>c(_)\" 22)\n  where \"\\<box>\\<^sub>c(\\<gamma>) \\<equiv> \\<lambda>(t::(nat \\<Rightarrow> cnf)) n. \\<forall>n'\\<ge>n. \\<gamma> t n'\""], ["", "lemma globI[intro!]:\n  fixes n'\n  assumes \"\\<forall>n\\<ge>n'. \\<gamma> t n\"\n  shows \"(\\<box>\\<^sub>c(\\<gamma>)) t n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box>\\<^sub>c\\<gamma>) t n'", "using assms glob_def"], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>n'. \\<gamma> t n\n  \\<box>\\<^sub>c?\\<gamma> \\<equiv>\n  \\<lambda>t n. \\<forall>n'\\<ge>n. ?\\<gamma> t n'\n\ngoal (1 subgoal):\n 1. (\\<box>\\<^sub>c\\<gamma>) t n'", "by simp"], ["", "lemma globE[elim!]:\n  fixes n n'\n  assumes \"(\\<box>\\<^sub>c(\\<gamma>)) t n\" and \"n'\\<ge>n\"\n  shows \"\\<gamma> t n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gamma> t n'", "using assms glob_def"], ["proof (prove)\nusing this:\n  (\\<box>\\<^sub>c\\<gamma>) t n\n  n \\<le> n'\n  \\<box>\\<^sub>c?\\<gamma> \\<equiv>\n  \\<lambda>t n. \\<forall>n'\\<ge>n. ?\\<gamma> t n'\n\ngoal (1 subgoal):\n 1. \\<gamma> t n'", "by simp"], ["", "subsubsection \"Until Operator\""], ["", "definition until :: \"cta \\<Rightarrow> cta \\<Rightarrow> cta\" (infixl \"\\<UU>\\<^sub>c\" 21)\n  where \"\\<gamma>' \\<UU>\\<^sub>c \\<gamma> \\<equiv> \\<lambda>(t::(nat \\<Rightarrow> cnf)) n. \\<exists>n''\\<ge>n. \\<gamma> t n'' \\<and> (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')\""], ["", "lemma untilI[intro]:\n  fixes n\n  assumes \"\\<exists>n''\\<ge>n. \\<gamma> t n'' \\<and> (\\<forall>n'\\<ge>n. n'<n'' \\<longrightarrow> \\<gamma>' t n')\"\n  shows \"(\\<gamma>' \\<UU>\\<^sub>c \\<gamma>) t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<gamma>' \\<UU>\\<^sub>c \\<gamma>) t n", "using assms until_def"], ["proof (prove)\nusing this:\n  \\<exists>n''\\<ge>n.\n     \\<gamma> t n'' \\<and>\n     (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')\n  ?\\<gamma>' \\<UU>\\<^sub>c ?\\<gamma> \\<equiv>\n  \\<lambda>t n.\n     \\<exists>n''\\<ge>n.\n        ?\\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> ?\\<gamma>' t n')\n\ngoal (1 subgoal):\n 1. (\\<gamma>' \\<UU>\\<^sub>c \\<gamma>) t n", "by simp"], ["", "lemma untilE[elim]:\n  fixes n\n  assumes \"(\\<gamma>' \\<UU>\\<^sub>c \\<gamma>) t n\"\n  shows \"\\<exists>n''\\<ge>n. \\<gamma> t n'' \\<and> (\\<forall>n'\\<ge>n. n'<n'' \\<longrightarrow> \\<gamma>' t n')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n''\\<ge>n.\n       \\<gamma> t n'' \\<and>\n       (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')", "using assms until_def"], ["proof (prove)\nusing this:\n  (\\<gamma>' \\<UU>\\<^sub>c \\<gamma>) t n\n  ?\\<gamma>' \\<UU>\\<^sub>c ?\\<gamma> \\<equiv>\n  \\<lambda>t n.\n     \\<exists>n''\\<ge>n.\n        ?\\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> ?\\<gamma>' t n')\n\ngoal (1 subgoal):\n 1. \\<exists>n''\\<ge>n.\n       \\<gamma> t n'' \\<and>\n       (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')", "by simp"], ["", "subsubsection \"Weak Until\""], ["", "definition wuntil :: \"cta \\<Rightarrow> cta \\<Rightarrow> cta\" (infixl \"\\<WW>\\<^sub>c\" 20)\n  where \"\\<gamma>' \\<WW>\\<^sub>c \\<gamma> \\<equiv> \\<gamma>' \\<UU>\\<^sub>c \\<gamma> \\<or>\\<^sup>c \\<box>\\<^sub>c(\\<gamma>')\""], ["", "lemma wUntilI[intro]:\n  fixes n\n  assumes \"(\\<exists>n''\\<ge>n. \\<gamma> t n'' \\<and> (\\<forall>n'\\<ge>n. n'<n'' \\<longrightarrow> \\<gamma>' t n')) \\<or> (\\<forall>n'\\<ge>n. \\<gamma>' t n')\"\n  shows \"(\\<gamma>' \\<WW>\\<^sub>c \\<gamma>) t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<gamma>' \\<WW>\\<^sub>c \\<gamma>) t n", "using assms wuntil_def"], ["proof (prove)\nusing this:\n  (\\<exists>n''\\<ge>n.\n      \\<gamma> t n'' \\<and>\n      (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n  (\\<forall>n'\\<ge>n. \\<gamma>' t n')\n  ?\\<gamma>' \\<WW>\\<^sub>c ?\\<gamma> \\<equiv>\n  ?\\<gamma>' \\<UU>\\<^sub>c ?\\<gamma> \\<or>\\<^sup>c \\<box>\\<^sub>c?\\<gamma>'\n\ngoal (1 subgoal):\n 1. (\\<gamma>' \\<WW>\\<^sub>c \\<gamma>) t n", "by auto"], ["", "lemma wUntilE[elim]:\n  fixes n n'\n  assumes \"(\\<gamma>' \\<WW>\\<^sub>c \\<gamma>) t n\"\n  shows \"(\\<exists>n''\\<ge>n. \\<gamma> t n'' \\<and> (\\<forall>n'\\<ge>n. n'<n'' \\<longrightarrow> \\<gamma>' t n')) \\<or> (\\<forall>n'\\<ge>n. \\<gamma>' t n')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')", "from assms"], ["proof (chain)\npicking this:\n  (\\<gamma>' \\<WW>\\<^sub>c \\<gamma>) t n", "have \"(\\<gamma>' \\<UU>\\<^sub>c \\<gamma> \\<or>\\<^sup>c \\<box>\\<^sub>c(\\<gamma>')) t n\""], ["proof (prove)\nusing this:\n  (\\<gamma>' \\<WW>\\<^sub>c \\<gamma>) t n\n\ngoal (1 subgoal):\n 1. (\\<gamma>' \\<UU>\\<^sub>c \\<gamma> \\<or>\\<^sup>c \\<box>\\<^sub>c\\<gamma>')\n     t n", "using wuntil_def"], ["proof (prove)\nusing this:\n  (\\<gamma>' \\<WW>\\<^sub>c \\<gamma>) t n\n  ?\\<gamma>' \\<WW>\\<^sub>c ?\\<gamma> \\<equiv>\n  ?\\<gamma>' \\<UU>\\<^sub>c ?\\<gamma> \\<or>\\<^sup>c \\<box>\\<^sub>c?\\<gamma>'\n\ngoal (1 subgoal):\n 1. (\\<gamma>' \\<UU>\\<^sub>c \\<gamma> \\<or>\\<^sup>c \\<box>\\<^sub>c\\<gamma>')\n     t n", "by simp"], ["proof (state)\nthis:\n  (\\<gamma>' \\<UU>\\<^sub>c \\<gamma> \\<or>\\<^sup>c \\<box>\\<^sub>c\\<gamma>') t\n   n\n\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')", "hence \"(\\<gamma>' \\<UU>\\<^sub>c \\<gamma>) t n \\<or> (\\<box>\\<^sub>c(\\<gamma>')) t n\""], ["proof (prove)\nusing this:\n  (\\<gamma>' \\<UU>\\<^sub>c \\<gamma> \\<or>\\<^sup>c \\<box>\\<^sub>c\\<gamma>') t\n   n\n\ngoal (1 subgoal):\n 1. (\\<gamma>' \\<UU>\\<^sub>c \\<gamma>) t n \\<or>\n    (\\<box>\\<^sub>c\\<gamma>') t n", "by simp"], ["proof (state)\nthis:\n  (\\<gamma>' \\<UU>\\<^sub>c \\<gamma>) t n \\<or> (\\<box>\\<^sub>c\\<gamma>') t n\n\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<gamma>' \\<UU>\\<^sub>c \\<gamma>) t n \\<or> (\\<box>\\<^sub>c\\<gamma>') t n\n\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<gamma>' \\<UU>\\<^sub>c \\<gamma>) t n \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')\n 2. (\\<box>\\<^sub>c\\<gamma>') t n \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')", "assume \"(\\<gamma>' \\<UU>\\<^sub>c \\<gamma>) t n\""], ["proof (state)\nthis:\n  (\\<gamma>' \\<UU>\\<^sub>c \\<gamma>) t n\n\ngoal (2 subgoals):\n 1. (\\<gamma>' \\<UU>\\<^sub>c \\<gamma>) t n \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')\n 2. (\\<box>\\<^sub>c\\<gamma>') t n \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')", "hence \"\\<exists>n''\\<ge>n. \\<gamma> t n'' \\<and> (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')\""], ["proof (prove)\nusing this:\n  (\\<gamma>' \\<UU>\\<^sub>c \\<gamma>) t n\n\ngoal (1 subgoal):\n 1. \\<exists>n''\\<ge>n.\n       \\<gamma> t n'' \\<and>\n       (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')", "by auto"], ["proof (state)\nthis:\n  \\<exists>n''\\<ge>n.\n     \\<gamma> t n'' \\<and>\n     (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')\n\ngoal (2 subgoals):\n 1. (\\<gamma>' \\<UU>\\<^sub>c \\<gamma>) t n \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')\n 2. (\\<box>\\<^sub>c\\<gamma>') t n \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>n''\\<ge>n.\n     \\<gamma> t n'' \\<and>\n     (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')\n\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')", "by auto"], ["proof (state)\nthis:\n  (\\<exists>n''\\<ge>n.\n      \\<gamma> t n'' \\<and>\n      (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n  (\\<forall>n'\\<ge>n. \\<gamma>' t n')\n\ngoal (1 subgoal):\n 1. (\\<box>\\<^sub>c\\<gamma>') t n \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<box>\\<^sub>c\\<gamma>') t n \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')", "assume \"(\\<box>\\<^sub>c\\<gamma>') t n\""], ["proof (state)\nthis:\n  (\\<box>\\<^sub>c\\<gamma>') t n\n\ngoal (1 subgoal):\n 1. (\\<box>\\<^sub>c\\<gamma>') t n \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')", "hence \"\\<forall>n'\\<ge>n. \\<gamma>' t n'\""], ["proof (prove)\nusing this:\n  (\\<box>\\<^sub>c\\<gamma>') t n\n\ngoal (1 subgoal):\n 1. \\<forall>n'\\<ge>n. \\<gamma>' t n'", "by auto"], ["proof (state)\nthis:\n  \\<forall>n'\\<ge>n. \\<gamma>' t n'\n\ngoal (1 subgoal):\n 1. (\\<box>\\<^sub>c\\<gamma>') t n \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n'\\<ge>n. \\<gamma>' t n'\n\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')", "by auto"], ["proof (state)\nthis:\n  (\\<exists>n''\\<ge>n.\n      \\<gamma> t n'' \\<and>\n      (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n  (\\<forall>n'\\<ge>n. \\<gamma>' t n')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>n''\\<ge>n.\n      \\<gamma> t n'' \\<and>\n      (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n  (\\<forall>n'\\<ge>n. \\<gamma>' t n')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wUntil_Glob:\n  assumes \"(\\<gamma>' \\<WW>\\<^sub>c \\<gamma>) t n\"\n    and \"(\\<box>\\<^sub>c(\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'')) t n\"\n  shows \"(\\<gamma>'' \\<WW>\\<^sub>c \\<gamma>) t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<gamma>'' \\<WW>\\<^sub>c \\<gamma>) t n", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')", "from assms(1)"], ["proof (chain)\npicking this:\n  (\\<gamma>' \\<WW>\\<^sub>c \\<gamma>) t n", "have \"(\\<exists>n''\\<ge>n. \\<gamma> t n'' \\<and> (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or> (\\<forall>n'\\<ge>n. \\<gamma>' t n')\""], ["proof (prove)\nusing this:\n  (\\<gamma>' \\<WW>\\<^sub>c \\<gamma>) t n\n\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')", "using wUntilE"], ["proof (prove)\nusing this:\n  (\\<gamma>' \\<WW>\\<^sub>c \\<gamma>) t n\n  (?\\<gamma>' \\<WW>\\<^sub>c ?\\<gamma>) ?t ?n \\<Longrightarrow>\n  (\\<exists>n''\\<ge>?n.\n      ?\\<gamma> ?t n'' \\<and>\n      (\\<forall>n'\\<ge>?n.\n          n' < n'' \\<longrightarrow> ?\\<gamma>' ?t n')) \\<or>\n  (\\<forall>n'\\<ge>?n. ?\\<gamma>' ?t n')\n\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>' t n')", "by simp"], ["proof (state)\nthis:\n  (\\<exists>n''\\<ge>n.\n      \\<gamma> t n'' \\<and>\n      (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n  (\\<forall>n'\\<ge>n. \\<gamma>' t n')\n\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')", "thus \"(\\<exists>n''\\<ge>n. \\<gamma> t n'' \\<and> (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or> (\\<forall>n'\\<ge>n. \\<gamma>'' t n')\""], ["proof (prove)\nusing this:\n  (\\<exists>n''\\<ge>n.\n      \\<gamma> t n'' \\<and>\n      (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')) \\<or>\n  (\\<forall>n'\\<ge>n. \\<gamma>' t n')\n\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>n''\\<ge>n.\n       \\<gamma> t n'' \\<and>\n       (\\<forall>n'\\<ge>n.\n           n' < n'' \\<longrightarrow> \\<gamma>' t n') \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')\n 2. \\<forall>n'\\<ge>n. \\<gamma>' t n' \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')", "assume \"\\<exists>n''\\<ge>n. \\<gamma> t n'' \\<and> (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')\""], ["proof (state)\nthis:\n  \\<exists>n''\\<ge>n.\n     \\<gamma> t n'' \\<and>\n     (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')\n\ngoal (2 subgoals):\n 1. \\<exists>n''\\<ge>n.\n       \\<gamma> t n'' \\<and>\n       (\\<forall>n'\\<ge>n.\n           n' < n'' \\<longrightarrow> \\<gamma>' t n') \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')\n 2. \\<forall>n'\\<ge>n. \\<gamma>' t n' \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')", "show \"(\\<exists>n''\\<ge>n. \\<gamma> t n'' \\<and> (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or> (\\<forall>n'\\<ge>n. \\<gamma>'' t n')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')", "from \\<open>\\<exists>n''\\<ge>n. \\<gamma> t n'' \\<and> (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>n''\\<ge>n.\n     \\<gamma> t n'' \\<and>\n     (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')", "obtain n'' where \"n''\\<ge>n\" and \"\\<gamma> t n''\" and a1: \"\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n'\""], ["proof (prove)\nusing this:\n  \\<exists>n''\\<ge>n.\n     \\<gamma> t n'' \\<and>\n     (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n')\n\ngoal (1 subgoal):\n 1. (\\<And>n''.\n        \\<lbrakk>n \\<le> n''; \\<gamma> t n'';\n         \\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>' t n'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n \\<le> n''\n  \\<gamma> t n''\n  \\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n'\n\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')", "moreover"], ["proof (state)\nthis:\n  n \\<le> n''\n  \\<gamma> t n''\n  \\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n'\n\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')", "have \"\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>'' t n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>'' t n'", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n'.\n       n \\<le> n' \\<longrightarrow>\n       n' < n'' \\<longrightarrow> \\<gamma>'' t n'", "fix n'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n'.\n       n \\<le> n' \\<longrightarrow>\n       n' < n'' \\<longrightarrow> \\<gamma>'' t n'", "show \"n'\\<ge>n \\<longrightarrow> n'< n'' \\<longrightarrow> \\<gamma>'' t n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> n' \\<longrightarrow> n' < n'' \\<longrightarrow> \\<gamma>'' t n'", "proof (rule HOL.impI[OF HOL.impI])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> n'; n' < n''\\<rbrakk> \\<Longrightarrow> \\<gamma>'' t n'", "assume \"n'\\<ge>n\" and \"n'<n''\""], ["proof (state)\nthis:\n  n \\<le> n'\n  n' < n''\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> n'; n' < n''\\<rbrakk> \\<Longrightarrow> \\<gamma>'' t n'", "with assms(2)"], ["proof (chain)\npicking this:\n  (\\<box>\\<^sub>c\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n\n  n \\<le> n'\n  n' < n''", "have \"(\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n'\""], ["proof (prove)\nusing this:\n  (\\<box>\\<^sub>c\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n\n  n \\<le> n'\n  n' < n''\n\ngoal (1 subgoal):\n 1. (\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n'", "using globE"], ["proof (prove)\nusing this:\n  (\\<box>\\<^sub>c\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n\n  n \\<le> n'\n  n' < n''\n  \\<lbrakk>(\\<box>\\<^sub>c?\\<gamma>) ?t ?n; ?n \\<le> ?n'\\<rbrakk>\n  \\<Longrightarrow> ?\\<gamma> ?t ?n'\n\ngoal (1 subgoal):\n 1. (\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n'", "by simp"], ["proof (state)\nthis:\n  (\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> n'; n' < n''\\<rbrakk> \\<Longrightarrow> \\<gamma>'' t n'", "hence \"\\<gamma>' t n' \\<longrightarrow> \\<gamma>'' t n'\""], ["proof (prove)\nusing this:\n  (\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n'\n\ngoal (1 subgoal):\n 1. \\<gamma>' t n' \\<longrightarrow> \\<gamma>'' t n'", "using impE"], ["proof (prove)\nusing this:\n  (\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n'\n  \\<lbrakk>(?\\<gamma> \\<longrightarrow>\\<^sup>c ?\\<gamma>') ?t ?n;\n   ?\\<gamma> ?t ?n;\n   ?\\<gamma>' ?t ?n \\<Longrightarrow> ?\\<gamma>'' ?t ?n\\<rbrakk>\n  \\<Longrightarrow> ?\\<gamma>'' ?t ?n\n\ngoal (1 subgoal):\n 1. \\<gamma>' t n' \\<longrightarrow> \\<gamma>'' t n'", "by auto"], ["proof (state)\nthis:\n  \\<gamma>' t n' \\<longrightarrow> \\<gamma>'' t n'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> n'; n' < n''\\<rbrakk> \\<Longrightarrow> \\<gamma>'' t n'", "moreover"], ["proof (state)\nthis:\n  \\<gamma>' t n' \\<longrightarrow> \\<gamma>'' t n'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> n'; n' < n''\\<rbrakk> \\<Longrightarrow> \\<gamma>'' t n'", "from a1 \\<open>n'\\<ge>n\\<close> \\<open>n'<n''\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n'\n  n \\<le> n'\n  n' < n''", "have \"\\<gamma>' t n'\""], ["proof (prove)\nusing this:\n  \\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n'\n  n \\<le> n'\n  n' < n''\n\ngoal (1 subgoal):\n 1. \\<gamma>' t n'", "by simp"], ["proof (state)\nthis:\n  \\<gamma>' t n'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> n'; n' < n''\\<rbrakk> \\<Longrightarrow> \\<gamma>'' t n'", "ultimately"], ["proof (chain)\npicking this:\n  \\<gamma>' t n' \\<longrightarrow> \\<gamma>'' t n'\n  \\<gamma>' t n'", "show \"\\<gamma>'' t n'\""], ["proof (prove)\nusing this:\n  \\<gamma>' t n' \\<longrightarrow> \\<gamma>'' t n'\n  \\<gamma>' t n'\n\ngoal (1 subgoal):\n 1. \\<gamma>'' t n'", "by simp"], ["proof (state)\nthis:\n  \\<gamma>'' t n'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  n \\<le> n' \\<longrightarrow> n' < n'' \\<longrightarrow> \\<gamma>'' t n'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>'' t n'\n\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')", "ultimately"], ["proof (chain)\npicking this:\n  n \\<le> n''\n  \\<gamma> t n''\n  \\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n'\n  \\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>'' t n'", "show ?thesis"], ["proof (prove)\nusing this:\n  n \\<le> n''\n  \\<gamma> t n''\n  \\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>' t n'\n  \\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>'' t n'\n\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')", "by auto"], ["proof (state)\nthis:\n  (\\<exists>n''\\<ge>n.\n      \\<gamma> t n'' \\<and>\n      (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n  (\\<forall>n'\\<ge>n. \\<gamma>'' t n')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>n''\\<ge>n.\n      \\<gamma> t n'' \\<and>\n      (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n  (\\<forall>n'\\<ge>n. \\<gamma>'' t n')\n\ngoal (1 subgoal):\n 1. \\<forall>n'\\<ge>n. \\<gamma>' t n' \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n'\\<ge>n. \\<gamma>' t n' \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')", "assume a1: \"\\<forall>n'\\<ge>n. \\<gamma>' t n'\""], ["proof (state)\nthis:\n  \\<forall>n'\\<ge>n. \\<gamma>' t n'\n\ngoal (1 subgoal):\n 1. \\<forall>n'\\<ge>n. \\<gamma>' t n' \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')", "have \"\\<forall>n'\\<ge>n. \\<gamma>'' t n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n'\\<ge>n. \\<gamma>'' t n'", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n'. n \\<le> n' \\<longrightarrow> \\<gamma>'' t n'", "fix n'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n'. n \\<le> n' \\<longrightarrow> \\<gamma>'' t n'", "show \"n'\\<ge>n \\<longrightarrow> \\<gamma>'' t n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> n' \\<longrightarrow> \\<gamma>'' t n'", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<le> n' \\<Longrightarrow> \\<gamma>'' t n'", "assume \"n'\\<ge>n\""], ["proof (state)\nthis:\n  n \\<le> n'\n\ngoal (1 subgoal):\n 1. n \\<le> n' \\<Longrightarrow> \\<gamma>'' t n'", "with assms(2)"], ["proof (chain)\npicking this:\n  (\\<box>\\<^sub>c\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n\n  n \\<le> n'", "have \"(\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n'\""], ["proof (prove)\nusing this:\n  (\\<box>\\<^sub>c\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n\n  n \\<le> n'\n\ngoal (1 subgoal):\n 1. (\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n'", "using globE"], ["proof (prove)\nusing this:\n  (\\<box>\\<^sub>c\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n\n  n \\<le> n'\n  \\<lbrakk>(\\<box>\\<^sub>c?\\<gamma>) ?t ?n; ?n \\<le> ?n'\\<rbrakk>\n  \\<Longrightarrow> ?\\<gamma> ?t ?n'\n\ngoal (1 subgoal):\n 1. (\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n'", "by simp"], ["proof (state)\nthis:\n  (\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n'\n\ngoal (1 subgoal):\n 1. n \\<le> n' \\<Longrightarrow> \\<gamma>'' t n'", "hence \"\\<gamma>' t n' \\<longrightarrow> \\<gamma>'' t n'\""], ["proof (prove)\nusing this:\n  (\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n'\n\ngoal (1 subgoal):\n 1. \\<gamma>' t n' \\<longrightarrow> \\<gamma>'' t n'", "using impE"], ["proof (prove)\nusing this:\n  (\\<gamma>' \\<longrightarrow>\\<^sup>c \\<gamma>'') t n'\n  \\<lbrakk>(?\\<gamma> \\<longrightarrow>\\<^sup>c ?\\<gamma>') ?t ?n;\n   ?\\<gamma> ?t ?n;\n   ?\\<gamma>' ?t ?n \\<Longrightarrow> ?\\<gamma>'' ?t ?n\\<rbrakk>\n  \\<Longrightarrow> ?\\<gamma>'' ?t ?n\n\ngoal (1 subgoal):\n 1. \\<gamma>' t n' \\<longrightarrow> \\<gamma>'' t n'", "by auto"], ["proof (state)\nthis:\n  \\<gamma>' t n' \\<longrightarrow> \\<gamma>'' t n'\n\ngoal (1 subgoal):\n 1. n \\<le> n' \\<Longrightarrow> \\<gamma>'' t n'", "moreover"], ["proof (state)\nthis:\n  \\<gamma>' t n' \\<longrightarrow> \\<gamma>'' t n'\n\ngoal (1 subgoal):\n 1. n \\<le> n' \\<Longrightarrow> \\<gamma>'' t n'", "from a1 \\<open>n'\\<ge>n\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>n'\\<ge>n. \\<gamma>' t n'\n  n \\<le> n'", "have \"\\<gamma>' t n'\""], ["proof (prove)\nusing this:\n  \\<forall>n'\\<ge>n. \\<gamma>' t n'\n  n \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<gamma>' t n'", "by simp"], ["proof (state)\nthis:\n  \\<gamma>' t n'\n\ngoal (1 subgoal):\n 1. n \\<le> n' \\<Longrightarrow> \\<gamma>'' t n'", "ultimately"], ["proof (chain)\npicking this:\n  \\<gamma>' t n' \\<longrightarrow> \\<gamma>'' t n'\n  \\<gamma>' t n'", "show \"\\<gamma>'' t n'\""], ["proof (prove)\nusing this:\n  \\<gamma>' t n' \\<longrightarrow> \\<gamma>'' t n'\n  \\<gamma>' t n'\n\ngoal (1 subgoal):\n 1. \\<gamma>'' t n'", "by simp"], ["proof (state)\nthis:\n  \\<gamma>'' t n'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  n \\<le> n' \\<longrightarrow> \\<gamma>'' t n'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n'\\<ge>n. \\<gamma>'' t n'\n\ngoal (1 subgoal):\n 1. \\<forall>n'\\<ge>n. \\<gamma>' t n' \\<Longrightarrow>\n    (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')", "thus \"(\\<exists>n''\\<ge>n. \\<gamma> t n'' \\<and> (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or> (\\<forall>n'\\<ge>n. \\<gamma>'' t n')\""], ["proof (prove)\nusing this:\n  \\<forall>n'\\<ge>n. \\<gamma>'' t n'\n\ngoal (1 subgoal):\n 1. (\\<exists>n''\\<ge>n.\n        \\<gamma> t n'' \\<and>\n        (\\<forall>n'\\<ge>n.\n            n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n    (\\<forall>n'\\<ge>n. \\<gamma>'' t n')", "by simp"], ["proof (state)\nthis:\n  (\\<exists>n''\\<ge>n.\n      \\<gamma> t n'' \\<and>\n      (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n  (\\<forall>n'\\<ge>n. \\<gamma>'' t n')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>n''\\<ge>n.\n      \\<gamma> t n'' \\<and>\n      (\\<forall>n'\\<ge>n. n' < n'' \\<longrightarrow> \\<gamma>'' t n')) \\<or>\n  (\\<forall>n'\\<ge>n. \\<gamma>'' t n')\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Dynamic Components\""], ["", "text \\<open>\n  To support the specification of patterns over dynamic architectures we provide a locale for dynamic components.\n  It takes the following type parameters:\n  \\begin{itemize}\n    \\item id: a type for component identifiers\n    \\item cmp: a type for components\n    \\item cnf: a type for architecture configurations\n  \\end{itemize}\n\\<close>"], ["", "locale dynamic_component =\n  fixes tCMP :: \"'id \\<Rightarrow> cnf \\<Rightarrow> 'cmp\" (\"\\<sigma>\\<^bsub>_\\<^esub>(_)\" [0,110]60)\n    and active :: \"'id \\<Rightarrow> cnf \\<Rightarrow> bool\" (\"\\<parallel>_\\<parallel>\\<^bsub>_\\<^esub>\" [0,110]60)\nbegin"], ["", "text \\<open>\n  The locale requires two parameters:\n  \\begin{itemize}\n    \\item @{term tCMP} is an operator to obtain a component with a certain identifier from an architecture configuration.\n    \\item @{term active} is a predicate to assert whether a certain component is activated within an architecture configuration.\n  \\end{itemize}\n\\<close>"], ["", "text \\<open>\n  The locale provides some general properties about its parameters and introduces six important operators over configuration traces:\n  \\begin{itemize}\n    \\item An operator to extract the behavior of a certain component out of a given configuration trace.\n    \\item An operator to obtain the number of activations of a certain component within a given configuration trace.\n    \\item An operator to obtain the least point in time (before a certain point in time) from which on a certain component is not activated anymore.\n    \\item An operator to obtain the latest point in time where a certain component was activated.\n    \\item Two operators to map time-points between configuration traces and behavior traces.\n  \\end{itemize}\n  Moreover, the locale provides several properties about the operators and their relationships.\n\\<close>"], ["", "lemma nact_active:\n  fixes t::\"nat \\<Rightarrow> cnf\"\n    and n::nat\n    and n''\n    and id\n  assumes \"\\<parallel>id\\<parallel>\\<^bsub>t n\\<^esub>\"\n    and \"n'' \\<ge> n\"    \n    and \"\\<not> (\\<exists>n'\\<ge>n. n' < n'' \\<and> \\<parallel>id\\<parallel>\\<^bsub>t n'\\<^esub>)\"    \n  shows \"n=n''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = n''", "using assms le_eq_less_or_eq"], ["proof (prove)\nusing this:\n  \\<parallel>id\\<parallel>\\<^bsub>t n\\<^esub>\n  n \\<le> n''\n  \\<not> (\\<exists>n'\\<ge>n.\n             n' < n'' \\<and> \\<parallel>id\\<parallel>\\<^bsub>t n'\\<^esub>)\n  (?m \\<le> ?n) = (?m < ?n \\<or> ?m = ?n)\n\ngoal (1 subgoal):\n 1. n = n''", "by auto"], ["", "lemma nact_exists:\n  fixes t::\"nat \\<Rightarrow> cnf\"\n  assumes \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n  shows \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and> (\\<nexists>k. n\\<le>k \\<and> k<i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "let ?L = \"LEAST i. (i\\<ge>n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>", "have \"?L\\<ge>n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t ?L\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n\ngoal (1 subgoal):\n 1. n \\<le> (LEAST i.\n                n \\<le> i \\<and>\n                \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>) \\<and>\n    \\<parallel>c\\<parallel>\\<^bsub>t (LEAST i.\n   n \\<le> i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\\<^esub>", "using LeastI[of \"\\<lambda>x::nat. (x\\<ge>n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub>)\"]"], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  n \\<le> ?k \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t ?k\\<^esub> \\<Longrightarrow>\n  n \\<le> (LEAST x.\n              n \\<le> x \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub>) \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t (LEAST x.\n n \\<le> x \\<and> \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub>)\\<^esub>\n\ngoal (1 subgoal):\n 1. n \\<le> (LEAST i.\n                n \\<le> i \\<and>\n                \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>) \\<and>\n    \\<parallel>c\\<parallel>\\<^bsub>t (LEAST i.\n   n \\<le> i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\\<^esub>", "by auto"], ["proof (state)\nthis:\n  n \\<le> (LEAST i.\n              n \\<le> i \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>) \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t (LEAST i.\n n \\<le> i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "moreover"], ["proof (state)\nthis:\n  n \\<le> (LEAST i.\n              n \\<le> i \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>) \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t (LEAST i.\n n \\<le> i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "have \"\\<nexists>k. n\\<le>k \\<and> k<?L \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>n.\n               k < (LEAST i.\n                       n \\<le> i \\<and>\n                       \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>) \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "using not_less_Least"], ["proof (prove)\nusing this:\n  ?k < (LEAST x. ?P x) \\<Longrightarrow> \\<not> ?P ?k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>n.\n               k < (LEAST i.\n                       n \\<le> i \\<and>\n                       \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>) \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "by auto"], ["proof (state)\nthis:\n  \\<not> (\\<exists>k\\<ge>n.\n             k < (LEAST i.\n                     n \\<le> i \\<and>\n                     \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>) \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "ultimately"], ["proof (chain)\npicking this:\n  n \\<le> (LEAST i.\n              n \\<le> i \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>) \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t (LEAST i.\n n \\<le> i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\\<^esub>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < (LEAST i.\n                     n \\<le> i \\<and>\n                     \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>) \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "show ?thesis"], ["proof (prove)\nusing this:\n  n \\<le> (LEAST i.\n              n \\<le> i \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>) \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t (LEAST i.\n n \\<le> i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\\<^esub>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < (LEAST i.\n                     n \\<le> i \\<and>\n                     \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>) \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "by blast"], ["proof (state)\nthis:\n  \\<exists>i\\<ge>n.\n     \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and>\n     \\<not> (\\<exists>k\\<ge>n.\n                k < i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lActive_least:\n  assumes \"\\<exists>i\\<ge>n. i < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n  shows \"\\<exists>i\\<ge>n. (i < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub> \\<and> (\\<nexists>k. n\\<le>k \\<and> k<i \\<and> k<llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < i \\<and>\n                  enat k < llength t \\<and>\n                  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < i \\<and>\n                  enat k < llength t \\<and>\n                  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)", "let ?L = \"LEAST i. (i\\<ge>n \\<and> i < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < i \\<and>\n                  enat k < llength t \\<and>\n                  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>i\\<ge>n.\n     enat i < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "have \"?L\\<ge>n \\<and> ?L < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t ?L\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n.\n     enat i < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. n \\<le> (LEAST i.\n                n \\<le> i \\<and>\n                enat i < llength t \\<and>\n                \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>) \\<and>\n    enat\n     (LEAST i.\n         n \\<le> i \\<and>\n         enat i < llength t \\<and>\n         \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\n    < llength t \\<and>\n    \\<parallel>c\\<parallel>\\<^bsub>lnth t\n                                    (LEAST i.\n  n \\<le> i \\<and>\n  enat i < llength t \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\\<^esub>", "using LeastI[of \"\\<lambda>x::nat.(x\\<ge>n \\<and> x<llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t x\\<^esub>)\"]"], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n.\n     enat i < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  n \\<le> ?k \\<and>\n  enat ?k < llength t \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t ?k\\<^esub> \\<Longrightarrow>\n  n \\<le> (LEAST x.\n              n \\<le> x \\<and>\n              enat x < llength t \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>lnth t x\\<^esub>) \\<and>\n  enat\n   (LEAST x.\n       n \\<le> x \\<and>\n       enat x < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t x\\<^esub>)\n  < llength t \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t\n                                  (LEAST x.\nn \\<le> x \\<and>\nenat x < llength t \\<and>\n\\<parallel>c\\<parallel>\\<^bsub>lnth t x\\<^esub>)\\<^esub>\n\ngoal (1 subgoal):\n 1. n \\<le> (LEAST i.\n                n \\<le> i \\<and>\n                enat i < llength t \\<and>\n                \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>) \\<and>\n    enat\n     (LEAST i.\n         n \\<le> i \\<and>\n         enat i < llength t \\<and>\n         \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\n    < llength t \\<and>\n    \\<parallel>c\\<parallel>\\<^bsub>lnth t\n                                    (LEAST i.\n  n \\<le> i \\<and>\n  enat i < llength t \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\\<^esub>", "by auto"], ["proof (state)\nthis:\n  n \\<le> (LEAST i.\n              n \\<le> i \\<and>\n              enat i < llength t \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>) \\<and>\n  enat\n   (LEAST i.\n       n \\<le> i \\<and>\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\n  < llength t \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t\n                                  (LEAST i.\nn \\<le> i \\<and>\nenat i < llength t \\<and>\n\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < i \\<and>\n                  enat k < llength t \\<and>\n                  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)", "moreover"], ["proof (state)\nthis:\n  n \\<le> (LEAST i.\n              n \\<le> i \\<and>\n              enat i < llength t \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>) \\<and>\n  enat\n   (LEAST i.\n       n \\<le> i \\<and>\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\n  < llength t \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t\n                                  (LEAST i.\nn \\<le> i \\<and>\nenat i < llength t \\<and>\n\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < i \\<and>\n                  enat k < llength t \\<and>\n                  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)", "have \"\\<nexists>k. n\\<le>k \\<and> k<llength t \\<and> k<?L \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>n.\n               enat k < llength t \\<and>\n               k < (LEAST i.\n                       n \\<le> i \\<and>\n                       enat i < llength t \\<and>\n                       \\<parallel>c\\<parallel>\\<^bsub>lnth t\n                 i\\<^esub>) \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)", "using not_less_Least"], ["proof (prove)\nusing this:\n  ?k < (LEAST x. ?P x) \\<Longrightarrow> \\<not> ?P ?k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>n.\n               enat k < llength t \\<and>\n               k < (LEAST i.\n                       n \\<le> i \\<and>\n                       enat i < llength t \\<and>\n                       \\<parallel>c\\<parallel>\\<^bsub>lnth t\n                 i\\<^esub>) \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)", "by auto"], ["proof (state)\nthis:\n  \\<not> (\\<exists>k\\<ge>n.\n             enat k < llength t \\<and>\n             k < (LEAST i.\n                     n \\<le> i \\<and>\n                     enat i < llength t \\<and>\n                     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>) \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < i \\<and>\n                  enat k < llength t \\<and>\n                  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)", "ultimately"], ["proof (chain)\npicking this:\n  n \\<le> (LEAST i.\n              n \\<le> i \\<and>\n              enat i < llength t \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>) \\<and>\n  enat\n   (LEAST i.\n       n \\<le> i \\<and>\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\n  < llength t \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t\n                                  (LEAST i.\nn \\<le> i \\<and>\nenat i < llength t \\<and>\n\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\\<^esub>\n  \\<not> (\\<exists>k\\<ge>n.\n             enat k < llength t \\<and>\n             k < (LEAST i.\n                     n \\<le> i \\<and>\n                     enat i < llength t \\<and>\n                     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>) \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)", "show ?thesis"], ["proof (prove)\nusing this:\n  n \\<le> (LEAST i.\n              n \\<le> i \\<and>\n              enat i < llength t \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>) \\<and>\n  enat\n   (LEAST i.\n       n \\<le> i \\<and>\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\n  < llength t \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t\n                                  (LEAST i.\nn \\<le> i \\<and>\nenat i < llength t \\<and>\n\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\\<^esub>\n  \\<not> (\\<exists>k\\<ge>n.\n             enat k < llength t \\<and>\n             k < (LEAST i.\n                     n \\<le> i \\<and>\n                     enat i < llength t \\<and>\n                     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>) \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < i \\<and>\n                  enat k < llength t \\<and>\n                  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)", "by blast"], ["proof (state)\nthis:\n  \\<exists>i\\<ge>n.\n     enat i < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub> \\<and>\n     \\<not> (\\<exists>k\\<ge>n.\n                k < i \\<and>\n                enat k < llength t \\<and>\n                \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Projection\""], ["", "text \\<open>\n  In the following we introduce an operator which extracts the behavior of a certain component out of a given configuration trace.\n\\<close>"], ["", "definition proj:: \"'id \\<Rightarrow> (cnf llist) \\<Rightarrow> ('cmp llist)\" (\"\\<pi>\\<^bsub>_\\<^esub>(_)\" [0,110]60) \n  where \"proj c = lmap (\\<lambda>cnf. (\\<sigma>\\<^bsub>c\\<^esub>(cnf))) \\<circ> (lfilter (active c))\""], ["", "lemma proj_lnil [simp,intro]:\n  \"\\<pi>\\<^bsub>c\\<^esub>([]\\<^sub>l) = []\\<^sub>l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>[]\\<^sub>l = []\\<^sub>l", "using proj_def"], ["proof (prove)\nusing this:\n  proj ?c = lmap (tCMP ?c) \\<circ> lfilter (active ?c)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>[]\\<^sub>l = []\\<^sub>l", "by simp"], ["", "lemma proj_lnull [simp]:\n  \"\\<pi>\\<^bsub>c\\<^esub>(t) = []\\<^sub>l \\<longleftrightarrow> (\\<forall>k \\<in> lset t. \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<pi>\\<^bsub>c\\<^esub>t = []\\<^sub>l) =\n    (\\<forall>k\\<in>lset t. \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<pi>\\<^bsub>c\\<^esub>t = []\\<^sub>l \\<Longrightarrow>\n    \\<forall>k\\<in>lset t. \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\n 2. \\<forall>k\\<in>lset t.\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub> \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>t = []\\<^sub>l", "assume \"\\<pi>\\<^bsub>c\\<^esub>(t) = []\\<^sub>l\""], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>t = []\\<^sub>l\n\ngoal (2 subgoals):\n 1. \\<pi>\\<^bsub>c\\<^esub>t = []\\<^sub>l \\<Longrightarrow>\n    \\<forall>k\\<in>lset t. \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\n 2. \\<forall>k\\<in>lset t.\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub> \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>t = []\\<^sub>l", "hence \"lfilter (active c) t = []\\<^sub>l\""], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>t = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. lfilter (active c) t = []\\<^sub>l", "using proj_def lmap_eq_LNil"], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>t = []\\<^sub>l\n  proj ?c = lmap (tCMP ?c) \\<circ> lfilter (active ?c)\n  (lmap ?f ?xs = []\\<^sub>l) = (?xs = []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. lfilter (active c) t = []\\<^sub>l", "by auto"], ["proof (state)\nthis:\n  lfilter (active c) t = []\\<^sub>l\n\ngoal (2 subgoals):\n 1. \\<pi>\\<^bsub>c\\<^esub>t = []\\<^sub>l \\<Longrightarrow>\n    \\<forall>k\\<in>lset t. \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\n 2. \\<forall>k\\<in>lset t.\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub> \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>t = []\\<^sub>l", "thus \"\\<forall>k \\<in> lset t. \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\""], ["proof (prove)\nusing this:\n  lfilter (active c) t = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>lset t. \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "using lfilter_eq_LNil[of \"active c\"]"], ["proof (prove)\nusing this:\n  lfilter (active c) t = []\\<^sub>l\n  (lfilter (active c) ?xs = []\\<^sub>l) =\n  (\\<forall>x\\<in>lset ?xs. \\<not> \\<parallel>c\\<parallel>\\<^bsub>x\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>lset t. \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "by simp"], ["proof (state)\nthis:\n  \\<forall>k\\<in>lset t. \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>lset t.\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub> \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>t = []\\<^sub>l", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>lset t.\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub> \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>t = []\\<^sub>l", "assume \"\\<forall>k\\<in>lset t. \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\""], ["proof (state)\nthis:\n  \\<forall>k\\<in>lset t. \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>lset t.\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub> \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>t = []\\<^sub>l", "hence \"lfilter (active c) t = []\\<^sub>l\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>lset t. \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\n\ngoal (1 subgoal):\n 1. lfilter (active c) t = []\\<^sub>l", "by simp"], ["proof (state)\nthis:\n  lfilter (active c) t = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>lset t.\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub> \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>t = []\\<^sub>l", "thus \"\\<pi>\\<^bsub>c\\<^esub>(t) = []\\<^sub>l\""], ["proof (prove)\nusing this:\n  lfilter (active c) t = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>t = []\\<^sub>l", "using proj_def"], ["proof (prove)\nusing this:\n  lfilter (active c) t = []\\<^sub>l\n  proj ?c = lmap (tCMP ?c) \\<circ> lfilter (active ?c)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>t = []\\<^sub>l", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>t = []\\<^sub>l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_LCons [simp]:\n  \"\\<pi>\\<^bsub>i\\<^esub>(x #\\<^sub>l xs) = (if \\<parallel>i\\<parallel>\\<^bsub>x\\<^esub> then (\\<sigma>\\<^bsub>i\\<^esub>(x)) #\\<^sub>l (\\<pi>\\<^bsub>i\\<^esub>(xs)) else \\<pi>\\<^bsub>i\\<^esub>(xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>i\\<^esub>(x #\\<^sub>l xs) =\n    (if \\<parallel>i\\<parallel>\\<^bsub>x\\<^esub>\n     then \\<sigma>\\<^bsub>i\\<^esub>x #\\<^sub>l (\\<pi>\\<^bsub>i\\<^esub>xs)\n     else \\<pi>\\<^bsub>i\\<^esub>xs)", "using proj_def"], ["proof (prove)\nusing this:\n  proj ?c = lmap (tCMP ?c) \\<circ> lfilter (active ?c)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>i\\<^esub>(x #\\<^sub>l xs) =\n    (if \\<parallel>i\\<parallel>\\<^bsub>x\\<^esub>\n     then \\<sigma>\\<^bsub>i\\<^esub>x #\\<^sub>l (\\<pi>\\<^bsub>i\\<^esub>xs)\n     else \\<pi>\\<^bsub>i\\<^esub>xs)", "by simp"], ["", "lemma proj_llength[simp]:\n  \"llength (\\<pi>\\<^bsub>c\\<^esub>(t)) \\<le> llength t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<le> llength t", "using llength_lfilter_ile proj_def"], ["proof (prove)\nusing this:\n  llength (lfilter ?P ?xs) \\<le> llength ?xs\n  proj ?c = lmap (tCMP ?c) \\<circ> lfilter (active ?c)\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<le> llength t", "by simp"], ["", "lemma proj_ltake:\n  assumes \"\\<forall>(n'::nat)\\<le>llength t. n'\\<ge>n \\<longrightarrow> (\\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n'\\<^esub>)\"\n  shows \"\\<pi>\\<^bsub>c\\<^esub>(t) = \\<pi>\\<^bsub>c\\<^esub>(ltake n t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>t = \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "using lfilter_ltake proj_def assms"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     enat n \\<le> llength ?xs \\<longrightarrow>\n     ?i \\<le> n \\<longrightarrow> \\<not> ?P (lnth ?xs n) \\<Longrightarrow>\n  lfilter ?P ?xs = lfilter ?P (ltake (enat ?i) ?xs)\n  proj ?c = lmap (tCMP ?c) \\<circ> lfilter (active ?c)\n  \\<forall>n'.\n     enat n' \\<le> llength t \\<longrightarrow>\n     n \\<le> n' \\<longrightarrow>\n     \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n'\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>t = \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "by (metis comp_apply)"], ["", "lemma proj_finite_bound:\n  assumes \"lfinite (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))\"\n  shows \"\\<exists>n. \\<forall>n'>n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n.\n       \\<forall>n'>n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>", "using assms lfilter_lfinite[of \"active c\" \"inf_llist t\"] proj_def"], ["proof (prove)\nusing this:\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n  \\<lbrakk>lfinite (lfilter (active c) (inf_llist t));\n   \\<not> lfinite (inf_llist t)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n.\n                       \\<forall>n'>n.\n                          \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth\n                           (inf_llist t) n'\\<^esub>\n  proj ?c = lmap (tCMP ?c) \\<circ> lfilter (active ?c)\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       \\<forall>n'>n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>", "by simp"], ["", "subsubsection \"Monotonicity and Continuity\""], ["", "lemma proj_mcont:\n  shows \"mcont lSup lprefix lSup lprefix (proj c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mcont lSup lprefix lSup lprefix (proj c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mcont lSup lprefix lSup lprefix (proj c)", "have \"mcont lSup lprefix lSup lprefix (\\<lambda>x. lmap (\\<lambda>cnf. \\<sigma>\\<^bsub>c\\<^esub>(cnf)) (lfilter (active c) x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mcont lSup lprefix lSup lprefix\n     (\\<lambda>x. lmap (tCMP c) (lfilter (active c) x))", "by simp"], ["proof (state)\nthis:\n  mcont lSup lprefix lSup lprefix\n   (\\<lambda>x. lmap (tCMP c) (lfilter (active c) x))\n\ngoal (1 subgoal):\n 1. mcont lSup lprefix lSup lprefix (proj c)", "moreover"], ["proof (state)\nthis:\n  mcont lSup lprefix lSup lprefix\n   (\\<lambda>x. lmap (tCMP c) (lfilter (active c) x))\n\ngoal (1 subgoal):\n 1. mcont lSup lprefix lSup lprefix (proj c)", "have \"(\\<lambda>x. lmap (\\<lambda>cnf. \\<sigma>\\<^bsub>c\\<^esub>(cnf)) (lfilter (active c) x)) =\n    lmap (\\<lambda>cnf. \\<sigma>\\<^bsub>c\\<^esub>(cnf)) \\<circ> lfilter (active c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. lmap (tCMP c) (lfilter (active c) x)) =\n    lmap (tCMP c) \\<circ> lfilter (active c)", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. lmap (tCMP c) (lfilter (active c) x)) =\n  lmap (tCMP c) \\<circ> lfilter (active c)\n\ngoal (1 subgoal):\n 1. mcont lSup lprefix lSup lprefix (proj c)", "ultimately"], ["proof (chain)\npicking this:\n  mcont lSup lprefix lSup lprefix\n   (\\<lambda>x. lmap (tCMP c) (lfilter (active c) x))\n  (\\<lambda>x. lmap (tCMP c) (lfilter (active c) x)) =\n  lmap (tCMP c) \\<circ> lfilter (active c)", "show ?thesis"], ["proof (prove)\nusing this:\n  mcont lSup lprefix lSup lprefix\n   (\\<lambda>x. lmap (tCMP c) (lfilter (active c) x))\n  (\\<lambda>x. lmap (tCMP c) (lfilter (active c) x)) =\n  lmap (tCMP c) \\<circ> lfilter (active c)\n\ngoal (1 subgoal):\n 1. mcont lSup lprefix lSup lprefix (proj c)", "using proj_def"], ["proof (prove)\nusing this:\n  mcont lSup lprefix lSup lprefix\n   (\\<lambda>x. lmap (tCMP c) (lfilter (active c) x))\n  (\\<lambda>x. lmap (tCMP c) (lfilter (active c) x)) =\n  lmap (tCMP c) \\<circ> lfilter (active c)\n  proj ?c = lmap (tCMP ?c) \\<circ> lfilter (active ?c)\n\ngoal (1 subgoal):\n 1. mcont lSup lprefix lSup lprefix (proj c)", "by simp"], ["proof (state)\nthis:\n  mcont lSup lprefix lSup lprefix (proj c)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_mcont2mcont:\n  assumes \"mcont lub ord lSup lprefix f\"\n  shows \"mcont lub ord lSup lprefix (\\<lambda>x. \\<pi>\\<^bsub>c\\<^esub>(f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mcont lub ord lSup lprefix (\\<lambda>x. \\<pi>\\<^bsub>c\\<^esub>f x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mcont lub ord lSup lprefix (\\<lambda>x. \\<pi>\\<^bsub>c\\<^esub>f x)", "have \"mcont lSup lprefix lSup lprefix (proj c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mcont lSup lprefix lSup lprefix (proj c)", "using proj_mcont"], ["proof (prove)\nusing this:\n  mcont lSup lprefix lSup lprefix (proj ?c)\n\ngoal (1 subgoal):\n 1. mcont lSup lprefix lSup lprefix (proj c)", "by simp"], ["proof (state)\nthis:\n  mcont lSup lprefix lSup lprefix (proj c)\n\ngoal (1 subgoal):\n 1. mcont lub ord lSup lprefix (\\<lambda>x. \\<pi>\\<^bsub>c\\<^esub>f x)", "with assms"], ["proof (chain)\npicking this:\n  mcont lub ord lSup lprefix f\n  mcont lSup lprefix lSup lprefix (proj c)", "show ?thesis"], ["proof (prove)\nusing this:\n  mcont lub ord lSup lprefix f\n  mcont lSup lprefix lSup lprefix (proj c)\n\ngoal (1 subgoal):\n 1. mcont lub ord lSup lprefix (\\<lambda>x. \\<pi>\\<^bsub>c\\<^esub>f x)", "using llist.mcont2mcont[of lSup lprefix \"proj c\"]"], ["proof (prove)\nusing this:\n  mcont lub ord lSup lprefix f\n  mcont lSup lprefix lSup lprefix (proj c)\n  \\<lbrakk>mcont lSup lprefix lSup lprefix (proj c);\n   mcont ?lub ?ord lSup lprefix ?t\\<rbrakk>\n  \\<Longrightarrow> mcont ?lub ?ord lSup lprefix\n                     (\\<lambda>x. \\<pi>\\<^bsub>c\\<^esub>?t x)\n\ngoal (1 subgoal):\n 1. mcont lub ord lSup lprefix (\\<lambda>x. \\<pi>\\<^bsub>c\\<^esub>f x)", "by simp"], ["proof (state)\nthis:\n  mcont lub ord lSup lprefix (\\<lambda>x. \\<pi>\\<^bsub>c\\<^esub>f x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_mono_prefix[simp]:\n  assumes \"lprefix t t'\"\n  shows \"lprefix (\\<pi>\\<^bsub>c\\<^esub>(t)) (\\<pi>\\<^bsub>c\\<^esub>(t'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lprefix (\\<pi>\\<^bsub>c\\<^esub>t) (\\<pi>\\<^bsub>c\\<^esub>t')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lprefix (\\<pi>\\<^bsub>c\\<^esub>t) (\\<pi>\\<^bsub>c\\<^esub>t')", "from assms"], ["proof (chain)\npicking this:\n  lprefix t t'", "have \"lprefix (lfilter (active c) t) (lfilter (active c) t')\""], ["proof (prove)\nusing this:\n  lprefix t t'\n\ngoal (1 subgoal):\n 1. lprefix (lfilter (active c) t) (lfilter (active c) t')", "using lprefix_lfilterI"], ["proof (prove)\nusing this:\n  lprefix t t'\n  lprefix ?xs ?ys \\<Longrightarrow>\n  lprefix (lfilter ?P ?xs) (lfilter ?P ?ys)\n\ngoal (1 subgoal):\n 1. lprefix (lfilter (active c) t) (lfilter (active c) t')", "by simp"], ["proof (state)\nthis:\n  lprefix (lfilter (active c) t) (lfilter (active c) t')\n\ngoal (1 subgoal):\n 1. lprefix (\\<pi>\\<^bsub>c\\<^esub>t) (\\<pi>\\<^bsub>c\\<^esub>t')", "hence \"lprefix (lmap (\\<lambda>cnf. \\<sigma>\\<^bsub>c\\<^esub>(cnf)) (lfilter (active c) t))\n    (lmap (\\<lambda>cnf. \\<sigma>\\<^bsub>c\\<^esub>(cnf)) (lfilter (active c) t'))\""], ["proof (prove)\nusing this:\n  lprefix (lfilter (active c) t) (lfilter (active c) t')\n\ngoal (1 subgoal):\n 1. lprefix (lmap (tCMP c) (lfilter (active c) t))\n     (lmap (tCMP c) (lfilter (active c) t'))", "using lmap_lprefix"], ["proof (prove)\nusing this:\n  lprefix (lfilter (active c) t) (lfilter (active c) t')\n  lprefix ?xs ?ys \\<Longrightarrow> lprefix (lmap ?f ?xs) (lmap ?f ?ys)\n\ngoal (1 subgoal):\n 1. lprefix (lmap (tCMP c) (lfilter (active c) t))\n     (lmap (tCMP c) (lfilter (active c) t'))", "by simp"], ["proof (state)\nthis:\n  lprefix (lmap (tCMP c) (lfilter (active c) t))\n   (lmap (tCMP c) (lfilter (active c) t'))\n\ngoal (1 subgoal):\n 1. lprefix (\\<pi>\\<^bsub>c\\<^esub>t) (\\<pi>\\<^bsub>c\\<^esub>t')", "thus ?thesis"], ["proof (prove)\nusing this:\n  lprefix (lmap (tCMP c) (lfilter (active c) t))\n   (lmap (tCMP c) (lfilter (active c) t'))\n\ngoal (1 subgoal):\n 1. lprefix (\\<pi>\\<^bsub>c\\<^esub>t) (\\<pi>\\<^bsub>c\\<^esub>t')", "using proj_def"], ["proof (prove)\nusing this:\n  lprefix (lmap (tCMP c) (lfilter (active c) t))\n   (lmap (tCMP c) (lfilter (active c) t'))\n  proj ?c = lmap (tCMP ?c) \\<circ> lfilter (active ?c)\n\ngoal (1 subgoal):\n 1. lprefix (\\<pi>\\<^bsub>c\\<^esub>t) (\\<pi>\\<^bsub>c\\<^esub>t')", "by simp"], ["proof (state)\nthis:\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>t) (\\<pi>\\<^bsub>c\\<^esub>t')\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \"Finiteness\""], ["", "lemma proj_finite[simp]:\n  assumes \"lfinite t\"\n  shows \"lfinite (\\<pi>\\<^bsub>c\\<^esub>(t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfinite (\\<pi>\\<^bsub>c\\<^esub>t)", "using assms proj_def"], ["proof (prove)\nusing this:\n  lfinite t\n  proj ?c = lmap (tCMP ?c) \\<circ> lfilter (active ?c)\n\ngoal (1 subgoal):\n 1. lfinite (\\<pi>\\<^bsub>c\\<^esub>t)", "by simp"], ["", "lemma proj_finite2:\n  assumes \"\\<forall>(n'::nat)\\<le>llength t. n'\\<ge>n \\<longrightarrow> (\\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n'\\<^esub>)\"\n  shows \"lfinite (\\<pi>\\<^bsub>c\\<^esub>(t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfinite (\\<pi>\\<^bsub>c\\<^esub>t)", "using assms proj_ltake proj_finite"], ["proof (prove)\nusing this:\n  \\<forall>n'.\n     enat n' \\<le> llength t \\<longrightarrow>\n     n \\<le> n' \\<longrightarrow>\n     \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n'\\<^esub>\n  \\<forall>n'.\n     enat n' \\<le> llength ?t \\<longrightarrow>\n     ?n \\<le> n' \\<longrightarrow>\n     \\<not> \\<parallel>?c\\<parallel>\\<^bsub>lnth ?t\n       n'\\<^esub> \\<Longrightarrow>\n  \\<pi>\\<^bsub>?c\\<^esub>?t = \\<pi>\\<^bsub>?c\\<^esub>ltake (enat ?n) ?t\n  lfinite ?t \\<Longrightarrow> lfinite (\\<pi>\\<^bsub>?c\\<^esub>?t)\n\ngoal (1 subgoal):\n 1. lfinite (\\<pi>\\<^bsub>c\\<^esub>t)", "by simp"], ["", "lemma proj_append_lfinite[simp]:\n  fixes t t'\n  assumes \"lfinite t\"\n  shows \"\\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') = (\\<pi>\\<^bsub>c\\<^esub>(t)) @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>(t'))\" (is \"?lhs=?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n    \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n    \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')", "have \"?lhs = (lmap (\\<lambda>cnf. \\<sigma>\\<^bsub>c\\<^esub>(cnf)) \\<circ> (lfilter (active c))) (t @\\<^sub>l t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n    (lmap (tCMP c) \\<circ> lfilter (active c)) (t @\\<^sub>l t')", "using proj_def"], ["proof (prove)\nusing this:\n  proj ?c = lmap (tCMP ?c) \\<circ> lfilter (active ?c)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n    (lmap (tCMP c) \\<circ> lfilter (active c)) (t @\\<^sub>l t')", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n  (lmap (tCMP c) \\<circ> lfilter (active c)) (t @\\<^sub>l t')\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n    \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')", "also"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n  (lmap (tCMP c) \\<circ> lfilter (active c)) (t @\\<^sub>l t')\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n    \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')", "have \"\\<dots> = lmap (\\<lambda>cnf. \\<sigma>\\<^bsub>c\\<^esub>(cnf)) (lfilter (active c) (t @\\<^sub>l t'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (lmap (tCMP c) \\<circ> lfilter (active c)) (t @\\<^sub>l t') =\n    lmap (tCMP c) (lfilter (active c) (t @\\<^sub>l t'))", "by simp"], ["proof (state)\nthis:\n  (lmap (tCMP c) \\<circ> lfilter (active c)) (t @\\<^sub>l t') =\n  lmap (tCMP c) (lfilter (active c) (t @\\<^sub>l t'))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n    \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')", "also"], ["proof (state)\nthis:\n  (lmap (tCMP c) \\<circ> lfilter (active c)) (t @\\<^sub>l t') =\n  lmap (tCMP c) (lfilter (active c) (t @\\<^sub>l t'))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n    \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')", "from assms"], ["proof (chain)\npicking this:\n  lfinite t", "have \"\\<dots> = lmap (\\<lambda>cnf. \\<sigma>\\<^bsub>c\\<^esub>(cnf))\n    ((lfilter (active c) t) @\\<^sub>l (lfilter (active c) t'))\""], ["proof (prove)\nusing this:\n  lfinite t\n\ngoal (1 subgoal):\n 1. lmap (tCMP c) (lfilter (active c) (t @\\<^sub>l t')) =\n    lmap (tCMP c) (lfilter (active c) t @\\<^sub>l lfilter (active c) t')", "by simp"], ["proof (state)\nthis:\n  lmap (tCMP c) (lfilter (active c) (t @\\<^sub>l t')) =\n  lmap (tCMP c) (lfilter (active c) t @\\<^sub>l lfilter (active c) t')\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n    \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')", "also"], ["proof (state)\nthis:\n  lmap (tCMP c) (lfilter (active c) (t @\\<^sub>l t')) =\n  lmap (tCMP c) (lfilter (active c) t @\\<^sub>l lfilter (active c) t')\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n    \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')", "have \"\\<dots> = (@\\<^sub>l) (lmap (\\<lambda>cnf. \\<sigma>\\<^bsub>c\\<^esub>(cnf)) (lfilter (active c) t))\n    (lmap (\\<lambda>cnf. \\<sigma>\\<^bsub>c\\<^esub>(cnf)) (lfilter (active c) t'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lmap (tCMP c) (lfilter (active c) t @\\<^sub>l lfilter (active c) t') =\n    lmap (tCMP c) (lfilter (active c) t) @\\<^sub>l\n    lmap (tCMP c) (lfilter (active c) t')", "using lmap_lappend_distrib"], ["proof (prove)\nusing this:\n  lmap ?f (?xs @\\<^sub>l ?ys) = lmap ?f ?xs @\\<^sub>l lmap ?f ?ys\n\ngoal (1 subgoal):\n 1. lmap (tCMP c) (lfilter (active c) t @\\<^sub>l lfilter (active c) t') =\n    lmap (tCMP c) (lfilter (active c) t) @\\<^sub>l\n    lmap (tCMP c) (lfilter (active c) t')", "by simp"], ["proof (state)\nthis:\n  lmap (tCMP c) (lfilter (active c) t @\\<^sub>l lfilter (active c) t') =\n  lmap (tCMP c) (lfilter (active c) t) @\\<^sub>l\n  lmap (tCMP c) (lfilter (active c) t')\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n    \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')", "also"], ["proof (state)\nthis:\n  lmap (tCMP c) (lfilter (active c) t @\\<^sub>l lfilter (active c) t') =\n  lmap (tCMP c) (lfilter (active c) t) @\\<^sub>l\n  lmap (tCMP c) (lfilter (active c) t')\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n    \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')", "have \"\\<dots> = ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lmap (tCMP c) (lfilter (active c) t) @\\<^sub>l\n    lmap (tCMP c) (lfilter (active c) t') =\n    \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')", "using proj_def"], ["proof (prove)\nusing this:\n  proj ?c = lmap (tCMP ?c) \\<circ> lfilter (active ?c)\n\ngoal (1 subgoal):\n 1. lmap (tCMP c) (lfilter (active c) t) @\\<^sub>l\n    lmap (tCMP c) (lfilter (active c) t') =\n    \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')", "by simp"], ["proof (state)\nthis:\n  lmap (tCMP c) (lfilter (active c) t) @\\<^sub>l\n  lmap (tCMP c) (lfilter (active c) t') =\n  \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n    \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')", "finally"], ["proof (chain)\npicking this:\n  \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n  \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n  \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n    \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')", "."], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>(t @\\<^sub>l t') =\n  \\<pi>\\<^bsub>c\\<^esub>t @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>t')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_one:\n  assumes \"\\<exists>i. i < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n  shows \"llength (\\<pi>\\<^bsub>c\\<^esub>(t)) \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>i.\n     enat i < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "have \"\\<exists>x\\<in>lset t. \\<parallel>c\\<parallel>\\<^bsub>x\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<exists>i.\n     enat i < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>lset t. \\<parallel>c\\<parallel>\\<^bsub>x\\<^esub>", "using lset_conv_lnth"], ["proof (prove)\nusing this:\n  \\<exists>i.\n     enat i < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  lset ?xs = {lnth ?xs n |n. enat n < llength ?xs}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>lset t. \\<parallel>c\\<parallel>\\<^bsub>x\\<^esub>", "by force"], ["proof (state)\nthis:\n  \\<exists>x\\<in>lset t. \\<parallel>c\\<parallel>\\<^bsub>x\\<^esub>\n\ngoal (1 subgoal):\n 1. 1 \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "hence \"\\<not> lfilter (\\<lambda>k. \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>) t = []\\<^sub>l\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>lset t. \\<parallel>c\\<parallel>\\<^bsub>x\\<^esub>\n\ngoal (1 subgoal):\n 1. lfilter (active c) t \\<noteq> []\\<^sub>l", "using lfilter_eq_LNil[of \"(\\<lambda>k. \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>)\"]"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>lset t. \\<parallel>c\\<parallel>\\<^bsub>x\\<^esub>\n  (lfilter (active c) ?xs = []\\<^sub>l) =\n  (\\<forall>x\\<in>lset ?xs. \\<not> \\<parallel>c\\<parallel>\\<^bsub>x\\<^esub>)\n\ngoal (1 subgoal):\n 1. lfilter (active c) t \\<noteq> []\\<^sub>l", "by blast"], ["proof (state)\nthis:\n  lfilter (active c) t \\<noteq> []\\<^sub>l\n\ngoal (1 subgoal):\n 1. 1 \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "hence \"\\<not> \\<pi>\\<^bsub>c\\<^esub>(t) = []\\<^sub>l\""], ["proof (prove)\nusing this:\n  lfilter (active c) t \\<noteq> []\\<^sub>l\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>t \\<noteq> []\\<^sub>l", "using proj_def"], ["proof (prove)\nusing this:\n  lfilter (active c) t \\<noteq> []\\<^sub>l\n  proj ?c = lmap (tCMP ?c) \\<circ> lfilter (active ?c)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>t \\<noteq> []\\<^sub>l", "by fastforce"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>t \\<noteq> []\\<^sub>l\n\ngoal (1 subgoal):\n 1. 1 \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>t \\<noteq> []\\<^sub>l\n\ngoal (1 subgoal):\n 1. 1 \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "by (simp add: ileI1 lnull_def one_eSuc)"], ["proof (state)\nthis:\n  1 \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \"Projection not Active\""], ["", "lemma proj_not_active[simp]:\n  assumes \"enat n < llength t\"\n    and \"\\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n\\<^esub>\"\n  shows \"\\<pi>\\<^bsub>c\\<^esub>(ltake (Suc n) t) = \\<pi>\\<^bsub>c\\<^esub>(ltake n t)\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc n)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc n)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "from assms"], ["proof (chain)\npicking this:\n  enat n < llength t\n  \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n\\<^esub>", "have \"ltake (enat (Suc n)) t = (ltake (enat n) t) @\\<^sub>l ((lnth t n) #\\<^sub>l []\\<^sub>l)\""], ["proof (prove)\nusing this:\n  enat n < llength t\n  \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n\\<^esub>\n\ngoal (1 subgoal):\n 1. ltake (enat (Suc n)) t =\n    ltake (enat n) t @\\<^sub>l (lnth t n #\\<^sub>l []\\<^sub>l)", "using ltake_Suc_conv_snoc_lnth"], ["proof (prove)\nusing this:\n  enat n < llength t\n  \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n\\<^esub>\n  enat ?m < llength ?xs \\<Longrightarrow>\n  ltake (enat (Suc ?m)) ?xs =\n  ltake (enat ?m) ?xs @\\<^sub>l (lnth ?xs ?m #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. ltake (enat (Suc n)) t =\n    ltake (enat n) t @\\<^sub>l (lnth t n #\\<^sub>l []\\<^sub>l)", "by blast"], ["proof (state)\nthis:\n  ltake (enat (Suc n)) t =\n  ltake (enat n) t @\\<^sub>l (lnth t n #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc n)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "hence \"?lhs = \\<pi>\\<^bsub>c\\<^esub>((ltake (enat n) t) @\\<^sub>l ((lnth t n) #\\<^sub>l []\\<^sub>l))\""], ["proof (prove)\nusing this:\n  ltake (enat (Suc n)) t =\n  ltake (enat n) t @\\<^sub>l (lnth t n #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc n)) t =\n    \\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l\n                           (lnth t n #\\<^sub>l []\\<^sub>l))", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc n)) t =\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l\n                         (lnth t n #\\<^sub>l []\\<^sub>l))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc n)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "moreover"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc n)) t =\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l\n                         (lnth t n #\\<^sub>l []\\<^sub>l))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc n)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "have \"\\<dots> = (\\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t)) @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>((lnth t n) #\\<^sub>l []\\<^sub>l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l\n                           (lnth t n #\\<^sub>l []\\<^sub>l)) =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<pi>\\<^bsub>c\\<^esub>(lnth t n #\\<^sub>l []\\<^sub>l))", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l\n                         (lnth t n #\\<^sub>l []\\<^sub>l)) =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<pi>\\<^bsub>c\\<^esub>(lnth t n #\\<^sub>l []\\<^sub>l))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc n)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "moreover"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l\n                         (lnth t n #\\<^sub>l []\\<^sub>l)) =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<pi>\\<^bsub>c\\<^esub>(lnth t n #\\<^sub>l []\\<^sub>l))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc n)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "from assms"], ["proof (chain)\npicking this:\n  enat n < llength t\n  \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n\\<^esub>", "have \"\\<pi>\\<^bsub>c\\<^esub>((lnth t n) #\\<^sub>l []\\<^sub>l) = []\\<^sub>l\""], ["proof (prove)\nusing this:\n  enat n < llength t\n  \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(lnth t n #\\<^sub>l []\\<^sub>l) = []\\<^sub>l", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>(lnth t n #\\<^sub>l []\\<^sub>l) = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc n)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "ultimately"], ["proof (chain)\npicking this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc n)) t =\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l\n                         (lnth t n #\\<^sub>l []\\<^sub>l))\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l\n                         (lnth t n #\\<^sub>l []\\<^sub>l)) =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<pi>\\<^bsub>c\\<^esub>(lnth t n #\\<^sub>l []\\<^sub>l))\n  \\<pi>\\<^bsub>c\\<^esub>(lnth t n #\\<^sub>l []\\<^sub>l) = []\\<^sub>l", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc n)) t =\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l\n                         (lnth t n #\\<^sub>l []\\<^sub>l))\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l\n                         (lnth t n #\\<^sub>l []\\<^sub>l)) =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<pi>\\<^bsub>c\\<^esub>(lnth t n #\\<^sub>l []\\<^sub>l))\n  \\<pi>\\<^bsub>c\\<^esub>(lnth t n #\\<^sub>l []\\<^sub>l) = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc n)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc n)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_not_active_same:\n  assumes \"enat n \\<le> (n'::enat)\"\n      and \"\\<not> lfinite t \\<or> n'-1 < llength t\"\n      and \"\\<nexists>k. k\\<ge>n \\<and> k<n' \\<and> k < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\"\n    shows \"\\<pi>\\<^bsub>c\\<^esub>(ltake n' t) = \\<pi>\\<^bsub>c\\<^esub>(ltake n t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "have \"\\<pi>\\<^bsub>c\\<^esub>(ltake (n + (n' - n)) t) = \\<pi>\\<^bsub>c\\<^esub>((ltake n t) @\\<^sub>l (ltake (n'-n) (ldrop n t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n + (n' - enat n)) t =\n    \\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l\n                           ltake (n' - enat n) (ldrop (enat n) t))", "by (simp add: ltake_plus_conv_lappend)"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n + (n' - enat n)) t =\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l\n                         ltake (n' - enat n) (ldrop (enat n) t))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "hence \"\\<pi>\\<^bsub>c\\<^esub>(ltake (n + (n' - n)) t) =\n    (\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>(ltake (n'-n) (ldrop n t)))\""], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n + (n' - enat n)) t =\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l\n                         ltake (n' - enat n) (ldrop (enat n) t))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n + (n' - enat n)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<pi>\\<^bsub>c\\<^esub>ltake (n' - enat n) (ldrop (enat n) t))", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n + (n' - enat n)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<pi>\\<^bsub>c\\<^esub>ltake (n' - enat n) (ldrop (enat n) t))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "moreover"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n + (n' - enat n)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<pi>\\<^bsub>c\\<^esub>ltake (n' - enat n) (ldrop (enat n) t))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "have \"\\<pi>\\<^bsub>c\\<^esub>(ltake (n'-n) (ldrop n t)) = []\\<^sub>l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (n' - enat n) (ldrop (enat n) t) =\n    []\\<^sub>l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (n' - enat n) (ldrop (enat n) t) =\n    []\\<^sub>l", "have \"\\<forall>k\\<in>{lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |\n      na. enat na < llength (ltake (n' - enat n) (ldrop (enat n) t))}. \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>{lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n                    enat na\n                    < llength (ltake (n' - enat n) (ldrop (enat n) t))}.\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n                enat na\n                < llength\n                   (ltake (n' - enat n)\n                     (ldrop (enat n) t))} \\<Longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n                enat na\n                < llength\n                   (ltake (n' - enat n)\n                     (ldrop (enat n) t))} \\<Longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "assume \"k\\<in>{lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |\n        na. enat na < llength (ltake (n' - enat n) (ldrop (enat n) t))}\""], ["proof (state)\nthis:\n  k \\<in> {lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n           enat na < llength (ltake (n' - enat n) (ldrop (enat n) t))}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n                enat na\n                < llength\n                   (ltake (n' - enat n)\n                     (ldrop (enat n) t))} \\<Longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "then"], ["proof (chain)\npicking this:\n  k \\<in> {lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n           enat na < llength (ltake (n' - enat n) (ldrop (enat n) t))}", "obtain k' where \"enat k' < llength (ltake (n' - enat n) (ldrop (enat n) t))\"\n        and \"k=lnth (ltake (n' - enat n) (ldrop (enat n) t)) k'\""], ["proof (prove)\nusing this:\n  k \\<in> {lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n           enat na < llength (ltake (n' - enat n) (ldrop (enat n) t))}\n\ngoal (1 subgoal):\n 1. (\\<And>k'.\n        \\<lbrakk>enat k' < llength (ltake (n' - enat n) (ldrop (enat n) t));\n         k = lnth (ltake (n' - enat n) (ldrop (enat n) t)) k'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  enat k' < llength (ltake (n' - enat n) (ldrop (enat n) t))\n  k = lnth (ltake (n' - enat n) (ldrop (enat n) t)) k'\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n                enat na\n                < llength\n                   (ltake (n' - enat n)\n                     (ldrop (enat n) t))} \\<Longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "have \"enat (k' + n) < llength t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (k' + n) < llength t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. enat (k' + n) < llength t", "from \\<open>enat k' < llength (ltake (n' - enat n) (ldrop (enat n) t))\\<close>"], ["proof (chain)\npicking this:\n  enat k' < llength (ltake (n' - enat n) (ldrop (enat n) t))", "have \"enat k' < n'-n\""], ["proof (prove)\nusing this:\n  enat k' < llength (ltake (n' - enat n) (ldrop (enat n) t))\n\ngoal (1 subgoal):\n 1. enat k' < n' - enat n", "by simp"], ["proof (state)\nthis:\n  enat k' < n' - enat n\n\ngoal (1 subgoal):\n 1. enat (k' + n) < llength t", "hence \"enat k' + n < n'\""], ["proof (prove)\nusing this:\n  enat k' < n' - enat n\n\ngoal (1 subgoal):\n 1. enat k' + enat n < n'", "using assms(1) enat_min"], ["proof (prove)\nusing this:\n  enat k' < n' - enat n\n  enat n \\<le> n'\n  \\<lbrakk>enat ?n' \\<le> ?m; enat ?n < ?m - enat ?n'\\<rbrakk>\n  \\<Longrightarrow> enat ?n + enat ?n' < ?m\n\ngoal (1 subgoal):\n 1. enat k' + enat n < n'", "by auto"], ["proof (state)\nthis:\n  enat k' + enat n < n'\n\ngoal (1 subgoal):\n 1. enat (k' + n) < llength t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (k' + n) < llength t", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> enat (k' + n) < llength t\n 2. \\<not> ?P \\<Longrightarrow> enat (k' + n) < llength t", "assume \"lfinite t\""], ["proof (state)\nthis:\n  lfinite t\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> enat (k' + n) < llength t\n 2. \\<not> ?P \\<Longrightarrow> enat (k' + n) < llength t", "with \\<open>\\<not> lfinite t \\<or> n'-1 < llength t\\<close>"], ["proof (chain)\npicking this:\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  lfinite t", "have \"n'-1<llength t\""], ["proof (prove)\nusing this:\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  lfinite t\n\ngoal (1 subgoal):\n 1. n' - 1 < llength t", "by simp"], ["proof (state)\nthis:\n  n' - 1 < llength t\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> enat (k' + n) < llength t\n 2. \\<not> ?P \\<Longrightarrow> enat (k' + n) < llength t", "hence \"n'< eSuc (llength t)\""], ["proof (prove)\nusing this:\n  n' - 1 < llength t\n\ngoal (1 subgoal):\n 1. n' < eSuc (llength t)", "by (metis eSuc_minus_1 enat_minus_mono1 leD leI)"], ["proof (state)\nthis:\n  n' < eSuc (llength t)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> enat (k' + n) < llength t\n 2. \\<not> ?P \\<Longrightarrow> enat (k' + n) < llength t", "hence \"n'\\<le> llength t\""], ["proof (prove)\nusing this:\n  n' < eSuc (llength t)\n\ngoal (1 subgoal):\n 1. n' \\<le> llength t", "using eSuc_ile_mono ileI1"], ["proof (prove)\nusing this:\n  n' < eSuc (llength t)\n  (eSuc ?n \\<le> eSuc ?m) = (?n \\<le> ?m)\n  ?m < ?n \\<Longrightarrow> eSuc ?m \\<le> ?n\n\ngoal (1 subgoal):\n 1. n' \\<le> llength t", "by blast"], ["proof (state)\nthis:\n  n' \\<le> llength t\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> enat (k' + n) < llength t\n 2. \\<not> ?P \\<Longrightarrow> enat (k' + n) < llength t", "with \\<open>enat k' + n < n'\\<close>"], ["proof (chain)\npicking this:\n  enat k' + enat n < n'\n  n' \\<le> llength t", "show ?thesis"], ["proof (prove)\nusing this:\n  enat k' + enat n < n'\n  n' \\<le> llength t\n\ngoal (1 subgoal):\n 1. enat (k' + n) < llength t", "by (simp add: add.commute)"], ["proof (state)\nthis:\n  enat (k' + n) < llength t\n\ngoal (1 subgoal):\n 1. \\<not> lfinite t \\<Longrightarrow> enat (k' + n) < llength t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> lfinite t \\<Longrightarrow> enat (k' + n) < llength t", "assume \"\\<not> lfinite t\""], ["proof (state)\nthis:\n  \\<not> lfinite t\n\ngoal (1 subgoal):\n 1. \\<not> lfinite t \\<Longrightarrow> enat (k' + n) < llength t", "hence \"llength t = \\<infinity>\""], ["proof (prove)\nusing this:\n  \\<not> lfinite t\n\ngoal (1 subgoal):\n 1. llength t = \\<infinity>", "using not_lfinite_llength"], ["proof (prove)\nusing this:\n  \\<not> lfinite t\n  \\<not> lfinite ?xs \\<Longrightarrow> llength ?xs = \\<infinity>\n\ngoal (1 subgoal):\n 1. llength t = \\<infinity>", "by auto"], ["proof (state)\nthis:\n  llength t = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<not> lfinite t \\<Longrightarrow> enat (k' + n) < llength t", "thus ?thesis"], ["proof (prove)\nusing this:\n  llength t = \\<infinity>\n\ngoal (1 subgoal):\n 1. enat (k' + n) < llength t", "by simp"], ["proof (state)\nthis:\n  enat (k' + n) < llength t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  enat (k' + n) < llength t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  enat (k' + n) < llength t\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n                enat na\n                < llength\n                   (ltake (n' - enat n)\n                     (ldrop (enat n) t))} \\<Longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "moreover"], ["proof (state)\nthis:\n  enat (k' + n) < llength t\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n                enat na\n                < llength\n                   (ltake (n' - enat n)\n                     (ldrop (enat n) t))} \\<Longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "have \"k = lnth t (k' + n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k = lnth t (k' + n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k = lnth t (k' + n)", "from \\<open>enat k' < llength (ltake (n' - enat n) (ldrop (enat n) t))\\<close>"], ["proof (chain)\npicking this:\n  enat k' < llength (ltake (n' - enat n) (ldrop (enat n) t))", "have \"enat k'<n' - enat n\""], ["proof (prove)\nusing this:\n  enat k' < llength (ltake (n' - enat n) (ldrop (enat n) t))\n\ngoal (1 subgoal):\n 1. enat k' < n' - enat n", "by auto"], ["proof (state)\nthis:\n  enat k' < n' - enat n\n\ngoal (1 subgoal):\n 1. k = lnth t (k' + n)", "hence \"lnth (ltake (n' - enat n) (ldrop (enat n) t)) k' = lnth (ldrop (enat n) t) k'\""], ["proof (prove)\nusing this:\n  enat k' < n' - enat n\n\ngoal (1 subgoal):\n 1. lnth (ltake (n' - enat n) (ldrop (enat n) t)) k' =\n    lnth (ldrop (enat n) t) k'", "using lnth_ltake[of k' \"n' - enat n\"]"], ["proof (prove)\nusing this:\n  enat k' < n' - enat n\n  enat k' < n' - enat n \\<Longrightarrow>\n  lnth (ltake (n' - enat n) ?xs) k' = lnth ?xs k'\n\ngoal (1 subgoal):\n 1. lnth (ltake (n' - enat n) (ldrop (enat n) t)) k' =\n    lnth (ldrop (enat n) t) k'", "by simp"], ["proof (state)\nthis:\n  lnth (ltake (n' - enat n) (ldrop (enat n) t)) k' =\n  lnth (ldrop (enat n) t) k'\n\ngoal (1 subgoal):\n 1. k = lnth t (k' + n)", "with \\<open>enat (k' + n) < llength t\\<close>"], ["proof (chain)\npicking this:\n  enat (k' + n) < llength t\n  lnth (ltake (n' - enat n) (ldrop (enat n) t)) k' =\n  lnth (ldrop (enat n) t) k'", "show ?thesis"], ["proof (prove)\nusing this:\n  enat (k' + n) < llength t\n  lnth (ltake (n' - enat n) (ldrop (enat n) t)) k' =\n  lnth (ldrop (enat n) t) k'\n\ngoal (1 subgoal):\n 1. k = lnth t (k' + n)", "using lnth_ldrop[of n k' t ]"], ["proof (prove)\nusing this:\n  enat (k' + n) < llength t\n  lnth (ltake (n' - enat n) (ldrop (enat n) t)) k' =\n  lnth (ldrop (enat n) t) k'\n  enat n + enat k' < llength t \\<Longrightarrow>\n  lnth (ldrop (enat n) t) k' = lnth t (k' + the_enat (enat n))\n\ngoal (1 subgoal):\n 1. k = lnth t (k' + n)", "using \\<open>k = lnth (ltake (n' - enat n) (ldrop (enat n) t)) k'\\<close>"], ["proof (prove)\nusing this:\n  enat (k' + n) < llength t\n  lnth (ltake (n' - enat n) (ldrop (enat n) t)) k' =\n  lnth (ldrop (enat n) t) k'\n  enat n + enat k' < llength t \\<Longrightarrow>\n  lnth (ldrop (enat n) t) k' = lnth t (k' + the_enat (enat n))\n  k = lnth (ltake (n' - enat n) (ldrop (enat n) t)) k'\n\ngoal (1 subgoal):\n 1. k = lnth t (k' + n)", "by (simp add: add.commute)"], ["proof (state)\nthis:\n  k = lnth t (k' + n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k = lnth t (k' + n)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n                enat na\n                < llength\n                   (ltake (n' - enat n)\n                     (ldrop (enat n) t))} \\<Longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "moreover"], ["proof (state)\nthis:\n  k = lnth t (k' + n)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n                enat na\n                < llength\n                   (ltake (n' - enat n)\n                     (ldrop (enat n) t))} \\<Longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "from \\<open>enat n \\<le> (n'::enat)\\<close>"], ["proof (chain)\npicking this:\n  enat n \\<le> n'", "have \"k' + the_enat n\\<ge>n\""], ["proof (prove)\nusing this:\n  enat n \\<le> n'\n\ngoal (1 subgoal):\n 1. n \\<le> k' + the_enat (enat n)", "by auto"], ["proof (state)\nthis:\n  n \\<le> k' + the_enat (enat n)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n                enat na\n                < llength\n                   (ltake (n' - enat n)\n                     (ldrop (enat n) t))} \\<Longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "moreover"], ["proof (state)\nthis:\n  n \\<le> k' + the_enat (enat n)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n                enat na\n                < llength\n                   (ltake (n' - enat n)\n                     (ldrop (enat n) t))} \\<Longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "from \\<open>enat k' < llength (ltake (n' - enat n) (ldrop (enat n) t))\\<close>"], ["proof (chain)\npicking this:\n  enat k' < llength (ltake (n' - enat n) (ldrop (enat n) t))", "have \"k' + n<n'\""], ["proof (prove)\nusing this:\n  enat k' < llength (ltake (n' - enat n) (ldrop (enat n) t))\n\ngoal (1 subgoal):\n 1. enat (k' + n) < n'", "using assms(1) enat_min"], ["proof (prove)\nusing this:\n  enat k' < llength (ltake (n' - enat n) (ldrop (enat n) t))\n  enat n \\<le> n'\n  \\<lbrakk>enat ?n' \\<le> ?m; enat ?n < ?m - enat ?n'\\<rbrakk>\n  \\<Longrightarrow> enat ?n + enat ?n' < ?m\n\ngoal (1 subgoal):\n 1. enat (k' + n) < n'", "by auto"], ["proof (state)\nthis:\n  enat (k' + n) < n'\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n                enat na\n                < llength\n                   (ltake (n' - enat n)\n                     (ldrop (enat n) t))} \\<Longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  enat (k' + n) < llength t\n  k = lnth t (k' + n)\n  n \\<le> k' + the_enat (enat n)\n  enat (k' + n) < n'", "show \"\\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\""], ["proof (prove)\nusing this:\n  enat (k' + n) < llength t\n  k = lnth t (k' + n)\n  n \\<le> k' + the_enat (enat n)\n  enat (k' + n) < n'\n\ngoal (1 subgoal):\n 1. \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "using \\<open>\\<nexists>k. k\\<ge>n \\<and> k<n' \\<and> k < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\\<close>"], ["proof (prove)\nusing this:\n  enat (k' + n) < llength t\n  k = lnth t (k' + n)\n  n \\<le> k' + the_enat (enat n)\n  enat (k' + n) < n'\n  \\<not> (\\<exists>k\\<ge>n.\n             enat k < n' \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "by simp"], ["proof (state)\nthis:\n  \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>k\\<in>{lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n                  enat na\n                  < llength (ltake (n' - enat n) (ldrop (enat n) t))}.\n     \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (n' - enat n) (ldrop (enat n) t) =\n    []\\<^sub>l", "hence \"\\<forall>k\\<in>lset (ltake (n'-n) (ldrop n t)). \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>{lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n                  enat na\n                  < llength (ltake (n' - enat n) (ldrop (enat n) t))}.\n     \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>lset (ltake (n' - enat n) (ldrop (enat n) t)).\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "using lset_conv_lnth[of \"(ltake (n' - enat n) (ldrop (enat n) t))\"]"], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>{lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n                  enat na\n                  < llength (ltake (n' - enat n) (ldrop (enat n) t))}.\n     \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\n  lset (ltake (n' - enat n) (ldrop (enat n) t)) =\n  {lnth (ltake (n' - enat n) (ldrop (enat n) t)) na |na.\n   enat na < llength (ltake (n' - enat n) (ldrop (enat n) t))}\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>lset (ltake (n' - enat n) (ldrop (enat n) t)).\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "by simp"], ["proof (state)\nthis:\n  \\<forall>k\\<in>lset (ltake (n' - enat n) (ldrop (enat n) t)).\n     \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (n' - enat n) (ldrop (enat n) t) =\n    []\\<^sub>l", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>lset (ltake (n' - enat n) (ldrop (enat n) t)).\n     \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (n' - enat n) (ldrop (enat n) t) =\n    []\\<^sub>l", "using proj_lnull"], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>lset (ltake (n' - enat n) (ldrop (enat n) t)).\n     \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\n  (\\<pi>\\<^bsub>?c\\<^esub>?t = []\\<^sub>l) =\n  (\\<forall>k\\<in>lset ?t. \\<not> \\<parallel>?c\\<parallel>\\<^bsub>k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (n' - enat n) (ldrop (enat n) t) =\n    []\\<^sub>l", "by auto"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (n' - enat n) (ldrop (enat n) t) = []\\<^sub>l\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (n' - enat n) (ldrop (enat n) t) = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "moreover"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (n' - enat n) (ldrop (enat n) t) = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "from assms"], ["proof (chain)\npicking this:\n  enat n \\<le> n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<not> (\\<exists>k\\<ge>n.\n             enat k < n' \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)", "have \"n + (n' - n) = n'\""], ["proof (prove)\nusing this:\n  enat n \\<le> n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<not> (\\<exists>k\\<ge>n.\n             enat k < n' \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. enat n + (n' - enat n) = n'", "by (meson enat.distinct(1) enat_add_sub_same enat_diff_cancel_left enat_le_plus_same(1) less_imp_le)"], ["proof (state)\nthis:\n  enat n + (n' - enat n) = n'\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "ultimately"], ["proof (chain)\npicking this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n + (n' - enat n)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<pi>\\<^bsub>c\\<^esub>ltake (n' - enat n) (ldrop (enat n) t))\n  \\<pi>\\<^bsub>c\\<^esub>ltake (n' - enat n) (ldrop (enat n) t) = []\\<^sub>l\n  enat n + (n' - enat n) = n'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n + (n' - enat n)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<pi>\\<^bsub>c\\<^esub>ltake (n' - enat n) (ldrop (enat n) t))\n  \\<pi>\\<^bsub>c\\<^esub>ltake (n' - enat n) (ldrop (enat n) t) = []\\<^sub>l\n  enat n + (n' - enat n) = n'\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t = \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \"Projection Active\""], ["", "lemma proj_active[simp]:\n  assumes \"enat i < llength t\" \"\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n  shows \"\\<pi>\\<^bsub>c\\<^esub>(ltake (Suc i) t) = (\\<pi>\\<^bsub>c\\<^esub>(ltake i t)) @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l []\\<^sub>l)\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "from assms"], ["proof (chain)\npicking this:\n  enat i < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "have \"ltake (enat (Suc i)) t = (ltake (enat i) t) @\\<^sub>l ((lnth t i) #\\<^sub>l []\\<^sub>l)\""], ["proof (prove)\nusing this:\n  enat i < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. ltake (enat (Suc i)) t =\n    ltake (enat i) t @\\<^sub>l (lnth t i #\\<^sub>l []\\<^sub>l)", "using ltake_Suc_conv_snoc_lnth"], ["proof (prove)\nusing this:\n  enat i < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  enat ?m < llength ?xs \\<Longrightarrow>\n  ltake (enat (Suc ?m)) ?xs =\n  ltake (enat ?m) ?xs @\\<^sub>l (lnth ?xs ?m #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. ltake (enat (Suc i)) t =\n    ltake (enat i) t @\\<^sub>l (lnth t i #\\<^sub>l []\\<^sub>l)", "by blast"], ["proof (state)\nthis:\n  ltake (enat (Suc i)) t =\n  ltake (enat i) t @\\<^sub>l (lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "hence \"?lhs = \\<pi>\\<^bsub>c\\<^esub>((ltake (enat i) t) @\\<^sub>l ((lnth t i) #\\<^sub>l []\\<^sub>l))\""], ["proof (prove)\nusing this:\n  ltake (enat (Suc i)) t =\n  ltake (enat i) t @\\<^sub>l (lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>(ltake (enat i) t @\\<^sub>l\n                           (lnth t i #\\<^sub>l []\\<^sub>l))", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat i) t @\\<^sub>l\n                         (lnth t i #\\<^sub>l []\\<^sub>l))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "moreover"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat i) t @\\<^sub>l\n                         (lnth t i #\\<^sub>l []\\<^sub>l))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "have \"\\<dots> = (\\<pi>\\<^bsub>c\\<^esub>(ltake (enat i) t)) @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>((lnth t i) #\\<^sub>l []\\<^sub>l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(ltake (enat i) t @\\<^sub>l\n                           (lnth t i #\\<^sub>l []\\<^sub>l)) =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<pi>\\<^bsub>c\\<^esub>(lnth t i #\\<^sub>l []\\<^sub>l))", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat i) t @\\<^sub>l\n                         (lnth t i #\\<^sub>l []\\<^sub>l)) =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<pi>\\<^bsub>c\\<^esub>(lnth t i #\\<^sub>l []\\<^sub>l))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "moreover"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat i) t @\\<^sub>l\n                         (lnth t i #\\<^sub>l []\\<^sub>l)) =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<pi>\\<^bsub>c\\<^esub>(lnth t i #\\<^sub>l []\\<^sub>l))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "from assms"], ["proof (chain)\npicking this:\n  enat i < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "have \"\\<pi>\\<^bsub>c\\<^esub>((lnth t i) #\\<^sub>l []\\<^sub>l) = (\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l []\\<^sub>l\""], ["proof (prove)\nusing this:\n  enat i < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>(lnth t i #\\<^sub>l []\\<^sub>l) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>(lnth t i #\\<^sub>l []\\<^sub>l) =\n  \\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "ultimately"], ["proof (chain)\npicking this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat i) t @\\<^sub>l\n                         (lnth t i #\\<^sub>l []\\<^sub>l))\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat i) t @\\<^sub>l\n                         (lnth t i #\\<^sub>l []\\<^sub>l)) =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<pi>\\<^bsub>c\\<^esub>(lnth t i #\\<^sub>l []\\<^sub>l))\n  \\<pi>\\<^bsub>c\\<^esub>(lnth t i #\\<^sub>l []\\<^sub>l) =\n  \\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat i) t @\\<^sub>l\n                         (lnth t i #\\<^sub>l []\\<^sub>l))\n  \\<pi>\\<^bsub>c\\<^esub>(ltake (enat i) t @\\<^sub>l\n                         (lnth t i #\\<^sub>l []\\<^sub>l)) =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<pi>\\<^bsub>c\\<^esub>(lnth t i #\\<^sub>l []\\<^sub>l))\n  \\<pi>\\<^bsub>c\\<^esub>(lnth t i #\\<^sub>l []\\<^sub>l) =\n  \\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_active_append:\n  assumes a1: \"(n::nat) \\<le> i\"\n      and a2: \"enat i < (n'::enat)\"\n      and a3: \"\\<not> lfinite t \\<or> n'-1 < llength t\"\n      and a4: \"\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n      and \"\\<forall>i'. (n \\<le> i' \\<and> enat i'<n' \\<and> i' < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub>) \\<longrightarrow> (i' = i)\"\n    shows \"\\<pi>\\<^bsub>c\\<^esub>(ltake n' t) = (\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l []\\<^sub>l)\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "have \"?lhs = \\<pi>\\<^bsub>c\\<^esub>(ltake (Suc i) t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t", "from a2"], ["proof (chain)\npicking this:\n  enat i < n'", "have \"Suc i \\<le> n'\""], ["proof (prove)\nusing this:\n  enat i < n'\n\ngoal (1 subgoal):\n 1. enat (Suc i) \\<le> n'", "by (simp add: Suc_ile_eq)"], ["proof (state)\nthis:\n  enat (Suc i) \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t", "moreover"], ["proof (state)\nthis:\n  enat (Suc i) \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t", "from a3"], ["proof (chain)\npicking this:\n  \\<not> lfinite t \\<or> n' - 1 < llength t", "have \"\\<not> lfinite t \\<or> n'-1 < llength t\""], ["proof (prove)\nusing this:\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n\ngoal (1 subgoal):\n 1. \\<not> lfinite t \\<or> n' - 1 < llength t", "by simp"], ["proof (state)\nthis:\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t", "moreover"], ["proof (state)\nthis:\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t", "have \"\\<nexists>k. enat k\\<ge>enat (Suc i) \\<and> k<n' \\<and> k < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>k.\n       enat (Suc i) \\<le> enat k \\<and>\n       enat k < n' \\<and>\n       enat k < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k.\n       enat (Suc i) \\<le> enat k \\<and>\n       enat k < n' \\<and>\n       enat k < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "assume \"\\<exists>k. enat k\\<ge>enat (Suc i) \\<and> k<n' \\<and> k < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\""], ["proof (state)\nthis:\n  \\<exists>k.\n     enat (Suc i) \\<le> enat k \\<and>\n     enat k < n' \\<and>\n     enat k < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       enat (Suc i) \\<le> enat k \\<and>\n       enat k < n' \\<and>\n       enat k < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>k.\n     enat (Suc i) \\<le> enat k \\<and>\n     enat k < n' \\<and>\n     enat k < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>", "obtain k where \"enat k\\<ge>enat (Suc i)\" and \"k<n'\" and \"k < llength t\" and \"\\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<exists>k.\n     enat (Suc i) \\<le> enat k \\<and>\n     enat k < n' \\<and>\n     enat k < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>enat (Suc i) \\<le> enat k; enat k < n'; enat k < llength t;\n         \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  enat (Suc i) \\<le> enat k\n  enat k < n'\n  enat k < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       enat (Suc i) \\<le> enat k \\<and>\n       enat k < n' \\<and>\n       enat k < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  enat (Suc i) \\<le> enat k\n  enat k < n'\n  enat k < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       enat (Suc i) \\<le> enat k \\<and>\n       enat k < n' \\<and>\n       enat k < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "from \\<open>enat k\\<ge>enat (Suc i)\\<close>"], ["proof (chain)\npicking this:\n  enat (Suc i) \\<le> enat k", "have \"enat k\\<ge>n\""], ["proof (prove)\nusing this:\n  enat (Suc i) \\<le> enat k\n\ngoal (1 subgoal):\n 1. enat n \\<le> enat k", "using assms"], ["proof (prove)\nusing this:\n  enat (Suc i) \\<le> enat k\n  n \\<le> i\n  enat i < n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  \\<forall>i'.\n     n \\<le> i' \\<and>\n     enat i' < n' \\<and>\n     enat i' < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<longrightarrow>\n     i' = i\n\ngoal (1 subgoal):\n 1. enat n \\<le> enat k", "by (meson dual_order.trans enat_ord_simps(1) le_SucI)"], ["proof (state)\nthis:\n  enat n \\<le> enat k\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       enat (Suc i) \\<le> enat k \\<and>\n       enat k < n' \\<and>\n       enat k < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  enat (Suc i) \\<le> enat k\n  enat k < n'\n  enat k < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n  enat n \\<le> enat k", "have \"enat k=enat i\""], ["proof (prove)\nusing this:\n  enat (Suc i) \\<le> enat k\n  enat k < n'\n  enat k < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n  enat n \\<le> enat k\n\ngoal (1 subgoal):\n 1. enat k = enat i", "using assms"], ["proof (prove)\nusing this:\n  enat (Suc i) \\<le> enat k\n  enat k < n'\n  enat k < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n  enat n \\<le> enat k\n  n \\<le> i\n  enat i < n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  \\<forall>i'.\n     n \\<le> i' \\<and>\n     enat i' < n' \\<and>\n     enat i' < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<longrightarrow>\n     i' = i\n\ngoal (1 subgoal):\n 1. enat k = enat i", "using enat_ord_simps(1)"], ["proof (prove)\nusing this:\n  enat (Suc i) \\<le> enat k\n  enat k < n'\n  enat k < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n  enat n \\<le> enat k\n  n \\<le> i\n  enat i < n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  \\<forall>i'.\n     n \\<le> i' \\<and>\n     enat i' < n' \\<and>\n     enat i' < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<longrightarrow>\n     i' = i\n  (enat ?m \\<le> enat ?n) = (?m \\<le> ?n)\n\ngoal (1 subgoal):\n 1. enat k = enat i", "by blast"], ["proof (state)\nthis:\n  enat k = enat i\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       enat (Suc i) \\<le> enat k \\<and>\n       enat k < n' \\<and>\n       enat k < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "with \\<open>enat k\\<ge>enat (Suc i)\\<close>"], ["proof (chain)\npicking this:\n  enat (Suc i) \\<le> enat k\n  enat k = enat i", "show False"], ["proof (prove)\nusing this:\n  enat (Suc i) \\<le> enat k\n  enat k = enat i\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>k.\n     enat (Suc i) \\<le> enat k \\<and>\n     enat k < n' \\<and>\n     enat k < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t", "ultimately"], ["proof (chain)\npicking this:\n  enat (Suc i) \\<le> n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<nexists>k.\n     enat (Suc i) \\<le> enat k \\<and>\n     enat k < n' \\<and>\n     enat k < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  enat (Suc i) \\<le> n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<nexists>k.\n     enat (Suc i) \\<le> enat k \\<and>\n     enat k < n' \\<and>\n     enat k < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t", "using proj_not_active_same[of \"Suc i\" n' t c]"], ["proof (prove)\nusing this:\n  enat (Suc i) \\<le> n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<nexists>k.\n     enat (Suc i) \\<le> enat k \\<and>\n     enat k < n' \\<and>\n     enat k < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n  \\<lbrakk>enat (Suc i) \\<le> n'; \\<not> lfinite t \\<or> n' - 1 < llength t;\n   \\<not> (\\<exists>k\\<ge>Suc i.\n              enat k < n' \\<and>\n              enat k < llength t \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\\<rbrakk>\n  \\<Longrightarrow> \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n                    \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "also"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "have \"\\<dots> = (\\<pi>\\<^bsub>c\\<^esub>(ltake i t)) @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l []\\<^sub>l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "have \"i < llength t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat i < llength t", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> enat i < llength t\n 2. \\<not> ?P \\<Longrightarrow> enat i < llength t", "assume \"lfinite t\""], ["proof (state)\nthis:\n  lfinite t\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> enat i < llength t\n 2. \\<not> ?P \\<Longrightarrow> enat i < llength t", "with a3"], ["proof (chain)\npicking this:\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  lfinite t", "have \"n'-1 < llength t\""], ["proof (prove)\nusing this:\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  lfinite t\n\ngoal (1 subgoal):\n 1. n' - 1 < llength t", "by simp"], ["proof (state)\nthis:\n  n' - 1 < llength t\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> enat i < llength t\n 2. \\<not> ?P \\<Longrightarrow> enat i < llength t", "hence \"n' \\<le> llength t\""], ["proof (prove)\nusing this:\n  n' - 1 < llength t\n\ngoal (1 subgoal):\n 1. n' \\<le> llength t", "by (metis eSuc_minus_1 enat_minus_mono1 ileI1 not_le)"], ["proof (state)\nthis:\n  n' \\<le> llength t\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> enat i < llength t\n 2. \\<not> ?P \\<Longrightarrow> enat i < llength t", "with a2"], ["proof (chain)\npicking this:\n  enat i < n'\n  n' \\<le> llength t", "show \"enat i < llength t\""], ["proof (prove)\nusing this:\n  enat i < n'\n  n' \\<le> llength t\n\ngoal (1 subgoal):\n 1. enat i < llength t", "by simp"], ["proof (state)\nthis:\n  enat i < llength t\n\ngoal (1 subgoal):\n 1. \\<not> lfinite t \\<Longrightarrow> enat i < llength t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> lfinite t \\<Longrightarrow> enat i < llength t", "assume \"\\<not> lfinite t\""], ["proof (state)\nthis:\n  \\<not> lfinite t\n\ngoal (1 subgoal):\n 1. \\<not> lfinite t \\<Longrightarrow> enat i < llength t", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> lfinite t\n\ngoal (1 subgoal):\n 1. enat i < llength t", "by (metis enat_ord_code(4) llength_eq_infty_conv_lfinite)"], ["proof (state)\nthis:\n  enat i < llength t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  enat i < llength t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "with a4"], ["proof (chain)\npicking this:\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  enat i < llength t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  enat i < llength t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "also"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "have \"\\<dots> = ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "from a1"], ["proof (chain)\npicking this:\n  n \\<le> i", "have \"enat n \\<le> enat i\""], ["proof (prove)\nusing this:\n  n \\<le> i\n\ngoal (1 subgoal):\n 1. enat n \\<le> enat i", "by simp"], ["proof (state)\nthis:\n  enat n \\<le> enat i\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "moreover"], ["proof (state)\nthis:\n  enat n \\<le> enat i\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "from a2 a3"], ["proof (chain)\npicking this:\n  enat i < n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t", "have \"\\<not> lfinite t \\<or> enat i-1 < llength t\""], ["proof (prove)\nusing this:\n  enat i < n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n\ngoal (1 subgoal):\n 1. \\<not> lfinite t \\<or> enat i - 1 < llength t", "using enat_minus_mono1 less_imp_le order.strict_trans1"], ["proof (prove)\nusing this:\n  enat i < n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  ?x \\<le> ?y \\<Longrightarrow> ?x - ?m \\<le> ?y - ?m\n  ?x < ?y \\<Longrightarrow> ?x \\<le> ?y\n  \\<lbrakk>?a \\<le> ?b; ?b < ?c\\<rbrakk> \\<Longrightarrow> ?a < ?c\n\ngoal (1 subgoal):\n 1. \\<not> lfinite t \\<or> enat i - 1 < llength t", "by blast"], ["proof (state)\nthis:\n  \\<not> lfinite t \\<or> enat i - 1 < llength t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "moreover"], ["proof (state)\nthis:\n  \\<not> lfinite t \\<or> enat i - 1 < llength t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "have \"\\<nexists>k. k\\<ge>n \\<and> enat k<enat i \\<and> enat k < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>n.\n               enat k < enat i \\<and>\n               enat k < llength t \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       enat k < enat i \\<and>\n       enat k < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "assume \"\\<exists>k. k\\<ge>n \\<and> enat k<enat i \\<and> enat k < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\""], ["proof (state)\nthis:\n  \\<exists>k\\<ge>n.\n     enat k < enat i \\<and>\n     enat k < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       enat k < enat i \\<and>\n       enat k < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>k\\<ge>n.\n     enat k < enat i \\<and>\n     enat k < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>", "obtain k where \"k\\<ge>n\" and \"enat k<enat i\" and \"enat k < llength t\" and \"\\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<exists>k\\<ge>n.\n     enat k < enat i \\<and>\n     enat k < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>n \\<le> k; enat k < enat i; enat k < llength t;\n         \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  n \\<le> k\n  enat k < enat i\n  enat k < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       enat k < enat i \\<and>\n       enat k < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  n \\<le> k\n  enat k < enat i\n  enat k < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       enat k < enat i \\<and>\n       enat k < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "from \\<open>enat k<enat i\\<close>"], ["proof (chain)\npicking this:\n  enat k < enat i", "have \"enat k<n'\""], ["proof (prove)\nusing this:\n  enat k < enat i\n\ngoal (1 subgoal):\n 1. enat k < n'", "using assms dual_order.strict_trans"], ["proof (prove)\nusing this:\n  enat k < enat i\n  n \\<le> i\n  enat i < n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  \\<forall>i'.\n     n \\<le> i' \\<and>\n     enat i' < n' \\<and>\n     enat i' < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<longrightarrow>\n     i' = i\n  \\<lbrakk>?b < ?a; ?c < ?b\\<rbrakk> \\<Longrightarrow> ?c < ?a\n\ngoal (1 subgoal):\n 1. enat k < n'", "by blast"], ["proof (state)\nthis:\n  enat k < n'\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       enat k < enat i \\<and>\n       enat k < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  n \\<le> k\n  enat k < enat i\n  enat k < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n  enat k < n'", "have \"enat k=enat i\""], ["proof (prove)\nusing this:\n  n \\<le> k\n  enat k < enat i\n  enat k < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n  enat k < n'\n\ngoal (1 subgoal):\n 1. enat k = enat i", "using assms"], ["proof (prove)\nusing this:\n  n \\<le> k\n  enat k < enat i\n  enat k < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n  enat k < n'\n  n \\<le> i\n  enat i < n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  \\<forall>i'.\n     n \\<le> i' \\<and>\n     enat i' < n' \\<and>\n     enat i' < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<longrightarrow>\n     i' = i\n\ngoal (1 subgoal):\n 1. enat k = enat i", "by simp"], ["proof (state)\nthis:\n  enat k = enat i\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       enat k < enat i \\<and>\n       enat k < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "with \\<open>enat k<enat i\\<close>"], ["proof (chain)\npicking this:\n  enat k < enat i\n  enat k = enat i", "show False"], ["proof (prove)\nusing this:\n  enat k < enat i\n  enat k = enat i\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> (\\<exists>k\\<ge>n.\n             enat k < enat i \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "ultimately"], ["proof (chain)\npicking this:\n  enat n \\<le> enat i\n  \\<not> lfinite t \\<or> enat i - 1 < llength t\n  \\<not> (\\<exists>k\\<ge>n.\n             enat k < enat i \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)", "show ?thesis"], ["proof (prove)\nusing this:\n  enat n \\<le> enat i\n  \\<not> lfinite t \\<or> enat i - 1 < llength t\n  \\<not> (\\<exists>k\\<ge>n.\n             enat k < enat i \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "using proj_not_active_same[of n i t c]"], ["proof (prove)\nusing this:\n  enat n \\<le> enat i\n  \\<not> lfinite t \\<or> enat i - 1 < llength t\n  \\<not> (\\<exists>k\\<ge>n.\n             enat k < enat i \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n  \\<lbrakk>enat n \\<le> enat i;\n   \\<not> lfinite t \\<or> enat i - 1 < llength t;\n   \\<not> (\\<exists>k\\<ge>n.\n              enat k < enat i \\<and>\n              enat k < llength t \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\\<rbrakk>\n  \\<Longrightarrow> \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t =\n                    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "finally"], ["proof (chain)\npicking this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \"Same and not Same\""], ["", "lemma proj_same_not_active:\n  assumes \"n \\<le> n'\"\n    and \"enat (n'-1) < llength t\"\n    and \"\\<pi>\\<^bsub>c\\<^esub>(ltake n' t) = \\<pi>\\<^bsub>c\\<^esub>(ltake n t)\"\n  shows \"\\<nexists>k. k\\<ge>n \\<and> k<n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>n.\n               k < n' \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "assume \"\\<exists>k. k\\<ge>n \\<and> k<n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\""], ["proof (state)\nthis:\n  \\<exists>k\\<ge>n.\n     k < n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>k\\<ge>n.\n     k < n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>", "obtain i where \"i\\<ge>n\" and \"i<n'\" and \"\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<exists>k\\<ge>n.\n     k < n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>n \\<le> i; i < n';\n         \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  n \\<le> i\n  i < n'\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  n \\<le> i\n  i < n'\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "from \\<open>enat (n'-1)<llength t\\<close> and \\<open>i<n'\\<close>"], ["proof (chain)\npicking this:\n  enat (n' - 1) < llength t\n  i < n'", "have \"i<llength t\""], ["proof (prove)\nusing this:\n  enat (n' - 1) < llength t\n  i < n'\n\ngoal (1 subgoal):\n 1. enat i < llength t", "by (metis diff_Suc_1 dual_order.strict_trans enat_ord_simps(2) lessE)"], ["proof (state)\nthis:\n  enat i < llength t\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  n \\<le> i\n  i < n'\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  enat i < llength t", "have \"\\<pi>\\<^bsub>c\\<^esub>(ltake (Suc i) t) =\n    (\\<pi>\\<^bsub>c\\<^esub>(ltake i t)) @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l []\\<^sub>l)\""], ["proof (prove)\nusing this:\n  n \\<le> i\n  i < n'\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  enat i < llength t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "from \\<open>i<n'\\<close>"], ["proof (chain)\npicking this:\n  i < n'", "have \"Suc i \\<le> n'\""], ["proof (prove)\nusing this:\n  i < n'\n\ngoal (1 subgoal):\n 1. Suc i \\<le> n'", "by simp"], ["proof (state)\nthis:\n  Suc i \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "hence \"lprefix(\\<pi>\\<^bsub>c\\<^esub>(ltake (Suc i) t)) (\\<pi>\\<^bsub>c\\<^esub>(ltake n' t))\""], ["proof (prove)\nusing this:\n  Suc i \\<le> n'\n\ngoal (1 subgoal):\n 1. lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t)", "by simp"], ["proof (state)\nthis:\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t)\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t)", "obtain \"tl\" where \"\\<pi>\\<^bsub>c\\<^esub>(ltake n' t) = (\\<pi>\\<^bsub>c\\<^esub>(ltake (Suc i) t)) @\\<^sub>l tl\""], ["proof (prove)\nusing this:\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t)\n\ngoal (1 subgoal):\n 1. (\\<And>tl.\n        \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t =\n        \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t @\\<^sub>l\n        tl \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using lprefix_conv_lappend"], ["proof (prove)\nusing this:\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t)\n  lprefix ?xs ?ys = (\\<exists>zs. ?ys = ?xs @\\<^sub>l zs)\n\ngoal (1 subgoal):\n 1. (\\<And>tl.\n        \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t =\n        \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t @\\<^sub>l\n        tl \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t @\\<^sub>l tl\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t @\\<^sub>l tl\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "from \\<open>n\\<le>i\\<close>"], ["proof (chain)\npicking this:\n  n \\<le> i", "have \"lprefix(\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) (\\<pi>\\<^bsub>c\\<^esub>(ltake i t))\""], ["proof (prove)\nusing this:\n  n \\<le> i\n\ngoal (1 subgoal):\n 1. lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)", "by simp"], ["proof (state)\nthis:\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "hence \"lprefix(\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) (\\<pi>\\<^bsub>c\\<^esub>(ltake i t))\""], ["proof (prove)\nusing this:\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)\n\ngoal (1 subgoal):\n 1. lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)", "by simp"], ["proof (state)\nthis:\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)", "obtain \"hd\" where \"\\<pi>\\<^bsub>c\\<^esub>(ltake i t) = (\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) @\\<^sub>l hd\""], ["proof (prove)\nusing this:\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)\n\ngoal (1 subgoal):\n 1. (\\<And>hd.\n        \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t =\n        \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n        hd \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using lprefix_conv_lappend"], ["proof (prove)\nusing this:\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)\n  lprefix ?xs ?ys = (\\<exists>zs. ?ys = ?xs @\\<^sub>l zs)\n\ngoal (1 subgoal):\n 1. (\\<And>hd.\n        \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t =\n        \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n        hd \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t @\\<^sub>l tl\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd", "have \"\\<pi>\\<^bsub>c\\<^esub>(ltake n' t) =\n    (((\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) @\\<^sub>l hd) @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l []\\<^sub>l)) @\\<^sub>l tl\""], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t @\\<^sub>l tl\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) @\\<^sub>l\n    tl", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) @\\<^sub>l\n  tl\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) @\\<^sub>l\n  tl\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "have \"\\<dots> = ((\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) @\\<^sub>l hd) @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l tl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) @\\<^sub>l\n    tl =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl)", "using lappend_snocL1_conv_LCons2[of \"(\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) @\\<^sub>l hd\" \"\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)\"]"], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) @\\<^sub>l\n  ?ys =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l ?ys)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) @\\<^sub>l\n    tl =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl)", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) @\\<^sub>l\n  tl =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl)\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) @\\<^sub>l\n  tl =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl)\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "have \"\\<dots> = (\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) @\\<^sub>l (hd @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l tl))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl) =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl))", "using lappend_assoc"], ["proof (prove)\nusing this:\n  ?xs @\\<^sub>l ?ys @\\<^sub>l ?zs = ?xs @\\<^sub>l (?ys @\\<^sub>l ?zs)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl) =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl))", "by auto"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl) =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl))\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l hd @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl) =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl))\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "have \"\\<pi>\\<^bsub>c\\<^esub>(ltake n' t) = (\\<pi>\\<^bsub>c\\<^esub>(ltake n' t)) @\\<^sub>l []\\<^sub>l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t @\\<^sub>l []\\<^sub>l", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t @\\<^sub>l []\\<^sub>l\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t @\\<^sub>l []\\<^sub>l =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl))", "have \"(\\<pi>\\<^bsub>c\\<^esub>(ltake n' t)) @\\<^sub>l []\\<^sub>l = (\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) @\\<^sub>l (hd @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l tl))\""], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t @\\<^sub>l []\\<^sub>l =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t @\\<^sub>l []\\<^sub>l =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl))", "."], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t @\\<^sub>l []\\<^sub>l =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl))\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t @\\<^sub>l []\\<^sub>l =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl))\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "from assms(3)"], ["proof (chain)\npicking this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "have \"llength (\\<pi>\\<^bsub>c\\<^esub>(ltake n' t)) = llength (\\<pi>\\<^bsub>c\\<^esub>(ltake n t))\""], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t) =\n    llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)", "by simp"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t) =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t @\\<^sub>l []\\<^sub>l =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl))\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t) =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)", "have \"lfinite (\\<pi>\\<^bsub>c\\<^esub>(ltake n' t)) \\<longrightarrow> []\\<^sub>l = hd @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l tl)\""], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t @\\<^sub>l []\\<^sub>l =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl))\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t) =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n\ngoal (1 subgoal):\n 1. lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t) \\<longrightarrow>\n    []\\<^sub>l =\n    hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl)", "using assms(3) lappend_eq_lappend_conv[of \"\\<pi>\\<^bsub>c\\<^esub>(ltake n' t)\" \"\\<pi>\\<^bsub>c\\<^esub>(ltake n t)\" \"[]\\<^sub>l\"]"], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t @\\<^sub>l []\\<^sub>l =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl))\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t) =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t) =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t) \\<Longrightarrow>\n  (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t @\\<^sub>l []\\<^sub>l =\n   \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l ?vs) =\n  (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t =\n   \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t \\<and>\n   (lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t) \\<longrightarrow>\n    []\\<^sub>l = ?vs))\n\ngoal (1 subgoal):\n 1. lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t) \\<longrightarrow>\n    []\\<^sub>l =\n    hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl)", "by simp"], ["proof (state)\nthis:\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t) \\<longrightarrow>\n  []\\<^sub>l = hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl)\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t) \\<longrightarrow>\n  []\\<^sub>l = hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl)\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "have \"lfinite (\\<pi>\\<^bsub>c\\<^esub>(ltake n' t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t)", "by simp"], ["proof (state)\nthis:\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t)\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t) \\<longrightarrow>\n  []\\<^sub>l = hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl)\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t)", "have \"[]\\<^sub>l = hd @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l tl)\""], ["proof (prove)\nusing this:\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t) \\<longrightarrow>\n  []\\<^sub>l = hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl)\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t)\n\ngoal (1 subgoal):\n 1. []\\<^sub>l =\n    hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl)", "by simp"], ["proof (state)\nthis:\n  []\\<^sub>l = hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl)\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "hence \"(\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l tl = []\\<^sub>l\""], ["proof (prove)\nusing this:\n  []\\<^sub>l = hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl)\n\ngoal (1 subgoal):\n 1. \\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl = []\\<^sub>l", "using LNil_eq_lappend_iff"], ["proof (prove)\nusing this:\n  []\\<^sub>l = hd @\\<^sub>l (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl)\n  ([]\\<^sub>l = ?xs @\\<^sub>l ?ys) =\n  (?xs = []\\<^sub>l \\<and> ?ys = []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. \\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl = []\\<^sub>l", "by auto"], ["proof (state)\nthis:\n  \\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       k < n' \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub> \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  \\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l tl = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_not_same_active:\n  assumes \"enat n \\<le> (n'::enat)\"\n    and \"(\\<not> lfinite t) \\<or> n'-1 < llength t\"\n    and \"\\<not>(\\<pi>\\<^bsub>c\\<^esub>(ltake n' t) = \\<pi>\\<^bsub>c\\<^esub>(ltake n t))\"\n  shows \"\\<exists>k. k\\<ge>n \\<and> k<n' \\<and> enat k < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>n.\n       enat k < n' \\<and>\n       enat k < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>n.\n               enat k < n' \\<and>\n               enat k < llength t \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>lnth t\n         k\\<^esub>) \\<Longrightarrow>\n    False", "assume \"\\<not>(\\<exists>k. k\\<ge>n \\<and> k<n' \\<and> enat k < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>k\\<ge>n.\n             enat k < n' \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>n.\n               enat k < n' \\<and>\n               enat k < llength t \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>lnth t\n         k\\<^esub>) \\<Longrightarrow>\n    False", "have \"\\<pi>\\<^bsub>c\\<^esub>(ltake n' t) = \\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "assume \"lfinite t\""], ["proof (state)\nthis:\n  lfinite t\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "hence \"llength t\\<noteq>\\<infinity>\""], ["proof (prove)\nusing this:\n  lfinite t\n\ngoal (1 subgoal):\n 1. llength t \\<noteq> \\<infinity>", "by (simp add: lfinite_llength_enat)"], ["proof (state)\nthis:\n  llength t \\<noteq> \\<infinity>\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "hence \"enat (the_enat (llength t)) = llength t\""], ["proof (prove)\nusing this:\n  llength t \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. enat (the_enat (llength t)) = llength t", "by auto"], ["proof (state)\nthis:\n  enat (the_enat (llength t)) = llength t\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "with assms \\<open>\\<not> (\\<exists>k\\<ge>n. k < n' \\<and> enat k < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\\<close>"], ["proof (chain)\npicking this:\n  enat n \\<le> n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t \\<noteq>\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n  \\<not> (\\<exists>k\\<ge>n.\n             enat k < n' \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n  enat (the_enat (llength t)) = llength t", "show ?thesis"], ["proof (prove)\nusing this:\n  enat n \\<le> n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t \\<noteq>\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n  \\<not> (\\<exists>k\\<ge>n.\n             enat k < n' \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n  enat (the_enat (llength t)) = llength t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "using proj_not_active_same[of n n' t c]"], ["proof (prove)\nusing this:\n  enat n \\<le> n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t \\<noteq>\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n  \\<not> (\\<exists>k\\<ge>n.\n             enat k < n' \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n  enat (the_enat (llength t)) = llength t\n  \\<lbrakk>enat n \\<le> n'; \\<not> lfinite t \\<or> n' - 1 < llength t;\n   \\<not> (\\<exists>k\\<ge>n.\n              enat k < n' \\<and>\n              enat k < llength t \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\\<rbrakk>\n  \\<Longrightarrow> \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n                    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t = \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n\ngoal (1 subgoal):\n 1. \\<not> lfinite t \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> lfinite t \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "assume \"\\<not> lfinite t\""], ["proof (state)\nthis:\n  \\<not> lfinite t\n\ngoal (1 subgoal):\n 1. \\<not> lfinite t \\<Longrightarrow>\n    \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "with assms \\<open>\\<not> (\\<exists>k\\<ge>n. k < n' \\<and> enat k < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\\<close>"], ["proof (chain)\npicking this:\n  enat n \\<le> n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t \\<noteq>\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n  \\<not> (\\<exists>k\\<ge>n.\n             enat k < n' \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n  \\<not> lfinite t", "show ?thesis"], ["proof (prove)\nusing this:\n  enat n \\<le> n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t \\<noteq>\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n  \\<not> (\\<exists>k\\<ge>n.\n             enat k < n' \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n  \\<not> lfinite t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "using proj_not_active_same[of n n' t c]"], ["proof (prove)\nusing this:\n  enat n \\<le> n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t \\<noteq>\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n  \\<not> (\\<exists>k\\<ge>n.\n             enat k < n' \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n  \\<not> lfinite t\n  \\<lbrakk>enat n \\<le> n'; \\<not> lfinite t \\<or> n' - 1 < llength t;\n   \\<not> (\\<exists>k\\<ge>n.\n              enat k < n' \\<and>\n              enat k < llength t \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\\<rbrakk>\n  \\<Longrightarrow> \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n                    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t = \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t = \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>n.\n               enat k < n' \\<and>\n               enat k < llength t \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>lnth t\n         k\\<^esub>) \\<Longrightarrow>\n    False", "with assms"], ["proof (chain)\npicking this:\n  enat n \\<le> n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t \\<noteq>\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t = \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "show False"], ["proof (prove)\nusing this:\n  enat n \\<le> n'\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t \\<noteq>\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t = \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Activations\""], ["", "text \\<open>\n  We also introduce an operator to obtain the number of activations of a certain component within a given configuration trace.\n\\<close>"], ["", "definition nAct :: \"'id \\<Rightarrow> enat \\<Rightarrow> (cnf llist) \\<Rightarrow> enat\" (\"\\<langle>_ #\\<^bsub>_\\<^esub>_\\<rangle>\") where\n\"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> \\<equiv> llength (\\<pi>\\<^bsub>c\\<^esub>(ltake n t))\""], ["", "lemma nAct_0[simp]:\n  \"\\<langle>c #\\<^bsub>0\\<^esub> t\\<rangle> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>0\\<^esub>t\\<rangle> = 0", "by (simp add: nAct_def)"], ["", "lemma nAct_NIL[simp]:\n  \"\\<langle>c #\\<^bsub>n\\<^esub> []\\<^sub>l\\<rangle> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>[]\\<^sub>l\\<rangle> = 0", "by (simp add: nAct_def)"], ["", "lemma nAct_Null:\n  assumes \"llength t \\<ge> n\"\n      and \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> = 0\"\n    shows \"\\<forall>i<n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       enat i < n \\<longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       enat i < n \\<longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "from assms"], ["proof (chain)\npicking this:\n  n \\<le> llength t\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> = 0", "have \"lnull (\\<pi>\\<^bsub>c\\<^esub>(ltake n t))\""], ["proof (prove)\nusing this:\n  n \\<le> llength t\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> = 0\n\ngoal (1 subgoal):\n 1. lnull (\\<pi>\\<^bsub>c\\<^esub>ltake n t)", "using nAct_def lnull_def"], ["proof (prove)\nusing this:\n  n \\<le> llength t\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> = 0\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n  lnull ?llist = (?llist = []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. lnull (\\<pi>\\<^bsub>c\\<^esub>ltake n t)", "by simp"], ["proof (state)\nthis:\n  lnull (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       enat i < n \\<longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "hence \"\\<pi>\\<^bsub>c\\<^esub>(ltake n t) = []\\<^sub>l\""], ["proof (prove)\nusing this:\n  lnull (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n t = []\\<^sub>l", "using lnull_def"], ["proof (prove)\nusing this:\n  lnull (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n  lnull ?llist = (?llist = []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n t = []\\<^sub>l", "by blast"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n t = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       enat i < n \\<longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "hence \"(\\<forall>k\\<in>lset (ltake n t). \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>)\""], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n t = []\\<^sub>l\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>lset (ltake n t).\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>", "by simp"], ["proof (state)\nthis:\n  \\<forall>k\\<in>lset (ltake n t).\n     \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       enat i < n \\<longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       enat i < n \\<longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               enat i < n \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t\n                i\\<^esub>) \\<Longrightarrow>\n    False", "assume \"\\<not> (\\<forall>i<n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>i.\n             enat i < n \\<longrightarrow>\n             \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               enat i < n \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t\n                i\\<^esub>) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>i.\n             enat i < n \\<longrightarrow>\n             \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)", "obtain i where \"i<n\" and \"\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>i.\n             enat i < n \\<longrightarrow>\n             \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>enat i < n;\n         \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  enat i < n\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               enat i < n \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t\n                i\\<^esub>) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  enat i < n\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               enat i < n \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t\n                i\\<^esub>) \\<Longrightarrow>\n    False", "have \"enat i < llength (ltake n t)  \\<and> lnth (ltake n t) i = (lnth t i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat i < llength (ltake n t) \\<and> lnth (ltake n t) i = lnth t i", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. enat i < llength (ltake n t)\n 2. lnth (ltake n t) i = lnth t i", "from \\<open>llength t \\<ge> n\\<close>"], ["proof (chain)\npicking this:\n  n \\<le> llength t", "have \"n = min n (llength t)\""], ["proof (prove)\nusing this:\n  n \\<le> llength t\n\ngoal (1 subgoal):\n 1. n = min n (llength t)", "using min.orderE"], ["proof (prove)\nusing this:\n  n \\<le> llength t\n  \\<lbrakk>?a \\<le> ?b; ?a = min ?a ?b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. n = min n (llength t)", "by auto"], ["proof (state)\nthis:\n  n = min n (llength t)\n\ngoal (2 subgoals):\n 1. enat i < llength (ltake n t)\n 2. lnth (ltake n t) i = lnth t i", "hence \"llength (ltake n t) = n\""], ["proof (prove)\nusing this:\n  n = min n (llength t)\n\ngoal (1 subgoal):\n 1. llength (ltake n t) = n", "by simp"], ["proof (state)\nthis:\n  llength (ltake n t) = n\n\ngoal (2 subgoals):\n 1. enat i < llength (ltake n t)\n 2. lnth (ltake n t) i = lnth t i", "with \\<open>i<n\\<close>"], ["proof (chain)\npicking this:\n  enat i < n\n  llength (ltake n t) = n", "show \"enat i < llength (ltake n t)\""], ["proof (prove)\nusing this:\n  enat i < n\n  llength (ltake n t) = n\n\ngoal (1 subgoal):\n 1. enat i < llength (ltake n t)", "by auto"], ["proof (state)\nthis:\n  enat i < llength (ltake n t)\n\ngoal (1 subgoal):\n 1. lnth (ltake n t) i = lnth t i", "from \\<open>i<n\\<close>"], ["proof (chain)\npicking this:\n  enat i < n", "show \"lnth (ltake n t) i = (lnth t i)\""], ["proof (prove)\nusing this:\n  enat i < n\n\ngoal (1 subgoal):\n 1. lnth (ltake n t) i = lnth t i", "using lnth_ltake"], ["proof (prove)\nusing this:\n  enat i < n\n  enat ?m < ?n \\<Longrightarrow> lnth (ltake ?n ?xs) ?m = lnth ?xs ?m\n\ngoal (1 subgoal):\n 1. lnth (ltake n t) i = lnth t i", "by auto"], ["proof (state)\nthis:\n  lnth (ltake n t) i = lnth t i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  enat i < llength (ltake n t) \\<and> lnth (ltake n t) i = lnth t i\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               enat i < n \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t\n                i\\<^esub>) \\<Longrightarrow>\n    False", "hence \"(lnth t i \\<in> lset (ltake n t))\""], ["proof (prove)\nusing this:\n  enat i < llength (ltake n t) \\<and> lnth (ltake n t) i = lnth t i\n\ngoal (1 subgoal):\n 1. lnth t i \\<in> lset (ltake n t)", "using in_lset_conv_lnth[of \"lnth t i\" \"ltake n t\"]"], ["proof (prove)\nusing this:\n  enat i < llength (ltake n t) \\<and> lnth (ltake n t) i = lnth t i\n  (lnth t i \\<in> lset (ltake n t)) =\n  (\\<exists>na.\n      enat na < llength (ltake n t) \\<and> lnth (ltake n t) na = lnth t i)\n\ngoal (1 subgoal):\n 1. lnth t i \\<in> lset (ltake n t)", "by blast"], ["proof (state)\nthis:\n  lnth t i \\<in> lset (ltake n t)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               enat i < n \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t\n                i\\<^esub>) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  enat i < n\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  lnth t i \\<in> lset (ltake n t)", "show False"], ["proof (prove)\nusing this:\n  enat i < n\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  lnth t i \\<in> lset (ltake n t)\n\ngoal (1 subgoal):\n 1. False", "using \\<open>(\\<forall>k\\<in>lset (ltake n t). \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>)\\<close>"], ["proof (prove)\nusing this:\n  enat i < n\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  lnth t i \\<in> lset (ltake n t)\n  \\<forall>k\\<in>lset (ltake n t).\n     \\<not> \\<parallel>c\\<parallel>\\<^bsub>k\\<^esub>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i.\n     enat i < n \\<longrightarrow>\n     \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_ge_one[simp]:\n  assumes \"llength t \\<ge> n\"\n      and \"i < n\"\n      and \"\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n    shows \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> \\<ge> enat 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat 1 \\<le> \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> enat 1\n           \\<le> \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<Longrightarrow>\n    False", "assume \"\\<not> (\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> \\<ge> enat 1)\""], ["proof (state)\nthis:\n  \\<not> enat 1 \\<le> \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<not> enat 1\n           \\<le> \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<Longrightarrow>\n    False", "hence \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> < enat 1\""], ["proof (prove)\nusing this:\n  \\<not> enat 1 \\<le> \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> < enat 1", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> < enat 1\n\ngoal (1 subgoal):\n 1. \\<not> enat 1\n           \\<le> \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<Longrightarrow>\n    False", "hence \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> < 1\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> < enat 1\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> < 1", "using enat_1"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> < enat 1\n  enat 1 = 1\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> < 1", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> < 1\n\ngoal (1 subgoal):\n 1. \\<not> enat 1\n           \\<le> \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<Longrightarrow>\n    False", "hence \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> = 0\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> < 1\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> = 0", "using Suc_ile_eq \\<open>\\<not> enat 1 \\<le> \\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle>\\<close> zero_enat_def"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> < 1\n  (enat (Suc ?m) \\<le> ?n) = (enat ?m < ?n)\n  \\<not> enat 1 \\<le> \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n  0 = enat 0\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> = 0", "by auto"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> = 0\n\ngoal (1 subgoal):\n 1. \\<not> enat 1\n           \\<le> \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<Longrightarrow>\n    False", "with \\<open>llength t \\<ge> n\\<close>"], ["proof (chain)\npicking this:\n  n \\<le> llength t\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> = 0", "have \"\\<forall>i<n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\""], ["proof (prove)\nusing this:\n  n \\<le> llength t\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> = 0\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       enat i < n \\<longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "using nAct_Null"], ["proof (prove)\nusing this:\n  n \\<le> llength t\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> = 0\n  \\<lbrakk>?n \\<le> llength ?t;\n   \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> = 0\\<rbrakk>\n  \\<Longrightarrow> \\<forall>i.\n                       enat i < ?n \\<longrightarrow>\n                       \\<not> \\<parallel>?c\\<parallel>\\<^bsub>lnth ?t\n                         i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       enat i < n \\<longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "by simp"], ["proof (state)\nthis:\n  \\<forall>i.\n     enat i < n \\<longrightarrow>\n     \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> enat 1\n           \\<le> \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<Longrightarrow>\n    False", "with assms"], ["proof (chain)\npicking this:\n  n \\<le> llength t\n  enat i < n\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  \\<forall>i.\n     enat i < n \\<longrightarrow>\n     \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "show False"], ["proof (prove)\nusing this:\n  n \\<le> llength t\n  enat i < n\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  \\<forall>i.\n     enat i < n \\<longrightarrow>\n     \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_finite[simp]:\n  assumes \"n \\<noteq> \\<infinity>\"\n  shows \"\\<exists>n'. \\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> = enat n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n'. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> = enat n'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n'. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> = enat n'", "from assms"], ["proof (chain)\npicking this:\n  n \\<noteq> \\<infinity>", "have \"lfinite (ltake n t)\""], ["proof (prove)\nusing this:\n  n \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. lfinite (ltake n t)", "by simp"], ["proof (state)\nthis:\n  lfinite (ltake n t)\n\ngoal (1 subgoal):\n 1. \\<exists>n'. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> = enat n'", "hence \"lfinite (\\<pi>\\<^bsub>c\\<^esub>(ltake n t))\""], ["proof (prove)\nusing this:\n  lfinite (ltake n t)\n\ngoal (1 subgoal):\n 1. lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake n t)", "by simp"], ["proof (state)\nthis:\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n\ngoal (1 subgoal):\n 1. \\<exists>n'. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> = enat n'", "hence \"\\<exists>n'. llength (\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) = enat n'\""], ["proof (prove)\nusing this:\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n\ngoal (1 subgoal):\n 1. \\<exists>n'. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t) = enat n'", "using lfinite_llength_enat[of \"\\<pi>\\<^bsub>c\\<^esub>(ltake n t)\"]"], ["proof (prove)\nusing this:\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake n t) \\<Longrightarrow>\n  \\<exists>na. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t) = enat na\n\ngoal (1 subgoal):\n 1. \\<exists>n'. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t) = enat n'", "by simp"], ["proof (state)\nthis:\n  \\<exists>n'. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t) = enat n'\n\ngoal (1 subgoal):\n 1. \\<exists>n'. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> = enat n'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>n'. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t) = enat n'\n\ngoal (1 subgoal):\n 1. \\<exists>n'. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> = enat n'", "using nAct_def"], ["proof (prove)\nusing this:\n  \\<exists>n'. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t) = enat n'\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n\ngoal (1 subgoal):\n 1. \\<exists>n'. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> = enat n'", "by simp"], ["proof (state)\nthis:\n  \\<exists>n'. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> = enat n'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_enat_the_nat[simp]:\n  assumes \"n \\<noteq> \\<infinity>\"\n  shows \"enat (the_enat (\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle>)) = \\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (the_enat \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>) =\n    \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. enat (the_enat \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>) =\n    \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>", "from assms"], ["proof (chain)\npicking this:\n  n \\<noteq> \\<infinity>", "have \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> \\<noteq> \\<infinity>\""], ["proof (prove)\nusing this:\n  n \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<noteq> \\<infinity>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. enat (the_enat \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>) =\n    \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. enat (the_enat \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>) =\n    \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>", "using enat_the_enat"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<noteq> \\<infinity>\n  ?n \\<noteq> \\<infinity> \\<Longrightarrow> enat (the_enat ?n) = ?n\n\ngoal (1 subgoal):\n 1. enat (the_enat \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>) =\n    \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  enat (the_enat \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>) =\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \"Monotonicity and Continuity\""], ["", "lemma nAct_mcont:\n  shows \"mcont lSup lprefix Sup (\\<le>) (nAct c n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mcont lSup lprefix Sup (\\<le>) (nAct c n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mcont lSup lprefix Sup (\\<le>) (nAct c n)", "have \"mcont lSup lprefix lSup lprefix (ltake n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mcont lSup lprefix lSup lprefix (ltake n)", "by simp"], ["proof (state)\nthis:\n  mcont lSup lprefix lSup lprefix (ltake n)\n\ngoal (1 subgoal):\n 1. mcont lSup lprefix Sup (\\<le>) (nAct c n)", "hence \"mcont lSup lprefix lSup lprefix (\\<lambda>t. \\<pi>\\<^bsub>c\\<^esub>(ltake n t))\""], ["proof (prove)\nusing this:\n  mcont lSup lprefix lSup lprefix (ltake n)\n\ngoal (1 subgoal):\n 1. mcont lSup lprefix lSup lprefix\n     (\\<lambda>t. \\<pi>\\<^bsub>c\\<^esub>ltake n t)", "using proj_mcont2mcont[of lSup lprefix \"(ltake n)\"]"], ["proof (prove)\nusing this:\n  mcont lSup lprefix lSup lprefix (ltake n)\n  mcont lSup lprefix lSup lprefix (ltake n) \\<Longrightarrow>\n  mcont lSup lprefix lSup lprefix\n   (\\<lambda>x. \\<pi>\\<^bsub>?c\\<^esub>ltake n x)\n\ngoal (1 subgoal):\n 1. mcont lSup lprefix lSup lprefix\n     (\\<lambda>t. \\<pi>\\<^bsub>c\\<^esub>ltake n t)", "by simp"], ["proof (state)\nthis:\n  mcont lSup lprefix lSup lprefix\n   (\\<lambda>t. \\<pi>\\<^bsub>c\\<^esub>ltake n t)\n\ngoal (1 subgoal):\n 1. mcont lSup lprefix Sup (\\<le>) (nAct c n)", "hence \"mcont lSup lprefix Sup (\\<le>) (\\<lambda>t. llength (\\<pi>\\<^bsub>c\\<^esub>(ltake n t)))\""], ["proof (prove)\nusing this:\n  mcont lSup lprefix lSup lprefix\n   (\\<lambda>t. \\<pi>\\<^bsub>c\\<^esub>ltake n t)\n\ngoal (1 subgoal):\n 1. mcont lSup lprefix Sup (\\<le>)\n     (\\<lambda>t. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t))", "by simp"], ["proof (state)\nthis:\n  mcont lSup lprefix Sup (\\<le>)\n   (\\<lambda>t. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t))\n\ngoal (1 subgoal):\n 1. mcont lSup lprefix Sup (\\<le>) (nAct c n)", "moreover"], ["proof (state)\nthis:\n  mcont lSup lprefix Sup (\\<le>)\n   (\\<lambda>t. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t))\n\ngoal (1 subgoal):\n 1. mcont lSup lprefix Sup (\\<le>) (nAct c n)", "have \"nAct c n = (\\<lambda>t. llength (\\<pi>\\<^bsub>c\\<^esub>(ltake n t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nAct c n = (\\<lambda>t. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t))", "using nAct_def"], ["proof (prove)\nusing this:\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n\ngoal (1 subgoal):\n 1. nAct c n = (\\<lambda>t. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t))", "by auto"], ["proof (state)\nthis:\n  nAct c n = (\\<lambda>t. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t))\n\ngoal (1 subgoal):\n 1. mcont lSup lprefix Sup (\\<le>) (nAct c n)", "ultimately"], ["proof (chain)\npicking this:\n  mcont lSup lprefix Sup (\\<le>)\n   (\\<lambda>t. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t))\n  nAct c n = (\\<lambda>t. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t))", "show ?thesis"], ["proof (prove)\nusing this:\n  mcont lSup lprefix Sup (\\<le>)\n   (\\<lambda>t. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t))\n  nAct c n = (\\<lambda>t. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t))\n\ngoal (1 subgoal):\n 1. mcont lSup lprefix Sup (\\<le>) (nAct c n)", "by simp"], ["proof (state)\nthis:\n  mcont lSup lprefix Sup (\\<le>) (nAct c n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_mono:\n  assumes \"n \\<le> n'\"\n    shows \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> \\<le> \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "from assms"], ["proof (chain)\npicking this:\n  n \\<le> n'", "have \"lprefix (ltake n t) (ltake n' t)\""], ["proof (prove)\nusing this:\n  n \\<le> n'\n\ngoal (1 subgoal):\n 1. lprefix (ltake n t) (ltake n' t)", "by simp"], ["proof (state)\nthis:\n  lprefix (ltake n t) (ltake n' t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "hence \"lprefix (\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) (\\<pi>\\<^bsub>c\\<^esub>(ltake n' t))\""], ["proof (prove)\nusing this:\n  lprefix (ltake n t) (ltake n' t)\n\ngoal (1 subgoal):\n 1. lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n     (\\<pi>\\<^bsub>c\\<^esub>ltake n' t)", "by simp"], ["proof (state)\nthis:\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n   (\\<pi>\\<^bsub>c\\<^esub>ltake n' t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "hence \"llength (\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>(ltake n' t))\""], ["proof (prove)\nusing this:\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n   (\\<pi>\\<^bsub>c\\<^esub>ltake n' t)\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>ltake n' t)", "using lprefix_llength_le[of \"(\\<pi>\\<^bsub>c\\<^esub>(ltake n t))\"]"], ["proof (prove)\nusing this:\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n   (\\<pi>\\<^bsub>c\\<^esub>ltake n' t)\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake n t) ?ys \\<Longrightarrow>\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t) \\<le> llength ?ys\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>ltake n' t)", "by simp"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n  \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>ltake n' t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n  \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>ltake n' t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "using nAct_def"], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n  \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>ltake n' t)\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_strict_mono_back:\n  assumes \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> < \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\"\n    shows \"n < n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < n'", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> n < n' \\<Longrightarrow> False", "assume \"\\<not> n<n'\""], ["proof (state)\nthis:\n  \\<not> n < n'\n\ngoal (1 subgoal):\n 1. \\<not> n < n' \\<Longrightarrow> False", "hence \"n\\<ge>n'\""], ["proof (prove)\nusing this:\n  \\<not> n < n'\n\ngoal (1 subgoal):\n 1. n' \\<le> n", "by simp"], ["proof (state)\nthis:\n  n' \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> n < n' \\<Longrightarrow> False", "hence \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> \\<ge> \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\""], ["proof (prove)\nusing this:\n  n' \\<le> n\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>", "using nAct_mono"], ["proof (prove)\nusing this:\n  n' \\<le> n\n  ?n \\<le> ?n' \\<Longrightarrow>\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle>\n  \\<le> \\<langle>?c #\\<^bsub>?n'\\<^esub>?t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<not> n < n' \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \"Not Active\""], ["", "lemma nAct_not_active[simp]:\n  fixes n::nat\n    and n'::nat\n    and t::\"(cnf llist)\"\n    and c::'id\n  assumes \"enat i < llength t\"\n    and \"\\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n  shows \"\\<langle>c #\\<^bsub>Suc i\\<^esub> t\\<rangle> = \\<langle>c #\\<^bsub>i\\<^esub> t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "from assms"], ["proof (chain)\npicking this:\n  enat i < llength t\n  \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "have \"\\<pi>\\<^bsub>c\\<^esub>(ltake (Suc i) t) = \\<pi>\\<^bsub>c\\<^esub>(ltake i t)\""], ["proof (prove)\nusing this:\n  enat i < llength t\n  \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "hence \"llength (\\<pi>\\<^bsub>c\\<^esub>(ltake (enat (Suc i)) t)) = llength (\\<pi>\\<^bsub>c\\<^esub>(ltake i t))\""], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n    llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)", "by simp"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "have \"llength (\\<pi>\\<^bsub>c\\<^esub>(ltake i t)) \\<noteq> \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t) \\<noteq> \\<infinity>", "using llength_eq_infty_conv_lfinite[of \"\\<pi>\\<^bsub>c\\<^esub>(ltake (enat i) t)\"]"], ["proof (prove)\nusing this:\n  (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t) = \\<infinity>) =\n  (\\<not> lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t) \\<noteq> \\<infinity>", "by simp"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t) \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t) \\<noteq> \\<infinity>", "have \"llength (\\<pi>\\<^bsub>c\\<^esub>(ltake (Suc i) t)) = llength (\\<pi>\\<^bsub>c\\<^esub>(ltake i t))\""], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t) \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n    llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)", "using the_enat_eSuc"], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t) \\<noteq> \\<infinity>\n  ?n \\<noteq> \\<infinity> \\<Longrightarrow>\n  the_enat (eSuc ?n) = Suc (the_enat ?n)\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n    llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)", "by simp"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "with nAct_def"], ["proof (chain)\npicking this:\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_not_active_same:\n  assumes \"enat n \\<le> (n'::enat)\"\n      and \"n'-1 < llength t\"\n      and \"\\<nexists>k. enat k\\<ge>n \\<and> k<n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\"\n    shows \"\\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle> = \\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>", "using assms proj_not_active_same nAct_def"], ["proof (prove)\nusing this:\n  enat n \\<le> n'\n  n' - 1 < llength t\n  \\<nexists>k.\n     enat n \\<le> enat k \\<and>\n     enat k < n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n  \\<lbrakk>enat ?n \\<le> ?n'; \\<not> lfinite ?t \\<or> ?n' - 1 < llength ?t;\n   \\<not> (\\<exists>k\\<ge>?n.\n              enat k < ?n' \\<and>\n              enat k < llength ?t \\<and>\n              \\<parallel>?c\\<parallel>\\<^bsub>lnth ?t k\\<^esub>)\\<rbrakk>\n  \\<Longrightarrow> \\<pi>\\<^bsub>?c\\<^esub>ltake ?n' ?t =\n                    \\<pi>\\<^bsub>?c\\<^esub>ltake (enat ?n) ?t\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>", "by simp"], ["", "subsubsection \"Active\""], ["", "lemma nAct_active[simp]:\n  fixes n::nat\n    and n'::nat\n    and t::\"(cnf llist)\"\n    and c::'id\n  assumes \"enat i < llength t\"\n    and \"\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n  shows \"\\<langle>c #\\<^bsub>Suc i\\<^esub> t\\<rangle> = eSuc (\\<langle>c #\\<^bsub>i\\<^esub> t\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "from assms"], ["proof (chain)\npicking this:\n  enat i < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "have \"\\<pi>\\<^bsub>c\\<^esub>(ltake (Suc i) t) =\n    (\\<pi>\\<^bsub>c\\<^esub>(ltake i t)) @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l []\\<^sub>l)\""], ["proof (prove)\nusing this:\n  enat i < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "hence \"llength (\\<pi>\\<^bsub>c\\<^esub>(ltake (enat (Suc i)) t)) = eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>(ltake i t)))\""], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n    eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))", "using plus_1_eSuc one_eSuc"], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n  1 + ?q = eSuc ?q\n  ?q + 1 = eSuc ?q\n  1 = eSuc 0\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n    eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))", "by simp"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n  eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n  eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "have \"llength (\\<pi>\\<^bsub>c\\<^esub>(ltake i t)) \\<noteq> \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t) \\<noteq> \\<infinity>", "using llength_eq_infty_conv_lfinite[of \"\\<pi>\\<^bsub>c\\<^esub>(ltake (enat i) t)\"]"], ["proof (prove)\nusing this:\n  (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t) = \\<infinity>) =\n  (\\<not> lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t) \\<noteq> \\<infinity>", "by simp"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t) \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n  eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t) \\<noteq> \\<infinity>", "have \"llength (\\<pi>\\<^bsub>c\\<^esub>(ltake (Suc i) t)) = eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>(ltake i t)))\""], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n  eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t) \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n    eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))", "using the_enat_eSuc"], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n  eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t) \\<noteq> \\<infinity>\n  ?n \\<noteq> \\<infinity> \\<Longrightarrow>\n  the_enat (eSuc ?n) = Suc (the_enat ?n)\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n    eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))", "by simp"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n  eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "with nAct_def"], ["proof (chain)\npicking this:\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n  eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t) =\n  eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n  eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_active_suc:\n  fixes n::nat\n    and n'::enat\n    and t::\"(cnf llist)\"\n    and c::'id\n  assumes \"\\<not> lfinite t \\<or> n'-1 < llength t\"\n    and \"n \\<le> i\"\n    and \"enat i < n'\"\n    and \"\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n    and \"\\<forall>i'. (n \\<le> i' \\<and> enat i'<n' \\<and> i' < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub>) \\<longrightarrow> (i' = i)\"\n  shows \"\\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle> = eSuc (\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>", "from assms"], ["proof (chain)\npicking this:\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  n \\<le> i\n  enat i < n'\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  \\<forall>i'.\n     n \\<le> i' \\<and>\n     enat i' < n' \\<and>\n     enat i' < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<longrightarrow>\n     i' = i", "have \"\\<pi>\\<^bsub>c\\<^esub>(ltake n' t) = (\\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t)) @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l []\\<^sub>l)\""], ["proof (prove)\nusing this:\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  n \\<le> i\n  enat i < n'\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  \\<forall>i'.\n     n \\<le> i' \\<and>\n     enat i' < n' \\<and>\n     enat i' < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<longrightarrow>\n     i' = i\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "using proj_active_append[of n i n' t c]"], ["proof (prove)\nusing this:\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  n \\<le> i\n  enat i < n'\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  \\<forall>i'.\n     n \\<le> i' \\<and>\n     enat i' < n' \\<and>\n     enat i' < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<longrightarrow>\n     i' = i\n  \\<lbrakk>n \\<le> i; enat i < n';\n   \\<not> lfinite t \\<or> n' - 1 < llength t;\n   \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>;\n   \\<forall>i'.\n      n \\<le> i' \\<and>\n      enat i' < n' \\<and>\n      enat i' < llength t \\<and>\n      \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<longrightarrow>\n      i' = i\\<rbrakk>\n  \\<Longrightarrow> \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n                    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n                    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "by blast"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>", "have \"llength ((\\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t)) @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l []\\<^sub>l)) =\n    eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. llength\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n      (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)) =\n    eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))", "using one_eSuc eSuc_plus_1"], ["proof (prove)\nusing this:\n  1 = eSuc 0\n  eSuc ?n = ?n + 1\n\ngoal (1 subgoal):\n 1. llength\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n      (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)) =\n    eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))", "by simp"], ["proof (state)\nthis:\n  llength\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)) =\n  eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n  llength\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)) =\n  eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n  llength\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)) =\n  eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>", "using nAct_def"], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n  llength\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)) =\n  eSuc (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle> =\n  eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_less:\n  assumes \"enat k < llength t\"\n    and \"n \\<le> k\"\n    and \"k < (n'::enat)\"\n    and \"\\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\"\n  shows \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> < \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "have \"\\<langle>c #\\<^bsub>k\\<^esub> t\\<rangle> \\<noteq> \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle> \\<noteq> \\<infinity>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle> \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "then"], ["proof (chain)\npicking this:\n  \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle> \\<noteq> \\<infinity>", "obtain en where en_def: \"\\<langle>c #\\<^bsub>k\\<^esub> t\\<rangle> = enat en\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle> \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<And>en.\n        \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle> =\n        enat en \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle> = enat en\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle> = enat en\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "have \"eSuc (enat en) \\<le> \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eSuc (enat en) \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eSuc (enat en) \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "from assms"], ["proof (chain)\npicking this:\n  enat k < llength t\n  n \\<le> enat k\n  enat k < n'\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>", "have \"Suc k \\<le> n'\""], ["proof (prove)\nusing this:\n  enat k < llength t\n  n \\<le> enat k\n  enat k < n'\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n\ngoal (1 subgoal):\n 1. enat (Suc k) \\<le> n'", "using Suc_ile_eq"], ["proof (prove)\nusing this:\n  enat k < llength t\n  n \\<le> enat k\n  enat k < n'\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n  (enat (Suc ?m) \\<le> ?n) = (enat ?m < ?n)\n\ngoal (1 subgoal):\n 1. enat (Suc k) \\<le> n'", "by simp"], ["proof (state)\nthis:\n  enat (Suc k) \\<le> n'\n\ngoal (1 subgoal):\n 1. eSuc (enat en) \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "hence \"\\<langle>c #\\<^bsub>Suc k\\<^esub> t\\<rangle> \\<le> \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\""], ["proof (prove)\nusing this:\n  enat (Suc k) \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "using nAct_mono"], ["proof (prove)\nusing this:\n  enat (Suc k) \\<le> n'\n  ?n \\<le> ?n' \\<Longrightarrow>\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle>\n  \\<le> \\<langle>?c #\\<^bsub>?n'\\<^esub>?t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. eSuc (enat en) \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. eSuc (enat en) \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "from assms"], ["proof (chain)\npicking this:\n  enat k < llength t\n  n \\<le> enat k\n  enat k < n'\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>", "have \"\\<langle>c #\\<^bsub>Suc k\\<^esub> t\\<rangle> = eSuc (\\<langle>c #\\<^bsub>k\\<^esub> t\\<rangle>)\""], ["proof (prove)\nusing this:\n  enat k < llength t\n  n \\<le> enat k\n  enat k < n'\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>t\\<rangle> =\n  eSuc \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. eSuc (enat en) \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>t\\<rangle> =\n  eSuc \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle>", "have \"eSuc (\\<langle>c #\\<^bsub>k\\<^esub> t\\<rangle>) \\<le> \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>t\\<rangle> =\n  eSuc \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  eSuc \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. eSuc (enat en) \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  eSuc \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. eSuc (enat en) \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "using en_def"], ["proof (prove)\nusing this:\n  eSuc \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle> = enat en\n\ngoal (1 subgoal):\n 1. eSuc (enat en) \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  eSuc (enat en) \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  eSuc (enat en) \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  eSuc (enat en) \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "have \"enat en < eSuc (enat en)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat en < eSuc (enat en)", "by simp"], ["proof (state)\nthis:\n  enat en < eSuc (enat en)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle> = enat en\n  eSuc (enat en) \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  enat en < eSuc (enat en)", "have \"enat en < \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle> = enat en\n  eSuc (enat en) \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  enat en < eSuc (enat en)\n\ngoal (1 subgoal):\n 1. enat en < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "using less_le_trans[of \"enat en\" \"eSuc (enat en)\"]"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle> = enat en\n  eSuc (enat en) \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  enat en < eSuc (enat en)\n  \\<lbrakk>enat en < eSuc (enat en); eSuc (enat en) \\<le> ?z\\<rbrakk>\n  \\<Longrightarrow> enat en < ?z\n\ngoal (1 subgoal):\n 1. enat en < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  enat en < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  enat en < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "have \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> \\<le> enat en\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<le> enat en", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<le> enat en", "from assms"], ["proof (chain)\npicking this:\n  enat k < llength t\n  n \\<le> enat k\n  enat k < n'\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>", "have \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> \\<le> \\<langle>c #\\<^bsub>k\\<^esub> t\\<rangle>\""], ["proof (prove)\nusing this:\n  enat k < llength t\n  n \\<le> enat k\n  enat k < n'\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle>", "using nAct_mono"], ["proof (prove)\nusing this:\n  enat k < llength t\n  n \\<le> enat k\n  enat k < n'\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n  ?n \\<le> ?n' \\<Longrightarrow>\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle>\n  \\<le> \\<langle>?c #\\<^bsub>?n'\\<^esub>?t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<le> enat en", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<le> enat en", "using en_def"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle>\n  \\<langle>c #\\<^bsub>enat k\\<^esub>t\\<rangle> = enat en\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<le> enat en", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<le> enat en\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<le> enat en\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  enat en < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<le> enat en", "show ?thesis"], ["proof (prove)\nusing this:\n  enat en < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<le> enat en\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "using le_less_trans[of \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle>\"]"], ["proof (prove)\nusing this:\n  enat en < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<le> enat en\n  \\<lbrakk>\\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> \\<le> ?y;\n   ?y < ?z\\<rbrakk>\n  \\<Longrightarrow> \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> < ?z\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_less_active:\n  assumes \"n' - 1 < llength t\"\n      and \"\\<langle>c #\\<^bsub>enat n\\<^esub> t\\<rangle> < \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\"\n  shows \"\\<exists>i\\<ge>n. i<n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       enat i < n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<ge>n.\n               enat i < n' \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>lnth t\n         i\\<^esub>) \\<Longrightarrow>\n    False", "assume \"\\<not> (\\<exists>i\\<ge>n. i<n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>i\\<ge>n.\n             enat i < n' \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<ge>n.\n               enat i < n' \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>lnth t\n         i\\<^esub>) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<not> (\\<exists>i\\<ge>n.\n             enat i < n' \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<ge>n.\n               enat i < n' \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>lnth t\n         i\\<^esub>) \\<Longrightarrow>\n    False", "have \"enat n \\<le> n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat n \\<le> n'", "using assms(2) less_imp_le nAct_strict_mono_back"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  ?x < ?y \\<Longrightarrow> ?x \\<le> ?y\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle>\n  < \\<langle>?c #\\<^bsub>?n'\\<^esub>?t\\<rangle> \\<Longrightarrow>\n  ?n < ?n'\n\ngoal (1 subgoal):\n 1. enat n \\<le> n'", "by blast"], ["proof (state)\nthis:\n  enat n \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<ge>n.\n               enat i < n' \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>lnth t\n         i\\<^esub>) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>i\\<ge>n.\n             enat i < n' \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\n  enat n \\<le> n'", "have \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> = \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i\\<ge>n.\n             enat i < n' \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\n  enat n \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n    \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "using \\<open>n' - 1 < llength t\\<close> nAct_not_active_same"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i\\<ge>n.\n             enat i < n' \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\n  enat n \\<le> n'\n  n' - 1 < llength t\n  \\<lbrakk>enat ?n \\<le> ?n'; ?n' - 1 < llength ?t;\n   \\<nexists>k.\n      enat ?n \\<le> enat k \\<and>\n      enat k < ?n' \\<and>\n      \\<parallel>?c\\<parallel>\\<^bsub>lnth ?t k\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c #\\<^bsub>?n'\\<^esub>?t\\<rangle> =\n                    \\<langle>?c #\\<^bsub>enat ?n\\<^esub>?t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n    \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n  \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<ge>n.\n               enat i < n' \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>lnth t\n         i\\<^esub>) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n  \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n  \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  n' - 1 < llength t\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \"Same and Not Same\""], ["", "lemma nAct_same_not_active:\n  assumes \"\\<langle>c #\\<^bsub>n'\\<^esub> inf_llist t\\<rangle> = \\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>\"\n  shows \"\\<forall>k\\<ge>n. k<n' \\<longrightarrow> \\<not> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k.\n       n \\<le> enat k \\<longrightarrow>\n       enat k < n' \\<longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k.\n               n \\<le> enat k \\<longrightarrow>\n               enat k < n' \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>t\n                k\\<^esub>) \\<Longrightarrow>\n    False", "assume \"\\<not>(\\<forall>k\\<ge>n. k<n' \\<longrightarrow> \\<not> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>k.\n             n \\<le> enat k \\<longrightarrow>\n             enat k < n' \\<longrightarrow>\n             \\<not> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k.\n               n \\<le> enat k \\<longrightarrow>\n               enat k < n' \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>t\n                k\\<^esub>) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>k.\n             n \\<le> enat k \\<longrightarrow>\n             enat k < n' \\<longrightarrow>\n             \\<not> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "obtain k where \"k\\<ge>n\" and \"k<n'\" and \"\\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>k.\n             n \\<le> enat k \\<longrightarrow>\n             enat k < n' \\<longrightarrow>\n             \\<not> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>n \\<le> enat k; enat k < n';\n         \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  n \\<le> enat k\n  enat k < n'\n  \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k.\n               n \\<le> enat k \\<longrightarrow>\n               enat k < n' \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>t\n                k\\<^esub>) \\<Longrightarrow>\n    False", "hence \"\\<langle>c #\\<^bsub>Suc k\\<^esub> inf_llist t\\<rangle> = eSuc (\\<langle>c #\\<^bsub>k\\<^esub> inf_llist t\\<rangle>)\""], ["proof (prove)\nusing this:\n  n \\<le> enat k\n  enat k < n'\n  \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>inf_llist t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>inf_llist t\\<rangle> =\n  eSuc \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k.\n               n \\<le> enat k \\<longrightarrow>\n               enat k < n' \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>t\n                k\\<^esub>) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>inf_llist t\\<rangle> =\n  eSuc \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k.\n               n \\<le> enat k \\<longrightarrow>\n               enat k < n' \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>t\n                k\\<^esub>) \\<Longrightarrow>\n    False", "have \"\\<langle>c #\\<^bsub>k\\<^esub> inf_llist t\\<rangle>\\<noteq>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle> \\<noteq>\n    \\<infinity>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle> \\<noteq>\n  \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k.\n               n \\<le> enat k \\<longrightarrow>\n               enat k < n' \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>t\n                k\\<^esub>) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>inf_llist t\\<rangle> =\n  eSuc \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle> \\<noteq>\n  \\<infinity>", "have \"\\<langle>c #\\<^bsub>k\\<^esub> inf_llist t\\<rangle> < \\<langle>c #\\<^bsub>Suc k\\<^esub> inf_llist t\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>inf_llist t\\<rangle> =\n  eSuc \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle> \\<noteq>\n  \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>\n    < \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>inf_llist t\\<rangle>", "by fastforce"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>\n  < \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k.\n               n \\<le> enat k \\<longrightarrow>\n               enat k < n' \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>t\n                k\\<^esub>) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>\n  < \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k.\n               n \\<le> enat k \\<longrightarrow>\n               enat k < n' \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>t\n                k\\<^esub>) \\<Longrightarrow>\n    False", "from \\<open>n\\<le>k\\<close>"], ["proof (chain)\npicking this:\n  n \\<le> enat k", "have \"\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle> \\<le> \\<langle>c #\\<^bsub>k\\<^esub> inf_llist t\\<rangle>\""], ["proof (prove)\nusing this:\n  n \\<le> enat k\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>", "using nAct_mono"], ["proof (prove)\nusing this:\n  n \\<le> enat k\n  ?n \\<le> ?n' \\<Longrightarrow>\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle>\n  \\<le> \\<langle>?c #\\<^bsub>?n'\\<^esub>?t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>n\\<^esub>inf_llist t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k.\n               n \\<le> enat k \\<longrightarrow>\n               enat k < n' \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>t\n                k\\<^esub>) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>n\\<^esub>inf_llist t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k.\n               n \\<le> enat k \\<longrightarrow>\n               enat k < n' \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>t\n                k\\<^esub>) \\<Longrightarrow>\n    False", "from \\<open>k<n'\\<close>"], ["proof (chain)\npicking this:\n  enat k < n'", "have \"Suc k \\<le> n'\""], ["proof (prove)\nusing this:\n  enat k < n'\n\ngoal (1 subgoal):\n 1. enat (Suc k) \\<le> n'", "by (simp add: Suc_ile_eq)"], ["proof (state)\nthis:\n  enat (Suc k) \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k.\n               n \\<le> enat k \\<longrightarrow>\n               enat k < n' \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>t\n                k\\<^esub>) \\<Longrightarrow>\n    False", "hence \"\\<langle>c #\\<^bsub>Suc k\\<^esub> inf_llist t\\<rangle> \\<le> \\<langle>c #\\<^bsub>n'\\<^esub> inf_llist t\\<rangle>\""], ["proof (prove)\nusing this:\n  enat (Suc k) \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>inf_llist t\\<rangle>", "using nAct_mono"], ["proof (prove)\nusing this:\n  enat (Suc k) \\<le> n'\n  ?n \\<le> ?n' \\<Longrightarrow>\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle>\n  \\<le> \\<langle>?c #\\<^bsub>?n'\\<^esub>?t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>inf_llist t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>inf_llist t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k.\n               n \\<le> enat k \\<longrightarrow>\n               enat k < n' \\<longrightarrow>\n               \\<not> \\<parallel>c\\<parallel>\\<^bsub>t\n                k\\<^esub>) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>\n  < \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>n\\<^esub>inf_llist t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>inf_llist t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>inf_llist t\\<rangle>", "show False"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>\n  < \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>n\\<^esub>inf_llist t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>inf_llist t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>\n  < \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>n\\<^esub>inf_llist t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat k\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>enat (Suc k)\\<^esub>inf_llist t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>n'\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>n'\\<^esub>inf_llist t\\<rangle> =\n  \\<langle>c #\\<^bsub>n\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_not_same_active:\n  assumes \"\\<langle>c #\\<^bsub>enat n\\<^esub> t\\<rangle> < \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\"\n    and \"\\<not> lfinite t \\<or> n' - 1 < llength t\"\n  shows \"\\<exists>(i::nat)\\<ge>n. enat i< n' \\<and> i<llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       enat i < n' \\<and>\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       enat i < n' \\<and>\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "from assms"], ["proof (chain)\npicking this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  \\<not> lfinite t \\<or> n' - 1 < llength t", "have \"llength(\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) < llength (\\<pi>\\<^bsub>c\\<^esub>(ltake n' t))\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n    < llength (\\<pi>\\<^bsub>c\\<^esub>ltake n' t)", "using nAct_def"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n    < llength (\\<pi>\\<^bsub>c\\<^esub>ltake n' t)", "by simp"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n  < llength (\\<pi>\\<^bsub>c\\<^esub>ltake n' t)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       enat i < n' \\<and>\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "hence \"\\<pi>\\<^bsub>c\\<^esub>(ltake n' t) \\<noteq> \\<pi>\\<^bsub>c\\<^esub>(ltake n t)\""], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n  < llength (\\<pi>\\<^bsub>c\\<^esub>ltake n' t)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake n' t \\<noteq>\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "by auto"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t \\<noteq>\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       enat i < n' \\<and>\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "moreover"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t \\<noteq>\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       enat i < n' \\<and>\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "from assms"], ["proof (chain)\npicking this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  \\<not> lfinite t \\<or> n' - 1 < llength t", "have \"enat n < n'\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n\ngoal (1 subgoal):\n 1. enat n < n'", "using nAct_strict_mono_back[of c \"enat n\" t n']"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle> \\<Longrightarrow>\n  enat n < n'\n\ngoal (1 subgoal):\n 1. enat n < n'", "by simp"], ["proof (state)\nthis:\n  enat n < n'\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       enat i < n' \\<and>\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t \\<noteq>\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n  enat n < n'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t \\<noteq>\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n  enat n < n'\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       enat i < n' \\<and>\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "using proj_not_same_active[of n n' t c] assms"], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake n' t \\<noteq>\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n  enat n < n'\n  \\<lbrakk>enat n \\<le> n'; \\<not> lfinite t \\<or> n' - 1 < llength t;\n   \\<pi>\\<^bsub>c\\<^esub>ltake n' t \\<noteq>\n   \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k\\<ge>n.\n                       enat k < n' \\<and>\n                       enat k < llength t \\<and>\n                       \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>n'\\<^esub>t\\<rangle>\n  \\<not> lfinite t \\<or> n' - 1 < llength t\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n.\n       enat i < n' \\<and>\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "by simp"], ["proof (state)\nthis:\n  \\<exists>i\\<ge>n.\n     enat i < n' \\<and>\n     enat i < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_less_llength_active:\n  assumes \"x < llength (\\<pi>\\<^bsub>c\\<^esub>(t))\"\n    and \"enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub> t\\<rangle>\"\n  shows \"\\<exists>(i::nat)\\<ge>n'. i<llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n'.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n'.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "have \"llength(\\<pi>\\<^bsub>c\\<^esub>(ltake n' t)) < llength (\\<pi>\\<^bsub>c\\<^esub>(t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t)\n    < llength (\\<pi>\\<^bsub>c\\<^esub>t)", "using assms(1) assms(2) nAct_def"], ["proof (prove)\nusing this:\n  enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t)\n  enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t)\n    < llength (\\<pi>\\<^bsub>c\\<^esub>t)", "by auto"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t)\n  < llength (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n'.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "hence \"llength(\\<pi>\\<^bsub>c\\<^esub>(ltake n' t)) < llength (\\<pi>\\<^bsub>c\\<^esub>(ltake (llength t) t))\""], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t)\n  < llength (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t)\n    < llength (\\<pi>\\<^bsub>c\\<^esub>ltake (llength t) t)", "by (simp add: ltake_all)"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t)\n  < llength (\\<pi>\\<^bsub>c\\<^esub>ltake (llength t) t)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n'.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "hence \"\\<langle>c #\\<^bsub>enat n'\\<^esub> t\\<rangle> < \\<langle>c #\\<^bsub>llength t\\<^esub> t\\<rangle>\""], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t)\n  < llength (\\<pi>\\<^bsub>c\\<^esub>ltake (llength t) t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n    < \\<langle>c #\\<^bsub>llength t\\<^esub>t\\<rangle>", "using nAct_def"], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n') t)\n  < llength (\\<pi>\\<^bsub>c\\<^esub>ltake (llength t) t)\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n    < \\<langle>c #\\<^bsub>llength t\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>llength t\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n'.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "moreover"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>llength t\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n'.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "have \"\\<not> lfinite t \\<or> llength t - 1 < llength t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> lfinite t \\<or> llength t - 1 < llength t", "proof (rule Meson.imp_to_disjD[OF HOL.impI])"], ["proof (state)\ngoal (1 subgoal):\n 1. lfinite t \\<Longrightarrow> llength t - 1 < llength t", "assume \"lfinite t\""], ["proof (state)\nthis:\n  lfinite t\n\ngoal (1 subgoal):\n 1. lfinite t \\<Longrightarrow> llength t - 1 < llength t", "hence \"llength t \\<noteq> \\<infinity>\""], ["proof (prove)\nusing this:\n  lfinite t\n\ngoal (1 subgoal):\n 1. llength t \\<noteq> \\<infinity>", "by (simp add: llength_eq_infty_conv_lfinite)"], ["proof (state)\nthis:\n  llength t \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. lfinite t \\<Longrightarrow> llength t - 1 < llength t", "moreover"], ["proof (state)\nthis:\n  llength t \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. lfinite t \\<Longrightarrow> llength t - 1 < llength t", "have \"llength t>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < llength t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < llength t", "from \\<open>x < llength (\\<pi>\\<^bsub>c\\<^esub>(t))\\<close>"], ["proof (chain)\npicking this:\n  enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t)", "have \"llength (\\<pi>\\<^bsub>c\\<^esub>(t))>0\""], ["proof (prove)\nusing this:\n  enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal (1 subgoal):\n 1. 0 < llength (\\<pi>\\<^bsub>c\\<^esub>t)", "by auto"], ["proof (state)\nthis:\n  0 < llength (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal (1 subgoal):\n 1. 0 < llength t", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 < llength (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal (1 subgoal):\n 1. 0 < llength t", "using proj_llength Orderings.order_class.order.strict_trans2"], ["proof (prove)\nusing this:\n  0 < llength (\\<pi>\\<^bsub>c\\<^esub>t)\n  llength (\\<pi>\\<^bsub>?c\\<^esub>?t) \\<le> llength ?t\n  \\<lbrakk>?a < ?b; ?b \\<le> ?c\\<rbrakk> \\<Longrightarrow> ?a < ?c\n\ngoal (1 subgoal):\n 1. 0 < llength t", "by blast"], ["proof (state)\nthis:\n  0 < llength t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < llength t\n\ngoal (1 subgoal):\n 1. lfinite t \\<Longrightarrow> llength t - 1 < llength t", "ultimately"], ["proof (chain)\npicking this:\n  llength t \\<noteq> \\<infinity>\n  0 < llength t", "show \"llength t - 1 < llength t\""], ["proof (prove)\nusing this:\n  llength t \\<noteq> \\<infinity>\n  0 < llength t\n\ngoal (1 subgoal):\n 1. llength t - 1 < llength t", "by (metis One_nat_def \\<open>lfinite t\\<close> diff_Suc_less\n      enat_ord_simps(2) idiff_enat_enat lfinite_conv_llength_enat one_enat_def zero_enat_def)"], ["proof (state)\nthis:\n  llength t - 1 < llength t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> lfinite t \\<or> llength t - 1 < llength t\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n'.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>llength t\\<^esub>t\\<rangle>\n  \\<not> lfinite t \\<or> llength t - 1 < llength t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>llength t\\<^esub>t\\<rangle>\n  \\<not> lfinite t \\<or> llength t - 1 < llength t\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n'.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "using nAct_not_same_active[of c n' t \"llength t\"]"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>llength t\\<^esub>t\\<rangle>\n  \\<not> lfinite t \\<or> llength t - 1 < llength t\n  \\<lbrakk>\\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n           < \\<langle>c #\\<^bsub>llength t\\<^esub>t\\<rangle>;\n   \\<not> lfinite t \\<or> llength t - 1 < llength t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<ge>n'.\n                       enat i < llength t \\<and>\n                       enat i < llength t \\<and>\n                       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n'.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "by simp"], ["proof (state)\nthis:\n  \\<exists>i\\<ge>n'.\n     enat i < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_exists:\n  assumes \"x < llength (\\<pi>\\<^bsub>c\\<^esub>(t))\"\n  shows \"\\<exists>(n'::nat). enat x = \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n'. enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n'. enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "have \"x < llength (\\<pi>\\<^bsub>c\\<^esub>(t)) \\<longrightarrow> (\\<exists>(n'::nat). enat x = \\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n    (\\<exists>n'. enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)", "proof (induction x)"], ["proof (state)\ngoal (2 subgoals):\n 1. enat 0 < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n    (\\<exists>n'. enat 0 = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)\n 2. \\<And>x.\n       enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n       (\\<exists>n'.\n           enat x =\n           \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>) \\<Longrightarrow>\n       enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n       (\\<exists>n'.\n           enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. enat 0 < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n    (\\<exists>n'. enat 0 = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)\n 2. \\<And>x.\n       enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n       (\\<exists>n'.\n           enat x =\n           \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>) \\<Longrightarrow>\n       enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n       (\\<exists>n'.\n           enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. enat 0 < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n    (\\<exists>n'. enat 0 = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)", "by (metis nAct_0 zero_enat_def)"], ["proof (state)\nthis:\n  enat 0 < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n  (\\<exists>n'. enat 0 = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n       (\\<exists>n'.\n           enat x =\n           \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>) \\<Longrightarrow>\n       enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n       (\\<exists>n'.\n           enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n       (\\<exists>n'.\n           enat x =\n           \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>) \\<Longrightarrow>\n       enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n       (\\<exists>n'.\n           enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)", "case (Suc x)"], ["proof (state)\nthis:\n  enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n  (\\<exists>n'. enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n       (\\<exists>n'.\n           enat x =\n           \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>) \\<Longrightarrow>\n       enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n       (\\<exists>n'.\n           enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n    (\\<exists>n'.\n        enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<Longrightarrow>\n    \\<exists>n'.\n       enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "assume \"Suc x < llength (\\<pi>\\<^bsub>c\\<^esub>(t))\""], ["proof (state)\nthis:\n  enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal (1 subgoal):\n 1. enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<Longrightarrow>\n    \\<exists>n'.\n       enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "hence \"x < llength (\\<pi>\\<^bsub>c\\<^esub>(t))\""], ["proof (prove)\nusing this:\n  enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal (1 subgoal):\n 1. enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t)", "using Suc_ile_eq less_imp_le"], ["proof (prove)\nusing this:\n  enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t)\n  (enat (Suc ?m) \\<le> ?n) = (enat ?m < ?n)\n  ?x < ?y \\<Longrightarrow> ?x \\<le> ?y\n\ngoal (1 subgoal):\n 1. enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t)", "by auto"], ["proof (state)\nthis:\n  enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal (1 subgoal):\n 1. enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<Longrightarrow>\n    \\<exists>n'.\n       enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "with Suc.IH"], ["proof (chain)\npicking this:\n  enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n  (\\<exists>n'. enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)\n  enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t)", "obtain n' where \"enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub> t\\<rangle>\""], ["proof (prove)\nusing this:\n  enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n  (\\<exists>n'. enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)\n  enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal (1 subgoal):\n 1. (\\<And>n'.\n        enat x =\n        \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<Longrightarrow>\n    \\<exists>n'.\n       enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "with \\<open>x < llength (\\<pi>\\<^bsub>c\\<^esub>(t))\\<close>"], ["proof (chain)\npicking this:\n  enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t)\n  enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "have \"\\<exists>i\\<ge>n'. i < llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\""], ["proof (prove)\nusing this:\n  enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t)\n  enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n'.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "using nAct_less_llength_active[of x c t n']"], ["proof (prove)\nusing this:\n  enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t)\n  enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n  \\<lbrakk>enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t);\n   enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<ge>n'.\n                       enat i < llength t \\<and>\n                       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>n'.\n       enat i < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "by simp"], ["proof (state)\nthis:\n  \\<exists>i\\<ge>n'.\n     enat i < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<Longrightarrow>\n    \\<exists>n'.\n       enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "then"], ["proof (chain)\npicking this:\n  \\<exists>i\\<ge>n'.\n     enat i < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "obtain i where \"i\\<ge>n'\" and \"i<llength t\" and \"\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n        and \"\\<nexists>k. n'\\<le>k \\<and> k<i \\<and> k<llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n'.\n     enat i < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>n' \\<le> i; enat i < llength t;\n         \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>;\n         \\<not> (\\<exists>k\\<ge>n'.\n                    k < i \\<and>\n                    enat k < llength t \\<and>\n                    \\<parallel>c\\<parallel>\\<^bsub>lnth t\n              k\\<^esub>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using lActive_least[of n' t c]"], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n'.\n     enat i < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  \\<exists>i\\<ge>n'.\n     enat i < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub> \\<Longrightarrow>\n  \\<exists>i\\<ge>n'.\n     enat i < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub> \\<and>\n     \\<not> (\\<exists>k\\<ge>n'.\n                k < i \\<and>\n                enat k < llength t \\<and>\n                \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>n' \\<le> i; enat i < llength t;\n         \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>;\n         \\<not> (\\<exists>k\\<ge>n'.\n                    k < i \\<and>\n                    enat k < llength t \\<and>\n                    \\<parallel>c\\<parallel>\\<^bsub>lnth t\n              k\\<^esub>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n' \\<le> i\n  enat i < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  \\<not> (\\<exists>k\\<ge>n'.\n             k < i \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<Longrightarrow>\n    \\<exists>n'.\n       enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  n' \\<le> i\n  enat i < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  \\<not> (\\<exists>k\\<ge>n'.\n             k < i \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<Longrightarrow>\n    \\<exists>n'.\n       enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "from \\<open>i<llength t\\<close>"], ["proof (chain)\npicking this:\n  enat i < llength t", "have \"\\<not> lfinite t \\<or> enat (Suc i) - 1 < llength t\""], ["proof (prove)\nusing this:\n  enat i < llength t\n\ngoal (1 subgoal):\n 1. \\<not> lfinite t \\<or> enat (Suc i) - 1 < llength t", "by (simp add: one_enat_def)"], ["proof (state)\nthis:\n  \\<not> lfinite t \\<or> enat (Suc i) - 1 < llength t\n\ngoal (1 subgoal):\n 1. enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<Longrightarrow>\n    \\<exists>n'.\n       enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<not> lfinite t \\<or> enat (Suc i) - 1 < llength t\n\ngoal (1 subgoal):\n 1. enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<Longrightarrow>\n    \\<exists>n'.\n       enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "have \"enat i < enat (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat i < enat (Suc i)", "by simp"], ["proof (state)\nthis:\n  enat i < enat (Suc i)\n\ngoal (1 subgoal):\n 1. enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<Longrightarrow>\n    \\<exists>n'.\n       enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  enat i < enat (Suc i)\n\ngoal (1 subgoal):\n 1. enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<Longrightarrow>\n    \\<exists>n'.\n       enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "have \"\\<forall>i'. (n' \\<le> i' \\<and> enat i'<enat (Suc i) \\<and> i'<llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub>) \\<longrightarrow> (i' = i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i'.\n       n' \\<le> i' \\<and>\n       enat i' < enat (Suc i) \\<and>\n       enat i' < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<longrightarrow>\n       i' = i", "proof (rule HOL.impI[THEN HOL.allI])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i'.\n       n' \\<le> i' \\<and>\n       enat i' < enat (Suc i) \\<and>\n       enat i' < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<Longrightarrow>\n       i' = i", "fix i'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i'.\n       n' \\<le> i' \\<and>\n       enat i' < enat (Suc i) \\<and>\n       enat i' < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<Longrightarrow>\n       i' = i", "assume \"n' \\<le> i' \\<and> enat i'<enat (Suc i) \\<and> i'<llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub>\""], ["proof (state)\nthis:\n  n' \\<le> i' \\<and>\n  enat i' < enat (Suc i) \\<and>\n  enat i' < llength t \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>i'.\n       n' \\<le> i' \\<and>\n       enat i' < enat (Suc i) \\<and>\n       enat i' < llength t \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<Longrightarrow>\n       i' = i", "with \\<open>\\<nexists>k. n'\\<le>k \\<and> k<i \\<and> k<llength t \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>\\<close>"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>k\\<ge>n'.\n             k < i \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n  n' \\<le> i' \\<and>\n  enat i' < enat (Suc i) \\<and>\n  enat i' < llength t \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub>", "show \"i'=i\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>k\\<ge>n'.\n             k < i \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n  n' \\<le> i' \\<and>\n  enat i' < enat (Suc i) \\<and>\n  enat i' < llength t \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub>\n\ngoal (1 subgoal):\n 1. i' = i", "by fastforce"], ["proof (state)\nthis:\n  i' = i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i'.\n     n' \\<le> i' \\<and>\n     enat i' < enat (Suc i) \\<and>\n     enat i' < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<longrightarrow>\n     i' = i\n\ngoal (1 subgoal):\n 1. enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<Longrightarrow>\n    \\<exists>n'.\n       enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  n' \\<le> i\n  enat i < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  \\<not> (\\<exists>k\\<ge>n'.\n             k < i \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n  \\<not> lfinite t \\<or> enat (Suc i) - 1 < llength t\n  enat i < enat (Suc i)\n  \\<forall>i'.\n     n' \\<le> i' \\<and>\n     enat i' < enat (Suc i) \\<and>\n     enat i' < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<longrightarrow>\n     i' = i", "have \"\\<langle>c #\\<^bsub>Suc i\\<^esub> t\\<rangle> = eSuc (\\<langle>c #\\<^bsub>n'\\<^esub> t\\<rangle>)\""], ["proof (prove)\nusing this:\n  n' \\<le> i\n  enat i < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  \\<not> (\\<exists>k\\<ge>n'.\n             k < i \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n  \\<not> lfinite t \\<or> enat (Suc i) - 1 < llength t\n  enat i < enat (Suc i)\n  \\<forall>i'.\n     n' \\<le> i' \\<and>\n     enat i' < enat (Suc i) \\<and>\n     enat i' < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<longrightarrow>\n     i' = i\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "using nAct_active_suc[of t \"Suc i\" n' i c]"], ["proof (prove)\nusing this:\n  n' \\<le> i\n  enat i < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  \\<not> (\\<exists>k\\<ge>n'.\n             k < i \\<and>\n             enat k < llength t \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>lnth t k\\<^esub>)\n  \\<not> lfinite t \\<or> enat (Suc i) - 1 < llength t\n  enat i < enat (Suc i)\n  \\<forall>i'.\n     n' \\<le> i' \\<and>\n     enat i' < enat (Suc i) \\<and>\n     enat i' < llength t \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<longrightarrow>\n     i' = i\n  \\<lbrakk>\\<not> lfinite t \\<or> enat (Suc i) - 1 < llength t; n' \\<le> i;\n   enat i < enat (Suc i); \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>;\n   \\<forall>i'.\n      n' \\<le> i' \\<and>\n      enat i' < enat (Suc i) \\<and>\n      enat i' < llength t \\<and>\n      \\<parallel>c\\<parallel>\\<^bsub>lnth t i'\\<^esub> \\<longrightarrow>\n      i' = i\\<rbrakk>\n  \\<Longrightarrow> \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n                    eSuc \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n  eSuc \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<Longrightarrow>\n    \\<exists>n'.\n       enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "with \\<open>enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub> t\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n  eSuc \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "have \"\\<langle>c #\\<^bsub>Suc i\\<^esub> t\\<rangle> = eSuc (enat x)\""], ["proof (prove)\nusing this:\n  enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n  eSuc \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> = eSuc (enat x)", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> = eSuc (enat x)\n\ngoal (1 subgoal):\n 1. enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<Longrightarrow>\n    \\<exists>n'.\n       enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "thus \"\\<exists>n'. enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub> t\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> = eSuc (enat x)\n\ngoal (1 subgoal):\n 1. \\<exists>n'.\n       enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "by (metis eSuc_enat)"], ["proof (state)\nthis:\n  \\<exists>n'. enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  enat (Suc x) < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n  (\\<exists>n'.\n      enat (Suc x) = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n  (\\<exists>n'. enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<exists>n'. enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "with assms"], ["proof (chain)\npicking this:\n  enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t)\n  enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n  (\\<exists>n'. enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)", "show ?thesis"], ["proof (prove)\nusing this:\n  enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t)\n  enat x < llength (\\<pi>\\<^bsub>c\\<^esub>t) \\<longrightarrow>\n  (\\<exists>n'. enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<exists>n'. enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<exists>n'. enat x = \\<langle>c #\\<^bsub>enat n'\\<^esub>t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Projection and Activation\""], ["", "text \\<open>\n  In the following we provide some properties about the relationship between the projection and activations operator.\n\\<close>"], ["", "lemma nAct_le_proj:\n  \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>(t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "from nAct_def"], ["proof (chain)\npicking this:\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)", "have \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> = llength (\\<pi>\\<^bsub>c\\<^esub>(ltake n t))\""], ["proof (prove)\nusing this:\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> =\n    llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "moreover"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle> =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "have \"llength (\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>(t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "have \"lprefix (ltake n t) t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lprefix (ltake n t) t", "by simp"], ["proof (state)\nthis:\n  lprefix (ltake n t) t\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "hence \"lprefix (\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) (\\<pi>\\<^bsub>c\\<^esub>(t))\""], ["proof (prove)\nusing this:\n  lprefix (ltake n t) t\n\ngoal (1 subgoal):\n 1. lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake n t) (\\<pi>\\<^bsub>c\\<^esub>t)", "by simp"], ["proof (state)\nthis:\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake n t) (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "hence \"llength (\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>(t))\""], ["proof (prove)\nusing this:\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake n t) (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "using lprefix_llength_le"], ["proof (prove)\nusing this:\n  lprefix (\\<pi>\\<^bsub>c\\<^esub>ltake n t) (\\<pi>\\<^bsub>c\\<^esub>t)\n  lprefix ?xs ?ys \\<Longrightarrow> llength ?xs \\<le> llength ?ys\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "by blast"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n  \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "thus ?thesis"], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n  \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "by auto"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n  \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n  \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "thus ?thesis"], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n  \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "using nAct_def"], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake n t)\n  \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>n\\<^esub>t\\<rangle>\n  \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_nAct:\n  assumes \"(enat n < llength t)\"\n  shows \"\\<pi>\\<^bsub>c\\<^esub>(ltake n t) = ltake (\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle>) (\\<pi>\\<^bsub>c\\<^esub>(t))\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n    ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n    ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t)", "have \"?lhs = ltake (llength (\\<pi>\\<^bsub>c\\<^esub>(ltake n t))) (\\<pi>\\<^bsub>c\\<^esub>(ltake n t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n    ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)", "using ltake_all[of \"\\<pi>\\<^bsub>c\\<^esub>(ltake n t)\" \"llength (\\<pi>\\<^bsub>c\\<^esub>(ltake n t))\"]"], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n  \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t) \\<Longrightarrow>\n  ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t) =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n    ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n  ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n    ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t)", "also"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n  ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n    ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t)", "have \"\\<dots> = ltake (llength (\\<pi>\\<^bsub>c\\<^esub>(ltake n t))) ((\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>(ldrop n t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t) =\n    ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n      (\\<pi>\\<^bsub>c\\<^esub>ldrop (enat n) t))", "using ltake_lappend1[of \"llength (\\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t))\" \"\\<pi>\\<^bsub>c\\<^esub>(ltake n t)\" \"(\\<pi>\\<^bsub>c\\<^esub>(ldrop n t))\"]"], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n  \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t) \\<Longrightarrow>\n  ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<pi>\\<^bsub>c\\<^esub>ldrop (enat n) t)) =\n  ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n\ngoal (1 subgoal):\n 1. ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t) =\n    ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n      (\\<pi>\\<^bsub>c\\<^esub>ldrop (enat n) t))", "by simp"], ["proof (state)\nthis:\n  ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t) =\n  ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<pi>\\<^bsub>c\\<^esub>ldrop (enat n) t))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n    ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t)", "also"], ["proof (state)\nthis:\n  ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t) =\n  ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<pi>\\<^bsub>c\\<^esub>ldrop (enat n) t))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n    ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t)", "have \"\\<dots> = ltake (\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle>) ((\\<pi>\\<^bsub>c\\<^esub>(ltake n t)) @\\<^sub>l (\\<pi>\\<^bsub>c\\<^esub>(ldrop n t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n      (\\<pi>\\<^bsub>c\\<^esub>ldrop (enat n) t)) =\n    ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n      (\\<pi>\\<^bsub>c\\<^esub>ldrop (enat n) t))", "using nAct_def"], ["proof (prove)\nusing this:\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n\ngoal (1 subgoal):\n 1. ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n      (\\<pi>\\<^bsub>c\\<^esub>ldrop (enat n) t)) =\n    ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n      (\\<pi>\\<^bsub>c\\<^esub>ldrop (enat n) t))", "by simp"], ["proof (state)\nthis:\n  ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<pi>\\<^bsub>c\\<^esub>ldrop (enat n) t)) =\n  ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<pi>\\<^bsub>c\\<^esub>ldrop (enat n) t))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n    ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t)", "also"], ["proof (state)\nthis:\n  ltake (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t))\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<pi>\\<^bsub>c\\<^esub>ldrop (enat n) t)) =\n  ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<pi>\\<^bsub>c\\<^esub>ldrop (enat n) t))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n    ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t)", "have \"\\<dots> = ltake (\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle>) (\\<pi>\\<^bsub>c\\<^esub>((ltake (enat n) t) @\\<^sub>l (ldrop n t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n      (\\<pi>\\<^bsub>c\\<^esub>ldrop (enat n) t)) =\n    ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l ldrop (enat n) t))", "by simp"], ["proof (state)\nthis:\n  ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<pi>\\<^bsub>c\\<^esub>ldrop (enat n) t)) =\n  ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n   (\\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l ldrop (enat n) t))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n    ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t)", "also"], ["proof (state)\nthis:\n  ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t @\\<^sub>l\n    (\\<pi>\\<^bsub>c\\<^esub>ldrop (enat n) t)) =\n  ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n   (\\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l ldrop (enat n) t))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n    ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t)", "have \"\\<dots> = ltake (\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle>) (\\<pi>\\<^bsub>c\\<^esub>(t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l ldrop (enat n) t)) =\n    ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t)", "using lappend_ltake_ldrop[of n t]"], ["proof (prove)\nusing this:\n  ltake (enat n) t @\\<^sub>l ldrop (enat n) t = t\n\ngoal (1 subgoal):\n 1. ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l ldrop (enat n) t)) =\n    ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t)", "by simp"], ["proof (state)\nthis:\n  ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n   (\\<pi>\\<^bsub>c\\<^esub>(ltake (enat n) t @\\<^sub>l ldrop (enat n) t)) =\n  ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n   (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n    ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t)", "finally"], ["proof (chain)\npicking this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n  ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n   (\\<pi>\\<^bsub>c\\<^esub>t)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n  ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n   (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n    ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t)", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t =\n  ltake \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle>\n   (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_active_nth:\n  assumes \"enat (Suc i) < llength t\" \"\\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\"\n  shows \"lnth (\\<pi>\\<^bsub>c\\<^esub>(t)) (the_enat (\\<langle>c #\\<^bsub>i\\<^esub> t\\<rangle>)) = \\<sigma>\\<^bsub>c\\<^esub>(lnth t i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "from assms"], ["proof (chain)\npicking this:\n  enat (Suc i) < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "have \"enat i < llength t\""], ["proof (prove)\nusing this:\n  enat (Suc i) < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. enat i < llength t", "using Suc_ile_eq[of i \"llength t\"]"], ["proof (prove)\nusing this:\n  enat (Suc i) < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  (enat (Suc i) \\<le> llength t) = (enat i < llength t)\n\ngoal (1 subgoal):\n 1. enat i < llength t", "by auto"], ["proof (state)\nthis:\n  enat i < llength t\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "with assms"], ["proof (chain)\npicking this:\n  enat (Suc i) < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  enat i < llength t", "have \"\\<pi>\\<^bsub>c\\<^esub>(ltake (Suc i) t) = (\\<pi>\\<^bsub>c\\<^esub>(ltake i t)) @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l []\\<^sub>l)\""], ["proof (prove)\nusing this:\n  enat (Suc i) < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  enat i < llength t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n    \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "moreover"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "have \"lnth ((\\<pi>\\<^bsub>c\\<^esub>(ltake i t)) @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l []\\<^sub>l))\n    (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(ltake i t)))) = \\<sigma>\\<^bsub>c\\<^esub>(lnth t i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n      (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lnth\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n      (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "have \"\\<not> lnull ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l []\\<^sub>l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> lnull (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "by simp"], ["proof (state)\nthis:\n  \\<not> lnull (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. lnth\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n      (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "moreover"], ["proof (state)\nthis:\n  \\<not> lnull (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. lnth\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n      (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "have \"lfinite (\\<pi>\\<^bsub>c\\<^esub>(ltake i t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)", "by simp"], ["proof (state)\nthis:\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)\n\ngoal (1 subgoal):\n 1. lnth\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n      (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> lnull (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)", "have \"lnth ((\\<pi>\\<^bsub>c\\<^esub>(ltake i t)) @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l []\\<^sub>l))\n      (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(ltake i t)))) = lhd ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l []\\<^sub>l)\""], ["proof (prove)\nusing this:\n  \\<not> lnull (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)\n\ngoal (1 subgoal):\n 1. lnth\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n      (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n    lhd (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)", "by simp"], ["proof (state)\nthis:\n  lnth\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n  lhd (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. lnth\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n      (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "also"], ["proof (state)\nthis:\n  lnth\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n  lhd (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n\ngoal (1 subgoal):\n 1. lnth\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n      (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "have \"\\<dots> = \\<sigma>\\<^bsub>c\\<^esub>(lnth t i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lhd (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "by simp"], ["proof (state)\nthis:\n  lhd (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l) =\n  \\<sigma>\\<^bsub>c\\<^esub>lnth t i\n\ngoal (1 subgoal):\n 1. lnth\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n      (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "finally"], ["proof (chain)\npicking this:\n  lnth\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n  \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "show \"lnth ((\\<pi>\\<^bsub>c\\<^esub>(ltake i t)) @\\<^sub>l ((\\<sigma>\\<^bsub>c\\<^esub>(lnth t i)) #\\<^sub>l []\\<^sub>l))\n      (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(ltake i t)))) = \\<sigma>\\<^bsub>c\\<^esub>(lnth t i)\""], ["proof (prove)\nusing this:\n  lnth\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n  \\<sigma>\\<^bsub>c\\<^esub>lnth t i\n\ngoal (1 subgoal):\n 1. lnth\n     (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n      (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "by simp"], ["proof (state)\nthis:\n  lnth\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n  \\<sigma>\\<^bsub>c\\<^esub>lnth t i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lnth\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n  \\<sigma>\\<^bsub>c\\<^esub>lnth t i\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "ultimately"], ["proof (chain)\npicking this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n  lnth\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n  \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "have \"\\<sigma>\\<^bsub>c\\<^esub>(lnth t i) = lnth (\\<pi>\\<^bsub>c\\<^esub>(ltake (Suc i) t))\n    (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(ltake i t))))\""], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n  (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l)\n  lnth\n   (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t @\\<^sub>l\n    (\\<sigma>\\<^bsub>c\\<^esub>lnth t i #\\<^sub>l []\\<^sub>l))\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n  \\<sigma>\\<^bsub>c\\<^esub>lnth t i\n\ngoal (1 subgoal):\n 1. \\<sigma>\\<^bsub>c\\<^esub>lnth t i =\n    lnth (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)))", "by simp"], ["proof (state)\nthis:\n  \\<sigma>\\<^bsub>c\\<^esub>lnth t i =\n  lnth (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)))\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "also"], ["proof (state)\nthis:\n  \\<sigma>\\<^bsub>c\\<^esub>lnth t i =\n  lnth (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t)))\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "have \"\\<dots> = lnth (\\<pi>\\<^bsub>c\\<^esub>(ltake (Suc i) t)) (the_enat (\\<langle>c #\\<^bsub>i\\<^esub> t\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n    lnth (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)", "using nAct_def"], ["proof (prove)\nusing this:\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n    lnth (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)", "by simp"], ["proof (state)\nthis:\n  lnth (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n  lnth (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n   (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "also"], ["proof (state)\nthis:\n  lnth (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat i) t))) =\n  lnth (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n   (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "have \"\\<dots> = lnth (ltake (\\<langle>c #\\<^bsub>Suc i\\<^esub> t\\<rangle>) (\\<pi>\\<^bsub>c\\<^esub>(t))) (the_enat (\\<langle>c #\\<^bsub>i\\<^esub> t\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    lnth\n     (ltake \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n       (\\<pi>\\<^bsub>c\\<^esub>t))\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)", "using proj_nAct[of \"Suc i\" t c] assms"], ["proof (prove)\nusing this:\n  enat (Suc i) < llength t \\<Longrightarrow>\n  \\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t =\n  ltake \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n   (\\<pi>\\<^bsub>c\\<^esub>t)\n  enat (Suc i) < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    lnth\n     (ltake \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n       (\\<pi>\\<^bsub>c\\<^esub>t))\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)", "by simp"], ["proof (state)\nthis:\n  lnth (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n   (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n  lnth\n   (ltake \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t))\n   (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "also"], ["proof (state)\nthis:\n  lnth (\\<pi>\\<^bsub>c\\<^esub>ltake (enat (Suc i)) t)\n   (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n  lnth\n   (ltake \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t))\n   (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "have \"\\<dots> = lnth (\\<pi>\\<^bsub>c\\<^esub>(t)) (the_enat (\\<langle>c #\\<^bsub>i\\<^esub> t\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth\n     (ltake \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n       (\\<pi>\\<^bsub>c\\<^esub>t))\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lnth\n     (ltake \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n       (\\<pi>\\<^bsub>c\\<^esub>t))\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)", "from assms"], ["proof (chain)\npicking this:\n  enat (Suc i) < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>", "have \"\\<langle>c #\\<^bsub>Suc i\\<^esub> t\\<rangle> = eSuc (\\<langle>c #\\<^bsub>i\\<^esub> t\\<rangle>)\""], ["proof (prove)\nusing this:\n  enat (Suc i) < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "using \\<open>enat i < llength t\\<close>"], ["proof (prove)\nusing this:\n  enat (Suc i) < llength t\n  \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>\n  enat i < llength t\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n    eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n  eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. lnth\n     (ltake \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n       (\\<pi>\\<^bsub>c\\<^esub>t))\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)", "moreover"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n  eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. lnth\n     (ltake \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n       (\\<pi>\\<^bsub>c\\<^esub>t))\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)", "have \"\\<langle>c #\\<^bsub>i\\<^esub> t\\<rangle> < eSuc (\\<langle>c #\\<^bsub>i\\<^esub> t\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>\n    < eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "using iless_Suc_eq[of \"the_enat (\\<langle>c #\\<^bsub>enat i\\<^esub> t\\<rangle>)\"]"], ["proof (prove)\nusing this:\n  (enat (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) < eSuc ?n) =\n  (enat (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) \\<le> ?n)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>\n    < eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>\n  < eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. lnth\n     (ltake \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n       (\\<pi>\\<^bsub>c\\<^esub>t))\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n  eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>\n  \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>\n  < eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>", "have \"\\<langle>c #\\<^bsub>i\\<^esub> t\\<rangle> < (\\<langle>c #\\<^bsub>Suc i\\<^esub> t\\<rangle>)\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle> =\n  eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>\n  \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>\n  < eSuc \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>\n    < \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. lnth\n     (ltake \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n       (\\<pi>\\<^bsub>c\\<^esub>t))\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)", "hence \"enat (the_enat (\\<langle>c #\\<^bsub>Suc i\\<^esub> t\\<rangle>)) > enat (the_enat (\\<langle>c #\\<^bsub>i\\<^esub> t\\<rangle>))\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>\n  < \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n\ngoal (1 subgoal):\n 1. enat (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)\n    < enat (the_enat \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>)", "by simp"], ["proof (state)\nthis:\n  enat (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)\n  < enat (the_enat \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>)\n\ngoal (1 subgoal):\n 1. lnth\n     (ltake \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n       (\\<pi>\\<^bsub>c\\<^esub>t))\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  enat (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)\n  < enat (the_enat \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>)\n\ngoal (1 subgoal):\n 1. lnth\n     (ltake \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n       (\\<pi>\\<^bsub>c\\<^esub>t))\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)", "using lnth_ltake[of \"the_enat (\\<langle>c #\\<^bsub>i\\<^esub> t\\<rangle>)\" \"the_enat (\\<langle>c #\\<^bsub>enat (Suc i)\\<^esub> t\\<rangle>)\" \"\\<pi>\\<^bsub>c\\<^esub>(t)\"]"], ["proof (prove)\nusing this:\n  enat (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)\n  < enat (the_enat \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>)\n  enat (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)\n  < enat\n     (the_enat\n       \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>) \\<Longrightarrow>\n  lnth\n   (ltake\n     (enat (the_enat \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>))\n     (\\<pi>\\<^bsub>c\\<^esub>t))\n   (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n  lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n   (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)\n\ngoal (1 subgoal):\n 1. lnth\n     (ltake \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n       (\\<pi>\\<^bsub>c\\<^esub>t))\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)", "by simp"], ["proof (state)\nthis:\n  lnth\n   (ltake \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t))\n   (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n  lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n   (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lnth\n   (ltake \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>t\\<rangle>\n     (\\<pi>\\<^bsub>c\\<^esub>t))\n   (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n  lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n   (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", "finally"], ["proof (chain)\npicking this:\n  \\<sigma>\\<^bsub>c\\<^esub>lnth t i =\n  lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n   (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<sigma>\\<^bsub>c\\<^esub>lnth t i =\n  lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n   (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>)\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n     (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n    \\<sigma>\\<^bsub>c\\<^esub>lnth t i", ".."], ["proof (state)\nthis:\n  lnth (\\<pi>\\<^bsub>c\\<^esub>t)\n   (the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>t\\<rangle>) =\n  \\<sigma>\\<^bsub>c\\<^esub>lnth t i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_eq_proj:\n  assumes \"\\<not>(\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\"\n  shows \"\\<langle>c #\\<^bsub>n\\<^esub> t\\<rangle> = llength (\\<pi>\\<^bsub>c\\<^esub>(t))\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n    llength (\\<pi>\\<^bsub>c\\<^esub>t)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n    llength (\\<pi>\\<^bsub>c\\<^esub>t)", "from nAct_def"], ["proof (chain)\npicking this:\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)", "have \"?lhs = llength (\\<pi>\\<^bsub>c\\<^esub>(ltake n t))\""], ["proof (prove)\nusing this:\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle> \\<equiv>\n  llength (\\<pi>\\<^bsub>?c\\<^esub>ltake ?n ?t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n    llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n    llength (\\<pi>\\<^bsub>c\\<^esub>t)", "moreover"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n    llength (\\<pi>\\<^bsub>c\\<^esub>t)", "from assms"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)", "have \"\\<forall>(n'::nat)\\<le>llength t. n'\\<ge>n \\<longrightarrow> (\\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n'\\<^esub>)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>lnth t i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<forall>n'.\n       enat n' \\<le> llength t \\<longrightarrow>\n       n \\<le> n' \\<longrightarrow>\n       \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n'\\<^esub>", "by simp"], ["proof (state)\nthis:\n  \\<forall>n'.\n     enat n' \\<le> llength t \\<longrightarrow>\n     n \\<le> n' \\<longrightarrow>\n     \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n'\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n    llength (\\<pi>\\<^bsub>c\\<^esub>t)", "hence \"\\<pi>\\<^bsub>c\\<^esub>(t) = \\<pi>\\<^bsub>c\\<^esub>(ltake n t)\""], ["proof (prove)\nusing this:\n  \\<forall>n'.\n     enat n' \\<le> llength t \\<longrightarrow>\n     n \\<le> n' \\<longrightarrow>\n     \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n'\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>t = \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "using proj_ltake"], ["proof (prove)\nusing this:\n  \\<forall>n'.\n     enat n' \\<le> llength t \\<longrightarrow>\n     n \\<le> n' \\<longrightarrow>\n     \\<not> \\<parallel>c\\<parallel>\\<^bsub>lnth t n'\\<^esub>\n  \\<forall>n'.\n     enat n' \\<le> llength ?t \\<longrightarrow>\n     ?n \\<le> n' \\<longrightarrow>\n     \\<not> \\<parallel>?c\\<parallel>\\<^bsub>lnth ?t\n       n'\\<^esub> \\<Longrightarrow>\n  \\<pi>\\<^bsub>?c\\<^esub>?t = \\<pi>\\<^bsub>?c\\<^esub>ltake (enat ?n) ?t\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>t = \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>t = \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n    llength (\\<pi>\\<^bsub>c\\<^esub>t)", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n  \\<pi>\\<^bsub>c\\<^esub>t = \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n  llength (\\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t)\n  \\<pi>\\<^bsub>c\\<^esub>t = \\<pi>\\<^bsub>c\\<^esub>ltake (enat n) t\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n    llength (\\<pi>\\<^bsub>c\\<^esub>t)", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>t\\<rangle> =\n  llength (\\<pi>\\<^bsub>c\\<^esub>t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_llength_proj:\n  assumes \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n  shows \"llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)) \\<ge> eSuc (\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "from \\<open>\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>", "obtain i where \"i\\<ge>n\" and \"\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"\\<not> (\\<exists>k\\<ge>n. k < i \\<and> k < llength (inf_llist t) \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>n \\<le> i; \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>;\n         \\<not> (\\<exists>k\\<ge>n.\n                    k < i \\<and>\n                    enat k < llength (inf_llist t) \\<and>\n                    \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using lActive_least[of n \"inf_llist t\" c]"], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<exists>i\\<ge>n.\n     enat i < llength (inf_llist t) \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t)\n                                     i\\<^esub> \\<Longrightarrow>\n  \\<exists>i\\<ge>n.\n     enat i < llength (inf_llist t) \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) i\\<^esub> \\<and>\n     \\<not> (\\<exists>k\\<ge>n.\n                k < i \\<and>\n                enat k < llength (inf_llist t) \\<and>\n                \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) k\\<^esub>)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>n \\<le> i; \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>;\n         \\<not> (\\<exists>k\\<ge>n.\n                    k < i \\<and>\n                    enat k < llength (inf_llist t) \\<and>\n                    \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n \\<le> i\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < i \\<and>\n             enat k < llength (inf_llist t) \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "moreover"], ["proof (state)\nthis:\n  n \\<le> i\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < i \\<and>\n             enat k < llength (inf_llist t) \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "have \"llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)) \\<ge> \\<langle>c #\\<^bsub>Suc i\\<^esub> inf_llist t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "using nAct_le_proj"], ["proof (prove)\nusing this:\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle>\n  \\<le> llength (\\<pi>\\<^bsub>?c\\<^esub>?t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>\n  \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "moreover"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>\n  \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "have \"eSuc (\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>) = \\<langle>c #\\<^bsub>Suc i\\<^esub> inf_llist t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>", "have \"enat (Suc i) < llength (inf_llist t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (Suc i) < llength (inf_llist t)", "by simp"], ["proof (state)\nthis:\n  enat (Suc i) < llength (inf_llist t)\n\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  enat (Suc i) < llength (inf_llist t)\n\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>", "have \"i < Suc i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < Suc i", "by simp"], ["proof (state)\nthis:\n  i < Suc i\n\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  i < Suc i\n\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>", "from \\<open>\\<not> (\\<exists>k\\<ge>n. k < i \\<and> k < llength (inf_llist t) \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\\<close>"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>k\\<ge>n.\n             k < i \\<and>\n             enat k < llength (inf_llist t) \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "have \"\\<forall>i'. n \\<le> i' \\<and> i' < Suc i \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) i'\\<^esub> \\<longrightarrow> i' = i\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>k\\<ge>n.\n             k < i \\<and>\n             enat k < llength (inf_llist t) \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<forall>i'.\n       n \\<le> i' \\<and>\n       i' < Suc i \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t)\n i'\\<^esub> \\<longrightarrow>\n       i' = i", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>i'.\n     n \\<le> i' \\<and>\n     i' < Suc i \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t)\n                                     i'\\<^esub> \\<longrightarrow>\n     i' = i\n\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  enat (Suc i) < llength (inf_llist t)\n  i < Suc i\n  \\<forall>i'.\n     n \\<le> i' \\<and>\n     i' < Suc i \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t)\n                                     i'\\<^esub> \\<longrightarrow>\n     i' = i", "show ?thesis"], ["proof (prove)\nusing this:\n  enat (Suc i) < llength (inf_llist t)\n  i < Suc i\n  \\<forall>i'.\n     n \\<le> i' \\<and>\n     i' < Suc i \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t)\n                                     i'\\<^esub> \\<longrightarrow>\n     i' = i\n\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>", "using nAct_active_suc \\<open>i\\<ge>n\\<close> \\<open>\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\\<close>"], ["proof (prove)\nusing this:\n  enat (Suc i) < llength (inf_llist t)\n  i < Suc i\n  \\<forall>i'.\n     n \\<le> i' \\<and>\n     i' < Suc i \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t)\n                                     i'\\<^esub> \\<longrightarrow>\n     i' = i\n  \\<lbrakk>\\<not> lfinite ?t \\<or> ?n' - 1 < llength ?t; ?n \\<le> ?i;\n   enat ?i < ?n'; \\<parallel>?c\\<parallel>\\<^bsub>lnth ?t ?i\\<^esub>;\n   \\<forall>i'.\n      ?n \\<le> i' \\<and>\n      enat i' < ?n' \\<and>\n      enat i' < llength ?t \\<and>\n      \\<parallel>?c\\<parallel>\\<^bsub>lnth ?t i'\\<^esub> \\<longrightarrow>\n      i' = ?i\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c #\\<^bsub>?n'\\<^esub>?t\\<rangle> =\n                    eSuc \\<langle>?c #\\<^bsub>enat ?n\\<^esub>?t\\<rangle>\n  n \\<le> i\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "ultimately"], ["proof (chain)\npicking this:\n  n \\<le> i\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < i \\<and>\n             enat k < llength (inf_llist t) \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>\n  \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n  eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  n \\<le> i\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < i \\<and>\n             enat k < llength (inf_llist t) \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>\n  \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n  eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat (Suc i)\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "by simp"], ["proof (state)\nthis:\n  eSuc \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Least not Active\""], ["", "text \\<open>\n  In the following, we introduce an operator to obtain the least point in time before a certain point in time where a component was deactivated.\n\\<close>"], ["", "definition lNAct :: \"'id \\<Rightarrow> (nat \\<Rightarrow> cnf) \\<Rightarrow> nat \\<Rightarrow> nat\" (\"\\<langle>_ \\<Leftarrow> _\\<rangle>\\<^bsub>_\\<^esub>\")\n  where \"\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<equiv> (LEAST n'. n=n' \\<or> (n'<n \\<and> (\\<nexists>k. k\\<ge>n' \\<and> k<n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)))\""], ["", "lemma lNact0[simp]:\n  \"\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>0\\<^esub> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>0\\<^esub> = 0", "by (simp add: lNAct_def)"], ["", "lemma lNact_least:\n  assumes \"n=n' \\<or> n'<n \\<and> (\\<nexists>k. k\\<ge>n' \\<and> k<n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\"\n  shows \"\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "using Least_le[of \"\\<lambda>n'. n=n' \\<or> (n'<n \\<and> (\\<nexists>k. k\\<ge>n' \\<and> k<n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\" n'] lNAct_def"], ["proof (prove)\nusing this:\n  n = n' \\<or>\n  n' < n \\<and>\n  \\<not> (\\<exists>k\\<ge>n'.\n             k < n \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>) \\<Longrightarrow>\n  (LEAST x.\n      n = x \\<or>\n      x < n \\<and>\n      \\<not> (\\<exists>k\\<ge>x.\n                 k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\n  \\<le> n'\n  \\<langle>?c \\<Leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<equiv>\n  LEAST n'.\n     ?n = n' \\<or>\n     n' < ?n \\<and>\n     \\<not> (\\<exists>k\\<ge>n'.\n                k < ?n \\<and> \\<parallel>?c\\<parallel>\\<^bsub>?t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "using assms"], ["proof (prove)\nusing this:\n  n = n' \\<or>\n  n' < n \\<and>\n  \\<not> (\\<exists>k\\<ge>n'.\n             k < n \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>) \\<Longrightarrow>\n  (LEAST x.\n      n = x \\<or>\n      x < n \\<and>\n      \\<not> (\\<exists>k\\<ge>x.\n                 k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\n  \\<le> n'\n  \\<langle>?c \\<Leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<equiv>\n  LEAST n'.\n     ?n = n' \\<or>\n     n' < ?n \\<and>\n     \\<not> (\\<exists>k\\<ge>n'.\n                k < ?n \\<and> \\<parallel>?c\\<parallel>\\<^bsub>?t k\\<^esub>)\n  n = n' \\<or>\n  n' < n \\<and>\n  \\<not> (\\<exists>k\\<ge>n'.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "by auto"], ["", "lemma lNAct_ex: \"\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>=n \\<or> \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub><n \\<and> (\\<nexists>k. k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and> k<n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = n \\<or>\n    \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> < n \\<and>\n    \\<not> (\\<exists>k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n               k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = n \\<or>\n    \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> < n \\<and>\n    \\<not> (\\<exists>k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n               k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "let ?P=\"\\<lambda>n'. n=n' \\<or> n'<n \\<and> (\\<nexists>k. k\\<ge>n' \\<and> k<n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = n \\<or>\n    \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> < n \\<and>\n    \\<not> (\\<exists>k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n               k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "from lNAct_def"], ["proof (chain)\npicking this:\n  \\<langle>?c \\<Leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<equiv>\n  LEAST n'.\n     ?n = n' \\<or>\n     n' < ?n \\<and>\n     \\<not> (\\<exists>k\\<ge>n'.\n                k < ?n \\<and> \\<parallel>?c\\<parallel>\\<^bsub>?t k\\<^esub>)", "have \"\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = (LEAST n'. ?P n')\""], ["proof (prove)\nusing this:\n  \\<langle>?c \\<Leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<equiv>\n  LEAST n'.\n     ?n = n' \\<or>\n     n' < ?n \\<and>\n     \\<not> (\\<exists>k\\<ge>n'.\n                k < ?n \\<and> \\<parallel>?c\\<parallel>\\<^bsub>?t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n    (LEAST n'.\n        n = n' \\<or>\n        n' < n \\<and>\n        \\<not> (\\<exists>k\\<ge>n'.\n                   k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))", "by simp"], ["proof (state)\nthis:\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n  (LEAST n'.\n      n = n' \\<or>\n      n' < n \\<and>\n      \\<not> (\\<exists>k\\<ge>n'.\n                 k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = n \\<or>\n    \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> < n \\<and>\n    \\<not> (\\<exists>k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n               k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "moreover"], ["proof (state)\nthis:\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n  (LEAST n'.\n      n = n' \\<or>\n      n' < n \\<and>\n      \\<not> (\\<exists>k\\<ge>n'.\n                 k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = n \\<or>\n    \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> < n \\<and>\n    \\<not> (\\<exists>k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n               k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "have \"?P n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = n \\<or>\n    n < n \\<and>\n    \\<not> (\\<exists>k\\<ge>n.\n               k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "by simp"], ["proof (state)\nthis:\n  n = n \\<or>\n  n < n \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = n \\<or>\n    \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> < n \\<and>\n    \\<not> (\\<exists>k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n               k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "with LeastI"], ["proof (chain)\npicking this:\n  ?P ?k \\<Longrightarrow> ?P (LEAST x. ?P x)\n  n = n \\<or>\n  n < n \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "have \"?P (LEAST n'. ?P n')\""], ["proof (prove)\nusing this:\n  ?P ?k \\<Longrightarrow> ?P (LEAST x. ?P x)\n  n = n \\<or>\n  n < n \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. n =\n    (LEAST n'.\n        n = n' \\<or>\n        n' < n \\<and>\n        \\<not> (\\<exists>k\\<ge>n'.\n                   k < n \\<and>\n                   \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)) \\<or>\n    (LEAST n'.\n        n = n' \\<or>\n        n' < n \\<and>\n        \\<not> (\\<exists>k\\<ge>n'.\n                   k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\n    < n \\<and>\n    \\<not> (\\<exists>k\\<ge>LEAST n'.\n                              n = n' \\<or>\n                              n' < n \\<and>\n                              \\<not> (\\<exists>k\\<ge>n'.\n   k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>).\n               k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "."], ["proof (state)\nthis:\n  n =\n  (LEAST n'.\n      n = n' \\<or>\n      n' < n \\<and>\n      \\<not> (\\<exists>k\\<ge>n'.\n                 k < n \\<and>\n                 \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)) \\<or>\n  (LEAST n'.\n      n = n' \\<or>\n      n' < n \\<and>\n      \\<not> (\\<exists>k\\<ge>n'.\n                 k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\n  < n \\<and>\n  \\<not> (\\<exists>k\\<ge>LEAST n'.\n                            n = n' \\<or>\n                            n' < n \\<and>\n                            \\<not> (\\<exists>k\\<ge>n'.\n k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>).\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = n \\<or>\n    \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> < n \\<and>\n    \\<not> (\\<exists>k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n               k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n  (LEAST n'.\n      n = n' \\<or>\n      n' < n \\<and>\n      \\<not> (\\<exists>k\\<ge>n'.\n                 k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\n  n =\n  (LEAST n'.\n      n = n' \\<or>\n      n' < n \\<and>\n      \\<not> (\\<exists>k\\<ge>n'.\n                 k < n \\<and>\n                 \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)) \\<or>\n  (LEAST n'.\n      n = n' \\<or>\n      n' < n \\<and>\n      \\<not> (\\<exists>k\\<ge>n'.\n                 k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\n  < n \\<and>\n  \\<not> (\\<exists>k\\<ge>LEAST n'.\n                            n = n' \\<or>\n                            n' < n \\<and>\n                            \\<not> (\\<exists>k\\<ge>n'.\n k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>).\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n  (LEAST n'.\n      n = n' \\<or>\n      n' < n \\<and>\n      \\<not> (\\<exists>k\\<ge>n'.\n                 k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\n  n =\n  (LEAST n'.\n      n = n' \\<or>\n      n' < n \\<and>\n      \\<not> (\\<exists>k\\<ge>n'.\n                 k < n \\<and>\n                 \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)) \\<or>\n  (LEAST n'.\n      n = n' \\<or>\n      n' < n \\<and>\n      \\<not> (\\<exists>k\\<ge>n'.\n                 k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\n  < n \\<and>\n  \\<not> (\\<exists>k\\<ge>LEAST n'.\n                            n = n' \\<or>\n                            n' < n \\<and>\n                            \\<not> (\\<exists>k\\<ge>n'.\n k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>).\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = n \\<or>\n    \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> < n \\<and>\n    \\<not> (\\<exists>k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n               k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "by auto"], ["proof (state)\nthis:\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = n \\<or>\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> < n \\<and>\n  \\<not> (\\<exists>k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lNact_notActive:\n  fixes c t n k\n  assumes \"k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\"\n    and \"k<n\"\n  shows \"\\<not>\\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>", "by (metis assms lNAct_ex leD)"], ["", "lemma lNactGe:\n  fixes c t n n'\n  assumes \"n' \\<ge> \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\" \n    and \"\\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\"\n  shows \"n' \\<ge> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> n'", "using assms lNact_notActive leI"], ["proof (prove)\nusing this:\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\n  \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\n  \\<lbrakk>\\<langle>?c \\<Leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<le> ?k;\n   ?k < ?n\\<rbrakk>\n  \\<Longrightarrow> \\<not> \\<parallel>?c\\<parallel>\\<^bsub>?t ?k\\<^esub>\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n\ngoal (1 subgoal):\n 1. n \\<le> n'", "by blast"], ["", "lemma lNactLe[simp]:\n  fixes n n'\n  shows \"\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n", "using lNAct_ex less_or_eq_imp_le"], ["proof (prove)\nusing this:\n  \\<langle>?c \\<Leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> = ?n \\<or>\n  \\<langle>?c \\<Leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> < ?n \\<and>\n  \\<not> (\\<exists>k\\<ge>\\<langle>?c \\<Leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub>.\n             k < ?n \\<and> \\<parallel>?c\\<parallel>\\<^bsub>?t k\\<^esub>)\n  ?m < ?n \\<or> ?m = ?n \\<Longrightarrow> ?m \\<le> ?n\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n", "by blast"], ["", "lemma lNactLe_nact:\n  fixes n n'\n  assumes \"n'=n \\<or> (n'<n \\<and> (\\<nexists>k. k\\<ge>n' \\<and> k<n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\"\n  shows \"\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "using assms lNAct_def Least_le[of \"\\<lambda>n'. n=n' \\<or> (n'<n \\<and> (\\<nexists>k. k\\<ge>n' \\<and> k<n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\"]"], ["proof (prove)\nusing this:\n  n' = n \\<or>\n  n' < n \\<and>\n  \\<not> (\\<exists>k\\<ge>n'.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  \\<langle>?c \\<Leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<equiv>\n  LEAST n'.\n     ?n = n' \\<or>\n     n' < ?n \\<and>\n     \\<not> (\\<exists>k\\<ge>n'.\n                k < ?n \\<and> \\<parallel>?c\\<parallel>\\<^bsub>?t k\\<^esub>)\n  n = ?k \\<or>\n  ?k < n \\<and>\n  \\<not> (\\<exists>k\\<ge>?k.\n             k < n \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>) \\<Longrightarrow>\n  (LEAST x.\n      n = x \\<or>\n      x < n \\<and>\n      \\<not> (\\<exists>k\\<ge>x.\n                 k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\n  \\<le> ?k\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "by auto"], ["", "lemma lNact_active:\n  fixes cid t n\n  assumes \"\\<forall>k<n. \\<parallel>cid\\<parallel>\\<^bsub>t k\\<^esub>\"\n  shows \"\\<langle>cid \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>cid \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = n", "using assms lNAct_ex"], ["proof (prove)\nusing this:\n  \\<forall>k<n. \\<parallel>cid\\<parallel>\\<^bsub>t k\\<^esub>\n  \\<langle>?c \\<Leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> = ?n \\<or>\n  \\<langle>?c \\<Leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> < ?n \\<and>\n  \\<not> (\\<exists>k\\<ge>\\<langle>?c \\<Leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub>.\n             k < ?n \\<and> \\<parallel>?c\\<parallel>\\<^bsub>?t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<langle>cid \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = n", "by blast"], ["", "lemma nAct_mono_back:\n  fixes c t and n and n'\n  assumes \"\\<langle>c #\\<^bsub>n'\\<^esub> inf_llist t\\<rangle> \\<ge> \\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>\"\n  shows \"n'\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "assume \"\\<langle>c #\\<^bsub>n'\\<^esub> inf_llist t\\<rangle> = \\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>\""], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n             \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>;\n     ?P1\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n                      \\<le> n'\n 2. \\<lbrakk>\\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n             \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>;\n     \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n                      \\<le> n'", "assume \"n'\\<ge>n\""], ["proof (state)\nthis:\n  n \\<le> n'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n             \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>;\n     ?P1\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n                      \\<le> n'\n 2. \\<lbrakk>\\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n             \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>;\n     \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n                      \\<le> n'", "thus ?thesis"], ["proof (prove)\nusing this:\n  n \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "using lNactLe"], ["proof (prove)\nusing this:\n  n \\<le> n'\n  \\<langle>?c \\<Leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<le> ?n\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "by (metis HOL.no_atp(11))"], ["proof (state)\nthis:\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n             \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>;\n     \\<not> n \\<le> n'\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n                      \\<le> n'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n             \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>;\n     \\<not> n \\<le> n'\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n                      \\<le> n'", "assume \"\\<not> n'\\<ge>n\""], ["proof (state)\nthis:\n  \\<not> n \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n             \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>;\n     \\<not> n \\<le> n'\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n                      \\<le> n'", "hence \"n'<n\""], ["proof (prove)\nusing this:\n  \\<not> n \\<le> n'\n\ngoal (1 subgoal):\n 1. n' < n", "by simp"], ["proof (state)\nthis:\n  n' < n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n             \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>;\n     \\<not> n \\<le> n'\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n                      \\<le> n'", "with \\<open>\\<langle>c #\\<^bsub>n'\\<^esub> inf_llist t\\<rangle> = \\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  n' < n", "have \"\\<nexists>k. k\\<ge>n' \\<and> k<n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  n' < n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>n'.\n               k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "by (metis enat_ord_simps(1) enat_ord_simps(2) nAct_same_not_active)"], ["proof (state)\nthis:\n  \\<not> (\\<exists>k\\<ge>n'.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n             \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>;\n     \\<not> n \\<le> n'\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n                      \\<le> n'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>k\\<ge>n'.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "using lNactLe_nact"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>k\\<ge>n'.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  ?n' = ?n \\<or>\n  ?n' < ?n \\<and>\n  \\<not> (\\<exists>k\\<ge>?n'.\n             k < ?n \\<and>\n             \\<parallel>?c\\<parallel>\\<^bsub>?t k\\<^esub>) \\<Longrightarrow>\n  \\<langle>?c \\<Leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<le> ?n'\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "by (simp add: \\<open>n' < n\\<close>)"], ["proof (state)\nthis:\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> \\<noteq>\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> \\<Longrightarrow>\n    \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> \\<noteq>\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> \\<Longrightarrow>\n    \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "assume \"\\<not>\\<langle>c #\\<^bsub>n'\\<^esub> inf_llist t\\<rangle> = \\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>\""], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> \\<noteq>\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> \\<noteq>\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> \\<Longrightarrow>\n    \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "with assms"], ["proof (chain)\npicking this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> \\<noteq>\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "have \"\\<langle>c #\\<^bsub>enat n'\\<^esub> inf_llist t\\<rangle> > \\<langle>c #\\<^bsub>enat n\\<^esub> inf_llist t\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> \\<noteq>\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    < \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  < \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> \\<noteq>\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> \\<Longrightarrow>\n    \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "hence \"n' > n\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  < \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. n < n'", "using nAct_strict_mono_back[of c \"enat n\" \"inf_llist t\" \"enat n'\"]"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  < \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  < \\<langle>c #\\<^bsub>enat\n                         n'\\<^esub>inf_llist t\\<rangle> \\<Longrightarrow>\n  enat n < enat n'\n\ngoal (1 subgoal):\n 1. n < n'", "by simp"], ["proof (state)\nthis:\n  n < n'\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> \\<noteq>\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> \\<Longrightarrow>\n    \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "thus ?thesis"], ["proof (prove)\nusing this:\n  n < n'\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "by (meson dual_order.strict_implies_order lNactLe le_trans)"], ["proof (state)\nthis:\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_mono_lNact:\n  assumes \"\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\"\n  shows \"\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle> \\<le> \\<langle>c #\\<^bsub>n'\\<^esub> inf_llist t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "have \"\\<nexists>k. k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and> k<n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n               k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "using lNact_notActive"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<langle>?c \\<Leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<le> ?k;\n   ?k < ?n\\<rbrakk>\n  \\<Longrightarrow> \\<not> \\<parallel>?c\\<parallel>\\<^bsub>?t ?k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n               k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "by auto"], ["proof (state)\nthis:\n  \\<not> (\\<exists>k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<not> (\\<exists>k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "have \"enat n - 1 < llength (inf_llist t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat n - 1 < llength (inf_llist t)", "by (simp add: one_enat_def)"], ["proof (state)\nthis:\n  enat n - 1 < llength (inf_llist t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  enat n - 1 < llength (inf_llist t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "from \\<open>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "have \"enat \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> enat n\""], ["proof (prove)\nusing this:\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\n\ngoal (1 subgoal):\n 1. enat \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> enat n", "by simp"], ["proof (state)\nthis:\n  enat \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> enat n\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  enat n - 1 < llength (inf_llist t)\n  enat \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> enat n", "have \"\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>=\\<langle>c #\\<^bsub>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> inf_llist t\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  enat n - 1 < llength (inf_llist t)\n  enat \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> enat n\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n         t\\<rangle>", "using nAct_not_active_same"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>k\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  enat n - 1 < llength (inf_llist t)\n  enat \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> enat n\n  \\<lbrakk>enat ?n \\<le> ?n'; ?n' - 1 < llength ?t;\n   \\<nexists>k.\n      enat ?n \\<le> enat k \\<and>\n      enat k < ?n' \\<and>\n      \\<parallel>?c\\<parallel>\\<^bsub>lnth ?t k\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c #\\<^bsub>?n'\\<^esub>?t\\<rangle> =\n                    \\<langle>?c #\\<^bsub>enat ?n\\<^esub>?t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n         t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n       t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n       t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "using nAct_mono assms"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n       t\\<rangle>\n  ?n \\<le> ?n' \\<Longrightarrow>\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle>\n  \\<le> \\<langle>?c #\\<^bsub>?n'\\<^esub>?t\\<rangle>\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Next Active\""], ["", "text \\<open>\n  In the following, we introduce an operator to obtain the next point in time when a component is activated.\n\\<close>"], ["", "definition nxtAct :: \"'id \\<Rightarrow> (nat \\<Rightarrow> cnf) \\<Rightarrow> nat \\<Rightarrow> nat\" (\"\\<langle>_ \\<rightarrow> _\\<rangle>\\<^bsub>_\\<^esub>\")\n  where \"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<equiv> (THE n'. n'\\<ge>n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and> (\\<nexists>k. k\\<ge>n \\<and> k<n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\""], ["", "lemma nxtActI:\n  fixes n::nat\n    and t::\"nat \\<Rightarrow> cnf\"\n    and c::'id\n  assumes \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n  shows \"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<ge> n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> \\<and> (\\<nexists>k. k\\<ge>n \\<and> k<\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n    \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> \\<and>\n    \\<not> (\\<exists>k\\<ge>n.\n               k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n    \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> \\<and>\n    \\<not> (\\<exists>k\\<ge>n.\n               k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "let ?P = \"THE n'. n'\\<ge>n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and> (\\<nexists>k. k\\<ge>n \\<and> k<n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\""], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n    \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> \\<and>\n    \\<not> (\\<exists>k\\<ge>n.\n               k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>", "obtain i where \"i\\<ge>n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and> (\\<nexists>k. k\\<ge>n \\<and> k<i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        n \\<le> i \\<and>\n        \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and>\n        \\<not> (\\<exists>k\\<ge>n.\n                   k < i \\<and>\n                   \\<parallel>c\\<parallel>\\<^bsub>t\n             k\\<^esub>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using lActive_least[of n \"inf_llist t\" c]"], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<exists>i\\<ge>n.\n     enat i < llength (inf_llist t) \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t)\n                                     i\\<^esub> \\<Longrightarrow>\n  \\<exists>i\\<ge>n.\n     enat i < llength (inf_llist t) \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) i\\<^esub> \\<and>\n     \\<not> (\\<exists>k\\<ge>n.\n                k < i \\<and>\n                enat k < llength (inf_llist t) \\<and>\n                \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) k\\<^esub>)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        n \\<le> i \\<and>\n        \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and>\n        \\<not> (\\<exists>k\\<ge>n.\n                   k < i \\<and>\n                   \\<parallel>c\\<parallel>\\<^bsub>t\n             k\\<^esub>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n \\<le> i \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n    \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> \\<and>\n    \\<not> (\\<exists>k\\<ge>n.\n               k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "moreover"], ["proof (state)\nthis:\n  n \\<le> i \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n    \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> \\<and>\n    \\<not> (\\<exists>k\\<ge>n.\n               k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "have \"(\\<And>x. n \\<le> x \\<and> \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub> \\<and> \\<not> (\\<exists>k\\<ge>n. k < x \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>) \\<Longrightarrow> x = i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < x \\<and>\n                  \\<parallel>c\\<parallel>\\<^bsub>t\n            k\\<^esub>) \\<Longrightarrow>\n       x = i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < x \\<and>\n                  \\<parallel>c\\<parallel>\\<^bsub>t\n            k\\<^esub>) \\<Longrightarrow>\n       x = i", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < x \\<and>\n                  \\<parallel>c\\<parallel>\\<^bsub>t\n            k\\<^esub>) \\<Longrightarrow>\n       x = i", "assume \"n \\<le> x \\<and> \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub> \\<and> \\<not> (\\<exists>k\\<ge>n. k < x \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\""], ["proof (state)\nthis:\n  n \\<le> x \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < x \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub> \\<and>\n       \\<not> (\\<exists>k\\<ge>n.\n                  k < x \\<and>\n                  \\<parallel>c\\<parallel>\\<^bsub>t\n            k\\<^esub>) \\<Longrightarrow>\n       x = i", "show \"x = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = i", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> i \\<Longrightarrow> False", "assume \"\\<not> (x = i)\""], ["proof (state)\nthis:\n  x \\<noteq> i\n\ngoal (1 subgoal):\n 1. x \\<noteq> i \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  x \\<noteq> i\n\ngoal (1 subgoal):\n 1. False", "using \\<open>i\\<ge>n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and> (\\<nexists>k. k\\<ge>n \\<and> k<i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\\<close>\n        \\<open>n \\<le> x \\<and> \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub> \\<and> \\<not> (\\<exists>k\\<ge>n. k < x \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\\<close>"], ["proof (prove)\nusing this:\n  x \\<noteq> i\n  n \\<le> i \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  n \\<le> x \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < x \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  n \\<le> ?x \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t ?x\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < ?x \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>) \\<Longrightarrow>\n  ?x = i\n\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n    \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> \\<and>\n    \\<not> (\\<exists>k\\<ge>n.\n               k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "ultimately"], ["proof (chain)\npicking this:\n  n \\<le> i \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  n \\<le> ?x \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t ?x\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < ?x \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>) \\<Longrightarrow>\n  ?x = i", "have \"(?P) \\<ge> n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t (?P)\\<^esub> \\<and> (\\<nexists>k. k\\<ge>n \\<and> k<?P \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\""], ["proof (prove)\nusing this:\n  n \\<le> i \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  n \\<le> ?x \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t ?x\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < ?x \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>) \\<Longrightarrow>\n  ?x = i\n\ngoal (1 subgoal):\n 1. n \\<le> (THE n'.\n                n \\<le> n' \\<and>\n                \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and>\n                \\<not> (\\<exists>k\\<ge>n.\n                           k < n' \\<and>\n                           \\<parallel>c\\<parallel>\\<^bsub>t\n                     k\\<^esub>)) \\<and>\n    \\<parallel>c\\<parallel>\\<^bsub>t (THE n'.\n   n \\<le> n' \\<and>\n   \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and>\n   \\<not> (\\<exists>k\\<ge>n.\n              k < n' \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\\<^esub> \\<and>\n    \\<not> (\\<exists>k\\<ge>n.\n               k < (THE n'.\n                       n \\<le> n' \\<and>\n                       \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and>\n                       \\<not> (\\<exists>k\\<ge>n.\n                                  k < n' \\<and>\n                                  \\<parallel>c\\<parallel>\\<^bsub>t\n                            k\\<^esub>)) \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "using theI[of \"\\<lambda>n'. n'\\<ge>n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and> (\\<nexists>k. k\\<ge>n \\<and> k<n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\"]"], ["proof (prove)\nusing this:\n  n \\<le> i \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  n \\<le> ?x \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t ?x\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < ?x \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>) \\<Longrightarrow>\n  ?x = i\n  \\<lbrakk>n \\<le> ?a \\<and>\n           \\<parallel>c\\<parallel>\\<^bsub>t ?a\\<^esub> \\<and>\n           \\<not> (\\<exists>k\\<ge>n.\n                      k < ?a \\<and>\n                      \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>);\n   \\<And>x.\n      n \\<le> x \\<and>\n      \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub> \\<and>\n      \\<not> (\\<exists>k\\<ge>n.\n                 k < x \\<and>\n                 \\<parallel>c\\<parallel>\\<^bsub>t\n           k\\<^esub>) \\<Longrightarrow>\n      x = ?a\\<rbrakk>\n  \\<Longrightarrow> n \\<le> (THE x.\n                                n \\<le> x \\<and>\n                                \\<parallel>c\\<parallel>\\<^bsub>t\n                          x\\<^esub> \\<and>\n                                \\<not> (\\<exists>k\\<ge>n.\n     k < x \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)) \\<and>\n                    \\<parallel>c\\<parallel>\\<^bsub>t\n              (THE x.\n                  n \\<le> x \\<and>\n                  \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub> \\<and>\n                  \\<not> (\\<exists>k\\<ge>n.\n                             k < x \\<and>\n                             \\<parallel>c\\<parallel>\\<^bsub>t\n                       k\\<^esub>))\\<^esub> \\<and>\n                    \\<not> (\\<exists>k\\<ge>n.\n                               k < (THE x.\n n \\<le> x \\<and>\n \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub> \\<and>\n \\<not> (\\<exists>k\\<ge>n.\n            k < x \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)) \\<and>\n                               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. n \\<le> (THE n'.\n                n \\<le> n' \\<and>\n                \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and>\n                \\<not> (\\<exists>k\\<ge>n.\n                           k < n' \\<and>\n                           \\<parallel>c\\<parallel>\\<^bsub>t\n                     k\\<^esub>)) \\<and>\n    \\<parallel>c\\<parallel>\\<^bsub>t (THE n'.\n   n \\<le> n' \\<and>\n   \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and>\n   \\<not> (\\<exists>k\\<ge>n.\n              k < n' \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\\<^esub> \\<and>\n    \\<not> (\\<exists>k\\<ge>n.\n               k < (THE n'.\n                       n \\<le> n' \\<and>\n                       \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and>\n                       \\<not> (\\<exists>k\\<ge>n.\n                                  k < n' \\<and>\n                                  \\<parallel>c\\<parallel>\\<^bsub>t\n                            k\\<^esub>)) \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "by blast"], ["proof (state)\nthis:\n  n \\<le> (THE n'.\n              n \\<le> n' \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and>\n              \\<not> (\\<exists>k\\<ge>n.\n                         k < n' \\<and>\n                         \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)) \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t (THE n'.\n n \\<le> n' \\<and>\n \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and>\n \\<not> (\\<exists>k\\<ge>n.\n            k < n' \\<and>\n            \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < (THE n'.\n                     n \\<le> n' \\<and>\n                     \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and>\n                     \\<not> (\\<exists>k\\<ge>n.\n                                k < n' \\<and>\n                                \\<parallel>c\\<parallel>\\<^bsub>t\n                          k\\<^esub>)) \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n    \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> \\<and>\n    \\<not> (\\<exists>k\\<ge>n.\n               k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  n \\<le> (THE n'.\n              n \\<le> n' \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and>\n              \\<not> (\\<exists>k\\<ge>n.\n                         k < n' \\<and>\n                         \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)) \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t (THE n'.\n n \\<le> n' \\<and>\n \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and>\n \\<not> (\\<exists>k\\<ge>n.\n            k < n' \\<and>\n            \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < (THE n'.\n                     n \\<le> n' \\<and>\n                     \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and>\n                     \\<not> (\\<exists>k\\<ge>n.\n                                k < n' \\<and>\n                                \\<parallel>c\\<parallel>\\<^bsub>t\n                          k\\<^esub>)) \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n    \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> \\<and>\n    \\<not> (\\<exists>k\\<ge>n.\n               k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "using nxtAct_def[of c t n]"], ["proof (prove)\nusing this:\n  n \\<le> (THE n'.\n              n \\<le> n' \\<and>\n              \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and>\n              \\<not> (\\<exists>k\\<ge>n.\n                         k < n' \\<and>\n                         \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)) \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t (THE n'.\n n \\<le> n' \\<and>\n \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and>\n \\<not> (\\<exists>k\\<ge>n.\n            k < n' \\<and>\n            \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>))\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < (THE n'.\n                     n \\<le> n' \\<and>\n                     \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and>\n                     \\<not> (\\<exists>k\\<ge>n.\n                                k < n' \\<and>\n                                \\<parallel>c\\<parallel>\\<^bsub>t\n                          k\\<^esub>)) \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<equiv>\n  THE n'.\n     n \\<le> n' \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub> \\<and>\n     \\<not> (\\<exists>k\\<ge>n.\n                k < n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n    \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> \\<and>\n    \\<not> (\\<exists>k\\<ge>n.\n               k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "by metis"], ["proof (state)\nthis:\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n  \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>n.\n             k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nxtActLe:\n  fixes n n'\n  assumes \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n  shows \"n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "by (simp add: assms nxtActI)"], ["", "lemma nxtAct_eq:\n  assumes \"n'\\<ge>n\"\n    and \"\\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\"\n    and \"\\<forall>n''\\<ge>n. n''<n' \\<longrightarrow> \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n''\\<^esub>\"\n  shows \"n' = \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n' = \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "by (metis assms(1) assms(2) assms(3) nxtActI linorder_neqE_nat nxtActLe)"], ["", "lemma nxtAct_active:\n  fixes i::nat\n    and t::\"nat \\<Rightarrow> cnf\"\n    and c::'id\n  assumes \"\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n  shows \"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>i\\<^esub> = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>i\\<^esub> = i", "by (metis assms le_eq_less_or_eq nxtActI)"], ["", "lemma nxtActive_no_active:\n  assumes \"\\<exists>!i. i\\<ge>n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n  shows \"\\<not> (\\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>. \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n               \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n       \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub> \\<Longrightarrow>\n    False", "assume \"\\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>. \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\""], ["proof (state)\nthis:\n  \\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n     \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n       \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub> \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n     \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>", "obtain i' where \"i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\" and \"\\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n     \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        \\<lbrakk>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n                 \\<le> i';\n         \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i'\n  \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n       \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub> \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i'\n  \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n       \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub> \\<Longrightarrow>\n    False", "from assms(1)"], ["proof (chain)\npicking this:\n  \\<exists>!i. n \\<le> i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>", "have \"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<ge>n\""], ["proof (prove)\nusing this:\n  \\<exists>!i. n \\<le> i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "using nxtActI"], ["proof (prove)\nusing this:\n  \\<exists>!i. n \\<le> i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<exists>i\\<ge>?n.\n     \\<parallel>?c\\<parallel>\\<^bsub>?t i\\<^esub> \\<Longrightarrow>\n  ?n \\<le> \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<and>\n  \\<parallel>?c\\<parallel>\\<^bsub>?t \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub>\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>?n.\n             k < \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<and>\n             \\<parallel>?c\\<parallel>\\<^bsub>?t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "by auto"], ["proof (state)\nthis:\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n       \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub> \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i'\n  \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "have \"i'\\<ge>n\" and \"\\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\" and \"i'\\<noteq>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\""], ["proof (prove)\nusing this:\n  Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i'\n  \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. n \\<le> i' &&&\n    \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub> &&&\n    i' \\<noteq> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "by auto"], ["proof (state)\nthis:\n  n \\<le> i'\n  \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n  i' \\<noteq> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n       \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub> \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  n \\<le> i'\n  \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n  i' \\<noteq> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n       \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub> \\<Longrightarrow>\n    False", "from assms(1)"], ["proof (chain)\npicking this:\n  \\<exists>!i. n \\<le> i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>", "have \"\\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>\" and \"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<ge>n\""], ["proof (prove)\nusing this:\n  \\<exists>!i. n \\<le> i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> &&&\n    n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "using nxtActI"], ["proof (prove)\nusing this:\n  \\<exists>!i. n \\<le> i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<exists>i\\<ge>?n.\n     \\<parallel>?c\\<parallel>\\<^bsub>?t i\\<^esub> \\<Longrightarrow>\n  ?n \\<le> \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<and>\n  \\<parallel>?c\\<parallel>\\<^bsub>?t \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub>\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>?n.\n             k < \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<and>\n             \\<parallel>?c\\<parallel>\\<^bsub>?t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> &&&\n    n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "by auto"], ["proof (state)\nthis:\n  \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n       \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub> \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  n \\<le> i'\n  \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n  i' \\<noteq> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "show False"], ["proof (prove)\nusing this:\n  n \\<le> i'\n  \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n  i' \\<noteq> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. False", "using assms(1)"], ["proof (prove)\nusing this:\n  n \\<le> i'\n  \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n  i' \\<noteq> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  \\<exists>!i. n \\<le> i \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nxt_geq_lNact[simp]:\n  assumes \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n  shows \"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<ge>\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n    \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n    \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>", "have \"n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "using nxtActLe"], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<exists>i\\<ge>?n.\n     \\<parallel>?c\\<parallel>\\<^bsub>?t i\\<^esub> \\<Longrightarrow>\n  ?n \\<le> \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub>\n\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "by simp"], ["proof (state)\nthis:\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n    \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "moreover"], ["proof (state)\nthis:\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n    \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "have \"\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<le>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n", "by simp"], ["proof (state)\nthis:\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n    \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n", "show ?thesis"], ["proof (prove)\nusing this:\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n    \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "by arith"], ["proof (state)\nthis:\n  \\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma active_geq_nxtAct:\n  assumes \"\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"the_enat (\\<langle>c #\\<^bsub>i\\<^esub> inf_llist t\\<rangle>)\\<ge>the_enat (\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>)\"\n  shows \"i\\<ge>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i", "assume \"\\<langle>c #\\<^bsub>i\\<^esub> inf_llist t\\<rangle>=\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>\""], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n           \\<le> i \\<Longrightarrow>\n    False", "assume \"\\<not> i\\<ge>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\""], ["proof (state)\nthis:\n  \\<not> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i\n\ngoal (1 subgoal):\n 1. \\<not> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n           \\<le> i \\<Longrightarrow>\n    False", "hence \"i<\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<not> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i\n\ngoal (1 subgoal):\n 1. i < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "by simp"], ["proof (state)\nthis:\n  i < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n           \\<le> i \\<Longrightarrow>\n    False", "with \\<open>\\<langle>c #\\<^bsub>i\\<^esub> inf_llist t\\<rangle>=\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  i < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "have \"\\<not> (\\<exists>k\\<ge>i. k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  i < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>i.\n               k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "by (metis enat_ord_simps(1) leD leI nAct_same_not_active)"], ["proof (state)\nthis:\n  \\<not> (\\<exists>k\\<ge>i.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n           \\<le> i \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<not> (\\<exists>k\\<ge>i.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n           \\<le> i \\<Longrightarrow>\n    False", "have \"\\<not> (\\<exists>k\\<ge>n. k <\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>n.\n               k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "using nxtActI"], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>?n.\n     \\<parallel>?c\\<parallel>\\<^bsub>?t i\\<^esub> \\<Longrightarrow>\n  ?n \\<le> \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<and>\n  \\<parallel>?c\\<parallel>\\<^bsub>?t \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub>\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>?n.\n             k < \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<and>\n             \\<parallel>?c\\<parallel>\\<^bsub>?t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>n.\n               k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "by blast"], ["proof (state)\nthis:\n  \\<not> (\\<exists>k\\<ge>n.\n             k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n           \\<le> i \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>k\\<ge>i.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  \\<not> (\\<exists>k\\<ge>n.\n             k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "have \"\\<not> (\\<exists>k\\<ge>i. k <\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>k\\<ge>i.\n             k < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  \\<not> (\\<exists>k\\<ge>n.\n             k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>i.\n               k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "by auto"], ["proof (state)\nthis:\n  \\<not> (\\<exists>k\\<ge>i.\n             k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n           \\<le> i \\<Longrightarrow>\n    False", "with \\<open>i<\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<close>"], ["proof (chain)\npicking this:\n  i < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  \\<not> (\\<exists>k\\<ge>i.\n             k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)", "show False"], ["proof (prove)\nusing this:\n  i < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  \\<not> (\\<exists>k\\<ge>i.\n             k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. False", "using \\<open>\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\\<close>"], ["proof (prove)\nusing this:\n  i < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  \\<not> (\\<exists>k\\<ge>i.\n             k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle> \\<noteq>\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> \\<Longrightarrow>\n    \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle> \\<noteq>\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> \\<Longrightarrow>\n    \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i", "assume \"\\<not>\\<langle>c #\\<^bsub>i\\<^esub> inf_llist t\\<rangle>=\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>\""], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle> \\<noteq>\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle> \\<noteq>\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> \\<Longrightarrow>\n    \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i", "moreover"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle> \\<noteq>\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle> \\<noteq>\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> \\<Longrightarrow>\n    \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i", "from \\<open>the_enat (\\<langle>c #\\<^bsub>i\\<^esub> inf_llist t\\<rangle>)\\<ge>the_enat (\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>)\\<close>"], ["proof (chain)\npicking this:\n  the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  \\<le> the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle>", "have \"\\<langle>c #\\<^bsub>i\\<^esub> inf_llist t\\<rangle>\\<ge>\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>\""], ["proof (prove)\nusing this:\n  the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  \\<le> the_enat \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle>", "by (metis enat.distinct(2) enat_ord_simps(1) nAct_enat_the_nat)"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle> \\<noteq>\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> \\<Longrightarrow>\n    \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle> \\<noteq>\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle>", "have \"\\<langle>c #\\<^bsub>i\\<^esub> inf_llist t\\<rangle>>\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle> \\<noteq>\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    < \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  < \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle> \\<noteq>\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> \\<Longrightarrow>\n    \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i", "hence \"i>n\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  < \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. n < i", "using nAct_strict_mono_back[of c n \"inf_llist t\" i]"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  < \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  < \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle> \\<Longrightarrow>\n  enat n < enat i\n\ngoal (1 subgoal):\n 1. n < i", "by simp"], ["proof (state)\nthis:\n  n < i\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat i\\<^esub>inf_llist t\\<rangle> \\<noteq>\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> \\<Longrightarrow>\n    \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i", "with \\<open>\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\\<close>"], ["proof (chain)\npicking this:\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  n < i", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  n < i\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i", "by (meson dual_order.strict_implies_order leI nxtActI)"], ["proof (state)\nthis:\n  \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_same:\n  assumes \"\\<langle>c \\<Leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\" and \"n' \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\"\n  shows \"the_enat (\\<langle>c #\\<^bsub>enat n'\\<^esub> inf_llist t\\<rangle>) = the_enat (\\<langle>c #\\<^bsub>enat n\\<^esub> inf_llist t\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n 2. \\<not> ?P \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "assume \"n \\<le> n'\""], ["proof (state)\nthis:\n  n \\<le> n'\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n 2. \\<not> ?P \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  n \\<le> n'\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n 2. \\<not> ?P \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "have \"n' - 1 < llength (inf_llist t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (n' - 1) < llength (inf_llist t)", "by simp"], ["proof (state)\nthis:\n  enat (n' - 1) < llength (inf_llist t)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n 2. \\<not> ?P \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  enat (n' - 1) < llength (inf_llist t)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n 2. \\<not> ?P \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "have \"\\<not> (\\<exists>i\\<ge>n. i <n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<ge>n.\n               i < n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)", "by (meson assms(2) less_le_trans nxtActI)"], ["proof (state)\nthis:\n  \\<not> (\\<exists>i\\<ge>n.\n             i < n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n 2. \\<not> ?P \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  n \\<le> n'\n  enat (n' - 1) < llength (inf_llist t)\n  \\<not> (\\<exists>i\\<ge>n.\n             i < n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)", "show ?thesis"], ["proof (prove)\nusing this:\n  n \\<le> n'\n  enat (n' - 1) < llength (inf_llist t)\n  \\<not> (\\<exists>i\\<ge>n.\n             i < n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n\ngoal (1 subgoal):\n 1. the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "using nAct_not_active_same"], ["proof (prove)\nusing this:\n  n \\<le> n'\n  enat (n' - 1) < llength (inf_llist t)\n  \\<not> (\\<exists>i\\<ge>n.\n             i < n' \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n  \\<lbrakk>enat ?n \\<le> ?n'; ?n' - 1 < llength ?t;\n   \\<nexists>k.\n      enat ?n \\<le> enat k \\<and>\n      enat k < ?n' \\<and>\n      \\<parallel>?c\\<parallel>\\<^bsub>lnth ?t k\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c #\\<^bsub>?n'\\<^esub>?t\\<rangle> =\n                    \\<langle>?c #\\<^bsub>enat ?n\\<^esub>?t\\<rangle>\n\ngoal (1 subgoal):\n 1. the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "by (simp add: one_enat_def)"], ["proof (state)\nthis:\n  the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n  the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> n' \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> n \\<le> n' \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "assume \"\\<not> n \\<le> n'\""], ["proof (state)\nthis:\n  \\<not> n \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> n' \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "hence \"n' < n\""], ["proof (prove)\nusing this:\n  \\<not> n \\<le> n'\n\ngoal (1 subgoal):\n 1. n' < n", "by simp"], ["proof (state)\nthis:\n  n' < n\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> n' \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  n' < n\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> n' \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "have \"n - 1 < llength (inf_llist t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (n - 1) < llength (inf_llist t)", "by simp"], ["proof (state)\nthis:\n  enat (n - 1) < llength (inf_llist t)\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> n' \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  enat (n - 1) < llength (inf_llist t)\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> n' \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "have \"\\<not> (\\<exists>i\\<ge>n'. i < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<ge>n'.\n               i < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)", "by (metis \\<open>\\<not> n \\<le> n'\\<close> assms(1) dual_order.trans lNAct_ex)"], ["proof (state)\nthis:\n  \\<not> (\\<exists>i\\<ge>n'.\n             i < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> n' \\<Longrightarrow>\n    the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  n' < n\n  enat (n - 1) < llength (inf_llist t)\n  \\<not> (\\<exists>i\\<ge>n'.\n             i < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)", "show ?thesis"], ["proof (prove)\nusing this:\n  n' < n\n  enat (n - 1) < llength (inf_llist t)\n  \\<not> (\\<exists>i\\<ge>n'.\n             i < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n\ngoal (1 subgoal):\n 1. the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "using nAct_not_active_same[of n' n]"], ["proof (prove)\nusing this:\n  n' < n\n  enat (n - 1) < llength (inf_llist t)\n  \\<not> (\\<exists>i\\<ge>n'.\n             i < n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n  \\<lbrakk>enat n' \\<le> enat n; enat n - 1 < llength ?t;\n   \\<nexists>k.\n      enat n' \\<le> enat k \\<and>\n      enat k < enat n \\<and>\n      \\<parallel>?c\\<parallel>\\<^bsub>lnth ?t k\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c #\\<^bsub>enat n\\<^esub>?t\\<rangle> =\n                    \\<langle>?c #\\<^bsub>enat n'\\<^esub>?t\\<rangle>\n\ngoal (1 subgoal):\n 1. the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n    the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "by (simp add: one_enat_def)"], ["proof (state)\nthis:\n  the_enat \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle> =\n  the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_mono_nxtAct:\n  assumes \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\"\n  shows \"\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle> \\<le> \\<langle>c #\\<^bsub>n'\\<^esub> inf_llist t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "have \"\\<langle>c #\\<^bsub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> inf_llist t\\<rangle> \\<le> \\<langle>c #\\<^bsub>n'\\<^esub> inf_llist t\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "using nAct_mono assms"], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\n  ?n \\<le> ?n' \\<Longrightarrow>\n  \\<langle>?c #\\<^bsub>?n\\<^esub>?t\\<rangle>\n  \\<le> \\<langle>?c #\\<^bsub>?n'\\<^esub>?t\\<rangle>\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "have \"\\<langle>c #\\<^bsub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> inf_llist t\\<rangle>=\\<langle>c #\\<^bsub>n\\<^esub> inf_llist t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'", "have \"\\<nexists>k. k\\<ge>n \\<and> k<\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and> \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>\" and \"n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>n.\n               k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>) &&&\n    n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "using nxtActI"], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<le> n'\n  \\<exists>i\\<ge>?n.\n     \\<parallel>?c\\<parallel>\\<^bsub>?t i\\<^esub> \\<Longrightarrow>\n  ?n \\<le> \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<and>\n  \\<parallel>?c\\<parallel>\\<^bsub>?t \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub>\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>?n.\n             k < \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<and>\n             \\<parallel>?c\\<parallel>\\<^bsub>?t k\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k\\<ge>n.\n               k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n               \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>) &&&\n    n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "by auto"], ["proof (state)\nthis:\n  \\<not> (\\<exists>k\\<ge>n.\n             k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<not> (\\<exists>k\\<ge>n.\n             k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "have \"enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> - 1 < llength (inf_llist t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> - 1\n    < llength (inf_llist t)", "by (simp add: one_enat_def)"], ["proof (state)\nthis:\n  enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> - 1\n  < llength (inf_llist t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>k\\<ge>n.\n             k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> - 1\n  < llength (inf_llist t)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>k\\<ge>n.\n             k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> - 1\n  < llength (inf_llist t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "using nAct_not_active_same[of n \"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\"]"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>k\\<ge>n.\n             k < \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n             \\<parallel>c\\<parallel>\\<^bsub>t k\\<^esub>)\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> - 1\n  < llength (inf_llist t)\n  \\<lbrakk>enat n\n           \\<le> enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>;\n   enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> - 1\n   < llength ?t;\n   \\<nexists>k.\n      enat n \\<le> enat k \\<and>\n      enat k\n      < enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n      \\<parallel>?c\\<parallel>\\<^bsub>lnth ?t k\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c #\\<^bsub>enat\n    \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>?t\\<rangle> =\n                    \\<langle>?c #\\<^bsub>enat n\\<^esub>?t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "by auto"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n    \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  \\<le> \\<langle>c #\\<^bsub>enat n'\\<^esub>inf_llist t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Latest Activation\""], ["", "text \\<open>\n  In the following, we introduce an operator to obtain the latest point in time when a component is activated.\n\\<close>"], ["", "abbreviation latestAct_cond:: \"'id \\<Rightarrow> trace \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> bool\"\n  where \"latestAct_cond c t n n' \\<equiv> n'<n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\""], ["", "definition latestAct:: \"'id \\<Rightarrow> trace \\<Rightarrow> nat \\<Rightarrow> nat\" (\"\\<langle>_ \\<leftarrow> _\\<rangle>\\<^bsub>_\\<^esub>\")\n  where \"latestAct c t n = (GREATEST n'. latestAct_cond c t n n')\""], ["", "lemma latestActEx:\n  assumes \"\\<exists>n'<n. \\<parallel>nid\\<parallel>\\<^bsub>t n'\\<^esub>\"\n  shows \"\\<exists>n'. latestAct_cond nid t n n' \\<and> (\\<forall>n''. latestAct_cond nid t n n'' \\<longrightarrow> n'' \\<le> n')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n'.\n       latestAct_cond nid t n n' \\<and>\n       (\\<forall>n''.\n           latestAct_cond nid t n n'' \\<longrightarrow> n'' \\<le> n')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n'.\n       latestAct_cond nid t n n' \\<and>\n       (\\<forall>n''.\n           latestAct_cond nid t n n'' \\<longrightarrow> n'' \\<le> n')", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>n'. latestAct_cond nid t n n'", "obtain n' where \"latestAct_cond nid t n n'\""], ["proof (prove)\nusing this:\n  \\<exists>n'. latestAct_cond nid t n n'\n\ngoal (1 subgoal):\n 1. (\\<And>n'.\n        latestAct_cond nid t n n' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  latestAct_cond nid t n n'\n\ngoal (1 subgoal):\n 1. \\<exists>n'.\n       latestAct_cond nid t n n' \\<and>\n       (\\<forall>n''.\n           latestAct_cond nid t n n'' \\<longrightarrow> n'' \\<le> n')", "moreover"], ["proof (state)\nthis:\n  latestAct_cond nid t n n'\n\ngoal (1 subgoal):\n 1. \\<exists>n'.\n       latestAct_cond nid t n n' \\<and>\n       (\\<forall>n''.\n           latestAct_cond nid t n n'' \\<longrightarrow> n'' \\<le> n')", "have \"\\<forall>n''>n. \\<not> latestAct_cond nid t n n''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n''>n. \\<not> latestAct_cond nid t n n''", "by simp"], ["proof (state)\nthis:\n  \\<forall>n''>n. \\<not> latestAct_cond nid t n n''\n\ngoal (1 subgoal):\n 1. \\<exists>n'.\n       latestAct_cond nid t n n' \\<and>\n       (\\<forall>n''.\n           latestAct_cond nid t n n'' \\<longrightarrow> n'' \\<le> n')", "ultimately"], ["proof (chain)\npicking this:\n  latestAct_cond nid t n n'\n  \\<forall>n''>n. \\<not> latestAct_cond nid t n n''", "obtain n' where \"latestAct_cond nid t n n' \\<and> (\\<forall>n''. latestAct_cond nid t n n'' \\<longrightarrow> n'' \\<le> n')\""], ["proof (prove)\nusing this:\n  latestAct_cond nid t n n'\n  \\<forall>n''>n. \\<not> latestAct_cond nid t n n''\n\ngoal (1 subgoal):\n 1. (\\<And>n'.\n        latestAct_cond nid t n n' \\<and>\n        (\\<forall>n''.\n            latestAct_cond nid t n n'' \\<longrightarrow>\n            n'' \\<le> n') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using boundedGreatest[of \"latestAct_cond nid t n\" n']"], ["proof (prove)\nusing this:\n  latestAct_cond nid t n n'\n  \\<forall>n''>n. \\<not> latestAct_cond nid t n n''\n  \\<lbrakk>latestAct_cond nid t n n';\n   \\<forall>n'>?n. \\<not> latestAct_cond nid t n n'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i'\\<le>?n.\n                       latestAct_cond nid t n i' \\<and>\n                       (\\<forall>n'.\n                           latestAct_cond nid t n n' \\<longrightarrow>\n                           n' \\<le> i')\n\ngoal (1 subgoal):\n 1. (\\<And>n'.\n        latestAct_cond nid t n n' \\<and>\n        (\\<forall>n''.\n            latestAct_cond nid t n n'' \\<longrightarrow>\n            n'' \\<le> n') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  latestAct_cond nid t n n' \\<and>\n  (\\<forall>n''. latestAct_cond nid t n n'' \\<longrightarrow> n'' \\<le> n')\n\ngoal (1 subgoal):\n 1. \\<exists>n'.\n       latestAct_cond nid t n n' \\<and>\n       (\\<forall>n''.\n           latestAct_cond nid t n n'' \\<longrightarrow> n'' \\<le> n')", "thus ?thesis"], ["proof (prove)\nusing this:\n  latestAct_cond nid t n n' \\<and>\n  (\\<forall>n''. latestAct_cond nid t n n'' \\<longrightarrow> n'' \\<le> n')\n\ngoal (1 subgoal):\n 1. \\<exists>n'.\n       latestAct_cond nid t n n' \\<and>\n       (\\<forall>n''.\n           latestAct_cond nid t n n'' \\<longrightarrow> n'' \\<le> n')", ".."], ["proof (state)\nthis:\n  \\<exists>n'.\n     latestAct_cond nid t n n' \\<and>\n     (\\<forall>n''.\n         latestAct_cond nid t n n'' \\<longrightarrow> n'' \\<le> n')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma latestAct_prop:\n  assumes \"\\<exists>n'<n. \\<parallel>nid\\<parallel>\\<^bsub>t n'\\<^esub>\"\n  shows \"\\<parallel>nid\\<parallel>\\<^bsub>t (latestAct nid t n)\\<^esub>\" and \"latestAct nid t n<n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>nid\\<parallel>\\<^bsub>t\n\\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> &&&\n    \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> < n", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<parallel>nid\\<parallel>\\<^bsub>t\n\\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>\n 2. \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> < n", "from assms latestActEx"], ["proof (chain)\npicking this:\n  \\<exists>n'. latestAct_cond nid t n n'\n  \\<exists>n'. latestAct_cond ?nid ?t ?n n' \\<Longrightarrow>\n  \\<exists>n'.\n     latestAct_cond ?nid ?t ?n n' \\<and>\n     (\\<forall>n''.\n         latestAct_cond ?nid ?t ?n n'' \\<longrightarrow> n'' \\<le> n')", "have \"latestAct_cond nid t n (GREATEST x. latestAct_cond nid t n x)\""], ["proof (prove)\nusing this:\n  \\<exists>n'. latestAct_cond nid t n n'\n  \\<exists>n'. latestAct_cond ?nid ?t ?n n' \\<Longrightarrow>\n  \\<exists>n'.\n     latestAct_cond ?nid ?t ?n n' \\<and>\n     (\\<forall>n''.\n         latestAct_cond ?nid ?t ?n n'' \\<longrightarrow> n'' \\<le> n')\n\ngoal (1 subgoal):\n 1. latestAct_cond nid t n (GREATEST x. latestAct_cond nid t n x)", "using GreatestI_ex_nat[of \"latestAct_cond nid t n\"]"], ["proof (prove)\nusing this:\n  \\<exists>n'. latestAct_cond nid t n n'\n  \\<exists>n'. latestAct_cond ?nid ?t ?n n' \\<Longrightarrow>\n  \\<exists>n'.\n     latestAct_cond ?nid ?t ?n n' \\<and>\n     (\\<forall>n''.\n         latestAct_cond ?nid ?t ?n n'' \\<longrightarrow> n'' \\<le> n')\n  \\<lbrakk>\\<exists>k. latestAct_cond nid t n k;\n   \\<And>y. latestAct_cond nid t n y \\<Longrightarrow> y \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> latestAct_cond nid t n\n                     (GREATEST n'. latestAct_cond nid t n n')\n\ngoal (1 subgoal):\n 1. latestAct_cond nid t n (GREATEST x. latestAct_cond nid t n x)", "by blast"], ["proof (state)\nthis:\n  latestAct_cond nid t n (GREATEST x. latestAct_cond nid t n x)\n\ngoal (2 subgoals):\n 1. \\<parallel>nid\\<parallel>\\<^bsub>t\n\\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>\n 2. \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> < n", "thus \"\\<parallel>nid\\<parallel>\\<^bsub>t \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>\" and \"latestAct nid t n<n\""], ["proof (prove)\nusing this:\n  latestAct_cond nid t n (GREATEST x. latestAct_cond nid t n x)\n\ngoal (1 subgoal):\n 1. \\<parallel>nid\\<parallel>\\<^bsub>t\n\\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> &&&\n    \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> < n", "using latestAct_def"], ["proof (prove)\nusing this:\n  latestAct_cond nid t n (GREATEST x. latestAct_cond nid t n x)\n  \\<langle>?c \\<leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> =\n  (GREATEST n'. latestAct_cond ?c ?t ?n n')\n\ngoal (1 subgoal):\n 1. \\<parallel>nid\\<parallel>\\<^bsub>t\n\\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> &&&\n    \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> < n", "by auto"], ["proof (state)\nthis:\n  \\<parallel>nid\\<parallel>\\<^bsub>t \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>\n  \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> < n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma latestAct_less:\n  assumes \"latestAct_cond nid t n n'\"\n  shows \"n' \\<le> \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n' \\<le> \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. n' \\<le> \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "from assms latestActEx"], ["proof (chain)\npicking this:\n  latestAct_cond nid t n n'\n  \\<exists>n'. latestAct_cond ?nid ?t ?n n' \\<Longrightarrow>\n  \\<exists>n'.\n     latestAct_cond ?nid ?t ?n n' \\<and>\n     (\\<forall>n''.\n         latestAct_cond ?nid ?t ?n n'' \\<longrightarrow> n'' \\<le> n')", "have \"n' \\<le> (GREATEST x. latestAct_cond nid t n x)\""], ["proof (prove)\nusing this:\n  latestAct_cond nid t n n'\n  \\<exists>n'. latestAct_cond ?nid ?t ?n n' \\<Longrightarrow>\n  \\<exists>n'.\n     latestAct_cond ?nid ?t ?n n' \\<and>\n     (\\<forall>n''.\n         latestAct_cond ?nid ?t ?n n'' \\<longrightarrow> n'' \\<le> n')\n\ngoal (1 subgoal):\n 1. n' \\<le> (GREATEST x. latestAct_cond nid t n x)", "using Greatest_le_nat[of \"latestAct_cond nid t n\"]"], ["proof (prove)\nusing this:\n  latestAct_cond nid t n n'\n  \\<exists>n'. latestAct_cond ?nid ?t ?n n' \\<Longrightarrow>\n  \\<exists>n'.\n     latestAct_cond ?nid ?t ?n n' \\<and>\n     (\\<forall>n''.\n         latestAct_cond ?nid ?t ?n n'' \\<longrightarrow> n'' \\<le> n')\n  \\<lbrakk>latestAct_cond nid t n ?k;\n   \\<And>y. latestAct_cond nid t n y \\<Longrightarrow> y \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> ?k \\<le> (GREATEST n'. latestAct_cond nid t n n')\n\ngoal (1 subgoal):\n 1. n' \\<le> (GREATEST x. latestAct_cond nid t n x)", "by blast"], ["proof (state)\nthis:\n  n' \\<le> (GREATEST x. latestAct_cond nid t n x)\n\ngoal (1 subgoal):\n 1. n' \\<le> \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  n' \\<le> (GREATEST x. latestAct_cond nid t n x)\n\ngoal (1 subgoal):\n 1. n' \\<le> \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "using latestAct_def"], ["proof (prove)\nusing this:\n  n' \\<le> (GREATEST x. latestAct_cond nid t n x)\n  \\<langle>?c \\<leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> =\n  (GREATEST n'. latestAct_cond ?c ?t ?n n')\n\ngoal (1 subgoal):\n 1. n' \\<le> \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "by auto"], ["proof (state)\nthis:\n  n' \\<le> \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma latestActNxt:\n  assumes \"\\<exists>n'<n. \\<parallel>nid\\<parallel>\\<^bsub>t n'\\<^esub>\"\n  shows \"\\<langle>nid \\<rightarrow> t\\<rangle>\\<^bsub>\\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>=\\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>nid \\<rightarrow> t\\<rangle>\\<^bsub>\\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> =\n    \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "using assms latestAct_prop(1) nxtAct_active"], ["proof (prove)\nusing this:\n  \\<exists>n'. latestAct_cond nid t n n'\n  \\<exists>n'. latestAct_cond ?nid ?t ?n n' \\<Longrightarrow>\n  \\<parallel>?nid\\<parallel>\\<^bsub>?t \\<langle>?nid \\<leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub>\\<^esub>\n  \\<parallel>?c\\<parallel>\\<^bsub>?t ?i\\<^esub> \\<Longrightarrow>\n  \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?i\\<^esub> = ?i\n\ngoal (1 subgoal):\n 1. \\<langle>nid \\<rightarrow> t\\<rangle>\\<^bsub>\\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> =\n    \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "by auto"], ["", "lemma latestActNxtAct:\n  assumes \"\\<exists>n'\\<ge>n. \\<parallel>tid\\<parallel>\\<^bsub>t n'\\<^esub>\"\n    and \"\\<exists>n'<n. \\<parallel>tid\\<parallel>\\<^bsub>t n'\\<^esub>\"\n  shows \"\\<langle>tid \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> > \\<langle>tid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>tid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n    < \\<langle>tid \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "by (meson assms latestAct_prop(2) less_le_trans nxtActI zero_le)"], ["", "lemma latestActless:\n  assumes \"\\<exists>n'\\<ge>n\\<^sub>s. n'<n \\<and> \\<parallel>nid\\<parallel>\\<^bsub>t n'\\<^esub>\"\n  shows \"\\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<ge>n\\<^sub>s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n\\<^sub>s \\<le> \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "by (meson assms dual_order.trans latestAct_less)"], ["", "lemma latestActEq:\n  fixes nid::'id\n  assumes \"\\<parallel>nid\\<parallel>\\<^bsub>t n'\\<^esub>\" and \"\\<not>(\\<exists>n''>n'. n''<n \\<and> \\<parallel>nid\\<parallel>\\<^bsub>t n'\\<^esub>)\" and \"n'<n\"\n  shows \"\\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = n'", "using latestAct_def"], ["proof (prove)\nusing this:\n  \\<langle>?c \\<leftarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> =\n  (GREATEST n'. latestAct_cond ?c ?t ?n n')\n\ngoal (1 subgoal):\n 1. \\<langle>nid \\<leftarrow> t\\<rangle>\\<^bsub>n\\<^esub> = n'", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. n' = (GREATEST n'. latestAct_cond nid t n n')", "have \"(GREATEST n'. latestAct_cond nid t n n') = n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (GREATEST n'. latestAct_cond nid t n n') = n'", "proof (rule Greatest_equality[of \"latestAct_cond nid t n\" n'])"], ["proof (state)\ngoal (2 subgoals):\n 1. latestAct_cond nid t n n'\n 2. \\<And>y. latestAct_cond nid t n y \\<Longrightarrow> y \\<le> n'", "from assms(1) assms (3)"], ["proof (chain)\npicking this:\n  \\<parallel>nid\\<parallel>\\<^bsub>t n'\\<^esub>\n  n' < n", "show \"latestAct_cond nid t n n'\""], ["proof (prove)\nusing this:\n  \\<parallel>nid\\<parallel>\\<^bsub>t n'\\<^esub>\n  n' < n\n\ngoal (1 subgoal):\n 1. latestAct_cond nid t n n'", "by simp"], ["proof (state)\nthis:\n  latestAct_cond nid t n n'\n\ngoal (1 subgoal):\n 1. \\<And>y. latestAct_cond nid t n y \\<Longrightarrow> y \\<le> n'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. latestAct_cond nid t n y \\<Longrightarrow> y \\<le> n'", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. latestAct_cond nid t n y \\<Longrightarrow> y \\<le> n'", "assume \"latestAct_cond nid t n y\""], ["proof (state)\nthis:\n  latestAct_cond nid t n y\n\ngoal (1 subgoal):\n 1. \\<And>y. latestAct_cond nid t n y \\<Longrightarrow> y \\<le> n'", "hence \"\\<parallel>nid\\<parallel>\\<^bsub>t y\\<^esub>\" and \"y<n\""], ["proof (prove)\nusing this:\n  latestAct_cond nid t n y\n\ngoal (1 subgoal):\n 1. \\<parallel>nid\\<parallel>\\<^bsub>t y\\<^esub> &&& y < n", "by auto"], ["proof (state)\nthis:\n  \\<parallel>nid\\<parallel>\\<^bsub>t y\\<^esub>\n  y < n\n\ngoal (1 subgoal):\n 1. \\<And>y. latestAct_cond nid t n y \\<Longrightarrow> y \\<le> n'", "thus \"y \\<le> n'\""], ["proof (prove)\nusing this:\n  \\<parallel>nid\\<parallel>\\<^bsub>t y\\<^esub>\n  y < n\n\ngoal (1 subgoal):\n 1. y \\<le> n'", "using assms(1) assms (2) leI"], ["proof (prove)\nusing this:\n  \\<parallel>nid\\<parallel>\\<^bsub>t y\\<^esub>\n  y < n\n  \\<parallel>nid\\<parallel>\\<^bsub>t n'\\<^esub>\n  \\<not> (\\<exists>n''>n'.\n             n'' < n \\<and> \\<parallel>nid\\<parallel>\\<^bsub>t n'\\<^esub>)\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n\ngoal (1 subgoal):\n 1. y \\<le> n'", "by blast"], ["proof (state)\nthis:\n  y \\<le> n'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (GREATEST n'. latestAct_cond nid t n n') = n'\n\ngoal (1 subgoal):\n 1. n' = (GREATEST n'. latestAct_cond nid t n n')", "thus \"n' = (GREATEST n'. latestAct_cond nid t n n')\""], ["proof (prove)\nusing this:\n  (GREATEST n'. latestAct_cond nid t n n') = n'\n\ngoal (1 subgoal):\n 1. n' = (GREATEST n'. latestAct_cond nid t n n')", "by simp"], ["proof (state)\nthis:\n  n' = (GREATEST n'. latestAct_cond nid t n n')\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Last Activation\""], ["", "text \\<open>\n  In the following we introduce an operator to obtain the latest point in time where a certain component was activated within a certain configuration trace.\n\\<close>"], ["", "definition lActive :: \"'id \\<Rightarrow> (nat \\<Rightarrow> cnf) \\<Rightarrow> nat\" (\"\\<langle>_ \\<and> _\\<rangle>\")\n  where \"\\<langle>c \\<and> t\\<rangle> \\<equiv> (GREATEST i. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\""], ["", "lemma lActive_active:\n  assumes \"\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"\\<forall>n' > n. \\<not> (\\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>)\"\n  shows \"\\<parallel>c\\<parallel>\\<^bsub>t (\\<langle>c \\<and> t\\<rangle>)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<and> t\\<rangle>\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<and> t\\<rangle>\\<^esub>", "from assms"], ["proof (chain)\npicking this:\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<forall>n'>n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>", "obtain i' where \"\\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\" and \"\\<And>y. \\<parallel>c\\<parallel>\\<^bsub>t y\\<^esub> \\<Longrightarrow> y \\<le> i'\""], ["proof (prove)\nusing this:\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<forall>n'>n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        \\<lbrakk>\\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>;\n         \\<And>y.\n            \\<parallel>c\\<parallel>\\<^bsub>t y\\<^esub> \\<Longrightarrow>\n            y \\<le> i'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using boundedGreatest[of \"\\<lambda>i'. \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\" i n]"], ["proof (prove)\nusing this:\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<forall>n'>n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\n  \\<lbrakk>\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>;\n   \\<forall>n'>n.\n      \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i'\\<le>n.\n                       \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub> \\<and>\n                       (\\<forall>n'.\n                           \\<parallel>c\\<parallel>\\<^bsub>t\n                     n'\\<^esub> \\<longrightarrow>\n                           n' \\<le> i')\n\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        \\<lbrakk>\\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>;\n         \\<And>y.\n            \\<parallel>c\\<parallel>\\<^bsub>t y\\<^esub> \\<Longrightarrow>\n            y \\<le> i'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t ?y\\<^esub> \\<Longrightarrow> ?y \\<le> i'\n\ngoal (1 subgoal):\n 1. \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<and> t\\<rangle>\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t ?y\\<^esub> \\<Longrightarrow> ?y \\<le> i'\n\ngoal (1 subgoal):\n 1. \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<and> t\\<rangle>\\<^esub>", "using lActive_def Nat.GreatestI_nat[of \"\\<lambda>i'. \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\"]"], ["proof (prove)\nusing this:\n  \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t ?y\\<^esub> \\<Longrightarrow> ?y \\<le> i'\n  \\<langle>?c \\<and> ?t\\<rangle> \\<equiv>\n  GREATEST i. \\<parallel>?c\\<parallel>\\<^bsub>?t i\\<^esub>\n  \\<lbrakk>\\<parallel>c\\<parallel>\\<^bsub>t ?k\\<^esub>;\n   \\<And>y.\n      \\<parallel>c\\<parallel>\\<^bsub>t y\\<^esub> \\<Longrightarrow>\n      y \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> \\<parallel>c\\<parallel>\\<^bsub>t\n              (GREATEST i'.\n                  \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<and> t\\<rangle>\\<^esub>", "by metis"], ["proof (state)\nthis:\n  \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<and> t\\<rangle>\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lActive_less:\n  assumes \"\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"\\<forall>n' > n. \\<not> (\\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>)\"\n  shows \"\\<langle>c \\<and> t\\<rangle> \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<and> t\\<rangle> \\<le> n", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<langle>c \\<and> t\\<rangle> \\<le> n \\<Longrightarrow> False", "assume \"\\<not> \\<langle>c \\<and> t\\<rangle> \\<le> n\""], ["proof (state)\nthis:\n  \\<not> \\<langle>c \\<and> t\\<rangle> \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> \\<langle>c \\<and> t\\<rangle> \\<le> n \\<Longrightarrow> False", "hence \"\\<langle>c \\<and> t\\<rangle> > n\""], ["proof (prove)\nusing this:\n  \\<not> \\<langle>c \\<and> t\\<rangle> \\<le> n\n\ngoal (1 subgoal):\n 1. n < \\<langle>c \\<and> t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  n < \\<langle>c \\<and> t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<not> \\<langle>c \\<and> t\\<rangle> \\<le> n \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  n < \\<langle>c \\<and> t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<not> \\<langle>c \\<and> t\\<rangle> \\<le> n \\<Longrightarrow> False", "from assms"], ["proof (chain)\npicking this:\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<forall>n'>n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>", "have \"\\<parallel>c\\<parallel>\\<^bsub>t (\\<langle>c \\<and> t\\<rangle>)\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<forall>n'>n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<and> t\\<rangle>\\<^esub>", "using lActive_active"], ["proof (prove)\nusing this:\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<forall>n'>n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\n  \\<lbrakk>\\<parallel>?c\\<parallel>\\<^bsub>?t ?i\\<^esub>;\n   \\<forall>n'>?n.\n      \\<not> \\<parallel>?c\\<parallel>\\<^bsub>?t n'\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<parallel>?c\\<parallel>\\<^bsub>?t\n               \\<langle>?c \\<and> ?t\\<rangle>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<and> t\\<rangle>\\<^esub>", "by simp"], ["proof (state)\nthis:\n  \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<and> t\\<rangle>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> \\<langle>c \\<and> t\\<rangle> \\<le> n \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  n < \\<langle>c \\<and> t\\<rangle>\n  \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<and> t\\<rangle>\\<^esub>", "show False"], ["proof (prove)\nusing this:\n  n < \\<langle>c \\<and> t\\<rangle>\n  \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<and> t\\<rangle>\\<^esub>\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  n < \\<langle>c \\<and> t\\<rangle>\n  \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<and> t\\<rangle>\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<forall>n'>n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lActive_greatest:\n  assumes \"\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"\\<forall>n' > n. \\<not> (\\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>)\"\n  shows \"i \\<le> \\<langle>c \\<and> t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<le> \\<langle>c \\<and> t\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<le> \\<langle>c \\<and> t\\<rangle>", "from assms"], ["proof (chain)\npicking this:\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<forall>n'>n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>", "obtain i' where \"\\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\" and \"\\<And>y. \\<parallel>c\\<parallel>\\<^bsub>t y\\<^esub> \\<Longrightarrow> y \\<le> i'\""], ["proof (prove)\nusing this:\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<forall>n'>n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        \\<lbrakk>\\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>;\n         \\<And>y.\n            \\<parallel>c\\<parallel>\\<^bsub>t y\\<^esub> \\<Longrightarrow>\n            y \\<le> i'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using boundedGreatest[of \"\\<lambda>i'. \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\" i n]"], ["proof (prove)\nusing this:\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<forall>n'>n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\n  \\<lbrakk>\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>;\n   \\<forall>n'>n.\n      \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i'\\<le>n.\n                       \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub> \\<and>\n                       (\\<forall>n'.\n                           \\<parallel>c\\<parallel>\\<^bsub>t\n                     n'\\<^esub> \\<longrightarrow>\n                           n' \\<le> i')\n\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        \\<lbrakk>\\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>;\n         \\<And>y.\n            \\<parallel>c\\<parallel>\\<^bsub>t y\\<^esub> \\<Longrightarrow>\n            y \\<le> i'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t ?y\\<^esub> \\<Longrightarrow> ?y \\<le> i'\n\ngoal (1 subgoal):\n 1. i \\<le> \\<langle>c \\<and> t\\<rangle>", "with assms"], ["proof (chain)\npicking this:\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<forall>n'>n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t ?y\\<^esub> \\<Longrightarrow> ?y \\<le> i'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<forall>n'>n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t ?y\\<^esub> \\<Longrightarrow> ?y \\<le> i'\n\ngoal (1 subgoal):\n 1. i \\<le> \\<langle>c \\<and> t\\<rangle>", "using lActive_def Nat.Greatest_le_nat[of \"\\<lambda>i'. \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\" i]"], ["proof (prove)\nusing this:\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<forall>n'>n. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n'\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t ?y\\<^esub> \\<Longrightarrow> ?y \\<le> i'\n  \\<langle>?c \\<and> ?t\\<rangle> \\<equiv>\n  GREATEST i. \\<parallel>?c\\<parallel>\\<^bsub>?t i\\<^esub>\n  \\<lbrakk>\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>;\n   \\<And>y.\n      \\<parallel>c\\<parallel>\\<^bsub>t y\\<^esub> \\<Longrightarrow>\n      y \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> i \\<le> (GREATEST i'.\n                                \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)\n\ngoal (1 subgoal):\n 1. i \\<le> \\<langle>c \\<and> t\\<rangle>", "by metis"], ["proof (state)\nthis:\n  i \\<le> \\<langle>c \\<and> t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lActive_greater_active:\n  assumes \"n > \\<langle>c \\<and> t\\<rangle>\"\n    and \"\\<forall>n'' > n'. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n''\\<^esub>\"\n  shows \"\\<not> \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> \\<parallel>c\\<parallel>\\<^bsub>t\n            n\\<^esub> \\<Longrightarrow>\n    False", "assume \"\\<not> \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>\""], ["proof (state)\nthis:\n  \\<not> \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> \\<parallel>c\\<parallel>\\<^bsub>t\n            n\\<^esub> \\<Longrightarrow>\n    False", "with \\<open>\\<forall>n'' > n'. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n''\\<^esub>\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>n''>n'. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n''\\<^esub>\n  \\<not> \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>", "have \"n \\<le> \\<langle>c \\<and> t\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<forall>n''>n'. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n''\\<^esub>\n  \\<not> \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>\n\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<and> t\\<rangle>", "using lActive_greatest"], ["proof (prove)\nusing this:\n  \\<forall>n''>n'. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n''\\<^esub>\n  \\<not> \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>\n  \\<lbrakk>\\<parallel>?c\\<parallel>\\<^bsub>?t ?i\\<^esub>;\n   \\<forall>n'>?n.\n      \\<not> \\<parallel>?c\\<parallel>\\<^bsub>?t n'\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?i \\<le> \\<langle>?c \\<and> ?t\\<rangle>\n\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<and> t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  n \\<le> \\<langle>c \\<and> t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> \\<parallel>c\\<parallel>\\<^bsub>t\n            n\\<^esub> \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  n \\<le> \\<langle>c \\<and> t\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  n \\<le> \\<langle>c \\<and> t\\<rangle>\n  \\<langle>c \\<and> t\\<rangle> < n\n  \\<forall>n''>n'. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n''\\<^esub>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lActive_greater_active_all:\n  assumes \"\\<forall>n'' > n'. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n''\\<^esub>\"\n  shows \"\\<not>(\\<exists>n > \\<langle>c \\<and> t\\<rangle>. \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>\\<langle>c \\<and> t\\<rangle>.\n               \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>n>\\<langle>c \\<and> t\\<rangle>.\n                      \\<parallel>c\\<parallel>\\<^bsub>t\n                n\\<^esub>) \\<Longrightarrow>\n    False", "assume \"\\<not>\\<not>(\\<exists>n > \\<langle>c \\<and> t\\<rangle>. \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>)\""], ["proof (state)\nthis:\n  \\<not> \\<not> (\\<exists>n>\\<langle>c \\<and> t\\<rangle>.\n                    \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>n>\\<langle>c \\<and> t\\<rangle>.\n                      \\<parallel>c\\<parallel>\\<^bsub>t\n                n\\<^esub>) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> \\<not> (\\<exists>n>\\<langle>c \\<and> t\\<rangle>.\n                    \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>)", "obtain \"n\" where \"n>\\<langle>c \\<and> t\\<rangle>\" and \"\\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<not> \\<not> (\\<exists>n>\\<langle>c \\<and> t\\<rangle>.\n                    \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>\\<langle>c \\<and> t\\<rangle> < n;\n         \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<langle>c \\<and> t\\<rangle> < n\n  \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>n>\\<langle>c \\<and> t\\<rangle>.\n                      \\<parallel>c\\<parallel>\\<^bsub>t\n                n\\<^esub>) \\<Longrightarrow>\n    False", "with \\<open>\\<forall>n'' > n'. \\<not> (\\<parallel>c\\<parallel>\\<^bsub>t n''\\<^esub>)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>n''>n'. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n''\\<^esub>\n  \\<langle>c \\<and> t\\<rangle> < n\n  \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>", "have \"\\<not> \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<forall>n''>n'. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n''\\<^esub>\n  \\<langle>c \\<and> t\\<rangle> < n\n  \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>", "using lActive_greater_active"], ["proof (prove)\nusing this:\n  \\<forall>n''>n'. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n''\\<^esub>\n  \\<langle>c \\<and> t\\<rangle> < n\n  \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>\n  \\<lbrakk>\\<langle>?c \\<and> ?t\\<rangle> < ?n;\n   \\<forall>n''>?n'.\n      \\<not> \\<parallel>?c\\<parallel>\\<^bsub>?t n''\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<not> \\<parallel>?c\\<parallel>\\<^bsub>?t ?n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>", "by simp"], ["proof (state)\nthis:\n  \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>n>\\<langle>c \\<and> t\\<rangle>.\n                      \\<parallel>c\\<parallel>\\<^bsub>t\n                n\\<^esub>) \\<Longrightarrow>\n    False", "with \\<open>\\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>\\<close>"], ["proof (chain)\npicking this:\n  \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>\n  \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>", "show False"], ["proof (prove)\nusing this:\n  \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>\n  \\<not> \\<parallel>c\\<parallel>\\<^bsub>t n\\<^esub>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lActive_equality:\n  assumes \"\\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"(\\<And>x. \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub> \\<Longrightarrow> x \\<le> i)\"\n  shows \"\\<langle>c \\<and> t\\<rangle> = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<and> t\\<rangle> = i", "unfolding lActive_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (GREATEST i. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>) = i", "using assms Greatest_equality[of \"\\<lambda>i'. \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>\"]"], ["proof (prove)\nusing this:\n  \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t ?x\\<^esub> \\<Longrightarrow> ?x \\<le> i\n  \\<lbrakk>\\<parallel>c\\<parallel>\\<^bsub>t ?x\\<^esub>;\n   \\<And>y.\n      \\<parallel>c\\<parallel>\\<^bsub>t y\\<^esub> \\<Longrightarrow>\n      y \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> (GREATEST i'.\n                        \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>) =\n                    ?x\n\ngoal (1 subgoal):\n 1. (GREATEST i. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>) = i", "by simp"], ["", "lemma nxtActive_lactive:\n  assumes \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"\\<not> (\\<exists>i>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\"\n  shows \"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>=\\<langle>c \\<and> t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n    \\<langle>c \\<and> t\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n    \\<langle>c \\<and> t\\<rangle>", "from assms(1)"], ["proof (chain)\npicking this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>", "have \"\\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>", "using nxtActI"], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<exists>i\\<ge>?n.\n     \\<parallel>?c\\<parallel>\\<^bsub>?t i\\<^esub> \\<Longrightarrow>\n  ?n \\<le> \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<and>\n  \\<parallel>?c\\<parallel>\\<^bsub>?t \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub>\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>?n.\n             latestAct_cond ?c ?t\n              \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> k)\n\ngoal (1 subgoal):\n 1. \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>", "by auto"], ["proof (state)\nthis:\n  \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n    \\<langle>c \\<and> t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n    \\<langle>c \\<and> t\\<rangle>", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>i>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)", "have \"\\<not> (\\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>. \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>i>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n               \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)", "using nxtActive_no_active"], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>i>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n  \\<exists>!i.\n     ?n \\<le> i \\<and>\n     \\<parallel>?c\\<parallel>\\<^bsub>?t i\\<^esub> \\<Longrightarrow>\n  \\<not> (\\<exists>i'\\<ge>Suc \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub>.\n             \\<parallel>?c\\<parallel>\\<^bsub>?t i'\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n               \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)", "by simp"], ["proof (state)\nthis:\n  \\<not> (\\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n    \\<langle>c \\<and> t\\<rangle>", "hence \"(\\<And>x. \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub> \\<Longrightarrow> x \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub> \\<Longrightarrow>\n       x \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "using not_less_eq_eq"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)\n  (\\<not> ?m \\<le> ?n) = (Suc ?n \\<le> ?m)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<parallel>c\\<parallel>\\<^bsub>t x\\<^esub> \\<Longrightarrow>\n       x \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "by auto"], ["proof (state)\nthis:\n  \\<parallel>c\\<parallel>\\<^bsub>t ?x\\<^esub> \\<Longrightarrow>\n  ?x \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n    \\<langle>c \\<and> t\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t ?x\\<^esub> \\<Longrightarrow>\n  ?x \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t ?x\\<^esub> \\<Longrightarrow>\n  ?x \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n    \\<langle>c \\<and> t\\<rangle>", "using \\<open>\\<not> (\\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>. \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)\\<close> lActive_equality"], ["proof (prove)\nusing this:\n  \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>\n  \\<parallel>c\\<parallel>\\<^bsub>t ?x\\<^esub> \\<Longrightarrow>\n  ?x \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  \\<not> (\\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)\n  \\<lbrakk>\\<parallel>?c\\<parallel>\\<^bsub>?t ?i\\<^esub>;\n   \\<And>x.\n      \\<parallel>?c\\<parallel>\\<^bsub>?t x\\<^esub> \\<Longrightarrow>\n      x \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c \\<and> ?t\\<rangle> = ?i\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n    \\<langle>c \\<and> t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n  \\<langle>c \\<and> t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Mapping Time Points\""], ["", "text \\<open>\n  In the following we introduce two operators to map time-points between configuration traces and behavior traces.\n\\<close>"], ["", "subsubsection \"Configuration Trace to Behavior Trace\""], ["", "text \\<open>\n  First we provide an operator which maps a point in time of a configuration trace to the corresponding point in time of a behavior trace.\n\\<close>"], ["", "definition cnf2bhv :: \"'id \\<Rightarrow> (nat \\<Rightarrow> cnf) \\<Rightarrow> nat \\<Rightarrow> nat\" (\"\\<^bsub>_\\<^esub>\\<down>\\<^bsub>_\\<^esub>(_)\" [150,150,150] 110)\n  where \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n) \\<equiv> the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1 + (n - \\<langle>c \\<and> t\\<rangle>)\""], ["", "lemma cnf2bhv_mono:\n  assumes \"n'\\<ge>n\"\n  shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n') \\<ge> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n\n    \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'", "by (simp add: assms cnf2bhv_def diff_le_mono)"], ["", "lemma cnf2bhv_mono_strict:\n  assumes \"n\\<ge>\\<langle>c \\<and> t\\<rangle>\" and \"n'>n\"\n  shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n') > \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n\n    < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'", "using assms cnf2bhv_def"], ["proof (prove)\nusing this:\n  \\<langle>c \\<and> t\\<rangle> \\<le> n\n  n < n'\n  \\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>?n \\<equiv>\n  the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1 +\n  (?n - \\<langle>?c \\<and> ?t\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n\n    < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'", "by auto"], ["", "text \"Note that the functions are nat, that means that also in the case the difference is negative they will return a 0!\""], ["", "lemma cnf2bhv_ge_llength[simp]:\n  assumes \"n\\<ge>\\<langle>c \\<and> t\\<rangle>\"\n  shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n) \\<ge> the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1\n    \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "using assms cnf2bhv_def"], ["proof (prove)\nusing this:\n  \\<langle>c \\<and> t\\<rangle> \\<le> n\n  \\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>?n \\<equiv>\n  the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1 +\n  (?n - \\<langle>?c \\<and> ?t\\<rangle>)\n\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1\n    \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "by simp"], ["", "lemma cnf2bhv_greater_llength[simp]:\n  assumes \"n>\\<langle>c \\<and> t\\<rangle>\"\n  shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n) > the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1\n    < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "using assms cnf2bhv_def"], ["proof (prove)\nusing this:\n  \\<langle>c \\<and> t\\<rangle> < n\n  \\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>?n \\<equiv>\n  the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1 +\n  (?n - \\<langle>?c \\<and> ?t\\<rangle>)\n\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1\n    < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "by simp"], ["", "lemma cnf2bhv_suc[simp]:\n  assumes \"n\\<ge>\\<langle>c \\<and> t\\<rangle>\"\n  shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(Suc n) = Suc (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>Suc n =\n    Suc (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n)", "using assms cnf2bhv_def"], ["proof (prove)\nusing this:\n  \\<langle>c \\<and> t\\<rangle> \\<le> n\n  \\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>?n \\<equiv>\n  the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1 +\n  (?n - \\<langle>?c \\<and> ?t\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>Suc n =\n    Suc (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n)", "by simp"], ["", "lemma cnf2bhv_lActive[simp]:\n  shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<langle>c \\<and> t\\<rangle>) = the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<and> t\\<rangle> =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1", "using cnf2bhv_def"], ["proof (prove)\nusing this:\n  \\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>?n \\<equiv>\n  the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1 +\n  (?n - \\<langle>?c \\<and> ?t\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<and> t\\<rangle> =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1", "by simp"], ["", "lemma cnf2bhv_lnth_lappend:\n  assumes act: \"\\<exists>i. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and nAct: \"\\<nexists>i. i\\<ge>n \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n  shows \"lnth ((\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)) @\\<^sub>l (inf_llist t')) (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n)) = lnth (inf_llist t') (n - \\<langle>c \\<and> t\\<rangle> - 1)\"\n    (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>inf_llist t @\\<^sub>l inf_llist t')\n     (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    lnth (inf_llist t') (n - \\<langle>c \\<and> t\\<rangle> - 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>inf_llist t @\\<^sub>l inf_llist t')\n     (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    lnth (inf_llist t') (n - \\<langle>c \\<and> t\\<rangle> - 1)", "from nAct"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)", "have \"lfinite (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n\ngoal (1 subgoal):\n 1. lfinite (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "using proj_finite2"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n  \\<forall>n'.\n     enat n' \\<le> llength ?t \\<longrightarrow>\n     ?n \\<le> n' \\<longrightarrow>\n     \\<not> \\<parallel>?c\\<parallel>\\<^bsub>lnth ?t\n       n'\\<^esub> \\<Longrightarrow>\n  lfinite (\\<pi>\\<^bsub>?c\\<^esub>?t)\n\ngoal (1 subgoal):\n 1. lfinite (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "by auto"], ["proof (state)\nthis:\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>inf_llist t @\\<^sub>l inf_llist t')\n     (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    lnth (inf_llist t') (n - \\<langle>c \\<and> t\\<rangle> - 1)", "then"], ["proof (chain)\npicking this:\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "obtain k where k_def: \"llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)) = enat k\""], ["proof (prove)\nusing this:\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) =\n        enat k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using lfinite_llength_enat"], ["proof (prove)\nusing this:\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n  lfinite ?xs \\<Longrightarrow> \\<exists>n. llength ?xs = enat n\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) =\n        enat k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) = enat k\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>inf_llist t @\\<^sub>l inf_llist t')\n     (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    lnth (inf_llist t') (n - \\<langle>c \\<and> t\\<rangle> - 1)", "moreover"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) = enat k\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>inf_llist t @\\<^sub>l inf_llist t')\n     (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    lnth (inf_llist t') (n - \\<langle>c \\<and> t\\<rangle> - 1)", "have \"k \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "from nAct"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)", "have \"\\<nexists>i. i>n-1 \\<and> \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i>n - 1. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)", "by simp"], ["proof (state)\nthis:\n  \\<not> (\\<exists>i>n - 1. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n\ngoal (1 subgoal):\n 1. k \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "with act"], ["proof (chain)\npicking this:\n  \\<exists>i. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>i>n - 1. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)", "have \"\\<langle>c \\<and> t\\<rangle> \\<le> n-1\""], ["proof (prove)\nusing this:\n  \\<exists>i. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>i>n - 1. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<and> t\\<rangle> \\<le> n - 1", "using lActive_less"], ["proof (prove)\nusing this:\n  \\<exists>i. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>i>n - 1. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n  \\<lbrakk>\\<parallel>?c\\<parallel>\\<^bsub>?t ?i\\<^esub>;\n   \\<forall>n'>?n.\n      \\<not> \\<parallel>?c\\<parallel>\\<^bsub>?t n'\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c \\<and> ?t\\<rangle> \\<le> ?n\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<and> t\\<rangle> \\<le> n - 1", "by auto"], ["proof (state)\nthis:\n  \\<langle>c \\<and> t\\<rangle> \\<le> n - 1\n\ngoal (1 subgoal):\n 1. k \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "moreover"], ["proof (state)\nthis:\n  \\<langle>c \\<and> t\\<rangle> \\<le> n - 1\n\ngoal (1 subgoal):\n 1. k \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "have \"n>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n", "using act nAct"], ["proof (prove)\nusing this:\n  \\<exists>i. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n\ngoal (1 subgoal):\n 1. 0 < n", "by auto"], ["proof (state)\nthis:\n  0 < n\n\ngoal (1 subgoal):\n 1. k \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c \\<and> t\\<rangle> \\<le> n - 1\n  0 < n", "have \"\\<langle>c \\<and> t\\<rangle> < n\""], ["proof (prove)\nusing this:\n  \\<langle>c \\<and> t\\<rangle> \\<le> n - 1\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<and> t\\<rangle> < n", "by simp"], ["proof (state)\nthis:\n  \\<langle>c \\<and> t\\<rangle> < n\n\ngoal (1 subgoal):\n 1. k \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "hence \"the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n)\""], ["proof (prove)\nusing this:\n  \\<langle>c \\<and> t\\<rangle> < n\n\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1\n    < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "using cnf2bhv_greater_llength"], ["proof (prove)\nusing this:\n  \\<langle>c \\<and> t\\<rangle> < n\n  \\<langle>?c \\<and> ?t\\<rangle> < ?n \\<Longrightarrow>\n  the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1\n  < \\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>?n\n\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1\n    < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "by simp"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1\n  < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n\n\ngoal (1 subgoal):\n 1. k \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "with k_def"], ["proof (chain)\npicking this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) = enat k\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1\n  < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "show ?thesis"], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) = enat k\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1\n  < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n\n\ngoal (1 subgoal):\n 1. k \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "by simp"], ["proof (state)\nthis:\n  k \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>inf_llist t @\\<^sub>l inf_llist t')\n     (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    lnth (inf_llist t') (n - \\<langle>c \\<and> t\\<rangle> - 1)", "ultimately"], ["proof (chain)\npicking this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) = enat k\n  k \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "have \"?lhs = lnth (inf_llist t') (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n) - k)\""], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) = enat k\n  k \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>inf_llist t @\\<^sub>l inf_llist t')\n     (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    lnth (inf_llist t') (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k)", "using lnth_lappend2"], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) = enat k\n  k \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n\n  \\<lbrakk>llength ?xs = enat ?k; ?k \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> lnth (?xs @\\<^sub>l ?ys) ?n = lnth ?ys (?n - ?k)\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>inf_llist t @\\<^sub>l inf_llist t')\n     (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    lnth (inf_llist t') (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k)", "by blast"], ["proof (state)\nthis:\n  lnth (\\<pi>\\<^bsub>c\\<^esub>inf_llist t @\\<^sub>l inf_llist t')\n   (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n  lnth (inf_llist t') (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k)\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>inf_llist t @\\<^sub>l inf_llist t')\n     (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    lnth (inf_llist t') (n - \\<langle>c \\<and> t\\<rangle> - 1)", "moreover"], ["proof (state)\nthis:\n  lnth (\\<pi>\\<^bsub>c\\<^esub>inf_llist t @\\<^sub>l inf_llist t')\n   (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n  lnth (inf_llist t') (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k)\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>inf_llist t @\\<^sub>l inf_llist t')\n     (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    lnth (inf_llist t') (n - \\<langle>c \\<and> t\\<rangle> - 1)", "have \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n) - k = n - \\<langle>c \\<and> t\\<rangle> - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n    n - \\<langle>c \\<and> t\\<rangle> - 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n    n - \\<langle>c \\<and> t\\<rangle> - 1", "from cnf2bhv_def"], ["proof (chain)\npicking this:\n  \\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>?n \\<equiv>\n  the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1 +\n  (?n - \\<langle>?c \\<and> ?t\\<rangle>)", "have \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n) - k = the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 + (n - \\<langle>c \\<and> t\\<rangle>) - k\""], ["proof (prove)\nusing this:\n  \\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>?n \\<equiv>\n  the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1 +\n  (?n - \\<langle>?c \\<and> ?t\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    k", "by simp"], ["proof (state)\nthis:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  k\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n    n - \\<langle>c \\<and> t\\<rangle> - 1", "also"], ["proof (state)\nthis:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  k\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n    n - \\<langle>c \\<and> t\\<rangle> - 1", "have \"\\<dots> = the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 + (n - \\<langle>c \\<and> t\\<rangle>) -\n      the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    k =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))", "using k_def"], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) = enat k\n\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    k =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))", "by simp"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  k =\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n    n - \\<langle>c \\<and> t\\<rangle> - 1", "also"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  k =\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n    n - \\<langle>c \\<and> t\\<rangle> - 1", "have \"\\<dots> = the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) + (n - \\<langle>c \\<and> t\\<rangle>) - 1 -\n      the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    1 -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    1 -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))", "have \"\\<exists>i. enat i < llength (inf_llist t) \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) i\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength (inf_llist t) \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) i\\<^esub>", "by (simp add: act)"], ["proof (state)\nthis:\n  \\<exists>i.\n     enat i < llength (inf_llist t) \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) i\\<^esub>\n\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    1 -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))", "hence \"llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) \\<ge> 1\""], ["proof (prove)\nusing this:\n  \\<exists>i.\n     enat i < llength (inf_llist t) \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) i\\<^esub>\n\ngoal (1 subgoal):\n 1. 1 \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "using proj_one"], ["proof (prove)\nusing this:\n  \\<exists>i.\n     enat i < llength (inf_llist t) \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) i\\<^esub>\n  \\<exists>i.\n     enat i < llength ?t \\<and>\n     \\<parallel>?c\\<parallel>\\<^bsub>lnth ?t i\\<^esub> \\<Longrightarrow>\n  1 \\<le> llength (\\<pi>\\<^bsub>?c\\<^esub>?t)\n\ngoal (1 subgoal):\n 1. 1 \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "by simp"], ["proof (state)\nthis:\n  1 \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    1 -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))", "moreover"], ["proof (state)\nthis:\n  1 \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    1 -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))", "from k_def"], ["proof (chain)\npicking this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) = enat k", "have \"llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) \\<noteq> \\<infinity>\""], ["proof (prove)\nusing this:\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) = enat k\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) \\<noteq> \\<infinity>", "by simp"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    1 -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))", "ultimately"], ["proof (chain)\npicking this:\n  1 \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) \\<noteq> \\<infinity>", "have \"the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) \\<ge> 1\""], ["proof (prove)\nusing this:\n  1 \\<le> llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. 1 \\<le> the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))", "by (simp add: k_def one_enat_def)"], ["proof (state)\nthis:\n  1 \\<le> the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))\n\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    1 -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))", "thus ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))\n\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    1 -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))", "by simp"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  1 -\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  1 -\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n    n - \\<langle>c \\<and> t\\<rangle> - 1", "also"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  1 -\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n    n - \\<langle>c \\<and> t\\<rangle> - 1", "have \"\\<dots> = the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) + (n - \\<langle>c \\<and> t\\<rangle>) -\n      the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    1 -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) -\n    1", "by simp"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  1 -\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) -\n  1\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n    n - \\<langle>c \\<and> t\\<rangle> - 1", "also"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  1 -\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) -\n  1\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n    n - \\<langle>c \\<and> t\\<rangle> - 1", "have \"\\<dots> = n - \\<langle>c \\<and> t\\<rangle> - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) -\n    1 =\n    n - \\<langle>c \\<and> t\\<rangle> - 1", "by simp"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) -\n  1 =\n  n - \\<langle>c \\<and> t\\<rangle> - 1\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n    n - \\<langle>c \\<and> t\\<rangle> - 1", "finally"], ["proof (chain)\npicking this:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n  n - \\<langle>c \\<and> t\\<rangle> - 1", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n  n - \\<langle>c \\<and> t\\<rangle> - 1\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n    n - \\<langle>c \\<and> t\\<rangle> - 1", "."], ["proof (state)\nthis:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n  n - \\<langle>c \\<and> t\\<rangle> - 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n  n - \\<langle>c \\<and> t\\<rangle> - 1\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>inf_llist t @\\<^sub>l inf_llist t')\n     (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    lnth (inf_llist t') (n - \\<langle>c \\<and> t\\<rangle> - 1)", "ultimately"], ["proof (chain)\npicking this:\n  lnth (\\<pi>\\<^bsub>c\\<^esub>inf_llist t @\\<^sub>l inf_llist t')\n   (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n  lnth (inf_llist t') (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k)\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n  n - \\<langle>c \\<and> t\\<rangle> - 1", "show ?thesis"], ["proof (prove)\nusing this:\n  lnth (\\<pi>\\<^bsub>c\\<^esub>inf_llist t @\\<^sub>l inf_llist t')\n   (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n  lnth (inf_llist t') (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k)\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n - k =\n  n - \\<langle>c \\<and> t\\<rangle> - 1\n\ngoal (1 subgoal):\n 1. lnth (\\<pi>\\<^bsub>c\\<^esub>inf_llist t @\\<^sub>l inf_llist t')\n     (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    lnth (inf_llist t') (n - \\<langle>c \\<and> t\\<rangle> - 1)", "by simp"], ["proof (state)\nthis:\n  lnth (\\<pi>\\<^bsub>c\\<^esub>inf_llist t @\\<^sub>l inf_llist t')\n   (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n  lnth (inf_llist t') (n - \\<langle>c \\<and> t\\<rangle> - 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nAct_cnf2proj_Suc_dist:\n  assumes \"\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"\\<not>(\\<exists>i>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\"\n  shows \"Suc (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>)=\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>) =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>Suc\n        \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Suc (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>) =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>Suc\n        \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "have \"the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> = \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\" (is \"?LHS = ?RHS\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>i>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)", "have \"?RHS = the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>i>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1", "using nxtActive_lactive[of n c t]"], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>i>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n  \\<lbrakk>\\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>;\n   \\<not> (\\<exists>i>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n              \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\\<rbrakk>\n  \\<Longrightarrow> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n                    \\<langle>c \\<and> t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1", "by simp"], ["proof (state)\nthis:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1\n\ngoal (1 subgoal):\n 1. the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "also"], ["proof (state)\nthis:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1\n\ngoal (1 subgoal):\n 1. the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "have \"llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)) = eSuc (\\<langle>c #\\<^bsub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> inf_llist t\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) =\n    eSuc\n     \\<langle>c #\\<^bsub>enat\n                          \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n           t\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) =\n    eSuc\n     \\<langle>c #\\<^bsub>enat\n                          \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n           t\\<rangle>", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>i>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)", "have \"\\<not> (\\<exists>i'\\<ge> Suc (\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>). \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>i>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n               \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)", "using nxtActive_no_active"], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>i>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n  \\<exists>!i.\n     ?n \\<le> i \\<and>\n     \\<parallel>?c\\<parallel>\\<^bsub>?t i\\<^esub> \\<Longrightarrow>\n  \\<not> (\\<exists>i'\\<ge>Suc \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub>.\n             \\<parallel>?c\\<parallel>\\<^bsub>?t i'\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n               \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)", "by simp"], ["proof (state)\nthis:\n  \\<not> (\\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) =\n    eSuc\n     \\<langle>c #\\<^bsub>enat\n                          \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n           t\\<rangle>", "hence \"\\<langle>c #\\<^bsub>Suc (\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\\<^esub> inf_llist t\\<rangle> = llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         (Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\\<^esub>inf_llist\n                t\\<rangle> =\n    llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "using nAct_eq_proj[of \"Suc (\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\" c \"inf_llist t\"]"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i'\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i'\\<^esub>)\n  \\<not> (\\<exists>i\\<ge>Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t)\n       i\\<^esub>) \\<Longrightarrow>\n  \\<langle>c #\\<^bsub>enat\n                       (Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\\<^esub>inf_llist\n              t\\<rangle> =\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         (Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\\<^esub>inf_llist\n                t\\<rangle> =\n    llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat\n                       (Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\\<^esub>inf_llist\n              t\\<rangle> =\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) =\n    eSuc\n     \\<langle>c #\\<^bsub>enat\n                          \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n           t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat\n                       (Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\\<^esub>inf_llist\n              t\\<rangle> =\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) =\n    eSuc\n     \\<langle>c #\\<^bsub>enat\n                          \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n           t\\<rangle>", "from assms(1)"], ["proof (chain)\npicking this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>", "have \"\\<parallel>c\\<parallel>\\<^bsub>t (\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>", "using nxtActI"], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<exists>i\\<ge>?n.\n     \\<parallel>?c\\<parallel>\\<^bsub>?t i\\<^esub> \\<Longrightarrow>\n  ?n \\<le> \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<and>\n  \\<parallel>?c\\<parallel>\\<^bsub>?t \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub>\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>?n.\n             latestAct_cond ?c ?t\n              \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> k)\n\ngoal (1 subgoal):\n 1. \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>", "by blast"], ["proof (state)\nthis:\n  \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) =\n    eSuc\n     \\<langle>c #\\<^bsub>enat\n                          \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n           t\\<rangle>", "hence \"\\<langle>c #\\<^bsub>Suc (\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\\<^esub> inf_llist t\\<rangle> = eSuc (\\<langle>c #\\<^bsub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> inf_llist t\\<rangle>)\""], ["proof (prove)\nusing this:\n  \\<parallel>c\\<parallel>\\<^bsub>t \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         (Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\\<^esub>inf_llist\n                t\\<rangle> =\n    eSuc\n     \\<langle>c #\\<^bsub>enat\n                          \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n           t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat\n                       (Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\\<^esub>inf_llist\n              t\\<rangle> =\n  eSuc\n   \\<langle>c #\\<^bsub>enat\n                        \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n         t\\<rangle>\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) =\n    eSuc\n     \\<langle>c #\\<^bsub>enat\n                          \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n           t\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c #\\<^bsub>enat\n                       (Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\\<^esub>inf_llist\n              t\\<rangle> =\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n  \\<langle>c #\\<^bsub>enat\n                       (Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\\<^esub>inf_llist\n              t\\<rangle> =\n  eSuc\n   \\<langle>c #\\<^bsub>enat\n                        \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n         t\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat\n                       (Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\\<^esub>inf_llist\n              t\\<rangle> =\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n  \\<langle>c #\\<^bsub>enat\n                       (Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\\<^esub>inf_llist\n              t\\<rangle> =\n  eSuc\n   \\<langle>c #\\<^bsub>enat\n                        \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n         t\\<rangle>\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) =\n    eSuc\n     \\<langle>c #\\<^bsub>enat\n                          \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n           t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) =\n  eSuc\n   \\<langle>c #\\<^bsub>enat\n                        \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n         t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) =\n  eSuc\n   \\<langle>c #\\<^bsub>enat\n                        \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n         t\\<rangle>\n\ngoal (1 subgoal):\n 1. the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "also"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) =\n  eSuc\n   \\<langle>c #\\<^bsub>enat\n                        \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n         t\\<rangle>\n\ngoal (1 subgoal):\n 1. the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "have \"the_enat(eSuc (\\<langle>c #\\<^bsub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> inf_llist t\\<rangle>)) - 1 = (\\<langle>c #\\<^bsub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> inf_llist t\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat\n     (the_enat\n       (eSuc\n         \\<langle>c #\\<^bsub>enat\n                              \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n               t\\<rangle>) -\n      1) =\n    \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. enat\n     (the_enat\n       (eSuc\n         \\<langle>c #\\<^bsub>enat\n                              \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n               t\\<rangle>) -\n      1) =\n    \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle>", "have \"\\<langle>c #\\<^bsub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> inf_llist t\\<rangle> \\<noteq> \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> \\<noteq>\n    \\<infinity>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle> \\<noteq>\n  \\<infinity>\n\ngoal (1 subgoal):\n 1. enat\n     (the_enat\n       (eSuc\n         \\<langle>c #\\<^bsub>enat\n                              \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n               t\\<rangle>) -\n      1) =\n    \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle>", "hence \"the_enat(eSuc (\\<langle>c #\\<^bsub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> inf_llist t\\<rangle>)) = Suc(the_enat(\\<langle>c #\\<^bsub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub> inf_llist t\\<rangle>))\""], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle> \\<noteq>\n  \\<infinity>\n\ngoal (1 subgoal):\n 1. the_enat\n     (eSuc\n       \\<langle>c #\\<^bsub>enat\n                            \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n             t\\<rangle>) =\n    Suc (the_enat\n          \\<langle>c #\\<^bsub>enat\n                               \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n                t\\<rangle>)", "using the_enat_eSuc"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle> \\<noteq>\n  \\<infinity>\n  ?n \\<noteq> \\<infinity> \\<Longrightarrow>\n  the_enat (eSuc ?n) = Suc (the_enat ?n)\n\ngoal (1 subgoal):\n 1. the_enat\n     (eSuc\n       \\<langle>c #\\<^bsub>enat\n                            \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n             t\\<rangle>) =\n    Suc (the_enat\n          \\<langle>c #\\<^bsub>enat\n                               \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n                t\\<rangle>)", "by simp"], ["proof (state)\nthis:\n  the_enat\n   (eSuc\n     \\<langle>c #\\<^bsub>enat\n                          \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n           t\\<rangle>) =\n  Suc (the_enat\n        \\<langle>c #\\<^bsub>enat\n                             \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n              t\\<rangle>)\n\ngoal (1 subgoal):\n 1. enat\n     (the_enat\n       (eSuc\n         \\<langle>c #\\<^bsub>enat\n                              \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n               t\\<rangle>) -\n      1) =\n    \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  the_enat\n   (eSuc\n     \\<langle>c #\\<^bsub>enat\n                          \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n           t\\<rangle>) =\n  Suc (the_enat\n        \\<langle>c #\\<^bsub>enat\n                             \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n              t\\<rangle>)\n\ngoal (1 subgoal):\n 1. enat\n     (the_enat\n       (eSuc\n         \\<langle>c #\\<^bsub>enat\n                              \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n               t\\<rangle>) -\n      1) =\n    \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  enat\n   (the_enat\n     (eSuc\n       \\<langle>c #\\<^bsub>enat\n                            \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n             t\\<rangle>) -\n    1) =\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  enat\n   (the_enat\n     (eSuc\n       \\<langle>c #\\<^bsub>enat\n                            \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n             t\\<rangle>) -\n    1) =\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle>\n\ngoal (1 subgoal):\n 1. the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "also"], ["proof (state)\nthis:\n  enat\n   (the_enat\n     (eSuc\n       \\<langle>c #\\<^bsub>enat\n                            \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n             t\\<rangle>) -\n    1) =\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle>\n\ngoal (1 subgoal):\n 1. the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "have \"\\<dots> = ?LHS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    enat (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    enat (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>)", "have \"enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> - 1 < llength (inf_llist t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> - 1\n    < llength (inf_llist t)", "by (simp add: one_enat_def)"], ["proof (state)\nthis:\n  enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> - 1\n  < llength (inf_llist t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    enat (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>)", "moreover"], ["proof (state)\nthis:\n  enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> - 1\n  < llength (inf_llist t)\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    enat (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>)", "from assms(1)"], ["proof (chain)\npicking this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>", "have \"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<ge>n\" and\n        \"\\<nexists>k. enat n \\<le> enat k \\<and> enat k < enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and> \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) k\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> &&&\n    \\<nexists>k.\n       enat n \\<le> enat k \\<and>\n       enat k\n       < enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) k\\<^esub>", "using nxtActI"], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<exists>i\\<ge>?n.\n     \\<parallel>?c\\<parallel>\\<^bsub>?t i\\<^esub> \\<Longrightarrow>\n  ?n \\<le> \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> \\<and>\n  \\<parallel>?c\\<parallel>\\<^bsub>?t \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub>\\<^esub> \\<and>\n  \\<not> (\\<exists>k\\<ge>?n.\n             latestAct_cond ?c ?t\n              \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> k)\n\ngoal (1 subgoal):\n 1. n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> &&&\n    \\<nexists>k.\n       enat n \\<le> enat k \\<and>\n       enat k\n       < enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n       \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) k\\<^esub>", "by auto"], ["proof (state)\nthis:\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  \\<nexists>k.\n     enat n \\<le> enat k \\<and>\n     enat k\n     < enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    enat (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>)", "ultimately"], ["proof (chain)\npicking this:\n  enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> - 1\n  < llength (inf_llist t)\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  \\<nexists>k.\n     enat n \\<le> enat k \\<and>\n     enat k\n     < enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) k\\<^esub>", "have \"\\<langle>c #\\<^bsub>enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist t\\<rangle> = \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\""], ["proof (prove)\nusing this:\n  enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> - 1\n  < llength (inf_llist t)\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  \\<nexists>k.\n     enat n \\<le> enat k \\<and>\n     enat k\n     < enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) k\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "using nAct_not_active_same[of n \"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\" \"inf_llist t\" c]"], ["proof (prove)\nusing this:\n  enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> - 1\n  < llength (inf_llist t)\n  n \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  \\<nexists>k.\n     enat n \\<le> enat k \\<and>\n     enat k\n     < enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n     \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) k\\<^esub>\n  \\<lbrakk>enat n\n           \\<le> enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>;\n   enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> - 1\n   < llength (inf_llist t);\n   \\<nexists>k.\n      enat n \\<le> enat k \\<and>\n      enat k\n      < enat \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<and>\n      \\<parallel>c\\<parallel>\\<^bsub>lnth (inf_llist t) k\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<langle>c #\\<^bsub>enat\n   \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n                          t\\<rangle> =\n                    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    enat (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>)", "moreover"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    enat (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>)", "have \"\\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\\<noteq>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> \\<noteq>\n    \\<infinity>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> \\<noteq>\n  \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    enat (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>)", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> \\<noteq>\n  \\<infinity>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle> =\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>\n  \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> \\<noteq>\n  \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<langle>c #\\<^bsub>enat\n                         \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n          t\\<rangle> =\n    enat (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>)", "by auto"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle> =\n  enat (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<langle>c #\\<^bsub>enat\n                       \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\\<^esub>inf_llist\n        t\\<rangle> =\n  enat (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>)\n\ngoal (1 subgoal):\n 1. the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "finally"], ["proof (chain)\npicking this:\n  enat\n   (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>) =\n  enat (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>)", "show ?thesis"], ["proof (prove)\nusing this:\n  enat\n   (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>) =\n  enat (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>)\n\ngoal (1 subgoal):\n 1. the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "by fastforce"], ["proof (state)\nthis:\n  the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. Suc (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>) =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>Suc\n        \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "moreover"], ["proof (state)\nthis:\n  the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. Suc (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>) =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>Suc\n        \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>i>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)", "have \"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>=\\<langle>c \\<and> t\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>i>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n    \\<langle>c \\<and> t\\<rangle>", "using nxtActive_lactive"], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>n. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  \\<not> (\\<exists>i>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>.\n             \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>)\n  \\<lbrakk>\\<exists>i\\<ge>?n. \\<parallel>?c\\<parallel>\\<^bsub>?t i\\<^esub>;\n   \\<not> (\\<exists>i>\\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub>.\n              \\<parallel>?c\\<parallel>\\<^bsub>?t i\\<^esub>)\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c \\<rightarrow> ?t\\<rangle>\\<^bsub>?n\\<^esub> =\n                    \\<langle>?c \\<and> ?t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n    \\<langle>c \\<and> t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n  \\<langle>c \\<and> t\\<rangle>\n\ngoal (1 subgoal):\n 1. Suc (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>) =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>Suc\n        \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "hence \"Suc (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)) = \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(Suc \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\""], ["proof (prove)\nusing this:\n  \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n  \\<langle>c \\<and> t\\<rangle>\n\ngoal (1 subgoal):\n 1. Suc (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>) =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>Suc\n        \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "using cnf2bhv_suc[where n=\"\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\"]"], ["proof (prove)\nusing this:\n  \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n  \\<langle>c \\<and> t\\<rangle>\n  \\<langle>?c \\<and> ?t\\<rangle>\n  \\<le> \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> \\<Longrightarrow>\n  \\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>Suc\n        \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub> =\n  Suc (\\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>)\n\ngoal (1 subgoal):\n 1. Suc (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>) =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>Suc\n        \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "by simp"], ["proof (state)\nthis:\n  Suc (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>) =\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>Suc\n      \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. Suc (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>) =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>Suc\n        \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  Suc (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>) =\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>Suc\n      \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle> =\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n  Suc (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>\\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>) =\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>Suc\n      \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal (1 subgoal):\n 1. Suc (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>) =\n    \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>Suc\n        \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>", "by simp"], ["proof (state)\nthis:\n  Suc (the_enat \\<langle>c #\\<^bsub>enat n\\<^esub>inf_llist t\\<rangle>) =\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>Suc\n      \\<langle>c \\<rightarrow> t\\<rangle>\\<^bsub>n\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \"Behavior Trace to Configuration Trace\""], ["", "text \\<open>\n  Next we define an operator to map a point in time of a behavior trace back to a corresponding point in time for a configuration trace.\n\\<close>"], ["", "definition bhv2cnf :: \"'id \\<Rightarrow> (nat \\<Rightarrow> cnf) \\<Rightarrow> nat \\<Rightarrow> nat\" (\"\\<^bsub>_\\<^esub>\\<up>\\<^bsub>_\\<^esub>(_)\" [150,150,150] 110)\n  where \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n) \\<equiv> \\<langle>c \\<and> t\\<rangle> + (n - (the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1))\""], ["", "lemma bhv2cnf_mono:\n  assumes \"n'\\<ge>n\"\n  shows \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n') \\<ge> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n\n    \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'", "by (simp add: assms bhv2cnf_def diff_le_mono)"], ["", "lemma bhv2cnf_mono_strict:\n  assumes \"n'>n\"\n    and \"n \\<ge> the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\"\n  shows \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n') > \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n\n    < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'", "using assms bhv2cnf_def"], ["proof (prove)\nusing this:\n  n < n'\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 \\<le> n\n  \\<^bsub>?c\\<^esub>\\<up>\\<^bsub>?t\\<^esub>?n \\<equiv>\n  \\<langle>?c \\<and> ?t\\<rangle> +\n  (?n - (the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1))\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n\n    < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'", "by auto"], ["", "text \"Note that the functions are nat, that means that also in the case the difference is negative they will return a 0!\""], ["", "lemma bhv2cnf_ge_lActive[simp]:\n  shows \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n) \\<ge> \\<langle>c \\<and> t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<and> t\\<rangle>\n    \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n", "using bhv2cnf_def"], ["proof (prove)\nusing this:\n  \\<^bsub>?c\\<^esub>\\<up>\\<^bsub>?t\\<^esub>?n \\<equiv>\n  \\<langle>?c \\<and> ?t\\<rangle> +\n  (?n - (the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1))\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<and> t\\<rangle>\n    \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n", "by simp"], ["", "lemma bhv2cnf_greater_lActive[simp]:\n  assumes \"n>the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\"\n  shows \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n) > \\<langle>c \\<and> t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<and> t\\<rangle> < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n", "using assms bhv2cnf_def"], ["proof (prove)\nusing this:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 < n\n  \\<^bsub>?c\\<^esub>\\<up>\\<^bsub>?t\\<^esub>?n \\<equiv>\n  \\<langle>?c \\<and> ?t\\<rangle> +\n  (?n - (the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1))\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<and> t\\<rangle> < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n", "by simp"], ["", "lemma bhv2cnf_lActive[simp]:\n  assumes \"\\<exists>i. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\"\n    and \"lfinite (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))\"\n  shows \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)))) = Suc (\\<langle>c \\<and> t\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>the_enat\n      (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    Suc \\<langle>c \\<and> t\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>the_enat\n      (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    Suc \\<langle>c \\<and> t\\<rangle>", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>i. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "have \"\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)\\<noteq> []\\<^sub>l\""], ["proof (prove)\nusing this:\n  \\<exists>i. \\<parallel>c\\<parallel>\\<^bsub>t i\\<^esub>\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^bsub>c\\<^esub>inf_llist t \\<noteq> []\\<^sub>l", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^bsub>c\\<^esub>inf_llist t \\<noteq> []\\<^sub>l\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>the_enat\n      (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    Suc \\<langle>c \\<and> t\\<rangle>", "hence \"llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)) > 0\""], ["proof (prove)\nusing this:\n  \\<pi>\\<^bsub>c\\<^esub>inf_llist t \\<noteq> []\\<^sub>l\n\ngoal (1 subgoal):\n 1. 0 < llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "by (simp add: lnull_def)"], ["proof (state)\nthis:\n  0 < llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>the_enat\n      (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    Suc \\<langle>c \\<and> t\\<rangle>", "moreover"], ["proof (state)\nthis:\n  0 < llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>the_enat\n      (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    Suc \\<langle>c \\<and> t\\<rangle>", "from \\<open>lfinite (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))\\<close>"], ["proof (chain)\npicking this:\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)", "have \"llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)) \\<noteq> \\<infinity>\""], ["proof (prove)\nusing this:\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) \\<noteq> \\<infinity>", "using llength_eq_infty_conv_lfinite"], ["proof (prove)\nusing this:\n  lfinite (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n  (llength ?xs = \\<infinity>) = (\\<not> lfinite ?xs)\n\ngoal (1 subgoal):\n 1. llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) \\<noteq> \\<infinity>", "by auto"], ["proof (state)\nthis:\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>the_enat\n      (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    Suc \\<langle>c \\<and> t\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  0 < llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) \\<noteq> \\<infinity>", "have \"the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) > 0\""], ["proof (prove)\nusing this:\n  0 < llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. 0 < the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))", "using enat_0_iff(1)"], ["proof (prove)\nusing this:\n  0 < llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)\n  llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t) \\<noteq> \\<infinity>\n  (enat ?x = 0) = (?x = 0)\n\ngoal (1 subgoal):\n 1. 0 < the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))", "by fastforce"], ["proof (state)\nthis:\n  0 < the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>the_enat\n      (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    Suc \\<langle>c \\<and> t\\<rangle>", "hence \"the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - (the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1) = 1\""], ["proof (prove)\nusing this:\n  0 < the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t))\n\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) -\n    (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) =\n    1", "by simp"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) -\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) =\n  1\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>the_enat\n      (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    Suc \\<langle>c \\<and> t\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) -\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) =\n  1\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>the_enat\n      (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    Suc \\<langle>c \\<and> t\\<rangle>", "using bhv2cnf_def"], ["proof (prove)\nusing this:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) -\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) =\n  1\n  \\<^bsub>?c\\<^esub>\\<up>\\<^bsub>?t\\<^esub>?n \\<equiv>\n  \\<langle>?c \\<and> ?t\\<rangle> +\n  (?n - (the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1))\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>the_enat\n      (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n    Suc \\<langle>c \\<and> t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>the_enat\n    (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) =\n  Suc \\<langle>c \\<and> t\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \"Relating the Mappings\""], ["", "text \\<open>\n  In the following we provide some properties about the relationship between the two mapping operators.\n\\<close>"], ["", "lemma bhv2cnf_cnf2bhv:\n  assumes \"n \\<ge> \\<langle>c \\<and> t\\<rangle>\"\n  shows \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n)) = n\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    n", "have \"?lhs = \\<langle>c \\<and> t\\<rangle> + ((\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n)) - (the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    \\<langle>c \\<and> t\\<rangle> +\n    (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n -\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1))", "using bhv2cnf_def"], ["proof (prove)\nusing this:\n  \\<^bsub>?c\\<^esub>\\<up>\\<^bsub>?t\\<^esub>?n \\<equiv>\n  \\<langle>?c \\<and> ?t\\<rangle> +\n  (?n - (the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1))\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    \\<langle>c \\<and> t\\<rangle> +\n    (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n -\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1))", "by simp"], ["proof (state)\nthis:\n  \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n  \\<langle>c \\<and> t\\<rangle> +\n  (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n -\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1))\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    n", "also"], ["proof (state)\nthis:\n  \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n  \\<langle>c \\<and> t\\<rangle> +\n  (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n -\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1))\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    n", "have \"\\<dots> = \\<langle>c \\<and> t\\<rangle> + (((the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)))) - 1 + (n - \\<langle>c \\<and> t\\<rangle>)) -\n    (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<and> t\\<rangle> +\n    (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n -\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) =\n    \\<langle>c \\<and> t\\<rangle> +\n    (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n     (n - \\<langle>c \\<and> t\\<rangle>) -\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1))", "using cnf2bhv_def"], ["proof (prove)\nusing this:\n  \\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>?n \\<equiv>\n  the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1 +\n  (?n - \\<langle>?c \\<and> ?t\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<and> t\\<rangle> +\n    (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n -\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) =\n    \\<langle>c \\<and> t\\<rangle> +\n    (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n     (n - \\<langle>c \\<and> t\\<rangle>) -\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1))", "by simp"], ["proof (state)\nthis:\n  \\<langle>c \\<and> t\\<rangle> +\n  (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n -\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) =\n  \\<langle>c \\<and> t\\<rangle> +\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n   (n - \\<langle>c \\<and> t\\<rangle>) -\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1))\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    n", "also"], ["proof (state)\nthis:\n  \\<langle>c \\<and> t\\<rangle> +\n  (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n -\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) =\n  \\<langle>c \\<and> t\\<rangle> +\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n   (n - \\<langle>c \\<and> t\\<rangle>) -\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1))\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    n", "have \"(the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)))) - 1 + (n - (\\<langle>c \\<and> t\\<rangle>)) -\n    (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1) = (the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)))) - 1 -\n    ((the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t)))) - 1) + (n - (\\<langle>c \\<and> t\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (n - \\<langle>c \\<and> t\\<rangle>) -\n    (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 -\n    (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) +\n    (n - \\<langle>c \\<and> t\\<rangle>)", "by simp"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) =\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 -\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) +\n  (n - \\<langle>c \\<and> t\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    n", "also"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (n - \\<langle>c \\<and> t\\<rangle>) -\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) =\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 -\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) +\n  (n - \\<langle>c \\<and> t\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    n", "have \"\\<dots> = n - (\\<langle>c \\<and> t\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 -\n    (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) +\n    (n - \\<langle>c \\<and> t\\<rangle>) =\n    n - \\<langle>c \\<and> t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 -\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) +\n  (n - \\<langle>c \\<and> t\\<rangle>) =\n  n - \\<langle>c \\<and> t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    n", "also"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 -\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) +\n  (n - \\<langle>c \\<and> t\\<rangle>) =\n  n - \\<langle>c \\<and> t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    n", "have \"(\\<langle>c \\<and> t\\<rangle>) + (n - (\\<langle>c \\<and> t\\<rangle>)) = (\\<langle>c \\<and> t\\<rangle>) + n - \\<langle>c \\<and> t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<and> t\\<rangle> + (n - \\<langle>c \\<and> t\\<rangle>) =\n    \\<langle>c \\<and> t\\<rangle> + n - \\<langle>c \\<and> t\\<rangle>", "using assms"], ["proof (prove)\nusing this:\n  \\<langle>c \\<and> t\\<rangle> \\<le> n\n\ngoal (1 subgoal):\n 1. \\<langle>c \\<and> t\\<rangle> + (n - \\<langle>c \\<and> t\\<rangle>) =\n    \\<langle>c \\<and> t\\<rangle> + n - \\<langle>c \\<and> t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c \\<and> t\\<rangle> + (n - \\<langle>c \\<and> t\\<rangle>) =\n  \\<langle>c \\<and> t\\<rangle> + n - \\<langle>c \\<and> t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    n", "also"], ["proof (state)\nthis:\n  \\<langle>c \\<and> t\\<rangle> + (n - \\<langle>c \\<and> t\\<rangle>) =\n  \\<langle>c \\<and> t\\<rangle> + n - \\<langle>c \\<and> t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    n", "have \"\\<dots> = ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<and> t\\<rangle> + n - \\<langle>c \\<and> t\\<rangle> = n", "by simp"], ["proof (state)\nthis:\n  \\<langle>c \\<and> t\\<rangle> + n - \\<langle>c \\<and> t\\<rangle> = n\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    n", "finally"], ["proof (chain)\npicking this:\n  \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n  n", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n  n\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n    n", "."], ["proof (state)\nthis:\n  \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n) =\n  n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cnf2bhv_bhv2cnf:\n  assumes \"n \\<ge> the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\"\n  shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n)) = n\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    n", "have \"?lhs = the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1 + ((\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n)) - (\\<langle>c \\<and> t\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n -\n     \\<langle>c \\<and> t\\<rangle>)", "using cnf2bhv_def"], ["proof (prove)\nusing this:\n  \\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>?n \\<equiv>\n  the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1 +\n  (?n - \\<langle>?c \\<and> ?t\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n -\n     \\<langle>c \\<and> t\\<rangle>)", "by simp"], ["proof (state)\nthis:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n - \\<langle>c \\<and> t\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    n", "also"], ["proof (state)\nthis:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n - \\<langle>c \\<and> t\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    n", "have \"\\<dots> = the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1 + (\\<langle>c \\<and> t\\<rangle> +\n    (n - (the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1)) - (\\<langle>c \\<and> t\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n -\n     \\<langle>c \\<and> t\\<rangle>) =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (\\<langle>c \\<and> t\\<rangle> +\n     (n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) -\n     \\<langle>c \\<and> t\\<rangle>)", "using bhv2cnf_def"], ["proof (prove)\nusing this:\n  \\<^bsub>?c\\<^esub>\\<up>\\<^bsub>?t\\<^esub>?n \\<equiv>\n  \\<langle>?c \\<and> ?t\\<rangle> +\n  (?n - (the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1))\n\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n -\n     \\<langle>c \\<and> t\\<rangle>) =\n    the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (\\<langle>c \\<and> t\\<rangle> +\n     (n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) -\n     \\<langle>c \\<and> t\\<rangle>)", "by simp"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n -\n   \\<langle>c \\<and> t\\<rangle>) =\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (\\<langle>c \\<and> t\\<rangle> +\n   (n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) -\n   \\<langle>c \\<and> t\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    n", "also"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n -\n   \\<langle>c \\<and> t\\<rangle>) =\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (\\<langle>c \\<and> t\\<rangle> +\n   (n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) -\n   \\<langle>c \\<and> t\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    n", "have \"\\<langle>c \\<and> t\\<rangle> + (n - (the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1)) - (\\<langle>c \\<and> t\\<rangle>) =\n    \\<langle>c \\<and> t\\<rangle> - (\\<langle>c \\<and> t\\<rangle>) + (n - (the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<and> t\\<rangle> +\n    (n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) -\n    \\<langle>c \\<and> t\\<rangle> =\n    \\<langle>c \\<and> t\\<rangle> - \\<langle>c \\<and> t\\<rangle> +\n    (n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1))", "by simp"], ["proof (state)\nthis:\n  \\<langle>c \\<and> t\\<rangle> +\n  (n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) -\n  \\<langle>c \\<and> t\\<rangle> =\n  \\<langle>c \\<and> t\\<rangle> - \\<langle>c \\<and> t\\<rangle> +\n  (n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1))\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    n", "also"], ["proof (state)\nthis:\n  \\<langle>c \\<and> t\\<rangle> +\n  (n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) -\n  \\<langle>c \\<and> t\\<rangle> =\n  \\<langle>c \\<and> t\\<rangle> - \\<langle>c \\<and> t\\<rangle> +\n  (n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1))\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    n", "have \"\\<dots> = n - (the_enat(llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c \\<and> t\\<rangle> - \\<langle>c \\<and> t\\<rangle> +\n    (n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) =\n    n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)", "by simp"], ["proof (state)\nthis:\n  \\<langle>c \\<and> t\\<rangle> - \\<langle>c \\<and> t\\<rangle> +\n  (n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) =\n  n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    n", "also"], ["proof (state)\nthis:\n  \\<langle>c \\<and> t\\<rangle> - \\<langle>c \\<and> t\\<rangle> +\n  (n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) =\n  n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    n", "have \"the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1 + (n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1)) =\n    n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1) + (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n    (n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) =\n    n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) +\n    (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)", "by simp"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) =\n  n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) +\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    n", "also"], ["proof (state)\nthis:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 +\n  (n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) =\n  n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) +\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    n", "have \"\\<dots> = n + ((the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1) -\n    (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) +\n    (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) =\n    n +\n    (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 -\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1))", "using assms"], ["proof (prove)\nusing this:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 \\<le> n\n\ngoal (1 subgoal):\n 1. n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) +\n    (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) =\n    n +\n    (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 -\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1))", "by simp"], ["proof (state)\nthis:\n  n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) +\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) =\n  n +\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 -\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1))\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    n", "also"], ["proof (state)\nthis:\n  n - (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) +\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1) =\n  n +\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 -\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1))\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    n", "have \"\\<dots> = ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n +\n    (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 -\n     (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) =\n    n", "by simp"], ["proof (state)\nthis:\n  n +\n  (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 -\n   (the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1)) =\n  n\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    n", "finally"], ["proof (chain)\npicking this:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n  n", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n  n\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n    n", "."], ["proof (state)\nthis:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n) =\n  n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma p2c_mono_c2p:\n  assumes \"n \\<ge> \\<langle>c \\<and> t\\<rangle>\"\n      and \"n' \\<ge> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n)\"\n    shows \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n') \\<ge> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'", "from \\<open>n' \\<ge> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n)\\<close>"], ["proof (chain)\npicking this:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n \\<le> n'", "have \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n') \\<ge> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n))\""], ["proof (prove)\nusing this:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n)\n    \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'", "using bhv2cnf_mono"], ["proof (prove)\nusing this:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n \\<le> n'\n  ?n \\<le> ?n' \\<Longrightarrow>\n  \\<^bsub>?c\\<^esub>\\<up>\\<^bsub>?t\\<^esub>?n\n  \\<le> \\<^bsub>?c\\<^esub>\\<up>\\<^bsub>?t\\<^esub>?n'\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n)\n    \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'", "by simp"], ["proof (state)\nthis:\n  \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n)\n  \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'\n\ngoal (1 subgoal):\n 1. n \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n)\n  \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'\n\ngoal (1 subgoal):\n 1. n \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'", "using bhv2cnf_cnf2bhv \\<open>n \\<ge> \\<langle>c \\<and> t\\<rangle>\\<close>"], ["proof (prove)\nusing this:\n  \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n)\n  \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'\n  \\<langle>?c \\<and> ?t\\<rangle> \\<le> ?n \\<Longrightarrow>\n  \\<^bsub>?c\\<^esub>\\<up>\\<^bsub>?t\\<^esub>(\\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>?n) =\n  ?n\n  \\<langle>c \\<and> t\\<rangle> \\<le> n\n\ngoal (1 subgoal):\n 1. n \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'", "by simp"], ["proof (state)\nthis:\n  n \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma p2c_mono_c2p_strict:\n  assumes \"n \\<ge> \\<langle>c \\<and> t\\<rangle>\"\n      and \"n<\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n')\"\n  shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n) < n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n < n'", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n < n' \\<Longrightarrow>\n    False", "assume \"\\<not> (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n) < n')\""], ["proof (state)\nthis:\n  \\<not> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n < n'\n\ngoal (1 subgoal):\n 1. \\<not> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n < n' \\<Longrightarrow>\n    False", "hence \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n) \\<ge> n'\""], ["proof (prove)\nusing this:\n  \\<not> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n < n'\n\ngoal (1 subgoal):\n 1. n' \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "by simp"], ["proof (state)\nthis:\n  n' \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n\n\ngoal (1 subgoal):\n 1. \\<not> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n < n' \\<Longrightarrow>\n    False", "with \\<open>n \\<ge> \\<langle>c \\<and> t\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c \\<and> t\\<rangle> \\<le> n\n  n' \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n", "have \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(nat (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n))) \\<ge> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n')\""], ["proof (prove)\nusing this:\n  \\<langle>c \\<and> t\\<rangle> \\<le> n\n  n' \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'\n    \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>nat\n            (int (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n))", "using bhv2cnf_mono"], ["proof (prove)\nusing this:\n  \\<langle>c \\<and> t\\<rangle> \\<le> n\n  n' \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n\n  ?n \\<le> ?n' \\<Longrightarrow>\n  \\<^bsub>?c\\<^esub>\\<up>\\<^bsub>?t\\<^esub>?n\n  \\<le> \\<^bsub>?c\\<^esub>\\<up>\\<^bsub>?t\\<^esub>?n'\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'\n    \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>nat\n            (int (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n))", "by simp"], ["proof (state)\nthis:\n  \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'\n  \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>nat\n          (int (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n))\n\ngoal (1 subgoal):\n 1. \\<not> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n < n' \\<Longrightarrow>\n    False", "hence \"\\<not>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(nat (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n))) < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n'))\""], ["proof (prove)\nusing this:\n  \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'\n  \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>nat\n          (int (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n))\n\ngoal (1 subgoal):\n 1. \\<not> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>nat\n             (int (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n))\n           < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'", "by simp"], ["proof (state)\nthis:\n  \\<not> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>nat\n           (int (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n))\n         < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'\n\ngoal (1 subgoal):\n 1. \\<not> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n < n' \\<Longrightarrow>\n    False", "with \\<open>n \\<ge> \\<langle>c \\<and> t\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c \\<and> t\\<rangle> \\<le> n\n  \\<not> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>nat\n           (int (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n))\n         < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'", "have  \"\\<not>(n < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n'))\""], ["proof (prove)\nusing this:\n  \\<langle>c \\<and> t\\<rangle> \\<le> n\n  \\<not> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>nat\n           (int (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n))\n         < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'\n\ngoal (1 subgoal):\n 1. \\<not> n < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'", "using \"bhv2cnf_cnf2bhv\""], ["proof (prove)\nusing this:\n  \\<langle>c \\<and> t\\<rangle> \\<le> n\n  \\<not> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>nat\n           (int (\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n))\n         < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'\n  \\<langle>?c \\<and> ?t\\<rangle> \\<le> ?n \\<Longrightarrow>\n  \\<^bsub>?c\\<^esub>\\<up>\\<^bsub>?t\\<^esub>(\\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>?n) =\n  ?n\n\ngoal (1 subgoal):\n 1. \\<not> n < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'", "by simp"], ["proof (state)\nthis:\n  \\<not> n < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'\n\ngoal (1 subgoal):\n 1. \\<not> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n < n' \\<Longrightarrow>\n    False", "with assms"], ["proof (chain)\npicking this:\n  \\<langle>c \\<and> t\\<rangle> \\<le> n\n  n < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'\n  \\<not> n < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'", "show False"], ["proof (prove)\nusing this:\n  \\<langle>c \\<and> t\\<rangle> \\<le> n\n  n < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'\n  \\<not> n < \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n'\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma c2p_mono_p2c:\n  assumes \"n \\<ge> the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\"\n      and \"n' \\<ge> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n)\"\n    shows \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n') \\<ge> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'", "from \\<open>n' \\<ge> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n)\\<close>"], ["proof (chain)\npicking this:\n  \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n \\<le> n'", "have \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n') \\<ge> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n))\""], ["proof (prove)\nusing this:\n  \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n)\n    \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'", "using cnf2bhv_mono"], ["proof (prove)\nusing this:\n  \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n \\<le> n'\n  ?n \\<le> ?n' \\<Longrightarrow>\n  \\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>?n\n  \\<le> \\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>?n'\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n)\n    \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'", "by simp"], ["proof (state)\nthis:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n)\n  \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'\n\ngoal (1 subgoal):\n 1. n \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n)\n  \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'\n\ngoal (1 subgoal):\n 1. n \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'", "using cnf2bhv_bhv2cnf \\<open>n \\<ge> the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\\<close>"], ["proof (prove)\nusing this:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n)\n  \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'\n  the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1\n  \\<le> ?n \\<Longrightarrow>\n  \\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>(\\<^bsub>?c\\<^esub>\\<up>\\<^bsub>?t\\<^esub>?n) =\n  ?n\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 \\<le> n\n\ngoal (1 subgoal):\n 1. n \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'", "by simp"], ["proof (state)\nthis:\n  n \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma c2p_mono_p2c_strict:\n  assumes \"n \\<ge> the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\"\n      and \"n<\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n')\"\n  shows \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n) < n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n < n'", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n < n' \\<Longrightarrow>\n    False", "assume \"\\<not> (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n) < n')\""], ["proof (state)\nthis:\n  \\<not> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n < n'\n\ngoal (1 subgoal):\n 1. \\<not> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n < n' \\<Longrightarrow>\n    False", "hence \"\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n) \\<ge> n'\""], ["proof (prove)\nusing this:\n  \\<not> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n < n'\n\ngoal (1 subgoal):\n 1. n' \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n", "by simp"], ["proof (state)\nthis:\n  n' \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n\n\ngoal (1 subgoal):\n 1. \\<not> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n < n' \\<Longrightarrow>\n    False", "with \\<open>n \\<ge> the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\\<close>"], ["proof (chain)\npicking this:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 \\<le> n\n  n' \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n", "have \"\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(nat (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n))) \\<ge> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n')\""], ["proof (prove)\nusing this:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 \\<le> n\n  n' \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'\n    \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>nat\n              (int (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n))", "using cnf2bhv_mono"], ["proof (prove)\nusing this:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 \\<le> n\n  n' \\<le> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n\n  ?n \\<le> ?n' \\<Longrightarrow>\n  \\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>?n\n  \\<le> \\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>?n'\n\ngoal (1 subgoal):\n 1. \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'\n    \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>nat\n              (int (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n))", "by simp"], ["proof (state)\nthis:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'\n  \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>nat\n            (int (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n))\n\ngoal (1 subgoal):\n 1. \\<not> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n < n' \\<Longrightarrow>\n    False", "hence \"\\<not>(\\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(nat (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>(n))) < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n'))\""], ["proof (prove)\nusing this:\n  \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'\n  \\<le> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>nat\n            (int (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n))\n\ngoal (1 subgoal):\n 1. \\<not> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>nat\n               (int (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n))\n           < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'", "by simp"], ["proof (state)\nthis:\n  \\<not> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>nat\n             (int (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n))\n         < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'\n\ngoal (1 subgoal):\n 1. \\<not> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n < n' \\<Longrightarrow>\n    False", "with \\<open>n \\<ge> the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>(inf_llist t))) - 1\\<close>"], ["proof (chain)\npicking this:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 \\<le> n\n  \\<not> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>nat\n             (int (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n))\n         < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'", "have  \"\\<not>(n < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>(n'))\""], ["proof (prove)\nusing this:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 \\<le> n\n  \\<not> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>nat\n             (int (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n))\n         < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'\n\ngoal (1 subgoal):\n 1. \\<not> n < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'", "using \"cnf2bhv_bhv2cnf\""], ["proof (prove)\nusing this:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 \\<le> n\n  \\<not> \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>nat\n             (int (\\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n))\n         < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'\n  the_enat (llength (\\<pi>\\<^bsub>?c\\<^esub>inf_llist ?t)) - 1\n  \\<le> ?n \\<Longrightarrow>\n  \\<^bsub>?c\\<^esub>\\<down>\\<^bsub>?t\\<^esub>(\\<^bsub>?c\\<^esub>\\<up>\\<^bsub>?t\\<^esub>?n) =\n  ?n\n\ngoal (1 subgoal):\n 1. \\<not> n < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'", "by simp"], ["proof (state)\nthis:\n  \\<not> n < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'\n\ngoal (1 subgoal):\n 1. \\<not> \\<^bsub>c\\<^esub>\\<up>\\<^bsub>t\\<^esub>n < n' \\<Longrightarrow>\n    False", "with assms"], ["proof (chain)\npicking this:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 \\<le> n\n  n < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'\n  \\<not> n < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'", "show False"], ["proof (prove)\nusing this:\n  the_enat (llength (\\<pi>\\<^bsub>c\\<^esub>inf_llist t)) - 1 \\<le> n\n  n < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'\n  \\<not> n < \\<^bsub>c\\<^esub>\\<down>\\<^bsub>t\\<^esub>n'\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}