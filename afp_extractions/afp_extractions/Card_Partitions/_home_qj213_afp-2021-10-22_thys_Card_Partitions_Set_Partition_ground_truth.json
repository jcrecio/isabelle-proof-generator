{"file_name": "/home/qj213/afp-2021-10-22/thys/Card_Partitions/Set_Partition.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Card_Partitions", "problem_names": ["lemma set_eqI':\n  assumes \"\\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> B\"\n  assumes \"\\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> A\"\n  shows \"A = B\"", "lemma comp_image:\n  \"((`) f \\<circ> (`) g) = (`) (f o g)\"", "lemma partition_onI:\n  assumes \"\\<And>p. p \\<in> P \\<Longrightarrow> p \\<noteq> {}\"\n  assumes \"\\<Union>P = A\"\n  assumes \"\\<And>p p'. p \\<in> P \\<Longrightarrow> p' \\<in> P \\<Longrightarrow> p \\<noteq> p' \\<Longrightarrow> p \\<inter> p' = {}\"\n  shows \"partition_on A P\"", "lemma partition_onE:\n  assumes \"partition_on A P\"\n  obtains \"\\<And>p. p \\<in> P \\<Longrightarrow> p \\<noteq> {}\"\n     \"\\<Union>P = A\"\n     \"\\<And>p p'. p \\<in> P \\<Longrightarrow> p' \\<in> P \\<Longrightarrow> p \\<noteq> p' \\<Longrightarrow> p \\<inter> p' = {}\"", "lemma partition_onD4: \"partition_on A P \\<Longrightarrow> p \\<in> P \\<Longrightarrow> q \\<in> P \\<Longrightarrow> x \\<in> p \\<Longrightarrow> x \\<in> q \\<Longrightarrow> p = q\"", "lemma partition_subset_imp_notin:\n  assumes \"partition_on A P\" \"X \\<in> P\"\n  assumes \"X' \\<subset> X\"\n  shows \"X' \\<notin> P\"", "lemma partition_on_Diff:\n  assumes P: \"partition_on A P\" shows \"Q \\<subseteq> P \\<Longrightarrow> partition_on (A - \\<Union>Q) (P - Q)\"", "lemma partition_on_UN:\n  assumes A: \"partition_on A B\" and B: \"\\<And>b. b \\<in> B \\<Longrightarrow> partition_on b (P b)\"\n  shows \"partition_on A (\\<Union>b\\<in>B. P b)\"", "lemma partition_on_notemptyI:\n  assumes \"partition_on A P\"\n  assumes \"A \\<noteq> {}\"\n  shows \"P \\<noteq> {}\"", "lemma partition_on_disjoint:\n  assumes \"partition_on A P\"\n  assumes \"partition_on B Q\"\n  assumes \"A \\<inter> B = {}\"\n  shows \"P \\<inter> Q = {}\"", "lemma partition_on_eq_implies_eq_carrier:\n  assumes \"partition_on A Q\"\n  assumes \"partition_on B Q\"\n  shows \"A = B\"", "lemma partition_on_insert:\n  assumes \"partition_on A P\"\n  assumes \"disjnt A X\" \"X \\<noteq> {}\"\n  assumes \"A \\<union> X = A'\"\n  shows \"partition_on A' (insert X P)\"", "lemma partition_on_insert':\n  assumes \"partition_on (A - X) P\"\n  assumes \"X \\<subseteq> A\" \"X \\<noteq> {}\"\n  shows \"partition_on A (insert X P)\"", "lemma partition_on_insert_singleton:\n  assumes \"partition_on A P\" \"a \\<notin> A\" \"insert a A = A'\"\n  shows \"partition_on A' (insert {a} P)\"", "lemma partition_on_remove_singleton:\n  assumes \"partition_on A P\" \"X \\<in> P\" \"A - X = A'\"\n  shows \"partition_on A' (P - {X})\"", "lemma partition_on_partition_on_unique:\n  assumes \"partition_on A P\"\n  assumes \"x \\<in> A\"\n  shows \"\\<exists>!X. x \\<in> X \\<and> X \\<in> P\"", "lemma partition_on_the_part_mem:\n  assumes \"partition_on A P\"\n  assumes \"x \\<in> A\"\n  shows \"(THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P\"", "lemma partition_on_in_the_unique_part:\n  assumes \"partition_on A P\"\n  assumes \"x \\<in> A\"\n  shows \"x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\"", "lemma partition_on_the_part_eq:\n  assumes \"partition_on A P\"\n  assumes \"x \\<in> X\" \"X \\<in> P\"\n  shows \"(THE X. x \\<in> X \\<and> X \\<in> P) = X\"", "lemma the_unique_part_alternative_def:\n  assumes \"partition_on A P\"\n  assumes \"x \\<in> A\"\n  shows \"(THE X. x \\<in> X \\<and> X \\<in> P) = {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\"", "lemma partition_on_all_in_part_eq_part:\n  assumes \"partition_on A P\"\n  assumes \"X' \\<in> P\"\n  shows \"{x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'} = X'\"", "lemma partition_on_part_characteristic:\n  assumes \"partition_on A P\"\n  assumes \"X \\<in> P\" \"x \\<in> X\"\n  shows \"X = {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\"", "lemma partition_on_no_partition_outside_carrier:\n  assumes \"partition_on A P\"\n  assumes \"x \\<notin> A\"\n  shows \"{y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X} = {}\"", "lemma partition_on_le_set_elements:\n  assumes \"finite A\"\n  assumes \"partition_on A P\"\n  shows \"card P \\<le> card A\"", "lemma partition_on_union:\n  assumes \"A \\<inter> B = {}\"\n  assumes \"partition_on A P\"\n  assumes \"partition_on B Q\"\n  shows \"partition_on (A \\<union> B) (P \\<union> Q)\"", "lemma partition_on_split1:\n  assumes \"partition_on A (P \\<union> Q)\"\n  shows \"partition_on (\\<Union>P) P\"", "lemma partition_on_split2:\n  assumes \"partition_on A (P \\<union> Q)\"\n  shows \"partition_on (\\<Union>Q) Q\"", "lemma partition_on_intersect_on_elements:\n  assumes \"partition_on (A \\<union> C) P\"\n  assumes \"\\<forall>X \\<in> P. \\<exists>x. x \\<in> X \\<inter> C\"\n  shows \"partition_on C ((\\<lambda>X. X \\<inter> C) ` P)\"", "lemma partition_on_insert_elements:\n  assumes \"A \\<inter> B = {}\"\n  assumes \"partition_on B P\"\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E P\"\n  shows \"partition_on (A \\<union> B) ((\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P)\" (is \"partition_on _ ?P\")", "lemma partition_on_map:\n  assumes \"inj_on f A\"\n  assumes \"partition_on A P\"\n  shows \"partition_on (f ` A) ((`) f ` P)\"", "lemma set_of_partition_on_map:\n  assumes \"inj_on f A\"\n  shows \"(`) ((`) f) ` {P. partition_on A P} = {P. partition_on (f ` A) P}\""], "translations": [["", "lemma set_eqI':\n  assumes \"\\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> B\"\n  assumes \"\\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> A\"\n  shows \"A = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = B", "using assms"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> ?x \\<in> B\n  ?x \\<in> B \\<Longrightarrow> ?x \\<in> A\n\ngoal (1 subgoal):\n 1. A = B", "by auto"], ["", "lemma comp_image:\n  \"((`) f \\<circ> (`) g) = (`) (f o g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (`) f \\<circ> (`) g = (`) (f \\<circ> g)", "by rule auto"], ["", "subsection \\<open>Introduction and Elimination Rules\\<close>"], ["", "text \\<open>The definition of @{const partition_on} is in @{theory \"HOL-Library.Disjoint_Sets\"}.\\<close>"], ["", "(* TODO: move the following theorems to Disjoint Sets *)"], ["", "lemma partition_onI:\n  assumes \"\\<And>p. p \\<in> P \\<Longrightarrow> p \\<noteq> {}\"\n  assumes \"\\<Union>P = A\"\n  assumes \"\\<And>p p'. p \\<in> P \\<Longrightarrow> p' \\<in> P \\<Longrightarrow> p \\<noteq> p' \\<Longrightarrow> p \\<inter> p' = {}\"\n  shows \"partition_on A P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on A P", "using assms"], ["proof (prove)\nusing this:\n  ?p \\<in> P \\<Longrightarrow> ?p \\<noteq> {}\n  \\<Union> P = A\n  \\<lbrakk>?p \\<in> P; ?p' \\<in> P; ?p \\<noteq> ?p'\\<rbrakk>\n  \\<Longrightarrow> ?p \\<inter> ?p' = {}\n\ngoal (1 subgoal):\n 1. partition_on A P", "unfolding partition_on_def disjoint_def"], ["proof (prove)\nusing this:\n  ?p \\<in> P \\<Longrightarrow> ?p \\<noteq> {}\n  \\<Union> P = A\n  \\<lbrakk>?p \\<in> P; ?p' \\<in> P; ?p \\<noteq> ?p'\\<rbrakk>\n  \\<Longrightarrow> ?p \\<inter> ?p' = {}\n\ngoal (1 subgoal):\n 1. \\<Union> P = A \\<and>\n    (\\<forall>a\\<in>P.\n        \\<forall>b\\<in>P.\n           a \\<noteq> b \\<longrightarrow> a \\<inter> b = {}) \\<and>\n    {} \\<notin> P", "by blast"], ["", "lemma partition_onE:\n  assumes \"partition_on A P\"\n  obtains \"\\<And>p. p \\<in> P \\<Longrightarrow> p \\<noteq> {}\"\n     \"\\<Union>P = A\"\n     \"\\<And>p p'. p \\<in> P \\<Longrightarrow> p' \\<in> P \\<Longrightarrow> p \\<noteq> p' \\<Longrightarrow> p \\<inter> p' = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<And>p. p \\<in> P \\<Longrightarrow> p \\<noteq> {};\n      \\<Union> P = A;\n      \\<And>p p'.\n         \\<lbrakk>p \\<in> P; p' \\<in> P; p \\<noteq> p'\\<rbrakk>\n         \\<Longrightarrow> p \\<inter> p' = {}\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  partition_on A P\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<And>p. p \\<in> P \\<Longrightarrow> p \\<noteq> {};\n      \\<Union> P = A;\n      \\<And>p p'.\n         \\<lbrakk>p \\<in> P; p' \\<in> P; p \\<noteq> p'\\<rbrakk>\n         \\<Longrightarrow> p \\<inter> p' = {}\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding partition_on_def disjoint_def"], ["proof (prove)\nusing this:\n  \\<Union> P = A \\<and>\n  (\\<forall>a\\<in>P.\n      \\<forall>b\\<in>P.\n         a \\<noteq> b \\<longrightarrow> a \\<inter> b = {}) \\<and>\n  {} \\<notin> P\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<And>p. p \\<in> P \\<Longrightarrow> p \\<noteq> {};\n      \\<Union> P = A;\n      \\<And>p p'.\n         \\<lbrakk>p \\<in> P; p' \\<in> P; p \\<noteq> p'\\<rbrakk>\n         \\<Longrightarrow> p \\<inter> p' = {}\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "subsection \\<open>Basic Facts on Set Partitions\\<close>"], ["", "lemma partition_onD4: \"partition_on A P \\<Longrightarrow> p \\<in> P \\<Longrightarrow> q \\<in> P \\<Longrightarrow> x \\<in> p \\<Longrightarrow> x \\<in> q \\<Longrightarrow> p = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>partition_on A P; p \\<in> P; q \\<in> P; x \\<in> p;\n     x \\<in> q\\<rbrakk>\n    \\<Longrightarrow> p = q", "by (auto simp: partition_on_def disjoint_def)"], ["", "lemma partition_subset_imp_notin:\n  assumes \"partition_on A P\" \"X \\<in> P\"\n  assumes \"X' \\<subset> X\"\n  shows \"X' \\<notin> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X' \\<notin> P", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. X' \\<in> P \\<Longrightarrow> False", "assume \"X' \\<in> P\""], ["proof (state)\nthis:\n  X' \\<in> P\n\ngoal (1 subgoal):\n 1. X' \\<in> P \\<Longrightarrow> False", "from \\<open>X' \\<in> P\\<close> \\<open>partition_on A P\\<close>"], ["proof (chain)\npicking this:\n  X' \\<in> P\n  partition_on A P", "have \"X' \\<noteq> {}\""], ["proof (prove)\nusing this:\n  X' \\<in> P\n  partition_on A P\n\ngoal (1 subgoal):\n 1. X' \\<noteq> {}", "using partition_onD3"], ["proof (prove)\nusing this:\n  X' \\<in> P\n  partition_on A P\n  partition_on ?A ?P \\<Longrightarrow> {} \\<notin> ?P\n\ngoal (1 subgoal):\n 1. X' \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  X' \\<noteq> {}\n\ngoal (1 subgoal):\n 1. X' \\<in> P \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  X' \\<noteq> {}\n\ngoal (1 subgoal):\n 1. X' \\<in> P \\<Longrightarrow> False", "from \\<open>X' \\<in> P\\<close> \\<open>X \\<in> P\\<close> \\<open>partition_on A P\\<close> \\<open>X' \\<subset> X\\<close>"], ["proof (chain)\npicking this:\n  X' \\<in> P\n  X \\<in> P\n  partition_on A P\n  X' \\<subset> X", "have \"disjnt X X'\""], ["proof (prove)\nusing this:\n  X' \\<in> P\n  X \\<in> P\n  partition_on A P\n  X' \\<subset> X\n\ngoal (1 subgoal):\n 1. disjnt X X'", "by (metis disjnt_def disjointD inf.strict_order_iff partition_onD2)"], ["proof (state)\nthis:\n  disjnt X X'\n\ngoal (1 subgoal):\n 1. X' \\<in> P \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  disjnt X X'\n\ngoal (1 subgoal):\n 1. X' \\<in> P \\<Longrightarrow> False", "note \\<open>X' \\<subset> X\\<close>"], ["proof (state)\nthis:\n  X' \\<subset> X\n\ngoal (1 subgoal):\n 1. X' \\<in> P \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  X' \\<noteq> {}\n  disjnt X X'\n  X' \\<subset> X", "show False"], ["proof (prove)\nusing this:\n  X' \\<noteq> {}\n  disjnt X X'\n  X' \\<subset> X\n\ngoal (1 subgoal):\n 1. False", "by (meson all_not_in_conv disjnt_iff psubsetD)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partition_on_Diff:\n  assumes P: \"partition_on A P\" shows \"Q \\<subseteq> P \\<Longrightarrow> partition_on (A - \\<Union>Q) (P - Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<subseteq> P \\<Longrightarrow> partition_on (A - \\<Union> Q) (P - Q)", "using P P[THEN partition_onD4]"], ["proof (prove)\nusing this:\n  partition_on A P\n  \\<lbrakk>?p \\<in> P; ?q \\<in> P; ?x \\<in> ?p; ?x \\<in> ?q\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q\n\ngoal (1 subgoal):\n 1. Q \\<subseteq> P \\<Longrightarrow> partition_on (A - \\<Union> Q) (P - Q)", "by (auto simp: partition_on_def disjoint_def)"], ["", "lemma partition_on_UN:\n  assumes A: \"partition_on A B\" and B: \"\\<And>b. b \\<in> B \\<Longrightarrow> partition_on b (P b)\"\n  shows \"partition_on A (\\<Union>b\\<in>B. P b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on A (\\<Union> (P ` B))", "proof (rule partition_onI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p. p \\<in> \\<Union> (P ` B) \\<Longrightarrow> p \\<noteq> {}\n 2. \\<Union> (\\<Union> (P ` B)) = A\n 3. \\<And>p p'.\n       \\<lbrakk>p \\<in> \\<Union> (P ` B); p' \\<in> \\<Union> (P ` B);\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "show \"\\<Union>(\\<Union>b\\<in>B. P b) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (\\<Union> (P ` B)) = A", "using B[THEN partition_onD1] A[THEN partition_onD1]"], ["proof (prove)\nusing this:\n  ?A \\<in> B \\<Longrightarrow> ?A = \\<Union> (P ?A)\n  A = \\<Union> B\n\ngoal (1 subgoal):\n 1. \\<Union> (\\<Union> (P ` B)) = A", "by blast"], ["proof (state)\nthis:\n  \\<Union> (\\<Union> (P ` B)) = A\n\ngoal (2 subgoals):\n 1. \\<And>p. p \\<in> \\<Union> (P ` B) \\<Longrightarrow> p \\<noteq> {}\n 2. \\<And>p p'.\n       \\<lbrakk>p \\<in> \\<Union> (P ` B); p' \\<in> \\<Union> (P ` B);\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p. p \\<in> \\<Union> (P ` B) \\<Longrightarrow> p \\<noteq> {}\n 2. \\<And>p p'.\n       \\<lbrakk>p \\<in> \\<Union> (P ` B); p' \\<in> \\<Union> (P ` B);\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "show \"p \\<noteq> {}\" if \"p \\<in> (\\<Union>b\\<in>B. P b)\" for p"], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<noteq> {}", "using B[THEN partition_onD3] that"], ["proof (prove)\nusing this:\n  ?A \\<in> B \\<Longrightarrow> {} \\<notin> P ?A\n  p \\<in> \\<Union> (P ` B)\n\ngoal (1 subgoal):\n 1. p \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  ?p \\<in> \\<Union> (P ` B) \\<Longrightarrow> ?p \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> \\<Union> (P ` B); p' \\<in> \\<Union> (P ` B);\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> \\<Union> (P ` B); p' \\<in> \\<Union> (P ` B);\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "fix p q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> \\<Union> (P ` B); p' \\<in> \\<Union> (P ` B);\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "assume \"p \\<in> (\\<Union>i\\<in>B. P i)\" \"q \\<in> (\\<Union>i\\<in>B. P i)\" and \"p \\<noteq> q\""], ["proof (state)\nthis:\n  p \\<in> \\<Union> (P ` B)\n  q \\<in> \\<Union> (P ` B)\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> \\<Union> (P ` B); p' \\<in> \\<Union> (P ` B);\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "then"], ["proof (chain)\npicking this:\n  p \\<in> \\<Union> (P ` B)\n  q \\<in> \\<Union> (P ` B)\n  p \\<noteq> q", "obtain i j where i: \"p \\<in> P i\" \"i \\<in> B\" and j: \"q \\<in> P j\" \"j \\<in> B\""], ["proof (prove)\nusing this:\n  p \\<in> \\<Union> (P ` B)\n  q \\<in> \\<Union> (P ` B)\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>p \\<in> P i; i \\<in> B; q \\<in> P j; j \\<in> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p \\<in> P i\n  i \\<in> B\n  q \\<in> P j\n  j \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> \\<Union> (P ` B); p' \\<in> \\<Union> (P ` B);\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "show \"p \\<inter> q = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<inter> q = {}", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> p \\<inter> q = {}\n 2. \\<not> ?P \\<Longrightarrow> p \\<inter> q = {}", "assume \"i = j\""], ["proof (state)\nthis:\n  i = j\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> p \\<inter> q = {}\n 2. \\<not> ?P \\<Longrightarrow> p \\<inter> q = {}", "then"], ["proof (chain)\npicking this:\n  i = j", "show ?thesis"], ["proof (prove)\nusing this:\n  i = j\n\ngoal (1 subgoal):\n 1. p \\<inter> q = {}", "using i j \\<open>p \\<noteq> q\\<close> B[THEN partition_onD2, of i]"], ["proof (prove)\nusing this:\n  i = j\n  p \\<in> P i\n  i \\<in> B\n  q \\<in> P j\n  j \\<in> B\n  p \\<noteq> q\n  i \\<in> B \\<Longrightarrow> disjoint (P i)\n\ngoal (1 subgoal):\n 1. p \\<inter> q = {}", "by (simp add: disjointD)"], ["proof (state)\nthis:\n  p \\<inter> q = {}\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> p \\<inter> q = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> p \\<inter> q = {}", "assume \"i \\<noteq> j\""], ["proof (state)\nthis:\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> p \\<inter> q = {}", "then"], ["proof (chain)\npicking this:\n  i \\<noteq> j", "have \"disjnt i j\""], ["proof (prove)\nusing this:\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. disjnt i j", "using i j A[THEN partition_onD2]"], ["proof (prove)\nusing this:\n  i \\<noteq> j\n  p \\<in> P i\n  i \\<in> B\n  q \\<in> P j\n  j \\<in> B\n  disjoint B\n\ngoal (1 subgoal):\n 1. disjnt i j", "by (auto simp: pairwise_def)"], ["proof (state)\nthis:\n  disjnt i j\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> p \\<inter> q = {}", "moreover"], ["proof (state)\nthis:\n  disjnt i j\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> p \\<inter> q = {}", "have \"p \\<subseteq> i\" \"q \\<subseteq> j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<subseteq> i &&& q \\<subseteq> j", "using B[THEN partition_onD1, of i, symmetric] B[THEN partition_onD1, of j, symmetric] i j"], ["proof (prove)\nusing this:\n  i \\<in> B \\<Longrightarrow> \\<Union> (P i) = i\n  j \\<in> B \\<Longrightarrow> \\<Union> (P j) = j\n  p \\<in> P i\n  i \\<in> B\n  q \\<in> P j\n  j \\<in> B\n\ngoal (1 subgoal):\n 1. p \\<subseteq> i &&& q \\<subseteq> j", "by auto"], ["proof (state)\nthis:\n  p \\<subseteq> i\n  q \\<subseteq> j\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> p \\<inter> q = {}", "ultimately"], ["proof (chain)\npicking this:\n  disjnt i j\n  p \\<subseteq> i\n  q \\<subseteq> j", "show ?thesis"], ["proof (prove)\nusing this:\n  disjnt i j\n  p \\<subseteq> i\n  q \\<subseteq> j\n\ngoal (1 subgoal):\n 1. p \\<inter> q = {}", "by (auto simp: disjnt_def)"], ["proof (state)\nthis:\n  p \\<inter> q = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<inter> q = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partition_on_notemptyI:\n  assumes \"partition_on A P\"\n  assumes \"A \\<noteq> {}\"\n  shows \"P \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<noteq> {}", "using assms"], ["proof (prove)\nusing this:\n  partition_on A P\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. P \\<noteq> {}", "by (auto elim: partition_onE)"], ["", "lemma partition_on_disjoint:\n  assumes \"partition_on A P\"\n  assumes \"partition_on B Q\"\n  assumes \"A \\<inter> B = {}\"\n  shows \"P \\<inter> Q = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<inter> Q = {}", "using assms"], ["proof (prove)\nusing this:\n  partition_on A P\n  partition_on B Q\n  A \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. P \\<inter> Q = {}", "by (fastforce elim: partition_onE)"], ["", "lemma partition_on_eq_implies_eq_carrier:\n  assumes \"partition_on A Q\"\n  assumes \"partition_on B Q\"\n  shows \"A = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = B", "using assms"], ["proof (prove)\nusing this:\n  partition_on A Q\n  partition_on B Q\n\ngoal (1 subgoal):\n 1. A = B", "by (fastforce elim: partition_onE)"], ["", "lemma partition_on_insert:\n  assumes \"partition_on A P\"\n  assumes \"disjnt A X\" \"X \\<noteq> {}\"\n  assumes \"A \\<union> X = A'\"\n  shows \"partition_on A' (insert X P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on A' (insert X P)", "using assms"], ["proof (prove)\nusing this:\n  partition_on A P\n  disjnt A X\n  X \\<noteq> {}\n  A \\<union> X = A'\n\ngoal (1 subgoal):\n 1. partition_on A' (insert X P)", "by (auto simp: partition_on_def disjoint_def disjnt_def)"], ["", "text \\<open>An alternative formulation of @{thm partition_on_insert}\\<close>"], ["", "lemma partition_on_insert':\n  assumes \"partition_on (A - X) P\"\n  assumes \"X \\<subseteq> A\" \"X \\<noteq> {}\"\n  shows \"partition_on A (insert X P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on A (insert X P)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. partition_on A (insert X P)", "have \"disjnt (A - X) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjnt (A - X) X", "by (simp add: disjnt_iff)"], ["proof (state)\nthis:\n  disjnt (A - X) X\n\ngoal (1 subgoal):\n 1. partition_on A (insert X P)", "from assms(1) this assms(3)"], ["proof (chain)\npicking this:\n  partition_on (A - X) P\n  disjnt (A - X) X\n  X \\<noteq> {}", "have \"partition_on ((A - X) \\<union> X) (insert X P)\""], ["proof (prove)\nusing this:\n  partition_on (A - X) P\n  disjnt (A - X) X\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. partition_on (A - X \\<union> X) (insert X P)", "by (auto intro: partition_on_insert)"], ["proof (state)\nthis:\n  partition_on (A - X \\<union> X) (insert X P)\n\ngoal (1 subgoal):\n 1. partition_on A (insert X P)", "from this \\<open>X \\<subseteq> A\\<close>"], ["proof (chain)\npicking this:\n  partition_on (A - X \\<union> X) (insert X P)\n  X \\<subseteq> A", "show ?thesis"], ["proof (prove)\nusing this:\n  partition_on (A - X \\<union> X) (insert X P)\n  X \\<subseteq> A\n\ngoal (1 subgoal):\n 1. partition_on A (insert X P)", "by (metis Diff_partition sup_commute)"], ["proof (state)\nthis:\n  partition_on A (insert X P)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partition_on_insert_singleton:\n  assumes \"partition_on A P\" \"a \\<notin> A\" \"insert a A = A'\"\n  shows \"partition_on A' (insert {a} P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on A' (insert {a} P)", "using assms"], ["proof (prove)\nusing this:\n  partition_on A P\n  a \\<notin> A\n  insert a A = A'\n\ngoal (1 subgoal):\n 1. partition_on A' (insert {a} P)", "by (auto simp: partition_on_def disjoint_def disjnt_def)"], ["", "lemma partition_on_remove_singleton:\n  assumes \"partition_on A P\" \"X \\<in> P\" \"A - X = A'\"\n  shows \"partition_on A' (P - {X})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on A' (P - {X})", "using assms partition_on_Diff"], ["proof (prove)\nusing this:\n  partition_on A P\n  X \\<in> P\n  A - X = A'\n  \\<lbrakk>partition_on ?A ?P; ?Q \\<subseteq> ?P\\<rbrakk>\n  \\<Longrightarrow> partition_on (?A - \\<Union> ?Q) (?P - ?Q)\n\ngoal (1 subgoal):\n 1. partition_on A' (P - {X})", "by (metis Diff_cancel Diff_subset cSup_singleton insert_subset)"], ["", "subsection \\<open>The Unique Part Containing an Element in a Set Partition\\<close>"], ["", "lemma partition_on_partition_on_unique:\n  assumes \"partition_on A P\"\n  assumes \"x \\<in> A\"\n  shows \"\\<exists>!X. x \\<in> X \\<and> X \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "from \\<open>partition_on A P\\<close>"], ["proof (chain)\npicking this:\n  partition_on A P", "have \"\\<Union>P = A\""], ["proof (prove)\nusing this:\n  partition_on A P\n\ngoal (1 subgoal):\n 1. \\<Union> P = A", "by (auto elim: partition_onE)"], ["proof (state)\nthis:\n  \\<Union> P = A\n\ngoal (1 subgoal):\n 1. \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "from this \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  \\<Union> P = A\n  x \\<in> A", "obtain X where X: \"x \\<in> X \\<and> X \\<in> P\""], ["proof (prove)\nusing this:\n  \\<Union> P = A\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        x \\<in> X \\<and> X \\<in> P \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> X \\<and> X \\<in> P\n\ngoal (1 subgoal):\n 1. \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "{"], ["proof (state)\nthis:\n  x \\<in> X \\<and> X \\<in> P\n\ngoal (1 subgoal):\n 1. \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "fix Y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "assume \"x \\<in> Y \\<and> Y \\<in> P\""], ["proof (state)\nthis:\n  x \\<in> Y \\<and> Y \\<in> P\n\ngoal (1 subgoal):\n 1. \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "from this"], ["proof (chain)\npicking this:\n  x \\<in> Y \\<and> Y \\<in> P", "have \"X = Y\""], ["proof (prove)\nusing this:\n  x \\<in> Y \\<and> Y \\<in> P\n\ngoal (1 subgoal):\n 1. X = Y", "using X \\<open>partition_on A P\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> Y \\<and> Y \\<in> P\n  x \\<in> X \\<and> X \\<in> P\n  partition_on A P\n\ngoal (1 subgoal):\n 1. X = Y", "by (meson partition_onE disjoint_iff_not_equal)"], ["proof (state)\nthis:\n  X = Y\n\ngoal (1 subgoal):\n 1. \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "}"], ["proof (state)\nthis:\n  x \\<in> ?Y2 \\<and> ?Y2 \\<in> P \\<Longrightarrow> X = ?Y2\n\ngoal (1 subgoal):\n 1. \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "from this X"], ["proof (chain)\npicking this:\n  x \\<in> ?Y2 \\<and> ?Y2 \\<in> P \\<Longrightarrow> X = ?Y2\n  x \\<in> X \\<and> X \\<in> P", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> ?Y2 \\<and> ?Y2 \\<in> P \\<Longrightarrow> X = ?Y2\n  x \\<in> X \\<and> X \\<in> P\n\ngoal (1 subgoal):\n 1. \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "by auto"], ["proof (state)\nthis:\n  \\<exists>!X. x \\<in> X \\<and> X \\<in> P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partition_on_the_part_mem:\n  assumes \"partition_on A P\"\n  assumes \"x \\<in> A\"\n  shows \"(THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P", "from \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> A", "have \"\\<exists>!X. x \\<in> X \\<and> X \\<in> P\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "using \\<open>partition_on A P\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> A\n  partition_on A P\n\ngoal (1 subgoal):\n 1. \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "by (simp add: partition_on_partition_on_unique)"], ["proof (state)\nthis:\n  \\<exists>!X. x \\<in> X \\<and> X \\<in> P\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P", "from this"], ["proof (chain)\npicking this:\n  \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "show \"(THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P\""], ["proof (prove)\nusing this:\n  \\<exists>!X. x \\<in> X \\<and> X \\<in> P\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P", "by (metis (no_types, lifting) theI)"], ["proof (state)\nthis:\n  (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partition_on_in_the_unique_part:\n  assumes \"partition_on A P\"\n  assumes \"x \\<in> A\"\n  shows \"x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)", "from assms"], ["proof (chain)\npicking this:\n  partition_on A P\n  x \\<in> A", "have \"\\<exists>!X. x \\<in> X \\<and> X \\<in> P\""], ["proof (prove)\nusing this:\n  partition_on A P\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "by (simp add: partition_on_partition_on_unique)"], ["proof (state)\nthis:\n  \\<exists>!X. x \\<in> X \\<and> X \\<in> P\n\ngoal (1 subgoal):\n 1. x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>!X. x \\<in> X \\<and> X \\<in> P\n\ngoal (1 subgoal):\n 1. x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)", "by (metis (mono_tags, lifting) theI')"], ["proof (state)\nthis:\n  x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partition_on_the_part_eq:\n  assumes \"partition_on A P\"\n  assumes \"x \\<in> X\" \"X \\<in> P\"\n  shows \"(THE X. x \\<in> X \\<and> X \\<in> P) = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = X", "from \\<open>x \\<in> X\\<close> \\<open>X \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> X\n  X \\<in> P", "have \"x \\<in> A\""], ["proof (prove)\nusing this:\n  x \\<in> X\n  X \\<in> P\n\ngoal (1 subgoal):\n 1. x \\<in> A", "using \\<open>partition_on A P\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> X\n  X \\<in> P\n  partition_on A P\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by (auto elim: partition_onE)"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = X", "from this"], ["proof (chain)\npicking this:\n  x \\<in> A", "have \"\\<exists>!X. x \\<in> X \\<and> X \\<in> P\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "using \\<open>partition_on A P\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> A\n  partition_on A P\n\ngoal (1 subgoal):\n 1. \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "by (simp add: partition_on_partition_on_unique)"], ["proof (state)\nthis:\n  \\<exists>!X. x \\<in> X \\<and> X \\<in> P\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = X", "from \\<open>x \\<in> X\\<close> \\<open>X \\<in> P\\<close> this"], ["proof (chain)\npicking this:\n  x \\<in> X\n  X \\<in> P\n  \\<exists>!X. x \\<in> X \\<and> X \\<in> P", "show \"(THE X. x \\<in> X \\<and> X \\<in> P) = X\""], ["proof (prove)\nusing this:\n  x \\<in> X\n  X \\<in> P\n  \\<exists>!X. x \\<in> X \\<and> X \\<in> P\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = X", "by (auto intro!: the1_equality)"], ["proof (state)\nthis:\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma the_unique_part_alternative_def:\n  assumes \"partition_on A P\"\n  assumes \"x \\<in> A\"\n  shows \"(THE X. x \\<in> X \\<and> X \\<in> P) = {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) =\n    {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P)\n    \\<subseteq> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\n 2. {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\n    \\<subseteq> (THE X. x \\<in> X \\<and> X \\<in> P)", "show \"(THE X. x \\<in> X \\<and> X \\<in> P) \\<subseteq> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P)\n    \\<subseteq> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (THE X. x \\<in> X \\<and> X \\<in> P) \\<Longrightarrow>\n       xa \\<in> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (THE X. x \\<in> X \\<and> X \\<in> P) \\<Longrightarrow>\n       xa \\<in> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "assume \"y \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\""], ["proof (state)\nthis:\n  y \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (THE X. x \\<in> X \\<and> X \\<in> P) \\<Longrightarrow>\n       xa \\<in> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "moreover"], ["proof (state)\nthis:\n  y \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (THE X. x \\<in> X \\<and> X \\<in> P) \\<Longrightarrow>\n       xa \\<in> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "from \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> A", "have \"x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)", "using \\<open>partition_on A P\\<close> partition_on_in_the_unique_part"], ["proof (prove)\nusing this:\n  x \\<in> A\n  partition_on A P\n  \\<lbrakk>partition_on ?A ?P; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> (THE X. ?x \\<in> X \\<and> X \\<in> ?P)\n\ngoal (1 subgoal):\n 1. x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)", "by force"], ["proof (state)\nthis:\n  x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (THE X. x \\<in> X \\<and> X \\<in> P) \\<Longrightarrow>\n       xa \\<in> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "moreover"], ["proof (state)\nthis:\n  x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (THE X. x \\<in> X \\<and> X \\<in> P) \\<Longrightarrow>\n       xa \\<in> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "from \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> A", "have \"(THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P", "using \\<open>partition_on A P\\<close> partition_on_the_part_mem"], ["proof (prove)\nusing this:\n  x \\<in> A\n  partition_on A P\n  \\<lbrakk>partition_on ?A ?P; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> (THE X. ?x \\<in> X \\<and> X \\<in> ?P) \\<in> ?P\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P", "by force"], ["proof (state)\nthis:\n  (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (THE X. x \\<in> X \\<and> X \\<in> P) \\<Longrightarrow>\n       xa \\<in> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "ultimately"], ["proof (chain)\npicking this:\n  y \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\n  x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\n  (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P", "show \"y \\<in> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\""], ["proof (prove)\nusing this:\n  y \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\n  x \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\n  (THE X. x \\<in> X \\<and> X \\<in> P) \\<in> P\n\ngoal (1 subgoal):\n 1. y \\<in> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "by auto"], ["proof (state)\nthis:\n  y \\<in> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (THE X. x \\<in> X \\<and> X \\<in> P)\n  \\<subseteq> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\n\ngoal (1 subgoal):\n 1. {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\n    \\<subseteq> (THE X. x \\<in> X \\<and> X \\<in> P)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\n    \\<subseteq> (THE X. x \\<in> X \\<and> X \\<in> P)", "show \"{y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X} \\<subseteq> (THE X. x \\<in> X \\<and> X \\<in> P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\n    \\<subseteq> (THE X. x \\<in> X \\<and> X \\<in> P)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {y. \\<exists>X\\<in>P.\n                       x \\<in> X \\<and> y \\<in> X} \\<Longrightarrow>\n       xa \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {y. \\<exists>X\\<in>P.\n                       x \\<in> X \\<and> y \\<in> X} \\<Longrightarrow>\n       xa \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)", "assume \"y \\<in> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\""], ["proof (state)\nthis:\n  y \\<in> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {y. \\<exists>X\\<in>P.\n                       x \\<in> X \\<and> y \\<in> X} \\<Longrightarrow>\n       xa \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)", "from this"], ["proof (chain)\npicking this:\n  y \\<in> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "obtain X where \"x \\<in> X\" and \"y \\<in> X\" and \"X \\<in> P\""], ["proof (prove)\nusing this:\n  y \\<in> {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>x \\<in> X; y \\<in> X; X \\<in> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> X\n  y \\<in> X\n  X \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {y. \\<exists>X\\<in>P.\n                       x \\<in> X \\<and> y \\<in> X} \\<Longrightarrow>\n       xa \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)", "from \\<open>x \\<in> X\\<close> \\<open>X \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> X\n  X \\<in> P", "have \"(THE X. x \\<in> X \\<and> X \\<in> P) = X\""], ["proof (prove)\nusing this:\n  x \\<in> X\n  X \\<in> P\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = X", "using \\<open>partition_on A P\\<close> partition_on_the_part_eq"], ["proof (prove)\nusing this:\n  x \\<in> X\n  X \\<in> P\n  partition_on A P\n  \\<lbrakk>partition_on ?A ?P; ?x \\<in> ?X; ?X \\<in> ?P\\<rbrakk>\n  \\<Longrightarrow> (THE X. ?x \\<in> X \\<and> X \\<in> ?P) = ?X\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = X", "by force"], ["proof (state)\nthis:\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {y. \\<exists>X\\<in>P.\n                       x \\<in> X \\<and> y \\<in> X} \\<Longrightarrow>\n       xa \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)", "from this \\<open>y \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X\n  y \\<in> X", "show \"y \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\""], ["proof (prove)\nusing this:\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X\n  y \\<in> X\n\ngoal (1 subgoal):\n 1. y \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)", "by simp"], ["proof (state)\nthis:\n  y \\<in> (THE X. x \\<in> X \\<and> X \\<in> P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\n  \\<subseteq> (THE X. x \\<in> X \\<and> X \\<in> P)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partition_on_all_in_part_eq_part:\n  assumes \"partition_on A P\"\n  assumes \"X' \\<in> P\"\n  shows \"{x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'} = X'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'} = X'", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'} \\<subseteq> X'\n 2. X' \\<subseteq> {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'}", "show \"{x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'} \\<subseteq> X'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'} \\<subseteq> X'", "using assms(1) partition_on_in_the_unique_part"], ["proof (prove)\nusing this:\n  partition_on A P\n  \\<lbrakk>partition_on ?A ?P; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> (THE X. ?x \\<in> X \\<and> X \\<in> ?P)\n\ngoal (1 subgoal):\n 1. {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'} \\<subseteq> X'", "by force"], ["proof (state)\nthis:\n  {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'} \\<subseteq> X'\n\ngoal (1 subgoal):\n 1. X' \\<subseteq> {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. X' \\<subseteq> {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'}", "show \"X' \\<subseteq> {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X' \\<subseteq> {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X' \\<Longrightarrow>\n       x \\<in> {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X' \\<Longrightarrow>\n       x \\<in> {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'}", "assume \"x \\<in> X'\""], ["proof (state)\nthis:\n  x \\<in> X'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X' \\<Longrightarrow>\n       x \\<in> {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'}", "from \\<open>x \\<in> X'\\<close> \\<open>X' \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> X'\n  X' \\<in> P", "have \"x \\<in> A\""], ["proof (prove)\nusing this:\n  x \\<in> X'\n  X' \\<in> P\n\ngoal (1 subgoal):\n 1. x \\<in> A", "using \\<open>partition_on A P\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> X'\n  X' \\<in> P\n  partition_on A P\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by (auto elim: partition_onE)"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X' \\<Longrightarrow>\n       x \\<in> {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'}", "moreover"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X' \\<Longrightarrow>\n       x \\<in> {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'}", "from \\<open>x \\<in> X'\\<close> \\<open>X' \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> X'\n  X' \\<in> P", "have \"(THE X. x \\<in> X \\<and> X \\<in> P) = X'\""], ["proof (prove)\nusing this:\n  x \\<in> X'\n  X' \\<in> P\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = X'", "using \\<open>partition_on A P\\<close> partition_on_the_part_eq"], ["proof (prove)\nusing this:\n  x \\<in> X'\n  X' \\<in> P\n  partition_on A P\n  \\<lbrakk>partition_on ?A ?P; ?x \\<in> ?X; ?X \\<in> ?P\\<rbrakk>\n  \\<Longrightarrow> (THE X. ?x \\<in> X \\<and> X \\<in> ?P) = ?X\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) = X'", "by fastforce"], ["proof (state)\nthis:\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X' \\<Longrightarrow>\n       x \\<in> {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'}", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> A\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X'", "show \"x \\<in> {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'}\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  (THE X. x \\<in> X \\<and> X \\<in> P) = X'\n\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  X' \\<subseteq> {x \\<in> A. (THE X. x \\<in> X \\<and> X \\<in> P) = X'}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partition_on_part_characteristic:\n  assumes \"partition_on A P\"\n  assumes \"X \\<in> P\" \"x \\<in> X\"\n  shows \"X = {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X = {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. X = {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "from \\<open>x \\<in> X\\<close> \\<open>X \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> X\n  X \\<in> P", "have \"x \\<in> A\""], ["proof (prove)\nusing this:\n  x \\<in> X\n  X \\<in> P\n\ngoal (1 subgoal):\n 1. x \\<in> A", "using \\<open>partition_on A P\\<close> partition_onE"], ["proof (prove)\nusing this:\n  x \\<in> X\n  X \\<in> P\n  partition_on A P\n  \\<lbrakk>partition_on ?A ?P;\n   \\<lbrakk>\\<And>p. p \\<in> ?P \\<Longrightarrow> p \\<noteq> {};\n    \\<Union> ?P = ?A;\n    \\<And>p p'.\n       \\<lbrakk>p \\<in> ?P; p' \\<in> ?P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by blast"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. X = {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "from  \\<open>x \\<in> X\\<close> \\<open>X \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> X\n  X \\<in> P", "have \"X = (THE X. x \\<in> X \\<and> X \\<in> P)\""], ["proof (prove)\nusing this:\n  x \\<in> X\n  X \\<in> P\n\ngoal (1 subgoal):\n 1. X = (THE X. x \\<in> X \\<and> X \\<in> P)", "using \\<open>partition_on A P\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> X\n  X \\<in> P\n  partition_on A P\n\ngoal (1 subgoal):\n 1. X = (THE X. x \\<in> X \\<and> X \\<in> P)", "by (simp add: partition_on_the_part_eq)"], ["proof (state)\nthis:\n  X = (THE X. x \\<in> X \\<and> X \\<in> P)\n\ngoal (1 subgoal):\n 1. X = {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "also"], ["proof (state)\nthis:\n  X = (THE X. x \\<in> X \\<and> X \\<in> P)\n\ngoal (1 subgoal):\n 1. X = {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "from \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> A", "have \"(THE X. x \\<in> X \\<and> X \\<in> P) = {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) =\n    {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "using \\<open>partition_on A P\\<close> the_unique_part_alternative_def"], ["proof (prove)\nusing this:\n  x \\<in> A\n  partition_on A P\n  \\<lbrakk>partition_on ?A ?P; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> (THE X. ?x \\<in> X \\<and> X \\<in> ?P) =\n                    {y. \\<exists>X\\<in>?P. ?x \\<in> X \\<and> y \\<in> X}\n\ngoal (1 subgoal):\n 1. (THE X. x \\<in> X \\<and> X \\<in> P) =\n    {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "by force"], ["proof (state)\nthis:\n  (THE X. x \\<in> X \\<and> X \\<in> P) =\n  {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\n\ngoal (1 subgoal):\n 1. X = {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "finally"], ["proof (chain)\npicking this:\n  X = {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "show ?thesis"], ["proof (prove)\nusing this:\n  X = {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\n\ngoal (1 subgoal):\n 1. X = {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}", "."], ["proof (state)\nthis:\n  X = {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partition_on_no_partition_outside_carrier:\n  assumes \"partition_on A P\"\n  assumes \"x \\<notin> A\"\n  shows \"{y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X} = {}", "using assms"], ["proof (prove)\nusing this:\n  partition_on A P\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X} = {}", "unfolding partition_on_def"], ["proof (prove)\nusing this:\n  \\<Union> P = A \\<and> disjoint P \\<and> {} \\<notin> P\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. {y. \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X} = {}", "by auto"], ["", "subsection \\<open>Cardinality of Parts in a Set Partition\\<close>"], ["", "lemma partition_on_le_set_elements:\n  assumes \"finite A\"\n  assumes \"partition_on A P\"\n  shows \"card P \\<le> card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card P \\<le> card A", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  partition_on A P\n\ngoal (1 subgoal):\n 1. card P \\<le> card A", "proof (induct A arbitrary: P)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P. partition_on {} P \\<Longrightarrow> card P \\<le> card {}\n 2. \\<And>x F P.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P. partition_on F P \\<Longrightarrow> card P \\<le> card F;\n        partition_on (insert x F) P\\<rbrakk>\n       \\<Longrightarrow> card P \\<le> card (insert x F)", "case empty"], ["proof (state)\nthis:\n  partition_on {} P\n\ngoal (2 subgoals):\n 1. \\<And>P. partition_on {} P \\<Longrightarrow> card P \\<le> card {}\n 2. \\<And>x F P.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P. partition_on F P \\<Longrightarrow> card P \\<le> card F;\n        partition_on (insert x F) P\\<rbrakk>\n       \\<Longrightarrow> card P \\<le> card (insert x F)", "from this"], ["proof (chain)\npicking this:\n  partition_on {} P", "show \"card P \\<le> card {}\""], ["proof (prove)\nusing this:\n  partition_on {} P\n\ngoal (1 subgoal):\n 1. card P \\<le> card {}", "by (simp add: partition_on_empty)"], ["proof (state)\nthis:\n  card P \\<le> card {}\n\ngoal (1 subgoal):\n 1. \\<And>x F P.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P. partition_on F P \\<Longrightarrow> card P \\<le> card F;\n        partition_on (insert x F) P\\<rbrakk>\n       \\<Longrightarrow> card P \\<le> card (insert x F)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F P.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P. partition_on F P \\<Longrightarrow> card P \\<le> card F;\n        partition_on (insert x F) P\\<rbrakk>\n       \\<Longrightarrow> card P \\<le> card (insert x F)", "case (insert a A)"], ["proof (state)\nthis:\n  finite A\n  a \\<notin> A\n  partition_on A ?P \\<Longrightarrow> card ?P \\<le> card A\n  partition_on (insert a A) P\n\ngoal (1 subgoal):\n 1. \\<And>x F P.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P. partition_on F P \\<Longrightarrow> card P \\<le> card F;\n        partition_on (insert x F) P\\<rbrakk>\n       \\<Longrightarrow> card P \\<le> card (insert x F)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. card P \\<le> card (insert a A)", "proof (cases \"{a} \\<in> P\")"], ["proof (state)\ngoal (2 subgoals):\n 1. {a} \\<in> P \\<Longrightarrow> card P \\<le> card (insert a A)\n 2. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "case True"], ["proof (state)\nthis:\n  {a} \\<in> P\n\ngoal (2 subgoals):\n 1. {a} \\<in> P \\<Longrightarrow> card P \\<le> card (insert a A)\n 2. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "have prop_partition_on: \"\\<forall>p\\<in>P. p \\<noteq> {}\" \"\\<Union>P = insert a A\"\n      \"\\<forall>p\\<in>P. \\<forall>p'\\<in>P. p \\<noteq> p' \\<longrightarrow> p \\<inter> p' = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>P. p \\<noteq> {} &&&\n    \\<Union> P = insert a A &&&\n    \\<forall>p\\<in>P.\n       \\<forall>p'\\<in>P. p \\<noteq> p' \\<longrightarrow> p \\<inter> p' = {}", "using \\<open>partition_on (insert a A) P\\<close>"], ["proof (prove)\nusing this:\n  partition_on (insert a A) P\n\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>P. p \\<noteq> {} &&&\n    \\<Union> P = insert a A &&&\n    \\<forall>p\\<in>P.\n       \\<forall>p'\\<in>P. p \\<noteq> p' \\<longrightarrow> p \\<inter> p' = {}", "by (fastforce elim: partition_onE)+"], ["proof (state)\nthis:\n  \\<forall>p\\<in>P. p \\<noteq> {}\n  \\<Union> P = insert a A\n  \\<forall>p\\<in>P.\n     \\<forall>p'\\<in>P. p \\<noteq> p' \\<longrightarrow> p \\<inter> p' = {}\n\ngoal (2 subgoals):\n 1. {a} \\<in> P \\<Longrightarrow> card P \\<le> card (insert a A)\n 2. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "from this(2, 3) \\<open>a \\<notin> A\\<close> \\<open>{a} \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  \\<Union> P = insert a A\n  \\<forall>p\\<in>P.\n     \\<forall>p'\\<in>P. p \\<noteq> p' \\<longrightarrow> p \\<inter> p' = {}\n  a \\<notin> A\n  {a} \\<in> P", "have A_eq: \"A = \\<Union>(P - {{a}})\""], ["proof (prove)\nusing this:\n  \\<Union> P = insert a A\n  \\<forall>p\\<in>P.\n     \\<forall>p'\\<in>P. p \\<noteq> p' \\<longrightarrow> p \\<inter> p' = {}\n  a \\<notin> A\n  {a} \\<in> P\n\ngoal (1 subgoal):\n 1. A = \\<Union> (P - {{a}})", "by auto (metis Int_iff UnionI empty_iff insert_iff)"], ["proof (state)\nthis:\n  A = \\<Union> (P - {{a}})\n\ngoal (2 subgoals):\n 1. {a} \\<in> P \\<Longrightarrow> card P \\<le> card (insert a A)\n 2. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "from prop_partition_on A_eq"], ["proof (chain)\npicking this:\n  \\<forall>p\\<in>P. p \\<noteq> {}\n  \\<Union> P = insert a A\n  \\<forall>p\\<in>P.\n     \\<forall>p'\\<in>P. p \\<noteq> p' \\<longrightarrow> p \\<inter> p' = {}\n  A = \\<Union> (P - {{a}})", "have partition_on: \"partition_on A (P - {{a}})\""], ["proof (prove)\nusing this:\n  \\<forall>p\\<in>P. p \\<noteq> {}\n  \\<Union> P = insert a A\n  \\<forall>p\\<in>P.\n     \\<forall>p'\\<in>P. p \\<noteq> p' \\<longrightarrow> p \\<inter> p' = {}\n  A = \\<Union> (P - {{a}})\n\ngoal (1 subgoal):\n 1. partition_on A (P - {{a}})", "by (intro partition_onI) auto"], ["proof (state)\nthis:\n  partition_on A (P - {{a}})\n\ngoal (2 subgoals):\n 1. {a} \\<in> P \\<Longrightarrow> card P \\<le> card (insert a A)\n 2. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "from insert.hyps(3) this"], ["proof (chain)\npicking this:\n  partition_on A ?P \\<Longrightarrow> card ?P \\<le> card A\n  partition_on A (P - {{a}})", "have \"card (P - {{a}}) \\<le> card A\""], ["proof (prove)\nusing this:\n  partition_on A ?P \\<Longrightarrow> card ?P \\<le> card A\n  partition_on A (P - {{a}})\n\ngoal (1 subgoal):\n 1. card (P - {{a}}) \\<le> card A", "by simp"], ["proof (state)\nthis:\n  card (P - {{a}}) \\<le> card A\n\ngoal (2 subgoals):\n 1. {a} \\<in> P \\<Longrightarrow> card P \\<le> card (insert a A)\n 2. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "from this insert(1, 2, 4) \\<open>{a} \\<in> P\\<close>"], ["proof (chain)\npicking this:\n  card (P - {{a}}) \\<le> card A\n  finite A\n  a \\<notin> A\n  partition_on (insert a A) P\n  {a} \\<in> P", "show ?thesis"], ["proof (prove)\nusing this:\n  card (P - {{a}}) \\<le> card A\n  finite A\n  a \\<notin> A\n  partition_on (insert a A) P\n  {a} \\<in> P\n\ngoal (1 subgoal):\n 1. card P \\<le> card (insert a A)", "using finite_elements[OF \\<open>finite A\\<close> partition_on]"], ["proof (prove)\nusing this:\n  card (P - {{a}}) \\<le> card A\n  finite A\n  a \\<notin> A\n  partition_on (insert a A) P\n  {a} \\<in> P\n  finite (P - {{a}})\n\ngoal (1 subgoal):\n 1. card P \\<le> card (insert a A)", "by simp"], ["proof (state)\nthis:\n  card P \\<le> card (insert a A)\n\ngoal (1 subgoal):\n 1. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "case False"], ["proof (state)\nthis:\n  {a} \\<notin> P\n\ngoal (1 subgoal):\n 1. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "from \\<open>partition_on (insert a A) P\\<close>"], ["proof (chain)\npicking this:\n  partition_on (insert a A) P", "obtain p where p_def: \"p \\<in> P\" \"a \\<in> p\""], ["proof (prove)\nusing this:\n  partition_on (insert a A) P\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<in> P; a \\<in> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast elim: partition_onE)"], ["proof (state)\nthis:\n  p \\<in> P\n  a \\<in> p\n\ngoal (1 subgoal):\n 1. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "from \\<open>partition_on (insert a A) P\\<close> p_def"], ["proof (chain)\npicking this:\n  partition_on (insert a A) P\n  p \\<in> P\n  a \\<in> p", "have a_notmem: \"\\<forall>p'\\<in> P - {p}. a \\<notin> p'\""], ["proof (prove)\nusing this:\n  partition_on (insert a A) P\n  p \\<in> P\n  a \\<in> p\n\ngoal (1 subgoal):\n 1. \\<forall>p'\\<in>P - {p}. a \\<notin> p'", "by (blast elim: partition_onE)"], ["proof (state)\nthis:\n  \\<forall>p'\\<in>P - {p}. a \\<notin> p'\n\ngoal (1 subgoal):\n 1. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "from \\<open>partition_on (insert a A) P\\<close> p_def"], ["proof (chain)\npicking this:\n  partition_on (insert a A) P\n  p \\<in> P\n  a \\<in> p", "have \"p - {a} \\<notin> P\""], ["proof (prove)\nusing this:\n  partition_on (insert a A) P\n  p \\<in> P\n  a \\<in> p\n\ngoal (1 subgoal):\n 1. p - {a} \\<notin> P", "unfolding partition_on_def disjoint_def"], ["proof (prove)\nusing this:\n  \\<Union> P = insert a A \\<and>\n  (\\<forall>a\\<in>P.\n      \\<forall>b\\<in>P.\n         a \\<noteq> b \\<longrightarrow> a \\<inter> b = {}) \\<and>\n  {} \\<notin> P\n  p \\<in> P\n  a \\<in> p\n\ngoal (1 subgoal):\n 1. p - {a} \\<notin> P", "by (metis Diff_insert_absorb Diff_subset inf.orderE mk_disjoint_insert)"], ["proof (state)\nthis:\n  p - {a} \\<notin> P\n\ngoal (1 subgoal):\n 1. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "let ?P' = \"insert (p - {a}) (P - {p})\""], ["proof (state)\ngoal (1 subgoal):\n 1. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "have \"partition_on A ?P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on A (insert (p - {a}) (P - {p}))", "proof (rule partition_onI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>pa.\n       pa \\<in> insert (p - {a}) (P - {p}) \\<Longrightarrow> pa \\<noteq> {}\n 2. \\<Union> (insert (p - {a}) (P - {p})) = A\n 3. \\<And>pa p'.\n       \\<lbrakk>pa \\<in> insert (p - {a}) (P - {p});\n        p' \\<in> insert (p - {a}) (P - {p}); pa \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> pa \\<inter> p' = {}", "from \\<open>partition_on (insert a A) P\\<close>"], ["proof (chain)\npicking this:\n  partition_on (insert a A) P", "have \"\\<forall>p\\<in>P. p \\<noteq> {}\""], ["proof (prove)\nusing this:\n  partition_on (insert a A) P\n\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>P. p \\<noteq> {}", "by (auto elim: partition_onE)"], ["proof (state)\nthis:\n  \\<forall>p\\<in>P. p \\<noteq> {}\n\ngoal (3 subgoals):\n 1. \\<And>pa.\n       pa \\<in> insert (p - {a}) (P - {p}) \\<Longrightarrow> pa \\<noteq> {}\n 2. \\<Union> (insert (p - {a}) (P - {p})) = A\n 3. \\<And>pa p'.\n       \\<lbrakk>pa \\<in> insert (p - {a}) (P - {p});\n        p' \\<in> insert (p - {a}) (P - {p}); pa \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> pa \\<inter> p' = {}", "from this p_def \\<open>{a} \\<notin> P\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>p\\<in>P. p \\<noteq> {}\n  p \\<in> P\n  a \\<in> p\n  {a} \\<notin> P", "show \"\\<And>p'. p'\\<in>insert (p - {a}) (P - {p}) \\<Longrightarrow> p' \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<forall>p\\<in>P. p \\<noteq> {}\n  p \\<in> P\n  a \\<in> p\n  {a} \\<notin> P\n\ngoal (1 subgoal):\n 1. \\<And>p'.\n       p' \\<in> insert (p - {a}) (P - {p}) \\<Longrightarrow> p' \\<noteq> {}", "by (simp; metis (no_types) Diff_eq_empty_iff subset_singletonD)"], ["proof (state)\nthis:\n  ?p' \\<in> insert (p - {a}) (P - {p}) \\<Longrightarrow> ?p' \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<Union> (insert (p - {a}) (P - {p})) = A\n 2. \\<And>pa p'.\n       \\<lbrakk>pa \\<in> insert (p - {a}) (P - {p});\n        p' \\<in> insert (p - {a}) (P - {p}); pa \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> pa \\<inter> p' = {}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Union> (insert (p - {a}) (P - {p})) = A\n 2. \\<And>pa p'.\n       \\<lbrakk>pa \\<in> insert (p - {a}) (P - {p});\n        p' \\<in> insert (p - {a}) (P - {p}); pa \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> pa \\<inter> p' = {}", "from \\<open>partition_on (insert a A) P\\<close>"], ["proof (chain)\npicking this:\n  partition_on (insert a A) P", "have \"\\<Union>P = insert a A\""], ["proof (prove)\nusing this:\n  partition_on (insert a A) P\n\ngoal (1 subgoal):\n 1. \\<Union> P = insert a A", "by (auto elim: partition_onE)"], ["proof (state)\nthis:\n  \\<Union> P = insert a A\n\ngoal (2 subgoals):\n 1. \\<Union> (insert (p - {a}) (P - {p})) = A\n 2. \\<And>pa p'.\n       \\<lbrakk>pa \\<in> insert (p - {a}) (P - {p});\n        p' \\<in> insert (p - {a}) (P - {p}); pa \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> pa \\<inter> p' = {}", "from p_def this \\<open>a \\<notin> A\\<close> a_notmem"], ["proof (chain)\npicking this:\n  p \\<in> P\n  a \\<in> p\n  \\<Union> P = insert a A\n  a \\<notin> A\n  \\<forall>p'\\<in>P - {p}. a \\<notin> p'", "show \"\\<Union>(insert (p - {a}) (P - {p})) = A\""], ["proof (prove)\nusing this:\n  p \\<in> P\n  a \\<in> p\n  \\<Union> P = insert a A\n  a \\<notin> A\n  \\<forall>p'\\<in>P - {p}. a \\<notin> p'\n\ngoal (1 subgoal):\n 1. \\<Union> (insert (p - {a}) (P - {p})) = A", "by auto"], ["proof (state)\nthis:\n  \\<Union> (insert (p - {a}) (P - {p})) = A\n\ngoal (1 subgoal):\n 1. \\<And>pa p'.\n       \\<lbrakk>pa \\<in> insert (p - {a}) (P - {p});\n        p' \\<in> insert (p - {a}) (P - {p}); pa \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> pa \\<inter> p' = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pa p'.\n       \\<lbrakk>pa \\<in> insert (p - {a}) (P - {p});\n        p' \\<in> insert (p - {a}) (P - {p}); pa \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> pa \\<inter> p' = {}", "show \"\\<And>pa pa'. pa\\<in>insert (p - {a}) (P - {p}) \\<Longrightarrow> pa'\\<in>insert (p - {a}) (P - {p}) \\<Longrightarrow> pa \\<noteq> pa' \\<Longrightarrow> pa \\<inter> pa' = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pa pa'.\n       \\<lbrakk>pa \\<in> insert (p - {a}) (P - {p});\n        pa' \\<in> insert (p - {a}) (P - {p}); pa \\<noteq> pa'\\<rbrakk>\n       \\<Longrightarrow> pa \\<inter> pa' = {}", "using \\<open>partition_on (insert a A) P\\<close> p_def a_notmem"], ["proof (prove)\nusing this:\n  partition_on (insert a A) P\n  p \\<in> P\n  a \\<in> p\n  \\<forall>p'\\<in>P - {p}. a \\<notin> p'\n\ngoal (1 subgoal):\n 1. \\<And>pa pa'.\n       \\<lbrakk>pa \\<in> insert (p - {a}) (P - {p});\n        pa' \\<in> insert (p - {a}) (P - {p}); pa \\<noteq> pa'\\<rbrakk>\n       \\<Longrightarrow> pa \\<inter> pa' = {}", "unfolding partition_on_def disjoint_def"], ["proof (prove)\nusing this:\n  \\<Union> P = insert a A \\<and>\n  (\\<forall>a\\<in>P.\n      \\<forall>b\\<in>P.\n         a \\<noteq> b \\<longrightarrow> a \\<inter> b = {}) \\<and>\n  {} \\<notin> P\n  p \\<in> P\n  a \\<in> p\n  \\<forall>p'\\<in>P - {p}. a \\<notin> p'\n\ngoal (1 subgoal):\n 1. \\<And>pa pa'.\n       \\<lbrakk>pa \\<in> insert (p - {a}) (P - {p});\n        pa' \\<in> insert (p - {a}) (P - {p}); pa \\<noteq> pa'\\<rbrakk>\n       \\<Longrightarrow> pa \\<inter> pa' = {}", "by (metis disjoint_iff_not_equal insert_Diff insert_iff)"], ["proof (state)\nthis:\n  \\<lbrakk>?pa \\<in> insert (p - {a}) (P - {p});\n   ?pa' \\<in> insert (p - {a}) (P - {p}); ?pa \\<noteq> ?pa'\\<rbrakk>\n  \\<Longrightarrow> ?pa \\<inter> ?pa' = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  partition_on A (insert (p - {a}) (P - {p}))\n\ngoal (1 subgoal):\n 1. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "have \"finite P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite P", "using \\<open>finite A\\<close> \\<open>partition_on A ?P'\\<close> finite_elements"], ["proof (prove)\nusing this:\n  finite A\n  partition_on A (insert (p - {a}) (P - {p}))\n  \\<lbrakk>finite ?A; partition_on ?A ?P\\<rbrakk>\n  \\<Longrightarrow> finite ?P\n\ngoal (1 subgoal):\n 1. finite P", "by fastforce"], ["proof (state)\nthis:\n  finite P\n\ngoal (1 subgoal):\n 1. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "have \"card P = Suc (card (P - {p}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card P = Suc (card (P - {p}))", "using p_def \\<open>finite P\\<close> card.remove"], ["proof (prove)\nusing this:\n  p \\<in> P\n  a \\<in> p\n  finite P\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> card ?A = Suc (card (?A - {?x}))\n\ngoal (1 subgoal):\n 1. card P = Suc (card (P - {p}))", "by fastforce"], ["proof (state)\nthis:\n  card P = Suc (card (P - {p}))\n\ngoal (1 subgoal):\n 1. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "also"], ["proof (state)\nthis:\n  card P = Suc (card (P - {p}))\n\ngoal (1 subgoal):\n 1. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "have \"\\<dots> = card ?P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (card (P - {p})) = card (insert (p - {a}) (P - {p}))", "using \\<open>p - {a} \\<notin> P\\<close> \\<open>finite P\\<close>"], ["proof (prove)\nusing this:\n  p - {a} \\<notin> P\n  finite P\n\ngoal (1 subgoal):\n 1. Suc (card (P - {p})) = card (insert (p - {a}) (P - {p}))", "by simp"], ["proof (state)\nthis:\n  Suc (card (P - {p})) = card (insert (p - {a}) (P - {p}))\n\ngoal (1 subgoal):\n 1. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "also"], ["proof (state)\nthis:\n  Suc (card (P - {p})) = card (insert (p - {a}) (P - {p}))\n\ngoal (1 subgoal):\n 1. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "have \"\\<dots> \\<le> card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (insert (p - {a}) (P - {p})) \\<le> card A", "using \\<open>partition_on A ?P'\\<close> insert.hyps(3)"], ["proof (prove)\nusing this:\n  partition_on A (insert (p - {a}) (P - {p}))\n  partition_on A ?P \\<Longrightarrow> card ?P \\<le> card A\n\ngoal (1 subgoal):\n 1. card (insert (p - {a}) (P - {p})) \\<le> card A", "by simp"], ["proof (state)\nthis:\n  card (insert (p - {a}) (P - {p})) \\<le> card A\n\ngoal (1 subgoal):\n 1. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "also"], ["proof (state)\nthis:\n  card (insert (p - {a}) (P - {p})) \\<le> card A\n\ngoal (1 subgoal):\n 1. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "have \"\\<dots> \\<le> card (insert a A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card A \\<le> card (insert a A)", "by (simp add: card_insert_le \\<open>finite A\\<close> )"], ["proof (state)\nthis:\n  card A \\<le> card (insert a A)\n\ngoal (1 subgoal):\n 1. {a} \\<notin> P \\<Longrightarrow> card P \\<le> card (insert a A)", "finally"], ["proof (chain)\npicking this:\n  card P \\<le> card (insert a A)", "show ?thesis"], ["proof (prove)\nusing this:\n  card P \\<le> card (insert a A)\n\ngoal (1 subgoal):\n 1. card P \\<le> card (insert a A)", "."], ["proof (state)\nthis:\n  card P \\<le> card (insert a A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card P \\<le> card (insert a A)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Operations on Set Partitions\\<close>"], ["", "lemma partition_on_union:\n  assumes \"A \\<inter> B = {}\"\n  assumes \"partition_on A P\"\n  assumes \"partition_on B Q\"\n  shows \"partition_on (A \\<union> B) (P \\<union> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on (A \\<union> B) (P \\<union> Q)", "proof (rule partition_onI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p. p \\<in> P \\<union> Q \\<Longrightarrow> p \\<noteq> {}\n 2. \\<Union> (P \\<union> Q) = A \\<union> B\n 3. \\<And>p p'.\n       \\<lbrakk>p \\<in> P \\<union> Q; p' \\<in> P \\<union> Q;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "fix X"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p. p \\<in> P \\<union> Q \\<Longrightarrow> p \\<noteq> {}\n 2. \\<Union> (P \\<union> Q) = A \\<union> B\n 3. \\<And>p p'.\n       \\<lbrakk>p \\<in> P \\<union> Q; p' \\<in> P \\<union> Q;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "assume \"X \\<in> P \\<union> Q\""], ["proof (state)\nthis:\n  X \\<in> P \\<union> Q\n\ngoal (3 subgoals):\n 1. \\<And>p. p \\<in> P \\<union> Q \\<Longrightarrow> p \\<noteq> {}\n 2. \\<Union> (P \\<union> Q) = A \\<union> B\n 3. \\<And>p p'.\n       \\<lbrakk>p \\<in> P \\<union> Q; p' \\<in> P \\<union> Q;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "from this \\<open>partition_on A P\\<close> \\<open>partition_on B Q\\<close>"], ["proof (chain)\npicking this:\n  X \\<in> P \\<union> Q\n  partition_on A P\n  partition_on B Q", "show \"X \\<noteq> {}\""], ["proof (prove)\nusing this:\n  X \\<in> P \\<union> Q\n  partition_on A P\n  partition_on B Q\n\ngoal (1 subgoal):\n 1. X \\<noteq> {}", "by (auto elim: partition_onE)"], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<Union> (P \\<union> Q) = A \\<union> B\n 2. \\<And>p p'.\n       \\<lbrakk>p \\<in> P \\<union> Q; p' \\<in> P \\<union> Q;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Union> (P \\<union> Q) = A \\<union> B\n 2. \\<And>p p'.\n       \\<lbrakk>p \\<in> P \\<union> Q; p' \\<in> P \\<union> Q;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "show \"\\<Union>(P \\<union> Q) = A \\<union> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (P \\<union> Q) = A \\<union> B", "using \\<open>partition_on A P\\<close> \\<open>partition_on B Q\\<close>"], ["proof (prove)\nusing this:\n  partition_on A P\n  partition_on B Q\n\ngoal (1 subgoal):\n 1. \\<Union> (P \\<union> Q) = A \\<union> B", "by (auto elim: partition_onE)"], ["proof (state)\nthis:\n  \\<Union> (P \\<union> Q) = A \\<union> B\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> P \\<union> Q; p' \\<in> P \\<union> Q;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> P \\<union> Q; p' \\<in> P \\<union> Q;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "fix X Y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> P \\<union> Q; p' \\<in> P \\<union> Q;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "assume \"X \\<in> P \\<union> Q\" \"Y \\<in> P \\<union> Q\" \"X \\<noteq> Y\""], ["proof (state)\nthis:\n  X \\<in> P \\<union> Q\n  Y \\<in> P \\<union> Q\n  X \\<noteq> Y\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> P \\<union> Q; p' \\<in> P \\<union> Q;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "from this assms"], ["proof (chain)\npicking this:\n  X \\<in> P \\<union> Q\n  Y \\<in> P \\<union> Q\n  X \\<noteq> Y\n  A \\<inter> B = {}\n  partition_on A P\n  partition_on B Q", "show \"X \\<inter> Y = {}\""], ["proof (prove)\nusing this:\n  X \\<in> P \\<union> Q\n  Y \\<in> P \\<union> Q\n  X \\<noteq> Y\n  A \\<inter> B = {}\n  partition_on A P\n  partition_on B Q\n\ngoal (1 subgoal):\n 1. X \\<inter> Y = {}", "by (elim UnE partition_onE) auto"], ["proof (state)\nthis:\n  X \\<inter> Y = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partition_on_split1:\n  assumes \"partition_on A (P \\<union> Q)\"\n  shows \"partition_on (\\<Union>P) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on (\\<Union> P) P", "proof (rule partition_onI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p. p \\<in> P \\<Longrightarrow> p \\<noteq> {}\n 2. \\<Union> P = \\<Union> P\n 3. \\<And>p p'.\n       \\<lbrakk>p \\<in> P; p' \\<in> P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "fix p"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p. p \\<in> P \\<Longrightarrow> p \\<noteq> {}\n 2. \\<Union> P = \\<Union> P\n 3. \\<And>p p'.\n       \\<lbrakk>p \\<in> P; p' \\<in> P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "assume \"p \\<in> P\""], ["proof (state)\nthis:\n  p \\<in> P\n\ngoal (3 subgoals):\n 1. \\<And>p. p \\<in> P \\<Longrightarrow> p \\<noteq> {}\n 2. \\<Union> P = \\<Union> P\n 3. \\<And>p p'.\n       \\<lbrakk>p \\<in> P; p' \\<in> P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "from this assms"], ["proof (chain)\npicking this:\n  p \\<in> P\n  partition_on A (P \\<union> Q)", "show \"p \\<noteq> {}\""], ["proof (prove)\nusing this:\n  p \\<in> P\n  partition_on A (P \\<union> Q)\n\ngoal (1 subgoal):\n 1. p \\<noteq> {}", "using Un_iff partition_onE"], ["proof (prove)\nusing this:\n  p \\<in> P\n  partition_on A (P \\<union> Q)\n  (?c \\<in> ?A \\<union> ?B) = (?c \\<in> ?A \\<or> ?c \\<in> ?B)\n  \\<lbrakk>partition_on ?A ?P;\n   \\<lbrakk>\\<And>p. p \\<in> ?P \\<Longrightarrow> p \\<noteq> {};\n    \\<Union> ?P = ?A;\n    \\<And>p p'.\n       \\<lbrakk>p \\<in> ?P; p' \\<in> ?P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. p \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<Union> P = \\<Union> P\n 2. \\<And>p p'.\n       \\<lbrakk>p \\<in> P; p' \\<in> P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Union> P = \\<Union> P\n 2. \\<And>p p'.\n       \\<lbrakk>p \\<in> P; p' \\<in> P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "show \"\\<Union>P = \\<Union>P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> P = \\<Union> P", ".."], ["proof (state)\nthis:\n  \\<Union> P = \\<Union> P\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> P; p' \\<in> P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> P; p' \\<in> P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "fix p p'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> P; p' \\<in> P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "assume a: \"p \\<in> P\" \"p' \\<in> P\" \"p \\<noteq> p'\""], ["proof (state)\nthis:\n  p \\<in> P\n  p' \\<in> P\n  p \\<noteq> p'\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> P; p' \\<in> P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "from this assms"], ["proof (chain)\npicking this:\n  p \\<in> P\n  p' \\<in> P\n  p \\<noteq> p'\n  partition_on A (P \\<union> Q)", "show \"p \\<inter> p' = {}\""], ["proof (prove)\nusing this:\n  p \\<in> P\n  p' \\<in> P\n  p \\<noteq> p'\n  partition_on A (P \\<union> Q)\n\ngoal (1 subgoal):\n 1. p \\<inter> p' = {}", "using partition_onE subsetCE sup_ge1"], ["proof (prove)\nusing this:\n  p \\<in> P\n  p' \\<in> P\n  p \\<noteq> p'\n  partition_on A (P \\<union> Q)\n  \\<lbrakk>partition_on ?A ?P;\n   \\<lbrakk>\\<And>p. p \\<in> ?P \\<Longrightarrow> p \\<noteq> {};\n    \\<Union> ?P = ?A;\n    \\<And>p p'.\n       \\<lbrakk>p \\<in> ?P; p' \\<in> ?P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>?A \\<subseteq> ?B; ?c \\<notin> ?A \\<Longrightarrow> ?P;\n   ?c \\<in> ?B \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  ?x \\<le> sup ?x ?y\n\ngoal (1 subgoal):\n 1. p \\<inter> p' = {}", "by blast"], ["proof (state)\nthis:\n  p \\<inter> p' = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partition_on_split2:\n  assumes \"partition_on A (P \\<union> Q)\"\n  shows \"partition_on (\\<Union>Q) Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on (\\<Union> Q) Q", "using assms partition_on_split1 sup_commute"], ["proof (prove)\nusing this:\n  partition_on A (P \\<union> Q)\n  partition_on ?A (?P \\<union> ?Q) \\<Longrightarrow>\n  partition_on (\\<Union> ?P) ?P\n  sup ?x ?y = sup ?y ?x\n\ngoal (1 subgoal):\n 1. partition_on (\\<Union> Q) Q", "by metis"], ["", "lemma partition_on_intersect_on_elements:\n  assumes \"partition_on (A \\<union> C) P\"\n  assumes \"\\<forall>X \\<in> P. \\<exists>x. x \\<in> X \\<inter> C\"\n  shows \"partition_on C ((\\<lambda>X. X \\<inter> C) ` P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on C ((\\<lambda>X. X \\<inter> C) ` P)", "proof (rule partition_onI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p.\n       p \\<in> (\\<lambda>X. X \\<inter> C) ` P \\<Longrightarrow>\n       p \\<noteq> {}\n 2. (\\<Union>X\\<in>P. X \\<inter> C) = C\n 3. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<inter> C) ` P;\n        p' \\<in> (\\<lambda>X. X \\<inter> C) ` P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "fix p"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p.\n       p \\<in> (\\<lambda>X. X \\<inter> C) ` P \\<Longrightarrow>\n       p \\<noteq> {}\n 2. (\\<Union>X\\<in>P. X \\<inter> C) = C\n 3. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<inter> C) ` P;\n        p' \\<in> (\\<lambda>X. X \\<inter> C) ` P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "assume \"p \\<in> (\\<lambda>X. X \\<inter> C) ` P\""], ["proof (state)\nthis:\n  p \\<in> (\\<lambda>X. X \\<inter> C) ` P\n\ngoal (3 subgoals):\n 1. \\<And>p.\n       p \\<in> (\\<lambda>X. X \\<inter> C) ` P \\<Longrightarrow>\n       p \\<noteq> {}\n 2. (\\<Union>X\\<in>P. X \\<inter> C) = C\n 3. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<inter> C) ` P;\n        p' \\<in> (\\<lambda>X. X \\<inter> C) ` P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "from this assms"], ["proof (chain)\npicking this:\n  p \\<in> (\\<lambda>X. X \\<inter> C) ` P\n  partition_on (A \\<union> C) P\n  \\<forall>X\\<in>P. \\<exists>x. x \\<in> X \\<inter> C", "show \"p \\<noteq> {}\""], ["proof (prove)\nusing this:\n  p \\<in> (\\<lambda>X. X \\<inter> C) ` P\n  partition_on (A \\<union> C) P\n  \\<forall>X\\<in>P. \\<exists>x. x \\<in> X \\<inter> C\n\ngoal (1 subgoal):\n 1. p \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> {}\n\ngoal (2 subgoals):\n 1. (\\<Union>X\\<in>P. X \\<inter> C) = C\n 2. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<inter> C) ` P;\n        p' \\<in> (\\<lambda>X. X \\<inter> C) ` P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<Union>X\\<in>P. X \\<inter> C) = C\n 2. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<inter> C) ` P;\n        p' \\<in> (\\<lambda>X. X \\<inter> C) ` P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "have \"\\<Union>P = A \\<union> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> P = A \\<union> C", "using assms"], ["proof (prove)\nusing this:\n  partition_on (A \\<union> C) P\n  \\<forall>X\\<in>P. \\<exists>x. x \\<in> X \\<inter> C\n\ngoal (1 subgoal):\n 1. \\<Union> P = A \\<union> C", "by (auto elim: partition_onE)"], ["proof (state)\nthis:\n  \\<Union> P = A \\<union> C\n\ngoal (2 subgoals):\n 1. (\\<Union>X\\<in>P. X \\<inter> C) = C\n 2. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<inter> C) ` P;\n        p' \\<in> (\\<lambda>X. X \\<inter> C) ` P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "from this"], ["proof (chain)\npicking this:\n  \\<Union> P = A \\<union> C", "show \"\\<Union>((\\<lambda>X. X \\<inter> C) ` P) = C\""], ["proof (prove)\nusing this:\n  \\<Union> P = A \\<union> C\n\ngoal (1 subgoal):\n 1. (\\<Union>X\\<in>P. X \\<inter> C) = C", "by auto"], ["proof (state)\nthis:\n  (\\<Union>X\\<in>P. X \\<inter> C) = C\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<inter> C) ` P;\n        p' \\<in> (\\<lambda>X. X \\<inter> C) ` P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<inter> C) ` P;\n        p' \\<in> (\\<lambda>X. X \\<inter> C) ` P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "fix p p'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<inter> C) ` P;\n        p' \\<in> (\\<lambda>X. X \\<inter> C) ` P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "assume \"p \\<in> (\\<lambda>X. X \\<inter> C) ` P\" \"p' \\<in> (\\<lambda>X. X \\<inter> C) ` P\" \"p \\<noteq> p'\""], ["proof (state)\nthis:\n  p \\<in> (\\<lambda>X. X \\<inter> C) ` P\n  p' \\<in> (\\<lambda>X. X \\<inter> C) ` P\n  p \\<noteq> p'\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<inter> C) ` P;\n        p' \\<in> (\\<lambda>X. X \\<inter> C) ` P; p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "from this assms(1)"], ["proof (chain)\npicking this:\n  p \\<in> (\\<lambda>X. X \\<inter> C) ` P\n  p' \\<in> (\\<lambda>X. X \\<inter> C) ` P\n  p \\<noteq> p'\n  partition_on (A \\<union> C) P", "show \"p \\<inter> p' = {}\""], ["proof (prove)\nusing this:\n  p \\<in> (\\<lambda>X. X \\<inter> C) ` P\n  p' \\<in> (\\<lambda>X. X \\<inter> C) ` P\n  p \\<noteq> p'\n  partition_on (A \\<union> C) P\n\ngoal (1 subgoal):\n 1. p \\<inter> p' = {}", "by (blast elim: partition_onE)"], ["proof (state)\nthis:\n  p \\<inter> p' = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partition_on_insert_elements:\n  assumes \"A \\<inter> B = {}\"\n  assumes \"partition_on B P\"\n  assumes \"f \\<in> A \\<rightarrow>\\<^sub>E P\"\n  shows \"partition_on (A \\<union> B) ((\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P)\" (is \"partition_on _ ?P\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on (A \\<union> B)\n     ((\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P)", "proof (rule partition_onI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p.\n       p \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) `\n               P \\<Longrightarrow>\n       p \\<noteq> {}\n 2. (\\<Union>X\\<in>P. X \\<union> {x \\<in> A. f x = X}) = A \\<union> B\n 3. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p' \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "fix X"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p.\n       p \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) `\n               P \\<Longrightarrow>\n       p \\<noteq> {}\n 2. (\\<Union>X\\<in>P. X \\<union> {x \\<in> A. f x = X}) = A \\<union> B\n 3. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p' \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "assume \"X \\<in> ?P\""], ["proof (state)\nthis:\n  X \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P\n\ngoal (3 subgoals):\n 1. \\<And>p.\n       p \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) `\n               P \\<Longrightarrow>\n       p \\<noteq> {}\n 2. (\\<Union>X\\<in>P. X \\<union> {x \\<in> A. f x = X}) = A \\<union> B\n 3. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p' \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "from this \\<open>partition_on B P\\<close>"], ["proof (chain)\npicking this:\n  X \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P\n  partition_on B P", "show \"X \\<noteq> {}\""], ["proof (prove)\nusing this:\n  X \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P\n  partition_on B P\n\ngoal (1 subgoal):\n 1. X \\<noteq> {}", "by (auto elim: partition_onE)"], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (2 subgoals):\n 1. (\\<Union>X\\<in>P. X \\<union> {x \\<in> A. f x = X}) = A \\<union> B\n 2. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p' \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<Union>X\\<in>P. X \\<union> {x \\<in> A. f x = X}) = A \\<union> B\n 2. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p' \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "show \"\\<Union>?P = A \\<union> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>X\\<in>P. X \\<union> {x \\<in> A. f x = X}) = A \\<union> B", "using \\<open>partition_on B P\\<close> \\<open>f \\<in> A \\<rightarrow>\\<^sub>E P\\<close>"], ["proof (prove)\nusing this:\n  partition_on B P\n  f \\<in> A \\<rightarrow>\\<^sub>E P\n\ngoal (1 subgoal):\n 1. (\\<Union>X\\<in>P. X \\<union> {x \\<in> A. f x = X}) = A \\<union> B", "by (auto elim: partition_onE)"], ["proof (state)\nthis:\n  (\\<Union>X\\<in>P. X \\<union> {x \\<in> A. f x = X}) = A \\<union> B\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p' \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p' \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "fix X Y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p' \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "assume \"X \\<in> ?P\" \"Y \\<in> ?P\" \"X \\<noteq> Y\""], ["proof (state)\nthis:\n  X \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P\n  Y \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P\n  X \\<noteq> Y\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p' \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "from \\<open>X \\<in> ?P\\<close>"], ["proof (chain)\npicking this:\n  X \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P", "obtain X' where X': \"X = X' \\<union> {x \\<in> A. f x = X'}\" \"X' \\<in> P\""], ["proof (prove)\nusing this:\n  X \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P\n\ngoal (1 subgoal):\n 1. (\\<And>X'.\n        \\<lbrakk>X = X' \\<union> {x \\<in> A. f x = X'}; X' \\<in> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  X = X' \\<union> {x \\<in> A. f x = X'}\n  X' \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p' \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "from \\<open>Y \\<in> ?P\\<close>"], ["proof (chain)\npicking this:\n  Y \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P", "obtain Y' where Y': \"Y = Y' \\<union> {x \\<in> A. f x = Y'}\" \"Y' \\<in> P\""], ["proof (prove)\nusing this:\n  Y \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P\n\ngoal (1 subgoal):\n 1. (\\<And>Y'.\n        \\<lbrakk>Y = Y' \\<union> {x \\<in> A. f x = Y'}; Y' \\<in> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Y = Y' \\<union> {x \\<in> A. f x = Y'}\n  Y' \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p' \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "from \\<open>X \\<noteq> Y\\<close> X' Y'"], ["proof (chain)\npicking this:\n  X \\<noteq> Y\n  X = X' \\<union> {x \\<in> A. f x = X'}\n  X' \\<in> P\n  Y = Y' \\<union> {x \\<in> A. f x = Y'}\n  Y' \\<in> P", "have \"X' \\<noteq> Y'\""], ["proof (prove)\nusing this:\n  X \\<noteq> Y\n  X = X' \\<union> {x \\<in> A. f x = X'}\n  X' \\<in> P\n  Y = Y' \\<union> {x \\<in> A. f x = Y'}\n  Y' \\<in> P\n\ngoal (1 subgoal):\n 1. X' \\<noteq> Y'", "by auto"], ["proof (state)\nthis:\n  X' \\<noteq> Y'\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p' \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "from this X' Y'"], ["proof (chain)\npicking this:\n  X' \\<noteq> Y'\n  X = X' \\<union> {x \\<in> A. f x = X'}\n  X' \\<in> P\n  Y = Y' \\<union> {x \\<in> A. f x = Y'}\n  Y' \\<in> P", "have \"X' \\<inter> Y' = {}\""], ["proof (prove)\nusing this:\n  X' \\<noteq> Y'\n  X = X' \\<union> {x \\<in> A. f x = X'}\n  X' \\<in> P\n  Y = Y' \\<union> {x \\<in> A. f x = Y'}\n  Y' \\<in> P\n\ngoal (1 subgoal):\n 1. X' \\<inter> Y' = {}", "using \\<open>partition_on B P\\<close>"], ["proof (prove)\nusing this:\n  X' \\<noteq> Y'\n  X = X' \\<union> {x \\<in> A. f x = X'}\n  X' \\<in> P\n  Y = Y' \\<union> {x \\<in> A. f x = Y'}\n  Y' \\<in> P\n  partition_on B P\n\ngoal (1 subgoal):\n 1. X' \\<inter> Y' = {}", "by (auto elim!: partition_onE)"], ["proof (state)\nthis:\n  X' \\<inter> Y' = {}\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p' \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "from X' Y'"], ["proof (chain)\npicking this:\n  X = X' \\<union> {x \\<in> A. f x = X'}\n  X' \\<in> P\n  Y = Y' \\<union> {x \\<in> A. f x = Y'}\n  Y' \\<in> P", "have \"X' \\<subseteq> B\" \"Y' \\<subseteq> B\""], ["proof (prove)\nusing this:\n  X = X' \\<union> {x \\<in> A. f x = X'}\n  X' \\<in> P\n  Y = Y' \\<union> {x \\<in> A. f x = Y'}\n  Y' \\<in> P\n\ngoal (1 subgoal):\n 1. X' \\<subseteq> B &&& Y' \\<subseteq> B", "using \\<open>partition_on B P\\<close>"], ["proof (prove)\nusing this:\n  X = X' \\<union> {x \\<in> A. f x = X'}\n  X' \\<in> P\n  Y = Y' \\<union> {x \\<in> A. f x = Y'}\n  Y' \\<in> P\n  partition_on B P\n\ngoal (1 subgoal):\n 1. X' \\<subseteq> B &&& Y' \\<subseteq> B", "by (auto elim!: partition_onE)"], ["proof (state)\nthis:\n  X' \\<subseteq> B\n  Y' \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p' \\<in> (\\<lambda>X. X \\<union> {x \\<in> A. f x = X}) ` P;\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "from this \\<open>X' \\<inter> Y' = {}\\<close> X' Y' \\<open>X' \\<noteq> Y'\\<close>"], ["proof (chain)\npicking this:\n  X' \\<subseteq> B\n  Y' \\<subseteq> B\n  X' \\<inter> Y' = {}\n  X = X' \\<union> {x \\<in> A. f x = X'}\n  X' \\<in> P\n  Y = Y' \\<union> {x \\<in> A. f x = Y'}\n  Y' \\<in> P\n  X' \\<noteq> Y'", "show \"X \\<inter> Y = {}\""], ["proof (prove)\nusing this:\n  X' \\<subseteq> B\n  Y' \\<subseteq> B\n  X' \\<inter> Y' = {}\n  X = X' \\<union> {x \\<in> A. f x = X'}\n  X' \\<in> P\n  Y = Y' \\<union> {x \\<in> A. f x = Y'}\n  Y' \\<in> P\n  X' \\<noteq> Y'\n\ngoal (1 subgoal):\n 1. X \\<inter> Y = {}", "using \\<open>A \\<inter> B = {}\\<close>"], ["proof (prove)\nusing this:\n  X' \\<subseteq> B\n  Y' \\<subseteq> B\n  X' \\<inter> Y' = {}\n  X = X' \\<union> {x \\<in> A. f x = X'}\n  X' \\<in> P\n  Y = Y' \\<union> {x \\<in> A. f x = Y'}\n  Y' \\<in> P\n  X' \\<noteq> Y'\n  A \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. X \\<inter> Y = {}", "by auto"], ["proof (state)\nthis:\n  X \\<inter> Y = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partition_on_map:\n  assumes \"inj_on f A\"\n  assumes \"partition_on A P\"\n  shows \"partition_on (f ` A) ((`) f ` P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on (f ` A) ((`) f ` P)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. partition_on (f ` A) ((`) f ` P)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. partition_on (f ` A) ((`) f ` P)", "fix X Y"], ["proof (state)\ngoal (1 subgoal):\n 1. partition_on (f ` A) ((`) f ` P)", "assume \"X \\<in> P\" \"Y \\<in> P\" \"f ` X \\<noteq> f ` Y\""], ["proof (state)\nthis:\n  X \\<in> P\n  Y \\<in> P\n  f ` X \\<noteq> f ` Y\n\ngoal (1 subgoal):\n 1. partition_on (f ` A) ((`) f ` P)", "moreover"], ["proof (state)\nthis:\n  X \\<in> P\n  Y \\<in> P\n  f ` X \\<noteq> f ` Y\n\ngoal (1 subgoal):\n 1. partition_on (f ` A) ((`) f ` P)", "from assms"], ["proof (chain)\npicking this:\n  inj_on f A\n  partition_on A P", "have \"\\<forall>p\\<in>P. \\<forall>p'\\<in>P. p \\<noteq> p' \\<longrightarrow> p \\<inter> p' = {}\" and \"inj_on f (\\<Union>P)\""], ["proof (prove)\nusing this:\n  inj_on f A\n  partition_on A P\n\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>P.\n       \\<forall>p'\\<in>P.\n          p \\<noteq> p' \\<longrightarrow> p \\<inter> p' = {} &&&\n    inj_on f (\\<Union> P)", "by (auto elim!: partition_onE)"], ["proof (state)\nthis:\n  \\<forall>p\\<in>P.\n     \\<forall>p'\\<in>P. p \\<noteq> p' \\<longrightarrow> p \\<inter> p' = {}\n  inj_on f (\\<Union> P)\n\ngoal (1 subgoal):\n 1. partition_on (f ` A) ((`) f ` P)", "ultimately"], ["proof (chain)\npicking this:\n  X \\<in> P\n  Y \\<in> P\n  f ` X \\<noteq> f ` Y\n  \\<forall>p\\<in>P.\n     \\<forall>p'\\<in>P. p \\<noteq> p' \\<longrightarrow> p \\<inter> p' = {}\n  inj_on f (\\<Union> P)", "have \"f ` X \\<inter> f ` Y = {}\""], ["proof (prove)\nusing this:\n  X \\<in> P\n  Y \\<in> P\n  f ` X \\<noteq> f ` Y\n  \\<forall>p\\<in>P.\n     \\<forall>p'\\<in>P. p \\<noteq> p' \\<longrightarrow> p \\<inter> p' = {}\n  inj_on f (\\<Union> P)\n\ngoal (1 subgoal):\n 1. f ` X \\<inter> f ` Y = {}", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  X \\<in> P\n  Y \\<in> P\n  f ` X \\<noteq> f ` Y\n  \\<forall>p\\<in>P.\n     \\<forall>p'\\<in>P. p \\<noteq> p' \\<longrightarrow> p \\<inter> p' = {}\n  \\<forall>x\\<in>\\<Union> P.\n     \\<forall>y\\<in>\\<Union> P. f x = f y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. f ` X \\<inter> f ` Y = {}", "by auto (metis IntI empty_iff rev_image_eqI)+"], ["proof (state)\nthis:\n  f ` X \\<inter> f ` Y = {}\n\ngoal (1 subgoal):\n 1. partition_on (f ` A) ((`) f ` P)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?X2 \\<in> P; ?Y2 \\<in> P; f ` ?X2 \\<noteq> f ` ?Y2\\<rbrakk>\n  \\<Longrightarrow> f ` ?X2 \\<inter> f ` ?Y2 = {}\n\ngoal (1 subgoal):\n 1. partition_on (f ` A) ((`) f ` P)", "from assms this"], ["proof (chain)\npicking this:\n  inj_on f A\n  partition_on A P\n  \\<lbrakk>?X2 \\<in> P; ?Y2 \\<in> P; f ` ?X2 \\<noteq> f ` ?Y2\\<rbrakk>\n  \\<Longrightarrow> f ` ?X2 \\<inter> f ` ?Y2 = {}", "show \"partition_on (f ` A) ((`) f ` P)\""], ["proof (prove)\nusing this:\n  inj_on f A\n  partition_on A P\n  \\<lbrakk>?X2 \\<in> P; ?Y2 \\<in> P; f ` ?X2 \\<noteq> f ` ?Y2\\<rbrakk>\n  \\<Longrightarrow> f ` ?X2 \\<inter> f ` ?Y2 = {}\n\ngoal (1 subgoal):\n 1. partition_on (f ` A) ((`) f ` P)", "by (auto intro!: partition_onI elim!: partition_onE)"], ["proof (state)\nthis:\n  partition_on (f ` A) ((`) f ` P)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma set_of_partition_on_map:\n  assumes \"inj_on f A\"\n  shows \"(`) ((`) f) ` {P. partition_on A P} = {P. partition_on (f ` A) P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (`) ((`) f) ` {P. partition_on A P} = {P. partition_on (f ` A) P}", "proof (rule set_eqI')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (`) ((`) f) ` {P. partition_on A P} \\<Longrightarrow>\n       x \\<in> {P. partition_on (f ` A) P}\n 2. \\<And>x.\n       x \\<in> {P. partition_on (f ` A) P} \\<Longrightarrow>\n       x \\<in> (`) ((`) f) ` {P. partition_on A P}", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (`) ((`) f) ` {P. partition_on A P} \\<Longrightarrow>\n       x \\<in> {P. partition_on (f ` A) P}\n 2. \\<And>x.\n       x \\<in> {P. partition_on (f ` A) P} \\<Longrightarrow>\n       x \\<in> (`) ((`) f) ` {P. partition_on A P}", "assume \"x \\<in> (`) ((`) f) ` {P. partition_on A P}\""], ["proof (state)\nthis:\n  x \\<in> (`) ((`) f) ` {P. partition_on A P}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (`) ((`) f) ` {P. partition_on A P} \\<Longrightarrow>\n       x \\<in> {P. partition_on (f ` A) P}\n 2. \\<And>x.\n       x \\<in> {P. partition_on (f ` A) P} \\<Longrightarrow>\n       x \\<in> (`) ((`) f) ` {P. partition_on A P}", "from this \\<open>inj_on f A\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> (`) ((`) f) ` {P. partition_on A P}\n  inj_on f A", "show \"x \\<in> {P. partition_on (f ` A) P}\""], ["proof (prove)\nusing this:\n  x \\<in> (`) ((`) f) ` {P. partition_on A P}\n  inj_on f A\n\ngoal (1 subgoal):\n 1. x \\<in> {P. partition_on (f ` A) P}", "by (auto intro: partition_on_map)"], ["proof (state)\nthis:\n  x \\<in> {P. partition_on (f ` A) P}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {P. partition_on (f ` A) P} \\<Longrightarrow>\n       x \\<in> (`) ((`) f) ` {P. partition_on A P}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {P. partition_on (f ` A) P} \\<Longrightarrow>\n       x \\<in> (`) ((`) f) ` {P. partition_on A P}", "fix P"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {P. partition_on (f ` A) P} \\<Longrightarrow>\n       x \\<in> (`) ((`) f) ` {P. partition_on A P}", "assume \"P \\<in> {P. partition_on (f ` A) P}\""], ["proof (state)\nthis:\n  P \\<in> {P. partition_on (f ` A) P}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {P. partition_on (f ` A) P} \\<Longrightarrow>\n       x \\<in> (`) ((`) f) ` {P. partition_on A P}", "from this"], ["proof (chain)\npicking this:\n  P \\<in> {P. partition_on (f ` A) P}", "have \"partition_on (f ` A) P\""], ["proof (prove)\nusing this:\n  P \\<in> {P. partition_on (f ` A) P}\n\ngoal (1 subgoal):\n 1. partition_on (f ` A) P", "by auto"], ["proof (state)\nthis:\n  partition_on (f ` A) P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {P. partition_on (f ` A) P} \\<Longrightarrow>\n       x \\<in> (`) ((`) f) ` {P. partition_on A P}", "from this"], ["proof (chain)\npicking this:\n  partition_on (f ` A) P", "have mem: \"\\<And>X x. X \\<in> P \\<Longrightarrow> x \\<in> X \\<Longrightarrow> x \\<in> f ` A\""], ["proof (prove)\nusing this:\n  partition_on (f ` A) P\n\ngoal (1 subgoal):\n 1. \\<And>X x.\n       \\<lbrakk>X \\<in> P; x \\<in> X\\<rbrakk>\n       \\<Longrightarrow> x \\<in> f ` A", "by (auto elim!: partition_onE)"], ["proof (state)\nthis:\n  \\<lbrakk>?X \\<in> P; ?x \\<in> ?X\\<rbrakk> \\<Longrightarrow> ?x \\<in> f ` A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {P. partition_on (f ` A) P} \\<Longrightarrow>\n       x \\<in> (`) ((`) f) ` {P. partition_on A P}", "have \"(`) (f \\<circ> the_inv_into A f) ` P = (`) f ` (`) (the_inv_into A f) ` P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (`) (f \\<circ> the_inv_into A f) ` P =\n    (`) f ` (`) (the_inv_into A f) ` P", "by (simp add: image_image cong: image_cong_simp)"], ["proof (state)\nthis:\n  (`) (f \\<circ> the_inv_into A f) ` P = (`) f ` (`) (the_inv_into A f) ` P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {P. partition_on (f ` A) P} \\<Longrightarrow>\n       x \\<in> (`) ((`) f) ` {P. partition_on A P}", "moreover"], ["proof (state)\nthis:\n  (`) (f \\<circ> the_inv_into A f) ` P = (`) f ` (`) (the_inv_into A f) ` P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {P. partition_on (f ` A) P} \\<Longrightarrow>\n       x \\<in> (`) ((`) f) ` {P. partition_on A P}", "have \"P = (`) (f \\<circ> the_inv_into A f) ` P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P = (`) (f \\<circ> the_inv_into A f) ` P", "proof (rule set_eqI')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P\n 2. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "fix X"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P\n 2. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "assume X: \"X \\<in> P\""], ["proof (state)\nthis:\n  X \\<in> P\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P\n 2. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "moreover"], ["proof (state)\nthis:\n  X \\<in> P\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P\n 2. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "from X mem"], ["proof (chain)\npicking this:\n  X \\<in> P\n  \\<lbrakk>?X \\<in> P; ?x \\<in> ?X\\<rbrakk> \\<Longrightarrow> ?x \\<in> f ` A", "have in_range: \"\\<forall>x\\<in>X. x \\<in> f ` A\""], ["proof (prove)\nusing this:\n  X \\<in> P\n  \\<lbrakk>?X \\<in> P; ?x \\<in> ?X\\<rbrakk> \\<Longrightarrow> ?x \\<in> f ` A\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>X. x \\<in> f ` A", "by auto"], ["proof (state)\nthis:\n  \\<forall>x\\<in>X. x \\<in> f ` A\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P\n 2. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "moreover"], ["proof (state)\nthis:\n  \\<forall>x\\<in>X. x \\<in> f ` A\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P\n 2. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "have \"X = (f \\<circ> the_inv_into A f) ` X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X = (f \\<circ> the_inv_into A f) ` X", "proof (rule set_eqI')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> X \\<Longrightarrow> x \\<in> (f \\<circ> the_inv_into A f) ` X\n 2. \\<And>x.\n       x \\<in> (f \\<circ> the_inv_into A f) ` X \\<Longrightarrow> x \\<in> X", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> X \\<Longrightarrow> x \\<in> (f \\<circ> the_inv_into A f) ` X\n 2. \\<And>x.\n       x \\<in> (f \\<circ> the_inv_into A f) ` X \\<Longrightarrow> x \\<in> X", "assume \"x \\<in> X\""], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> X \\<Longrightarrow> x \\<in> (f \\<circ> the_inv_into A f) ` X\n 2. \\<And>x.\n       x \\<in> (f \\<circ> the_inv_into A f) ` X \\<Longrightarrow> x \\<in> X", "show \"x \\<in> (f \\<circ> the_inv_into A f) ` X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> (f \\<circ> the_inv_into A f) ` X", "proof (rule image_eqI)"], ["proof (state)\ngoal (2 subgoals):\n 1. x = (f \\<circ> the_inv_into A f) ?x\n 2. ?x \\<in> X", "from in_range \\<open>x \\<in> X\\<close> assms"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>X. x \\<in> f ` A\n  x \\<in> X\n  inj_on f A", "show \"x = (f \\<circ> the_inv_into A f) x\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>X. x \\<in> f ` A\n  x \\<in> X\n  inj_on f A\n\ngoal (1 subgoal):\n 1. x = (f \\<circ> the_inv_into A f) x", "by (auto simp add: f_the_inv_into_f[of f])"], ["proof (state)\nthis:\n  x = (f \\<circ> the_inv_into A f) x\n\ngoal (1 subgoal):\n 1. x \\<in> X", "from \\<open>x \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> X", "show \"x \\<in> X\""], ["proof (prove)\nusing this:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. x \\<in> X", "by assumption"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> (f \\<circ> the_inv_into A f) ` X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (f \\<circ> the_inv_into A f) ` X \\<Longrightarrow> x \\<in> X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (f \\<circ> the_inv_into A f) ` X \\<Longrightarrow> x \\<in> X", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (f \\<circ> the_inv_into A f) ` X \\<Longrightarrow> x \\<in> X", "assume \"x \\<in> (f \\<circ> the_inv_into A f) ` X\""], ["proof (state)\nthis:\n  x \\<in> (f \\<circ> the_inv_into A f) ` X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (f \\<circ> the_inv_into A f) ` X \\<Longrightarrow> x \\<in> X", "from this"], ["proof (chain)\npicking this:\n  x \\<in> (f \\<circ> the_inv_into A f) ` X", "obtain x' where x': \"x' \\<in> X \\<and> x = f (the_inv_into A f x')\""], ["proof (prove)\nusing this:\n  x \\<in> (f \\<circ> the_inv_into A f) ` X\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        x' \\<in> X \\<and> x = f (the_inv_into A f x') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x' \\<in> X \\<and> x = f (the_inv_into A f x')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (f \\<circ> the_inv_into A f) ` X \\<Longrightarrow> x \\<in> X", "from in_range x'"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>X. x \\<in> f ` A\n  x' \\<in> X \\<and> x = f (the_inv_into A f x')", "have f: \"f (the_inv_into A f x') \\<in> X\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>X. x \\<in> f ` A\n  x' \\<in> X \\<and> x = f (the_inv_into A f x')\n\ngoal (1 subgoal):\n 1. f (the_inv_into A f x') \\<in> X", "by (subst f_the_inv_into_f[of f]) (auto intro: \\<open>inj_on f A\\<close>)"], ["proof (state)\nthis:\n  f (the_inv_into A f x') \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (f \\<circ> the_inv_into A f) ` X \\<Longrightarrow> x \\<in> X", "from x' \\<open>X \\<in> P\\<close> f"], ["proof (chain)\npicking this:\n  x' \\<in> X \\<and> x = f (the_inv_into A f x')\n  X \\<in> P\n  f (the_inv_into A f x') \\<in> X", "show \"x \\<in> X\""], ["proof (prove)\nusing this:\n  x' \\<in> X \\<and> x = f (the_inv_into A f x')\n  X \\<in> P\n  f (the_inv_into A f x') \\<in> X\n\ngoal (1 subgoal):\n 1. x \\<in> X", "by auto"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  X = (f \\<circ> the_inv_into A f) ` X\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P\n 2. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "ultimately"], ["proof (chain)\npicking this:\n  X \\<in> P\n  \\<forall>x\\<in>X. x \\<in> f ` A\n  X = (f \\<circ> the_inv_into A f) ` X", "show \"X \\<in> (`) (f \\<circ> the_inv_into A f) ` P\""], ["proof (prove)\nusing this:\n  X \\<in> P\n  \\<forall>x\\<in>X. x \\<in> f ` A\n  X = (f \\<circ> the_inv_into A f) ` X\n\ngoal (1 subgoal):\n 1. X \\<in> (`) (f \\<circ> the_inv_into A f) ` P", "by auto"], ["proof (state)\nthis:\n  X \\<in> (`) (f \\<circ> the_inv_into A f) ` P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "assume \"X \\<in> (`) (f \\<circ> the_inv_into A f) ` P\""], ["proof (state)\nthis:\n  X \\<in> (`) (f \\<circ> the_inv_into A f) ` P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "moreover"], ["proof (state)\nthis:\n  X \\<in> (`) (f \\<circ> the_inv_into A f) ` P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "{"], ["proof (state)\nthis:\n  X \\<in> (`) (f \\<circ> the_inv_into A f) ` P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "fix Y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "assume \"Y \\<in> P\""], ["proof (state)\nthis:\n  Y \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "from this \\<open>inj_on f A\\<close> mem"], ["proof (chain)\npicking this:\n  Y \\<in> P\n  inj_on f A\n  \\<lbrakk>?X \\<in> P; ?x \\<in> ?X\\<rbrakk> \\<Longrightarrow> ?x \\<in> f ` A", "have \"\\<forall>x\\<in>Y. f (the_inv_into A f x) = x\""], ["proof (prove)\nusing this:\n  Y \\<in> P\n  inj_on f A\n  \\<lbrakk>?X \\<in> P; ?x \\<in> ?X\\<rbrakk> \\<Longrightarrow> ?x \\<in> f ` A\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>Y. f (the_inv_into A f x) = x", "by (auto simp add: f_the_inv_into_f)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>Y. f (the_inv_into A f x) = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "from this"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>Y. f (the_inv_into A f x) = x", "have \"(f \\<circ> the_inv_into A f) ` Y = Y\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>Y. f (the_inv_into A f x) = x\n\ngoal (1 subgoal):\n 1. (f \\<circ> the_inv_into A f) ` Y = Y", "by force"], ["proof (state)\nthis:\n  (f \\<circ> the_inv_into A f) ` Y = Y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "}"], ["proof (state)\nthis:\n  ?Y2 \\<in> P \\<Longrightarrow> (f \\<circ> the_inv_into A f) ` ?Y2 = ?Y2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (`) (f \\<circ> the_inv_into A f) ` P \\<Longrightarrow>\n       x \\<in> P", "ultimately"], ["proof (chain)\npicking this:\n  X \\<in> (`) (f \\<circ> the_inv_into A f) ` P\n  ?Y2 \\<in> P \\<Longrightarrow> (f \\<circ> the_inv_into A f) ` ?Y2 = ?Y2", "show \"X \\<in> P\""], ["proof (prove)\nusing this:\n  X \\<in> (`) (f \\<circ> the_inv_into A f) ` P\n  ?Y2 \\<in> P \\<Longrightarrow> (f \\<circ> the_inv_into A f) ` ?Y2 = ?Y2\n\ngoal (1 subgoal):\n 1. X \\<in> P", "by auto"], ["proof (state)\nthis:\n  X \\<in> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P = (`) (f \\<circ> the_inv_into A f) ` P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {P. partition_on (f ` A) P} \\<Longrightarrow>\n       x \\<in> (`) ((`) f) ` {P. partition_on A P}", "ultimately"], ["proof (chain)\npicking this:\n  (`) (f \\<circ> the_inv_into A f) ` P = (`) f ` (`) (the_inv_into A f) ` P\n  P = (`) (f \\<circ> the_inv_into A f) ` P", "have P: \"P = (`) f ` (`) (the_inv_into A f) ` P\""], ["proof (prove)\nusing this:\n  (`) (f \\<circ> the_inv_into A f) ` P = (`) f ` (`) (the_inv_into A f) ` P\n  P = (`) (f \\<circ> the_inv_into A f) ` P\n\ngoal (1 subgoal):\n 1. P = (`) f ` (`) (the_inv_into A f) ` P", "by simp"], ["proof (state)\nthis:\n  P = (`) f ` (`) (the_inv_into A f) ` P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {P. partition_on (f ` A) P} \\<Longrightarrow>\n       x \\<in> (`) ((`) f) ` {P. partition_on A P}", "have A_eq: \"A = the_inv_into A f ` f ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = the_inv_into A f ` f ` A", "by (simp add: assms)"], ["proof (state)\nthis:\n  A = the_inv_into A f ` f ` A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {P. partition_on (f ` A) P} \\<Longrightarrow>\n       x \\<in> (`) ((`) f) ` {P. partition_on A P}", "from \\<open>inj_on f A\\<close>"], ["proof (chain)\npicking this:\n  inj_on f A", "have \"inj_on (the_inv_into A f) (f ` A)\""], ["proof (prove)\nusing this:\n  inj_on f A\n\ngoal (1 subgoal):\n 1. inj_on (the_inv_into A f) (f ` A)", "using \\<open>partition_on (f ` A) P\\<close>"], ["proof (prove)\nusing this:\n  inj_on f A\n  partition_on (f ` A) P\n\ngoal (1 subgoal):\n 1. inj_on (the_inv_into A f) (f ` A)", "by (simp add: inj_on_the_inv_into)"], ["proof (state)\nthis:\n  inj_on (the_inv_into A f) (f ` A)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {P. partition_on (f ` A) P} \\<Longrightarrow>\n       x \\<in> (`) ((`) f) ` {P. partition_on A P}", "from this"], ["proof (chain)\npicking this:\n  inj_on (the_inv_into A f) (f ` A)", "have  \"(`) (the_inv_into A f) ` P \\<in> {P. partition_on A P}\""], ["proof (prove)\nusing this:\n  inj_on (the_inv_into A f) (f ` A)\n\ngoal (1 subgoal):\n 1. (`) (the_inv_into A f) ` P \\<in> {P. partition_on A P}", "using \\<open>partition_on (f ` A) P\\<close>"], ["proof (prove)\nusing this:\n  inj_on (the_inv_into A f) (f ` A)\n  partition_on (f ` A) P\n\ngoal (1 subgoal):\n 1. (`) (the_inv_into A f) ` P \\<in> {P. partition_on A P}", "by (subst A_eq, auto intro!: partition_on_map)"], ["proof (state)\nthis:\n  (`) (the_inv_into A f) ` P \\<in> {P. partition_on A P}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {P. partition_on (f ` A) P} \\<Longrightarrow>\n       x \\<in> (`) ((`) f) ` {P. partition_on A P}", "from P this"], ["proof (chain)\npicking this:\n  P = (`) f ` (`) (the_inv_into A f) ` P\n  (`) (the_inv_into A f) ` P \\<in> {P. partition_on A P}", "show \"P \\<in> (`) ((`) f) ` {P. partition_on A P}\""], ["proof (prove)\nusing this:\n  P = (`) f ` (`) (the_inv_into A f) ` P\n  (`) (the_inv_into A f) ` P \\<in> {P. partition_on A P}\n\ngoal (1 subgoal):\n 1. P \\<in> (`) ((`) f) ` {P. partition_on A P}", "by (rule image_eqI)"], ["proof (state)\nthis:\n  P \\<in> (`) ((`) f) ` {P. partition_on A P}\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}