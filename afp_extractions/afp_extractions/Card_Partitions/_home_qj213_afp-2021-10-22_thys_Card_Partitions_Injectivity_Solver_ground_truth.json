{"file_name": "/home/qj213/afp-2021-10-22/thys/Card_Partitions/Injectivity_Solver.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Card_Partitions", "problem_names": ["lemma inj_on_impl_disjoint_family_on_singleton:\n  assumes \"inj_on f A\"\n  shows \"disjoint_family_on (\\<lambda>x. {f x}) A\"", "lemma card_bind:\n  assumes \"finite S\"\n  assumes \"\\<forall>X \\<in> S. finite (f X)\"\n  assumes \"disjoint_family_on f S\"\n  shows \"card (S \\<bind> f) = (\\<Sum>x\\<in>S. card (f x))\"", "lemma card_bind_constant:\n  assumes \"finite S\"\n  assumes \"\\<forall>X \\<in> S. finite (f X)\"\n  assumes \"disjoint_family_on f S\"\n  assumes \"\\<And>x. x \\<in> S \\<Longrightarrow> card (f x) = k\"\n  shows \"card (S \\<bind> f) = card S * k\"", "lemma card_bind_singleton:\n  assumes \"finite S\"\n  assumes \"inj_on f S\"\n  shows \"card (S \\<bind> (\\<lambda>x. {f x})) = card S\"", "lemma disjoint_family_onI:\n  assumes \"\\<And>i j. i \\<in> I \\<and> j \\<in> I \\<Longrightarrow> i \\<noteq> j \\<Longrightarrow> (A i) \\<inter> (A j) = {}\"\n  shows \"disjoint_family_on A I\"", "lemma disjoint_bind: \"\\<And>S T f g. (\\<And>s t. S s \\<and> T t \\<Longrightarrow> f s \\<inter> g t = {}) \\<Longrightarrow> ({s. S s} \\<bind> f) \\<inter> ({t. T t} \\<bind> g) = {}\"", "lemma disjoint_bind': \"\\<And>S T f g. (\\<And>s t. s \\<in> S \\<and> t \\<in> T \\<Longrightarrow> f s \\<inter> g t = {}) \\<Longrightarrow> (S \\<bind> f) \\<inter> (T \\<bind> g) = {}\"", "lemma injectivity_solver_CollectE:\n  assumes \"a \\<in> {x. P x} \\<and> a' \\<in> {x. P' x}\"\n  assumes \"(P a \\<and> P' a') \\<Longrightarrow> W\"\n  shows \"W\"", "lemma injectivity_solver_prep_assms_Collect:\n  assumes \"x \\<in> {x. P x}\"\n  shows \"P x \\<and> P x\"", "lemma injectivity_solver_prep_assms: \"x \\<in> A \\<Longrightarrow> x \\<in> A \\<and> x \\<in> A\"", "lemma disjoint_terminal_singleton: \"\\<And>s t X Y. s \\<noteq> t \\<Longrightarrow> (X = Y \\<Longrightarrow> s = t) \\<Longrightarrow> {X} \\<inter> {Y} = {}\"", "lemma disjoint_terminal_Collect:\n  assumes \"s \\<noteq> t\"\n  assumes \"\\<And>x x'. S x \\<and> T x' \\<Longrightarrow> x = x' \\<Longrightarrow> s = t\"\n  shows \"{x. S x} \\<inter> {x. T x} = {}\"", "lemma disjoint_terminal:\n  \"s \\<noteq> t \\<Longrightarrow> (\\<And>x x'. x \\<in> S \\<and> x' \\<in> T \\<Longrightarrow> x = x' \\<Longrightarrow> s = t) \\<Longrightarrow> S \\<inter> T = {}\"", "lemma elim_singleton:\n  assumes \"x \\<in> {s} \\<and> x' \\<in> {t}\"\n  obtains \"x = s \\<and> x' = t\""], "translations": [["", "lemma inj_on_impl_disjoint_family_on_singleton:\n  assumes \"inj_on f A\"\n  shows \"disjoint_family_on (\\<lambda>x. {f x}) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjoint_family_on (\\<lambda>x. {f x}) A", "using assms disjoint_family_on_def inj_on_contraD"], ["proof (prove)\nusing this:\n  inj_on f A\n  disjoint_family_on ?A ?S =\n  (\\<forall>m\\<in>?S.\n      \\<forall>n\\<in>?S.\n         m \\<noteq> n \\<longrightarrow> ?A m \\<inter> ?A n = {})\n  \\<lbrakk>inj_on ?f ?A; ?x \\<noteq> ?y; ?x \\<in> ?A; ?y \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?f ?x \\<noteq> ?f ?y\n\ngoal (1 subgoal):\n 1. disjoint_family_on (\\<lambda>x. {f x}) A", "by fastforce"], ["", "subsubsection \\<open>Cardinality Theorems for Set.bind\\<close>"], ["", "lemma card_bind:\n  assumes \"finite S\"\n  assumes \"\\<forall>X \\<in> S. finite (f X)\"\n  assumes \"disjoint_family_on f S\"\n  shows \"card (S \\<bind> f) = (\\<Sum>x\\<in>S. card (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (S \\<bind> f) = (\\<Sum>x\\<in>S. card (f x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (S \\<bind> f) = (\\<Sum>x\\<in>S. card (f x))", "have \"card (S \\<bind> f) = card (\\<Union>(f ` S))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (S \\<bind> f) = card (\\<Union> (f ` S))", "by (simp add: bind_UNION)"], ["proof (state)\nthis:\n  card (S \\<bind> f) = card (\\<Union> (f ` S))\n\ngoal (1 subgoal):\n 1. card (S \\<bind> f) = (\\<Sum>x\\<in>S. card (f x))", "also"], ["proof (state)\nthis:\n  card (S \\<bind> f) = card (\\<Union> (f ` S))\n\ngoal (1 subgoal):\n 1. card (S \\<bind> f) = (\\<Sum>x\\<in>S. card (f x))", "have \"card (\\<Union>(f ` S)) = (\\<Sum>x\\<in>S. card (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (\\<Union> (f ` S)) = (\\<Sum>x\\<in>S. card (f x))", "using assms"], ["proof (prove)\nusing this:\n  finite S\n  \\<forall>X\\<in>S. finite (f X)\n  disjoint_family_on f S\n\ngoal (1 subgoal):\n 1. card (\\<Union> (f ` S)) = (\\<Sum>x\\<in>S. card (f x))", "unfolding disjoint_family_on_def"], ["proof (prove)\nusing this:\n  finite S\n  \\<forall>X\\<in>S. finite (f X)\n  \\<forall>m\\<in>S.\n     \\<forall>n\\<in>S. m \\<noteq> n \\<longrightarrow> f m \\<inter> f n = {}\n\ngoal (1 subgoal):\n 1. card (\\<Union> (f ` S)) = (\\<Sum>x\\<in>S. card (f x))", "by (simp add: card_UN_disjoint)"], ["proof (state)\nthis:\n  card (\\<Union> (f ` S)) = (\\<Sum>x\\<in>S. card (f x))\n\ngoal (1 subgoal):\n 1. card (S \\<bind> f) = (\\<Sum>x\\<in>S. card (f x))", "finally"], ["proof (chain)\npicking this:\n  card (S \\<bind> f) = (\\<Sum>x\\<in>S. card (f x))", "show ?thesis"], ["proof (prove)\nusing this:\n  card (S \\<bind> f) = (\\<Sum>x\\<in>S. card (f x))\n\ngoal (1 subgoal):\n 1. card (S \\<bind> f) = (\\<Sum>x\\<in>S. card (f x))", "."], ["proof (state)\nthis:\n  card (S \\<bind> f) = (\\<Sum>x\\<in>S. card (f x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_bind_constant:\n  assumes \"finite S\"\n  assumes \"\\<forall>X \\<in> S. finite (f X)\"\n  assumes \"disjoint_family_on f S\"\n  assumes \"\\<And>x. x \\<in> S \\<Longrightarrow> card (f x) = k\"\n  shows \"card (S \\<bind> f) = card S * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (S \\<bind> f) = card S * k", "using assms"], ["proof (prove)\nusing this:\n  finite S\n  \\<forall>X\\<in>S. finite (f X)\n  disjoint_family_on f S\n  ?x \\<in> S \\<Longrightarrow> card (f ?x) = k\n\ngoal (1 subgoal):\n 1. card (S \\<bind> f) = card S * k", "by (simp add: card_bind)"], ["", "lemma card_bind_singleton:\n  assumes \"finite S\"\n  assumes \"inj_on f S\"\n  shows \"card (S \\<bind> (\\<lambda>x. {f x})) = card S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (S \\<bind> (\\<lambda>x. {f x})) = card S", "using assms"], ["proof (prove)\nusing this:\n  finite S\n  inj_on f S\n\ngoal (1 subgoal):\n 1. card (S \\<bind> (\\<lambda>x. {f x})) = card S", "by (auto simp add: card_bind_constant inj_on_impl_disjoint_family_on_singleton)"], ["", "subsection \\<open>Third Version of Injectivity Solver\\<close>"], ["", "text \\<open>\nHere, we provide a third version of the injectivity solver. The original first version was provided\nin the AFP entry `Spivey's Generalized Recurrence for Bell Numbers`. From that method, I derived a\nsecond version in the AFP entry `Cardinality of Equivalence Relations`. At roughly the same time,\nMakarius improved the injectivity solver in the development version of the first AFP entry. This\nthird version now includes the improvements of the second version and Makarius improvements\nto the first, and it further extends the method to handle the new cases in the cardinality proof\nof this AFP entry.\n\nAs the implementation of the injectivity solver only evolves in the development branch of the AFP,\nthe submissions of the three AFP entries that employ the injectivity solver, have to create clones\nof the injectivity solver for the identified and needed method adjustments. Ultimately, these three\nclones should only remain in the stable branches of the AFP from Isabelle2016 to Isabelle2017\nto work with their corresponding release versions.\nIn the development version, I have now consolidated the three versions here.\nIn the next step, I will move this version of the injectivity solver in\nthe @{theory \"HOL-Library.Disjoint_Sets\"} and it will hopefully only evolve further there.\n\\<close>"], ["", "lemma disjoint_family_onI:\n  assumes \"\\<And>i j. i \\<in> I \\<and> j \\<in> I \\<Longrightarrow> i \\<noteq> j \\<Longrightarrow> (A i) \\<inter> (A j) = {}\"\n  shows \"disjoint_family_on A I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjoint_family_on A I", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<in> I \\<and> ?j \\<in> I; ?i \\<noteq> ?j\\<rbrakk>\n  \\<Longrightarrow> A ?i \\<inter> A ?j = {}\n\ngoal (1 subgoal):\n 1. disjoint_family_on A I", "unfolding disjoint_family_on_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<in> I \\<and> ?j \\<in> I; ?i \\<noteq> ?j\\<rbrakk>\n  \\<Longrightarrow> A ?i \\<inter> A ?j = {}\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<in>I.\n       \\<forall>n\\<in>I.\n          m \\<noteq> n \\<longrightarrow> A m \\<inter> A n = {}", "by auto"], ["", "lemma disjoint_bind: \"\\<And>S T f g. (\\<And>s t. S s \\<and> T t \\<Longrightarrow> f s \\<inter> g t = {}) \\<Longrightarrow> ({s. S s} \\<bind> f) \\<inter> ({t. T t} \\<bind> g) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S T f g.\n       (\\<And>s t.\n           S s \\<and> T t \\<Longrightarrow>\n           f s \\<inter> g t = {}) \\<Longrightarrow>\n       ({s. S s} \\<bind> f) \\<inter> ({t. T t} \\<bind> g) = {}", "by fastforce"], ["", "lemma disjoint_bind': \"\\<And>S T f g. (\\<And>s t. s \\<in> S \\<and> t \\<in> T \\<Longrightarrow> f s \\<inter> g t = {}) \\<Longrightarrow> (S \\<bind> f) \\<inter> (T \\<bind> g) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S T f g.\n       (\\<And>s t.\n           s \\<in> S \\<and> t \\<in> T \\<Longrightarrow>\n           f s \\<inter> g t = {}) \\<Longrightarrow>\n       (S \\<bind> f) \\<inter> (T \\<bind> g) = {}", "by fastforce"], ["", "lemma injectivity_solver_CollectE:\n  assumes \"a \\<in> {x. P x} \\<and> a' \\<in> {x. P' x}\"\n  assumes \"(P a \\<and> P' a') \\<Longrightarrow> W\"\n  shows \"W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> {x. P x} \\<and> a' \\<in> {x. P' x}\n  P a \\<and> P' a' \\<Longrightarrow> W\n\ngoal (1 subgoal):\n 1. W", "by auto"], ["", "lemma injectivity_solver_prep_assms_Collect:\n  assumes \"x \\<in> {x. P x}\"\n  shows \"P x \\<and> P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P x \\<and> P x", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> {x. P x}\n\ngoal (1 subgoal):\n 1. P x \\<and> P x", "by simp"], ["", "lemma injectivity_solver_prep_assms: \"x \\<in> A \\<Longrightarrow> x \\<in> A \\<and> x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> A \\<Longrightarrow> x \\<in> A \\<and> x \\<in> A", "by simp"], ["", "lemma disjoint_terminal_singleton: \"\\<And>s t X Y. s \\<noteq> t \\<Longrightarrow> (X = Y \\<Longrightarrow> s = t) \\<Longrightarrow> {X} \\<inter> {Y} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t X Y.\n       \\<lbrakk>s \\<noteq> t; X = Y \\<Longrightarrow> s = t\\<rbrakk>\n       \\<Longrightarrow> {X} \\<inter> {Y} = {}", "by auto"], ["", "lemma disjoint_terminal_Collect:\n  assumes \"s \\<noteq> t\"\n  assumes \"\\<And>x x'. S x \\<and> T x' \\<Longrightarrow> x = x' \\<Longrightarrow> s = t\"\n  shows \"{x. S x} \\<inter> {x. T x} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. S x} \\<inter> {x. T x} = {}", "using assms"], ["proof (prove)\nusing this:\n  s \\<noteq> t\n  \\<lbrakk>S ?x \\<and> T ?x'; ?x = ?x'\\<rbrakk> \\<Longrightarrow> s = t\n\ngoal (1 subgoal):\n 1. {x. S x} \\<inter> {x. T x} = {}", "by auto"], ["", "lemma disjoint_terminal:\n  \"s \\<noteq> t \\<Longrightarrow> (\\<And>x x'. x \\<in> S \\<and> x' \\<in> T \\<Longrightarrow> x = x' \\<Longrightarrow> s = t) \\<Longrightarrow> S \\<inter> T = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<noteq> t;\n     \\<And>x x'.\n        \\<lbrakk>x \\<in> S \\<and> x' \\<in> T; x = x'\\<rbrakk>\n        \\<Longrightarrow> s = t\\<rbrakk>\n    \\<Longrightarrow> S \\<inter> T = {}", "by blast"], ["", "lemma elim_singleton:\n  assumes \"x \\<in> {s} \\<and> x' \\<in> {t}\"\n  obtains \"x = s \\<and> x' = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x = s \\<and> x' = t \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> {s} \\<and> x' \\<in> {t}\n\ngoal (1 subgoal):\n 1. (x = s \\<and> x' = t \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["", "method injectivity_solver uses rule =\n  insert method_facts,\n  use nothing in \\<open>\n    ((drule injectivity_solver_prep_assms_Collect | drule injectivity_solver_prep_assms)+)?;\n    rule disjoint_family_onI;\n    ((rule disjoint_bind | rule disjoint_bind')+)?;\n    (erule elim_singleton)?;\n    (erule disjoint_terminal_singleton | erule disjoint_terminal_Collect | erule disjoint_terminal);\n    (elim injectivity_solver_CollectE)?;\n    rule rule;\n    assumption+\n  \\<close>"], ["", "end"]]}