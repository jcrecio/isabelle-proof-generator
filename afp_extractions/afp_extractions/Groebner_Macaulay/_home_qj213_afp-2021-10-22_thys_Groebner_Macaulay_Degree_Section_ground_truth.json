{"file_name": "/home/qj213/afp-2021-10-22/thys/Groebner_Macaulay/Degree_Section.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Groebner_Macaulay", "problem_names": ["lemma deg_sectI: \"t \\<in> .[X] \\<Longrightarrow> deg_pm t = d \\<Longrightarrow> t \\<in> deg_sect X d\"", "lemma deg_sectD:\n  assumes \"t \\<in> deg_sect X d\"\n  shows \"t \\<in> .[X]\" and \"deg_pm t = d\"", "lemma deg_le_sect_alt: \"deg_le_sect X d = .[X] \\<inter> {t. deg_pm t \\<le> d}\"", "lemma deg_le_sectI: \"t \\<in> .[X] \\<Longrightarrow> deg_pm t \\<le> d \\<Longrightarrow> t \\<in> deg_le_sect X d\"", "lemma deg_le_sectD:\n  assumes \"t \\<in> deg_le_sect X d\"\n  shows \"t \\<in> .[X]\" and \"deg_pm t \\<le> d\"", "lemma deg_sect_zero [simp]: \"deg_sect X 0 = {0}\"", "lemma deg_sect_empty: \"deg_sect {} d = (if d = 0 then {0} else {})\"", "lemma deg_sect_singleton [simp]: \"deg_sect {x} d = {Poly_Mapping.single x d}\"", "lemma deg_le_sect_zero [simp]: \"deg_le_sect X 0 = {0}\"", "lemma deg_le_sect_empty [simp]: \"deg_le_sect {} d = {0}\"", "lemma deg_le_sect_singleton: \"deg_le_sect {x} d = Poly_Mapping.single x ` {..d}\"", "lemma deg_sect_mono: \"X \\<subseteq> Y \\<Longrightarrow> deg_sect X d \\<subseteq> deg_sect Y d\"", "lemma deg_le_sect_mono_1: \"X \\<subseteq> Y \\<Longrightarrow> deg_le_sect X d \\<subseteq> deg_le_sect Y d\"", "lemma deg_le_sect_mono_2: \"d1 \\<le> d2 \\<Longrightarrow> deg_le_sect X d1 \\<subseteq> deg_le_sect X d2\"", "lemma zero_in_deg_le_sect: \"0 \\<in> deg_le_sect n d\"", "lemma deg_sect_disjoint: \"d1 \\<noteq> d2 \\<Longrightarrow> deg_sect X d1 \\<inter> deg_sect Y d2 = {}\"", "lemma deg_le_sect_deg_sect_disjoint: \"d1 < d2 \\<Longrightarrow> deg_le_sect Y d1 \\<inter> deg_sect X d2 = {}\"", "lemma deg_sect_Suc:\n  \"deg_sect X (Suc d) = (\\<Union>x\\<in>X. (+) (Poly_Mapping.single x 1) ` deg_sect X d)\" (is \"?A = ?B\")", "lemma deg_sect_insert:\n  \"deg_sect (insert x X) d = (\\<Union>d0\\<le>d. (+) (Poly_Mapping.single x (d - d0)) ` deg_sect X d0)\"\n    (is \"?A = ?B\")", "lemma deg_le_sect_Suc: \"deg_le_sect X (Suc d) = deg_le_sect X d \\<union> deg_sect X (Suc d)\"", "lemma deg_le_sect_Suc_2:\n  \"deg_le_sect X (Suc d) = insert 0 (\\<Union>x\\<in>X. (+) (Poly_Mapping.single x 1) ` deg_le_sect X d)\"\n    (is \"?A = ?B\")", "lemma finite_deg_sect:\n  assumes \"finite X\"\n  shows \"finite ((deg_sect X d)::('x::countable \\<Rightarrow>\\<^sub>0 nat) set)\"", "lemma keys_subset_deg_le_sectI:\n  assumes \"p \\<in> P[X]\" and \"poly_deg p \\<le> d\"\n  shows \"keys p \\<subseteq> deg_le_sect X d\"", "lemma binomial_symmetric_plus: \"(n + k) choose n = (n + k) choose k\"", "lemma card_deg_sect:\n  assumes \"finite X\" and \"X \\<noteq> {}\"\n  shows \"card (deg_sect X d) = (d + (card X - 1)) choose (card X - 1)\""], "translations": [["", "lemma deg_sectI: \"t \\<in> .[X] \\<Longrightarrow> deg_pm t = d \\<Longrightarrow> t \\<in> deg_sect X d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<in> .[X]; deg_pm t = d\\<rbrakk>\n    \\<Longrightarrow> t \\<in> deg_sect X d", "by (simp add: deg_sect_def)"], ["", "lemma deg_sectD:\n  assumes \"t \\<in> deg_sect X d\"\n  shows \"t \\<in> .[X]\" and \"deg_pm t = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> .[X] &&& deg_pm t = d", "using assms"], ["proof (prove)\nusing this:\n  t \\<in> deg_sect X d\n\ngoal (1 subgoal):\n 1. t \\<in> .[X] &&& deg_pm t = d", "by (simp_all add: deg_sect_def)"], ["", "lemma deg_le_sect_alt: \"deg_le_sect X d = .[X] \\<inter> {t. deg_pm t \\<le> d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deg_le_sect X d = .[X] \\<inter> {t. deg_pm t \\<le> d}", "by (auto simp: deg_le_sect_def deg_sect_def)"], ["", "lemma deg_le_sectI: \"t \\<in> .[X] \\<Longrightarrow> deg_pm t \\<le> d \\<Longrightarrow> t \\<in> deg_le_sect X d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<in> .[X]; deg_pm t \\<le> d\\<rbrakk>\n    \\<Longrightarrow> t \\<in> deg_le_sect X d", "by (simp add: deg_le_sect_alt)"], ["", "lemma deg_le_sectD:\n  assumes \"t \\<in> deg_le_sect X d\"\n  shows \"t \\<in> .[X]\" and \"deg_pm t \\<le> d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> .[X] &&& deg_pm t \\<le> d", "using assms"], ["proof (prove)\nusing this:\n  t \\<in> deg_le_sect X d\n\ngoal (1 subgoal):\n 1. t \\<in> .[X] &&& deg_pm t \\<le> d", "by (simp_all add: deg_le_sect_alt)"], ["", "lemma deg_sect_zero [simp]: \"deg_sect X 0 = {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deg_sect X 0 = {0}", "by (auto simp: deg_sect_def zero_in_PPs)"], ["", "lemma deg_sect_empty: \"deg_sect {} d = (if d = 0 then {0} else {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deg_sect {} d = (if d = 0 then {0} else {})", "by (auto simp: deg_sect_def)"], ["", "lemma deg_sect_singleton [simp]: \"deg_sect {x} d = {Poly_Mapping.single x d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deg_sect {x} d = {monomial d x}", "by (auto simp: deg_sect_def deg_pm_single PPs_singleton)"], ["", "lemma deg_le_sect_zero [simp]: \"deg_le_sect X 0 = {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deg_le_sect X 0 = {0}", "by (auto simp: deg_le_sect_def)"], ["", "lemma deg_le_sect_empty [simp]: \"deg_le_sect {} d = {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deg_le_sect {} d = {0}", "by (auto simp: deg_le_sect_alt varnum_eq_zero_iff)"], ["", "lemma deg_le_sect_singleton: \"deg_le_sect {x} d = Poly_Mapping.single x ` {..d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deg_le_sect {x} d = Poly_Mapping.single x ` {..d}", "by (auto simp: deg_le_sect_alt deg_pm_single PPs_singleton)"], ["", "lemma deg_sect_mono: \"X \\<subseteq> Y \\<Longrightarrow> deg_sect X d \\<subseteq> deg_sect Y d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> Y \\<Longrightarrow> deg_sect X d \\<subseteq> deg_sect Y d", "by (auto simp: deg_sect_def dest: PPs_mono)"], ["", "lemma deg_le_sect_mono_1: \"X \\<subseteq> Y \\<Longrightarrow> deg_le_sect X d \\<subseteq> deg_le_sect Y d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> Y \\<Longrightarrow>\n    deg_le_sect X d \\<subseteq> deg_le_sect Y d", "by (auto simp: deg_le_sect_alt dest: PPs_mono)"], ["", "lemma deg_le_sect_mono_2: \"d1 \\<le> d2 \\<Longrightarrow> deg_le_sect X d1 \\<subseteq> deg_le_sect X d2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d1 \\<le> d2 \\<Longrightarrow>\n    deg_le_sect X d1 \\<subseteq> deg_le_sect X d2", "by (auto simp: deg_le_sect_alt)"], ["", "lemma zero_in_deg_le_sect: \"0 \\<in> deg_le_sect n d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in> deg_le_sect n d", "by (simp add: deg_le_sect_alt zero_in_PPs)"], ["", "lemma deg_sect_disjoint: \"d1 \\<noteq> d2 \\<Longrightarrow> deg_sect X d1 \\<inter> deg_sect Y d2 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d1 \\<noteq> d2 \\<Longrightarrow>\n    deg_sect X d1 \\<inter> deg_sect Y d2 = {}", "by (auto simp: deg_sect_def)"], ["", "lemma deg_le_sect_deg_sect_disjoint: \"d1 < d2 \\<Longrightarrow> deg_le_sect Y d1 \\<inter> deg_sect X d2 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d1 < d2 \\<Longrightarrow> deg_le_sect Y d1 \\<inter> deg_sect X d2 = {}", "by (auto simp: deg_sect_def deg_le_sect_alt)"], ["", "lemma deg_sect_Suc:\n  \"deg_sect X (Suc d) = (\\<Union>x\\<in>X. (+) (Poly_Mapping.single x 1) ` deg_sect X d)\" (is \"?A = ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. deg_sect X (Suc d) =\n    (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)", "proof (rule set_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> deg_sect X (Suc d)) =\n       (x \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d))", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> deg_sect X (Suc d)) =\n       (x \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d))", "show \"t \\<in> ?A \\<longleftrightarrow> t \\<in> ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<in> deg_sect X (Suc d)) =\n    (t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. t \\<in> deg_sect X (Suc d) \\<Longrightarrow>\n    t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)\n 2. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "assume \"t \\<in> ?A\""], ["proof (state)\nthis:\n  t \\<in> deg_sect X (Suc d)\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect X (Suc d) \\<Longrightarrow>\n    t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)\n 2. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "hence \"t \\<in> .[X]\" and \"deg_pm t = Suc d\""], ["proof (prove)\nusing this:\n  t \\<in> deg_sect X (Suc d)\n\ngoal (1 subgoal):\n 1. t \\<in> .[X] &&& deg_pm t = Suc d", "by (rule deg_sectD)+"], ["proof (state)\nthis:\n  t \\<in> .[X]\n  deg_pm t = Suc d\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect X (Suc d) \\<Longrightarrow>\n    t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)\n 2. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "from this(2)"], ["proof (chain)\npicking this:\n  deg_pm t = Suc d", "have \"keys t \\<noteq> {}\""], ["proof (prove)\nusing this:\n  deg_pm t = Suc d\n\ngoal (1 subgoal):\n 1. keys t \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  keys t \\<noteq> {}\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect X (Suc d) \\<Longrightarrow>\n    t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)\n 2. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "then"], ["proof (chain)\npicking this:\n  keys t \\<noteq> {}", "obtain x where \"x \\<in> keys t\""], ["proof (prove)\nusing this:\n  keys t \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> keys t \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> keys t\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect X (Suc d) \\<Longrightarrow>\n    t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)\n 2. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "hence \"1 \\<le> lookup t x\""], ["proof (prove)\nusing this:\n  x \\<in> keys t\n\ngoal (1 subgoal):\n 1. 1 \\<le> lookup t x", "by (simp add: in_keys_iff)"], ["proof (state)\nthis:\n  1 \\<le> lookup t x\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect X (Suc d) \\<Longrightarrow>\n    t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)\n 2. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "from \\<open>t \\<in> .[X]\\<close>"], ["proof (chain)\npicking this:\n  t \\<in> .[X]", "have \"keys t \\<subseteq> X\""], ["proof (prove)\nusing this:\n  t \\<in> .[X]\n\ngoal (1 subgoal):\n 1. keys t \\<subseteq> X", "by (rule PPsD)"], ["proof (state)\nthis:\n  keys t \\<subseteq> X\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect X (Suc d) \\<Longrightarrow>\n    t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)\n 2. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "with \\<open>x \\<in> keys t\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> keys t\n  keys t \\<subseteq> X", "have \"x \\<in> X\""], ["proof (prove)\nusing this:\n  x \\<in> keys t\n  keys t \\<subseteq> X\n\ngoal (1 subgoal):\n 1. x \\<in> X", ".."], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect X (Suc d) \\<Longrightarrow>\n    t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)\n 2. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "let ?s = \"Poly_Mapping.single x (1::nat)\""], ["proof (state)\ngoal (2 subgoals):\n 1. t \\<in> deg_sect X (Suc d) \\<Longrightarrow>\n    t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)\n 2. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "from \\<open>1 \\<le> lookup t x\\<close>"], ["proof (chain)\npicking this:\n  1 \\<le> lookup t x", "have \"?s adds t\""], ["proof (prove)\nusing this:\n  1 \\<le> lookup t x\n\ngoal (1 subgoal):\n 1. monomial 1 x adds t", "by (auto simp: lookup_single when_def intro!: adds_poly_mappingI le_funI)"], ["proof (state)\nthis:\n  monomial 1 x adds t\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect X (Suc d) \\<Longrightarrow>\n    t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)\n 2. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "hence t: \"?s + (t - ?s) = t\""], ["proof (prove)\nusing this:\n  monomial 1 x adds t\n\ngoal (1 subgoal):\n 1. monomial 1 x + (t - monomial 1 x) = t", "by (metis add.commute adds_minus)"], ["proof (state)\nthis:\n  monomial 1 x + (t - monomial 1 x) = t\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect X (Suc d) \\<Longrightarrow>\n    t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)\n 2. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "have \"t - ?s \\<in> deg_sect X d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t - monomial 1 x \\<in> deg_sect X d", "proof (rule deg_sectI)"], ["proof (state)\ngoal (2 subgoals):\n 1. t - monomial 1 x \\<in> .[X]\n 2. deg_pm (t - monomial 1 x) = d", "from \\<open>t \\<in> .[X]\\<close>"], ["proof (chain)\npicking this:\n  t \\<in> .[X]", "show \"t - ?s \\<in> .[X]\""], ["proof (prove)\nusing this:\n  t \\<in> .[X]\n\ngoal (1 subgoal):\n 1. t - monomial 1 x \\<in> .[X]", "by (rule PPs_closed_minus)"], ["proof (state)\nthis:\n  t - monomial 1 x \\<in> .[X]\n\ngoal (1 subgoal):\n 1. deg_pm (t - monomial 1 x) = d", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. deg_pm (t - monomial 1 x) = d", "from deg_pm_plus[of ?s \"t - ?s\"]"], ["proof (chain)\npicking this:\n  deg_pm (monomial 1 x + (t - monomial 1 x)) =\n  deg_pm (monomial 1 x) + deg_pm (t - monomial 1 x)", "have \"deg_pm t = Suc (deg_pm (t - ?s))\""], ["proof (prove)\nusing this:\n  deg_pm (monomial 1 x + (t - monomial 1 x)) =\n  deg_pm (monomial 1 x) + deg_pm (t - monomial 1 x)\n\ngoal (1 subgoal):\n 1. deg_pm t = Suc (deg_pm (t - monomial 1 x))", "by (simp only: t deg_pm_single)"], ["proof (state)\nthis:\n  deg_pm t = Suc (deg_pm (t - monomial 1 x))\n\ngoal (1 subgoal):\n 1. deg_pm (t - monomial 1 x) = d", "thus \"deg_pm (t - ?s) = d\""], ["proof (prove)\nusing this:\n  deg_pm t = Suc (deg_pm (t - monomial 1 x))\n\ngoal (1 subgoal):\n 1. deg_pm (t - monomial 1 x) = d", "by (simp add: \\<open>deg_pm t = Suc d\\<close>)"], ["proof (state)\nthis:\n  deg_pm (t - monomial 1 x) = d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t - monomial 1 x \\<in> deg_sect X d\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect X (Suc d) \\<Longrightarrow>\n    t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)\n 2. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "hence \"?s + (t - ?s) \\<in> (+) ?s ` deg_sect X d\""], ["proof (prove)\nusing this:\n  t - monomial 1 x \\<in> deg_sect X d\n\ngoal (1 subgoal):\n 1. monomial 1 x + (t - monomial 1 x)\n    \\<in> (+) (monomial 1 x) ` deg_sect X d", "by (rule imageI)"], ["proof (state)\nthis:\n  monomial 1 x + (t - monomial 1 x) \\<in> (+) (monomial 1 x) ` deg_sect X d\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect X (Suc d) \\<Longrightarrow>\n    t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)\n 2. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "hence \"t \\<in> (+) ?s ` deg_sect X d\""], ["proof (prove)\nusing this:\n  monomial 1 x + (t - monomial 1 x) \\<in> (+) (monomial 1 x) ` deg_sect X d\n\ngoal (1 subgoal):\n 1. t \\<in> (+) (monomial 1 x) ` deg_sect X d", "by (simp only: t)"], ["proof (state)\nthis:\n  t \\<in> (+) (monomial 1 x) ` deg_sect X d\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect X (Suc d) \\<Longrightarrow>\n    t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)\n 2. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "with \\<open>x \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> X\n  t \\<in> (+) (monomial 1 x) ` deg_sect X d", "show \"t \\<in> ?B\""], ["proof (prove)\nusing this:\n  x \\<in> X\n  t \\<in> (+) (monomial 1 x) ` deg_sect X d\n\ngoal (1 subgoal):\n 1. t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)", ".."], ["proof (state)\nthis:\n  t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)\n\ngoal (1 subgoal):\n 1. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "assume \"t \\<in> ?B\""], ["proof (state)\nthis:\n  t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)\n\ngoal (1 subgoal):\n 1. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "then"], ["proof (chain)\npicking this:\n  t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)", "obtain x where \"x \\<in> X\" and \"t \\<in> (+) (Poly_Mapping.single x 1) ` deg_sect X d\""], ["proof (prove)\nusing this:\n  t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> X;\n         t \\<in> (+) (monomial 1 x) ` deg_sect X d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  x \\<in> X\n  t \\<in> (+) (monomial 1 x) ` deg_sect X d\n\ngoal (1 subgoal):\n 1. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "from this(2)"], ["proof (chain)\npicking this:\n  t \\<in> (+) (monomial 1 x) ` deg_sect X d", "obtain s where s: \"s \\<in> deg_sect X d\"\n      and t: \"t = Poly_Mapping.single x 1 + s\" (is \"t = ?s + s\")"], ["proof (prove)\nusing this:\n  t \\<in> (+) (monomial 1 x) ` deg_sect X d\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> deg_sect X d; t = monomial 1 x + s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  s \\<in> deg_sect X d\n  t = monomial 1 x + s\n\ngoal (1 subgoal):\n 1. t \\<in> (\\<Union>x\\<in>X.\n                (+) (monomial 1 x) ` deg_sect X d) \\<Longrightarrow>\n    t \\<in> deg_sect X (Suc d)", "show \"t \\<in> ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> deg_sect X (Suc d)", "proof (rule deg_sectI)"], ["proof (state)\ngoal (2 subgoals):\n 1. t \\<in> .[X]\n 2. deg_pm t = Suc d", "from \\<open>x \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> X", "have \"?s \\<in> .[X]\""], ["proof (prove)\nusing this:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. monomial 1 x \\<in> .[X]", "by (rule PPs_closed_single)"], ["proof (state)\nthis:\n  monomial 1 x \\<in> .[X]\n\ngoal (2 subgoals):\n 1. t \\<in> .[X]\n 2. deg_pm t = Suc d", "moreover"], ["proof (state)\nthis:\n  monomial 1 x \\<in> .[X]\n\ngoal (2 subgoals):\n 1. t \\<in> .[X]\n 2. deg_pm t = Suc d", "from s"], ["proof (chain)\npicking this:\n  s \\<in> deg_sect X d", "have \"s \\<in> .[X]\""], ["proof (prove)\nusing this:\n  s \\<in> deg_sect X d\n\ngoal (1 subgoal):\n 1. s \\<in> .[X]", "by (rule deg_sectD)"], ["proof (state)\nthis:\n  s \\<in> .[X]\n\ngoal (2 subgoals):\n 1. t \\<in> .[X]\n 2. deg_pm t = Suc d", "ultimately"], ["proof (chain)\npicking this:\n  monomial 1 x \\<in> .[X]\n  s \\<in> .[X]", "show \"t \\<in> .[X]\""], ["proof (prove)\nusing this:\n  monomial 1 x \\<in> .[X]\n  s \\<in> .[X]\n\ngoal (1 subgoal):\n 1. t \\<in> .[X]", "unfolding t"], ["proof (prove)\nusing this:\n  monomial 1 x \\<in> .[X]\n  s \\<in> .[X]\n\ngoal (1 subgoal):\n 1. monomial 1 x + s \\<in> .[X]", "by (rule PPs_closed_plus)"], ["proof (state)\nthis:\n  t \\<in> .[X]\n\ngoal (1 subgoal):\n 1. deg_pm t = Suc d", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. deg_pm t = Suc d", "from s"], ["proof (chain)\npicking this:\n  s \\<in> deg_sect X d", "have \"deg_pm s = d\""], ["proof (prove)\nusing this:\n  s \\<in> deg_sect X d\n\ngoal (1 subgoal):\n 1. deg_pm s = d", "by (rule deg_sectD)"], ["proof (state)\nthis:\n  deg_pm s = d\n\ngoal (1 subgoal):\n 1. deg_pm t = Suc d", "thus \"deg_pm t = Suc d\""], ["proof (prove)\nusing this:\n  deg_pm s = d\n\ngoal (1 subgoal):\n 1. deg_pm t = Suc d", "by (simp add: t deg_pm_single deg_pm_plus)"], ["proof (state)\nthis:\n  deg_pm t = Suc d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t \\<in> deg_sect X (Suc d)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (t \\<in> deg_sect X (Suc d)) =\n  (t \\<in> (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma deg_sect_insert:\n  \"deg_sect (insert x X) d = (\\<Union>d0\\<le>d. (+) (Poly_Mapping.single x (d - d0)) ` deg_sect X d0)\"\n    (is \"?A = ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. deg_sect (insert x X) d =\n    (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0)", "proof (rule set_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (xa \\<in> deg_sect (insert x X) d) =\n       (xa \\<in> (\\<Union>d0\\<le>d.\n                     (+) (monomial (d - d0) x) ` deg_sect X d0))", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (xa \\<in> deg_sect (insert x X) d) =\n       (xa \\<in> (\\<Union>d0\\<le>d.\n                     (+) (monomial (d - d0) x) ` deg_sect X d0))", "show \"t \\<in> ?A \\<longleftrightarrow> t \\<in> ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<in> deg_sect (insert x X) d) =\n    (t \\<in> (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. t \\<in> deg_sect (insert x X) d \\<Longrightarrow>\n    t \\<in> (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0)\n 2. t \\<in> (\\<Union>d0\\<le>d.\n                (+) (monomial (d - d0) x) ` deg_sect X d0) \\<Longrightarrow>\n    t \\<in> deg_sect (insert x X) d", "assume \"t \\<in> ?A\""], ["proof (state)\nthis:\n  t \\<in> deg_sect (insert x X) d\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect (insert x X) d \\<Longrightarrow>\n    t \\<in> (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0)\n 2. t \\<in> (\\<Union>d0\\<le>d.\n                (+) (monomial (d - d0) x) ` deg_sect X d0) \\<Longrightarrow>\n    t \\<in> deg_sect (insert x X) d", "hence \"t \\<in> .[insert x X]\" and \"deg_pm t = d\""], ["proof (prove)\nusing this:\n  t \\<in> deg_sect (insert x X) d\n\ngoal (1 subgoal):\n 1. t \\<in> .[insert x X] &&& deg_pm t = d", "by (rule deg_sectD)+"], ["proof (state)\nthis:\n  t \\<in> .[insert x X]\n  deg_pm t = d\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect (insert x X) d \\<Longrightarrow>\n    t \\<in> (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0)\n 2. t \\<in> (\\<Union>d0\\<le>d.\n                (+) (monomial (d - d0) x) ` deg_sect X d0) \\<Longrightarrow>\n    t \\<in> deg_sect (insert x X) d", "from this(1)"], ["proof (chain)\npicking this:\n  t \\<in> .[insert x X]", "obtain e tx where \"tx \\<in> .[X]\" and t: \"t = Poly_Mapping.single x e + tx\""], ["proof (prove)\nusing this:\n  t \\<in> .[insert x X]\n\ngoal (1 subgoal):\n 1. (\\<And>tx e.\n        \\<lbrakk>tx \\<in> .[X]; t = monomial e x + tx\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule PPs_insertE)"], ["proof (state)\nthis:\n  tx \\<in> .[X]\n  t = monomial e x + tx\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect (insert x X) d \\<Longrightarrow>\n    t \\<in> (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0)\n 2. t \\<in> (\\<Union>d0\\<le>d.\n                (+) (monomial (d - d0) x) ` deg_sect X d0) \\<Longrightarrow>\n    t \\<in> deg_sect (insert x X) d", "have \"e + deg_pm tx = deg_pm t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e + deg_pm tx = deg_pm t", "by (simp add: t deg_pm_plus deg_pm_single)"], ["proof (state)\nthis:\n  e + deg_pm tx = deg_pm t\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect (insert x X) d \\<Longrightarrow>\n    t \\<in> (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0)\n 2. t \\<in> (\\<Union>d0\\<le>d.\n                (+) (monomial (d - d0) x) ` deg_sect X d0) \\<Longrightarrow>\n    t \\<in> deg_sect (insert x X) d", "hence \"e + deg_pm tx = d\""], ["proof (prove)\nusing this:\n  e + deg_pm tx = deg_pm t\n\ngoal (1 subgoal):\n 1. e + deg_pm tx = d", "by (simp only: \\<open>deg_pm t = d\\<close>)"], ["proof (state)\nthis:\n  e + deg_pm tx = d\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect (insert x X) d \\<Longrightarrow>\n    t \\<in> (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0)\n 2. t \\<in> (\\<Union>d0\\<le>d.\n                (+) (monomial (d - d0) x) ` deg_sect X d0) \\<Longrightarrow>\n    t \\<in> deg_sect (insert x X) d", "hence \"deg_pm tx \\<in> {..d}\" and e: \"e = d - deg_pm tx\""], ["proof (prove)\nusing this:\n  e + deg_pm tx = d\n\ngoal (1 subgoal):\n 1. deg_pm tx \\<in> {..d} &&& e = d - deg_pm tx", "by simp_all"], ["proof (state)\nthis:\n  deg_pm tx \\<in> {..d}\n  e = d - deg_pm tx\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect (insert x X) d \\<Longrightarrow>\n    t \\<in> (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0)\n 2. t \\<in> (\\<Union>d0\\<le>d.\n                (+) (monomial (d - d0) x) ` deg_sect X d0) \\<Longrightarrow>\n    t \\<in> deg_sect (insert x X) d", "from \\<open>tx \\<in> .[X]\\<close> refl"], ["proof (chain)\npicking this:\n  tx \\<in> .[X]\n  ?t = ?t", "have \"tx \\<in> deg_sect X (deg_pm tx)\""], ["proof (prove)\nusing this:\n  tx \\<in> .[X]\n  ?t = ?t\n\ngoal (1 subgoal):\n 1. tx \\<in> deg_sect X (deg_pm tx)", "by (rule deg_sectI)"], ["proof (state)\nthis:\n  tx \\<in> deg_sect X (deg_pm tx)\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect (insert x X) d \\<Longrightarrow>\n    t \\<in> (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0)\n 2. t \\<in> (\\<Union>d0\\<le>d.\n                (+) (monomial (d - d0) x) ` deg_sect X d0) \\<Longrightarrow>\n    t \\<in> deg_sect (insert x X) d", "hence \"t \\<in> (+) (Poly_Mapping.single x (d - deg_pm tx)) ` deg_sect X (deg_pm tx)\""], ["proof (prove)\nusing this:\n  tx \\<in> deg_sect X (deg_pm tx)\n\ngoal (1 subgoal):\n 1. t \\<in> (+) (monomial (d - deg_pm tx) x) ` deg_sect X (deg_pm tx)", "unfolding t e"], ["proof (prove)\nusing this:\n  tx \\<in> deg_sect X (deg_pm tx)\n\ngoal (1 subgoal):\n 1. monomial (d - deg_pm tx) x + tx\n    \\<in> (+) (monomial (d - deg_pm tx) x) ` deg_sect X (deg_pm tx)", "by (rule imageI)"], ["proof (state)\nthis:\n  t \\<in> (+) (monomial (d - deg_pm tx) x) ` deg_sect X (deg_pm tx)\n\ngoal (2 subgoals):\n 1. t \\<in> deg_sect (insert x X) d \\<Longrightarrow>\n    t \\<in> (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0)\n 2. t \\<in> (\\<Union>d0\\<le>d.\n                (+) (monomial (d - d0) x) ` deg_sect X d0) \\<Longrightarrow>\n    t \\<in> deg_sect (insert x X) d", "with \\<open>deg_pm tx \\<in> {..d}\\<close>"], ["proof (chain)\npicking this:\n  deg_pm tx \\<in> {..d}\n  t \\<in> (+) (monomial (d - deg_pm tx) x) ` deg_sect X (deg_pm tx)", "show \"t \\<in> ?B\""], ["proof (prove)\nusing this:\n  deg_pm tx \\<in> {..d}\n  t \\<in> (+) (monomial (d - deg_pm tx) x) ` deg_sect X (deg_pm tx)\n\ngoal (1 subgoal):\n 1. t \\<in> (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0)", ".."], ["proof (state)\nthis:\n  t \\<in> (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0)\n\ngoal (1 subgoal):\n 1. t \\<in> (\\<Union>d0\\<le>d.\n                (+) (monomial (d - d0) x) ` deg_sect X d0) \\<Longrightarrow>\n    t \\<in> deg_sect (insert x X) d", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<in> (\\<Union>d0\\<le>d.\n                (+) (monomial (d - d0) x) ` deg_sect X d0) \\<Longrightarrow>\n    t \\<in> deg_sect (insert x X) d", "assume \"t \\<in> ?B\""], ["proof (state)\nthis:\n  t \\<in> (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0)\n\ngoal (1 subgoal):\n 1. t \\<in> (\\<Union>d0\\<le>d.\n                (+) (monomial (d - d0) x) ` deg_sect X d0) \\<Longrightarrow>\n    t \\<in> deg_sect (insert x X) d", "then"], ["proof (chain)\npicking this:\n  t \\<in> (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0)", "obtain d0 where \"d0 \\<in> {..d}\" and \"t \\<in> (+) (Poly_Mapping.single x (d - d0)) ` deg_sect X d0\""], ["proof (prove)\nusing this:\n  t \\<in> (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0)\n\ngoal (1 subgoal):\n 1. (\\<And>d0.\n        \\<lbrakk>d0 \\<in> {..d};\n         t \\<in> (+) (monomial (d - d0) x) ` deg_sect X d0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  d0 \\<in> {..d}\n  t \\<in> (+) (monomial (d - d0) x) ` deg_sect X d0\n\ngoal (1 subgoal):\n 1. t \\<in> (\\<Union>d0\\<le>d.\n                (+) (monomial (d - d0) x) ` deg_sect X d0) \\<Longrightarrow>\n    t \\<in> deg_sect (insert x X) d", "from this(2)"], ["proof (chain)\npicking this:\n  t \\<in> (+) (monomial (d - d0) x) ` deg_sect X d0", "obtain s where s: \"s \\<in> deg_sect X d0\"\n      and t: \"t = Poly_Mapping.single x (d - d0) + s\" (is \"t = ?s + s\")"], ["proof (prove)\nusing this:\n  t \\<in> (+) (monomial (d - d0) x) ` deg_sect X d0\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> deg_sect X d0; t = monomial (d - d0) x + s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  s \\<in> deg_sect X d0\n  t = monomial (d - d0) x + s\n\ngoal (1 subgoal):\n 1. t \\<in> (\\<Union>d0\\<le>d.\n                (+) (monomial (d - d0) x) ` deg_sect X d0) \\<Longrightarrow>\n    t \\<in> deg_sect (insert x X) d", "show \"t \\<in> ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> deg_sect (insert x X) d", "proof (rule deg_sectI)"], ["proof (state)\ngoal (2 subgoals):\n 1. t \\<in> .[insert x X]\n 2. deg_pm t = d", "have \"?s \\<in> .[insert x X]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monomial (d - d0) x \\<in> .[insert x X]", "by (rule PPs_closed_single, simp)"], ["proof (state)\nthis:\n  monomial (d - d0) x \\<in> .[insert x X]\n\ngoal (2 subgoals):\n 1. t \\<in> .[insert x X]\n 2. deg_pm t = d", "from s"], ["proof (chain)\npicking this:\n  s \\<in> deg_sect X d0", "have \"s \\<in> .[X]\""], ["proof (prove)\nusing this:\n  s \\<in> deg_sect X d0\n\ngoal (1 subgoal):\n 1. s \\<in> .[X]", "by (rule deg_sectD)"], ["proof (state)\nthis:\n  s \\<in> .[X]\n\ngoal (2 subgoals):\n 1. t \\<in> .[insert x X]\n 2. deg_pm t = d", "also"], ["proof (state)\nthis:\n  s \\<in> .[X]\n\ngoal (2 subgoals):\n 1. t \\<in> .[insert x X]\n 2. deg_pm t = d", "have \"... \\<subseteq> .[insert x X]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. .[X] \\<subseteq> .[insert x X]", "by (rule PPs_mono, blast)"], ["proof (state)\nthis:\n  .[X] \\<subseteq> .[insert x X]\n\ngoal (2 subgoals):\n 1. t \\<in> .[insert x X]\n 2. deg_pm t = d", "finally"], ["proof (chain)\npicking this:\n  s \\<in> .[insert x X]", "have \"s \\<in> .[insert x X]\""], ["proof (prove)\nusing this:\n  s \\<in> .[insert x X]\n\ngoal (1 subgoal):\n 1. s \\<in> .[insert x X]", "."], ["proof (state)\nthis:\n  s \\<in> .[insert x X]\n\ngoal (2 subgoals):\n 1. t \\<in> .[insert x X]\n 2. deg_pm t = d", "with \\<open>?s \\<in> .[insert x X]\\<close>"], ["proof (chain)\npicking this:\n  monomial (d - d0) x \\<in> .[insert x X]\n  s \\<in> .[insert x X]", "show \"t \\<in> .[insert x X]\""], ["proof (prove)\nusing this:\n  monomial (d - d0) x \\<in> .[insert x X]\n  s \\<in> .[insert x X]\n\ngoal (1 subgoal):\n 1. t \\<in> .[insert x X]", "unfolding t"], ["proof (prove)\nusing this:\n  monomial (d - d0) x \\<in> .[insert x X]\n  s \\<in> .[insert x X]\n\ngoal (1 subgoal):\n 1. monomial (d - d0) x + s \\<in> .[insert x X]", "by (rule PPs_closed_plus)"], ["proof (state)\nthis:\n  t \\<in> .[insert x X]\n\ngoal (1 subgoal):\n 1. deg_pm t = d", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. deg_pm t = d", "from s"], ["proof (chain)\npicking this:\n  s \\<in> deg_sect X d0", "have \"deg_pm s = d0\""], ["proof (prove)\nusing this:\n  s \\<in> deg_sect X d0\n\ngoal (1 subgoal):\n 1. deg_pm s = d0", "by (rule deg_sectD)"], ["proof (state)\nthis:\n  deg_pm s = d0\n\ngoal (1 subgoal):\n 1. deg_pm t = d", "moreover"], ["proof (state)\nthis:\n  deg_pm s = d0\n\ngoal (1 subgoal):\n 1. deg_pm t = d", "from \\<open>d0 \\<in> {..d}\\<close>"], ["proof (chain)\npicking this:\n  d0 \\<in> {..d}", "have \"d0 \\<le> d\""], ["proof (prove)\nusing this:\n  d0 \\<in> {..d}\n\ngoal (1 subgoal):\n 1. d0 \\<le> d", "by simp"], ["proof (state)\nthis:\n  d0 \\<le> d\n\ngoal (1 subgoal):\n 1. deg_pm t = d", "ultimately"], ["proof (chain)\npicking this:\n  deg_pm s = d0\n  d0 \\<le> d", "show \"deg_pm t = d\""], ["proof (prove)\nusing this:\n  deg_pm s = d0\n  d0 \\<le> d\n\ngoal (1 subgoal):\n 1. deg_pm t = d", "by (simp add: t deg_pm_single deg_pm_plus)"], ["proof (state)\nthis:\n  deg_pm t = d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t \\<in> deg_sect (insert x X) d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (t \\<in> deg_sect (insert x X) d) =\n  (t \\<in> (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma deg_le_sect_Suc: \"deg_le_sect X (Suc d) = deg_le_sect X d \\<union> deg_sect X (Suc d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deg_le_sect X (Suc d) = deg_le_sect X d \\<union> deg_sect X (Suc d)", "by (simp add: deg_le_sect_def atMost_Suc Un_commute)"], ["", "lemma deg_le_sect_Suc_2:\n  \"deg_le_sect X (Suc d) = insert 0 (\\<Union>x\\<in>X. (+) (Poly_Mapping.single x 1) ` deg_le_sect X d)\"\n    (is \"?A = ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. deg_le_sect X (Suc d) =\n    insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. deg_le_sect X (Suc d) =\n    insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)", "have eq1: \"{Suc 0..Suc d} = Suc ` {..d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {Suc 0..Suc d} = Suc ` {..d}", "by (simp add: image_Suc_atMost)"], ["proof (state)\nthis:\n  {Suc 0..Suc d} = Suc ` {..d}\n\ngoal (1 subgoal):\n 1. deg_le_sect X (Suc d) =\n    insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)", "have \"insert 0 {1..Suc d} = {..Suc d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert 0 {1..Suc d} = {..Suc d}", "by fastforce"], ["proof (state)\nthis:\n  insert 0 {1..Suc d} = {..Suc d}\n\ngoal (1 subgoal):\n 1. deg_le_sect X (Suc d) =\n    insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)", "hence \"?A = (\\<Union>d0\\<in>insert 0 {1..Suc d}. deg_sect X d0)\""], ["proof (prove)\nusing this:\n  insert 0 {1..Suc d} = {..Suc d}\n\ngoal (1 subgoal):\n 1. deg_le_sect X (Suc d) = \\<Union> (deg_sect X ` insert 0 {1..Suc d})", "by (simp add: deg_le_sect_def)"], ["proof (state)\nthis:\n  deg_le_sect X (Suc d) = \\<Union> (deg_sect X ` insert 0 {1..Suc d})\n\ngoal (1 subgoal):\n 1. deg_le_sect X (Suc d) =\n    insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)", "also"], ["proof (state)\nthis:\n  deg_le_sect X (Suc d) = \\<Union> (deg_sect X ` insert 0 {1..Suc d})\n\ngoal (1 subgoal):\n 1. deg_le_sect X (Suc d) =\n    insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)", "have \"... = insert 0 (\\<Union>d0\\<le>d. deg_sect X (Suc d0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (deg_sect X ` insert 0 {1..Suc d}) =\n    insert 0 (\\<Union>d0\\<le>d. deg_sect X (Suc d0))", "by (simp add: eq1)"], ["proof (state)\nthis:\n  \\<Union> (deg_sect X ` insert 0 {1..Suc d}) =\n  insert 0 (\\<Union>d0\\<le>d. deg_sect X (Suc d0))\n\ngoal (1 subgoal):\n 1. deg_le_sect X (Suc d) =\n    insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)", "also"], ["proof (state)\nthis:\n  \\<Union> (deg_sect X ` insert 0 {1..Suc d}) =\n  insert 0 (\\<Union>d0\\<le>d. deg_sect X (Suc d0))\n\ngoal (1 subgoal):\n 1. deg_le_sect X (Suc d) =\n    insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)", "have \"... = insert 0 (\\<Union>d0\\<le>d. (\\<Union>x\\<in>X. (+) (Poly_Mapping.single x 1) ` deg_sect X d0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert 0 (\\<Union>d0\\<le>d. deg_sect X (Suc d0)) =\n    insert 0\n     (\\<Union>d0\\<le>d. \\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d0)", "by (simp only: deg_sect_Suc)"], ["proof (state)\nthis:\n  insert 0 (\\<Union>d0\\<le>d. deg_sect X (Suc d0)) =\n  insert 0\n   (\\<Union>d0\\<le>d. \\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d0)\n\ngoal (1 subgoal):\n 1. deg_le_sect X (Suc d) =\n    insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)", "also"], ["proof (state)\nthis:\n  insert 0 (\\<Union>d0\\<le>d. deg_sect X (Suc d0)) =\n  insert 0\n   (\\<Union>d0\\<le>d. \\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d0)\n\ngoal (1 subgoal):\n 1. deg_le_sect X (Suc d) =\n    insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)", "have \"... = insert 0 (\\<Union>x\\<in>X. (+) (Poly_Mapping.single x 1) ` (\\<Union>d0\\<le>d. deg_sect X d0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert 0\n     (\\<Union>d0\\<le>d.\n         \\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d0) =\n    insert 0\n     (\\<Union>x\\<in>X. (+) (monomial 1 x) ` \\<Union> (deg_sect X ` {..d}))", "by fastforce"], ["proof (state)\nthis:\n  insert 0\n   (\\<Union>d0\\<le>d. \\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d0) =\n  insert 0\n   (\\<Union>x\\<in>X. (+) (monomial 1 x) ` \\<Union> (deg_sect X ` {..d}))\n\ngoal (1 subgoal):\n 1. deg_le_sect X (Suc d) =\n    insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)", "also"], ["proof (state)\nthis:\n  insert 0\n   (\\<Union>d0\\<le>d. \\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_sect X d0) =\n  insert 0\n   (\\<Union>x\\<in>X. (+) (monomial 1 x) ` \\<Union> (deg_sect X ` {..d}))\n\ngoal (1 subgoal):\n 1. deg_le_sect X (Suc d) =\n    insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)", "have \"... = ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert 0\n     (\\<Union>x\\<in>X. (+) (monomial 1 x) ` \\<Union> (deg_sect X ` {..d})) =\n    insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)", "by (simp only: deg_le_sect_def)"], ["proof (state)\nthis:\n  insert 0\n   (\\<Union>x\\<in>X. (+) (monomial 1 x) ` \\<Union> (deg_sect X ` {..d})) =\n  insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)\n\ngoal (1 subgoal):\n 1. deg_le_sect X (Suc d) =\n    insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)", "finally"], ["proof (chain)\npicking this:\n  deg_le_sect X (Suc d) =\n  insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)", "show ?thesis"], ["proof (prove)\nusing this:\n  deg_le_sect X (Suc d) =\n  insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)\n\ngoal (1 subgoal):\n 1. deg_le_sect X (Suc d) =\n    insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)", "."], ["proof (state)\nthis:\n  deg_le_sect X (Suc d) =\n  insert 0 (\\<Union>x\\<in>X. (+) (monomial 1 x) ` deg_le_sect X d)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_deg_sect:\n  assumes \"finite X\"\n  shows \"finite ((deg_sect X d)::('x::countable \\<Rightarrow>\\<^sub>0 nat) set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (deg_sect X d)", "proof (induct d)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (deg_sect X 0)\n 2. \\<And>d.\n       finite (deg_sect X d) \\<Longrightarrow> finite (deg_sect X (Suc d))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. finite (deg_sect X 0)\n 2. \\<And>d.\n       finite (deg_sect X d) \\<Longrightarrow> finite (deg_sect X (Suc d))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (deg_sect X 0)", "by simp"], ["proof (state)\nthis:\n  finite (deg_sect X 0)\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       finite (deg_sect X d) \\<Longrightarrow> finite (deg_sect X (Suc d))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d.\n       finite (deg_sect X d) \\<Longrightarrow> finite (deg_sect X (Suc d))", "case (Suc d)"], ["proof (state)\nthis:\n  finite (deg_sect X d)\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       finite (deg_sect X d) \\<Longrightarrow> finite (deg_sect X (Suc d))", "with assms"], ["proof (chain)\npicking this:\n  finite X\n  finite (deg_sect X d)", "show ?case"], ["proof (prove)\nusing this:\n  finite X\n  finite (deg_sect X d)\n\ngoal (1 subgoal):\n 1. finite (deg_sect X (Suc d))", "by (simp add: deg_sect_Suc)"], ["proof (state)\nthis:\n  finite (deg_sect X (Suc d))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary finite_deg_le_sect: \"finite X \\<Longrightarrow> finite ((deg_le_sect X d)::('x::countable \\<Rightarrow>\\<^sub>0 nat) set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite X \\<Longrightarrow> finite (deg_le_sect X d)", "by (simp add: deg_le_sect_def finite_deg_sect)"], ["", "lemma keys_subset_deg_le_sectI:\n  assumes \"p \\<in> P[X]\" and \"poly_deg p \\<le> d\"\n  shows \"keys p \\<subseteq> deg_le_sect X d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. keys p \\<subseteq> deg_le_sect X d", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> keys p \\<Longrightarrow> x \\<in> deg_le_sect X d", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> keys p \\<Longrightarrow> x \\<in> deg_le_sect X d", "assume \"t \\<in> keys p\""], ["proof (state)\nthis:\n  t \\<in> keys p\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> keys p \\<Longrightarrow> x \\<in> deg_le_sect X d", "also"], ["proof (state)\nthis:\n  t \\<in> keys p\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> keys p \\<Longrightarrow> x \\<in> deg_le_sect X d", "from assms(1)"], ["proof (chain)\npicking this:\n  p \\<in> P[X]", "have \"... \\<subseteq> .[X]\""], ["proof (prove)\nusing this:\n  p \\<in> P[X]\n\ngoal (1 subgoal):\n 1. keys p \\<subseteq> .[X]", "by (rule PolysD)"], ["proof (state)\nthis:\n  keys p \\<subseteq> .[X]\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> keys p \\<Longrightarrow> x \\<in> deg_le_sect X d", "finally"], ["proof (chain)\npicking this:\n  t \\<in> .[X]", "have \"t \\<in> .[X]\""], ["proof (prove)\nusing this:\n  t \\<in> .[X]\n\ngoal (1 subgoal):\n 1. t \\<in> .[X]", "."], ["proof (state)\nthis:\n  t \\<in> .[X]\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> keys p \\<Longrightarrow> x \\<in> deg_le_sect X d", "from \\<open>t \\<in> keys p\\<close>"], ["proof (chain)\npicking this:\n  t \\<in> keys p", "have \"deg_pm t \\<le> poly_deg p\""], ["proof (prove)\nusing this:\n  t \\<in> keys p\n\ngoal (1 subgoal):\n 1. deg_pm t \\<le> poly_deg p", "by (rule poly_deg_max_keys)"], ["proof (state)\nthis:\n  deg_pm t \\<le> poly_deg p\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> keys p \\<Longrightarrow> x \\<in> deg_le_sect X d", "from this assms(2)"], ["proof (chain)\npicking this:\n  deg_pm t \\<le> poly_deg p\n  poly_deg p \\<le> d", "have \"deg_pm t \\<le> d\""], ["proof (prove)\nusing this:\n  deg_pm t \\<le> poly_deg p\n  poly_deg p \\<le> d\n\ngoal (1 subgoal):\n 1. deg_pm t \\<le> d", "by (rule le_trans)"], ["proof (state)\nthis:\n  deg_pm t \\<le> d\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> keys p \\<Longrightarrow> x \\<in> deg_le_sect X d", "with \\<open>t \\<in> .[X]\\<close>"], ["proof (chain)\npicking this:\n  t \\<in> .[X]\n  deg_pm t \\<le> d", "show \"t \\<in> deg_le_sect X d\""], ["proof (prove)\nusing this:\n  t \\<in> .[X]\n  deg_pm t \\<le> d\n\ngoal (1 subgoal):\n 1. t \\<in> deg_le_sect X d", "by (rule deg_le_sectI)"], ["proof (state)\nthis:\n  t \\<in> deg_le_sect X d\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma binomial_symmetric_plus: \"(n + k) choose n = (n + k) choose k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n + k choose n = n + k choose k", "by (metis add_diff_cancel_left' binomial_symmetric le_add1)"], ["", "lemma card_deg_sect:\n  assumes \"finite X\" and \"X \\<noteq> {}\"\n  shows \"card (deg_sect X d) = (d + (card X - 1)) choose (card X - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (deg_sect X d) = d + (card X - 1) choose (card X - 1)", "using assms"], ["proof (prove)\nusing this:\n  finite X\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. card (deg_sect X d) = d + (card X - 1) choose (card X - 1)", "proof (induct X arbitrary: d)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d.\n       {} \\<noteq> {} \\<Longrightarrow>\n       card (deg_sect {} d) = d + (card {} - 1) choose (card {} - 1)\n 2. \\<And>x F d.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>d.\n           F \\<noteq> {} \\<Longrightarrow>\n           card (deg_sect F d) = d + (card F - 1) choose (card F - 1);\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> card (deg_sect (insert x F) d) =\n                         d + (card (insert x F) - 1) choose\n                         (card (insert x F) - 1)", "case empty"], ["proof (state)\nthis:\n  {} \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>d.\n       {} \\<noteq> {} \\<Longrightarrow>\n       card (deg_sect {} d) = d + (card {} - 1) choose (card {} - 1)\n 2. \\<And>x F d.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>d.\n           F \\<noteq> {} \\<Longrightarrow>\n           card (deg_sect F d) = d + (card F - 1) choose (card F - 1);\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> card (deg_sect (insert x F) d) =\n                         d + (card (insert x F) - 1) choose\n                         (card (insert x F) - 1)", "thus ?case"], ["proof (prove)\nusing this:\n  {} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. card (deg_sect {} d) = d + (card {} - 1) choose (card {} - 1)", "by simp"], ["proof (state)\nthis:\n  card (deg_sect {} d) = d + (card {} - 1) choose (card {} - 1)\n\ngoal (1 subgoal):\n 1. \\<And>x F d.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>d.\n           F \\<noteq> {} \\<Longrightarrow>\n           card (deg_sect F d) = d + (card F - 1) choose (card F - 1);\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> card (deg_sect (insert x F) d) =\n                         d + (card (insert x F) - 1) choose\n                         (card (insert x F) - 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F d.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>d.\n           F \\<noteq> {} \\<Longrightarrow>\n           card (deg_sect F d) = d + (card F - 1) choose (card F - 1);\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> card (deg_sect (insert x F) d) =\n                         d + (card (insert x F) - 1) choose\n                         (card (insert x F) - 1)", "case (insert x X)"], ["proof (state)\nthis:\n  finite X\n  x \\<notin> X\n  X \\<noteq> {} \\<Longrightarrow>\n  card (deg_sect X ?d) = ?d + (card X - 1) choose (card X - 1)\n  insert x X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x F d.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>d.\n           F \\<noteq> {} \\<Longrightarrow>\n           card (deg_sect F d) = d + (card F - 1) choose (card F - 1);\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> card (deg_sect (insert x F) d) =\n                         d + (card (insert x F) - 1) choose\n                         (card (insert x F) - 1)", "from insert(1, 2)"], ["proof (chain)\npicking this:\n  finite X\n  x \\<notin> X", "have eq1: \"card (insert x X) = Suc (card X)\""], ["proof (prove)\nusing this:\n  finite X\n  x \\<notin> X\n\ngoal (1 subgoal):\n 1. card (insert x X) = Suc (card X)", "by simp"], ["proof (state)\nthis:\n  card (insert x X) = Suc (card X)\n\ngoal (1 subgoal):\n 1. \\<And>x F d.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>d.\n           F \\<noteq> {} \\<Longrightarrow>\n           card (deg_sect F d) = d + (card F - 1) choose (card F - 1);\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> card (deg_sect (insert x F) d) =\n                         d + (card (insert x F) - 1) choose\n                         (card (insert x F) - 1)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "proof (cases \"X = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. X = {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)\n 2. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "case True"], ["proof (state)\nthis:\n  X = {}\n\ngoal (2 subgoals):\n 1. X = {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)\n 2. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  X = {}\n\ngoal (1 subgoal):\n 1. card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "by simp"], ["proof (state)\nthis:\n  card (deg_sect (insert x X) d) =\n  d + (card (insert x X) - 1) choose (card (insert x X) - 1)\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "case False"], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "with insert.hyps(1)"], ["proof (chain)\npicking this:\n  finite X\n  X \\<noteq> {}", "have \"0 < card X\""], ["proof (prove)\nusing this:\n  finite X\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < card X", "by (simp add: card_gt_0_iff)"], ["proof (state)\nthis:\n  0 < card X\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "let ?f = \"\\<lambda>d0. Poly_Mapping.single x (d - d0)\""], ["proof (state)\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "from False"], ["proof (chain)\npicking this:\n  X \\<noteq> {}", "have eq2: \"card (deg_sect X d0) = d0 + (card X - 1) choose (card X - 1)\" for d0"], ["proof (prove)\nusing this:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. card (deg_sect X d0) = d0 + (card X - 1) choose (card X - 1)", "by (rule insert.hyps)"], ["proof (state)\nthis:\n  card (deg_sect X ?d0.0) = ?d0.0 + (card X - 1) choose (card X - 1)\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "have \"finite {..d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {..d}", "by simp"], ["proof (state)\nthis:\n  finite {..d}\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "moreover"], ["proof (state)\nthis:\n  finite {..d}\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "from insert.hyps(1)"], ["proof (chain)\npicking this:\n  finite X", "have \"\\<forall>d0\\<in>{..d}. finite ((+) (?f d0) ` deg_sect X d0)\""], ["proof (prove)\nusing this:\n  finite X\n\ngoal (1 subgoal):\n 1. \\<forall>d0\\<in>{..d}.\n       finite ((+) (monomial (d - d0) x) ` deg_sect X d0)", "by (simp add: finite_deg_sect)"], ["proof (state)\nthis:\n  \\<forall>d0\\<in>{..d}. finite ((+) (monomial (d - d0) x) ` deg_sect X d0)\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "moreover"], ["proof (state)\nthis:\n  \\<forall>d0\\<in>{..d}. finite ((+) (monomial (d - d0) x) ` deg_sect X d0)\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "have \"\\<forall>d0\\<in>{..d}. \\<forall>d1\\<in>{..d}. d0 \\<noteq> d1 \\<longrightarrow>\n                          ((+) (?f d0) ` deg_sect X d0) \\<inter> ((+) (?f d1) ` deg_sect X d1) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>d0\\<in>{..d}.\n       \\<forall>d1\\<in>{..d}.\n          d0 \\<noteq> d1 \\<longrightarrow>\n          (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n          (+) (monomial (d - d1) x) ` deg_sect X d1 =\n          {}", "proof (intro ballI impI, rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "fix d1 d2 :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"d1 \\<noteq> d2\""], ["proof (state)\nthis:\n  d1 \\<noteq> d2\n\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"((+) (?f d1) ` deg_sect X d1) \\<inter> ((+) (?f d2) ` deg_sect X d2) \\<noteq> {}\""], ["proof (state)\nthis:\n  (+) (monomial (d - d1) x) ` deg_sect X d1 \\<inter>\n  (+) (monomial (d - d2) x) ` deg_sect X d2 \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (+) (monomial (d - d1) x) ` deg_sect X d1 \\<inter>\n  (+) (monomial (d - d2) x) ` deg_sect X d2 \\<noteq>\n  {}", "obtain t where \"t \\<in> ((+) (?f d1) ` deg_sect X d1) \\<inter> ((+) (?f d2) ` deg_sect X d2)\""], ["proof (prove)\nusing this:\n  (+) (monomial (d - d1) x) ` deg_sect X d1 \\<inter>\n  (+) (monomial (d - d2) x) ` deg_sect X d2 \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        t \\<in> (+) (monomial (d - d1) x) ` deg_sect X d1 \\<inter>\n                (+) (monomial (d - d2) x) ` deg_sect X d2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t \\<in> (+) (monomial (d - d1) x) ` deg_sect X d1 \\<inter>\n          (+) (monomial (d - d2) x) ` deg_sect X d2\n\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "hence t1: \"t \\<in> (+) (?f d1) ` deg_sect X d1\" and t2: \"t \\<in> (+) (?f d2) ` deg_sect X d2\""], ["proof (prove)\nusing this:\n  t \\<in> (+) (monomial (d - d1) x) ` deg_sect X d1 \\<inter>\n          (+) (monomial (d - d2) x) ` deg_sect X d2\n\ngoal (1 subgoal):\n 1. t \\<in> (+) (monomial (d - d1) x) ` deg_sect X d1 &&&\n    t \\<in> (+) (monomial (d - d2) x) ` deg_sect X d2", "by simp_all"], ["proof (state)\nthis:\n  t \\<in> (+) (monomial (d - d1) x) ` deg_sect X d1\n  t \\<in> (+) (monomial (d - d2) x) ` deg_sect X d2\n\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "from t1"], ["proof (chain)\npicking this:\n  t \\<in> (+) (monomial (d - d1) x) ` deg_sect X d1", "obtain s1 where \"s1 \\<in> deg_sect X d1\" and s1: \"t = ?f d1 + s1\""], ["proof (prove)\nusing this:\n  t \\<in> (+) (monomial (d - d1) x) ` deg_sect X d1\n\ngoal (1 subgoal):\n 1. (\\<And>s1.\n        \\<lbrakk>s1 \\<in> deg_sect X d1;\n         t = monomial (d - d1) x + s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  s1 \\<in> deg_sect X d1\n  t = monomial (d - d1) x + s1\n\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "from this(1)"], ["proof (chain)\npicking this:\n  s1 \\<in> deg_sect X d1", "have \"s1 \\<in> .[X]\""], ["proof (prove)\nusing this:\n  s1 \\<in> deg_sect X d1\n\ngoal (1 subgoal):\n 1. s1 \\<in> .[X]", "by (rule deg_sectD)"], ["proof (state)\nthis:\n  s1 \\<in> .[X]\n\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"keys s1 \\<subseteq> X\""], ["proof (prove)\nusing this:\n  s1 \\<in> .[X]\n\ngoal (1 subgoal):\n 1. keys s1 \\<subseteq> X", "by (rule PPsD)"], ["proof (state)\nthis:\n  keys s1 \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "with insert.hyps(2)"], ["proof (chain)\npicking this:\n  x \\<notin> X\n  keys s1 \\<subseteq> X", "have eq3: \"lookup s1 x = 0\""], ["proof (prove)\nusing this:\n  x \\<notin> X\n  keys s1 \\<subseteq> X\n\ngoal (1 subgoal):\n 1. lookup s1 x = 0", "by (auto simp: in_keys_iff)"], ["proof (state)\nthis:\n  lookup s1 x = 0\n\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "from t2"], ["proof (chain)\npicking this:\n  t \\<in> (+) (monomial (d - d2) x) ` deg_sect X d2", "obtain s2 where \"s2 \\<in> deg_sect X d2\" and s2: \"t = ?f d2 + s2\""], ["proof (prove)\nusing this:\n  t \\<in> (+) (monomial (d - d2) x) ` deg_sect X d2\n\ngoal (1 subgoal):\n 1. (\\<And>s2.\n        \\<lbrakk>s2 \\<in> deg_sect X d2;\n         t = monomial (d - d2) x + s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  s2 \\<in> deg_sect X d2\n  t = monomial (d - d2) x + s2\n\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "from this(1)"], ["proof (chain)\npicking this:\n  s2 \\<in> deg_sect X d2", "have \"s2 \\<in> .[X]\""], ["proof (prove)\nusing this:\n  s2 \\<in> deg_sect X d2\n\ngoal (1 subgoal):\n 1. s2 \\<in> .[X]", "by (rule deg_sectD)"], ["proof (state)\nthis:\n  s2 \\<in> .[X]\n\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"keys s2 \\<subseteq> X\""], ["proof (prove)\nusing this:\n  s2 \\<in> .[X]\n\ngoal (1 subgoal):\n 1. keys s2 \\<subseteq> X", "by (rule PPsD)"], ["proof (state)\nthis:\n  keys s2 \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "with insert.hyps(2)"], ["proof (chain)\npicking this:\n  x \\<notin> X\n  keys s2 \\<subseteq> X", "have eq4: \"lookup s2 x = 0\""], ["proof (prove)\nusing this:\n  x \\<notin> X\n  keys s2 \\<subseteq> X\n\ngoal (1 subgoal):\n 1. lookup s2 x = 0", "by (auto simp: in_keys_iff)"], ["proof (state)\nthis:\n  lookup s2 x = 0\n\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "from s2"], ["proof (chain)\npicking this:\n  t = monomial (d - d2) x + s2", "have \"lookup (?f d1 + s1) x = lookup (?f d2 + s2) x\""], ["proof (prove)\nusing this:\n  t = monomial (d - d2) x + s2\n\ngoal (1 subgoal):\n 1. lookup (monomial (d - d1) x + s1) x =\n    lookup (monomial (d - d2) x + s2) x", "by (simp only: s1)"], ["proof (state)\nthis:\n  lookup (monomial (d - d1) x + s1) x = lookup (monomial (d - d2) x + s2) x\n\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"d - d1 = d - d2\""], ["proof (prove)\nusing this:\n  lookup (monomial (d - d1) x + s1) x = lookup (monomial (d - d2) x + s2) x\n\ngoal (1 subgoal):\n 1. d - d1 = d - d2", "by (simp add: lookup_add eq3 eq4)"], ["proof (state)\nthis:\n  d - d1 = d - d2\n\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  d - d1 = d - d2\n\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"d1 \\<in> {..d}\" and \"d2 \\<in> {..d}\""], ["proof (state)\nthis:\n  d1 \\<in> {..d}\n  d2 \\<in> {..d}\n\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  d - d1 = d - d2\n  d1 \\<in> {..d}\n  d2 \\<in> {..d}", "have \"d1 = d2\""], ["proof (prove)\nusing this:\n  d - d1 = d - d2\n  d1 \\<in> {..d}\n  d2 \\<in> {..d}\n\ngoal (1 subgoal):\n 1. d1 = d2", "by simp"], ["proof (state)\nthis:\n  d1 = d2\n\ngoal (1 subgoal):\n 1. \\<And>d0 d1.\n       \\<lbrakk>d0 \\<in> {..d}; d1 \\<in> {..d}; d0 \\<noteq> d1;\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "with \\<open>d1 \\<noteq> d2\\<close>"], ["proof (chain)\npicking this:\n  d1 \\<noteq> d2\n  d1 = d2", "show False"], ["proof (prove)\nusing this:\n  d1 \\<noteq> d2\n  d1 = d2\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>d0\\<in>{..d}.\n     \\<forall>d1\\<in>{..d}.\n        d0 \\<noteq> d1 \\<longrightarrow>\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 =\n        {}\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "ultimately"], ["proof (chain)\npicking this:\n  finite {..d}\n  \\<forall>d0\\<in>{..d}. finite ((+) (monomial (d - d0) x) ` deg_sect X d0)\n  \\<forall>d0\\<in>{..d}.\n     \\<forall>d1\\<in>{..d}.\n        d0 \\<noteq> d1 \\<longrightarrow>\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 =\n        {}", "have \"card (deg_sect (insert x X) d) =\n                       (\\<Sum>d0\\<le>d. card ((+) (monomial (d - d0) x) ` deg_sect X d0))\""], ["proof (prove)\nusing this:\n  finite {..d}\n  \\<forall>d0\\<in>{..d}. finite ((+) (monomial (d - d0) x) ` deg_sect X d0)\n  \\<forall>d0\\<in>{..d}.\n     \\<forall>d1\\<in>{..d}.\n        d0 \\<noteq> d1 \\<longrightarrow>\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 =\n        {}\n\ngoal (1 subgoal):\n 1. card (deg_sect (insert x X) d) =\n    (\\<Sum>d0\\<le>d. card ((+) (monomial (d - d0) x) ` deg_sect X d0))", "unfolding deg_sect_insert"], ["proof (prove)\nusing this:\n  finite {..d}\n  \\<forall>d0\\<in>{..d}. finite ((+) (monomial (d - d0) x) ` deg_sect X d0)\n  \\<forall>d0\\<in>{..d}.\n     \\<forall>d1\\<in>{..d}.\n        d0 \\<noteq> d1 \\<longrightarrow>\n        (+) (monomial (d - d0) x) ` deg_sect X d0 \\<inter>\n        (+) (monomial (d - d1) x) ` deg_sect X d1 =\n        {}\n\ngoal (1 subgoal):\n 1. card (\\<Union>d0\\<le>d. (+) (monomial (d - d0) x) ` deg_sect X d0) =\n    (\\<Sum>d0\\<le>d. card ((+) (monomial (d - d0) x) ` deg_sect X d0))", "by (rule card_UN_disjoint)"], ["proof (state)\nthis:\n  card (deg_sect (insert x X) d) =\n  (\\<Sum>d0\\<le>d. card ((+) (monomial (d - d0) x) ` deg_sect X d0))\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "also"], ["proof (state)\nthis:\n  card (deg_sect (insert x X) d) =\n  (\\<Sum>d0\\<le>d. card ((+) (monomial (d - d0) x) ` deg_sect X d0))\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "from refl"], ["proof (chain)\npicking this:\n  ?t = ?t", "have \"... = (\\<Sum>d0\\<le>d. card (deg_sect X d0))\""], ["proof (prove)\nusing this:\n  ?t = ?t\n\ngoal (1 subgoal):\n 1. (\\<Sum>d0\\<le>d. card ((+) (monomial (d - d0) x) ` deg_sect X d0)) =\n    (\\<Sum>d0\\<le>d. card (deg_sect X d0))", "proof (rule sum.cong)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {..d} \\<Longrightarrow>\n       card ((+) (monomial (d - xa) x) ` deg_sect X xa) =\n       card (deg_sect X xa)", "fix d0"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {..d} \\<Longrightarrow>\n       card ((+) (monomial (d - xa) x) ` deg_sect X xa) =\n       card (deg_sect X xa)", "have \"inj_on ((+) (monomial (d - d0) x)) (deg_sect X d0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on ((+) (monomial (d - d0) x)) (deg_sect X d0)", "by (rule, rule add_left_imp_eq)"], ["proof (state)\nthis:\n  inj_on ((+) (monomial (d - d0) x)) (deg_sect X d0)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {..d} \\<Longrightarrow>\n       card ((+) (monomial (d - xa) x) ` deg_sect X xa) =\n       card (deg_sect X xa)", "thus \"card ((+) (monomial (d - d0) x) ` deg_sect X d0) = card (deg_sect X d0)\""], ["proof (prove)\nusing this:\n  inj_on ((+) (monomial (d - d0) x)) (deg_sect X d0)\n\ngoal (1 subgoal):\n 1. card ((+) (monomial (d - d0) x) ` deg_sect X d0) = card (deg_sect X d0)", "by (rule card_image)"], ["proof (state)\nthis:\n  card ((+) (monomial (d - d0) x) ` deg_sect X d0) = card (deg_sect X d0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>d0\\<le>d. card ((+) (monomial (d - d0) x) ` deg_sect X d0)) =\n  (\\<Sum>d0\\<le>d. card (deg_sect X d0))\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "also"], ["proof (state)\nthis:\n  (\\<Sum>d0\\<le>d. card ((+) (monomial (d - d0) x) ` deg_sect X d0)) =\n  (\\<Sum>d0\\<le>d. card (deg_sect X d0))\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "have \"... = (\\<Sum>d0\\<le>d. (card X - 1) + d0 choose (card X - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d0\\<le>d. card (deg_sect X d0)) =\n    (\\<Sum>d0\\<le>d. card X - 1 + d0 choose (card X - 1))", "by (simp only: eq2 add.commute)"], ["proof (state)\nthis:\n  (\\<Sum>d0\\<le>d. card (deg_sect X d0)) =\n  (\\<Sum>d0\\<le>d. card X - 1 + d0 choose (card X - 1))\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "also"], ["proof (state)\nthis:\n  (\\<Sum>d0\\<le>d. card (deg_sect X d0)) =\n  (\\<Sum>d0\\<le>d. card X - 1 + d0 choose (card X - 1))\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "have \"... = (\\<Sum>d0\\<le>d. (card X - 1) + d0 choose d0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d0\\<le>d. card X - 1 + d0 choose (card X - 1)) =\n    (\\<Sum>d0\\<le>d. card X - 1 + d0 choose d0)", "by (simp only: binomial_symmetric_plus)"], ["proof (state)\nthis:\n  (\\<Sum>d0\\<le>d. card X - 1 + d0 choose (card X - 1)) =\n  (\\<Sum>d0\\<le>d. card X - 1 + d0 choose d0)\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "also"], ["proof (state)\nthis:\n  (\\<Sum>d0\\<le>d. card X - 1 + d0 choose (card X - 1)) =\n  (\\<Sum>d0\\<le>d. card X - 1 + d0 choose d0)\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "have \"... = Suc ((card X - 1) + d) choose d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d0\\<le>d. card X - 1 + d0 choose d0) =\n    Suc (card X - 1 + d) choose d", "by (rule sum_choose_lower)"], ["proof (state)\nthis:\n  (\\<Sum>d0\\<le>d. card X - 1 + d0 choose d0) =\n  Suc (card X - 1 + d) choose d\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "also"], ["proof (state)\nthis:\n  (\\<Sum>d0\\<le>d. card X - 1 + d0 choose d0) =\n  Suc (card X - 1 + d) choose d\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "from \\<open>0 < card X\\<close>"], ["proof (chain)\npicking this:\n  0 < card X", "have \"... = d + (card (insert x X) - 1) choose d\""], ["proof (prove)\nusing this:\n  0 < card X\n\ngoal (1 subgoal):\n 1. Suc (card X - 1 + d) choose d = d + (card (insert x X) - 1) choose d", "by (simp add: eq1 add.commute)"], ["proof (state)\nthis:\n  Suc (card X - 1 + d) choose d = d + (card (insert x X) - 1) choose d\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "also"], ["proof (state)\nthis:\n  Suc (card X - 1 + d) choose d = d + (card (insert x X) - 1) choose d\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "have \"... = d + (card (insert x X) - 1) choose (card (insert x X) - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d + (card (insert x X) - 1) choose d =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "by (fact binomial_symmetric_plus)"], ["proof (state)\nthis:\n  d + (card (insert x X) - 1) choose d =\n  d + (card (insert x X) - 1) choose (card (insert x X) - 1)\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "finally"], ["proof (chain)\npicking this:\n  card (deg_sect (insert x X) d) =\n  d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  card (deg_sect (insert x X) d) =\n  d + (card (insert x X) - 1) choose (card (insert x X) - 1)\n\ngoal (1 subgoal):\n 1. card (deg_sect (insert x X) d) =\n    d + (card (insert x X) - 1) choose (card (insert x X) - 1)", "."], ["proof (state)\nthis:\n  card (deg_sect (insert x X) d) =\n  d + (card (insert x X) - 1) choose (card (insert x X) - 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card (deg_sect (insert x X) d) =\n  d + (card (insert x X) - 1) choose (card (insert x X) - 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary card_deg_sect_Suc:\n  assumes \"finite X\"\n  shows \"card (deg_sect X (Suc d)) = (d + card X) choose (Suc d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (deg_sect X (Suc d)) = d + card X choose Suc d", "proof (cases \"X = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. X = {} \\<Longrightarrow>\n    card (deg_sect X (Suc d)) = d + card X choose Suc d\n 2. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect X (Suc d)) = d + card X choose Suc d", "case True"], ["proof (state)\nthis:\n  X = {}\n\ngoal (2 subgoals):\n 1. X = {} \\<Longrightarrow>\n    card (deg_sect X (Suc d)) = d + card X choose Suc d\n 2. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect X (Suc d)) = d + card X choose Suc d", "thus ?thesis"], ["proof (prove)\nusing this:\n  X = {}\n\ngoal (1 subgoal):\n 1. card (deg_sect X (Suc d)) = d + card X choose Suc d", "by (simp add: deg_sect_empty)"], ["proof (state)\nthis:\n  card (deg_sect X (Suc d)) = d + card X choose Suc d\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect X (Suc d)) = d + card X choose Suc d", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect X (Suc d)) = d + card X choose Suc d", "case False"], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect X (Suc d)) = d + card X choose Suc d", "with assms"], ["proof (chain)\npicking this:\n  finite X\n  X \\<noteq> {}", "have \"0 < card X\""], ["proof (prove)\nusing this:\n  finite X\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < card X", "by (simp add: card_gt_0_iff)"], ["proof (state)\nthis:\n  0 < card X\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect X (Suc d)) = d + card X choose Suc d", "from assms False"], ["proof (chain)\npicking this:\n  finite X\n  X \\<noteq> {}", "have \"card (deg_sect X (Suc d)) = (Suc d + (card X - 1)) choose (card X - 1)\""], ["proof (prove)\nusing this:\n  finite X\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. card (deg_sect X (Suc d)) = Suc d + (card X - 1) choose (card X - 1)", "by (rule card_deg_sect)"], ["proof (state)\nthis:\n  card (deg_sect X (Suc d)) = Suc d + (card X - 1) choose (card X - 1)\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect X (Suc d)) = d + card X choose Suc d", "also"], ["proof (state)\nthis:\n  card (deg_sect X (Suc d)) = Suc d + (card X - 1) choose (card X - 1)\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect X (Suc d)) = d + card X choose Suc d", "have \"... = (Suc d + (card X - 1)) choose (Suc d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc d + (card X - 1) choose (card X - 1) =\n    Suc d + (card X - 1) choose Suc d", "by (rule sym, rule binomial_symmetric_plus)"], ["proof (state)\nthis:\n  Suc d + (card X - 1) choose (card X - 1) =\n  Suc d + (card X - 1) choose Suc d\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect X (Suc d)) = d + card X choose Suc d", "also"], ["proof (state)\nthis:\n  Suc d + (card X - 1) choose (card X - 1) =\n  Suc d + (card X - 1) choose Suc d\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect X (Suc d)) = d + card X choose Suc d", "from \\<open>0 < card X\\<close>"], ["proof (chain)\npicking this:\n  0 < card X", "have \"... = (d + card X) choose (Suc d)\""], ["proof (prove)\nusing this:\n  0 < card X\n\ngoal (1 subgoal):\n 1. Suc d + (card X - 1) choose Suc d = d + card X choose Suc d", "by simp"], ["proof (state)\nthis:\n  Suc d + (card X - 1) choose Suc d = d + card X choose Suc d\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    card (deg_sect X (Suc d)) = d + card X choose Suc d", "finally"], ["proof (chain)\npicking this:\n  card (deg_sect X (Suc d)) = d + card X choose Suc d", "show ?thesis"], ["proof (prove)\nusing this:\n  card (deg_sect X (Suc d)) = d + card X choose Suc d\n\ngoal (1 subgoal):\n 1. card (deg_sect X (Suc d)) = d + card X choose Suc d", "."], ["proof (state)\nthis:\n  card (deg_sect X (Suc d)) = d + card X choose Suc d\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary card_deg_le_sect:\n  assumes \"finite X\"\n  shows \"card (deg_le_sect X d) = (d + card X) choose card X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (deg_le_sect X d) = d + card X choose card X", "proof (induct d)"], ["proof (state)\ngoal (2 subgoals):\n 1. card (deg_le_sect X 0) = 0 + card X choose card X\n 2. \\<And>d.\n       card (deg_le_sect X d) = d + card X choose card X \\<Longrightarrow>\n       card (deg_le_sect X (Suc d)) = Suc d + card X choose card X", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. card (deg_le_sect X 0) = 0 + card X choose card X\n 2. \\<And>d.\n       card (deg_le_sect X d) = d + card X choose card X \\<Longrightarrow>\n       card (deg_le_sect X (Suc d)) = Suc d + card X choose card X", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. card (deg_le_sect X 0) = 0 + card X choose card X", "by simp"], ["proof (state)\nthis:\n  card (deg_le_sect X 0) = 0 + card X choose card X\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       card (deg_le_sect X d) = d + card X choose card X \\<Longrightarrow>\n       card (deg_le_sect X (Suc d)) = Suc d + card X choose card X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d.\n       card (deg_le_sect X d) = d + card X choose card X \\<Longrightarrow>\n       card (deg_le_sect X (Suc d)) = Suc d + card X choose card X", "case (Suc d)"], ["proof (state)\nthis:\n  card (deg_le_sect X d) = d + card X choose card X\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       card (deg_le_sect X d) = d + card X choose card X \\<Longrightarrow>\n       card (deg_le_sect X (Suc d)) = Suc d + card X choose card X", "from assms"], ["proof (chain)\npicking this:\n  finite X", "have \"finite (deg_le_sect X d)\""], ["proof (prove)\nusing this:\n  finite X\n\ngoal (1 subgoal):\n 1. finite (deg_le_sect X d)", "by (rule finite_deg_le_sect)"], ["proof (state)\nthis:\n  finite (deg_le_sect X d)\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       card (deg_le_sect X d) = d + card X choose card X \\<Longrightarrow>\n       card (deg_le_sect X (Suc d)) = Suc d + card X choose card X", "moreover"], ["proof (state)\nthis:\n  finite (deg_le_sect X d)\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       card (deg_le_sect X d) = d + card X choose card X \\<Longrightarrow>\n       card (deg_le_sect X (Suc d)) = Suc d + card X choose card X", "from assms"], ["proof (chain)\npicking this:\n  finite X", "have \"finite (deg_sect X (Suc d))\""], ["proof (prove)\nusing this:\n  finite X\n\ngoal (1 subgoal):\n 1. finite (deg_sect X (Suc d))", "by (rule finite_deg_sect)"], ["proof (state)\nthis:\n  finite (deg_sect X (Suc d))\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       card (deg_le_sect X d) = d + card X choose card X \\<Longrightarrow>\n       card (deg_le_sect X (Suc d)) = Suc d + card X choose card X", "moreover"], ["proof (state)\nthis:\n  finite (deg_sect X (Suc d))\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       card (deg_le_sect X d) = d + card X choose card X \\<Longrightarrow>\n       card (deg_le_sect X (Suc d)) = Suc d + card X choose card X", "from lessI"], ["proof (chain)\npicking this:\n  ?n < Suc ?n", "have \"deg_le_sect X d \\<inter> deg_sect X (Suc d) = {}\""], ["proof (prove)\nusing this:\n  ?n < Suc ?n\n\ngoal (1 subgoal):\n 1. deg_le_sect X d \\<inter> deg_sect X (Suc d) = {}", "by (rule deg_le_sect_deg_sect_disjoint)"], ["proof (state)\nthis:\n  deg_le_sect X d \\<inter> deg_sect X (Suc d) = {}\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       card (deg_le_sect X d) = d + card X choose card X \\<Longrightarrow>\n       card (deg_le_sect X (Suc d)) = Suc d + card X choose card X", "ultimately"], ["proof (chain)\npicking this:\n  finite (deg_le_sect X d)\n  finite (deg_sect X (Suc d))\n  deg_le_sect X d \\<inter> deg_sect X (Suc d) = {}", "have \"card (deg_le_sect X (Suc d)) = card (deg_le_sect X d) + card (deg_sect X (Suc d))\""], ["proof (prove)\nusing this:\n  finite (deg_le_sect X d)\n  finite (deg_sect X (Suc d))\n  deg_le_sect X d \\<inter> deg_sect X (Suc d) = {}\n\ngoal (1 subgoal):\n 1. card (deg_le_sect X (Suc d)) =\n    card (deg_le_sect X d) + card (deg_sect X (Suc d))", "unfolding deg_le_sect_Suc"], ["proof (prove)\nusing this:\n  finite (deg_le_sect X d)\n  finite (deg_sect X (Suc d))\n  deg_le_sect X d \\<inter> deg_sect X (Suc d) = {}\n\ngoal (1 subgoal):\n 1. card (deg_le_sect X d \\<union> deg_sect X (Suc d)) =\n    card (deg_le_sect X d) + card (deg_sect X (Suc d))", "by (rule card_Un_disjoint)"], ["proof (state)\nthis:\n  card (deg_le_sect X (Suc d)) =\n  card (deg_le_sect X d) + card (deg_sect X (Suc d))\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       card (deg_le_sect X d) = d + card X choose card X \\<Longrightarrow>\n       card (deg_le_sect X (Suc d)) = Suc d + card X choose card X", "also"], ["proof (state)\nthis:\n  card (deg_le_sect X (Suc d)) =\n  card (deg_le_sect X d) + card (deg_sect X (Suc d))\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       card (deg_le_sect X d) = d + card X choose card X \\<Longrightarrow>\n       card (deg_le_sect X (Suc d)) = Suc d + card X choose card X", "from assms"], ["proof (chain)\npicking this:\n  finite X", "have \"... = (Suc d + card X) choose Suc d\""], ["proof (prove)\nusing this:\n  finite X\n\ngoal (1 subgoal):\n 1. card (deg_le_sect X d) + card (deg_sect X (Suc d)) =\n    Suc d + card X choose Suc d", "by (simp add: Suc.hyps card_deg_sect_Suc binomial_symmetric_plus[of d])"], ["proof (state)\nthis:\n  card (deg_le_sect X d) + card (deg_sect X (Suc d)) =\n  Suc d + card X choose Suc d\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       card (deg_le_sect X d) = d + card X choose card X \\<Longrightarrow>\n       card (deg_le_sect X (Suc d)) = Suc d + card X choose card X", "also"], ["proof (state)\nthis:\n  card (deg_le_sect X d) + card (deg_sect X (Suc d)) =\n  Suc d + card X choose Suc d\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       card (deg_le_sect X d) = d + card X choose card X \\<Longrightarrow>\n       card (deg_le_sect X (Suc d)) = Suc d + card X choose card X", "have \"... = (Suc d + card X) choose card X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc d + card X choose Suc d = Suc d + card X choose card X", "by (rule binomial_symmetric_plus)"], ["proof (state)\nthis:\n  Suc d + card X choose Suc d = Suc d + card X choose card X\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       card (deg_le_sect X d) = d + card X choose card X \\<Longrightarrow>\n       card (deg_le_sect X (Suc d)) = Suc d + card X choose card X", "finally"], ["proof (chain)\npicking this:\n  card (deg_le_sect X (Suc d)) = Suc d + card X choose card X", "show ?case"], ["proof (prove)\nusing this:\n  card (deg_le_sect X (Suc d)) = Suc d + card X choose card X\n\ngoal (1 subgoal):\n 1. card (deg_le_sect X (Suc d)) = Suc d + card X choose card X", "."], ["proof (state)\nthis:\n  card (deg_le_sect X (Suc d)) = Suc d + card X choose card X\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* theory *)"]]}