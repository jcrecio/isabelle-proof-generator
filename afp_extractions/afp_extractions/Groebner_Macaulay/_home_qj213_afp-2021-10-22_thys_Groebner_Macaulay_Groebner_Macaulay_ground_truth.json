{"file_name": "/home/qj213/afp-2021-10-22/thys/Groebner_Macaulay/Groebner_Macaulay.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Groebner_Macaulay", "problem_names": ["lemma (in gd_term) Macaulay_list_is_GB:\n  assumes \"is_Groebner_basis G\" and \"pmdl (set ps) = pmdl G\" and \"G \\<subseteq> phull (set ps)\"\n  shows \"is_Groebner_basis (set (Macaulay_list ps))\"", "lemma set_deg_shifts:\n  \"set (deg_shifts d fs) = (\\<Union>f\\<in>set fs. (\\<lambda>t. punit.monom_mult 1 t f) ` (deg_le_sect X (d - poly_deg f)))\"", "lemma deg_shifts_superset: \"set fs \\<subseteq> set (deg_shifts d fs)\"", "lemma deg_shifts_mono:\n  assumes \"set fs \\<subseteq> set gs\"\n  shows \"set (deg_shifts d fs) \\<subseteq> set (deg_shifts d gs)\"", "lemma ideal_deg_shifts [simp]: \"ideal (set (deg_shifts d fs)) = ideal (set fs)\"", "lemma thm_2_3_6:\n  assumes \"set fs \\<subseteq> P[X]\" and \"is_GB_cofactor_bound (set fs) b\"\n  shows \"punit.is_Groebner_basis (set (punit.Macaulay_list (deg_shifts b fs)))\"", "lemma thm_2_3_7:\n  assumes \"set fs \\<subseteq> P[X]\" and \"is_GB_cofactor_bound (set fs) b\"\n  shows \"1 \\<in> ideal (set fs) \\<longleftrightarrow> 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma thm_2_3_6_indets:\n  assumes \"is_GB_cofactor_bound (set fs) b\"\n  shows \"punit.is_Groebner_basis (set (punit.Macaulay_list (deg_shifts (\\<Union>(indets ` (set fs))) b fs)))\"", "lemma thm_2_3_7_indets:\n  assumes \"is_GB_cofactor_bound (set fs) b\"\n  shows \"1 \\<in> ideal (set fs) \\<longleftrightarrow> 1 \\<in> set (punit.Macaulay_list (deg_shifts (\\<Union>(indets ` (set fs))) b fs))\""], "translations": [["", "lemma (in gd_term) Macaulay_list_is_GB:\n  assumes \"is_Groebner_basis G\" and \"pmdl (set ps) = pmdl G\" and \"G \\<subseteq> phull (set ps)\"\n  shows \"is_Groebner_basis (set (Macaulay_list ps))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis (set (Macaulay_list ps))", "proof (simp only: GB_alt_3_finite[OF finite_set] pmdl_Macaulay_list, intro ballI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl (set ps); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>set (Macaulay_list ps).\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl (set ps); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>set (Macaulay_list ps).\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "assume \"f \\<in> pmdl (set ps)\""], ["proof (state)\nthis:\n  f \\<in> pmdl (set ps)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl (set ps); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>set (Macaulay_list ps).\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "also"], ["proof (state)\nthis:\n  f \\<in> pmdl (set ps)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl (set ps); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>set (Macaulay_list ps).\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "from assms(2)"], ["proof (chain)\npicking this:\n  pmdl (set ps) = pmdl G", "have \"\\<dots> = pmdl G\""], ["proof (prove)\nusing this:\n  pmdl (set ps) = pmdl G\n\ngoal (1 subgoal):\n 1. pmdl (set ps) = pmdl G", "."], ["proof (state)\nthis:\n  pmdl (set ps) = pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl (set ps); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>set (Macaulay_list ps).\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "finally"], ["proof (chain)\npicking this:\n  f \\<in> pmdl G", "have \"f \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  f \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. f \\<in> pmdl G", "."], ["proof (state)\nthis:\n  f \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl (set ps); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>set (Macaulay_list ps).\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "assume \"f \\<noteq> 0\""], ["proof (state)\nthis:\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl (set ps); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>set (Macaulay_list ps).\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "with assms(1) \\<open>f \\<in> pmdl G\\<close>"], ["proof (chain)\npicking this:\n  is_Groebner_basis G\n  f \\<in> pmdl G\n  f \\<noteq> 0", "obtain g where \"g \\<in> G\" and \"g \\<noteq> 0\" and \"lt g adds\\<^sub>t lt f\""], ["proof (prove)\nusing this:\n  is_Groebner_basis G\n  f \\<in> pmdl G\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> G; g \\<noteq> 0; lt g adds\\<^sub>t lt f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule GB_adds_lt)"], ["proof (state)\nthis:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl (set ps); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>set (Macaulay_list ps).\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "from assms(3) \\<open>g \\<in> G\\<close>"], ["proof (chain)\npicking this:\n  G \\<subseteq> phull (set ps)\n  g \\<in> G", "have \"g \\<in> phull (set ps)\""], ["proof (prove)\nusing this:\n  G \\<subseteq> phull (set ps)\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. g \\<in> phull (set ps)", ".."], ["proof (state)\nthis:\n  g \\<in> phull (set ps)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl (set ps); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>set (Macaulay_list ps).\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "from this \\<open>g \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  g \\<in> phull (set ps)\n  g \\<noteq> 0", "obtain g' where \"g' \\<in> set (Macaulay_list ps)\" and \"g' \\<noteq> 0\" and \"lt g = lt g'\""], ["proof (prove)\nusing this:\n  g \\<in> phull (set ps)\n  g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>g'.\n        \\<lbrakk>g' \\<in> set (Macaulay_list ps); g' \\<noteq> 0;\n         lt g = lt g'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule Macaulay_list_lt)"], ["proof (state)\nthis:\n  g' \\<in> set (Macaulay_list ps)\n  g' \\<noteq> 0\n  lt g = lt g'\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl (set ps); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>set (Macaulay_list ps).\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "show \"\\<exists>g\\<in>set (Macaulay_list ps). g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g\\<in>set (Macaulay_list ps).\n       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "proof (rule, rule)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?g \\<noteq> 0\n 2. lt ?g adds\\<^sub>t lt f\n 3. ?g \\<in> set (Macaulay_list ps)", "from \\<open>lt g adds\\<^sub>t lt f\\<close>"], ["proof (chain)\npicking this:\n  lt g adds\\<^sub>t lt f", "show \"lt g' adds\\<^sub>t lt f\""], ["proof (prove)\nusing this:\n  lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. lt g' adds\\<^sub>t lt f", "by (simp only: \\<open>lt g = lt g'\\<close>)"], ["proof (state)\nthis:\n  lt g' adds\\<^sub>t lt f\n\ngoal (2 subgoals):\n 1. g' \\<noteq> 0\n 2. g' \\<in> set (Macaulay_list ps)", "qed fact+"], ["proof (state)\nthis:\n  \\<exists>g\\<in>set (Macaulay_list ps).\n     g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Bounds\\<close>"], ["", "context pm_powerprod\nbegin"], ["", "context\n  fixes X :: \"'x set\"\n  assumes fin_X: \"finite X\"\nbegin"], ["", "definition deg_shifts :: \"nat \\<Rightarrow> (('x \\<Rightarrow>\\<^sub>0 nat) \\<Rightarrow>\\<^sub>0 'b) list \\<Rightarrow> (('x \\<Rightarrow>\\<^sub>0 nat) \\<Rightarrow>\\<^sub>0 'b::semiring_1) list\"\n  where \"deg_shifts d fs = concat (map (\\<lambda>f. (map (\\<lambda>t. punit.monom_mult 1 t f)\n                                        (punit.pps_to_list (deg_le_sect X (d - poly_deg f))))) fs)\""], ["", "lemma set_deg_shifts:\n  \"set (deg_shifts d fs) = (\\<Union>f\\<in>set fs. (\\<lambda>t. punit.monom_mult 1 t f) ` (deg_le_sect X (d - poly_deg f)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (deg_shifts d fs) =\n    (\\<Union>f\\<in>set fs.\n        (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n        deg_le_sect X (d - poly_deg f))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set (deg_shifts d fs) =\n    (\\<Union>f\\<in>set fs.\n        (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n        deg_le_sect X (d - poly_deg f))", "from fin_X"], ["proof (chain)\npicking this:\n  finite X", "have \"finite (deg_le_sect X d0)\" for d0"], ["proof (prove)\nusing this:\n  finite X\n\ngoal (1 subgoal):\n 1. finite (deg_le_sect X d0)", "by (rule finite_deg_le_sect)"], ["proof (state)\nthis:\n  finite (deg_le_sect X ?d0.8)\n\ngoal (1 subgoal):\n 1. set (deg_shifts d fs) =\n    (\\<Union>f\\<in>set fs.\n        (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n        deg_le_sect X (d - poly_deg f))", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite (deg_le_sect X ?d0.8)\n\ngoal (1 subgoal):\n 1. set (deg_shifts d fs) =\n    (\\<Union>f\\<in>set fs.\n        (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n        deg_le_sect X (d - poly_deg f))", "by (simp add: deg_shifts_def punit.set_pps_to_list)"], ["proof (state)\nthis:\n  set (deg_shifts d fs) =\n  (\\<Union>f\\<in>set fs.\n      (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n      deg_le_sect X (d - poly_deg f))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary set_deg_shifts_singleton:\n  \"set (deg_shifts d [f]) = (\\<lambda>t. punit.monom_mult 1 t f) ` (deg_le_sect X (d - poly_deg f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (deg_shifts d [f]) =\n    (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n    deg_le_sect X (d - poly_deg f)", "by (simp add: set_deg_shifts)"], ["", "lemma deg_shifts_superset: \"set fs \\<subseteq> set (deg_shifts d fs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set fs \\<subseteq> set (deg_shifts d fs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set fs \\<subseteq> set (deg_shifts d fs)", "have \"set fs = (\\<Union>f\\<in>set fs. {punit.monom_mult 1 0 f})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set fs = (\\<Union>f\\<in>set fs. {local.punit.monom_mult (1::'a) 0 f})", "by simp"], ["proof (state)\nthis:\n  set fs = (\\<Union>f\\<in>set fs. {local.punit.monom_mult (1::'a) 0 f})\n\ngoal (1 subgoal):\n 1. set fs \\<subseteq> set (deg_shifts d fs)", "also"], ["proof (state)\nthis:\n  set fs = (\\<Union>f\\<in>set fs. {local.punit.monom_mult (1::'a) 0 f})\n\ngoal (1 subgoal):\n 1. set fs \\<subseteq> set (deg_shifts d fs)", "have \"\\<dots> \\<subseteq> set (deg_shifts d fs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>f\\<in>set fs. {local.punit.monom_mult (1::'a) 0 f})\n    \\<subseteq> set (deg_shifts d fs)", "unfolding set_deg_shifts"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>f\\<in>set fs. {local.punit.monom_mult (1::'a) 0 f})\n    \\<subseteq> (\\<Union>f\\<in>set fs.\n                    (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n                    deg_le_sect X (d - poly_deg f))", "using subset_refl"], ["proof (prove)\nusing this:\n  ?A \\<subseteq> ?A\n\ngoal (1 subgoal):\n 1. (\\<Union>f\\<in>set fs. {local.punit.monom_mult (1::'a) 0 f})\n    \\<subseteq> (\\<Union>f\\<in>set fs.\n                    (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n                    deg_le_sect X (d - poly_deg f))", "proof (rule UN_mono)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> set fs \\<Longrightarrow>\n       {local.punit.monom_mult (1::'a) 0 f}\n       \\<subseteq> (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n                   deg_le_sect X (d - poly_deg f)", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> set fs \\<Longrightarrow>\n       {local.punit.monom_mult (1::'a) 0 f}\n       \\<subseteq> (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n                   deg_le_sect X (d - poly_deg f)", "assume \"f \\<in> set fs\""], ["proof (state)\nthis:\n  f \\<in> set fs\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> set fs \\<Longrightarrow>\n       {local.punit.monom_mult (1::'a) 0 f}\n       \\<subseteq> (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n                   deg_le_sect X (d - poly_deg f)", "have \"punit.monom_mult 1 0 f \\<in> (\\<lambda>t. punit.monom_mult 1 t f) ` deg_le_sect X (d - poly_deg f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.punit.monom_mult (1::'a) 0 f\n    \\<in> (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n          deg_le_sect X (d - poly_deg f)", "using zero_in_deg_le_sect"], ["proof (prove)\nusing this:\n  0 \\<in> deg_le_sect ?n ?d\n\ngoal (1 subgoal):\n 1. local.punit.monom_mult (1::'a) 0 f\n    \\<in> (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n          deg_le_sect X (d - poly_deg f)", "by (rule imageI)"], ["proof (state)\nthis:\n  local.punit.monom_mult (1::'a) 0 f\n  \\<in> (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n        deg_le_sect X (d - poly_deg f)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> set fs \\<Longrightarrow>\n       {local.punit.monom_mult (1::'a) 0 f}\n       \\<subseteq> (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n                   deg_le_sect X (d - poly_deg f)", "thus \"{punit.monom_mult 1 0 f} \\<subseteq> (\\<lambda>t. punit.monom_mult 1 t f) ` deg_le_sect X (d - poly_deg f)\""], ["proof (prove)\nusing this:\n  local.punit.monom_mult (1::'a) 0 f\n  \\<in> (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n        deg_le_sect X (d - poly_deg f)\n\ngoal (1 subgoal):\n 1. {local.punit.monom_mult (1::'a) 0 f}\n    \\<subseteq> (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n                deg_le_sect X (d - poly_deg f)", "by simp"], ["proof (state)\nthis:\n  {local.punit.monom_mult (1::'a) 0 f}\n  \\<subseteq> (\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n              deg_le_sect X (d - poly_deg f)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Union>f\\<in>set fs. {local.punit.monom_mult (1::'a) 0 f})\n  \\<subseteq> set (deg_shifts d fs)\n\ngoal (1 subgoal):\n 1. set fs \\<subseteq> set (deg_shifts d fs)", "finally"], ["proof (chain)\npicking this:\n  set fs \\<subseteq> set (deg_shifts d fs)", "show ?thesis"], ["proof (prove)\nusing this:\n  set fs \\<subseteq> set (deg_shifts d fs)\n\ngoal (1 subgoal):\n 1. set fs \\<subseteq> set (deg_shifts d fs)", "."], ["proof (state)\nthis:\n  set fs \\<subseteq> set (deg_shifts d fs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma deg_shifts_mono:\n  assumes \"set fs \\<subseteq> set gs\"\n  shows \"set (deg_shifts d fs) \\<subseteq> set (deg_shifts d gs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (deg_shifts d fs) \\<subseteq> set (deg_shifts d gs)", "using assms"], ["proof (prove)\nusing this:\n  set fs \\<subseteq> set gs\n\ngoal (1 subgoal):\n 1. set (deg_shifts d fs) \\<subseteq> set (deg_shifts d gs)", "by (auto simp add: set_deg_shifts)"], ["", "lemma ideal_deg_shifts [simp]: \"ideal (set (deg_shifts d fs)) = ideal (set fs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal (set (deg_shifts d fs)) = ideal (set fs)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ideal (set (deg_shifts d fs)) \\<subseteq> ideal (set fs)\n 2. ideal (set fs) \\<subseteq> ideal (set (deg_shifts d fs))", "show \"ideal (set (deg_shifts d fs)) \\<subseteq> ideal (set fs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal (set (deg_shifts d fs)) \\<subseteq> ideal (set fs)", "by (rule ideal.span_subset_spanI, simp add: set_deg_shifts UN_subset_iff,\n        intro ballI image_subsetI) (metis ideal.span_scale times_monomial_left ideal.span_base)"], ["proof (state)\nthis:\n  ideal (set (deg_shifts d fs)) \\<subseteq> ideal (set fs)\n\ngoal (1 subgoal):\n 1. ideal (set fs) \\<subseteq> ideal (set (deg_shifts d fs))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ideal (set fs) \\<subseteq> ideal (set (deg_shifts d fs))", "from deg_shifts_superset"], ["proof (chain)\npicking this:\n  set ?fs \\<subseteq> set (deg_shifts ?d ?fs)", "show \"ideal (set fs) \\<subseteq> ideal (set (deg_shifts d fs))\""], ["proof (prove)\nusing this:\n  set ?fs \\<subseteq> set (deg_shifts ?d ?fs)\n\ngoal (1 subgoal):\n 1. ideal (set fs) \\<subseteq> ideal (set (deg_shifts d fs))", "by (rule ideal.span_mono)"], ["proof (state)\nthis:\n  ideal (set fs) \\<subseteq> ideal (set (deg_shifts d fs))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma thm_2_3_6:\n  assumes \"set fs \\<subseteq> P[X]\" and \"is_GB_cofactor_bound (set fs) b\"\n  shows \"punit.is_Groebner_basis (set (punit.Macaulay_list (deg_shifts b fs)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. punit.is_Groebner_basis (set (punit.Macaulay_list (deg_shifts b fs)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. punit.is_Groebner_basis (set (punit.Macaulay_list (deg_shifts b fs)))", "from assms(2) finite_set assms(1)"], ["proof (chain)\npicking this:\n  is_GB_cofactor_bound (set fs) b\n  finite (set ?xs)\n  set fs \\<subseteq> P[X]", "obtain G where \"punit.is_Groebner_basis G\"\n    and ideal_G: \"ideal G = ideal (set fs)\" and G_sub: \"G \\<subseteq> P[X]\"\n    and 1: \"\\<And>g. g \\<in> G \\<Longrightarrow> \\<exists>q. g = (\\<Sum>f\\<in>set fs. q f * f) \\<and> (\\<forall>f. q f \\<in> P[X] \\<and> poly_deg (q f * f) \\<le> b)\""], ["proof (prove)\nusing this:\n  is_GB_cofactor_bound (set fs) b\n  finite (set ?xs)\n  set fs \\<subseteq> P[X]\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>punit.is_Groebner_basis G; ideal G = ideal (set fs);\n         G \\<subseteq> P[X];\n         \\<And>g.\n            g \\<in> G \\<Longrightarrow>\n            \\<exists>q.\n               g = (\\<Sum>f\\<in>set fs. q f * f) \\<and>\n               (\\<forall>f.\n                   q f \\<in> P[X] \\<and>\n                   poly_deg (q f * f) \\<le> b)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule is_GB_cofactor_boundE_finite_Polys) blast"], ["proof (state)\nthis:\n  punit.is_Groebner_basis G\n  ideal G = ideal (set fs)\n  G \\<subseteq> P[X]\n  ?g8 \\<in> G \\<Longrightarrow>\n  \\<exists>q.\n     ?g8 = (\\<Sum>f\\<in>set fs. q f * f) \\<and>\n     (\\<forall>f. q f \\<in> P[X] \\<and> poly_deg (q f * f) \\<le> b)\n\ngoal (1 subgoal):\n 1. punit.is_Groebner_basis (set (punit.Macaulay_list (deg_shifts b fs)))", "from this(1)"], ["proof (chain)\npicking this:\n  punit.is_Groebner_basis G", "show ?thesis"], ["proof (prove)\nusing this:\n  punit.is_Groebner_basis G\n\ngoal (1 subgoal):\n 1. punit.is_Groebner_basis (set (punit.Macaulay_list (deg_shifts b fs)))", "proof (rule punit.Macaulay_list_is_GB)"], ["proof (state)\ngoal (2 subgoals):\n 1. local.punit.pmdl (set (deg_shifts b fs)) = local.punit.pmdl G\n 2. G \\<subseteq> phull (set (deg_shifts b fs))", "show \"G \\<subseteq> phull (set (deg_shifts b fs))\" (is \"_ \\<subseteq> ?H\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<subseteq> phull (set (deg_shifts b fs))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> G \\<Longrightarrow> x \\<in> phull (set (deg_shifts b fs))", "fix g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> G \\<Longrightarrow> x \\<in> phull (set (deg_shifts b fs))", "assume \"g \\<in> G\""], ["proof (state)\nthis:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> G \\<Longrightarrow> x \\<in> phull (set (deg_shifts b fs))", "hence \"\\<exists>q. g = (\\<Sum>f\\<in>set fs. q f * f) \\<and> (\\<forall>f. q f \\<in> P[X] \\<and> poly_deg (q f * f) \\<le> b)\""], ["proof (prove)\nusing this:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. \\<exists>q.\n       g = (\\<Sum>f\\<in>set fs. q f * f) \\<and>\n       (\\<forall>f. q f \\<in> P[X] \\<and> poly_deg (q f * f) \\<le> b)", "by (rule 1)"], ["proof (state)\nthis:\n  \\<exists>q.\n     g = (\\<Sum>f\\<in>set fs. q f * f) \\<and>\n     (\\<forall>f. q f \\<in> P[X] \\<and> poly_deg (q f * f) \\<le> b)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> G \\<Longrightarrow> x \\<in> phull (set (deg_shifts b fs))", "then"], ["proof (chain)\npicking this:\n  \\<exists>q.\n     g = (\\<Sum>f\\<in>set fs. q f * f) \\<and>\n     (\\<forall>f. q f \\<in> P[X] \\<and> poly_deg (q f * f) \\<le> b)", "obtain q where g: \"g = (\\<Sum>f\\<in>set fs. q f * f)\" and \"\\<And>f. q f \\<in> P[X]\"\n        and \"\\<And>f. poly_deg (q f * f) \\<le> b\""], ["proof (prove)\nusing this:\n  \\<exists>q.\n     g = (\\<Sum>f\\<in>set fs. q f * f) \\<and>\n     (\\<forall>f. q f \\<in> P[X] \\<and> poly_deg (q f * f) \\<le> b)\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>g = (\\<Sum>f\\<in>set fs. q f * f); \\<And>f. q f \\<in> P[X];\n         \\<And>f. poly_deg (q f * f) \\<le> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g = (\\<Sum>f\\<in>set fs. q f * f)\n  q ?f8 \\<in> P[X]\n  poly_deg (q ?f8 * ?f8) \\<le> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> G \\<Longrightarrow> x \\<in> phull (set (deg_shifts b fs))", "show \"g \\<in> ?H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> phull (set (deg_shifts b fs))", "unfolding g"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>set fs. q f * f) \\<in> phull (set (deg_shifts b fs))", "proof (rule phull.span_sum)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set fs \\<Longrightarrow>\n       q x * x \\<in> phull (set (deg_shifts b fs))", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set fs \\<Longrightarrow>\n       q x * x \\<in> phull (set (deg_shifts b fs))", "assume \"f \\<in> set fs\""], ["proof (state)\nthis:\n  f \\<in> set fs\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set fs \\<Longrightarrow>\n       q x * x \\<in> phull (set (deg_shifts b fs))", "have \"1 \\<noteq> (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) \\<noteq> (0::'a)", "by simp"], ["proof (state)\nthis:\n  (1::'a) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set fs \\<Longrightarrow>\n       q x * x \\<in> phull (set (deg_shifts b fs))", "show \"q f * f \\<in> ?H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q f * f \\<in> phull (set (deg_shifts b fs))", "proof (cases \"f = 0 \\<or> q f = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. f = 0 \\<or> q f = 0 \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))\n 2. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "case True"], ["proof (state)\nthis:\n  f = 0 \\<or> q f = 0\n\ngoal (2 subgoals):\n 1. f = 0 \\<or> q f = 0 \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))\n 2. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "thus ?thesis"], ["proof (prove)\nusing this:\n  f = 0 \\<or> q f = 0\n\ngoal (1 subgoal):\n 1. q f * f \\<in> phull (set (deg_shifts b fs))", "by (auto simp add: phull.span_zero)"], ["proof (state)\nthis:\n  q f * f \\<in> phull (set (deg_shifts b fs))\n\ngoal (1 subgoal):\n 1. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "case False"], ["proof (state)\nthis:\n  \\<not> (f = 0 \\<or> q f = 0)\n\ngoal (1 subgoal):\n 1. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "hence \"q f \\<noteq> 0\" and \"f \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<not> (f = 0 \\<or> q f = 0)\n\ngoal (1 subgoal):\n 1. q f \\<noteq> 0 &&& f \\<noteq> 0", "by simp_all"], ["proof (state)\nthis:\n  q f \\<noteq> 0\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "with \\<open>poly_deg (q f * f) \\<le> b\\<close>"], ["proof (chain)\npicking this:\n  poly_deg (q f * f) \\<le> b\n  q f \\<noteq> 0\n  f \\<noteq> 0", "have \"poly_deg (q f) \\<le> b - poly_deg f\""], ["proof (prove)\nusing this:\n  poly_deg (q f * f) \\<le> b\n  q f \\<noteq> 0\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly_deg (q f) \\<le> b - poly_deg f", "by (simp add: poly_deg_times)"], ["proof (state)\nthis:\n  poly_deg (q f) \\<le> b - poly_deg f\n\ngoal (1 subgoal):\n 1. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "with \\<open>q f \\<in> P[X]\\<close>"], ["proof (chain)\npicking this:\n  q f \\<in> P[X]\n  poly_deg (q f) \\<le> b - poly_deg f", "have \"keys (q f) \\<subseteq> deg_le_sect X (b - poly_deg f)\""], ["proof (prove)\nusing this:\n  q f \\<in> P[X]\n  poly_deg (q f) \\<le> b - poly_deg f\n\ngoal (1 subgoal):\n 1. keys (q f) \\<subseteq> deg_le_sect X (b - poly_deg f)", "by (rule keys_subset_deg_le_sectI)"], ["proof (state)\nthis:\n  keys (q f) \\<subseteq> deg_le_sect X (b - poly_deg f)\n\ngoal (1 subgoal):\n 1. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "with finite_deg_le_sect[OF fin_X]"], ["proof (chain)\npicking this:\n  finite (deg_le_sect X ?d)\n  keys (q f) \\<subseteq> deg_le_sect X (b - poly_deg f)", "have \"q f * f = (\\<Sum>t\\<in>deg_le_sect X (b - poly_deg f). punit.monom_mult (lookup (q f) t) t f)\""], ["proof (prove)\nusing this:\n  finite (deg_le_sect X ?d)\n  keys (q f) \\<subseteq> deg_le_sect X (b - poly_deg f)\n\ngoal (1 subgoal):\n 1. q f * f =\n    (\\<Sum>t\\<in>deg_le_sect X (b - poly_deg f).\n       local.punit.monom_mult (lookup (q f) t) t f)", "unfolding punit.mult_scalar_sum_monomials[simplified]"], ["proof (prove)\nusing this:\n  finite (deg_le_sect X ?d)\n  keys (q f) \\<subseteq> deg_le_sect X (b - poly_deg f)\n\ngoal (1 subgoal):\n 1. (\\<Sum>t\\<in>keys (q f). local.punit.monom_mult (lookup (q f) t) t f) =\n    (\\<Sum>t\\<in>deg_le_sect X (b - poly_deg f).\n       local.punit.monom_mult (lookup (q f) t) t f)", "by (rule sum.mono_neutral_left) (simp add: in_keys_iff)"], ["proof (state)\nthis:\n  q f * f =\n  (\\<Sum>t\\<in>deg_le_sect X (b - poly_deg f).\n     local.punit.monom_mult (lookup (q f) t) t f)\n\ngoal (1 subgoal):\n 1. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "also"], ["proof (state)\nthis:\n  q f * f =\n  (\\<Sum>t\\<in>deg_le_sect X (b - poly_deg f).\n     local.punit.monom_mult (lookup (q f) t) t f)\n\ngoal (1 subgoal):\n 1. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "have \"\\<dots> = (\\<Sum>t\\<in>deg_le_sect X (b - poly_deg f).\n                              (lookup (q f) t) \\<cdot> (punit.monom_mult 1 t f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>t\\<in>deg_le_sect X (b - poly_deg f).\n       local.punit.monom_mult (lookup (q f) t) t f) =\n    (\\<Sum>t\\<in>deg_le_sect X (b - poly_deg f).\n       lookup (q f) t \\<cdot> local.punit.monom_mult (1::'a) t f)", "by (simp add: punit.monom_mult_assoc punit.map_scale_eq_monom_mult)"], ["proof (state)\nthis:\n  (\\<Sum>t\\<in>deg_le_sect X (b - poly_deg f).\n     local.punit.monom_mult (lookup (q f) t) t f) =\n  (\\<Sum>t\\<in>deg_le_sect X (b - poly_deg f).\n     lookup (q f) t \\<cdot> local.punit.monom_mult (1::'a) t f)\n\ngoal (1 subgoal):\n 1. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "also"], ["proof (state)\nthis:\n  (\\<Sum>t\\<in>deg_le_sect X (b - poly_deg f).\n     local.punit.monom_mult (lookup (q f) t) t f) =\n  (\\<Sum>t\\<in>deg_le_sect X (b - poly_deg f).\n     lookup (q f) t \\<cdot> local.punit.monom_mult (1::'a) t f)\n\ngoal (1 subgoal):\n 1. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "have \"\\<dots> = (\\<Sum>t\\<in>deg_le_sect X (b - poly_deg f).\n                          ((\\<lambda>f0. (lookup (q f) (punit.lp f0 - punit.lp f)) \\<cdot> f0) \\<circ>\n                          (\\<lambda>t. punit.monom_mult 1 t f)) t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>t\\<in>deg_le_sect X (b - poly_deg f).\n       lookup (q f) t \\<cdot> local.punit.monom_mult (1::'a) t f) =\n    sum ((\\<lambda>f0.\n             lookup (q f) (punit.lp f0 - punit.lp f) \\<cdot> f0) \\<circ>\n         (\\<lambda>t. local.punit.monom_mult (1::'a) t f))\n     (deg_le_sect X (b - poly_deg f))", "using refl"], ["proof (prove)\nusing this:\n  ?t = ?t\n\ngoal (1 subgoal):\n 1. (\\<Sum>t\\<in>deg_le_sect X (b - poly_deg f).\n       lookup (q f) t \\<cdot> local.punit.monom_mult (1::'a) t f) =\n    sum ((\\<lambda>f0.\n             lookup (q f) (punit.lp f0 - punit.lp f) \\<cdot> f0) \\<circ>\n         (\\<lambda>t. local.punit.monom_mult (1::'a) t f))\n     (deg_le_sect X (b - poly_deg f))", "by (rule sum.cong) (simp add: punit.lt_monom_mult[OF \\<open>1 \\<noteq> 0\\<close> \\<open>f \\<noteq> 0\\<close>])"], ["proof (state)\nthis:\n  (\\<Sum>t\\<in>deg_le_sect X (b - poly_deg f).\n     lookup (q f) t \\<cdot> local.punit.monom_mult (1::'a) t f) =\n  sum ((\\<lambda>f0.\n           lookup (q f) (punit.lp f0 - punit.lp f) \\<cdot> f0) \\<circ>\n       (\\<lambda>t. local.punit.monom_mult (1::'a) t f))\n   (deg_le_sect X (b - poly_deg f))\n\ngoal (1 subgoal):\n 1. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "also"], ["proof (state)\nthis:\n  (\\<Sum>t\\<in>deg_le_sect X (b - poly_deg f).\n     lookup (q f) t \\<cdot> local.punit.monom_mult (1::'a) t f) =\n  sum ((\\<lambda>f0.\n           lookup (q f) (punit.lp f0 - punit.lp f) \\<cdot> f0) \\<circ>\n       (\\<lambda>t. local.punit.monom_mult (1::'a) t f))\n   (deg_le_sect X (b - poly_deg f))\n\ngoal (1 subgoal):\n 1. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "have \"\\<dots> = (\\<Sum>f0\\<in>set (deg_shifts b [f]). (lookup (q f) (punit.lp f0 - punit.lp f)) \\<cdot> f0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((\\<lambda>f0.\n             lookup (q f) (punit.lp f0 - punit.lp f) \\<cdot> f0) \\<circ>\n         (\\<lambda>t. local.punit.monom_mult (1::'a) t f))\n     (deg_le_sect X (b - poly_deg f)) =\n    (\\<Sum>f0\\<in>set (deg_shifts b [f]).\n       lookup (q f) (punit.lp f0 - punit.lp f) \\<cdot> f0)", "unfolding set_deg_shifts_singleton"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((\\<lambda>f0.\n             lookup (q f) (punit.lp f0 - punit.lp f) \\<cdot> f0) \\<circ>\n         (\\<lambda>t. local.punit.monom_mult (1::'a) t f))\n     (deg_le_sect X (b - poly_deg f)) =\n    (\\<Sum>f0\\<in>(\\<lambda>t. local.punit.monom_mult (1::'a) t f) `\n                  deg_le_sect X (b - poly_deg f).\n       lookup (q f) (punit.lp f0 - punit.lp f) \\<cdot> f0)", "proof (intro sum.reindex[symmetric] inj_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> deg_le_sect X (b - poly_deg f);\n        y \\<in> deg_le_sect X (b - poly_deg f);\n        local.punit.monom_mult (1::'a) x f =\n        local.punit.monom_mult (1::'a) y f\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix s t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> deg_le_sect X (b - poly_deg f);\n        y \\<in> deg_le_sect X (b - poly_deg f);\n        local.punit.monom_mult (1::'a) x f =\n        local.punit.monom_mult (1::'a) y f\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"punit.monom_mult 1 s f = punit.monom_mult 1 t f\""], ["proof (state)\nthis:\n  local.punit.monom_mult (1::'a) s f = local.punit.monom_mult (1::'a) t f\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> deg_le_sect X (b - poly_deg f);\n        y \\<in> deg_le_sect X (b - poly_deg f);\n        local.punit.monom_mult (1::'a) x f =\n        local.punit.monom_mult (1::'a) y f\\<rbrakk>\n       \\<Longrightarrow> x = y", "thus \"s = t\""], ["proof (prove)\nusing this:\n  local.punit.monom_mult (1::'a) s f = local.punit.monom_mult (1::'a) t f\n\ngoal (1 subgoal):\n 1. s = t", "using \\<open>1 \\<noteq> 0\\<close> \\<open>f \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  local.punit.monom_mult (1::'a) s f = local.punit.monom_mult (1::'a) t f\n  (1::'a) \\<noteq> (0::'a)\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. s = t", "by (rule punit.monom_mult_inj_2)"], ["proof (state)\nthis:\n  s = t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sum ((\\<lambda>f0.\n           lookup (q f) (punit.lp f0 - punit.lp f) \\<cdot> f0) \\<circ>\n       (\\<lambda>t. local.punit.monom_mult (1::'a) t f))\n   (deg_le_sect X (b - poly_deg f)) =\n  (\\<Sum>f0\\<in>set (deg_shifts b [f]).\n     lookup (q f) (punit.lp f0 - punit.lp f) \\<cdot> f0)\n\ngoal (1 subgoal):\n 1. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "finally"], ["proof (chain)\npicking this:\n  q f * f =\n  (\\<Sum>f0\\<in>set (deg_shifts b [f]).\n     lookup (q f) (punit.lp f0 - punit.lp f) \\<cdot> f0)", "have \"q f * f \\<in> phull (set (deg_shifts b [f]))\""], ["proof (prove)\nusing this:\n  q f * f =\n  (\\<Sum>f0\\<in>set (deg_shifts b [f]).\n     lookup (q f) (punit.lp f0 - punit.lp f) \\<cdot> f0)\n\ngoal (1 subgoal):\n 1. q f * f \\<in> phull (set (deg_shifts b [f]))", "by (simp add: phull.sum_in_spanI)"], ["proof (state)\nthis:\n  q f * f \\<in> phull (set (deg_shifts b [f]))\n\ngoal (1 subgoal):\n 1. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "also"], ["proof (state)\nthis:\n  q f * f \\<in> phull (set (deg_shifts b [f]))\n\ngoal (1 subgoal):\n 1. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "have \"\\<dots> \\<subseteq> ?H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. phull (set (deg_shifts b [f])) \\<subseteq> phull (set (deg_shifts b fs))", "by (rule phull.span_mono, rule deg_shifts_mono, simp add: \\<open>f \\<in> set fs\\<close>)"], ["proof (state)\nthis:\n  phull (set (deg_shifts b [f])) \\<subseteq> phull (set (deg_shifts b fs))\n\ngoal (1 subgoal):\n 1. \\<not> (f = 0 \\<or> q f = 0) \\<Longrightarrow>\n    q f * f \\<in> phull (set (deg_shifts b fs))", "finally"], ["proof (chain)\npicking this:\n  q f * f \\<in> phull (set (deg_shifts b fs))", "show ?thesis"], ["proof (prove)\nusing this:\n  q f * f \\<in> phull (set (deg_shifts b fs))\n\ngoal (1 subgoal):\n 1. q f * f \\<in> phull (set (deg_shifts b fs))", "."], ["proof (state)\nthis:\n  q f * f \\<in> phull (set (deg_shifts b fs))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q f * f \\<in> phull (set (deg_shifts b fs))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g \\<in> phull (set (deg_shifts b fs))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  G \\<subseteq> phull (set (deg_shifts b fs))\n\ngoal (1 subgoal):\n 1. local.punit.pmdl (set (deg_shifts b fs)) = local.punit.pmdl G", "qed (simp add: ideal_G)"], ["proof (state)\nthis:\n  punit.is_Groebner_basis (set (punit.Macaulay_list (deg_shifts b fs)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma thm_2_3_7:\n  assumes \"set fs \\<subseteq> P[X]\" and \"is_GB_cofactor_bound (set fs) b\"\n  shows \"1 \\<in> ideal (set fs) \\<longleftrightarrow> 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 \\<in> ideal (set fs)) =\n    (1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. 1 \\<in> ideal (set fs) \\<Longrightarrow>\n    1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n 2. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "assume ?L"], ["proof (state)\nthis:\n  1 \\<in> ideal (set fs)\n\ngoal (2 subgoals):\n 1. 1 \\<in> ideal (set fs) \\<Longrightarrow>\n    1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n 2. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "let ?G = \"set (punit.Macaulay_list (deg_shifts b fs))\""], ["proof (state)\ngoal (2 subgoals):\n 1. 1 \\<in> ideal (set fs) \\<Longrightarrow>\n    1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n 2. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "from assms"], ["proof (chain)\npicking this:\n  set fs \\<subseteq> P[X]\n  is_GB_cofactor_bound (set fs) b", "have \"punit.is_Groebner_basis ?G\""], ["proof (prove)\nusing this:\n  set fs \\<subseteq> P[X]\n  is_GB_cofactor_bound (set fs) b\n\ngoal (1 subgoal):\n 1. punit.is_Groebner_basis (set (punit.Macaulay_list (deg_shifts b fs)))", "by (rule thm_2_3_6)"], ["proof (state)\nthis:\n  punit.is_Groebner_basis (set (punit.Macaulay_list (deg_shifts b fs)))\n\ngoal (2 subgoals):\n 1. 1 \\<in> ideal (set fs) \\<Longrightarrow>\n    1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n 2. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "moreover"], ["proof (state)\nthis:\n  punit.is_Groebner_basis (set (punit.Macaulay_list (deg_shifts b fs)))\n\ngoal (2 subgoals):\n 1. 1 \\<in> ideal (set fs) \\<Longrightarrow>\n    1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n 2. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "from \\<open>?L\\<close>"], ["proof (chain)\npicking this:\n  1 \\<in> ideal (set fs)", "have \"1 \\<in> ideal ?G\""], ["proof (prove)\nusing this:\n  1 \\<in> ideal (set fs)\n\ngoal (1 subgoal):\n 1. 1 \\<in> ideal (set (punit.Macaulay_list (deg_shifts b fs)))", "by (simp add: punit.pmdl_Macaulay_list[simplified])"], ["proof (state)\nthis:\n  1 \\<in> ideal (set (punit.Macaulay_list (deg_shifts b fs)))\n\ngoal (2 subgoals):\n 1. 1 \\<in> ideal (set fs) \\<Longrightarrow>\n    1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n 2. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "moreover"], ["proof (state)\nthis:\n  1 \\<in> ideal (set (punit.Macaulay_list (deg_shifts b fs)))\n\ngoal (2 subgoals):\n 1. 1 \\<in> ideal (set fs) \\<Longrightarrow>\n    1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n 2. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "have \"1 \\<noteq> (0::_ \\<Rightarrow>\\<^sub>0 'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  1 \\<noteq> 0\n\ngoal (2 subgoals):\n 1. 1 \\<in> ideal (set fs) \\<Longrightarrow>\n    1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n 2. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "ultimately"], ["proof (chain)\npicking this:\n  punit.is_Groebner_basis (set (punit.Macaulay_list (deg_shifts b fs)))\n  1 \\<in> ideal (set (punit.Macaulay_list (deg_shifts b fs)))\n  1 \\<noteq> 0", "obtain g where \"g \\<in> ?G\" and \"g \\<noteq> 0\" and \"punit.lt g adds punit.lt (1::_ \\<Rightarrow>\\<^sub>0 'a)\""], ["proof (prove)\nusing this:\n  punit.is_Groebner_basis (set (punit.Macaulay_list (deg_shifts b fs)))\n  1 \\<in> ideal (set (punit.Macaulay_list (deg_shifts b fs)))\n  1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> set (punit.Macaulay_list (deg_shifts b fs));\n         g \\<noteq> 0; lpp g adds lpp 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule punit.GB_adds_lt[simplified])"], ["proof (state)\nthis:\n  g \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n  g \\<noteq> 0\n  lpp g adds lpp 1\n\ngoal (2 subgoals):\n 1. 1 \\<in> ideal (set fs) \\<Longrightarrow>\n    1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n 2. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "from this(3)"], ["proof (chain)\npicking this:\n  lpp g adds lpp 1", "have lp_g: \"punit.lt g = 0\""], ["proof (prove)\nusing this:\n  lpp g adds lpp 1\n\ngoal (1 subgoal):\n 1. lpp g = 0", "by (simp add: punit.lt_monomial adds_zero flip: single_one)"], ["proof (state)\nthis:\n  lpp g = 0\n\ngoal (2 subgoals):\n 1. 1 \\<in> ideal (set fs) \\<Longrightarrow>\n    1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n 2. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "from punit.Macaulay_list_is_monic_set \\<open>g \\<in> ?G\\<close> \\<open>g \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  punit.is_monic_set (set (punit.Macaulay_list ?ps))\n  g \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n  g \\<noteq> 0", "have lc_g: \"punit.lc g = 1\""], ["proof (prove)\nusing this:\n  punit.is_monic_set (set (punit.Macaulay_list ?ps))\n  g \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n  g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lcf g = (1::'a)", "by (rule punit.is_monic_setD)"], ["proof (state)\nthis:\n  lcf g = (1::'a)\n\ngoal (2 subgoals):\n 1. 1 \\<in> ideal (set fs) \\<Longrightarrow>\n    1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n 2. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "have \"g = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g = 1", "proof (rule poly_mapping_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. lookup g k = lookup 1 k", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. lookup g k = lookup 1 k", "show \"lookup g t = lookup 1 t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup g t = lookup 1 t", "proof (cases \"t = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t = 0 \\<Longrightarrow> lookup g t = lookup 1 t\n 2. t \\<noteq> 0 \\<Longrightarrow> lookup g t = lookup 1 t", "case True"], ["proof (state)\nthis:\n  t = 0\n\ngoal (2 subgoals):\n 1. t = 0 \\<Longrightarrow> lookup g t = lookup 1 t\n 2. t \\<noteq> 0 \\<Longrightarrow> lookup g t = lookup 1 t", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = 0\n\ngoal (1 subgoal):\n 1. lookup g t = lookup 1 t", "using lc_g"], ["proof (prove)\nusing this:\n  t = 0\n  lcf g = (1::'a)\n\ngoal (1 subgoal):\n 1. lookup g t = lookup 1 t", "by (simp add: lookup_one punit.lc_def lp_g)"], ["proof (state)\nthis:\n  lookup g t = lookup 1 t\n\ngoal (1 subgoal):\n 1. t \\<noteq> 0 \\<Longrightarrow> lookup g t = lookup 1 t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<noteq> 0 \\<Longrightarrow> lookup g t = lookup 1 t", "case False"], ["proof (state)\nthis:\n  t \\<noteq> 0\n\ngoal (1 subgoal):\n 1. t \\<noteq> 0 \\<Longrightarrow> lookup g t = lookup 1 t", "with zero_min[of t]"], ["proof (chain)\npicking this:\n  0 \\<preceq> t\n  t \\<noteq> 0", "have \"\\<not> t \\<preceq> punit.lt g\""], ["proof (prove)\nusing this:\n  0 \\<preceq> t\n  t \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> t \\<preceq> lpp g", "by (simp add: lp_g)"], ["proof (state)\nthis:\n  \\<not> t \\<preceq> lpp g\n\ngoal (1 subgoal):\n 1. t \\<noteq> 0 \\<Longrightarrow> lookup g t = lookup 1 t", "with punit.lt_max_keys"], ["proof (chain)\npicking this:\n  ?v \\<in> keys ?p \\<Longrightarrow> ?v \\<preceq> lpp ?p\n  \\<not> t \\<preceq> lpp g", "have \"t \\<notin> keys g\""], ["proof (prove)\nusing this:\n  ?v \\<in> keys ?p \\<Longrightarrow> ?v \\<preceq> lpp ?p\n  \\<not> t \\<preceq> lpp g\n\ngoal (1 subgoal):\n 1. t \\<notin> keys g", "by blast"], ["proof (state)\nthis:\n  t \\<notin> keys g\n\ngoal (1 subgoal):\n 1. t \\<noteq> 0 \\<Longrightarrow> lookup g t = lookup 1 t", "with False"], ["proof (chain)\npicking this:\n  t \\<noteq> 0\n  t \\<notin> keys g", "show ?thesis"], ["proof (prove)\nusing this:\n  t \\<noteq> 0\n  t \\<notin> keys g\n\ngoal (1 subgoal):\n 1. lookup g t = lookup 1 t", "by (simp add: lookup_one in_keys_iff)"], ["proof (state)\nthis:\n  lookup g t = lookup 1 t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lookup g t = lookup 1 t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g = 1\n\ngoal (2 subgoals):\n 1. 1 \\<in> ideal (set fs) \\<Longrightarrow>\n    1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n 2. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "with \\<open>g \\<in> ?G\\<close>"], ["proof (chain)\npicking this:\n  g \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n  g = 1", "show \"1 \\<in> ?G\""], ["proof (prove)\nusing this:\n  g \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n  g = 1\n\ngoal (1 subgoal):\n 1. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))", "by simp"], ["proof (state)\nthis:\n  1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n\ngoal (1 subgoal):\n 1. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "assume ?R"], ["proof (state)\nthis:\n  1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n\ngoal (1 subgoal):\n 1. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "also"], ["proof (state)\nthis:\n  1 \\<in> set (punit.Macaulay_list (deg_shifts b fs))\n\ngoal (1 subgoal):\n 1. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "have \"\\<dots> \\<subseteq> phull (set (punit.Macaulay_list (deg_shifts b fs)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (punit.Macaulay_list (deg_shifts b fs))\n    \\<subseteq> phull (set (punit.Macaulay_list (deg_shifts b fs)))", "by (rule phull.span_superset)"], ["proof (state)\nthis:\n  set (punit.Macaulay_list (deg_shifts b fs))\n  \\<subseteq> phull (set (punit.Macaulay_list (deg_shifts b fs)))\n\ngoal (1 subgoal):\n 1. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "also"], ["proof (state)\nthis:\n  set (punit.Macaulay_list (deg_shifts b fs))\n  \\<subseteq> phull (set (punit.Macaulay_list (deg_shifts b fs)))\n\ngoal (1 subgoal):\n 1. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "have \"\\<dots> = phull (set (deg_shifts b fs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. phull (set (punit.Macaulay_list (deg_shifts b fs))) =\n    phull (set (deg_shifts b fs))", "by (fact punit.phull_Macaulay_list)"], ["proof (state)\nthis:\n  phull (set (punit.Macaulay_list (deg_shifts b fs))) =\n  phull (set (deg_shifts b fs))\n\ngoal (1 subgoal):\n 1. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "also"], ["proof (state)\nthis:\n  phull (set (punit.Macaulay_list (deg_shifts b fs))) =\n  phull (set (deg_shifts b fs))\n\ngoal (1 subgoal):\n 1. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "have \"\\<dots> \\<subseteq> ideal (set (deg_shifts b fs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. phull (set (deg_shifts b fs)) \\<subseteq> ideal (set (deg_shifts b fs))", "using punit.phull_subset_module"], ["proof (prove)\nusing this:\n  phull ?B \\<subseteq> local.punit.pmdl ?B\n\ngoal (1 subgoal):\n 1. phull (set (deg_shifts b fs)) \\<subseteq> ideal (set (deg_shifts b fs))", "by force"], ["proof (state)\nthis:\n  phull (set (deg_shifts b fs)) \\<subseteq> ideal (set (deg_shifts b fs))\n\ngoal (1 subgoal):\n 1. 1 \\<in> set (punit.Macaulay_list (deg_shifts b fs)) \\<Longrightarrow>\n    1 \\<in> ideal (set fs)", "finally"], ["proof (chain)\npicking this:\n  1 \\<in> ideal (set (deg_shifts b fs))", "show ?L"], ["proof (prove)\nusing this:\n  1 \\<in> ideal (set (deg_shifts b fs))\n\ngoal (1 subgoal):\n 1. 1 \\<in> ideal (set fs)", "by simp"], ["proof (state)\nthis:\n  1 \\<in> ideal (set fs)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma thm_2_3_6_indets:\n  assumes \"is_GB_cofactor_bound (set fs) b\"\n  shows \"punit.is_Groebner_basis (set (punit.Macaulay_list (deg_shifts (\\<Union>(indets ` (set fs))) b fs)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. punit.is_Groebner_basis\n     (set (punit.Macaulay_list\n            (deg_shifts (\\<Union> (indets ` set fs)) b fs)))", "using _ _ assms"], ["proof (prove)\nusing this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  is_GB_cofactor_bound (set fs) b\n\ngoal (1 subgoal):\n 1. punit.is_Groebner_basis\n     (set (punit.Macaulay_list\n            (deg_shifts (\\<Union> (indets ` set fs)) b fs)))", "proof (rule thm_2_3_6)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (\\<Union> (indets ` set fs))\n 2. set fs \\<subseteq> P[\\<Union> (indets ` set fs)]", "from finite_set"], ["proof (chain)\npicking this:\n  finite (set ?xs)", "show \"finite (\\<Union>(indets ` (set fs)))\""], ["proof (prove)\nusing this:\n  finite (set ?xs)\n\ngoal (1 subgoal):\n 1. finite (\\<Union> (indets ` set fs))", "by (simp add: finite_indets)"], ["proof (state)\nthis:\n  finite (\\<Union> (indets ` set fs))\n\ngoal (1 subgoal):\n 1. set fs \\<subseteq> P[\\<Union> (indets ` set fs)]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. set fs \\<subseteq> P[\\<Union> (indets ` set fs)]", "show \"set fs \\<subseteq> P[\\<Union>(indets ` (set fs))]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set fs \\<subseteq> P[\\<Union> (indets ` set fs)]", "by (auto simp: Polys_alt)"], ["proof (state)\nthis:\n  set fs \\<subseteq> P[\\<Union> (indets ` set fs)]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma thm_2_3_7_indets:\n  assumes \"is_GB_cofactor_bound (set fs) b\"\n  shows \"1 \\<in> ideal (set fs) \\<longleftrightarrow> 1 \\<in> set (punit.Macaulay_list (deg_shifts (\\<Union>(indets ` (set fs))) b fs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 \\<in> ideal (set fs)) =\n    (1 \\<in> set (punit.Macaulay_list\n                   (deg_shifts (\\<Union> (indets ` set fs)) b fs)))", "using _ _ assms"], ["proof (prove)\nusing this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  is_GB_cofactor_bound (set fs) b\n\ngoal (1 subgoal):\n 1. (1 \\<in> ideal (set fs)) =\n    (1 \\<in> set (punit.Macaulay_list\n                   (deg_shifts (\\<Union> (indets ` set fs)) b fs)))", "proof (rule thm_2_3_7)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (\\<Union> (indets ` set fs))\n 2. set fs \\<subseteq> P[\\<Union> (indets ` set fs)]", "from finite_set"], ["proof (chain)\npicking this:\n  finite (set ?xs)", "show \"finite (\\<Union>(indets ` (set fs)))\""], ["proof (prove)\nusing this:\n  finite (set ?xs)\n\ngoal (1 subgoal):\n 1. finite (\\<Union> (indets ` set fs))", "by (simp add: finite_indets)"], ["proof (state)\nthis:\n  finite (\\<Union> (indets ` set fs))\n\ngoal (1 subgoal):\n 1. set fs \\<subseteq> P[\\<Union> (indets ` set fs)]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. set fs \\<subseteq> P[\\<Union> (indets ` set fs)]", "show \"set fs \\<subseteq> P[\\<Union>(indets ` (set fs))]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set fs \\<subseteq> P[\\<Union> (indets ` set fs)]", "by (auto simp: Polys_alt)"], ["proof (state)\nthis:\n  set fs \\<subseteq> P[\\<Union> (indets ` set fs)]\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* pm_powerprod *)"], ["", "end"], ["", "(* theory *)"]]}