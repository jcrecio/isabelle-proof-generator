{"file_name": "/home/qj213/afp-2021-10-22/thys/Groebner_Macaulay/Dube_Prelims.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Groebner_Macaulay", "problem_names": ["lemma card_geq_ex_subset:\n  assumes \"card A \\<ge> n\"\n  obtains B where \"card B = n\" and \"B \\<subseteq> A\"", "lemma card_2_E_1:\n  assumes \"card A = 2\" and \"x \\<in> A\"\n  obtains y where \"x \\<noteq> y\" and \"A = {x, y}\"", "lemma card_2_E:\n  assumes \"card A = 2\"\n  obtains x y where \"x \\<noteq> y\" and \"A = {x, y}\"", "lemma sum_tail_nat: \"0 < b \\<Longrightarrow> a \\<le> (b::nat) \\<Longrightarrow> sum f {a..b} = f b + sum f {a..b - 1}\"", "lemma sum_atLeast_Suc_shift: \"0 < b \\<Longrightarrow> a \\<le> b \\<Longrightarrow> sum f {Suc a..b} = (\\<Sum>i=a..b - 1. f (Suc i))\"", "lemma sum_split_nat_ivl:\n  \"a \\<le> Suc j \\<Longrightarrow> j \\<le> b \\<Longrightarrow> sum f {a..j} + sum f {Suc j..b} = sum f {a..b}\"", "lemma count_list_eq_0_iff: \"count_list xs x = 0 \\<longleftrightarrow> x \\<notin> set xs\"", "lemma count_list_append: \"count_list (xs @ ys) x = count_list xs x + count_list ys x\"", "lemma count_list_map_ge: \"count_list xs x \\<le> count_list (map f xs) (f x)\"", "lemma count_list_gr_1_E:\n  assumes \"1 < count_list xs x\"\n  obtains i j where \"i < j\" and \"j < length xs\" and \"xs ! i = x\" and \"xs ! j = x\"", "lemma listset_Cons: \"listset (x # xs) = (\\<Union>y\\<in>x. (#) y ` listset xs)\"", "lemma listset_ConsI: \"y \\<in> x \\<Longrightarrow> ys' \\<in> listset xs \\<Longrightarrow> ys = y # ys' \\<Longrightarrow> ys \\<in> listset (x # xs)\"", "lemma listset_ConsE:\n  assumes \"ys \\<in> listset (x# xs)\"\n  obtains y ys' where \"y \\<in> x\" and \"ys' \\<in> listset xs\" and \"ys = y # ys'\"", "lemma listsetI:\n  \"length ys = length xs \\<Longrightarrow> (\\<And>i. i < length xs \\<Longrightarrow> ys ! i \\<in> xs ! i) \\<Longrightarrow> ys \\<in> listset xs\"", "lemma listsetD:\n  assumes \"ys \\<in> listset xs\"\n  shows \"length ys = length xs\" and \"\\<And>i. i < length xs \\<Longrightarrow> ys ! i \\<in> xs ! i\"", "lemma listset_singletonI: \"a \\<in> A \\<Longrightarrow> ys = [a] \\<Longrightarrow> ys \\<in> listset [A]\"", "lemma listset_singletonE:\n  assumes \"ys \\<in> listset [A]\"\n  obtains a where \"a \\<in> A\" and \"ys = [a]\"", "lemma listset_doubletonI: \"a \\<in> A \\<Longrightarrow> b \\<in> B \\<Longrightarrow> ys = [a, b] \\<Longrightarrow> ys \\<in> listset [A, B]\"", "lemma listset_doubletonE:\n  assumes \"ys \\<in> listset [A, B]\"\n  obtains a b where \"a \\<in> A\" and \"b \\<in> B\" and \"ys = [a, b]\"", "lemma listset_appendI:\n  \"ys1 \\<in> listset xs1 \\<Longrightarrow> ys2 \\<in> listset xs2 \\<Longrightarrow> ys = ys1 @ ys2 \\<Longrightarrow> ys \\<in> listset (xs1 @ xs2)\"", "lemma listset_appendE:\n  assumes \"ys \\<in> listset (xs1 @ xs2)\"\n  obtains ys1 ys2 where \"ys1 \\<in> listset xs1\" and \"ys2 \\<in> listset xs2\" and \"ys = ys1 @ ys2\"", "lemma listset_map_imageI: \"ys' \\<in> listset xs \\<Longrightarrow> ys = map f ys' \\<Longrightarrow> ys \\<in> listset (map ((`) f) xs)\"", "lemma listset_map_imageE:\n  assumes \"ys \\<in> listset (map ((`) f) xs)\"\n  obtains ys' where \"ys' \\<in> listset xs\" and \"ys = map f ys'\"", "lemma listset_permE:\n  assumes \"ys \\<in> listset xs\" and \"bij_betw f {..<length xs} {..<length xs'}\"\n    and \"\\<And>i. i < length xs \\<Longrightarrow> xs' ! i = xs ! f i\"\n  obtains ys' where \"ys' \\<in> listset xs'\" and \"length ys' = length ys\"\n    and \"\\<And>i. i < length ys \\<Longrightarrow> ys' ! i = ys ! f i\"", "lemma listset_closed_map:\n  assumes \"ys \\<in> listset xs\" and \"\\<And>x y. x \\<in> set xs \\<Longrightarrow> y \\<in> x \\<Longrightarrow> f y \\<in> x\"\n  shows \"map f ys \\<in> listset xs\"", "lemma listset_closed_map2:\n  assumes \"ys1 \\<in> listset xs\" and \"ys2 \\<in> listset xs\"\n    and \"\\<And>x y1 y2. x \\<in> set xs \\<Longrightarrow> y1 \\<in> x \\<Longrightarrow> y2 \\<in> x \\<Longrightarrow> f y1 y2 \\<in> x\"\n  shows \"map2 f ys1 ys2 \\<in> listset xs\"", "lemma listset_empty_iff: \"listset xs = {} \\<longleftrightarrow> {} \\<in> set xs\"", "lemma listset_mono:\n  assumes \"length xs = length ys\" and \"\\<And>i. i < length ys \\<Longrightarrow> xs ! i \\<subseteq> ys ! i\"\n  shows \"listset xs \\<subseteq> listset ys\""], "translations": [["", "lemma card_geq_ex_subset:\n  assumes \"card A \\<ge> n\"\n  obtains B where \"card B = n\" and \"B \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  n \\<le> card A\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (induct n arbitrary: thesis)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>thesis.\n       \\<lbrakk>\\<And>B.\n                   \\<lbrakk>card B = 0; B \\<subseteq> A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        0 \\<le> card A\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>n thesis.\n       \\<lbrakk>\\<And>thesis.\n                   \\<lbrakk>\\<And>B.\n                               \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    n \\<le> card A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>B.\n           \\<lbrakk>card B = Suc n; B \\<subseteq> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        Suc n \\<le> card A\\<rbrakk>\n       \\<Longrightarrow> thesis", "case base: 0"], ["proof (state)\nthis:\n  \\<lbrakk>card ?B = 0; ?B \\<subseteq> A\\<rbrakk> \\<Longrightarrow> thesis\n  0 \\<le> card A\n\ngoal (2 subgoals):\n 1. \\<And>thesis.\n       \\<lbrakk>\\<And>B.\n                   \\<lbrakk>card B = 0; B \\<subseteq> A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        0 \\<le> card A\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>n thesis.\n       \\<lbrakk>\\<And>thesis.\n                   \\<lbrakk>\\<And>B.\n                               \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    n \\<le> card A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>B.\n           \\<lbrakk>card B = Suc n; B \\<subseteq> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        Suc n \\<le> card A\\<rbrakk>\n       \\<Longrightarrow> thesis", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (rule base(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. card ?B = 0\n 2. ?B \\<subseteq> A", "show \"card {} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {} = 0", "by simp"], ["proof (state)\nthis:\n  card {} = 0\n\ngoal (1 subgoal):\n 1. {} \\<subseteq> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {} \\<subseteq> A", "show \"{} \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<subseteq> A", ".."], ["proof (state)\nthis:\n  {} \\<subseteq> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>n thesis.\n       \\<lbrakk>\\<And>thesis.\n                   \\<lbrakk>\\<And>B.\n                               \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    n \\<le> card A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>B.\n           \\<lbrakk>card B = Suc n; B \\<subseteq> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        Suc n \\<le> card A\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n thesis.\n       \\<lbrakk>\\<And>thesis.\n                   \\<lbrakk>\\<And>B.\n                               \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    n \\<le> card A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>B.\n           \\<lbrakk>card B = Suc n; B \\<subseteq> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        Suc n \\<le> card A\\<rbrakk>\n       \\<Longrightarrow> thesis", "case ind: (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>B.\n              \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   n \\<le> card A\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>card ?B = Suc n; ?B \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> thesis\n  Suc n \\<le> card A\n\ngoal (1 subgoal):\n 1. \\<And>n thesis.\n       \\<lbrakk>\\<And>thesis.\n                   \\<lbrakk>\\<And>B.\n                               \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    n \\<le> card A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>B.\n           \\<lbrakk>card B = Suc n; B \\<subseteq> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        Suc n \\<le> card A\\<rbrakk>\n       \\<Longrightarrow> thesis", "from ind(3)"], ["proof (chain)\npicking this:\n  Suc n \\<le> card A", "have \"n < card A\""], ["proof (prove)\nusing this:\n  Suc n \\<le> card A\n\ngoal (1 subgoal):\n 1. n < card A", "by simp"], ["proof (state)\nthis:\n  n < card A\n\ngoal (1 subgoal):\n 1. \\<And>n thesis.\n       \\<lbrakk>\\<And>thesis.\n                   \\<lbrakk>\\<And>B.\n                               \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    n \\<le> card A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>B.\n           \\<lbrakk>card B = Suc n; B \\<subseteq> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        Suc n \\<le> card A\\<rbrakk>\n       \\<Longrightarrow> thesis", "obtain B where card: \"card B = n\" and \"B \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule ind(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>B.\n       \\<lbrakk>\\<And>B.\n                   \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        card B = n; B \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. (\\<And>B.\n        \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    n \\<le> card A", "from \\<open>n < card A\\<close>"], ["proof (chain)\npicking this:\n  n < card A", "show \"n \\<le> card A\""], ["proof (prove)\nusing this:\n  n < card A\n\ngoal (1 subgoal):\n 1. n \\<le> card A", "by simp"], ["proof (state)\nthis:\n  n \\<le> card A\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       \\<lbrakk>\\<And>B.\n                   \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        card B = n; B \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed"], ["proof (state)\nthis:\n  card B = n\n  B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>n thesis.\n       \\<lbrakk>\\<And>thesis.\n                   \\<lbrakk>\\<And>B.\n                               \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    n \\<le> card A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>B.\n           \\<lbrakk>card B = Suc n; B \\<subseteq> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        Suc n \\<le> card A\\<rbrakk>\n       \\<Longrightarrow> thesis", "from \\<open>n < card A\\<close>"], ["proof (chain)\npicking this:\n  n < card A", "have \"card A \\<noteq> 0\""], ["proof (prove)\nusing this:\n  n < card A\n\ngoal (1 subgoal):\n 1. card A \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  card A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>n thesis.\n       \\<lbrakk>\\<And>thesis.\n                   \\<lbrakk>\\<And>B.\n                               \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    n \\<le> card A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>B.\n           \\<lbrakk>card B = Suc n; B \\<subseteq> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        Suc n \\<le> card A\\<rbrakk>\n       \\<Longrightarrow> thesis", "with card.infinite[of A]"], ["proof (chain)\npicking this:\n  infinite A \\<Longrightarrow> card A = 0\n  card A \\<noteq> 0", "have \"finite A\""], ["proof (prove)\nusing this:\n  infinite A \\<Longrightarrow> card A = 0\n  card A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. finite A", "by blast"], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. \\<And>n thesis.\n       \\<lbrakk>\\<And>thesis.\n                   \\<lbrakk>\\<And>B.\n                               \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    n \\<le> card A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>B.\n           \\<lbrakk>card B = Suc n; B \\<subseteq> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        Suc n \\<le> card A\\<rbrakk>\n       \\<Longrightarrow> thesis", "let ?C = \"A - B\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n thesis.\n       \\<lbrakk>\\<And>thesis.\n                   \\<lbrakk>\\<And>B.\n                               \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    n \\<le> card A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>B.\n           \\<lbrakk>card B = Suc n; B \\<subseteq> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        Suc n \\<le> card A\\<rbrakk>\n       \\<Longrightarrow> thesis", "have \"?C \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A - B \\<noteq> {}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. A - B = {} \\<Longrightarrow> False", "assume \"A - B = {}\""], ["proof (state)\nthis:\n  A - B = {}\n\ngoal (1 subgoal):\n 1. A - B = {} \\<Longrightarrow> False", "hence \"A \\<subseteq> B\""], ["proof (prove)\nusing this:\n  A - B = {}\n\ngoal (1 subgoal):\n 1. A \\<subseteq> B", "by simp"], ["proof (state)\nthis:\n  A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. A - B = {} \\<Longrightarrow> False", "from this \\<open>B \\<subseteq> A\\<close>"], ["proof (chain)\npicking this:\n  A \\<subseteq> B\n  B \\<subseteq> A", "have \"A = B\""], ["proof (prove)\nusing this:\n  A \\<subseteq> B\n  B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. A = B", ".."], ["proof (state)\nthis:\n  A = B\n\ngoal (1 subgoal):\n 1. A - B = {} \\<Longrightarrow> False", "from \\<open>n < card A\\<close>"], ["proof (chain)\npicking this:\n  n < card A", "show False"], ["proof (prove)\nusing this:\n  n < card A\n\ngoal (1 subgoal):\n 1. False", "unfolding \\<open>A = B\\<close> card"], ["proof (prove)\nusing this:\n  n < n\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A - B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>n thesis.\n       \\<lbrakk>\\<And>thesis.\n                   \\<lbrakk>\\<And>B.\n                               \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    n \\<le> card A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>B.\n           \\<lbrakk>card B = Suc n; B \\<subseteq> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        Suc n \\<le> card A\\<rbrakk>\n       \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  A - B \\<noteq> {}", "obtain c where \"c \\<in> ?C\""], ["proof (prove)\nusing this:\n  A - B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>c. c \\<in> A - B \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c \\<in> A - B\n\ngoal (1 subgoal):\n 1. \\<And>n thesis.\n       \\<lbrakk>\\<And>thesis.\n                   \\<lbrakk>\\<And>B.\n                               \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    n \\<le> card A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>B.\n           \\<lbrakk>card B = Suc n; B \\<subseteq> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        Suc n \\<le> card A\\<rbrakk>\n       \\<Longrightarrow> thesis", "hence \"c \\<notin> B\""], ["proof (prove)\nusing this:\n  c \\<in> A - B\n\ngoal (1 subgoal):\n 1. c \\<notin> B", "by simp"], ["proof (state)\nthis:\n  c \\<notin> B\n\ngoal (1 subgoal):\n 1. \\<And>n thesis.\n       \\<lbrakk>\\<And>thesis.\n                   \\<lbrakk>\\<And>B.\n                               \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    n \\<le> card A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>B.\n           \\<lbrakk>card B = Suc n; B \\<subseteq> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        Suc n \\<le> card A\\<rbrakk>\n       \\<Longrightarrow> thesis", "hence \"B - {c} = B\""], ["proof (prove)\nusing this:\n  c \\<notin> B\n\ngoal (1 subgoal):\n 1. B - {c} = B", "by simp"], ["proof (state)\nthis:\n  B - {c} = B\n\ngoal (1 subgoal):\n 1. \\<And>n thesis.\n       \\<lbrakk>\\<And>thesis.\n                   \\<lbrakk>\\<And>B.\n                               \\<lbrakk>card B = n; B \\<subseteq> A\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    n \\<le> card A\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>B.\n           \\<lbrakk>card B = Suc n; B \\<subseteq> A\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        Suc n \\<le> card A\\<rbrakk>\n       \\<Longrightarrow> thesis", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (rule ind(2))"], ["proof (state)\ngoal (2 subgoals):\n 1. card ?B = Suc n\n 2. ?B \\<subseteq> A", "thm card.insert_remove"], ["proof (state)\ngoal (2 subgoals):\n 1. card ?B = Suc n\n 2. ?B \\<subseteq> A", "have \"card (B \\<union> {c}) = card (insert c B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (B \\<union> {c}) = card (insert c B)", "by simp"], ["proof (state)\nthis:\n  card (B \\<union> {c}) = card (insert c B)\n\ngoal (2 subgoals):\n 1. card ?B = Suc n\n 2. ?B \\<subseteq> A", "also"], ["proof (state)\nthis:\n  card (B \\<union> {c}) = card (insert c B)\n\ngoal (2 subgoals):\n 1. card ?B = Suc n\n 2. ?B \\<subseteq> A", "have \"... = Suc (card (B - {c}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (insert c B) = Suc (card (B - {c}))", "by (rule card.insert_remove, rule finite_subset, fact \\<open>B \\<subseteq> A\\<close>, fact)"], ["proof (state)\nthis:\n  card (insert c B) = Suc (card (B - {c}))\n\ngoal (2 subgoals):\n 1. card ?B = Suc n\n 2. ?B \\<subseteq> A", "finally"], ["proof (chain)\npicking this:\n  card (B \\<union> {c}) = Suc (card (B - {c}))", "show \"card (B \\<union> {c}) = Suc n\""], ["proof (prove)\nusing this:\n  card (B \\<union> {c}) = Suc (card (B - {c}))\n\ngoal (1 subgoal):\n 1. card (B \\<union> {c}) = Suc n", "unfolding \\<open>B - {c} = B\\<close> card"], ["proof (prove)\nusing this:\n  card (B \\<union> {c}) = Suc n\n\ngoal (1 subgoal):\n 1. card (B \\<union> {c}) = Suc n", "."], ["proof (state)\nthis:\n  card (B \\<union> {c}) = Suc n\n\ngoal (1 subgoal):\n 1. B \\<union> {c} \\<subseteq> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<union> {c} \\<subseteq> A", "show \"B \\<union> {c} \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<union> {c} \\<subseteq> A", "unfolding Un_subset_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> A \\<and> {c} \\<subseteq> A", "proof (intro conjI, fact)"], ["proof (state)\ngoal (1 subgoal):\n 1. {c} \\<subseteq> A", "from \\<open>c \\<in> ?C\\<close>"], ["proof (chain)\npicking this:\n  c \\<in> A - B", "show \"{c} \\<subseteq> A\""], ["proof (prove)\nusing this:\n  c \\<in> A - B\n\ngoal (1 subgoal):\n 1. {c} \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  {c} \\<subseteq> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B \\<union> {c} \\<subseteq> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_2_E_1:\n  assumes \"card A = 2\" and \"x \\<in> A\"\n  obtains y where \"x \\<noteq> y\" and \"A = {x, y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>x \\<noteq> y; A = {x, y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>x \\<noteq> y; A = {x, y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"A - {x} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A - {x} \\<noteq> {}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. A - {x} = {} \\<Longrightarrow> False", "assume \"A - {x} = {}\""], ["proof (state)\nthis:\n  A - {x} = {}\n\ngoal (1 subgoal):\n 1. A - {x} = {} \\<Longrightarrow> False", "with assms(2)"], ["proof (chain)\npicking this:\n  x \\<in> A\n  A - {x} = {}", "have \"A = {x}\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  A - {x} = {}\n\ngoal (1 subgoal):\n 1. A = {x}", "by auto"], ["proof (state)\nthis:\n  A = {x}\n\ngoal (1 subgoal):\n 1. A - {x} = {} \\<Longrightarrow> False", "hence \"card A = 1\""], ["proof (prove)\nusing this:\n  A = {x}\n\ngoal (1 subgoal):\n 1. card A = 1", "by simp"], ["proof (state)\nthis:\n  card A = 1\n\ngoal (1 subgoal):\n 1. A - {x} = {} \\<Longrightarrow> False", "with assms"], ["proof (chain)\npicking this:\n  card A = 2\n  x \\<in> A\n  card A = 1", "show False"], ["proof (prove)\nusing this:\n  card A = 2\n  x \\<in> A\n  card A = 1\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A - {x} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>x \\<noteq> y; A = {x, y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  A - {x} \\<noteq> {}", "obtain y where \"y \\<in> A - {x}\""], ["proof (prove)\nusing this:\n  A - {x} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>y. y \\<in> A - {x} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> A - {x}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>x \\<noteq> y; A = {x, y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"y \\<in> A\" and \"x \\<noteq> y\""], ["proof (prove)\nusing this:\n  y \\<in> A - {x}\n\ngoal (1 subgoal):\n 1. y \\<in> A &&& x \\<noteq> y", "by auto"], ["proof (state)\nthis:\n  y \\<in> A\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>x \\<noteq> y; A = {x, y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<noteq> ?y\n 2. A = {x, ?y}", "show \"A = {x, y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = {x, y}", "proof (rule sym, rule card_seteq)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite A\n 2. {x, y} \\<subseteq> A\n 3. card A \\<le> card {x, y}", "from assms(1)"], ["proof (chain)\npicking this:\n  card A = 2", "show \"finite A\""], ["proof (prove)\nusing this:\n  card A = 2\n\ngoal (1 subgoal):\n 1. finite A", "using card.infinite"], ["proof (prove)\nusing this:\n  card A = 2\n  infinite ?A \\<Longrightarrow> card ?A = 0\n\ngoal (1 subgoal):\n 1. finite A", "by fastforce"], ["proof (state)\nthis:\n  finite A\n\ngoal (2 subgoals):\n 1. {x, y} \\<subseteq> A\n 2. card A \\<le> card {x, y}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. {x, y} \\<subseteq> A\n 2. card A \\<le> card {x, y}", "from \\<open>x \\<in> A\\<close> \\<open>y \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> A\n  y \\<in> A", "show \"{x, y} \\<subseteq> A\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. {x, y} \\<subseteq> A", "by simp"], ["proof (state)\nthis:\n  {x, y} \\<subseteq> A\n\ngoal (1 subgoal):\n 1. card A \\<le> card {x, y}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. card A \\<le> card {x, y}", "from \\<open>x \\<noteq> y\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> y", "show \"card A \\<le> card {x, y}\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. card A \\<le> card {x, y}", "by (simp add: assms(1))"], ["proof (state)\nthis:\n  card A \\<le> card {x, y}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A = {x, y}\n\ngoal (1 subgoal):\n 1. x \\<noteq> y", "qed fact"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_2_E:\n  assumes \"card A = 2\"\n  obtains x y where \"x \\<noteq> y\" and \"A = {x, y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<noteq> y; A = {x, y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<noteq> y; A = {x, y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  card A = 2", "have \"A \\<noteq> {}\""], ["proof (prove)\nusing this:\n  card A = 2\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<noteq> y; A = {x, y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  A \\<noteq> {}", "obtain x where \"x \\<in> A\""], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> A \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<noteq> y; A = {x, y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with assms"], ["proof (chain)\npicking this:\n  card A = 2\n  x \\<in> A", "obtain y where \"x \\<noteq> y\" and \"A = {x, y}\""], ["proof (prove)\nusing this:\n  card A = 2\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>x \\<noteq> y; A = {x, y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule card_2_E_1)"], ["proof (state)\nthis:\n  x \\<noteq> y\n  A = {x, y}\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<noteq> y; A = {x, y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  A = {x, y}\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Sums\\<close>"], ["", "lemma sum_tail_nat: \"0 < b \\<Longrightarrow> a \\<le> (b::nat) \\<Longrightarrow> sum f {a..b} = f b + sum f {a..b - 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < b; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> sum f {a..b} = f b + sum f {a..b - 1}", "by (metis One_nat_def Suc_pred add.commute not_le sum.cl_ivl_Suc)"], ["", "lemma sum_atLeast_Suc_shift: \"0 < b \\<Longrightarrow> a \\<le> b \\<Longrightarrow> sum f {Suc a..b} = (\\<Sum>i=a..b - 1. f (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < b; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> sum f {Suc a..b} = (\\<Sum>i = a..b - 1. f (Suc i))", "by (metis Suc_pred' sum.shift_bounds_cl_Suc_ivl)"], ["", "lemma sum_split_nat_ivl:\n  \"a \\<le> Suc j \\<Longrightarrow> j \\<le> b \\<Longrightarrow> sum f {a..j} + sum f {Suc j..b} = sum f {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> Suc j; j \\<le> b\\<rbrakk>\n    \\<Longrightarrow> sum f {a..j} + sum f {Suc j..b} = sum f {a..b}", "by (metis Suc_eq_plus1 le_Suc_ex sum.ub_add_nat)"], ["", "subsection \\<open>@{const count_list}\\<close>"], ["", "lemma count_list_eq_0_iff: \"count_list xs x = 0 \\<longleftrightarrow> x \\<notin> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (count_list xs x = 0) = (x \\<notin> set xs)", "by (induct xs) simp_all"], ["", "lemma count_list_append: \"count_list (xs @ ys) x = count_list xs x + count_list ys x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. count_list (xs @ ys) x = count_list xs x + count_list ys x", "by (induct xs) simp_all"], ["", "lemma count_list_map_ge: \"count_list xs x \\<le> count_list (map f xs) (f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. count_list xs x \\<le> count_list (map f xs) (f x)", "by (induct xs) simp_all"], ["", "lemma count_list_gr_1_E:\n  assumes \"1 < count_list xs x\"\n  obtains i j where \"i < j\" and \"j < length xs\" and \"xs ! i = x\" and \"xs ! j = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; j < length xs; xs ! i = x; xs ! j = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; j < length xs; xs ! i = x; xs ! j = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  1 < count_list xs x", "have \"count_list xs x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  1 < count_list xs x\n\ngoal (1 subgoal):\n 1. count_list xs x \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  count_list xs x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; j < length xs; xs ! i = x; xs ! j = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"x \\<in> set xs\""], ["proof (prove)\nusing this:\n  count_list xs x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x \\<in> set xs", "by (simp only: count_list_eq_0_iff not_not)"], ["proof (state)\nthis:\n  x \\<in> set xs\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; j < length xs; xs ! i = x; xs ! j = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  x \\<in> set xs", "obtain ys zs where xs: \"xs = ys @ x # zs\" and \"x \\<notin> set ys\""], ["proof (prove)\nusing this:\n  x \\<in> set xs\n\ngoal (1 subgoal):\n 1. (\\<And>ys zs.\n        \\<lbrakk>xs = ys @ x # zs; x \\<notin> set ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson split_list_first)"], ["proof (state)\nthis:\n  xs = ys @ x # zs\n  x \\<notin> set ys\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; j < length xs; xs ! i = x; xs ! j = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"count_list xs x = Suc (count_list zs x)\""], ["proof (prove)\nusing this:\n  xs = ys @ x # zs\n  x \\<notin> set ys\n\ngoal (1 subgoal):\n 1. count_list xs x = Suc (count_list zs x)", "by (simp add: count_list_append)"], ["proof (state)\nthis:\n  count_list xs x = Suc (count_list zs x)\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; j < length xs; xs ! i = x; xs ! j = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with assms"], ["proof (chain)\npicking this:\n  1 < count_list xs x\n  count_list xs x = Suc (count_list zs x)", "have \"count_list zs x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  1 < count_list xs x\n  count_list xs x = Suc (count_list zs x)\n\ngoal (1 subgoal):\n 1. count_list zs x \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  count_list zs x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; j < length xs; xs ! i = x; xs ! j = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"x \\<in> set zs\""], ["proof (prove)\nusing this:\n  count_list zs x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x \\<in> set zs", "by (simp only: count_list_eq_0_iff not_not)"], ["proof (state)\nthis:\n  x \\<in> set zs\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; j < length xs; xs ! i = x; xs ! j = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  x \\<in> set zs", "obtain j where \"j < length zs\" and \"x = zs ! j\""], ["proof (prove)\nusing this:\n  x \\<in> set zs\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>j < length zs; x = zs ! j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis in_set_conv_nth)"], ["proof (state)\nthis:\n  j < length zs\n  x = zs ! j\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; j < length xs; xs ! i = x; xs ! j = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. ?i < ?j\n 2. ?j < length xs\n 3. xs ! ?i = x\n 4. xs ! ?j = x", "show \"length ys < length ys + Suc j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length ys < length ys + Suc j", "by simp"], ["proof (state)\nthis:\n  length ys < length ys + Suc j\n\ngoal (3 subgoals):\n 1. length ys + Suc j < length xs\n 2. xs ! length ys = x\n 3. xs ! (length ys + Suc j) = x", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. length ys + Suc j < length xs\n 2. xs ! length ys = x\n 3. xs ! (length ys + Suc j) = x", "from \\<open>j < length zs\\<close>"], ["proof (chain)\npicking this:\n  j < length zs", "show \"length ys + Suc j < length xs\""], ["proof (prove)\nusing this:\n  j < length zs\n\ngoal (1 subgoal):\n 1. length ys + Suc j < length xs", "by (simp add: xs)"], ["proof (state)\nthis:\n  length ys + Suc j < length xs\n\ngoal (2 subgoals):\n 1. xs ! length ys = x\n 2. xs ! (length ys + Suc j) = x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. xs ! length ys = x\n 2. xs ! (length ys + Suc j) = x", "show \"xs ! length ys = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs ! length ys = x", "by (simp add: xs)"], ["proof (state)\nthis:\n  xs ! length ys = x\n\ngoal (1 subgoal):\n 1. xs ! (length ys + Suc j) = x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. xs ! (length ys + Suc j) = x", "show \"xs ! (length ys + Suc j) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs ! (length ys + Suc j) = x", "by (simp only: xs \\<open>x = zs ! j\\<close> nth_append_length_plus nth_Cons_Suc)"], ["proof (state)\nthis:\n  xs ! (length ys + Suc j) = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>@{const listset}\\<close>"], ["", "lemma listset_Cons: \"listset (x # xs) = (\\<Union>y\\<in>x. (#) y ` listset xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. listset (x # xs) = (\\<Union>y\\<in>x. (#) y ` listset xs)", "by (auto simp: set_Cons_def)"], ["", "lemma listset_ConsI: \"y \\<in> x \\<Longrightarrow> ys' \\<in> listset xs \\<Longrightarrow> ys = y # ys' \\<Longrightarrow> ys \\<in> listset (x # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<in> x; ys' \\<in> listset xs; ys = y # ys'\\<rbrakk>\n    \\<Longrightarrow> ys \\<in> listset (x # xs)", "by (simp add: set_Cons_def)"], ["", "lemma listset_ConsE:\n  assumes \"ys \\<in> listset (x# xs)\"\n  obtains y ys' where \"y \\<in> x\" and \"ys' \\<in> listset xs\" and \"ys = y # ys'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y ys'.\n        \\<lbrakk>y \\<in> x; ys' \\<in> listset xs; ys = y # ys'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  ys \\<in> listset (x # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>y ys'.\n        \\<lbrakk>y \\<in> x; ys' \\<in> listset xs; ys = y # ys'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: set_Cons_def)"], ["", "lemma listsetI:\n  \"length ys = length xs \\<Longrightarrow> (\\<And>i. i < length xs \\<Longrightarrow> ys ! i \\<in> xs ! i) \\<Longrightarrow> ys \\<in> listset xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>length ys = length xs;\n     \\<And>i. i < length xs \\<Longrightarrow> ys ! i \\<in> xs ! i\\<rbrakk>\n    \\<Longrightarrow> ys \\<in> listset xs", "by (induct ys xs rule: list_induct2)\n     (simp_all, smt Suc_mono list.sel(3) mem_Collect_eq nth_Cons_0 nth_tl set_Cons_def zero_less_Suc)"], ["", "lemma listsetD:\n  assumes \"ys \\<in> listset xs\"\n  shows \"length ys = length xs\" and \"\\<And>i. i < length xs \\<Longrightarrow> ys ! i \\<in> xs ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length ys = length xs &&&\n    (\\<And>i. i < length xs \\<Longrightarrow> ys ! i \\<in> xs ! i)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. length ys = length xs\n 2. \\<And>i. i < length xs \\<Longrightarrow> ys ! i \\<in> xs ! i", "from assms"], ["proof (chain)\npicking this:\n  ys \\<in> listset xs", "have \"length ys = length xs \\<and> (\\<forall>i<length xs. ys ! i \\<in> xs ! i)\""], ["proof (prove)\nusing this:\n  ys \\<in> listset xs\n\ngoal (1 subgoal):\n 1. length ys = length xs \\<and> (\\<forall>i<length xs. ys ! i \\<in> xs ! i)", "proof (induct xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       ys \\<in> listset [] \\<Longrightarrow>\n       length ys = length [] \\<and>\n       (\\<forall>i<length []. ys ! i \\<in> [] ! i)\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   ys \\<in> listset xs \\<Longrightarrow>\n                   length ys = length xs \\<and>\n                   (\\<forall>i<length xs. ys ! i \\<in> xs ! i);\n        ys \\<in> listset (a # xs)\\<rbrakk>\n       \\<Longrightarrow> length ys = length (a # xs) \\<and>\n                         (\\<forall>i<length (a # xs).\n                             ys ! i \\<in> (a # xs) ! i)", "case Nil"], ["proof (state)\nthis:\n  ys \\<in> listset []\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       ys \\<in> listset [] \\<Longrightarrow>\n       length ys = length [] \\<and>\n       (\\<forall>i<length []. ys ! i \\<in> [] ! i)\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   ys \\<in> listset xs \\<Longrightarrow>\n                   length ys = length xs \\<and>\n                   (\\<forall>i<length xs. ys ! i \\<in> xs ! i);\n        ys \\<in> listset (a # xs)\\<rbrakk>\n       \\<Longrightarrow> length ys = length (a # xs) \\<and>\n                         (\\<forall>i<length (a # xs).\n                             ys ! i \\<in> (a # xs) ! i)", "thus ?case"], ["proof (prove)\nusing this:\n  ys \\<in> listset []\n\ngoal (1 subgoal):\n 1. length ys = length [] \\<and> (\\<forall>i<length []. ys ! i \\<in> [] ! i)", "by simp"], ["proof (state)\nthis:\n  length ys = length [] \\<and> (\\<forall>i<length []. ys ! i \\<in> [] ! i)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   ys \\<in> listset xs \\<Longrightarrow>\n                   length ys = length xs \\<and>\n                   (\\<forall>i<length xs. ys ! i \\<in> xs ! i);\n        ys \\<in> listset (a # xs)\\<rbrakk>\n       \\<Longrightarrow> length ys = length (a # xs) \\<and>\n                         (\\<forall>i<length (a # xs).\n                             ys ! i \\<in> (a # xs) ! i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   ys \\<in> listset xs \\<Longrightarrow>\n                   length ys = length xs \\<and>\n                   (\\<forall>i<length xs. ys ! i \\<in> xs ! i);\n        ys \\<in> listset (a # xs)\\<rbrakk>\n       \\<Longrightarrow> length ys = length (a # xs) \\<and>\n                         (\\<forall>i<length (a # xs).\n                             ys ! i \\<in> (a # xs) ! i)", "case (Cons x xs)"], ["proof (state)\nthis:\n  ?ys \\<in> listset xs \\<Longrightarrow>\n  length ?ys = length xs \\<and> (\\<forall>i<length xs. ?ys ! i \\<in> xs ! i)\n  ys \\<in> listset (x # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   ys \\<in> listset xs \\<Longrightarrow>\n                   length ys = length xs \\<and>\n                   (\\<forall>i<length xs. ys ! i \\<in> xs ! i);\n        ys \\<in> listset (a # xs)\\<rbrakk>\n       \\<Longrightarrow> length ys = length (a # xs) \\<and>\n                         (\\<forall>i<length (a # xs).\n                             ys ! i \\<in> (a # xs) ! i)", "from Cons.prems"], ["proof (chain)\npicking this:\n  ys \\<in> listset (x # xs)", "obtain y ys' where \"y \\<in> x\" and \"ys' \\<in> listset xs\" and ys: \"ys = y # ys'\""], ["proof (prove)\nusing this:\n  ys \\<in> listset (x # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>y ys'.\n        \\<lbrakk>y \\<in> x; ys' \\<in> listset xs; ys = y # ys'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule listset_ConsE)"], ["proof (state)\nthis:\n  y \\<in> x\n  ys' \\<in> listset xs\n  ys = y # ys'\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   ys \\<in> listset xs \\<Longrightarrow>\n                   length ys = length xs \\<and>\n                   (\\<forall>i<length xs. ys ! i \\<in> xs ! i);\n        ys \\<in> listset (a # xs)\\<rbrakk>\n       \\<Longrightarrow> length ys = length (a # xs) \\<and>\n                         (\\<forall>i<length (a # xs).\n                             ys ! i \\<in> (a # xs) ! i)", "from this(2)"], ["proof (chain)\npicking this:\n  ys' \\<in> listset xs", "have \"length ys' = length xs \\<and> (\\<forall>i<length xs. ys' ! i \\<in> xs ! i)\""], ["proof (prove)\nusing this:\n  ys' \\<in> listset xs\n\ngoal (1 subgoal):\n 1. length ys' = length xs \\<and>\n    (\\<forall>i<length xs. ys' ! i \\<in> xs ! i)", "by (rule Cons.hyps)"], ["proof (state)\nthis:\n  length ys' = length xs \\<and> (\\<forall>i<length xs. ys' ! i \\<in> xs ! i)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   ys \\<in> listset xs \\<Longrightarrow>\n                   length ys = length xs \\<and>\n                   (\\<forall>i<length xs. ys ! i \\<in> xs ! i);\n        ys \\<in> listset (a # xs)\\<rbrakk>\n       \\<Longrightarrow> length ys = length (a # xs) \\<and>\n                         (\\<forall>i<length (a # xs).\n                             ys ! i \\<in> (a # xs) ! i)", "hence 1: \"length ys' = length xs\" and 2: \"\\<And>i. i < length xs \\<Longrightarrow> ys' ! i \\<in> xs ! i\""], ["proof (prove)\nusing this:\n  length ys' = length xs \\<and> (\\<forall>i<length xs. ys' ! i \\<in> xs ! i)\n\ngoal (1 subgoal):\n 1. length ys' = length xs &&&\n    (\\<And>i. i < length xs \\<Longrightarrow> ys' ! i \\<in> xs ! i)", "by simp_all"], ["proof (state)\nthis:\n  length ys' = length xs\n  ?i < length xs \\<Longrightarrow> ys' ! ?i \\<in> xs ! ?i\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   ys \\<in> listset xs \\<Longrightarrow>\n                   length ys = length xs \\<and>\n                   (\\<forall>i<length xs. ys ! i \\<in> xs ! i);\n        ys \\<in> listset (a # xs)\\<rbrakk>\n       \\<Longrightarrow> length ys = length (a # xs) \\<and>\n                         (\\<forall>i<length (a # xs).\n                             ys ! i \\<in> (a # xs) ! i)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. length ys = length (x # xs) \\<and>\n    (\\<forall>i<length (x # xs). ys ! i \\<in> (x # xs) ! i)", "proof (intro conjI allI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. length ys = length (x # xs)\n 2. \\<And>i. i < length (x # xs) \\<Longrightarrow> ys ! i \\<in> (x # xs) ! i", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. length ys = length (x # xs)\n 2. \\<And>i. i < length (x # xs) \\<Longrightarrow> ys ! i \\<in> (x # xs) ! i", "assume \"i < length (x # xs)\""], ["proof (state)\nthis:\n  i < length (x # xs)\n\ngoal (2 subgoals):\n 1. length ys = length (x # xs)\n 2. \\<And>i. i < length (x # xs) \\<Longrightarrow> ys ! i \\<in> (x # xs) ! i", "show \"ys ! i \\<in> (x # xs) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ys ! i \\<in> (x # xs) ! i", "proof (cases i)"], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> ys ! i \\<in> (x # xs) ! i\n 2. \\<And>nat. i = Suc nat \\<Longrightarrow> ys ! i \\<in> (x # xs) ! i", "case 0"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> ys ! i \\<in> (x # xs) ! i\n 2. \\<And>nat. i = Suc nat \\<Longrightarrow> ys ! i \\<in> (x # xs) ! i", "with \\<open>y \\<in> x\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> x\n  i = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> x\n  i = 0\n\ngoal (1 subgoal):\n 1. ys ! i \\<in> (x # xs) ! i", "by (simp add: ys)"], ["proof (state)\nthis:\n  ys ! i \\<in> (x # xs) ! i\n\ngoal (1 subgoal):\n 1. \\<And>nat. i = Suc nat \\<Longrightarrow> ys ! i \\<in> (x # xs) ! i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. i = Suc nat \\<Longrightarrow> ys ! i \\<in> (x # xs) ! i", "case (Suc j)"], ["proof (state)\nthis:\n  i = Suc j\n\ngoal (1 subgoal):\n 1. \\<And>nat. i = Suc nat \\<Longrightarrow> ys ! i \\<in> (x # xs) ! i", "with \\<open>i < length (x # xs)\\<close>"], ["proof (chain)\npicking this:\n  i < length (x # xs)\n  i = Suc j", "have \"j < length xs\""], ["proof (prove)\nusing this:\n  i < length (x # xs)\n  i = Suc j\n\ngoal (1 subgoal):\n 1. j < length xs", "by simp"], ["proof (state)\nthis:\n  j < length xs\n\ngoal (1 subgoal):\n 1. \\<And>nat. i = Suc nat \\<Longrightarrow> ys ! i \\<in> (x # xs) ! i", "hence \"ys' ! j \\<in> xs ! j\""], ["proof (prove)\nusing this:\n  j < length xs\n\ngoal (1 subgoal):\n 1. ys' ! j \\<in> xs ! j", "by (rule 2)"], ["proof (state)\nthis:\n  ys' ! j \\<in> xs ! j\n\ngoal (1 subgoal):\n 1. \\<And>nat. i = Suc nat \\<Longrightarrow> ys ! i \\<in> (x # xs) ! i", "thus ?thesis"], ["proof (prove)\nusing this:\n  ys' ! j \\<in> xs ! j\n\ngoal (1 subgoal):\n 1. ys ! i \\<in> (x # xs) ! i", "by (simp add: ys \\<open>i = Suc j\\<close>)"], ["proof (state)\nthis:\n  ys ! i \\<in> (x # xs) ! i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ys ! i \\<in> (x # xs) ! i\n\ngoal (1 subgoal):\n 1. length ys = length (x # xs)", "qed (simp add: ys 1)"], ["proof (state)\nthis:\n  length ys = length (x # xs) \\<and>\n  (\\<forall>i<length (x # xs). ys ! i \\<in> (x # xs) ! i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  length ys = length xs \\<and> (\\<forall>i<length xs. ys ! i \\<in> xs ! i)\n\ngoal (2 subgoals):\n 1. length ys = length xs\n 2. \\<And>i. i < length xs \\<Longrightarrow> ys ! i \\<in> xs ! i", "thus \"length ys = length xs\" and \"\\<And>i. i < length xs \\<Longrightarrow> ys ! i \\<in> xs ! i\""], ["proof (prove)\nusing this:\n  length ys = length xs \\<and> (\\<forall>i<length xs. ys ! i \\<in> xs ! i)\n\ngoal (1 subgoal):\n 1. length ys = length xs &&&\n    (\\<And>i. i < length xs \\<Longrightarrow> ys ! i \\<in> xs ! i)", "by simp_all"], ["proof (state)\nthis:\n  length ys = length xs\n  ?i < length xs \\<Longrightarrow> ys ! ?i \\<in> xs ! ?i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma listset_singletonI: \"a \\<in> A \\<Longrightarrow> ys = [a] \\<Longrightarrow> ys \\<in> listset [A]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> A; ys = [a]\\<rbrakk>\n    \\<Longrightarrow> ys \\<in> listset [A]", "by simp"], ["", "lemma listset_singletonE:\n  assumes \"ys \\<in> listset [A]\"\n  obtains a where \"a \\<in> A\" and \"ys = [a]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> A; ys = [a]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  ys \\<in> listset [A]\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> A; ys = [a]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "lemma listset_doubletonI: \"a \\<in> A \\<Longrightarrow> b \\<in> B \\<Longrightarrow> ys = [a, b] \\<Longrightarrow> ys \\<in> listset [A, B]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> A; b \\<in> B; ys = [a, b]\\<rbrakk>\n    \\<Longrightarrow> ys \\<in> listset [A, B]", "by (simp add: set_Cons_def)"], ["", "lemma listset_doubletonE:\n  assumes \"ys \\<in> listset [A, B]\"\n  obtains a b where \"a \\<in> A\" and \"b \\<in> B\" and \"ys = [a, b]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a \\<in> A; b \\<in> B; ys = [a, b]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  ys \\<in> listset [A, B]\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a \\<in> A; b \\<in> B; ys = [a, b]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: set_Cons_def)"], ["", "lemma listset_appendI:\n  \"ys1 \\<in> listset xs1 \\<Longrightarrow> ys2 \\<in> listset xs2 \\<Longrightarrow> ys = ys1 @ ys2 \\<Longrightarrow> ys \\<in> listset (xs1 @ xs2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ys1 \\<in> listset xs1; ys2 \\<in> listset xs2;\n     ys = ys1 @ ys2\\<rbrakk>\n    \\<Longrightarrow> ys \\<in> listset (xs1 @ xs2)", "by (induct xs1 arbitrary: ys ys1 ys2)\n      (simp, auto simp del: listset.simps elim!: listset_ConsE intro!: listset_ConsI)"], ["", "lemma listset_appendE:\n  assumes \"ys \\<in> listset (xs1 @ xs2)\"\n  obtains ys1 ys2 where \"ys1 \\<in> listset xs1\" and \"ys2 \\<in> listset xs2\" and \"ys = ys1 @ ys2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ys1 ys2.\n        \\<lbrakk>ys1 \\<in> listset xs1; ys2 \\<in> listset xs2;\n         ys = ys1 @ ys2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  ys \\<in> listset (xs1 @ xs2)\n\ngoal (1 subgoal):\n 1. (\\<And>ys1 ys2.\n        \\<lbrakk>ys1 \\<in> listset xs1; ys2 \\<in> listset xs2;\n         ys = ys1 @ ys2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (induct xs1 arbitrary: thesis ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>thesis ys.\n       \\<lbrakk>\\<And>ys1 ys2.\n                   \\<lbrakk>ys1 \\<in> listset []; ys2 \\<in> listset xs2;\n                    ys = ys1 @ ys2\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ys \\<in> listset ([] @ xs2)\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>a xs1 thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys1 ys2.\n                               \\<lbrakk>ys1 \\<in> listset xs1;\n                                ys2 \\<in> listset xs2;\n                                ys = ys1 @ ys2\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (xs1 @ xs2)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys1 ys2.\n           \\<lbrakk>ys1 \\<in> listset (a # xs1); ys2 \\<in> listset xs2;\n            ys = ys1 @ ys2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset ((a # xs1) @ xs2)\\<rbrakk>\n       \\<Longrightarrow> thesis", "case Nil"], ["proof (state)\nthis:\n  \\<lbrakk>?ys1.0 \\<in> listset []; ?ys2.0 \\<in> listset xs2;\n   ys = ?ys1.0 @ ?ys2.0\\<rbrakk>\n  \\<Longrightarrow> thesis\n  ys \\<in> listset ([] @ xs2)\n\ngoal (2 subgoals):\n 1. \\<And>thesis ys.\n       \\<lbrakk>\\<And>ys1 ys2.\n                   \\<lbrakk>ys1 \\<in> listset []; ys2 \\<in> listset xs2;\n                    ys = ys1 @ ys2\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ys \\<in> listset ([] @ xs2)\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>a xs1 thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys1 ys2.\n                               \\<lbrakk>ys1 \\<in> listset xs1;\n                                ys2 \\<in> listset xs2;\n                                ys = ys1 @ ys2\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (xs1 @ xs2)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys1 ys2.\n           \\<lbrakk>ys1 \\<in> listset (a # xs1); ys2 \\<in> listset xs2;\n            ys = ys1 @ ys2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset ((a # xs1) @ xs2)\\<rbrakk>\n       \\<Longrightarrow> thesis", "have \"[] \\<in> listset []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [] \\<in> listset []", "by simp"], ["proof (state)\nthis:\n  [] \\<in> listset []\n\ngoal (2 subgoals):\n 1. \\<And>thesis ys.\n       \\<lbrakk>\\<And>ys1 ys2.\n                   \\<lbrakk>ys1 \\<in> listset []; ys2 \\<in> listset xs2;\n                    ys = ys1 @ ys2\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ys \\<in> listset ([] @ xs2)\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>a xs1 thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys1 ys2.\n                               \\<lbrakk>ys1 \\<in> listset xs1;\n                                ys2 \\<in> listset xs2;\n                                ys = ys1 @ ys2\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (xs1 @ xs2)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys1 ys2.\n           \\<lbrakk>ys1 \\<in> listset (a # xs1); ys2 \\<in> listset xs2;\n            ys = ys1 @ ys2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset ((a # xs1) @ xs2)\\<rbrakk>\n       \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  [] \\<in> listset []\n\ngoal (2 subgoals):\n 1. \\<And>thesis ys.\n       \\<lbrakk>\\<And>ys1 ys2.\n                   \\<lbrakk>ys1 \\<in> listset []; ys2 \\<in> listset xs2;\n                    ys = ys1 @ ys2\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ys \\<in> listset ([] @ xs2)\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>a xs1 thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys1 ys2.\n                               \\<lbrakk>ys1 \\<in> listset xs1;\n                                ys2 \\<in> listset xs2;\n                                ys = ys1 @ ys2\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (xs1 @ xs2)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys1 ys2.\n           \\<lbrakk>ys1 \\<in> listset (a # xs1); ys2 \\<in> listset xs2;\n            ys = ys1 @ ys2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset ((a # xs1) @ xs2)\\<rbrakk>\n       \\<Longrightarrow> thesis", "from Nil(2)"], ["proof (chain)\npicking this:\n  ys \\<in> listset ([] @ xs2)", "have \"ys \\<in> listset xs2\""], ["proof (prove)\nusing this:\n  ys \\<in> listset ([] @ xs2)\n\ngoal (1 subgoal):\n 1. ys \\<in> listset xs2", "by simp"], ["proof (state)\nthis:\n  ys \\<in> listset xs2\n\ngoal (2 subgoals):\n 1. \\<And>thesis ys.\n       \\<lbrakk>\\<And>ys1 ys2.\n                   \\<lbrakk>ys1 \\<in> listset []; ys2 \\<in> listset xs2;\n                    ys = ys1 @ ys2\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ys \\<in> listset ([] @ xs2)\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>a xs1 thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys1 ys2.\n                               \\<lbrakk>ys1 \\<in> listset xs1;\n                                ys2 \\<in> listset xs2;\n                                ys = ys1 @ ys2\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (xs1 @ xs2)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys1 ys2.\n           \\<lbrakk>ys1 \\<in> listset (a # xs1); ys2 \\<in> listset xs2;\n            ys = ys1 @ ys2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset ((a # xs1) @ xs2)\\<rbrakk>\n       \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  [] \\<in> listset []\n  ys \\<in> listset xs2", "show ?case"], ["proof (prove)\nusing this:\n  [] \\<in> listset []\n  ys \\<in> listset xs2\n\ngoal (1 subgoal):\n 1. thesis", "by (rule Nil) simp"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>a xs1 thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys1 ys2.\n                               \\<lbrakk>ys1 \\<in> listset xs1;\n                                ys2 \\<in> listset xs2;\n                                ys = ys1 @ ys2\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (xs1 @ xs2)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys1 ys2.\n           \\<lbrakk>ys1 \\<in> listset (a # xs1); ys2 \\<in> listset xs2;\n            ys = ys1 @ ys2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset ((a # xs1) @ xs2)\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs1 thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys1 ys2.\n                               \\<lbrakk>ys1 \\<in> listset xs1;\n                                ys2 \\<in> listset xs2;\n                                ys = ys1 @ ys2\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (xs1 @ xs2)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys1 ys2.\n           \\<lbrakk>ys1 \\<in> listset (a # xs1); ys2 \\<in> listset xs2;\n            ys = ys1 @ ys2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset ((a # xs1) @ xs2)\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (Cons x xs1)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>ys1 ys2.\n              \\<lbrakk>ys1 \\<in> listset xs1; ys2 \\<in> listset xs2;\n               ?ys = ys1 @ ys2\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   ?ys \\<in> listset (xs1 @ xs2)\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>?ys1.0 \\<in> listset (x # xs1); ?ys2.0 \\<in> listset xs2;\n   ys = ?ys1.0 @ ?ys2.0\\<rbrakk>\n  \\<Longrightarrow> thesis\n  ys \\<in> listset ((x # xs1) @ xs2)\n\ngoal (1 subgoal):\n 1. \\<And>a xs1 thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys1 ys2.\n                               \\<lbrakk>ys1 \\<in> listset xs1;\n                                ys2 \\<in> listset xs2;\n                                ys = ys1 @ ys2\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (xs1 @ xs2)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys1 ys2.\n           \\<lbrakk>ys1 \\<in> listset (a # xs1); ys2 \\<in> listset xs2;\n            ys = ys1 @ ys2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset ((a # xs1) @ xs2)\\<rbrakk>\n       \\<Longrightarrow> thesis", "from Cons.prems(2)"], ["proof (chain)\npicking this:\n  ys \\<in> listset ((x # xs1) @ xs2)", "have \"ys \\<in> listset (x # (xs1 @ xs2))\""], ["proof (prove)\nusing this:\n  ys \\<in> listset ((x # xs1) @ xs2)\n\ngoal (1 subgoal):\n 1. ys \\<in> listset (x # xs1 @ xs2)", "by simp"], ["proof (state)\nthis:\n  ys \\<in> listset (x # xs1 @ xs2)\n\ngoal (1 subgoal):\n 1. \\<And>a xs1 thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys1 ys2.\n                               \\<lbrakk>ys1 \\<in> listset xs1;\n                                ys2 \\<in> listset xs2;\n                                ys = ys1 @ ys2\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (xs1 @ xs2)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys1 ys2.\n           \\<lbrakk>ys1 \\<in> listset (a # xs1); ys2 \\<in> listset xs2;\n            ys = ys1 @ ys2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset ((a # xs1) @ xs2)\\<rbrakk>\n       \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  ys \\<in> listset (x # xs1 @ xs2)", "obtain y ys' where \"y \\<in> x\" and \"ys' \\<in> listset (xs1 @ xs2)\" and ys: \"ys = y # ys'\""], ["proof (prove)\nusing this:\n  ys \\<in> listset (x # xs1 @ xs2)\n\ngoal (1 subgoal):\n 1. (\\<And>y ys'.\n        \\<lbrakk>y \\<in> x; ys' \\<in> listset (xs1 @ xs2);\n         ys = y # ys'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule listset_ConsE)"], ["proof (state)\nthis:\n  y \\<in> x\n  ys' \\<in> listset (xs1 @ xs2)\n  ys = y # ys'\n\ngoal (1 subgoal):\n 1. \\<And>a xs1 thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys1 ys2.\n                               \\<lbrakk>ys1 \\<in> listset xs1;\n                                ys2 \\<in> listset xs2;\n                                ys = ys1 @ ys2\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (xs1 @ xs2)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys1 ys2.\n           \\<lbrakk>ys1 \\<in> listset (a # xs1); ys2 \\<in> listset xs2;\n            ys = ys1 @ ys2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset ((a # xs1) @ xs2)\\<rbrakk>\n       \\<Longrightarrow> thesis", "from _ this(2)"], ["proof (chain)\npicking this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  ys' \\<in> listset (xs1 @ xs2)", "obtain ys1 ys2 where ys1: \"ys1 \\<in> listset xs1\" and \"ys2 \\<in> listset xs2\"\n    and ys': \"ys' = ys1 @ ys2\""], ["proof (prove)\nusing this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  ys' \\<in> listset (xs1 @ xs2)\n\ngoal (1 subgoal):\n 1. (\\<And>ys1 ys2.\n        \\<lbrakk>ys1 \\<in> listset xs1; ys2 \\<in> listset xs2;\n         ys' = ys1 @ ys2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule Cons.hyps)"], ["proof (state)\nthis:\n  ys1 \\<in> listset xs1\n  ys2 \\<in> listset xs2\n  ys' = ys1 @ ys2\n\ngoal (1 subgoal):\n 1. \\<And>a xs1 thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys1 ys2.\n                               \\<lbrakk>ys1 \\<in> listset xs1;\n                                ys2 \\<in> listset xs2;\n                                ys = ys1 @ ys2\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (xs1 @ xs2)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys1 ys2.\n           \\<lbrakk>ys1 \\<in> listset (a # xs1); ys2 \\<in> listset xs2;\n            ys = ys1 @ ys2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset ((a # xs1) @ xs2)\\<rbrakk>\n       \\<Longrightarrow> thesis", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (rule Cons.prems)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?ys1.0 \\<in> listset (x # xs1)\n 2. ?ys2.0 \\<in> listset xs2\n 3. ys = ?ys1.0 @ ?ys2.0", "from \\<open>y \\<in> x\\<close> ys1 refl"], ["proof (chain)\npicking this:\n  y \\<in> x\n  ys1 \\<in> listset xs1\n  ?t = ?t", "show \"y # ys1 \\<in> listset (x # xs1)\""], ["proof (prove)\nusing this:\n  y \\<in> x\n  ys1 \\<in> listset xs1\n  ?t = ?t\n\ngoal (1 subgoal):\n 1. y # ys1 \\<in> listset (x # xs1)", "by (rule listset_ConsI)"], ["proof (state)\nthis:\n  y # ys1 \\<in> listset (x # xs1)\n\ngoal (2 subgoals):\n 1. ?ys2.0 \\<in> listset xs2\n 2. ys = (y # ys1) @ ?ys2.0", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. ?ys2.0 \\<in> listset xs2\n 2. ys = (y # ys1) @ ?ys2.0", "show \"ys = (y # ys1) @ ys2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ys = (y # ys1) @ ys2", "by (simp add: ys ys')"], ["proof (state)\nthis:\n  ys = (y # ys1) @ ys2\n\ngoal (1 subgoal):\n 1. ys2 \\<in> listset xs2", "qed fact"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma listset_map_imageI: \"ys' \\<in> listset xs \\<Longrightarrow> ys = map f ys' \\<Longrightarrow> ys \\<in> listset (map ((`) f) xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ys' \\<in> listset xs; ys = map f ys'\\<rbrakk>\n    \\<Longrightarrow> ys \\<in> listset (map ((`) f) xs)", "by (induct xs arbitrary: ys ys')\n    (simp, auto simp del: listset.simps elim!: listset_ConsE intro!: listset_ConsI)"], ["", "lemma listset_map_imageE:\n  assumes \"ys \\<in> listset (map ((`) f) xs)\"\n  obtains ys' where \"ys' \\<in> listset xs\" and \"ys = map f ys'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ys'.\n        \\<lbrakk>ys' \\<in> listset xs; ys = map f ys'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  ys \\<in> listset (map ((`) f) xs)\n\ngoal (1 subgoal):\n 1. (\\<And>ys'.\n        \\<lbrakk>ys' \\<in> listset xs; ys = map f ys'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (induct xs arbitrary: thesis ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>thesis ys.\n       \\<lbrakk>\\<And>ys'.\n                   \\<lbrakk>ys' \\<in> listset []; ys = map f ys'\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ys \\<in> listset (map ((`) f) [])\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>a xs thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys'.\n                               \\<lbrakk>ys' \\<in> listset xs;\n                                ys = map f ys'\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (map ((`) f) xs)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys'.\n           \\<lbrakk>ys' \\<in> listset (a # xs); ys = map f ys'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset (map ((`) f) (a # xs))\\<rbrakk>\n       \\<Longrightarrow> thesis", "case Nil"], ["proof (state)\nthis:\n  \\<lbrakk>?ys' \\<in> listset []; ys = map f ?ys'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  ys \\<in> listset (map ((`) f) [])\n\ngoal (2 subgoals):\n 1. \\<And>thesis ys.\n       \\<lbrakk>\\<And>ys'.\n                   \\<lbrakk>ys' \\<in> listset []; ys = map f ys'\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ys \\<in> listset (map ((`) f) [])\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>a xs thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys'.\n                               \\<lbrakk>ys' \\<in> listset xs;\n                                ys = map f ys'\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (map ((`) f) xs)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys'.\n           \\<lbrakk>ys' \\<in> listset (a # xs); ys = map f ys'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset (map ((`) f) (a # xs))\\<rbrakk>\n       \\<Longrightarrow> thesis", "from Nil(2)"], ["proof (chain)\npicking this:\n  ys \\<in> listset (map ((`) f) [])", "have \"ys = map f []\""], ["proof (prove)\nusing this:\n  ys \\<in> listset (map ((`) f) [])\n\ngoal (1 subgoal):\n 1. ys = map f []", "by simp"], ["proof (state)\nthis:\n  ys = map f []\n\ngoal (2 subgoals):\n 1. \\<And>thesis ys.\n       \\<lbrakk>\\<And>ys'.\n                   \\<lbrakk>ys' \\<in> listset []; ys = map f ys'\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ys \\<in> listset (map ((`) f) [])\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>a xs thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys'.\n                               \\<lbrakk>ys' \\<in> listset xs;\n                                ys = map f ys'\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (map ((`) f) xs)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys'.\n           \\<lbrakk>ys' \\<in> listset (a # xs); ys = map f ys'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset (map ((`) f) (a # xs))\\<rbrakk>\n       \\<Longrightarrow> thesis", "with _"], ["proof (chain)\npicking this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  ys = map f []", "show ?case"], ["proof (prove)\nusing this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  ys = map f []\n\ngoal (1 subgoal):\n 1. thesis", "by (rule Nil) simp"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>a xs thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys'.\n                               \\<lbrakk>ys' \\<in> listset xs;\n                                ys = map f ys'\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (map ((`) f) xs)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys'.\n           \\<lbrakk>ys' \\<in> listset (a # xs); ys = map f ys'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset (map ((`) f) (a # xs))\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys'.\n                               \\<lbrakk>ys' \\<in> listset xs;\n                                ys = map f ys'\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (map ((`) f) xs)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys'.\n           \\<lbrakk>ys' \\<in> listset (a # xs); ys = map f ys'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset (map ((`) f) (a # xs))\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>ys'.\n              \\<lbrakk>ys' \\<in> listset xs; ?ys = map f ys'\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   ?ys \\<in> listset (map ((`) f) xs)\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>?ys' \\<in> listset (x # xs); ys = map f ?ys'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  ys \\<in> listset (map ((`) f) (x # xs))\n\ngoal (1 subgoal):\n 1. \\<And>a xs thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys'.\n                               \\<lbrakk>ys' \\<in> listset xs;\n                                ys = map f ys'\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (map ((`) f) xs)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys'.\n           \\<lbrakk>ys' \\<in> listset (a # xs); ys = map f ys'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset (map ((`) f) (a # xs))\\<rbrakk>\n       \\<Longrightarrow> thesis", "from Cons.prems(2)"], ["proof (chain)\npicking this:\n  ys \\<in> listset (map ((`) f) (x # xs))", "have \"ys \\<in> listset (f ` x # map ((`) f) xs)\""], ["proof (prove)\nusing this:\n  ys \\<in> listset (map ((`) f) (x # xs))\n\ngoal (1 subgoal):\n 1. ys \\<in> listset (f ` x # map ((`) f) xs)", "by simp"], ["proof (state)\nthis:\n  ys \\<in> listset (f ` x # map ((`) f) xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys'.\n                               \\<lbrakk>ys' \\<in> listset xs;\n                                ys = map f ys'\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (map ((`) f) xs)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys'.\n           \\<lbrakk>ys' \\<in> listset (a # xs); ys = map f ys'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset (map ((`) f) (a # xs))\\<rbrakk>\n       \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  ys \\<in> listset (f ` x # map ((`) f) xs)", "obtain y ys' where \"y \\<in> f ` x\" and \"ys' \\<in> listset (map ((`) f) xs)\" and ys: \"ys = y # ys'\""], ["proof (prove)\nusing this:\n  ys \\<in> listset (f ` x # map ((`) f) xs)\n\ngoal (1 subgoal):\n 1. (\\<And>y ys'.\n        \\<lbrakk>y \\<in> f ` x; ys' \\<in> listset (map ((`) f) xs);\n         ys = y # ys'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule listset_ConsE)"], ["proof (state)\nthis:\n  y \\<in> f ` x\n  ys' \\<in> listset (map ((`) f) xs)\n  ys = y # ys'\n\ngoal (1 subgoal):\n 1. \\<And>a xs thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys'.\n                               \\<lbrakk>ys' \\<in> listset xs;\n                                ys = map f ys'\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (map ((`) f) xs)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys'.\n           \\<lbrakk>ys' \\<in> listset (a # xs); ys = map f ys'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset (map ((`) f) (a # xs))\\<rbrakk>\n       \\<Longrightarrow> thesis", "from _ this(2)"], ["proof (chain)\npicking this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  ys' \\<in> listset (map ((`) f) xs)", "obtain ys1 where ys1: \"ys1 \\<in> listset xs\" and ys': \"ys' = map f ys1\""], ["proof (prove)\nusing this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  ys' \\<in> listset (map ((`) f) xs)\n\ngoal (1 subgoal):\n 1. (\\<And>ys1.\n        \\<lbrakk>ys1 \\<in> listset xs; ys' = map f ys1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule Cons.hyps)"], ["proof (state)\nthis:\n  ys1 \\<in> listset xs\n  ys' = map f ys1\n\ngoal (1 subgoal):\n 1. \\<And>a xs thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys'.\n                               \\<lbrakk>ys' \\<in> listset xs;\n                                ys = map f ys'\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (map ((`) f) xs)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys'.\n           \\<lbrakk>ys' \\<in> listset (a # xs); ys = map f ys'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset (map ((`) f) (a # xs))\\<rbrakk>\n       \\<Longrightarrow> thesis", "from \\<open>y \\<in> f ` x\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> f ` x", "obtain y1 where \"y1 \\<in> x\" and y: \"y = f y1\""], ["proof (prove)\nusing this:\n  y \\<in> f ` x\n\ngoal (1 subgoal):\n 1. (\\<And>y1.\n        \\<lbrakk>y1 \\<in> x; y = f y1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  y1 \\<in> x\n  y = f y1\n\ngoal (1 subgoal):\n 1. \\<And>a xs thesis ys.\n       \\<lbrakk>\\<And>thesis ys.\n                   \\<lbrakk>\\<And>ys'.\n                               \\<lbrakk>ys' \\<in> listset xs;\n                                ys = map f ys'\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    ys \\<in> listset (map ((`) f) xs)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>ys'.\n           \\<lbrakk>ys' \\<in> listset (a # xs); ys = map f ys'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        ys \\<in> listset (map ((`) f) (a # xs))\\<rbrakk>\n       \\<Longrightarrow> thesis", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (rule Cons.prems)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?ys' \\<in> listset (x # xs)\n 2. ys = map f ?ys'", "from \\<open>y1 \\<in> x\\<close> ys1 refl"], ["proof (chain)\npicking this:\n  y1 \\<in> x\n  ys1 \\<in> listset xs\n  ?t = ?t", "show \"y1 # ys1 \\<in> listset (x # xs)\""], ["proof (prove)\nusing this:\n  y1 \\<in> x\n  ys1 \\<in> listset xs\n  ?t = ?t\n\ngoal (1 subgoal):\n 1. y1 # ys1 \\<in> listset (x # xs)", "by (rule listset_ConsI)"], ["proof (state)\nthis:\n  y1 # ys1 \\<in> listset (x # xs)\n\ngoal (1 subgoal):\n 1. ys = map f (y1 # ys1)", "qed (simp add: ys ys' y)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma listset_permE:\n  assumes \"ys \\<in> listset xs\" and \"bij_betw f {..<length xs} {..<length xs'}\"\n    and \"\\<And>i. i < length xs \\<Longrightarrow> xs' ! i = xs ! f i\"\n  obtains ys' where \"ys' \\<in> listset xs'\" and \"length ys' = length ys\"\n    and \"\\<And>i. i < length ys \\<Longrightarrow> ys' ! i = ys ! f i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ys'.\n        \\<lbrakk>ys' \\<in> listset xs'; length ys' = length ys;\n         \\<And>i.\n            i < length ys \\<Longrightarrow> ys' ! i = ys ! f i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>ys'.\n        \\<lbrakk>ys' \\<in> listset xs'; length ys' = length ys;\n         \\<And>i.\n            i < length ys \\<Longrightarrow> ys' ! i = ys ! f i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms(1)"], ["proof (chain)\npicking this:\n  ys \\<in> listset xs", "have len_ys: \"length ys = length xs\""], ["proof (prove)\nusing this:\n  ys \\<in> listset xs\n\ngoal (1 subgoal):\n 1. length ys = length xs", "by (rule listsetD)"], ["proof (state)\nthis:\n  length ys = length xs\n\ngoal (1 subgoal):\n 1. (\\<And>ys'.\n        \\<lbrakk>ys' \\<in> listset xs'; length ys' = length ys;\n         \\<And>i.\n            i < length ys \\<Longrightarrow> ys' ! i = ys ! f i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms(2)"], ["proof (chain)\npicking this:\n  bij_betw f {..<length xs} {..<length xs'}", "have \"card {..<length xs} = card {..<length xs'}\""], ["proof (prove)\nusing this:\n  bij_betw f {..<length xs} {..<length xs'}\n\ngoal (1 subgoal):\n 1. card {..<length xs} = card {..<length xs'}", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card {..<length xs} = card {..<length xs'}\n\ngoal (1 subgoal):\n 1. (\\<And>ys'.\n        \\<lbrakk>ys' \\<in> listset xs'; length ys' = length ys;\n         \\<And>i.\n            i < length ys \\<Longrightarrow> ys' ! i = ys ! f i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence len_xs: \"length xs = length xs'\""], ["proof (prove)\nusing this:\n  card {..<length xs} = card {..<length xs'}\n\ngoal (1 subgoal):\n 1. length xs = length xs'", "by simp"], ["proof (state)\nthis:\n  length xs = length xs'\n\ngoal (1 subgoal):\n 1. (\\<And>ys'.\n        \\<lbrakk>ys' \\<in> listset xs'; length ys' = length ys;\n         \\<And>i.\n            i < length ys \\<Longrightarrow> ys' ! i = ys ! f i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define ys' where \"ys' = map (\\<lambda>i. ys ! (f i)) [0..<length ys]\""], ["proof (state)\nthis:\n  ys' = map (\\<lambda>i. ys ! f i) [0..<length ys]\n\ngoal (1 subgoal):\n 1. (\\<And>ys'.\n        \\<lbrakk>ys' \\<in> listset xs'; length ys' = length ys;\n         \\<And>i.\n            i < length ys \\<Longrightarrow> ys' ! i = ys ! f i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 1: \"ys' ! i = ys ! f i\" if \"i < length ys\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. ys' ! i = ys ! f i", "using that"], ["proof (prove)\nusing this:\n  i < length ys\n\ngoal (1 subgoal):\n 1. ys' ! i = ys ! f i", "by (simp add: ys'_def)"], ["proof (state)\nthis:\n  ?i < length ys \\<Longrightarrow> ys' ! ?i = ys ! f ?i\n\ngoal (1 subgoal):\n 1. (\\<And>ys'.\n        \\<lbrakk>ys' \\<in> listset xs'; length ys' = length ys;\n         \\<And>i.\n            i < length ys \\<Longrightarrow> ys' ! i = ys ! f i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. ?ys' \\<in> listset xs'\n 2. length ?ys' = length ys\n 3. \\<And>i. i < length ys \\<Longrightarrow> ?ys' ! i = ys ! f i", "show \"ys' \\<in> listset xs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ys' \\<in> listset xs'", "proof (rule listsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. length ys' = length xs'\n 2. \\<And>i. i < length xs' \\<Longrightarrow> ys' ! i \\<in> xs' ! i", "show \"length ys' = length xs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length ys' = length xs'", "by (simp add: ys'_def len_ys len_xs)"], ["proof (state)\nthis:\n  length ys' = length xs'\n\ngoal (1 subgoal):\n 1. \\<And>i. i < length xs' \\<Longrightarrow> ys' ! i \\<in> xs' ! i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i < length xs' \\<Longrightarrow> ys' ! i \\<in> xs' ! i", "assume \"i < length xs'\""], ["proof (state)\nthis:\n  i < length xs'\n\ngoal (1 subgoal):\n 1. \\<And>i. i < length xs' \\<Longrightarrow> ys' ! i \\<in> xs' ! i", "hence \"i < length xs\""], ["proof (prove)\nusing this:\n  i < length xs'\n\ngoal (1 subgoal):\n 1. i < length xs", "by (simp only: len_xs)"], ["proof (state)\nthis:\n  i < length xs\n\ngoal (1 subgoal):\n 1. \\<And>i. i < length xs' \\<Longrightarrow> ys' ! i \\<in> xs' ! i", "hence \"i < length ys\""], ["proof (prove)\nusing this:\n  i < length xs\n\ngoal (1 subgoal):\n 1. i < length ys", "by (simp only: len_ys)"], ["proof (state)\nthis:\n  i < length ys\n\ngoal (1 subgoal):\n 1. \\<And>i. i < length xs' \\<Longrightarrow> ys' ! i \\<in> xs' ! i", "hence \"ys' ! i = ys ! (f i)\""], ["proof (prove)\nusing this:\n  i < length ys\n\ngoal (1 subgoal):\n 1. ys' ! i = ys ! f i", "by (rule 1)"], ["proof (state)\nthis:\n  ys' ! i = ys ! f i\n\ngoal (1 subgoal):\n 1. \\<And>i. i < length xs' \\<Longrightarrow> ys' ! i \\<in> xs' ! i", "also"], ["proof (state)\nthis:\n  ys' ! i = ys ! f i\n\ngoal (1 subgoal):\n 1. \\<And>i. i < length xs' \\<Longrightarrow> ys' ! i \\<in> xs' ! i", "from assms(1)"], ["proof (chain)\npicking this:\n  ys \\<in> listset xs", "have \"\\<dots> \\<in> xs ! (f i)\""], ["proof (prove)\nusing this:\n  ys \\<in> listset xs\n\ngoal (1 subgoal):\n 1. ys ! f i \\<in> xs ! f i", "proof (rule listsetD)"], ["proof (state)\ngoal (1 subgoal):\n 1. f i < length xs", "from \\<open>i < length xs\\<close>"], ["proof (chain)\npicking this:\n  i < length xs", "have \"i \\<in> {..<length xs}\""], ["proof (prove)\nusing this:\n  i < length xs\n\ngoal (1 subgoal):\n 1. i \\<in> {..<length xs}", "by simp"], ["proof (state)\nthis:\n  i \\<in> {..<length xs}\n\ngoal (1 subgoal):\n 1. f i < length xs", "hence \"f i \\<in> f ` {..<length xs}\""], ["proof (prove)\nusing this:\n  i \\<in> {..<length xs}\n\ngoal (1 subgoal):\n 1. f i \\<in> f ` {..<length xs}", "by (rule imageI)"], ["proof (state)\nthis:\n  f i \\<in> f ` {..<length xs}\n\ngoal (1 subgoal):\n 1. f i < length xs", "also"], ["proof (state)\nthis:\n  f i \\<in> f ` {..<length xs}\n\ngoal (1 subgoal):\n 1. f i < length xs", "from assms(2)"], ["proof (chain)\npicking this:\n  bij_betw f {..<length xs} {..<length xs'}", "have \"\\<dots> = {..<length xs'}\""], ["proof (prove)\nusing this:\n  bij_betw f {..<length xs} {..<length xs'}\n\ngoal (1 subgoal):\n 1. f ` {..<length xs} = {..<length xs'}", "by (simp add: bij_betw_def)"], ["proof (state)\nthis:\n  f ` {..<length xs} = {..<length xs'}\n\ngoal (1 subgoal):\n 1. f i < length xs", "finally"], ["proof (chain)\npicking this:\n  f i \\<in> {..<length xs'}", "show \"f i < length xs\""], ["proof (prove)\nusing this:\n  f i \\<in> {..<length xs'}\n\ngoal (1 subgoal):\n 1. f i < length xs", "by (simp add: len_xs)"], ["proof (state)\nthis:\n  f i < length xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ys ! f i \\<in> xs ! f i\n\ngoal (1 subgoal):\n 1. \\<And>i. i < length xs' \\<Longrightarrow> ys' ! i \\<in> xs' ! i", "also"], ["proof (state)\nthis:\n  ys ! f i \\<in> xs ! f i\n\ngoal (1 subgoal):\n 1. \\<And>i. i < length xs' \\<Longrightarrow> ys' ! i \\<in> xs' ! i", "have \"\\<dots> = xs' ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs ! f i = xs' ! i", "by (rule sym) (rule assms(3), fact)"], ["proof (state)\nthis:\n  xs ! f i = xs' ! i\n\ngoal (1 subgoal):\n 1. \\<And>i. i < length xs' \\<Longrightarrow> ys' ! i \\<in> xs' ! i", "finally"], ["proof (chain)\npicking this:\n  ys' ! i \\<in> xs' ! i", "show \"ys' ! i \\<in> xs' ! i\""], ["proof (prove)\nusing this:\n  ys' ! i \\<in> xs' ! i\n\ngoal (1 subgoal):\n 1. ys' ! i \\<in> xs' ! i", "."], ["proof (state)\nthis:\n  ys' ! i \\<in> xs' ! i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ys' \\<in> listset xs'\n\ngoal (2 subgoals):\n 1. length ys' = length ys\n 2. \\<And>i. i < length ys \\<Longrightarrow> ys' ! i = ys ! f i", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. length ys' = length ys\n 2. \\<And>i. i < length ys \\<Longrightarrow> ys' ! i = ys ! f i", "show \"length ys' = length ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length ys' = length ys", "by (simp add: ys'_def)"], ["proof (state)\nthis:\n  length ys' = length ys\n\ngoal (1 subgoal):\n 1. \\<And>i. i < length ys \\<Longrightarrow> ys' ! i = ys ! f i", "qed (rule 1)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma listset_closed_map:\n  assumes \"ys \\<in> listset xs\" and \"\\<And>x y. x \\<in> set xs \\<Longrightarrow> y \\<in> x \\<Longrightarrow> f y \\<in> x\"\n  shows \"map f ys \\<in> listset xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map f ys \\<in> listset xs", "using assms"], ["proof (prove)\nusing this:\n  ys \\<in> listset xs\n  \\<lbrakk>?x \\<in> set xs; ?y \\<in> ?x\\<rbrakk>\n  \\<Longrightarrow> f ?y \\<in> ?x\n\ngoal (1 subgoal):\n 1. map f ys \\<in> listset xs", "proof (induct xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>ys \\<in> listset [];\n        \\<And>x y.\n           \\<lbrakk>x \\<in> set []; y \\<in> x\\<rbrakk>\n           \\<Longrightarrow> f y \\<in> x\\<rbrakk>\n       \\<Longrightarrow> map f ys \\<in> listset []\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>ys \\<in> listset xs;\n                    \\<And>x y.\n                       \\<lbrakk>x \\<in> set xs; y \\<in> x\\<rbrakk>\n                       \\<Longrightarrow> f y \\<in> x\\<rbrakk>\n                   \\<Longrightarrow> map f ys \\<in> listset xs;\n        ys \\<in> listset (a # xs);\n        \\<And>x y.\n           \\<lbrakk>x \\<in> set (a # xs); y \\<in> x\\<rbrakk>\n           \\<Longrightarrow> f y \\<in> x\\<rbrakk>\n       \\<Longrightarrow> map f ys \\<in> listset (a # xs)", "case Nil"], ["proof (state)\nthis:\n  ys \\<in> listset []\n  \\<lbrakk>?x \\<in> set []; ?y \\<in> ?x\\<rbrakk>\n  \\<Longrightarrow> f ?y \\<in> ?x\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>ys \\<in> listset [];\n        \\<And>x y.\n           \\<lbrakk>x \\<in> set []; y \\<in> x\\<rbrakk>\n           \\<Longrightarrow> f y \\<in> x\\<rbrakk>\n       \\<Longrightarrow> map f ys \\<in> listset []\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>ys \\<in> listset xs;\n                    \\<And>x y.\n                       \\<lbrakk>x \\<in> set xs; y \\<in> x\\<rbrakk>\n                       \\<Longrightarrow> f y \\<in> x\\<rbrakk>\n                   \\<Longrightarrow> map f ys \\<in> listset xs;\n        ys \\<in> listset (a # xs);\n        \\<And>x y.\n           \\<lbrakk>x \\<in> set (a # xs); y \\<in> x\\<rbrakk>\n           \\<Longrightarrow> f y \\<in> x\\<rbrakk>\n       \\<Longrightarrow> map f ys \\<in> listset (a # xs)", "from Nil(1)"], ["proof (chain)\npicking this:\n  ys \\<in> listset []", "show ?case"], ["proof (prove)\nusing this:\n  ys \\<in> listset []\n\ngoal (1 subgoal):\n 1. map f ys \\<in> listset []", "by simp"], ["proof (state)\nthis:\n  map f ys \\<in> listset []\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>ys \\<in> listset xs;\n                    \\<And>x y.\n                       \\<lbrakk>x \\<in> set xs; y \\<in> x\\<rbrakk>\n                       \\<Longrightarrow> f y \\<in> x\\<rbrakk>\n                   \\<Longrightarrow> map f ys \\<in> listset xs;\n        ys \\<in> listset (a # xs);\n        \\<And>x y.\n           \\<lbrakk>x \\<in> set (a # xs); y \\<in> x\\<rbrakk>\n           \\<Longrightarrow> f y \\<in> x\\<rbrakk>\n       \\<Longrightarrow> map f ys \\<in> listset (a # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>ys \\<in> listset xs;\n                    \\<And>x y.\n                       \\<lbrakk>x \\<in> set xs; y \\<in> x\\<rbrakk>\n                       \\<Longrightarrow> f y \\<in> x\\<rbrakk>\n                   \\<Longrightarrow> map f ys \\<in> listset xs;\n        ys \\<in> listset (a # xs);\n        \\<And>x y.\n           \\<lbrakk>x \\<in> set (a # xs); y \\<in> x\\<rbrakk>\n           \\<Longrightarrow> f y \\<in> x\\<rbrakk>\n       \\<Longrightarrow> map f ys \\<in> listset (a # xs)", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>?ys \\<in> listset xs;\n   \\<And>x y.\n      \\<lbrakk>x \\<in> set xs; y \\<in> x\\<rbrakk>\n      \\<Longrightarrow> f y \\<in> x\\<rbrakk>\n  \\<Longrightarrow> map f ?ys \\<in> listset xs\n  ys \\<in> listset (x # xs)\n  \\<lbrakk>?x \\<in> set (x # xs); ?y \\<in> ?x\\<rbrakk>\n  \\<Longrightarrow> f ?y \\<in> ?x\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>ys \\<in> listset xs;\n                    \\<And>x y.\n                       \\<lbrakk>x \\<in> set xs; y \\<in> x\\<rbrakk>\n                       \\<Longrightarrow> f y \\<in> x\\<rbrakk>\n                   \\<Longrightarrow> map f ys \\<in> listset xs;\n        ys \\<in> listset (a # xs);\n        \\<And>x y.\n           \\<lbrakk>x \\<in> set (a # xs); y \\<in> x\\<rbrakk>\n           \\<Longrightarrow> f y \\<in> x\\<rbrakk>\n       \\<Longrightarrow> map f ys \\<in> listset (a # xs)", "from Cons.prems(1)"], ["proof (chain)\npicking this:\n  ys \\<in> listset (x # xs)", "obtain y ys' where \"y \\<in> x\" and \"ys' \\<in> listset xs\" and ys: \"ys = y # ys'\""], ["proof (prove)\nusing this:\n  ys \\<in> listset (x # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>y ys'.\n        \\<lbrakk>y \\<in> x; ys' \\<in> listset xs; ys = y # ys'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule listset_ConsE)"], ["proof (state)\nthis:\n  y \\<in> x\n  ys' \\<in> listset xs\n  ys = y # ys'\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>ys \\<in> listset xs;\n                    \\<And>x y.\n                       \\<lbrakk>x \\<in> set xs; y \\<in> x\\<rbrakk>\n                       \\<Longrightarrow> f y \\<in> x\\<rbrakk>\n                   \\<Longrightarrow> map f ys \\<in> listset xs;\n        ys \\<in> listset (a # xs);\n        \\<And>x y.\n           \\<lbrakk>x \\<in> set (a # xs); y \\<in> x\\<rbrakk>\n           \\<Longrightarrow> f y \\<in> x\\<rbrakk>\n       \\<Longrightarrow> map f ys \\<in> listset (a # xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. map f ys \\<in> listset (x # xs)", "proof (rule listset_ConsI)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?y \\<in> x\n 2. ?ys' \\<in> listset xs\n 3. map f ys = ?y # ?ys'", "from _ \\<open>y \\<in> x\\<close>"], ["proof (chain)\npicking this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  y \\<in> x", "show \"f y \\<in> x\""], ["proof (prove)\nusing this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  y \\<in> x\n\ngoal (1 subgoal):\n 1. f y \\<in> x", "by (rule Cons.prems) simp"], ["proof (state)\nthis:\n  f y \\<in> x\n\ngoal (2 subgoals):\n 1. ?ys' \\<in> listset xs\n 2. map f ys = f y # ?ys'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. ?ys' \\<in> listset xs\n 2. map f ys = f y # ?ys'", "show \"map f ys' \\<in> listset xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map f ys' \\<in> listset xs", "proof (rule Cons.hyps)"], ["proof (state)\ngoal (2 subgoals):\n 1. ys' \\<in> listset xs\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> set xs; y \\<in> x\\<rbrakk>\n       \\<Longrightarrow> f y \\<in> x", "fix x0 y0"], ["proof (state)\ngoal (2 subgoals):\n 1. ys' \\<in> listset xs\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> set xs; y \\<in> x\\<rbrakk>\n       \\<Longrightarrow> f y \\<in> x", "assume \"x0 \\<in> set xs\""], ["proof (state)\nthis:\n  x0 \\<in> set xs\n\ngoal (2 subgoals):\n 1. ys' \\<in> listset xs\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> set xs; y \\<in> x\\<rbrakk>\n       \\<Longrightarrow> f y \\<in> x", "hence \"x0 \\<in> set (x # xs)\""], ["proof (prove)\nusing this:\n  x0 \\<in> set xs\n\ngoal (1 subgoal):\n 1. x0 \\<in> set (x # xs)", "by simp"], ["proof (state)\nthis:\n  x0 \\<in> set (x # xs)\n\ngoal (2 subgoals):\n 1. ys' \\<in> listset xs\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> set xs; y \\<in> x\\<rbrakk>\n       \\<Longrightarrow> f y \\<in> x", "moreover"], ["proof (state)\nthis:\n  x0 \\<in> set (x # xs)\n\ngoal (2 subgoals):\n 1. ys' \\<in> listset xs\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> set xs; y \\<in> x\\<rbrakk>\n       \\<Longrightarrow> f y \\<in> x", "assume \"y0 \\<in> x0\""], ["proof (state)\nthis:\n  y0 \\<in> x0\n\ngoal (2 subgoals):\n 1. ys' \\<in> listset xs\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> set xs; y \\<in> x\\<rbrakk>\n       \\<Longrightarrow> f y \\<in> x", "ultimately"], ["proof (chain)\npicking this:\n  x0 \\<in> set (x # xs)\n  y0 \\<in> x0", "show \"f y0 \\<in> x0\""], ["proof (prove)\nusing this:\n  x0 \\<in> set (x # xs)\n  y0 \\<in> x0\n\ngoal (1 subgoal):\n 1. f y0 \\<in> x0", "by (rule Cons.prems)"], ["proof (state)\nthis:\n  f y0 \\<in> x0\n\ngoal (1 subgoal):\n 1. ys' \\<in> listset xs", "qed fact"], ["proof (state)\nthis:\n  map f ys' \\<in> listset xs\n\ngoal (1 subgoal):\n 1. map f ys = f y # map f ys'", "qed (simp add: ys)"], ["proof (state)\nthis:\n  map f ys \\<in> listset (x # xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma listset_closed_map2:\n  assumes \"ys1 \\<in> listset xs\" and \"ys2 \\<in> listset xs\"\n    and \"\\<And>x y1 y2. x \\<in> set xs \\<Longrightarrow> y1 \\<in> x \\<Longrightarrow> y2 \\<in> x \\<Longrightarrow> f y1 y2 \\<in> x\"\n  shows \"map2 f ys1 ys2 \\<in> listset xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map2 f ys1 ys2 \\<in> listset xs", "using assms"], ["proof (prove)\nusing this:\n  ys1 \\<in> listset xs\n  ys2 \\<in> listset xs\n  \\<lbrakk>?x \\<in> set xs; ?y1.0 \\<in> ?x; ?y2.0 \\<in> ?x\\<rbrakk>\n  \\<Longrightarrow> f ?y1.0 ?y2.0 \\<in> ?x\n\ngoal (1 subgoal):\n 1. map2 f ys1 ys2 \\<in> listset xs", "proof (induct xs arbitrary: ys1 ys2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys1 ys2.\n       \\<lbrakk>ys1 \\<in> listset []; ys2 \\<in> listset [];\n        \\<And>x y1 y2.\n           \\<lbrakk>x \\<in> set []; y1 \\<in> x; y2 \\<in> x\\<rbrakk>\n           \\<Longrightarrow> f y1 y2 \\<in> x\\<rbrakk>\n       \\<Longrightarrow> map2 f ys1 ys2 \\<in> listset []\n 2. \\<And>a xs ys1 ys2.\n       \\<lbrakk>\\<And>ys1 ys2.\n                   \\<lbrakk>ys1 \\<in> listset xs; ys2 \\<in> listset xs;\n                    \\<And>x y1 y2.\n                       \\<lbrakk>x \\<in> set xs; y1 \\<in> x;\n                        y2 \\<in> x\\<rbrakk>\n                       \\<Longrightarrow> f y1 y2 \\<in> x\\<rbrakk>\n                   \\<Longrightarrow> map2 f ys1 ys2 \\<in> listset xs;\n        ys1 \\<in> listset (a # xs); ys2 \\<in> listset (a # xs);\n        \\<And>x y1 y2.\n           \\<lbrakk>x \\<in> set (a # xs); y1 \\<in> x; y2 \\<in> x\\<rbrakk>\n           \\<Longrightarrow> f y1 y2 \\<in> x\\<rbrakk>\n       \\<Longrightarrow> map2 f ys1 ys2 \\<in> listset (a # xs)", "case Nil"], ["proof (state)\nthis:\n  ys1 \\<in> listset []\n  ys2 \\<in> listset []\n  \\<lbrakk>?x \\<in> set []; ?y1.0 \\<in> ?x; ?y2.0 \\<in> ?x\\<rbrakk>\n  \\<Longrightarrow> f ?y1.0 ?y2.0 \\<in> ?x\n\ngoal (2 subgoals):\n 1. \\<And>ys1 ys2.\n       \\<lbrakk>ys1 \\<in> listset []; ys2 \\<in> listset [];\n        \\<And>x y1 y2.\n           \\<lbrakk>x \\<in> set []; y1 \\<in> x; y2 \\<in> x\\<rbrakk>\n           \\<Longrightarrow> f y1 y2 \\<in> x\\<rbrakk>\n       \\<Longrightarrow> map2 f ys1 ys2 \\<in> listset []\n 2. \\<And>a xs ys1 ys2.\n       \\<lbrakk>\\<And>ys1 ys2.\n                   \\<lbrakk>ys1 \\<in> listset xs; ys2 \\<in> listset xs;\n                    \\<And>x y1 y2.\n                       \\<lbrakk>x \\<in> set xs; y1 \\<in> x;\n                        y2 \\<in> x\\<rbrakk>\n                       \\<Longrightarrow> f y1 y2 \\<in> x\\<rbrakk>\n                   \\<Longrightarrow> map2 f ys1 ys2 \\<in> listset xs;\n        ys1 \\<in> listset (a # xs); ys2 \\<in> listset (a # xs);\n        \\<And>x y1 y2.\n           \\<lbrakk>x \\<in> set (a # xs); y1 \\<in> x; y2 \\<in> x\\<rbrakk>\n           \\<Longrightarrow> f y1 y2 \\<in> x\\<rbrakk>\n       \\<Longrightarrow> map2 f ys1 ys2 \\<in> listset (a # xs)", "from Nil(1)"], ["proof (chain)\npicking this:\n  ys1 \\<in> listset []", "show ?case"], ["proof (prove)\nusing this:\n  ys1 \\<in> listset []\n\ngoal (1 subgoal):\n 1. map2 f ys1 ys2 \\<in> listset []", "by simp"], ["proof (state)\nthis:\n  map2 f ys1 ys2 \\<in> listset []\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys1 ys2.\n       \\<lbrakk>\\<And>ys1 ys2.\n                   \\<lbrakk>ys1 \\<in> listset xs; ys2 \\<in> listset xs;\n                    \\<And>x y1 y2.\n                       \\<lbrakk>x \\<in> set xs; y1 \\<in> x;\n                        y2 \\<in> x\\<rbrakk>\n                       \\<Longrightarrow> f y1 y2 \\<in> x\\<rbrakk>\n                   \\<Longrightarrow> map2 f ys1 ys2 \\<in> listset xs;\n        ys1 \\<in> listset (a # xs); ys2 \\<in> listset (a # xs);\n        \\<And>x y1 y2.\n           \\<lbrakk>x \\<in> set (a # xs); y1 \\<in> x; y2 \\<in> x\\<rbrakk>\n           \\<Longrightarrow> f y1 y2 \\<in> x\\<rbrakk>\n       \\<Longrightarrow> map2 f ys1 ys2 \\<in> listset (a # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys1 ys2.\n       \\<lbrakk>\\<And>ys1 ys2.\n                   \\<lbrakk>ys1 \\<in> listset xs; ys2 \\<in> listset xs;\n                    \\<And>x y1 y2.\n                       \\<lbrakk>x \\<in> set xs; y1 \\<in> x;\n                        y2 \\<in> x\\<rbrakk>\n                       \\<Longrightarrow> f y1 y2 \\<in> x\\<rbrakk>\n                   \\<Longrightarrow> map2 f ys1 ys2 \\<in> listset xs;\n        ys1 \\<in> listset (a # xs); ys2 \\<in> listset (a # xs);\n        \\<And>x y1 y2.\n           \\<lbrakk>x \\<in> set (a # xs); y1 \\<in> x; y2 \\<in> x\\<rbrakk>\n           \\<Longrightarrow> f y1 y2 \\<in> x\\<rbrakk>\n       \\<Longrightarrow> map2 f ys1 ys2 \\<in> listset (a # xs)", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>?ys1.0 \\<in> listset xs; ?ys2.0 \\<in> listset xs;\n   \\<And>x y1 y2.\n      \\<lbrakk>x \\<in> set xs; y1 \\<in> x; y2 \\<in> x\\<rbrakk>\n      \\<Longrightarrow> f y1 y2 \\<in> x\\<rbrakk>\n  \\<Longrightarrow> map2 f ?ys1.0 ?ys2.0 \\<in> listset xs\n  ys1 \\<in> listset (x # xs)\n  ys2 \\<in> listset (x # xs)\n  \\<lbrakk>?x \\<in> set (x # xs); ?y1.0 \\<in> ?x; ?y2.0 \\<in> ?x\\<rbrakk>\n  \\<Longrightarrow> f ?y1.0 ?y2.0 \\<in> ?x\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys1 ys2.\n       \\<lbrakk>\\<And>ys1 ys2.\n                   \\<lbrakk>ys1 \\<in> listset xs; ys2 \\<in> listset xs;\n                    \\<And>x y1 y2.\n                       \\<lbrakk>x \\<in> set xs; y1 \\<in> x;\n                        y2 \\<in> x\\<rbrakk>\n                       \\<Longrightarrow> f y1 y2 \\<in> x\\<rbrakk>\n                   \\<Longrightarrow> map2 f ys1 ys2 \\<in> listset xs;\n        ys1 \\<in> listset (a # xs); ys2 \\<in> listset (a # xs);\n        \\<And>x y1 y2.\n           \\<lbrakk>x \\<in> set (a # xs); y1 \\<in> x; y2 \\<in> x\\<rbrakk>\n           \\<Longrightarrow> f y1 y2 \\<in> x\\<rbrakk>\n       \\<Longrightarrow> map2 f ys1 ys2 \\<in> listset (a # xs)", "from Cons.prems(1)"], ["proof (chain)\npicking this:\n  ys1 \\<in> listset (x # xs)", "obtain y1 ys1' where \"y1 \\<in> x\" and \"ys1' \\<in> listset xs\" and ys1: \"ys1 = y1 # ys1'\""], ["proof (prove)\nusing this:\n  ys1 \\<in> listset (x # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>y1 ys1'.\n        \\<lbrakk>y1 \\<in> x; ys1' \\<in> listset xs; ys1 = y1 # ys1'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule listset_ConsE)"], ["proof (state)\nthis:\n  y1 \\<in> x\n  ys1' \\<in> listset xs\n  ys1 = y1 # ys1'\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys1 ys2.\n       \\<lbrakk>\\<And>ys1 ys2.\n                   \\<lbrakk>ys1 \\<in> listset xs; ys2 \\<in> listset xs;\n                    \\<And>x y1 y2.\n                       \\<lbrakk>x \\<in> set xs; y1 \\<in> x;\n                        y2 \\<in> x\\<rbrakk>\n                       \\<Longrightarrow> f y1 y2 \\<in> x\\<rbrakk>\n                   \\<Longrightarrow> map2 f ys1 ys2 \\<in> listset xs;\n        ys1 \\<in> listset (a # xs); ys2 \\<in> listset (a # xs);\n        \\<And>x y1 y2.\n           \\<lbrakk>x \\<in> set (a # xs); y1 \\<in> x; y2 \\<in> x\\<rbrakk>\n           \\<Longrightarrow> f y1 y2 \\<in> x\\<rbrakk>\n       \\<Longrightarrow> map2 f ys1 ys2 \\<in> listset (a # xs)", "from Cons.prems(2)"], ["proof (chain)\npicking this:\n  ys2 \\<in> listset (x # xs)", "obtain y2 ys2' where \"y2 \\<in> x\" and \"ys2' \\<in> listset xs\" and ys2: \"ys2 = y2 # ys2'\""], ["proof (prove)\nusing this:\n  ys2 \\<in> listset (x # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>y2 ys2'.\n        \\<lbrakk>y2 \\<in> x; ys2' \\<in> listset xs; ys2 = y2 # ys2'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule listset_ConsE)"], ["proof (state)\nthis:\n  y2 \\<in> x\n  ys2' \\<in> listset xs\n  ys2 = y2 # ys2'\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys1 ys2.\n       \\<lbrakk>\\<And>ys1 ys2.\n                   \\<lbrakk>ys1 \\<in> listset xs; ys2 \\<in> listset xs;\n                    \\<And>x y1 y2.\n                       \\<lbrakk>x \\<in> set xs; y1 \\<in> x;\n                        y2 \\<in> x\\<rbrakk>\n                       \\<Longrightarrow> f y1 y2 \\<in> x\\<rbrakk>\n                   \\<Longrightarrow> map2 f ys1 ys2 \\<in> listset xs;\n        ys1 \\<in> listset (a # xs); ys2 \\<in> listset (a # xs);\n        \\<And>x y1 y2.\n           \\<lbrakk>x \\<in> set (a # xs); y1 \\<in> x; y2 \\<in> x\\<rbrakk>\n           \\<Longrightarrow> f y1 y2 \\<in> x\\<rbrakk>\n       \\<Longrightarrow> map2 f ys1 ys2 \\<in> listset (a # xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. map2 f ys1 ys2 \\<in> listset (x # xs)", "proof (rule listset_ConsI)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?y \\<in> x\n 2. ?ys' \\<in> listset xs\n 3. map2 f ys1 ys2 = ?y # ?ys'", "from _ \\<open>y1 \\<in> x\\<close> \\<open>y2 \\<in> x\\<close>"], ["proof (chain)\npicking this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  y1 \\<in> x\n  y2 \\<in> x", "show \"f y1 y2 \\<in> x\""], ["proof (prove)\nusing this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  y1 \\<in> x\n  y2 \\<in> x\n\ngoal (1 subgoal):\n 1. f y1 y2 \\<in> x", "by (rule Cons.prems) simp"], ["proof (state)\nthis:\n  f y1 y2 \\<in> x\n\ngoal (2 subgoals):\n 1. ?ys' \\<in> listset xs\n 2. map2 f ys1 ys2 = f y1 y2 # ?ys'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. ?ys' \\<in> listset xs\n 2. map2 f ys1 ys2 = f y1 y2 # ?ys'", "show \"map2 f ys1' ys2' \\<in> listset xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map2 f ys1' ys2' \\<in> listset xs", "proof (rule Cons.hyps)"], ["proof (state)\ngoal (3 subgoals):\n 1. ys1' \\<in> listset xs\n 2. ys2' \\<in> listset xs\n 3. \\<And>x y1 y2.\n       \\<lbrakk>x \\<in> set xs; y1 \\<in> x; y2 \\<in> x\\<rbrakk>\n       \\<Longrightarrow> f y1 y2 \\<in> x", "fix x' y1' y2'"], ["proof (state)\ngoal (3 subgoals):\n 1. ys1' \\<in> listset xs\n 2. ys2' \\<in> listset xs\n 3. \\<And>x y1 y2.\n       \\<lbrakk>x \\<in> set xs; y1 \\<in> x; y2 \\<in> x\\<rbrakk>\n       \\<Longrightarrow> f y1 y2 \\<in> x", "assume \"x' \\<in> set xs\""], ["proof (state)\nthis:\n  x' \\<in> set xs\n\ngoal (3 subgoals):\n 1. ys1' \\<in> listset xs\n 2. ys2' \\<in> listset xs\n 3. \\<And>x y1 y2.\n       \\<lbrakk>x \\<in> set xs; y1 \\<in> x; y2 \\<in> x\\<rbrakk>\n       \\<Longrightarrow> f y1 y2 \\<in> x", "hence \"x' \\<in> set (x # xs)\""], ["proof (prove)\nusing this:\n  x' \\<in> set xs\n\ngoal (1 subgoal):\n 1. x' \\<in> set (x # xs)", "by simp"], ["proof (state)\nthis:\n  x' \\<in> set (x # xs)\n\ngoal (3 subgoals):\n 1. ys1' \\<in> listset xs\n 2. ys2' \\<in> listset xs\n 3. \\<And>x y1 y2.\n       \\<lbrakk>x \\<in> set xs; y1 \\<in> x; y2 \\<in> x\\<rbrakk>\n       \\<Longrightarrow> f y1 y2 \\<in> x", "moreover"], ["proof (state)\nthis:\n  x' \\<in> set (x # xs)\n\ngoal (3 subgoals):\n 1. ys1' \\<in> listset xs\n 2. ys2' \\<in> listset xs\n 3. \\<And>x y1 y2.\n       \\<lbrakk>x \\<in> set xs; y1 \\<in> x; y2 \\<in> x\\<rbrakk>\n       \\<Longrightarrow> f y1 y2 \\<in> x", "assume \"y1' \\<in> x'\" and \"y2' \\<in> x'\""], ["proof (state)\nthis:\n  y1' \\<in> x'\n  y2' \\<in> x'\n\ngoal (3 subgoals):\n 1. ys1' \\<in> listset xs\n 2. ys2' \\<in> listset xs\n 3. \\<And>x y1 y2.\n       \\<lbrakk>x \\<in> set xs; y1 \\<in> x; y2 \\<in> x\\<rbrakk>\n       \\<Longrightarrow> f y1 y2 \\<in> x", "ultimately"], ["proof (chain)\npicking this:\n  x' \\<in> set (x # xs)\n  y1' \\<in> x'\n  y2' \\<in> x'", "show \"f y1' y2' \\<in> x'\""], ["proof (prove)\nusing this:\n  x' \\<in> set (x # xs)\n  y1' \\<in> x'\n  y2' \\<in> x'\n\ngoal (1 subgoal):\n 1. f y1' y2' \\<in> x'", "by (rule Cons.prems)"], ["proof (state)\nthis:\n  f y1' y2' \\<in> x'\n\ngoal (2 subgoals):\n 1. ys1' \\<in> listset xs\n 2. ys2' \\<in> listset xs", "qed fact+"], ["proof (state)\nthis:\n  map2 f ys1' ys2' \\<in> listset xs\n\ngoal (1 subgoal):\n 1. map2 f ys1 ys2 = f y1 y2 # map2 f ys1' ys2'", "qed (simp add: ys1 ys2)"], ["proof (state)\nthis:\n  map2 f ys1 ys2 \\<in> listset (x # xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma listset_empty_iff: \"listset xs = {} \\<longleftrightarrow> {} \\<in> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (listset xs = {}) = ({} \\<in> set xs)", "by (induct xs) (auto simp: listset_Cons simp del: listset.simps(2))"], ["", "lemma listset_mono:\n  assumes \"length xs = length ys\" and \"\\<And>i. i < length ys \\<Longrightarrow> xs ! i \\<subseteq> ys ! i\"\n  shows \"listset xs \\<subseteq> listset ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. listset xs \\<subseteq> listset ys", "using assms"], ["proof (prove)\nusing this:\n  length xs = length ys\n  ?i < length ys \\<Longrightarrow> xs ! ?i \\<subseteq> ys ! ?i\n\ngoal (1 subgoal):\n 1. listset xs \\<subseteq> listset ys", "proof (induct xs ys rule: list_induct2)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>i.\n        i < length [] \\<Longrightarrow>\n        [] ! i \\<subseteq> [] ! i) \\<Longrightarrow>\n    listset [] \\<subseteq> listset []\n 2. \\<And>x xs y ys.\n       \\<lbrakk>length xs = length ys;\n        (\\<And>i.\n            i < length ys \\<Longrightarrow>\n            xs ! i \\<subseteq> ys ! i) \\<Longrightarrow>\n        listset xs \\<subseteq> listset ys;\n        \\<And>i.\n           i < length (y # ys) \\<Longrightarrow>\n           (x # xs) ! i \\<subseteq> (y # ys) ! i\\<rbrakk>\n       \\<Longrightarrow> listset (x # xs) \\<subseteq> listset (y # ys)", "case Nil"], ["proof (state)\nthis:\n  ?i < length [] \\<Longrightarrow> [] ! ?i \\<subseteq> [] ! ?i\n\ngoal (2 subgoals):\n 1. (\\<And>i.\n        i < length [] \\<Longrightarrow>\n        [] ! i \\<subseteq> [] ! i) \\<Longrightarrow>\n    listset [] \\<subseteq> listset []\n 2. \\<And>x xs y ys.\n       \\<lbrakk>length xs = length ys;\n        (\\<And>i.\n            i < length ys \\<Longrightarrow>\n            xs ! i \\<subseteq> ys ! i) \\<Longrightarrow>\n        listset xs \\<subseteq> listset ys;\n        \\<And>i.\n           i < length (y # ys) \\<Longrightarrow>\n           (x # xs) ! i \\<subseteq> (y # ys) ! i\\<rbrakk>\n       \\<Longrightarrow> listset (x # xs) \\<subseteq> listset (y # ys)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. listset [] \\<subseteq> listset []", "by simp"], ["proof (state)\nthis:\n  listset [] \\<subseteq> listset []\n\ngoal (1 subgoal):\n 1. \\<And>x xs y ys.\n       \\<lbrakk>length xs = length ys;\n        (\\<And>i.\n            i < length ys \\<Longrightarrow>\n            xs ! i \\<subseteq> ys ! i) \\<Longrightarrow>\n        listset xs \\<subseteq> listset ys;\n        \\<And>i.\n           i < length (y # ys) \\<Longrightarrow>\n           (x # xs) ! i \\<subseteq> (y # ys) ! i\\<rbrakk>\n       \\<Longrightarrow> listset (x # xs) \\<subseteq> listset (y # ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs y ys.\n       \\<lbrakk>length xs = length ys;\n        (\\<And>i.\n            i < length ys \\<Longrightarrow>\n            xs ! i \\<subseteq> ys ! i) \\<Longrightarrow>\n        listset xs \\<subseteq> listset ys;\n        \\<And>i.\n           i < length (y # ys) \\<Longrightarrow>\n           (x # xs) ! i \\<subseteq> (y # ys) ! i\\<rbrakk>\n       \\<Longrightarrow> listset (x # xs) \\<subseteq> listset (y # ys)", "case (Cons x xs y ys)"], ["proof (state)\nthis:\n  length xs = length ys\n  (\\<And>i.\n      i < length ys \\<Longrightarrow>\n      xs ! i \\<subseteq> ys ! i) \\<Longrightarrow>\n  listset xs \\<subseteq> listset ys\n  ?i < length (y # ys) \\<Longrightarrow>\n  (x # xs) ! ?i \\<subseteq> (y # ys) ! ?i\n\ngoal (1 subgoal):\n 1. \\<And>x xs y ys.\n       \\<lbrakk>length xs = length ys;\n        (\\<And>i.\n            i < length ys \\<Longrightarrow>\n            xs ! i \\<subseteq> ys ! i) \\<Longrightarrow>\n        listset xs \\<subseteq> listset ys;\n        \\<And>i.\n           i < length (y # ys) \\<Longrightarrow>\n           (x # xs) ! i \\<subseteq> (y # ys) ! i\\<rbrakk>\n       \\<Longrightarrow> listset (x # xs) \\<subseteq> listset (y # ys)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. listset (x # xs) \\<subseteq> listset (y # ys)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> listset (x # xs) \\<Longrightarrow> xa \\<in> listset (y # ys)", "fix zs'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> listset (x # xs) \\<Longrightarrow> xa \\<in> listset (y # ys)", "assume \"zs' \\<in> listset (x # xs)\""], ["proof (state)\nthis:\n  zs' \\<in> listset (x # xs)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> listset (x # xs) \\<Longrightarrow> xa \\<in> listset (y # ys)", "then"], ["proof (chain)\npicking this:\n  zs' \\<in> listset (x # xs)", "obtain z zs where \"z \\<in> x\" and zs: \"zs \\<in> listset xs\" and zs': \"zs' = z # zs\""], ["proof (prove)\nusing this:\n  zs' \\<in> listset (x # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>z zs.\n        \\<lbrakk>z \\<in> x; zs \\<in> listset xs; zs' = z # zs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule listset_ConsE)"], ["proof (state)\nthis:\n  z \\<in> x\n  zs \\<in> listset xs\n  zs' = z # zs\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> listset (x # xs) \\<Longrightarrow> xa \\<in> listset (y # ys)", "have \"0 < length (y # ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < length (y # ys)", "by simp"], ["proof (state)\nthis:\n  0 < length (y # ys)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> listset (x # xs) \\<Longrightarrow> xa \\<in> listset (y # ys)", "hence \"(x # xs) ! 0 \\<subseteq> (y # ys) ! 0\""], ["proof (prove)\nusing this:\n  0 < length (y # ys)\n\ngoal (1 subgoal):\n 1. (x # xs) ! 0 \\<subseteq> (y # ys) ! 0", "by (rule Cons.prems)"], ["proof (state)\nthis:\n  (x # xs) ! 0 \\<subseteq> (y # ys) ! 0\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> listset (x # xs) \\<Longrightarrow> xa \\<in> listset (y # ys)", "hence \"x \\<subseteq> y\""], ["proof (prove)\nusing this:\n  (x # xs) ! 0 \\<subseteq> (y # ys) ! 0\n\ngoal (1 subgoal):\n 1. x \\<subseteq> y", "by simp"], ["proof (state)\nthis:\n  x \\<subseteq> y\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> listset (x # xs) \\<Longrightarrow> xa \\<in> listset (y # ys)", "with \\<open>z \\<in> x\\<close>"], ["proof (chain)\npicking this:\n  z \\<in> x\n  x \\<subseteq> y", "have \"z \\<in> y\""], ["proof (prove)\nusing this:\n  z \\<in> x\n  x \\<subseteq> y\n\ngoal (1 subgoal):\n 1. z \\<in> y", ".."], ["proof (state)\nthis:\n  z \\<in> y\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> listset (x # xs) \\<Longrightarrow> xa \\<in> listset (y # ys)", "moreover"], ["proof (state)\nthis:\n  z \\<in> y\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> listset (x # xs) \\<Longrightarrow> xa \\<in> listset (y # ys)", "from zs"], ["proof (chain)\npicking this:\n  zs \\<in> listset xs", "have \"zs \\<in> listset ys\""], ["proof (prove)\nusing this:\n  zs \\<in> listset xs\n\ngoal (1 subgoal):\n 1. zs \\<in> listset ys", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. listset xs \\<subseteq> listset ys", "show \"listset xs \\<subseteq> listset ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. listset xs \\<subseteq> listset ys", "proof (rule Cons.hyps)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i < length ys \\<Longrightarrow> xs ! i \\<subseteq> ys ! i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i < length ys \\<Longrightarrow> xs ! i \\<subseteq> ys ! i", "assume \"i < length ys\""], ["proof (state)\nthis:\n  i < length ys\n\ngoal (1 subgoal):\n 1. \\<And>i. i < length ys \\<Longrightarrow> xs ! i \\<subseteq> ys ! i", "hence \"Suc i < length (y # ys)\""], ["proof (prove)\nusing this:\n  i < length ys\n\ngoal (1 subgoal):\n 1. Suc i < length (y # ys)", "by simp"], ["proof (state)\nthis:\n  Suc i < length (y # ys)\n\ngoal (1 subgoal):\n 1. \\<And>i. i < length ys \\<Longrightarrow> xs ! i \\<subseteq> ys ! i", "hence \"(x # xs) ! Suc i \\<subseteq> (y # ys) ! Suc i\""], ["proof (prove)\nusing this:\n  Suc i < length (y # ys)\n\ngoal (1 subgoal):\n 1. (x # xs) ! Suc i \\<subseteq> (y # ys) ! Suc i", "by (rule Cons.prems)"], ["proof (state)\nthis:\n  (x # xs) ! Suc i \\<subseteq> (y # ys) ! Suc i\n\ngoal (1 subgoal):\n 1. \\<And>i. i < length ys \\<Longrightarrow> xs ! i \\<subseteq> ys ! i", "thus \"xs ! i \\<subseteq> ys ! i\""], ["proof (prove)\nusing this:\n  (x # xs) ! Suc i \\<subseteq> (y # ys) ! Suc i\n\ngoal (1 subgoal):\n 1. xs ! i \\<subseteq> ys ! i", "by simp"], ["proof (state)\nthis:\n  xs ! i \\<subseteq> ys ! i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  listset xs \\<subseteq> listset ys\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  zs \\<in> listset ys\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> listset (x # xs) \\<Longrightarrow> xa \\<in> listset (y # ys)", "ultimately"], ["proof (chain)\npicking this:\n  z \\<in> y\n  zs \\<in> listset ys", "show \"zs' \\<in> listset (y # ys)\""], ["proof (prove)\nusing this:\n  z \\<in> y\n  zs \\<in> listset ys\n\ngoal (1 subgoal):\n 1. zs' \\<in> listset (y # ys)", "using zs'"], ["proof (prove)\nusing this:\n  z \\<in> y\n  zs \\<in> listset ys\n  zs' = z # zs\n\ngoal (1 subgoal):\n 1. zs' \\<in> listset (y # ys)", "by (rule listset_ConsI)"], ["proof (state)\nthis:\n  zs' \\<in> listset (y # ys)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  listset (x # xs) \\<subseteq> listset (y # ys)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* theory *)"]]}