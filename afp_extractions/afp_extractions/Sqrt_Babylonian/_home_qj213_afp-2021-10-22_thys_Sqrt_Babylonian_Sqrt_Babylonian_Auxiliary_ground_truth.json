{"file_name": "/home/qj213/afp-2021-10-22/thys/Sqrt_Babylonian/Sqrt_Babylonian_Auxiliary.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Sqrt_Babylonian", "problem_names": ["lemma mod_div_equality_int: \"(n :: int) div x * x = n - n mod x\"", "lemma div_is_floor_divide_rat: \"n div y = \\<lfloor>rat_of_int n / rat_of_int y\\<rfloor>\"", "lemma div_is_floor_divide_real: \"n div y = \\<lfloor>real_of_int n / of_int y\\<rfloor>\"", "lemma floor_div_pos_int: \n  fixes r :: \"'a :: floor_ceiling\"\n  assumes n: \"n > 0\" \n  shows \"\\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n\" (is \"?l = ?r\")", "lemma floor_div_neg_int: \n  fixes r :: \"'a :: floor_ceiling\"\n  assumes n: \"n < 0\" \n  shows \"\\<lfloor>r / of_int n\\<rfloor> = \\<lceil>r\\<rceil> div n\"", "lemma divide_less_floor1: \"n / y < of_int (floor (n / y)) + 1\"", "lemma sgn_int_pow_if [simp]:\n  \"sgn x ^ p = (if even p then 1 else sgn x)\" if \"x \\<noteq> 0\"", "lemma compare_pow_le_iff: \"p > 0 \\<Longrightarrow> (x :: 'a) \\<ge> 0 \\<Longrightarrow> y \\<ge> 0 \\<Longrightarrow> (x ^ p \\<le> y ^ p) = (x \\<le> y)\"", "lemma compare_pow_less_iff: \"p > 0 \\<Longrightarrow> (x :: 'a) \\<ge> 0 \\<Longrightarrow> y \\<ge> 0 \\<Longrightarrow> (x ^ p < y ^ p) = (x < y)\"", "lemma quotient_of_int[simp]: \"quotient_of (of_int i) = (i,1)\"", "lemma quotient_of_nat[simp]: \"quotient_of (of_nat i) = (int i,1)\"", "lemma square_lesseq_square: \"\\<And> x y. 0 \\<le> (x :: 'a :: linordered_field) \\<Longrightarrow> 0 \\<le> y \\<Longrightarrow> (x * x \\<le> y * y) = (x \\<le> y)\"", "lemma square_less_square: \"\\<And> x y. 0 \\<le> (x :: 'a :: linordered_field) \\<Longrightarrow> 0 \\<le> y \\<Longrightarrow> (x * x < y * y) = (x < y)\"", "lemma sqrt_sqrt[simp]: \"x \\<ge> 0 \\<Longrightarrow> sqrt x * sqrt x = x\"", "lemma abs_lesseq_square: \"abs (x :: real) \\<le> abs y \\<longleftrightarrow> x * x \\<le> y * y\""], "translations": [["", "lemma mod_div_equality_int: \"(n :: int) div x * x = n - n mod x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n div x * x = n - n mod x", "using div_mult_mod_eq[of n x]"], ["proof (prove)\nusing this:\n  n div x * x + n mod x = n\n\ngoal (1 subgoal):\n 1. n div x * x = n - n mod x", "by arith"], ["", "lemma div_is_floor_divide_rat: \"n div y = \\<lfloor>rat_of_int n / rat_of_int y\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n div y = \\<lfloor>rat_of_int n / rat_of_int y\\<rfloor>", "unfolding Fract_of_int_quotient[symmetric] floor_Fract"], ["proof (prove)\ngoal (1 subgoal):\n 1. n div y = n div y", "by simp"], ["", "lemma div_is_floor_divide_real: \"n div y = \\<lfloor>real_of_int n / of_int y\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n div y = \\<lfloor>real_of_int n / real_of_int y\\<rfloor>", "unfolding div_is_floor_divide_rat[of n y]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>rat_of_int n / rat_of_int y\\<rfloor> =\n    \\<lfloor>real_of_int n / real_of_int y\\<rfloor>", "by (metis Ratreal_def of_rat_divide of_rat_of_int_eq real_floor_code)"], ["", "lemma floor_div_pos_int: \n  fixes r :: \"'a :: floor_ceiling\"\n  assumes n: \"n > 0\" \n  shows \"\\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n\" (is \"?l = ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "let ?of_int = \"of_int :: int \\<Rightarrow> 'a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "define rhs where \"rhs = \\<lfloor>r\\<rfloor> div n\""], ["proof (state)\nthis:\n  rhs = \\<lfloor>r\\<rfloor> div n\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "let ?n = \"?of_int n\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "define m where \"m = \\<lfloor>r\\<rfloor> mod n\""], ["proof (state)\nthis:\n  m = \\<lfloor>r\\<rfloor> mod n\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "let ?m = \"?of_int m\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "from div_mult_mod_eq[of \"floor r\" n]"], ["proof (chain)\npicking this:\n  \\<lfloor>r\\<rfloor> div n * n + \\<lfloor>r\\<rfloor> mod n =\n  \\<lfloor>r\\<rfloor>", "have dm: \"rhs * n + m = \\<lfloor>r\\<rfloor>\""], ["proof (prove)\nusing this:\n  \\<lfloor>r\\<rfloor> div n * n + \\<lfloor>r\\<rfloor> mod n =\n  \\<lfloor>r\\<rfloor>\n\ngoal (1 subgoal):\n 1. rhs * n + m = \\<lfloor>r\\<rfloor>", "unfolding rhs_def m_def"], ["proof (prove)\nusing this:\n  \\<lfloor>r\\<rfloor> div n * n + \\<lfloor>r\\<rfloor> mod n =\n  \\<lfloor>r\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<lfloor>r\\<rfloor> div n * n + \\<lfloor>r\\<rfloor> mod n =\n    \\<lfloor>r\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  rhs * n + m = \\<lfloor>r\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "have mn: \"m < n\" and m0: \"m \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m < n &&& 0 \\<le> m", "using n m_def"], ["proof (prove)\nusing this:\n  0 < n\n  m = \\<lfloor>r\\<rfloor> mod n\n\ngoal (1 subgoal):\n 1. m < n &&& 0 \\<le> m", "by auto"], ["proof (state)\nthis:\n  m < n\n  0 \\<le> m\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "define e where \"e = r - ?of_int \\<lfloor>r\\<rfloor>\""], ["proof (state)\nthis:\n  e = r - of_int \\<lfloor>r\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "have e0: \"e \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> e", "unfolding e_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> r - of_int \\<lfloor>r\\<rfloor>", "by (metis diff_self eq_iff floor_diff_of_int zero_le_floor)"], ["proof (state)\nthis:\n  (0::'a) \\<le> e\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "have e1: \"e < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e < (1::'a)", "unfolding e_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. r - of_int \\<lfloor>r\\<rfloor> < (1::'a)", "by (metis diff_self dual_order.refl floor_diff_of_int floor_le_zero)"], ["proof (state)\nthis:\n  e < (1::'a)\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "have \"r = ?of_int \\<lfloor>r\\<rfloor> + e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = of_int \\<lfloor>r\\<rfloor> + e", "unfolding e_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. r = of_int \\<lfloor>r\\<rfloor> + (r - of_int \\<lfloor>r\\<rfloor>)", "by simp"], ["proof (state)\nthis:\n  r = of_int \\<lfloor>r\\<rfloor> + e\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "also"], ["proof (state)\nthis:\n  r = of_int \\<lfloor>r\\<rfloor> + e\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "have \"\\<lfloor>r\\<rfloor> = rhs * n + m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>r\\<rfloor> = rhs * n + m", "using dm"], ["proof (prove)\nusing this:\n  rhs * n + m = \\<lfloor>r\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<lfloor>r\\<rfloor> = rhs * n + m", "by simp"], ["proof (state)\nthis:\n  \\<lfloor>r\\<rfloor> = rhs * n + m\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "finally"], ["proof (chain)\npicking this:\n  r = of_int (rhs * n + m) + e", "have \"r = ?of_int (rhs * n + m) + e\""], ["proof (prove)\nusing this:\n  r = of_int (rhs * n + m) + e\n\ngoal (1 subgoal):\n 1. r = of_int (rhs * n + m) + e", "."], ["proof (state)\nthis:\n  r = of_int (rhs * n + m) + e\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "hence \"r / ?n = ?of_int (rhs * n) / ?n + (e + ?m) / ?n\""], ["proof (prove)\nusing this:\n  r = of_int (rhs * n + m) + e\n\ngoal (1 subgoal):\n 1. r / of_int n = of_int (rhs * n) / of_int n + (e + of_int m) / of_int n", "using n"], ["proof (prove)\nusing this:\n  r = of_int (rhs * n + m) + e\n  0 < n\n\ngoal (1 subgoal):\n 1. r / of_int n = of_int (rhs * n) / of_int n + (e + of_int m) / of_int n", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  r / of_int n = of_int (rhs * n) / of_int n + (e + of_int m) / of_int n\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "also"], ["proof (state)\nthis:\n  r / of_int n = of_int (rhs * n) / of_int n + (e + of_int m) / of_int n\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "have \"?of_int (rhs * n) / ?n = ?of_int rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_int (rhs * n) / of_int n = of_int rhs", "using n"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. of_int (rhs * n) / of_int n = of_int rhs", "by auto"], ["proof (state)\nthis:\n  of_int (rhs * n) / of_int n = of_int rhs\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "finally"], ["proof (chain)\npicking this:\n  r / of_int n = of_int rhs + (e + of_int m) / of_int n", "have *: \"r / ?of_int n = (e + ?of_int m) / ?of_int n + ?of_int rhs\""], ["proof (prove)\nusing this:\n  r / of_int n = of_int rhs + (e + of_int m) / of_int n\n\ngoal (1 subgoal):\n 1. r / of_int n = (e + of_int m) / of_int n + of_int rhs", "by simp"], ["proof (state)\nthis:\n  r / of_int n = (e + of_int m) / of_int n + of_int rhs\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "have \"?l = rhs + floor ((e + ?m) / ?n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> =\n    rhs + \\<lfloor>(e + of_int m) / of_int n\\<rfloor>", "unfolding *"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>(e + of_int m) / of_int n + of_int rhs\\<rfloor> =\n    rhs + \\<lfloor>(e + of_int m) / of_int n\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  \\<lfloor>r / of_int n\\<rfloor> =\n  rhs + \\<lfloor>(e + of_int m) / of_int n\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "also"], ["proof (state)\nthis:\n  \\<lfloor>r / of_int n\\<rfloor> =\n  rhs + \\<lfloor>(e + of_int m) / of_int n\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "have \"floor ((e + ?m) / ?n) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>(e + of_int m) / of_int n\\<rfloor> = 0", "proof (rule floor_unique)"], ["proof (state)\ngoal (2 subgoals):\n 1. of_int 0 \\<le> (e + of_int m) / of_int n\n 2. (e + of_int m) / of_int n < of_int 0 + (1::'a)", "show \"?of_int 0 \\<le> (e + ?m) / ?n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_int 0 \\<le> (e + of_int m) / of_int n", "using e0 m0 n"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> e\n  0 \\<le> m\n  0 < n\n\ngoal (1 subgoal):\n 1. of_int 0 \\<le> (e + of_int m) / of_int n", "by (metis add_increasing2 divide_nonneg_pos of_int_0 of_int_0_le_iff of_int_0_less_iff)"], ["proof (state)\nthis:\n  of_int 0 \\<le> (e + of_int m) / of_int n\n\ngoal (1 subgoal):\n 1. (e + of_int m) / of_int n < of_int 0 + (1::'a)", "show \"(e + ?m) / ?n < ?of_int 0 + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (e + of_int m) / of_int n < of_int 0 + (1::'a)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (e + of_int m) / of_int n < of_int 0 + (1::'a) \\<Longrightarrow>\n    False", "from n"], ["proof (chain)\npicking this:\n  0 < n", "have n': \"?n > 0\" \"?n \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. (0::'a) < of_int n &&& (0::'a) \\<le> of_int n", "by simp_all"], ["proof (state)\nthis:\n  (0::'a) < of_int n\n  (0::'a) \\<le> of_int n\n\ngoal (1 subgoal):\n 1. \\<not> (e + of_int m) / of_int n < of_int 0 + (1::'a) \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> (e + of_int m) / of_int n < of_int 0 + (1::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (e + of_int m) / of_int n < of_int 0 + (1::'a) \\<Longrightarrow>\n    False", "hence \"(e + ?m) / ?n \\<ge> 1\""], ["proof (prove)\nusing this:\n  \\<not> (e + of_int m) / of_int n < of_int 0 + (1::'a)\n\ngoal (1 subgoal):\n 1. (1::'a) \\<le> (e + of_int m) / of_int n", "by auto"], ["proof (state)\nthis:\n  (1::'a) \\<le> (e + of_int m) / of_int n\n\ngoal (1 subgoal):\n 1. \\<not> (e + of_int m) / of_int n < of_int 0 + (1::'a) \\<Longrightarrow>\n    False", "from mult_right_mono[OF this n'(2)]"], ["proof (chain)\npicking this:\n  (1::'a) * of_int n \\<le> (e + of_int m) / of_int n * of_int n", "have \"?n \\<le> e + ?m\""], ["proof (prove)\nusing this:\n  (1::'a) * of_int n \\<le> (e + of_int m) / of_int n * of_int n\n\ngoal (1 subgoal):\n 1. of_int n \\<le> e + of_int m", "using n'(1)"], ["proof (prove)\nusing this:\n  (1::'a) * of_int n \\<le> (e + of_int m) / of_int n * of_int n\n  (0::'a) < of_int n\n\ngoal (1 subgoal):\n 1. of_int n \\<le> e + of_int m", "by simp"], ["proof (state)\nthis:\n  of_int n \\<le> e + of_int m\n\ngoal (1 subgoal):\n 1. \\<not> (e + of_int m) / of_int n < of_int 0 + (1::'a) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  of_int n \\<le> e + of_int m\n\ngoal (1 subgoal):\n 1. \\<not> (e + of_int m) / of_int n < of_int 0 + (1::'a) \\<Longrightarrow>\n    False", "have \"?m \\<le> ?n - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_int m \\<le> of_int n - (1::'a)", "using mn"], ["proof (prove)\nusing this:\n  m < n\n\ngoal (1 subgoal):\n 1. of_int m \\<le> of_int n - (1::'a)", "by (metis of_int_1 of_int_diff of_int_le_iff zle_diff1_eq)"], ["proof (state)\nthis:\n  of_int m \\<le> of_int n - (1::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (e + of_int m) / of_int n < of_int 0 + (1::'a) \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> e + x \\<le> e + y) \\<Longrightarrow>\n  of_int n \\<le> e + (of_int n - (1::'a))", "have \"?n \\<le> e + ?n - 1\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> e + x \\<le> e + y) \\<Longrightarrow>\n  of_int n \\<le> e + (of_int n - (1::'a))\n\ngoal (1 subgoal):\n 1. of_int n \\<le> e + of_int n - (1::'a)", "by auto"], ["proof (state)\nthis:\n  of_int n \\<le> e + of_int n - (1::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (e + of_int m) / of_int n < of_int 0 + (1::'a) \\<Longrightarrow>\n    False", "with e1"], ["proof (chain)\npicking this:\n  e < (1::'a)\n  of_int n \\<le> e + of_int n - (1::'a)", "show False"], ["proof (prove)\nusing this:\n  e < (1::'a)\n  of_int n \\<le> e + of_int n - (1::'a)\n\ngoal (1 subgoal):\n 1. False", "by arith"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (e + of_int m) / of_int n < of_int 0 + (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lfloor>(e + of_int m) / of_int n\\<rfloor> = 0\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "finally"], ["proof (chain)\npicking this:\n  \\<lfloor>r / of_int n\\<rfloor> = rhs + 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lfloor>r / of_int n\\<rfloor> = rhs + 0\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "unfolding rhs_def"], ["proof (prove)\nusing this:\n  \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n + 0\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n", "by simp"], ["proof (state)\nthis:\n  \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>r\\<rfloor> div n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma floor_div_neg_int: \n  fixes r :: \"'a :: floor_ceiling\"\n  assumes n: \"n < 0\" \n  shows \"\\<lfloor>r / of_int n\\<rfloor> = \\<lceil>r\\<rceil> div n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lceil>r\\<rceil> div n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lceil>r\\<rceil> div n", "from n"], ["proof (chain)\npicking this:\n  n < 0", "have n': \"- n > 0\""], ["proof (prove)\nusing this:\n  n < 0\n\ngoal (1 subgoal):\n 1. 0 < - n", "by auto"], ["proof (state)\nthis:\n  0 < - n\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lceil>r\\<rceil> div n", "have \"\\<lfloor>r / of_int n\\<rfloor> = \\<lfloor> - r / of_int (- n)\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>- r / of_int (- n)\\<rfloor>", "using n"], ["proof (prove)\nusing this:\n  n < 0\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>- r / of_int (- n)\\<rfloor>", "by (metis floor_of_int floor_zero less_int_code(1) minus_divide_left minus_minus nonzero_minus_divide_right of_int_minus)"], ["proof (state)\nthis:\n  \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>- r / of_int (- n)\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lceil>r\\<rceil> div n", "also"], ["proof (state)\nthis:\n  \\<lfloor>r / of_int n\\<rfloor> = \\<lfloor>- r / of_int (- n)\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lceil>r\\<rceil> div n", "have \"\\<dots> = \\<lfloor> - r \\<rfloor> div (- n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>- r / of_int (- n)\\<rfloor> = \\<lfloor>- r\\<rfloor> div - n", "by (rule floor_div_pos_int[OF n'])"], ["proof (state)\nthis:\n  \\<lfloor>- r / of_int (- n)\\<rfloor> = \\<lfloor>- r\\<rfloor> div - n\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lceil>r\\<rceil> div n", "also"], ["proof (state)\nthis:\n  \\<lfloor>- r / of_int (- n)\\<rfloor> = \\<lfloor>- r\\<rfloor> div - n\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lceil>r\\<rceil> div n", "have \"\\<dots> = \\<lceil> r \\<rceil> div n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>- r\\<rfloor> div - n = \\<lceil>r\\<rceil> div n", "using n"], ["proof (prove)\nusing this:\n  n < 0\n\ngoal (1 subgoal):\n 1. \\<lfloor>- r\\<rfloor> div - n = \\<lceil>r\\<rceil> div n", "by (metis ceiling_def div_minus_right)"], ["proof (state)\nthis:\n  \\<lfloor>- r\\<rfloor> div - n = \\<lceil>r\\<rceil> div n\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lceil>r\\<rceil> div n", "finally"], ["proof (chain)\npicking this:\n  \\<lfloor>r / of_int n\\<rfloor> = \\<lceil>r\\<rceil> div n", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lfloor>r / of_int n\\<rfloor> = \\<lceil>r\\<rceil> div n\n\ngoal (1 subgoal):\n 1. \\<lfloor>r / of_int n\\<rfloor> = \\<lceil>r\\<rceil> div n", "."], ["proof (state)\nthis:\n  \\<lfloor>r / of_int n\\<rfloor> = \\<lceil>r\\<rceil> div n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma divide_less_floor1: \"n / y < of_int (floor (n / y)) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n / y < of_int \\<lfloor>n / y\\<rfloor> + (1::'a)", "by (metis floor_less_iff less_add_one of_int_1 of_int_add)"], ["", "context linordered_idom\nbegin"], ["", "lemma sgn_int_pow_if [simp]:\n  \"sgn x ^ p = (if even p then 1 else sgn x)\" if \"x \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn x ^ p = (if even p then 1::'a else sgn x)", "using that"], ["proof (prove)\nusing this:\n  x \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. sgn x ^ p = (if even p then 1::'a else sgn x)", "by (induct p) simp_all"], ["", "lemma compare_pow_le_iff: \"p > 0 \\<Longrightarrow> (x :: 'a) \\<ge> 0 \\<Longrightarrow> y \\<ge> 0 \\<Longrightarrow> (x ^ p \\<le> y ^ p) = (x \\<le> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < p; (0::'a) \\<le> x; (0::'a) \\<le> y\\<rbrakk>\n    \\<Longrightarrow> (x ^ p \\<le> y ^ p) = (x \\<le> y)", "by (metis eq_iff linear power_eq_imp_eq_base power_mono)"], ["", "lemma compare_pow_less_iff: \"p > 0 \\<Longrightarrow> (x :: 'a) \\<ge> 0 \\<Longrightarrow> y \\<ge> 0 \\<Longrightarrow> (x ^ p < y ^ p) = (x < y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < p; (0::'a) \\<le> x; (0::'a) \\<le> y\\<rbrakk>\n    \\<Longrightarrow> (x ^ p < y ^ p) = (x < y)", "by (metis power_less_imp_less_base power_strict_mono)"], ["", "end"], ["", "lemma quotient_of_int[simp]: \"quotient_of (of_int i) = (i,1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. quotient_of (rat_of_int i) = (i, 1)", "by (metis Rat.of_int_def quotient_of_int)"], ["", "lemma quotient_of_nat[simp]: \"quotient_of (of_nat i) = (int i,1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. quotient_of (rat_of_nat i) = (int i, 1)", "by (metis Rat.of_int_def Rat.quotient_of_int of_int_of_nat_eq)"], ["", "lemma square_lesseq_square: \"\\<And> x y. 0 \\<le> (x :: 'a :: linordered_field) \\<Longrightarrow> 0 \\<le> y \\<Longrightarrow> (x * x \\<le> y * y) = (x \\<le> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>(0::'a) \\<le> x; (0::'a) \\<le> y\\<rbrakk>\n       \\<Longrightarrow> (x * x \\<le> y * y) = (x \\<le> y)", "by (metis mult_mono mult_strict_mono' not_less)"], ["", "lemma square_less_square: \"\\<And> x y. 0 \\<le> (x :: 'a :: linordered_field) \\<Longrightarrow> 0 \\<le> y \\<Longrightarrow> (x * x < y * y) = (x < y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>(0::'a) \\<le> x; (0::'a) \\<le> y\\<rbrakk>\n       \\<Longrightarrow> (x * x < y * y) = (x < y)", "by (metis mult_mono mult_strict_mono' not_less)"], ["", "lemma sqrt_sqrt[simp]: \"x \\<ge> 0 \\<Longrightarrow> sqrt x * sqrt x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> x \\<Longrightarrow> sqrt x * sqrt x = x", "by (metis real_sqrt_pow2 power2_eq_square)"], ["", "lemma abs_lesseq_square: \"abs (x :: real) \\<le> abs y \\<longleftrightarrow> x * x \\<le> y * y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<bar>x\\<bar> \\<le> \\<bar>y\\<bar>) = (x * x \\<le> y * y)", "using square_lesseq_square[of \"abs x\" \"abs y\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> \\<bar>x\\<bar>; 0 \\<le> \\<bar>y\\<bar>\\<rbrakk>\n  \\<Longrightarrow> (\\<bar>x\\<bar> * \\<bar>x\\<bar>\n                     \\<le> \\<bar>y\\<bar> * \\<bar>y\\<bar>) =\n                    (\\<bar>x\\<bar> \\<le> \\<bar>y\\<bar>)\n\ngoal (1 subgoal):\n 1. (\\<bar>x\\<bar> \\<le> \\<bar>y\\<bar>) = (x * x \\<le> y * y)", "by auto"], ["", "end"]]}