{"file_name": "/home/qj213/afp-2021-10-22/thys/Matroids/Indep_System.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Matroids", "problem_names": ["lemma finite_psubset_inc_induct:\n  assumes \"finite A\" \"X \\<subseteq> A\"\n  assumes \"\\<And>X. (\\<And>Y. X \\<subset> Y \\<Longrightarrow> Y \\<subseteq> A \\<Longrightarrow> P Y) \\<Longrightarrow> P X\"\n  shows \"P X\"", "lemmas psubset_inc_induct [case_names carrier step] = finite_psubset_inc_induct[OF carrier_finite]", "lemmas indep_finite [simp] = finite_subset[OF indep_subset_carrier carrier_finite]", "lemma indep_empty [simp]: \"indep {}\"", "lemma indep_inI:\n  assumes \"X \\<subseteq> \\<E>\"\n  assumes \"indep X\"\n  shows \"indep_in \\<E> X\"", "lemma indep_in_subI: \"indep_in \\<E> X \\<Longrightarrow> indep_in \\<E>' (X \\<inter> \\<E>')\"", "lemma dep_in_subI:\n  assumes \"X \\<subseteq> \\<E>'\"\n  shows \"\\<not> indep_in \\<E>' X \\<Longrightarrow> \\<not> indep_in \\<E> X\"", "lemma indep_in_subset_carrier: \"indep_in \\<E> X \\<Longrightarrow> X \\<subseteq> \\<E>\"", "lemma indep_in_subI_subset:\n  assumes \"\\<E>' \\<subseteq> \\<E>\"\n  assumes \"indep_in \\<E>' X\"\n  shows \"indep_in \\<E> X\"", "lemma indep_in_supI:\n  assumes \"X \\<subseteq> \\<E>'\" \"\\<E>' \\<subseteq> \\<E>\"\n  assumes \"indep_in \\<E> X\"\n  shows \"indep_in \\<E>' X\"", "lemma indep_in_indep: \"indep_in \\<E> X \\<Longrightarrow> indep X\"", "lemmas indep_inD = indep_in_subset_carrier indep_in_indep", "lemma indep_system_subset [simp, intro]:\n  assumes \"\\<E> \\<subseteq> carrier\"\n  shows \"indep_system \\<E> (indep_in \\<E>)\"", "lemma indep_in_sub_cong:\n  assumes \"\\<E>' \\<subseteq> \\<E>\"\n  shows \"\\<E>.indep_in \\<E>' X \\<longleftrightarrow> indep_in \\<E>' X\"", "lemmas indep_in_ex = \\<E>.indep_ex", "lemmas indep_in_subset = \\<E>.indep_subset", "lemmas indep_in_empty = \\<E>.indep_empty", "lemma basisI:\n  assumes \"indep X\"\n  assumes \"\\<And>x. x \\<in> carrier - X \\<Longrightarrow> \\<not> indep (insert x X)\"\n  shows \"basis X\"", "lemma basis_indep: \"basis X \\<Longrightarrow> indep X\"", "lemma basis_max_indep: \"basis X \\<Longrightarrow> x \\<in> carrier - X \\<Longrightarrow> \\<not> indep (insert x X)\"", "lemmas basisD = basis_indep basis_max_indep", "lemmas basis_subset_carrier = indep_subset_carrier[OF basis_indep]", "lemmas basis_finite [simp] = indep_finite[OF basis_indep]", "lemma indep_not_basis:\n  assumes \"indep X\"\n  assumes \"\\<not> basis X\"\n  shows \"\\<exists>x \\<in> carrier - X. indep (insert x X)\"", "lemma basis_subset_eq:\n  assumes \"basis B\\<^sub>1\"\n  assumes \"basis B\\<^sub>2\"\n  assumes \"B\\<^sub>1 \\<subseteq> B\\<^sub>2\"\n  shows \"B\\<^sub>1 = B\\<^sub>2\"", "lemma basis_iff_basis_in: \"basis B \\<longleftrightarrow> basis_in carrier B\"", "lemma basis_inI_aux: \"\\<E>.basis X \\<Longrightarrow> basis_in \\<E> X\"", "lemma basis_inD_aux: \"basis_in \\<E> X \\<Longrightarrow> \\<E>.basis X\"", "lemma not_basis_inD_aux: \"\\<not> basis_in \\<E> X \\<Longrightarrow> \\<not> \\<E>.basis X\"", "lemmas basis_inI = basis_inI_aux[OF \\<E>.basisI]", "lemmas basis_in_indep_in = \\<E>.basis_indep[OF basis_inD_aux]", "lemmas basis_in_max_indep_in = \\<E>.basis_max_indep[OF basis_inD_aux]", "lemmas basis_inD = \\<E>.basisD[OF basis_inD_aux]", "lemmas basis_in_subset_carrier = \\<E>.basis_subset_carrier[OF basis_inD_aux]", "lemmas basis_in_finite = \\<E>.basis_finite[OF basis_inD_aux]", "lemmas indep_in_not_basis_in = \\<E>.indep_not_basis[OF _ not_basis_inD_aux]", "lemmas basis_in_subset_eq = \\<E>.basis_subset_eq[OF basis_inD_aux basis_inD_aux]", "lemma basis_in_sub_cong:\n  assumes \"\\<E>' \\<subseteq> \\<E>\"\n  shows \"\\<E>.basis_in \\<E>' B \\<longleftrightarrow> basis_in \\<E>' B\"", "lemma circuitI:\n  assumes \"X \\<subseteq> carrier\"\n  assumes \"\\<not> indep X\"\n  assumes \"\\<And>x. x \\<in> X \\<Longrightarrow> indep (X - {x})\"\n  shows \"circuit X\"", "lemma circuit_subset_carrier: \"circuit X \\<Longrightarrow> X \\<subseteq> carrier\"", "lemmas circuit_finite [simp] = finite_subset[OF circuit_subset_carrier carrier_finite]", "lemma circuit_dep: \"circuit X \\<Longrightarrow> \\<not> indep X\"", "lemma circuit_min_dep: \"circuit X \\<Longrightarrow> x \\<in> X \\<Longrightarrow> indep (X - {x})\"", "lemmas circuitD = circuit_subset_carrier circuit_dep circuit_min_dep", "lemma circuit_nonempty: \"circuit X \\<Longrightarrow> X \\<noteq> {}\"", "lemma dep_not_circuit:\n  assumes \"X \\<subseteq> carrier\"\n  assumes \"\\<not> indep X\"\n  assumes \"\\<not> circuit X\"\n  shows \"\\<exists>x \\<in> X. \\<not> indep (X - {x})\"", "lemma circuit_subset_eq:\n  assumes \"circuit C\\<^sub>1\"\n  assumes \"circuit C\\<^sub>2\"\n  assumes \"C\\<^sub>1 \\<subseteq> C\\<^sub>2\"\n  shows \"C\\<^sub>1 = C\\<^sub>2\"", "lemma circuit_inI_aux: \"\\<E>.circuit X \\<Longrightarrow> circuit_in \\<E> X\"", "lemma circuit_inD_aux: \"circuit_in \\<E> X \\<Longrightarrow> \\<E>.circuit X\"", "lemma not_circuit_inD_aux: \"\\<not> circuit_in \\<E> X \\<Longrightarrow> \\<not> \\<E>.circuit X\"", "lemmas circuit_inI = circuit_inI_aux[OF \\<E>.circuitI]", "lemmas circuit_in_subset_carrier = \\<E>.circuit_subset_carrier[OF circuit_inD_aux]", "lemmas circuit_in_finite = \\<E>.circuit_finite[OF circuit_inD_aux]", "lemmas circuit_in_dep_in = \\<E>.circuit_dep[OF circuit_inD_aux]", "lemmas circuit_in_min_dep_in = \\<E>.circuit_min_dep[OF circuit_inD_aux]", "lemmas circuit_inD = \\<E>.circuitD[OF circuit_inD_aux]", "lemmas circuit_in_nonempty = \\<E>.circuit_nonempty[OF circuit_inD_aux]", "lemmas dep_in_not_circuit_in = \\<E>.dep_not_circuit[OF _ _ not_circuit_inD_aux]", "lemmas circuit_in_subset_eq = \\<E>.circuit_subset_eq[OF circuit_inD_aux circuit_inD_aux]", "lemma circuit_in_subI:\n  assumes \"\\<E>' \\<subseteq> \\<E>\" \"\\<E> \\<subseteq> carrier\"\n  assumes \"circuit_in \\<E>' C\"\n  shows \"circuit_in \\<E> C\"", "lemma circuit_in_supI:\n  assumes \"\\<E>' \\<subseteq> \\<E>\" \"\\<E> \\<subseteq> carrier\" \"C \\<subseteq> \\<E>'\"\n  assumes \"circuit_in \\<E> C\"\n  shows \"circuit_in \\<E>' C\"", "lemma circuit_in_sub_cong:\n  assumes \"\\<E>' \\<subseteq> \\<E>\"\n  shows \"\\<E>.circuit_in \\<E>' C \\<longleftrightarrow> circuit_in \\<E>' C\"", "lemma circuit_imp_circuit_in:\n  assumes \"circuit C\"\n  shows \"circuit_in carrier C\"", "lemma indep_imp_subset_basis:\n  assumes \"indep X\"\n  shows \"\\<exists>B. basis B \\<and> X \\<subseteq> B\"", "lemmas subset_basis_imp_indep = indep_subset[OF basis_indep]", "lemma indep_iff_subset_basis: \"indep X \\<longleftrightarrow> (\\<exists>B. basis B \\<and> X \\<subseteq> B)\"", "lemma basis_ex: \"\\<exists>B. basis B\"", "lemma indep_in_imp_subset_basis_in:\n  assumes \"indep_in \\<E> X\"\n  shows \"\\<exists>B. basis_in \\<E> B \\<and> X \\<subseteq> B\"", "lemmas subset_basis_in_imp_indep_in = indep_in_subset[OF * basis_in_indep_in[OF *]]", "lemma indep_in_iff_subset_basis_in: \"indep_in \\<E> X \\<longleftrightarrow> (\\<exists>B. basis_in \\<E> B \\<and> X \\<subseteq> B)\"", "lemma basis_in_ex: \"\\<exists>B. basis_in \\<E> B\"", "lemma basis_in_subI:\n  assumes \"\\<E>' \\<subseteq> \\<E>\" \"\\<E> \\<subseteq> carrier\"\n  assumes \"basis_in \\<E>' B\"\n  shows \"\\<exists>B' \\<subseteq> \\<E> - \\<E>'. basis_in \\<E> (B \\<union> B')\"", "lemma basis_in_supI:\n  assumes \"B \\<subseteq> \\<E>'\" \"\\<E>' \\<subseteq> \\<E>\" \"\\<E> \\<subseteq> carrier\"\n  assumes \"basis_in \\<E> B\"\n  shows \"basis_in \\<E>' B\"", "lemma dep_imp_supset_circuit:\n  assumes \"X \\<subseteq> carrier\"\n  assumes \"\\<not> indep X\"\n  shows \"\\<exists>C. circuit C \\<and> C \\<subseteq> X\"", "lemma supset_circuit_imp_dep:\n  assumes \"circuit C \\<and> C \\<subseteq> X\"\n  shows \"\\<not> indep X\"", "lemma dep_iff_supset_circuit:\n  assumes \"X \\<subseteq> carrier\"\n  shows \"\\<not> indep X \\<longleftrightarrow> (\\<exists>C. circuit C \\<and> C \\<subseteq> X)\"", "lemma dep_in_imp_supset_circuit_in:\n  assumes \"X \\<subseteq> \\<E>\"\n  assumes \"\\<not> indep_in \\<E> X\"\n  shows \"\\<exists>C. circuit_in \\<E> C \\<and> C \\<subseteq> X\"", "lemma supset_circuit_in_imp_dep_in:\n  assumes \"circuit_in \\<E> C \\<and> C \\<subseteq> X\"\n  shows \"\\<not> indep_in \\<E> X\"", "lemma dep_in_iff_supset_circuit_in:\n  assumes \"X \\<subseteq> \\<E>\"\n  shows \"\\<not> indep_in \\<E> X \\<longleftrightarrow> (\\<exists>C. circuit_in \\<E> C \\<and> C \\<subseteq> X)\"", "lemma collect_basis_finite: \"finite (Collect basis)\"", "lemma collect_basis_in_finite: \"finite (Collect (basis_in \\<E>))\"", "lemma lower_rank_of_le: \"lower_rank_of \\<E> \\<le> card \\<E>\"", "lemma upper_rank_of_le: \"upper_rank_of \\<E> \\<le> card \\<E>\"", "lemma lower_rank_of_sub_cong:\n  shows \"\\<E>.lower_rank_of \\<E>' = lower_rank_of \\<E>'\"", "lemma upper_rank_of_sub_cong:\n  shows \"\\<E>.upper_rank_of \\<E>' = upper_rank_of \\<E>'\""], "translations": [["", "lemma finite_psubset_inc_induct:\n  assumes \"finite A\" \"X \\<subseteq> A\"\n  assumes \"\\<And>X. (\\<And>Y. X \\<subset> Y \\<Longrightarrow> Y \\<subseteq> A \\<Longrightarrow> P Y) \\<Longrightarrow> P X\"\n  shows \"P X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P X", "have wf: \"wf {(X,Y). Y \\<subset> X \\<and> X \\<subseteq> A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf {(X, Y). Y \\<subset> X \\<and> X \\<subseteq> A}", "by (rule wf_bounded_set[where ub = \"\\<lambda>_. A\" and f = id]) (auto simp add: \\<open>finite A\\<close>)"], ["proof (state)\nthis:\n  wf {(X, Y). Y \\<subset> X \\<and> X \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. P X", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P X", "proof (induction X rule: wf_induct[OF wf, case_names step])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>y.\n          (y, x)\n          \\<in> {(X, Y).\n                 Y \\<subset> X \\<and> X \\<subseteq> A} \\<longrightarrow>\n          P y \\<Longrightarrow>\n       P x", "case (step X)"], ["proof (state)\nthis:\n  \\<forall>y.\n     (y, X)\n     \\<in> {(X, Y). Y \\<subset> X \\<and> X \\<subseteq> A} \\<longrightarrow>\n     P y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>y.\n          (y, x)\n          \\<in> {(X, Y).\n                 Y \\<subset> X \\<and> X \\<subseteq> A} \\<longrightarrow>\n          P y \\<Longrightarrow>\n       P x", "then"], ["proof (chain)\npicking this:\n  \\<forall>y.\n     (y, X)\n     \\<in> {(X, Y). Y \\<subset> X \\<and> X \\<subseteq> A} \\<longrightarrow>\n     P y", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>y.\n     (y, X)\n     \\<in> {(X, Y). Y \\<subset> X \\<and> X \\<subseteq> A} \\<longrightarrow>\n     P y\n\ngoal (1 subgoal):\n 1. P X", "using assms(3)[of X]"], ["proof (prove)\nusing this:\n  \\<forall>y.\n     (y, X)\n     \\<in> {(X, Y). Y \\<subset> X \\<and> X \\<subseteq> A} \\<longrightarrow>\n     P y\n  (\\<And>Y.\n      \\<lbrakk>X \\<subset> Y; Y \\<subseteq> A\\<rbrakk>\n      \\<Longrightarrow> P Y) \\<Longrightarrow>\n  P X\n\ngoal (1 subgoal):\n 1. P X", "by blast"], ["proof (state)\nthis:\n  P X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P X\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  An \\emph{independence system} consists of a finite ground set together with an independence\n  predicate over the sets of this ground set. At least one set of the carrier is independent and\n  subsets of independent sets are also independent.\n\\<close>"], ["", "locale indep_system =\n  fixes carrier :: \"'a set\"\n  fixes indep :: \"'a set \\<Rightarrow> bool\"\n  assumes carrier_finite: \"finite carrier\"\n  assumes indep_subset_carrier: \"indep X \\<Longrightarrow> X \\<subseteq> carrier\"\n  assumes indep_ex: \"\\<exists>X. indep X\"\n  assumes indep_subset: \"indep X \\<Longrightarrow> Y \\<subseteq> X \\<Longrightarrow> indep Y\"\nbegin"], ["", "lemmas psubset_inc_induct [case_names carrier step] = finite_psubset_inc_induct[OF carrier_finite]"], ["", "lemmas indep_finite [simp] = finite_subset[OF indep_subset_carrier carrier_finite]"], ["", "text \\<open>\n  The empty set is independent.\n\\<close>"], ["", "lemma indep_empty [simp]: \"indep {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep {}", "using indep_ex indep_subset"], ["proof (prove)\nusing this:\n  \\<exists>X. indep X\n  \\<lbrakk>indep ?X; ?Y \\<subseteq> ?X\\<rbrakk> \\<Longrightarrow> indep ?Y\n\ngoal (1 subgoal):\n 1. indep {}", "by auto"], ["", "subsection \\<open>Sub-independence systems\\<close>"], ["", "text \\<open>\n  A subset of the ground set induces an independence system.\n\\<close>"], ["", "definition indep_in where \"indep_in \\<E> X \\<longleftrightarrow> X \\<subseteq> \\<E> \\<and> indep X\""], ["", "lemma indep_inI:\n  assumes \"X \\<subseteq> \\<E>\"\n  assumes \"indep X\"\n  shows \"indep_in \\<E> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in \\<E> X", "using assms"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>\n  indep X\n\ngoal (1 subgoal):\n 1. indep_in \\<E> X", "unfolding indep_in_def"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>\n  indep X\n\ngoal (1 subgoal):\n 1. X \\<subseteq> \\<E> \\<and> indep X", "by auto"], ["", "lemma indep_in_subI: \"indep_in \\<E> X \\<Longrightarrow> indep_in \\<E>' (X \\<inter> \\<E>')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in \\<E> X \\<Longrightarrow> indep_in \\<E>' (X \\<inter> \\<E>')", "using indep_subset"], ["proof (prove)\nusing this:\n  \\<lbrakk>indep ?X; ?Y \\<subseteq> ?X\\<rbrakk> \\<Longrightarrow> indep ?Y\n\ngoal (1 subgoal):\n 1. indep_in \\<E> X \\<Longrightarrow> indep_in \\<E>' (X \\<inter> \\<E>')", "unfolding indep_in_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>indep ?X; ?Y \\<subseteq> ?X\\<rbrakk> \\<Longrightarrow> indep ?Y\n\ngoal (1 subgoal):\n 1. X \\<subseteq> \\<E> \\<and> indep X \\<Longrightarrow>\n    X \\<inter> \\<E>' \\<subseteq> \\<E>' \\<and> indep (X \\<inter> \\<E>')", "by auto"], ["", "lemma dep_in_subI:\n  assumes \"X \\<subseteq> \\<E>'\"\n  shows \"\\<not> indep_in \\<E>' X \\<Longrightarrow> \\<not> indep_in \\<E> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> indep_in \\<E>' X \\<Longrightarrow> \\<not> indep_in \\<E> X", "using assms"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>'\n\ngoal (1 subgoal):\n 1. \\<not> indep_in \\<E>' X \\<Longrightarrow> \\<not> indep_in \\<E> X", "unfolding indep_in_def"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>'\n\ngoal (1 subgoal):\n 1. \\<not> (X \\<subseteq> \\<E>' \\<and> indep X) \\<Longrightarrow>\n    \\<not> (X \\<subseteq> \\<E> \\<and> indep X)", "by auto"], ["", "lemma indep_in_subset_carrier: \"indep_in \\<E> X \\<Longrightarrow> X \\<subseteq> \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in \\<E> X \\<Longrightarrow> X \\<subseteq> \\<E>", "unfolding indep_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> \\<E> \\<and> indep X \\<Longrightarrow> X \\<subseteq> \\<E>", "by auto"], ["", "lemma indep_in_subI_subset:\n  assumes \"\\<E>' \\<subseteq> \\<E>\"\n  assumes \"indep_in \\<E>' X\"\n  shows \"indep_in \\<E> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in \\<E> X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. indep_in \\<E> X", "have \"indep_in \\<E> (X \\<inter> \\<E>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in \\<E> (X \\<inter> \\<E>)", "using assms indep_in_subI"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  indep_in \\<E>' X\n  indep_in ?\\<E> ?X \\<Longrightarrow> indep_in ?\\<E>' (?X \\<inter> ?\\<E>')\n\ngoal (1 subgoal):\n 1. indep_in \\<E> (X \\<inter> \\<E>)", "by auto"], ["proof (state)\nthis:\n  indep_in \\<E> (X \\<inter> \\<E>)\n\ngoal (1 subgoal):\n 1. indep_in \\<E> X", "moreover"], ["proof (state)\nthis:\n  indep_in \\<E> (X \\<inter> \\<E>)\n\ngoal (1 subgoal):\n 1. indep_in \\<E> X", "have \"X \\<inter> \\<E> = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<inter> \\<E> = X", "using assms indep_in_subset_carrier"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  indep_in \\<E>' X\n  indep_in ?\\<E> ?X \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n\ngoal (1 subgoal):\n 1. X \\<inter> \\<E> = X", "by auto"], ["proof (state)\nthis:\n  X \\<inter> \\<E> = X\n\ngoal (1 subgoal):\n 1. indep_in \\<E> X", "ultimately"], ["proof (chain)\npicking this:\n  indep_in \\<E> (X \\<inter> \\<E>)\n  X \\<inter> \\<E> = X", "show ?thesis"], ["proof (prove)\nusing this:\n  indep_in \\<E> (X \\<inter> \\<E>)\n  X \\<inter> \\<E> = X\n\ngoal (1 subgoal):\n 1. indep_in \\<E> X", "by auto"], ["proof (state)\nthis:\n  indep_in \\<E> X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma indep_in_supI:\n  assumes \"X \\<subseteq> \\<E>'\" \"\\<E>' \\<subseteq> \\<E>\"\n  assumes \"indep_in \\<E> X\"\n  shows \"indep_in \\<E>' X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in \\<E>' X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. indep_in \\<E>' X", "have \"X \\<inter> \\<E>' = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<inter> \\<E>' = X", "using assms"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>'\n  \\<E>' \\<subseteq> \\<E>\n  indep_in \\<E> X\n\ngoal (1 subgoal):\n 1. X \\<inter> \\<E>' = X", "by auto"], ["proof (state)\nthis:\n  X \\<inter> \\<E>' = X\n\ngoal (1 subgoal):\n 1. indep_in \\<E>' X", "then"], ["proof (chain)\npicking this:\n  X \\<inter> \\<E>' = X", "show ?thesis"], ["proof (prove)\nusing this:\n  X \\<inter> \\<E>' = X\n\ngoal (1 subgoal):\n 1. indep_in \\<E>' X", "using assms indep_in_subI[where \\<E> = \\<E> and \\<E>' = \\<E>' and X = X]"], ["proof (prove)\nusing this:\n  X \\<inter> \\<E>' = X\n  X \\<subseteq> \\<E>'\n  \\<E>' \\<subseteq> \\<E>\n  indep_in \\<E> X\n  indep_in \\<E> X \\<Longrightarrow> indep_in \\<E>' (X \\<inter> \\<E>')\n\ngoal (1 subgoal):\n 1. indep_in \\<E>' X", "by auto"], ["proof (state)\nthis:\n  indep_in \\<E>' X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma indep_in_indep: \"indep_in \\<E> X \\<Longrightarrow> indep X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in \\<E> X \\<Longrightarrow> indep X", "unfolding indep_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> \\<E> \\<and> indep X \\<Longrightarrow> indep X", "by auto"], ["", "lemmas indep_inD = indep_in_subset_carrier indep_in_indep"], ["", "lemma indep_system_subset [simp, intro]:\n  assumes \"\\<E> \\<subseteq> carrier\"\n  shows \"indep_system \\<E> (indep_in \\<E>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "unfolding indep_system_def indep_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (finite \\<E> \\<and>\n     (\\<forall>X.\n         X \\<subseteq> \\<E> \\<and> indep X \\<longrightarrow>\n         X \\<subseteq> \\<E>)) \\<and>\n    (\\<exists>X\\<subseteq>\\<E>. indep X) \\<and>\n    (\\<forall>X Y.\n        X \\<subseteq> \\<E> \\<and> indep X \\<longrightarrow>\n        Y \\<subseteq> X \\<longrightarrow> Y \\<subseteq> \\<E> \\<and> indep Y)", "using finite_subset[OF assms carrier_finite] indep_subset"], ["proof (prove)\nusing this:\n  finite \\<E>\n  \\<lbrakk>indep ?X; ?Y \\<subseteq> ?X\\<rbrakk> \\<Longrightarrow> indep ?Y\n\ngoal (1 subgoal):\n 1. (finite \\<E> \\<and>\n     (\\<forall>X.\n         X \\<subseteq> \\<E> \\<and> indep X \\<longrightarrow>\n         X \\<subseteq> \\<E>)) \\<and>\n    (\\<exists>X\\<subseteq>\\<E>. indep X) \\<and>\n    (\\<forall>X Y.\n        X \\<subseteq> \\<E> \\<and> indep X \\<longrightarrow>\n        Y \\<subseteq> X \\<longrightarrow> Y \\<subseteq> \\<E> \\<and> indep Y)", "by auto"], ["", "text \\<open>\n  We will work a lot with different sub structures. Therefore, every definition `foo' will have\n  a counterpart `foo\\_in' which has the ground set as an additional parameter. Furthermore, every\n  result about `foo' will have another result about `foo\\_in'. With this, we usually don't have to\n  work with @{command interpretation} in proofs.\n\\<close>"], ["", "context\n  fixes \\<E>\n  assumes \"\\<E> \\<subseteq> carrier\"\nbegin"], ["", "interpretation \\<E>: indep_system \\<E> \"indep_in \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "using \\<open>\\<E> \\<subseteq> carrier\\<close>"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "by auto"], ["", "lemma indep_in_sub_cong:\n  assumes \"\\<E>' \\<subseteq> \\<E>\"\n  shows \"\\<E>.indep_in \\<E>' X \\<longleftrightarrow> indep_in \\<E>' X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.indep_in \\<E>' X = indep_in \\<E>' X", "unfolding \\<E>.indep_in_def indep_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (X \\<subseteq> \\<E>' \\<and> X \\<subseteq> \\<E> \\<and> indep X) =\n    (X \\<subseteq> \\<E>' \\<and> indep X)", "using assms"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n\ngoal (1 subgoal):\n 1. (X \\<subseteq> \\<E>' \\<and> X \\<subseteq> \\<E> \\<and> indep X) =\n    (X \\<subseteq> \\<E>' \\<and> indep X)", "by auto"], ["", "lemmas indep_in_ex = \\<E>.indep_ex"], ["", "lemmas indep_in_subset = \\<E>.indep_subset"], ["", "lemmas indep_in_empty = \\<E>.indep_empty"], ["", "end"], ["", "subsection \\<open>Bases\\<close>"], ["", "text \\<open>\n  A \\emph{basis} is a maximal independent set, i.\\,e.\\ an independent set which becomes dependent on\n  inserting any element of the ground set.\n\\<close>"], ["", "definition basis where \"basis X \\<longleftrightarrow> indep X \\<and> (\\<forall>x \\<in> carrier - X. \\<not> indep (insert x X))\""], ["", "lemma basisI:\n  assumes \"indep X\"\n  assumes \"\\<And>x. x \\<in> carrier - X \\<Longrightarrow> \\<not> indep (insert x X)\"\n  shows \"basis X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis X", "using assms"], ["proof (prove)\nusing this:\n  indep X\n  ?x \\<in> carrier - X \\<Longrightarrow> \\<not> indep (insert ?x X)\n\ngoal (1 subgoal):\n 1. basis X", "unfolding basis_def"], ["proof (prove)\nusing this:\n  indep X\n  ?x \\<in> carrier - X \\<Longrightarrow> \\<not> indep (insert ?x X)\n\ngoal (1 subgoal):\n 1. indep X \\<and> (\\<forall>x\\<in>carrier - X. \\<not> indep (insert x X))", "by auto"], ["", "lemma basis_indep: \"basis X \\<Longrightarrow> indep X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis X \\<Longrightarrow> indep X", "unfolding basis_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. indep X \\<and>\n    (\\<forall>x\\<in>carrier - X.\n        \\<not> indep (insert x X)) \\<Longrightarrow>\n    indep X", "by auto"], ["", "lemma basis_max_indep: \"basis X \\<Longrightarrow> x \\<in> carrier - X \\<Longrightarrow> \\<not> indep (insert x X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>basis X; x \\<in> carrier - X\\<rbrakk>\n    \\<Longrightarrow> \\<not> indep (insert x X)", "unfolding basis_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>indep X \\<and>\n             (\\<forall>x\\<in>carrier - X. \\<not> indep (insert x X));\n     x \\<in> carrier - X\\<rbrakk>\n    \\<Longrightarrow> \\<not> indep (insert x X)", "by auto"], ["", "lemmas basisD = basis_indep basis_max_indep"], ["", "lemmas basis_subset_carrier = indep_subset_carrier[OF basis_indep]"], ["", "lemmas basis_finite [simp] = indep_finite[OF basis_indep]"], ["", "lemma indep_not_basis:\n  assumes \"indep X\"\n  assumes \"\\<not> basis X\"\n  shows \"\\<exists>x \\<in> carrier - X. indep (insert x X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>carrier - X. indep (insert x X)", "using assms basisI"], ["proof (prove)\nusing this:\n  indep X\n  \\<not> basis X\n  \\<lbrakk>indep ?X;\n   \\<And>x.\n      x \\<in> carrier - ?X \\<Longrightarrow>\n      \\<not> indep (insert x ?X)\\<rbrakk>\n  \\<Longrightarrow> basis ?X\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>carrier - X. indep (insert x X)", "by auto"], ["", "lemma basis_subset_eq:\n  assumes \"basis B\\<^sub>1\"\n  assumes \"basis B\\<^sub>2\"\n  assumes \"B\\<^sub>1 \\<subseteq> B\\<^sub>2\"\n  shows \"B\\<^sub>1 = B\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B\\<^sub>1 = B\\<^sub>2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>1 \\<noteq> B\\<^sub>2 \\<Longrightarrow> False", "assume \"B\\<^sub>1 \\<noteq> B\\<^sub>2\""], ["proof (state)\nthis:\n  B\\<^sub>1 \\<noteq> B\\<^sub>2\n\ngoal (1 subgoal):\n 1. B\\<^sub>1 \\<noteq> B\\<^sub>2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  B\\<^sub>1 \\<noteq> B\\<^sub>2", "obtain x where x: \"x \\<in> B\\<^sub>2 - B\\<^sub>1\""], ["proof (prove)\nusing this:\n  B\\<^sub>1 \\<noteq> B\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> B\\<^sub>2 - B\\<^sub>1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  B\\<^sub>1 \\<noteq> B\\<^sub>2\n  basis B\\<^sub>1\n  basis B\\<^sub>2\n  B\\<^sub>1 \\<subseteq> B\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> B\\<^sub>2 - B\\<^sub>1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> B\\<^sub>2 - B\\<^sub>1\n\ngoal (1 subgoal):\n 1. B\\<^sub>1 \\<noteq> B\\<^sub>2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<in> B\\<^sub>2 - B\\<^sub>1", "have \"insert x B\\<^sub>1 \\<subseteq> B\\<^sub>2\""], ["proof (prove)\nusing this:\n  x \\<in> B\\<^sub>2 - B\\<^sub>1\n\ngoal (1 subgoal):\n 1. insert x B\\<^sub>1 \\<subseteq> B\\<^sub>2", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> B\\<^sub>2 - B\\<^sub>1\n  basis B\\<^sub>1\n  basis B\\<^sub>2\n  B\\<^sub>1 \\<subseteq> B\\<^sub>2\n\ngoal (1 subgoal):\n 1. insert x B\\<^sub>1 \\<subseteq> B\\<^sub>2", "by auto"], ["proof (state)\nthis:\n  insert x B\\<^sub>1 \\<subseteq> B\\<^sub>2\n\ngoal (1 subgoal):\n 1. B\\<^sub>1 \\<noteq> B\\<^sub>2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  insert x B\\<^sub>1 \\<subseteq> B\\<^sub>2", "have \"indep (insert x B\\<^sub>1)\""], ["proof (prove)\nusing this:\n  insert x B\\<^sub>1 \\<subseteq> B\\<^sub>2\n\ngoal (1 subgoal):\n 1. indep (insert x B\\<^sub>1)", "using assms basis_indep[of B\\<^sub>2] indep_subset"], ["proof (prove)\nusing this:\n  insert x B\\<^sub>1 \\<subseteq> B\\<^sub>2\n  basis B\\<^sub>1\n  basis B\\<^sub>2\n  B\\<^sub>1 \\<subseteq> B\\<^sub>2\n  basis B\\<^sub>2 \\<Longrightarrow> indep B\\<^sub>2\n  \\<lbrakk>indep ?X; ?Y \\<subseteq> ?X\\<rbrakk> \\<Longrightarrow> indep ?Y\n\ngoal (1 subgoal):\n 1. indep (insert x B\\<^sub>1)", "by auto"], ["proof (state)\nthis:\n  indep (insert x B\\<^sub>1)\n\ngoal (1 subgoal):\n 1. B\\<^sub>1 \\<noteq> B\\<^sub>2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  indep (insert x B\\<^sub>1)\n\ngoal (1 subgoal):\n 1. B\\<^sub>1 \\<noteq> B\\<^sub>2 \\<Longrightarrow> False", "have \"x \\<in> carrier - B\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> carrier - B\\<^sub>1", "using assms x basis_subset_carrier"], ["proof (prove)\nusing this:\n  basis B\\<^sub>1\n  basis B\\<^sub>2\n  B\\<^sub>1 \\<subseteq> B\\<^sub>2\n  x \\<in> B\\<^sub>2 - B\\<^sub>1\n  basis ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. x \\<in> carrier - B\\<^sub>1", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier - B\\<^sub>1\n\ngoal (1 subgoal):\n 1. B\\<^sub>1 \\<noteq> B\\<^sub>2 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  indep (insert x B\\<^sub>1)\n  x \\<in> carrier - B\\<^sub>1", "show False"], ["proof (prove)\nusing this:\n  indep (insert x B\\<^sub>1)\n  x \\<in> carrier - B\\<^sub>1\n\ngoal (1 subgoal):\n 1. False", "using assms basisD"], ["proof (prove)\nusing this:\n  indep (insert x B\\<^sub>1)\n  x \\<in> carrier - B\\<^sub>1\n  basis B\\<^sub>1\n  basis B\\<^sub>2\n  B\\<^sub>1 \\<subseteq> B\\<^sub>2\n  basis ?X \\<Longrightarrow> indep ?X\n  \\<lbrakk>basis ?X; ?x \\<in> carrier - ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep (insert ?x ?X)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "definition basis_in where\n  \"basis_in \\<E> X \\<longleftrightarrow> indep_system.basis \\<E> (indep_in \\<E>) X\""], ["", "lemma basis_iff_basis_in: \"basis B \\<longleftrightarrow> basis_in carrier B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis B = basis_in carrier B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. basis B = basis_in carrier B", "interpret \\<E>: indep_system carrier \"indep_in carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_system carrier (indep_in carrier)", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. basis B = basis_in carrier B", "show \"basis B \\<longleftrightarrow> basis_in carrier B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis B = basis_in carrier B", "unfolding basis_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. basis B = \\<E>.basis B", "proof (standard, goal_cases LTR RTL)"], ["proof (state)\ngoal (2 subgoals):\n 1. basis B \\<Longrightarrow> \\<E>.basis B\n 2. \\<E>.basis B \\<Longrightarrow> basis B", "case LTR"], ["proof (state)\nthis:\n  basis B\n\ngoal (2 subgoals):\n 1. basis B \\<Longrightarrow> \\<E>.basis B\n 2. \\<E>.basis B \\<Longrightarrow> basis B", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.basis B", "proof (rule \\<E>.basisI)"], ["proof (state)\ngoal (2 subgoals):\n 1. indep_in carrier B\n 2. \\<And>x.\n       x \\<in> carrier - B \\<Longrightarrow>\n       \\<not> indep_in carrier (insert x B)", "show \"indep_in carrier B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in carrier B", "using LTR basisD indep_subset_carrier indep_inI"], ["proof (prove)\nusing this:\n  basis B\n  basis ?X \\<Longrightarrow> indep ?X\n  \\<lbrakk>basis ?X; ?x \\<in> carrier - ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep (insert ?x ?X)\n  indep ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n  \\<lbrakk>?X \\<subseteq> ?\\<E>; indep ?X\\<rbrakk>\n  \\<Longrightarrow> indep_in ?\\<E> ?X\n\ngoal (1 subgoal):\n 1. indep_in carrier B", "by auto"], ["proof (state)\nthis:\n  indep_in carrier B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier - B \\<Longrightarrow>\n       \\<not> indep_in carrier (insert x B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier - B \\<Longrightarrow>\n       \\<not> indep_in carrier (insert x B)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier - B \\<Longrightarrow>\n       \\<not> indep_in carrier (insert x B)", "assume \"x \\<in> carrier - B\""], ["proof (state)\nthis:\n  x \\<in> carrier - B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier - B \\<Longrightarrow>\n       \\<not> indep_in carrier (insert x B)", "then"], ["proof (chain)\npicking this:\n  x \\<in> carrier - B", "have \"\\<not> indep (insert x B)\""], ["proof (prove)\nusing this:\n  x \\<in> carrier - B\n\ngoal (1 subgoal):\n 1. \\<not> indep (insert x B)", "using LTR basisD"], ["proof (prove)\nusing this:\n  x \\<in> carrier - B\n  basis B\n  basis ?X \\<Longrightarrow> indep ?X\n  \\<lbrakk>basis ?X; ?x \\<in> carrier - ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep (insert ?x ?X)\n\ngoal (1 subgoal):\n 1. \\<not> indep (insert x B)", "by auto"], ["proof (state)\nthis:\n  \\<not> indep (insert x B)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier - B \\<Longrightarrow>\n       \\<not> indep_in carrier (insert x B)", "then"], ["proof (chain)\npicking this:\n  \\<not> indep (insert x B)", "show \"\\<not> indep_in carrier (insert x B)\""], ["proof (prove)\nusing this:\n  \\<not> indep (insert x B)\n\ngoal (1 subgoal):\n 1. \\<not> indep_in carrier (insert x B)", "using indep_inD"], ["proof (prove)\nusing this:\n  \\<not> indep (insert x B)\n  indep_in ?\\<E> ?X \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n  indep_in ?\\<E> ?X \\<Longrightarrow> indep ?X\n\ngoal (1 subgoal):\n 1. \\<not> indep_in carrier (insert x B)", "by auto"], ["proof (state)\nthis:\n  \\<not> indep_in carrier (insert x B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<E>.basis B\n\ngoal (1 subgoal):\n 1. \\<E>.basis B \\<Longrightarrow> basis B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<E>.basis B \\<Longrightarrow> basis B", "case RTL"], ["proof (state)\nthis:\n  \\<E>.basis B\n\ngoal (1 subgoal):\n 1. \\<E>.basis B \\<Longrightarrow> basis B", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. basis B", "proof (rule basisI)"], ["proof (state)\ngoal (2 subgoals):\n 1. indep B\n 2. \\<And>x. x \\<in> carrier - B \\<Longrightarrow> \\<not> indep (insert x B)", "show \"indep B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep B", "using RTL \\<E>.basis_indep indep_inD"], ["proof (prove)\nusing this:\n  \\<E>.basis B\n  \\<E>.basis ?X \\<Longrightarrow> indep_in carrier ?X\n  indep_in ?\\<E> ?X \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n  indep_in ?\\<E> ?X \\<Longrightarrow> indep ?X\n\ngoal (1 subgoal):\n 1. indep B", "by blast"], ["proof (state)\nthis:\n  indep B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier - B \\<Longrightarrow> \\<not> indep (insert x B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier - B \\<Longrightarrow> \\<not> indep (insert x B)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier - B \\<Longrightarrow> \\<not> indep (insert x B)", "assume \"x \\<in> carrier - B\""], ["proof (state)\nthis:\n  x \\<in> carrier - B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier - B \\<Longrightarrow> \\<not> indep (insert x B)", "then"], ["proof (chain)\npicking this:\n  x \\<in> carrier - B", "have \"\\<not> indep_in carrier (insert x B)\""], ["proof (prove)\nusing this:\n  x \\<in> carrier - B\n\ngoal (1 subgoal):\n 1. \\<not> indep_in carrier (insert x B)", "using RTL \\<E>.basisD"], ["proof (prove)\nusing this:\n  x \\<in> carrier - B\n  \\<E>.basis B\n  \\<E>.basis ?X \\<Longrightarrow> indep_in carrier ?X\n  \\<lbrakk>\\<E>.basis ?X; ?x \\<in> carrier - ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep_in carrier (insert ?x ?X)\n\ngoal (1 subgoal):\n 1. \\<not> indep_in carrier (insert x B)", "by auto"], ["proof (state)\nthis:\n  \\<not> indep_in carrier (insert x B)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier - B \\<Longrightarrow> \\<not> indep (insert x B)", "then"], ["proof (chain)\npicking this:\n  \\<not> indep_in carrier (insert x B)", "show \"\\<not> indep (insert x B)\""], ["proof (prove)\nusing this:\n  \\<not> indep_in carrier (insert x B)\n\ngoal (1 subgoal):\n 1. \\<not> indep (insert x B)", "using indep_subset_carrier indep_inI"], ["proof (prove)\nusing this:\n  \\<not> indep_in carrier (insert x B)\n  indep ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n  \\<lbrakk>?X \\<subseteq> ?\\<E>; indep ?X\\<rbrakk>\n  \\<Longrightarrow> indep_in ?\\<E> ?X\n\ngoal (1 subgoal):\n 1. \\<not> indep (insert x B)", "by blast"], ["proof (state)\nthis:\n  \\<not> indep (insert x B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  basis B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  basis B = basis_in carrier B\n\ngoal:\nNo subgoals!", "qed"], ["", "context\n  fixes \\<E>\n  assumes \"\\<E> \\<subseteq> carrier\"\nbegin"], ["", "interpretation \\<E>: indep_system \\<E> \"indep_in \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "using \\<open>\\<E> \\<subseteq> carrier\\<close>"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "by auto"], ["", "lemma basis_inI_aux: \"\\<E>.basis X \\<Longrightarrow> basis_in \\<E> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.basis X \\<Longrightarrow> basis_in \\<E> X", "unfolding basis_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.basis X \\<Longrightarrow> \\<E>.basis X", "by auto"], ["", "lemma basis_inD_aux: \"basis_in \\<E> X \\<Longrightarrow> \\<E>.basis X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis_in \\<E> X \\<Longrightarrow> \\<E>.basis X", "unfolding basis_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.basis X \\<Longrightarrow> \\<E>.basis X", "by auto"], ["", "lemma not_basis_inD_aux: \"\\<not> basis_in \\<E> X \\<Longrightarrow> \\<not> \\<E>.basis X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> basis_in \\<E> X \\<Longrightarrow> \\<not> \\<E>.basis X", "using basis_inI_aux"], ["proof (prove)\nusing this:\n  \\<E>.basis ?X \\<Longrightarrow> basis_in \\<E> ?X\n\ngoal (1 subgoal):\n 1. \\<not> basis_in \\<E> X \\<Longrightarrow> \\<not> \\<E>.basis X", "by auto"], ["", "lemmas basis_inI = basis_inI_aux[OF \\<E>.basisI]"], ["", "lemmas basis_in_indep_in = \\<E>.basis_indep[OF basis_inD_aux]"], ["", "lemmas basis_in_max_indep_in = \\<E>.basis_max_indep[OF basis_inD_aux]"], ["", "lemmas basis_inD = \\<E>.basisD[OF basis_inD_aux]"], ["", "lemmas basis_in_subset_carrier = \\<E>.basis_subset_carrier[OF basis_inD_aux]"], ["", "lemmas basis_in_finite = \\<E>.basis_finite[OF basis_inD_aux]"], ["", "lemmas indep_in_not_basis_in = \\<E>.indep_not_basis[OF _ not_basis_inD_aux]"], ["", "lemmas basis_in_subset_eq = \\<E>.basis_subset_eq[OF basis_inD_aux basis_inD_aux]"], ["", "end"], ["", "context\n  fixes \\<E>\n  assumes *: \"\\<E> \\<subseteq> carrier\"\nbegin"], ["", "interpretation \\<E>: indep_system \\<E> \"indep_in \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "using *"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "by auto"], ["", "lemma basis_in_sub_cong:\n  assumes \"\\<E>' \\<subseteq> \\<E>\"\n  shows \"\\<E>.basis_in \\<E>' B \\<longleftrightarrow> basis_in \\<E>' B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.basis_in \\<E>' B = basis_in \\<E>' B", "proof (safe, goal_cases LTR RTL)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<E>.basis_in \\<E>' B \\<Longrightarrow> basis_in \\<E>' B\n 2. basis_in \\<E>' B \\<Longrightarrow> \\<E>.basis_in \\<E>' B", "case LTR"], ["proof (state)\nthis:\n  \\<E>.basis_in \\<E>' B\n\ngoal (2 subgoals):\n 1. \\<E>.basis_in \\<E>' B \\<Longrightarrow> basis_in \\<E>' B\n 2. basis_in \\<E>' B \\<Longrightarrow> \\<E>.basis_in \\<E>' B", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. basis_in \\<E>' B", "proof (rule basis_inI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<E>' \\<subseteq> carrier\n 2. indep_in \\<E>' B\n 3. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> indep_in \\<E>' (insert x B)", "show \"\\<E>' \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>' \\<subseteq> carrier", "using assms *"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<E>' \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  \\<E>' \\<subseteq> carrier\n\ngoal (2 subgoals):\n 1. indep_in \\<E>' B\n 2. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> indep_in \\<E>' (insert x B)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. indep_in \\<E>' B\n 2. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> indep_in \\<E>' (insert x B)", "show \"indep_in \\<E>' B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in \\<E>' B", "using * assms LTR \\<E>.basis_in_subset_carrier \\<E>.basis_in_indep_in indep_in_sub_cong"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n  \\<E>' \\<subseteq> \\<E>\n  \\<E>.basis_in \\<E>' B\n  \\<lbrakk>?\\<E> \\<subseteq> \\<E>; \\<E>.basis_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n  \\<lbrakk>?\\<E> \\<subseteq> \\<E>; \\<E>.basis_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> \\<E>.indep_in ?\\<E> ?X\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; ?\\<E>' \\<subseteq> ?\\<E>\\<rbrakk>\n  \\<Longrightarrow> indep_system.indep_in (indep_in ?\\<E>) ?\\<E>' ?X =\n                    indep_in ?\\<E>' ?X\n\ngoal (1 subgoal):\n 1. indep_in \\<E>' B", "by auto"], ["proof (state)\nthis:\n  indep_in \\<E>' B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> indep_in \\<E>' (insert x B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> indep_in \\<E>' (insert x B)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> indep_in \\<E>' (insert x B)", "assume \"x \\<in> \\<E>' - B\""], ["proof (state)\nthis:\n  x \\<in> \\<E>' - B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> indep_in \\<E>' (insert x B)", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<E>' - B", "show \"\\<not> indep_in \\<E>' (insert x B)\""], ["proof (prove)\nusing this:\n  x \\<in> \\<E>' - B\n\ngoal (1 subgoal):\n 1. \\<not> indep_in \\<E>' (insert x B)", "using * assms LTR \\<E>.basis_in_max_indep_in \\<E>.basis_in_subset_carrier indep_in_sub_cong"], ["proof (prove)\nusing this:\n  x \\<in> \\<E>' - B\n  \\<E> \\<subseteq> carrier\n  \\<E>' \\<subseteq> \\<E>\n  \\<E>.basis_in \\<E>' B\n  \\<lbrakk>?\\<E> \\<subseteq> \\<E>; \\<E>.basis_in ?\\<E> ?X;\n   ?x \\<in> ?\\<E> - ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> \\<E>.indep_in ?\\<E> (insert ?x ?X)\n  \\<lbrakk>?\\<E> \\<subseteq> \\<E>; \\<E>.basis_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; ?\\<E>' \\<subseteq> ?\\<E>\\<rbrakk>\n  \\<Longrightarrow> indep_system.indep_in (indep_in ?\\<E>) ?\\<E>' ?X =\n                    indep_in ?\\<E>' ?X\n\ngoal (1 subgoal):\n 1. \\<not> indep_in \\<E>' (insert x B)", "by auto"], ["proof (state)\nthis:\n  \\<not> indep_in \\<E>' (insert x B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  basis_in \\<E>' B\n\ngoal (1 subgoal):\n 1. basis_in \\<E>' B \\<Longrightarrow> \\<E>.basis_in \\<E>' B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. basis_in \\<E>' B \\<Longrightarrow> \\<E>.basis_in \\<E>' B", "case RTL"], ["proof (state)\nthis:\n  basis_in \\<E>' B\n\ngoal (1 subgoal):\n 1. basis_in \\<E>' B \\<Longrightarrow> \\<E>.basis_in \\<E>' B", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.basis_in \\<E>' B", "proof (rule \\<E>.basis_inI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<E>' \\<subseteq> \\<E>\n 2. \\<E>.indep_in \\<E>' B\n 3. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> \\<E>.indep_in \\<E>' (insert x B)", "show \"\\<E>' \\<subseteq> \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>' \\<subseteq> \\<E>", "using assms"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n\ngoal (1 subgoal):\n 1. \\<E>' \\<subseteq> \\<E>", "by auto"], ["proof (state)\nthis:\n  \\<E>' \\<subseteq> \\<E>\n\ngoal (2 subgoals):\n 1. \\<E>.indep_in \\<E>' B\n 2. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> \\<E>.indep_in \\<E>' (insert x B)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<E>.indep_in \\<E>' B\n 2. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> \\<E>.indep_in \\<E>' (insert x B)", "show \"\\<E>.indep_in \\<E>' B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.indep_in \\<E>' B", "using * assms RTL basis_in_subset_carrier basis_in_indep_in indep_in_sub_cong"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n  \\<E>' \\<subseteq> \\<E>\n  basis_in \\<E>' B\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> indep_in ?\\<E> ?X\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; ?\\<E>' \\<subseteq> ?\\<E>\\<rbrakk>\n  \\<Longrightarrow> indep_system.indep_in (indep_in ?\\<E>) ?\\<E>' ?X =\n                    indep_in ?\\<E>' ?X\n\ngoal (1 subgoal):\n 1. \\<E>.indep_in \\<E>' B", "by auto"], ["proof (state)\nthis:\n  \\<E>.indep_in \\<E>' B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> \\<E>.indep_in \\<E>' (insert x B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> \\<E>.indep_in \\<E>' (insert x B)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> \\<E>.indep_in \\<E>' (insert x B)", "assume \"x \\<in> \\<E>' - B\""], ["proof (state)\nthis:\n  x \\<in> \\<E>' - B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> \\<E>.indep_in \\<E>' (insert x B)", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<E>' - B", "show \"\\<not> \\<E>.indep_in \\<E>' (insert x B)\""], ["proof (prove)\nusing this:\n  x \\<in> \\<E>' - B\n\ngoal (1 subgoal):\n 1. \\<not> \\<E>.indep_in \\<E>' (insert x B)", "using * assms RTL basis_in_max_indep_in basis_in_subset_carrier indep_in_sub_cong"], ["proof (prove)\nusing this:\n  x \\<in> \\<E>' - B\n  \\<E> \\<subseteq> carrier\n  \\<E>' \\<subseteq> \\<E>\n  basis_in \\<E>' B\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?X;\n   ?x \\<in> ?\\<E> - ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep_in ?\\<E> (insert ?x ?X)\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; ?\\<E>' \\<subseteq> ?\\<E>\\<rbrakk>\n  \\<Longrightarrow> indep_system.indep_in (indep_in ?\\<E>) ?\\<E>' ?X =\n                    indep_in ?\\<E>' ?X\n\ngoal (1 subgoal):\n 1. \\<not> \\<E>.indep_in \\<E>' (insert x B)", "by auto"], ["proof (state)\nthis:\n  \\<not> \\<E>.indep_in \\<E>' (insert x B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<E>.basis_in \\<E>' B\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Circuits\\<close>"], ["", "text \\<open>\n  A \\emph{circuit} is a minimal dependent set, i.\\,e.\\ a set which becomes independent on removing\n  any element of the ground set.\n\\<close>"], ["", "definition circuit where \"circuit X \\<longleftrightarrow> X \\<subseteq> carrier \\<and> \\<not> indep X \\<and> (\\<forall>x \\<in> X. indep (X - {x}))\""], ["", "lemma circuitI:\n  assumes \"X \\<subseteq> carrier\"\n  assumes \"\\<not> indep X\"\n  assumes \"\\<And>x. x \\<in> X \\<Longrightarrow> indep (X - {x})\"\n  shows \"circuit X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circuit X", "using assms"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  \\<not> indep X\n  ?x \\<in> X \\<Longrightarrow> indep (X - {?x})\n\ngoal (1 subgoal):\n 1. circuit X", "unfolding circuit_def"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  \\<not> indep X\n  ?x \\<in> X \\<Longrightarrow> indep (X - {?x})\n\ngoal (1 subgoal):\n 1. X \\<subseteq> carrier \\<and>\n    \\<not> indep X \\<and> (\\<forall>x\\<in>X. indep (X - {x}))", "by auto"], ["", "lemma circuit_subset_carrier: \"circuit X \\<Longrightarrow> X \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circuit X \\<Longrightarrow> X \\<subseteq> carrier", "unfolding circuit_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> carrier \\<and>\n    \\<not> indep X \\<and>\n    (\\<forall>x\\<in>X. indep (X - {x})) \\<Longrightarrow>\n    X \\<subseteq> carrier", "by auto"], ["", "lemmas circuit_finite [simp] = finite_subset[OF circuit_subset_carrier carrier_finite]"], ["", "lemma circuit_dep: \"circuit X \\<Longrightarrow> \\<not> indep X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circuit X \\<Longrightarrow> \\<not> indep X", "unfolding circuit_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> carrier \\<and>\n    \\<not> indep X \\<and>\n    (\\<forall>x\\<in>X. indep (X - {x})) \\<Longrightarrow>\n    \\<not> indep X", "by auto"], ["", "lemma circuit_min_dep: \"circuit X \\<Longrightarrow> x \\<in> X \\<Longrightarrow> indep (X - {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>circuit X; x \\<in> X\\<rbrakk> \\<Longrightarrow> indep (X - {x})", "unfolding circuit_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<subseteq> carrier \\<and>\n             \\<not> indep X \\<and> (\\<forall>x\\<in>X. indep (X - {x}));\n     x \\<in> X\\<rbrakk>\n    \\<Longrightarrow> indep (X - {x})", "by auto"], ["", "lemmas circuitD = circuit_subset_carrier circuit_dep circuit_min_dep"], ["", "lemma circuit_nonempty: \"circuit X \\<Longrightarrow> X \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circuit X \\<Longrightarrow> X \\<noteq> {}", "using circuit_dep indep_empty"], ["proof (prove)\nusing this:\n  circuit ?X \\<Longrightarrow> \\<not> indep ?X\n  indep {}\n\ngoal (1 subgoal):\n 1. circuit X \\<Longrightarrow> X \\<noteq> {}", "by blast"], ["", "lemma dep_not_circuit:\n  assumes \"X \\<subseteq> carrier\"\n  assumes \"\\<not> indep X\"\n  assumes \"\\<not> circuit X\"\n  shows \"\\<exists>x \\<in> X. \\<not> indep (X - {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X. \\<not> indep (X - {x})", "using assms circuitI"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  \\<not> indep X\n  \\<not> circuit X\n  \\<lbrakk>?X \\<subseteq> carrier; \\<not> indep ?X;\n   \\<And>x. x \\<in> ?X \\<Longrightarrow> indep (?X - {x})\\<rbrakk>\n  \\<Longrightarrow> circuit ?X\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X. \\<not> indep (X - {x})", "by auto"], ["", "lemma circuit_subset_eq:\n  assumes \"circuit C\\<^sub>1\"\n  assumes \"circuit C\\<^sub>2\"\n  assumes \"C\\<^sub>1 \\<subseteq> C\\<^sub>2\"\n  shows \"C\\<^sub>1 = C\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C\\<^sub>1 = C\\<^sub>2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. C\\<^sub>1 \\<noteq> C\\<^sub>2 \\<Longrightarrow> False", "assume \"C\\<^sub>1 \\<noteq> C\\<^sub>2\""], ["proof (state)\nthis:\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n\ngoal (1 subgoal):\n 1. C\\<^sub>1 \\<noteq> C\\<^sub>2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  C\\<^sub>1 \\<noteq> C\\<^sub>2", "obtain x where \"x \\<notin> C\\<^sub>1\" \"x \\<in> C\\<^sub>2\""], ["proof (prove)\nusing this:\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<notin> C\\<^sub>1; x \\<in> C\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<subseteq> C\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<notin> C\\<^sub>1; x \\<in> C\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<notin> C\\<^sub>1\n  x \\<in> C\\<^sub>2\n\ngoal (1 subgoal):\n 1. C\\<^sub>1 \\<noteq> C\\<^sub>2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<notin> C\\<^sub>1\n  x \\<in> C\\<^sub>2", "have \"indep C\\<^sub>1\""], ["proof (prove)\nusing this:\n  x \\<notin> C\\<^sub>1\n  x \\<in> C\\<^sub>2\n\ngoal (1 subgoal):\n 1. indep C\\<^sub>1", "using indep_subset \\<open>C\\<^sub>1 \\<subseteq> C\\<^sub>2\\<close> circuit_min_dep[OF \\<open>circuit C\\<^sub>2\\<close>, of x]"], ["proof (prove)\nusing this:\n  x \\<notin> C\\<^sub>1\n  x \\<in> C\\<^sub>2\n  \\<lbrakk>indep ?X; ?Y \\<subseteq> ?X\\<rbrakk> \\<Longrightarrow> indep ?Y\n  C\\<^sub>1 \\<subseteq> C\\<^sub>2\n  x \\<in> C\\<^sub>2 \\<Longrightarrow> indep (C\\<^sub>2 - {x})\n\ngoal (1 subgoal):\n 1. indep C\\<^sub>1", "by auto"], ["proof (state)\nthis:\n  indep C\\<^sub>1\n\ngoal (1 subgoal):\n 1. C\\<^sub>1 \\<noteq> C\\<^sub>2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  indep C\\<^sub>1", "show False"], ["proof (prove)\nusing this:\n  indep C\\<^sub>1\n\ngoal (1 subgoal):\n 1. False", "using assms circuitD"], ["proof (prove)\nusing this:\n  indep C\\<^sub>1\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<subseteq> C\\<^sub>2\n  circuit ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n  circuit ?X \\<Longrightarrow> \\<not> indep ?X\n  \\<lbrakk>circuit ?X; ?x \\<in> ?X\\<rbrakk>\n  \\<Longrightarrow> indep (?X - {?x})\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "definition circuit_in where\n  \"circuit_in \\<E> X \\<longleftrightarrow> indep_system.circuit \\<E> (indep_in \\<E>) X\""], ["", "context\n  fixes \\<E>\n  assumes \"\\<E> \\<subseteq> carrier\"\nbegin"], ["", "interpretation \\<E>: indep_system \\<E> \"indep_in \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "using \\<open>\\<E> \\<subseteq> carrier\\<close>"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "by auto"], ["", "lemma circuit_inI_aux: \"\\<E>.circuit X \\<Longrightarrow> circuit_in \\<E> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.circuit X \\<Longrightarrow> circuit_in \\<E> X", "unfolding circuit_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.circuit X \\<Longrightarrow> \\<E>.circuit X", "by auto"], ["", "lemma circuit_inD_aux: \"circuit_in \\<E> X \\<Longrightarrow> \\<E>.circuit X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circuit_in \\<E> X \\<Longrightarrow> \\<E>.circuit X", "unfolding circuit_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.circuit X \\<Longrightarrow> \\<E>.circuit X", "by auto"], ["", "lemma not_circuit_inD_aux: \"\\<not> circuit_in \\<E> X \\<Longrightarrow> \\<not> \\<E>.circuit X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> circuit_in \\<E> X \\<Longrightarrow> \\<not> \\<E>.circuit X", "using circuit_inI_aux"], ["proof (prove)\nusing this:\n  \\<E>.circuit ?X \\<Longrightarrow> circuit_in \\<E> ?X\n\ngoal (1 subgoal):\n 1. \\<not> circuit_in \\<E> X \\<Longrightarrow> \\<not> \\<E>.circuit X", "by auto"], ["", "lemmas circuit_inI = circuit_inI_aux[OF \\<E>.circuitI]"], ["", "lemmas circuit_in_subset_carrier = \\<E>.circuit_subset_carrier[OF circuit_inD_aux]"], ["", "lemmas circuit_in_finite = \\<E>.circuit_finite[OF circuit_inD_aux]"], ["", "lemmas circuit_in_dep_in = \\<E>.circuit_dep[OF circuit_inD_aux]"], ["", "lemmas circuit_in_min_dep_in = \\<E>.circuit_min_dep[OF circuit_inD_aux]"], ["", "lemmas circuit_inD = \\<E>.circuitD[OF circuit_inD_aux]"], ["", "lemmas circuit_in_nonempty = \\<E>.circuit_nonempty[OF circuit_inD_aux]"], ["", "lemmas dep_in_not_circuit_in = \\<E>.dep_not_circuit[OF _ _ not_circuit_inD_aux]"], ["", "lemmas circuit_in_subset_eq = \\<E>.circuit_subset_eq[OF circuit_inD_aux circuit_inD_aux]"], ["", "end"], ["", "lemma circuit_in_subI:\n  assumes \"\\<E>' \\<subseteq> \\<E>\" \"\\<E> \\<subseteq> carrier\"\n  assumes \"circuit_in \\<E>' C\"\n  shows \"circuit_in \\<E> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circuit_in \\<E> C", "proof (rule circuit_inI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<E> \\<subseteq> carrier\n 2. C \\<subseteq> \\<E>\n 3. \\<not> indep_in \\<E> C\n 4. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E> (C - {x})", "show \"\\<E> \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E> \\<subseteq> carrier", "using assms"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  circuit_in \\<E>' C\n\ngoal (1 subgoal):\n 1. \\<E> \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  \\<E> \\<subseteq> carrier\n\ngoal (3 subgoals):\n 1. C \\<subseteq> \\<E>\n 2. \\<not> indep_in \\<E> C\n 3. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E> (C - {x})", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. C \\<subseteq> \\<E>\n 2. \\<not> indep_in \\<E> C\n 3. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E> (C - {x})", "show \"C \\<subseteq> \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<subseteq> \\<E>", "using assms circuit_in_subset_carrier[of \\<E>' C]"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  circuit_in \\<E>' C\n  \\<lbrakk>\\<E>' \\<subseteq> carrier; circuit_in \\<E>' C\\<rbrakk>\n  \\<Longrightarrow> C \\<subseteq> \\<E>'\n\ngoal (1 subgoal):\n 1. C \\<subseteq> \\<E>", "by auto"], ["proof (state)\nthis:\n  C \\<subseteq> \\<E>\n\ngoal (2 subgoals):\n 1. \\<not> indep_in \\<E> C\n 2. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E> (C - {x})", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<not> indep_in \\<E> C\n 2. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E> (C - {x})", "show \"\\<not> indep_in \\<E> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> indep_in \\<E> C", "using assms\n      circuit_in_dep_in[where \\<E> = \\<E>' and X = C]\n      circuit_in_subset_carrier dep_in_subI[where \\<E>' = \\<E>' and \\<E> = \\<E>]"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  circuit_in \\<E>' C\n  \\<lbrakk>\\<E>' \\<subseteq> carrier; circuit_in \\<E>' C\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep_in \\<E>' C\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; circuit_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n  \\<lbrakk>?X \\<subseteq> \\<E>'; \\<not> indep_in \\<E>' ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep_in \\<E> ?X\n\ngoal (1 subgoal):\n 1. \\<not> indep_in \\<E> C", "by auto"], ["proof (state)\nthis:\n  \\<not> indep_in \\<E> C\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E> (C - {x})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E> (C - {x})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E> (C - {x})", "assume \"x \\<in> C\""], ["proof (state)\nthis:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E> (C - {x})", "then"], ["proof (chain)\npicking this:\n  x \\<in> C", "show \"indep_in \\<E> (C - {x})\""], ["proof (prove)\nusing this:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. indep_in \\<E> (C - {x})", "using assms circuit_in_min_dep_in indep_in_subI_subset"], ["proof (prove)\nusing this:\n  x \\<in> C\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  circuit_in \\<E>' C\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; circuit_in ?\\<E> ?X;\n   ?x \\<in> ?X\\<rbrakk>\n  \\<Longrightarrow> indep_in ?\\<E> (?X - {?x})\n  \\<lbrakk>?\\<E>' \\<subseteq> ?\\<E>; indep_in ?\\<E>' ?X\\<rbrakk>\n  \\<Longrightarrow> indep_in ?\\<E> ?X\n\ngoal (1 subgoal):\n 1. indep_in \\<E> (C - {x})", "by auto"], ["proof (state)\nthis:\n  indep_in \\<E> (C - {x})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma circuit_in_supI:\n  assumes \"\\<E>' \\<subseteq> \\<E>\" \"\\<E> \\<subseteq> carrier\" \"C \\<subseteq> \\<E>'\"\n  assumes \"circuit_in \\<E> C\"\n  shows \"circuit_in \\<E>' C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circuit_in \\<E>' C", "proof (rule circuit_inI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<E>' \\<subseteq> carrier\n 2. C \\<subseteq> \\<E>'\n 3. \\<not> indep_in \\<E>' C\n 4. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "show \"\\<E>' \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>' \\<subseteq> carrier", "using assms"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  C \\<subseteq> \\<E>'\n  circuit_in \\<E> C\n\ngoal (1 subgoal):\n 1. \\<E>' \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  \\<E>' \\<subseteq> carrier\n\ngoal (3 subgoals):\n 1. C \\<subseteq> \\<E>'\n 2. \\<not> indep_in \\<E>' C\n 3. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. C \\<subseteq> \\<E>'\n 2. \\<not> indep_in \\<E>' C\n 3. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "show \"C \\<subseteq> \\<E>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<subseteq> \\<E>'", "using assms"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  C \\<subseteq> \\<E>'\n  circuit_in \\<E> C\n\ngoal (1 subgoal):\n 1. C \\<subseteq> \\<E>'", "by auto"], ["proof (state)\nthis:\n  C \\<subseteq> \\<E>'\n\ngoal (2 subgoals):\n 1. \\<not> indep_in \\<E>' C\n 2. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<not> indep_in \\<E>' C\n 2. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "have \"\\<not> indep_in \\<E> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> indep_in \\<E> C", "using assms circuit_in_dep_in"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  C \\<subseteq> \\<E>'\n  circuit_in \\<E> C\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; circuit_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep_in ?\\<E> ?X\n\ngoal (1 subgoal):\n 1. \\<not> indep_in \\<E> C", "by auto"], ["proof (state)\nthis:\n  \\<not> indep_in \\<E> C\n\ngoal (2 subgoals):\n 1. \\<not> indep_in \\<E>' C\n 2. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "then"], ["proof (chain)\npicking this:\n  \\<not> indep_in \\<E> C", "show \"\\<not> indep_in \\<E>' C\""], ["proof (prove)\nusing this:\n  \\<not> indep_in \\<E> C\n\ngoal (1 subgoal):\n 1. \\<not> indep_in \\<E>' C", "using assms dep_in_subI[of C \\<E>]"], ["proof (prove)\nusing this:\n  \\<not> indep_in \\<E> C\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  C \\<subseteq> \\<E>'\n  circuit_in \\<E> C\n  \\<lbrakk>C \\<subseteq> \\<E>; \\<not> indep_in \\<E> C\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep_in ?\\<E> C\n\ngoal (1 subgoal):\n 1. \\<not> indep_in \\<E>' C", "by auto"], ["proof (state)\nthis:\n  \\<not> indep_in \\<E>' C\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "assume \"x \\<in> C\""], ["proof (state)\nthis:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "then"], ["proof (chain)\npicking this:\n  x \\<in> C", "have \"indep_in \\<E> (C - {x})\""], ["proof (prove)\nusing this:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. indep_in \\<E> (C - {x})", "using assms circuit_in_min_dep_in"], ["proof (prove)\nusing this:\n  x \\<in> C\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  C \\<subseteq> \\<E>'\n  circuit_in \\<E> C\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; circuit_in ?\\<E> ?X;\n   ?x \\<in> ?X\\<rbrakk>\n  \\<Longrightarrow> indep_in ?\\<E> (?X - {?x})\n\ngoal (1 subgoal):\n 1. indep_in \\<E> (C - {x})", "by auto"], ["proof (state)\nthis:\n  indep_in \\<E> (C - {x})\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "then"], ["proof (chain)\npicking this:\n  indep_in \\<E> (C - {x})", "have \"indep_in \\<E>' ((C - {x}) \\<inter> \\<E>')\""], ["proof (prove)\nusing this:\n  indep_in \\<E> (C - {x})\n\ngoal (1 subgoal):\n 1. indep_in \\<E>' ((C - {x}) \\<inter> \\<E>')", "using indep_in_subI"], ["proof (prove)\nusing this:\n  indep_in \\<E> (C - {x})\n  indep_in ?\\<E> ?X \\<Longrightarrow> indep_in ?\\<E>' (?X \\<inter> ?\\<E>')\n\ngoal (1 subgoal):\n 1. indep_in \\<E>' ((C - {x}) \\<inter> \\<E>')", "by auto"], ["proof (state)\nthis:\n  indep_in \\<E>' ((C - {x}) \\<inter> \\<E>')\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "moreover"], ["proof (state)\nthis:\n  indep_in \\<E>' ((C - {x}) \\<inter> \\<E>')\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "have \"(C - {x}) \\<inter> \\<E>' = C - {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C - {x}) \\<inter> \\<E>' = C - {x}", "using assms circuit_in_subset_carrier"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  C \\<subseteq> \\<E>'\n  circuit_in \\<E> C\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; circuit_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n\ngoal (1 subgoal):\n 1. (C - {x}) \\<inter> \\<E>' = C - {x}", "by auto"], ["proof (state)\nthis:\n  (C - {x}) \\<inter> \\<E>' = C - {x}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "ultimately"], ["proof (chain)\npicking this:\n  indep_in \\<E>' ((C - {x}) \\<inter> \\<E>')\n  (C - {x}) \\<inter> \\<E>' = C - {x}", "show \"indep_in \\<E>' (C - {x})\""], ["proof (prove)\nusing this:\n  indep_in \\<E>' ((C - {x}) \\<inter> \\<E>')\n  (C - {x}) \\<inter> \\<E>' = C - {x}\n\ngoal (1 subgoal):\n 1. indep_in \\<E>' (C - {x})", "by auto"], ["proof (state)\nthis:\n  indep_in \\<E>' (C - {x})\n\ngoal:\nNo subgoals!", "qed"], ["", "context\n  fixes \\<E>\n  assumes *: \"\\<E> \\<subseteq> carrier\"\nbegin"], ["", "interpretation \\<E>: indep_system \\<E> \"indep_in \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "using *"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "by auto"], ["", "lemma circuit_in_sub_cong:\n  assumes \"\\<E>' \\<subseteq> \\<E>\"\n  shows \"\\<E>.circuit_in \\<E>' C \\<longleftrightarrow> circuit_in \\<E>' C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.circuit_in \\<E>' C = circuit_in \\<E>' C", "proof (safe, goal_cases LTR RTL)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<E>.circuit_in \\<E>' C \\<Longrightarrow> circuit_in \\<E>' C\n 2. circuit_in \\<E>' C \\<Longrightarrow> \\<E>.circuit_in \\<E>' C", "case LTR"], ["proof (state)\nthis:\n  \\<E>.circuit_in \\<E>' C\n\ngoal (2 subgoals):\n 1. \\<E>.circuit_in \\<E>' C \\<Longrightarrow> circuit_in \\<E>' C\n 2. circuit_in \\<E>' C \\<Longrightarrow> \\<E>.circuit_in \\<E>' C", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. circuit_in \\<E>' C", "proof (rule circuit_inI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<E>' \\<subseteq> carrier\n 2. C \\<subseteq> \\<E>'\n 3. \\<not> indep_in \\<E>' C\n 4. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "show \"\\<E>' \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>' \\<subseteq> carrier", "using assms *"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<E>' \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  \\<E>' \\<subseteq> carrier\n\ngoal (3 subgoals):\n 1. C \\<subseteq> \\<E>'\n 2. \\<not> indep_in \\<E>' C\n 3. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. C \\<subseteq> \\<E>'\n 2. \\<not> indep_in \\<E>' C\n 3. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "show \"C \\<subseteq> \\<E>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<subseteq> \\<E>'", "using assms LTR \\<E>.circuit_in_subset_carrier"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E>.circuit_in \\<E>' C\n  \\<lbrakk>?\\<E> \\<subseteq> \\<E>; \\<E>.circuit_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n\ngoal (1 subgoal):\n 1. C \\<subseteq> \\<E>'", "by auto"], ["proof (state)\nthis:\n  C \\<subseteq> \\<E>'\n\ngoal (2 subgoals):\n 1. \\<not> indep_in \\<E>' C\n 2. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<not> indep_in \\<E>' C\n 2. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "show \"\\<not> indep_in \\<E>' C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> indep_in \\<E>' C", "using assms LTR \\<E>.circuit_in_dep_in indep_in_sub_cong[OF *]"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E>.circuit_in \\<E>' C\n  \\<lbrakk>?\\<E> \\<subseteq> \\<E>; \\<E>.circuit_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> \\<E>.indep_in ?\\<E> ?X\n  ?\\<E>' \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.indep_in ?\\<E>' ?X = indep_in ?\\<E>' ?X\n\ngoal (1 subgoal):\n 1. \\<not> indep_in \\<E>' C", "by auto"], ["proof (state)\nthis:\n  \\<not> indep_in \\<E>' C\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "assume \"x \\<in> C\""], ["proof (state)\nthis:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in \\<E>' (C - {x})", "then"], ["proof (chain)\npicking this:\n  x \\<in> C", "show \"indep_in \\<E>' (C - {x})\""], ["proof (prove)\nusing this:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. indep_in \\<E>' (C - {x})", "using assms LTR \\<E>.circuit_in_min_dep_in indep_in_sub_cong[OF *]"], ["proof (prove)\nusing this:\n  x \\<in> C\n  \\<E>' \\<subseteq> \\<E>\n  \\<E>.circuit_in \\<E>' C\n  \\<lbrakk>?\\<E> \\<subseteq> \\<E>; \\<E>.circuit_in ?\\<E> ?X;\n   ?x \\<in> ?X\\<rbrakk>\n  \\<Longrightarrow> \\<E>.indep_in ?\\<E> (?X - {?x})\n  ?\\<E>' \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.indep_in ?\\<E>' ?X = indep_in ?\\<E>' ?X\n\ngoal (1 subgoal):\n 1. indep_in \\<E>' (C - {x})", "by auto"], ["proof (state)\nthis:\n  indep_in \\<E>' (C - {x})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  circuit_in \\<E>' C\n\ngoal (1 subgoal):\n 1. circuit_in \\<E>' C \\<Longrightarrow> \\<E>.circuit_in \\<E>' C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. circuit_in \\<E>' C \\<Longrightarrow> \\<E>.circuit_in \\<E>' C", "case RTL"], ["proof (state)\nthis:\n  circuit_in \\<E>' C\n\ngoal (1 subgoal):\n 1. circuit_in \\<E>' C \\<Longrightarrow> \\<E>.circuit_in \\<E>' C", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.circuit_in \\<E>' C", "proof (rule \\<E>.circuit_inI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<E>' \\<subseteq> \\<E>\n 2. C \\<subseteq> \\<E>'\n 3. \\<not> \\<E>.indep_in \\<E>' C\n 4. \\<And>x. x \\<in> C \\<Longrightarrow> \\<E>.indep_in \\<E>' (C - {x})", "show \"\\<E>' \\<subseteq> \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>' \\<subseteq> \\<E>", "using assms *"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<E>' \\<subseteq> \\<E>", "by auto"], ["proof (state)\nthis:\n  \\<E>' \\<subseteq> \\<E>\n\ngoal (3 subgoals):\n 1. C \\<subseteq> \\<E>'\n 2. \\<not> \\<E>.indep_in \\<E>' C\n 3. \\<And>x. x \\<in> C \\<Longrightarrow> \\<E>.indep_in \\<E>' (C - {x})", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. C \\<subseteq> \\<E>'\n 2. \\<not> \\<E>.indep_in \\<E>' C\n 3. \\<And>x. x \\<in> C \\<Longrightarrow> \\<E>.indep_in \\<E>' (C - {x})", "show \"C \\<subseteq> \\<E>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<subseteq> \\<E>'", "using assms * RTL circuit_in_subset_carrier"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  circuit_in \\<E>' C\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; circuit_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n\ngoal (1 subgoal):\n 1. C \\<subseteq> \\<E>'", "by auto"], ["proof (state)\nthis:\n  C \\<subseteq> \\<E>'\n\ngoal (2 subgoals):\n 1. \\<not> \\<E>.indep_in \\<E>' C\n 2. \\<And>x. x \\<in> C \\<Longrightarrow> \\<E>.indep_in \\<E>' (C - {x})", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<not> \\<E>.indep_in \\<E>' C\n 2. \\<And>x. x \\<in> C \\<Longrightarrow> \\<E>.indep_in \\<E>' (C - {x})", "show \"\\<not> \\<E>.indep_in \\<E>' C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<E>.indep_in \\<E>' C", "using assms * RTL circuit_in_dep_in indep_in_sub_cong[OF *]"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  circuit_in \\<E>' C\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; circuit_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep_in ?\\<E> ?X\n  ?\\<E>' \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.indep_in ?\\<E>' ?X = indep_in ?\\<E>' ?X\n\ngoal (1 subgoal):\n 1. \\<not> \\<E>.indep_in \\<E>' C", "by auto"], ["proof (state)\nthis:\n  \\<not> \\<E>.indep_in \\<E>' C\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> \\<E>.indep_in \\<E>' (C - {x})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> \\<E>.indep_in \\<E>' (C - {x})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> \\<E>.indep_in \\<E>' (C - {x})", "assume \"x \\<in> C\""], ["proof (state)\nthis:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> \\<E>.indep_in \\<E>' (C - {x})", "then"], ["proof (chain)\npicking this:\n  x \\<in> C", "show \"\\<E>.indep_in \\<E>' (C - {x})\""], ["proof (prove)\nusing this:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. \\<E>.indep_in \\<E>' (C - {x})", "using assms * RTL circuit_in_min_dep_in indep_in_sub_cong[OF *]"], ["proof (prove)\nusing this:\n  x \\<in> C\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  circuit_in \\<E>' C\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; circuit_in ?\\<E> ?X;\n   ?x \\<in> ?X\\<rbrakk>\n  \\<Longrightarrow> indep_in ?\\<E> (?X - {?x})\n  ?\\<E>' \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.indep_in ?\\<E>' ?X = indep_in ?\\<E>' ?X\n\ngoal (1 subgoal):\n 1. \\<E>.indep_in \\<E>' (C - {x})", "by auto"], ["proof (state)\nthis:\n  \\<E>.indep_in \\<E>' (C - {x})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<E>.circuit_in \\<E>' C\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma circuit_imp_circuit_in:\n  assumes \"circuit C\"\n  shows \"circuit_in carrier C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circuit_in carrier C", "proof (rule circuit_inI)"], ["proof (state)\ngoal (4 subgoals):\n 1. carrier \\<subseteq> carrier\n 2. C \\<subseteq> carrier\n 3. \\<not> indep_in carrier C\n 4. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in carrier (C - {x})", "show \"C \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<subseteq> carrier", "using circuit_subset_carrier[OF assms]"], ["proof (prove)\nusing this:\n  C \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. C \\<subseteq> carrier", "."], ["proof (state)\nthis:\n  C \\<subseteq> carrier\n\ngoal (3 subgoals):\n 1. carrier \\<subseteq> carrier\n 2. \\<not> indep_in carrier C\n 3. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in carrier (C - {x})", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. carrier \\<subseteq> carrier\n 2. \\<not> indep_in carrier C\n 3. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in carrier (C - {x})", "show \"\\<not> indep_in carrier C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> indep_in carrier C", "using circuit_dep[OF assms] indep_in_indep"], ["proof (prove)\nusing this:\n  \\<not> indep C\n  indep_in ?\\<E> ?X \\<Longrightarrow> indep ?X\n\ngoal (1 subgoal):\n 1. \\<not> indep_in carrier C", "by auto"], ["proof (state)\nthis:\n  \\<not> indep_in carrier C\n\ngoal (2 subgoals):\n 1. carrier \\<subseteq> carrier\n 2. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in carrier (C - {x})", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. carrier \\<subseteq> carrier\n 2. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in carrier (C - {x})", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. carrier \\<subseteq> carrier\n 2. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in carrier (C - {x})", "assume \"x \\<in> C\""], ["proof (state)\nthis:\n  x \\<in> C\n\ngoal (2 subgoals):\n 1. carrier \\<subseteq> carrier\n 2. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in carrier (C - {x})", "then"], ["proof (chain)\npicking this:\n  x \\<in> C", "have \"indep (C - {x})\""], ["proof (prove)\nusing this:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. indep (C - {x})", "using circuit_min_dep[OF assms]"], ["proof (prove)\nusing this:\n  x \\<in> C\n  ?x \\<in> C \\<Longrightarrow> indep (C - {?x})\n\ngoal (1 subgoal):\n 1. indep (C - {x})", "by auto"], ["proof (state)\nthis:\n  indep (C - {x})\n\ngoal (2 subgoals):\n 1. carrier \\<subseteq> carrier\n 2. \\<And>x. x \\<in> C \\<Longrightarrow> indep_in carrier (C - {x})", "then"], ["proof (chain)\npicking this:\n  indep (C - {x})", "show \"indep_in carrier (C - {x})\""], ["proof (prove)\nusing this:\n  indep (C - {x})\n\ngoal (1 subgoal):\n 1. indep_in carrier (C - {x})", "using circuit_subset_carrier[OF assms]"], ["proof (prove)\nusing this:\n  indep (C - {x})\n  C \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. indep_in carrier (C - {x})", "by (auto intro: indep_inI)"], ["proof (state)\nthis:\n  indep_in carrier (C - {x})\n\ngoal (1 subgoal):\n 1. carrier \\<subseteq> carrier", "qed auto"], ["", "subsection \\<open>Relation between independence and bases\\<close>"], ["", "text \\<open>\n  A set is independent iff it is a subset of a basis.\n\\<close>"], ["", "lemma indep_imp_subset_basis:\n  assumes \"indep X\"\n  shows \"\\<exists>B. basis B \\<and> X \\<subseteq> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B. basis B \\<and> X \\<subseteq> B", "using assms"], ["proof (prove)\nusing this:\n  indep X\n\ngoal (1 subgoal):\n 1. \\<exists>B. basis B \\<and> X \\<subseteq> B", "proof (induction X rule: psubset_inc_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. X \\<subseteq> carrier\n 2. \\<And>X.\n       \\<lbrakk>\\<And>Y.\n                   \\<lbrakk>X \\<subset> Y; Y \\<subseteq> carrier;\n                    indep Y\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B.\n  basis B \\<and> Y \\<subseteq> B;\n        indep X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. basis B \\<and> X \\<subseteq> B", "case carrier"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. X \\<subseteq> carrier\n 2. \\<And>X.\n       \\<lbrakk>\\<And>Y.\n                   \\<lbrakk>X \\<subset> Y; Y \\<subseteq> carrier;\n                    indep Y\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B.\n  basis B \\<and> Y \\<subseteq> B;\n        indep X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. basis B \\<and> X \\<subseteq> B", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> carrier", "using indep_subset_carrier[OF assms]"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. X \\<subseteq> carrier", "."], ["proof (state)\nthis:\n  X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>\\<And>Y.\n                   \\<lbrakk>X \\<subset> Y; Y \\<subseteq> carrier;\n                    indep Y\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B.\n  basis B \\<and> Y \\<subseteq> B;\n        indep X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. basis B \\<and> X \\<subseteq> B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>\\<And>Y.\n                   \\<lbrakk>X \\<subset> Y; Y \\<subseteq> carrier;\n                    indep Y\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B.\n  basis B \\<and> Y \\<subseteq> B;\n        indep X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. basis B \\<and> X \\<subseteq> B", "case (step X)"], ["proof (state)\nthis:\n  \\<lbrakk>X \\<subset> ?Y; ?Y \\<subseteq> carrier; indep ?Y\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B. basis B \\<and> ?Y \\<subseteq> B\n  indep X\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>\\<And>Y.\n                   \\<lbrakk>X \\<subset> Y; Y \\<subseteq> carrier;\n                    indep Y\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B.\n  basis B \\<and> Y \\<subseteq> B;\n        indep X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. basis B \\<and> X \\<subseteq> B", "{"], ["proof (state)\nthis:\n  \\<lbrakk>X \\<subset> ?Y; ?Y \\<subseteq> carrier; indep ?Y\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B. basis B \\<and> ?Y \\<subseteq> B\n  indep X\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>\\<And>Y.\n                   \\<lbrakk>X \\<subset> Y; Y \\<subseteq> carrier;\n                    indep Y\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B.\n  basis B \\<and> Y \\<subseteq> B;\n        indep X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. basis B \\<and> X \\<subseteq> B", "assume \"\\<not> basis X\""], ["proof (state)\nthis:\n  \\<not> basis X\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>\\<And>Y.\n                   \\<lbrakk>X \\<subset> Y; Y \\<subseteq> carrier;\n                    indep Y\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B.\n  basis B \\<and> Y \\<subseteq> B;\n        indep X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. basis B \\<and> X \\<subseteq> B", "then"], ["proof (chain)\npicking this:\n  \\<not> basis X", "obtain x where \"x \\<in> carrier\" \"x \\<notin> X\" \"indep (insert x X)\""], ["proof (prove)\nusing this:\n  \\<not> basis X\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> carrier; x \\<notin> X; indep (insert x X)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using step.prems indep_not_basis"], ["proof (prove)\nusing this:\n  \\<not> basis X\n  indep X\n  \\<lbrakk>indep ?X; \\<not> basis ?X\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<in>carrier - ?X. indep (insert x ?X)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> carrier; x \\<notin> X; indep (insert x X)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier\n  x \\<notin> X\n  indep (insert x X)\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>\\<And>Y.\n                   \\<lbrakk>X \\<subset> Y; Y \\<subseteq> carrier;\n                    indep Y\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B.\n  basis B \\<and> Y \\<subseteq> B;\n        indep X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. basis B \\<and> X \\<subseteq> B", "then"], ["proof (chain)\npicking this:\n  x \\<in> carrier\n  x \\<notin> X\n  indep (insert x X)", "have ?case"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n  x \\<notin> X\n  indep (insert x X)\n\ngoal (1 subgoal):\n 1. \\<exists>B. basis B \\<and> X \\<subseteq> B", "using step.IH[of \"insert x X\"] indep_subset_carrier"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n  x \\<notin> X\n  indep (insert x X)\n  \\<lbrakk>X \\<subset> insert x X; insert x X \\<subseteq> carrier;\n   indep (insert x X)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B. basis B \\<and> insert x X \\<subseteq> B\n  indep ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<exists>B. basis B \\<and> X \\<subseteq> B", "by auto"], ["proof (state)\nthis:\n  \\<exists>B. basis B \\<and> X \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>\\<And>Y.\n                   \\<lbrakk>X \\<subset> Y; Y \\<subseteq> carrier;\n                    indep Y\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B.\n  basis B \\<and> Y \\<subseteq> B;\n        indep X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. basis B \\<and> X \\<subseteq> B", "}"], ["proof (state)\nthis:\n  \\<not> basis X \\<Longrightarrow>\n  \\<exists>B. basis B \\<and> X \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>\\<And>Y.\n                   \\<lbrakk>X \\<subset> Y; Y \\<subseteq> carrier;\n                    indep Y\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B.\n  basis B \\<and> Y \\<subseteq> B;\n        indep X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. basis B \\<and> X \\<subseteq> B", "then"], ["proof (chain)\npicking this:\n  \\<not> basis X \\<Longrightarrow>\n  \\<exists>B. basis B \\<and> X \\<subseteq> B", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> basis X \\<Longrightarrow>\n  \\<exists>B. basis B \\<and> X \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<exists>B. basis B \\<and> X \\<subseteq> B", "by auto"], ["proof (state)\nthis:\n  \\<exists>B. basis B \\<and> X \\<subseteq> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas subset_basis_imp_indep = indep_subset[OF basis_indep]"], ["", "lemma indep_iff_subset_basis: \"indep X \\<longleftrightarrow> (\\<exists>B. basis B \\<and> X \\<subseteq> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep X = (\\<exists>B. basis B \\<and> X \\<subseteq> B)", "using indep_imp_subset_basis subset_basis_imp_indep"], ["proof (prove)\nusing this:\n  indep ?X \\<Longrightarrow> \\<exists>B. basis B \\<and> ?X \\<subseteq> B\n  \\<lbrakk>basis ?X; ?Y \\<subseteq> ?X\\<rbrakk> \\<Longrightarrow> indep ?Y\n\ngoal (1 subgoal):\n 1. indep X = (\\<exists>B. basis B \\<and> X \\<subseteq> B)", "by auto"], ["", "lemma basis_ex: \"\\<exists>B. basis B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ex basis", "using indep_imp_subset_basis[OF indep_empty]"], ["proof (prove)\nusing this:\n  \\<exists>B. basis B \\<and> {} \\<subseteq> B\n\ngoal (1 subgoal):\n 1. Ex basis", "by auto"], ["", "context\n  fixes \\<E>\n  assumes *: \"\\<E> \\<subseteq> carrier\"\nbegin"], ["", "interpretation \\<E>: indep_system \\<E> \"indep_in \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "using *"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "by auto"], ["", "lemma indep_in_imp_subset_basis_in:\n  assumes \"indep_in \\<E> X\"\n  shows \"\\<exists>B. basis_in \\<E> B \\<and> X \\<subseteq> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B. basis_in \\<E> B \\<and> X \\<subseteq> B", "unfolding basis_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B. \\<E>.basis B \\<and> X \\<subseteq> B", "using \\<E>.indep_imp_subset_basis[OF assms]"], ["proof (prove)\nusing this:\n  \\<exists>B. \\<E>.basis B \\<and> X \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<exists>B. \\<E>.basis B \\<and> X \\<subseteq> B", "."], ["", "lemmas subset_basis_in_imp_indep_in = indep_in_subset[OF * basis_in_indep_in[OF *]]"], ["", "lemma indep_in_iff_subset_basis_in: \"indep_in \\<E> X \\<longleftrightarrow> (\\<exists>B. basis_in \\<E> B \\<and> X \\<subseteq> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in \\<E> X = (\\<exists>B. basis_in \\<E> B \\<and> X \\<subseteq> B)", "using indep_in_imp_subset_basis_in subset_basis_in_imp_indep_in"], ["proof (prove)\nusing this:\n  indep_in \\<E> ?X \\<Longrightarrow>\n  \\<exists>B. basis_in \\<E> B \\<and> ?X \\<subseteq> B\n  \\<lbrakk>basis_in \\<E> ?X; ?Y \\<subseteq> ?X\\<rbrakk>\n  \\<Longrightarrow> indep_in \\<E> ?Y\n\ngoal (1 subgoal):\n 1. indep_in \\<E> X = (\\<exists>B. basis_in \\<E> B \\<and> X \\<subseteq> B)", "by auto"], ["", "lemma basis_in_ex: \"\\<exists>B. basis_in \\<E> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B. basis_in \\<E> B", "unfolding basis_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ex \\<E>.basis", "using \\<E>.basis_ex"], ["proof (prove)\nusing this:\n  Ex \\<E>.basis\n\ngoal (1 subgoal):\n 1. Ex \\<E>.basis", "."], ["", "lemma basis_in_subI:\n  assumes \"\\<E>' \\<subseteq> \\<E>\" \"\\<E> \\<subseteq> carrier\"\n  assumes \"basis_in \\<E>' B\"\n  shows \"\\<exists>B' \\<subseteq> \\<E> - \\<E>'. basis_in \\<E> (B \\<union> B')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B'\\<subseteq>\\<E> - \\<E>'. basis_in \\<E> (B \\<union> B')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>B'\\<subseteq>\\<E> - \\<E>'. basis_in \\<E> (B \\<union> B')", "have \"indep_in \\<E> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in \\<E> B", "using assms basis_in_indep_in indep_in_subI_subset"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  basis_in \\<E>' B\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> indep_in ?\\<E> ?X\n  \\<lbrakk>?\\<E>' \\<subseteq> ?\\<E>; indep_in ?\\<E>' ?X\\<rbrakk>\n  \\<Longrightarrow> indep_in ?\\<E> ?X\n\ngoal (1 subgoal):\n 1. indep_in \\<E> B", "by auto"], ["proof (state)\nthis:\n  indep_in \\<E> B\n\ngoal (1 subgoal):\n 1. \\<exists>B'\\<subseteq>\\<E> - \\<E>'. basis_in \\<E> (B \\<union> B')", "then"], ["proof (chain)\npicking this:\n  indep_in \\<E> B", "obtain B' where B': \"basis_in \\<E> B'\" \"B \\<subseteq> B'\""], ["proof (prove)\nusing this:\n  indep_in \\<E> B\n\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        \\<lbrakk>basis_in \\<E> B'; B \\<subseteq> B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms indep_in_imp_subset_basis_in[of B]"], ["proof (prove)\nusing this:\n  indep_in \\<E> B\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  basis_in \\<E>' B\n  indep_in \\<E> B \\<Longrightarrow>\n  \\<exists>Ba. basis_in \\<E> Ba \\<and> B \\<subseteq> Ba\n\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        \\<lbrakk>basis_in \\<E> B'; B \\<subseteq> B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  basis_in \\<E> B'\n  B \\<subseteq> B'\n\ngoal (1 subgoal):\n 1. \\<exists>B'\\<subseteq>\\<E> - \\<E>'. basis_in \\<E> (B \\<union> B')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B'\\<subseteq>\\<E> - \\<E>'. basis_in \\<E> (B \\<union> B')", "proof (rule exI)"], ["proof (state)\ngoal (1 subgoal):\n 1. ?B' \\<subseteq> \\<E> - \\<E>' \\<and> basis_in \\<E> (B \\<union> ?B')", "have \"B' - B \\<subseteq> \\<E> - \\<E>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B' - B \\<subseteq> \\<E> - \\<E>'", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B' - B \\<Longrightarrow> x \\<in> \\<E> - \\<E>'", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B' - B \\<Longrightarrow> x \\<in> \\<E> - \\<E>'", "assume *: \"x \\<in> B' - B\""], ["proof (state)\nthis:\n  x \\<in> B' - B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B' - B \\<Longrightarrow> x \\<in> \\<E> - \\<E>'", "then"], ["proof (chain)\npicking this:\n  x \\<in> B' - B", "have \"x \\<in> \\<E>\" \"x \\<notin> B\""], ["proof (prove)\nusing this:\n  x \\<in> B' - B\n\ngoal (1 subgoal):\n 1. x \\<in> \\<E> &&& x \\<notin> B", "using assms \\<open>basis_in \\<E> B'\\<close> basis_in_subset_carrier[of \\<E>]"], ["proof (prove)\nusing this:\n  x \\<in> B' - B\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  basis_in \\<E>' B\n  basis_in \\<E> B'\n  \\<lbrakk>\\<E> \\<subseteq> carrier; basis_in \\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> ?X \\<subseteq> \\<E>\n\ngoal (1 subgoal):\n 1. x \\<in> \\<E> &&& x \\<notin> B", "by auto"], ["proof (state)\nthis:\n  x \\<in> \\<E>\n  x \\<notin> B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B' - B \\<Longrightarrow> x \\<in> \\<E> - \\<E>'", "moreover"], ["proof (state)\nthis:\n  x \\<in> \\<E>\n  x \\<notin> B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B' - B \\<Longrightarrow> x \\<in> \\<E> - \\<E>'", "{"], ["proof (state)\nthis:\n  x \\<in> \\<E>\n  x \\<notin> B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B' - B \\<Longrightarrow> x \\<in> \\<E> - \\<E>'", "assume \"x \\<in> \\<E>'\""], ["proof (state)\nthis:\n  x \\<in> \\<E>'\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B' - B \\<Longrightarrow> x \\<in> \\<E> - \\<E>'", "moreover"], ["proof (state)\nthis:\n  x \\<in> \\<E>'\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B' - B \\<Longrightarrow> x \\<in> \\<E> - \\<E>'", "have \"indep_in \\<E> (insert x B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in \\<E> (insert x B)", "using * assms indep_in_subset[OF _ basis_in_indep_in] B'"], ["proof (prove)\nusing this:\n  x \\<in> B' - B\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  basis_in \\<E>' B\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; ?\\<E> \\<subseteq> carrier;\n   basis_in ?\\<E> ?X; ?Y \\<subseteq> ?X\\<rbrakk>\n  \\<Longrightarrow> indep_in ?\\<E> ?Y\n  basis_in \\<E> B'\n  B \\<subseteq> B'\n\ngoal (1 subgoal):\n 1. indep_in \\<E> (insert x B)", "by auto"], ["proof (state)\nthis:\n  indep_in \\<E> (insert x B)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B' - B \\<Longrightarrow> x \\<in> \\<E> - \\<E>'", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> \\<E>'\n  indep_in \\<E> (insert x B)", "have \"indep_in \\<E>' (insert x B)\""], ["proof (prove)\nusing this:\n  x \\<in> \\<E>'\n  indep_in \\<E> (insert x B)\n\ngoal (1 subgoal):\n 1. indep_in \\<E>' (insert x B)", "using assms basis_in_subset_carrier"], ["proof (prove)\nusing this:\n  x \\<in> \\<E>'\n  indep_in \\<E> (insert x B)\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  basis_in \\<E>' B\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n\ngoal (1 subgoal):\n 1. indep_in \\<E>' (insert x B)", "unfolding indep_in_def"], ["proof (prove)\nusing this:\n  x \\<in> \\<E>'\n  insert x B \\<subseteq> \\<E> \\<and> indep (insert x B)\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  basis_in \\<E>' B\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n\ngoal (1 subgoal):\n 1. insert x B \\<subseteq> \\<E>' \\<and> indep (insert x B)", "by auto"], ["proof (state)\nthis:\n  indep_in \\<E>' (insert x B)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B' - B \\<Longrightarrow> x \\<in> \\<E> - \\<E>'", "then"], ["proof (chain)\npicking this:\n  indep_in \\<E>' (insert x B)", "have False"], ["proof (prove)\nusing this:\n  indep_in \\<E>' (insert x B)\n\ngoal (1 subgoal):\n 1. False", "using assms * \\<open>x \\<in> \\<E>'\\<close> basis_in_max_indep_in"], ["proof (prove)\nusing this:\n  indep_in \\<E>' (insert x B)\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  basis_in \\<E>' B\n  x \\<in> B' - B\n  x \\<in> \\<E>'\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?X;\n   ?x \\<in> ?\\<E> - ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep_in ?\\<E> (insert ?x ?X)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B' - B \\<Longrightarrow> x \\<in> \\<E> - \\<E>'", "}"], ["proof (state)\nthis:\n  x \\<in> \\<E>' \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B' - B \\<Longrightarrow> x \\<in> \\<E> - \\<E>'", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> \\<E>\n  x \\<notin> B\n  x \\<in> \\<E>' \\<Longrightarrow> False", "show \"x \\<in> \\<E> - \\<E>'\""], ["proof (prove)\nusing this:\n  x \\<in> \\<E>\n  x \\<notin> B\n  x \\<in> \\<E>' \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. x \\<in> \\<E> - \\<E>'", "by auto"], ["proof (state)\nthis:\n  x \\<in> \\<E> - \\<E>'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B' - B \\<subseteq> \\<E> - \\<E>'\n\ngoal (1 subgoal):\n 1. ?B' \\<subseteq> \\<E> - \\<E>' \\<and> basis_in \\<E> (B \\<union> ?B')", "moreover"], ["proof (state)\nthis:\n  B' - B \\<subseteq> \\<E> - \\<E>'\n\ngoal (1 subgoal):\n 1. ?B' \\<subseteq> \\<E> - \\<E>' \\<and> basis_in \\<E> (B \\<union> ?B')", "have \"B \\<union> (B' - B) = B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<union> (B' - B) = B'", "using \\<open>B \\<subseteq> B'\\<close>"], ["proof (prove)\nusing this:\n  B \\<subseteq> B'\n\ngoal (1 subgoal):\n 1. B \\<union> (B' - B) = B'", "by auto"], ["proof (state)\nthis:\n  B \\<union> (B' - B) = B'\n\ngoal (1 subgoal):\n 1. ?B' \\<subseteq> \\<E> - \\<E>' \\<and> basis_in \\<E> (B \\<union> ?B')", "ultimately"], ["proof (chain)\npicking this:\n  B' - B \\<subseteq> \\<E> - \\<E>'\n  B \\<union> (B' - B) = B'", "show \"B' - B \\<subseteq> \\<E> - \\<E>' \\<and> basis_in \\<E> (B \\<union> (B' - B))\""], ["proof (prove)\nusing this:\n  B' - B \\<subseteq> \\<E> - \\<E>'\n  B \\<union> (B' - B) = B'\n\ngoal (1 subgoal):\n 1. B' - B \\<subseteq> \\<E> - \\<E>' \\<and>\n    basis_in \\<E> (B \\<union> (B' - B))", "using \\<open>basis_in \\<E> B'\\<close>"], ["proof (prove)\nusing this:\n  B' - B \\<subseteq> \\<E> - \\<E>'\n  B \\<union> (B' - B) = B'\n  basis_in \\<E> B'\n\ngoal (1 subgoal):\n 1. B' - B \\<subseteq> \\<E> - \\<E>' \\<and>\n    basis_in \\<E> (B \\<union> (B' - B))", "by auto"], ["proof (state)\nthis:\n  B' - B \\<subseteq> \\<E> - \\<E>' \\<and> basis_in \\<E> (B \\<union> (B' - B))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>B'\\<subseteq>\\<E> - \\<E>'. basis_in \\<E> (B \\<union> B')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_in_supI:\n  assumes \"B \\<subseteq> \\<E>'\" \"\\<E>' \\<subseteq> \\<E>\" \"\\<E> \\<subseteq> carrier\"\n  assumes \"basis_in \\<E> B\"\n  shows \"basis_in \\<E>' B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis_in \\<E>' B", "proof (rule basis_inI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<E>' \\<subseteq> carrier\n 2. indep_in \\<E>' B\n 3. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> indep_in \\<E>' (insert x B)", "show \"\\<E>' \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>' \\<subseteq> carrier", "using assms"], ["proof (prove)\nusing this:\n  B \\<subseteq> \\<E>'\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  basis_in \\<E> B\n\ngoal (1 subgoal):\n 1. \\<E>' \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  \\<E>' \\<subseteq> carrier\n\ngoal (2 subgoals):\n 1. indep_in \\<E>' B\n 2. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> indep_in \\<E>' (insert x B)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. indep_in \\<E>' B\n 2. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> indep_in \\<E>' (insert x B)", "show \"indep_in \\<E>' B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in \\<E>' B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. indep_in \\<E>' B", "have \"indep_in \\<E>' (B \\<inter> \\<E>')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in \\<E>' (B \\<inter> \\<E>')", "using assms basis_in_indep_in[of \\<E> B] indep_in_subI"], ["proof (prove)\nusing this:\n  B \\<subseteq> \\<E>'\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  basis_in \\<E> B\n  \\<lbrakk>\\<E> \\<subseteq> carrier; basis_in \\<E> B\\<rbrakk>\n  \\<Longrightarrow> indep_in \\<E> B\n  indep_in ?\\<E> ?X \\<Longrightarrow> indep_in ?\\<E>' (?X \\<inter> ?\\<E>')\n\ngoal (1 subgoal):\n 1. indep_in \\<E>' (B \\<inter> \\<E>')", "by auto"], ["proof (state)\nthis:\n  indep_in \\<E>' (B \\<inter> \\<E>')\n\ngoal (1 subgoal):\n 1. indep_in \\<E>' B", "moreover"], ["proof (state)\nthis:\n  indep_in \\<E>' (B \\<inter> \\<E>')\n\ngoal (1 subgoal):\n 1. indep_in \\<E>' B", "have \"B \\<inter> \\<E>' = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<inter> \\<E>' = B", "using assms"], ["proof (prove)\nusing this:\n  B \\<subseteq> \\<E>'\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  basis_in \\<E> B\n\ngoal (1 subgoal):\n 1. B \\<inter> \\<E>' = B", "by auto"], ["proof (state)\nthis:\n  B \\<inter> \\<E>' = B\n\ngoal (1 subgoal):\n 1. indep_in \\<E>' B", "ultimately"], ["proof (chain)\npicking this:\n  indep_in \\<E>' (B \\<inter> \\<E>')\n  B \\<inter> \\<E>' = B", "show ?thesis"], ["proof (prove)\nusing this:\n  indep_in \\<E>' (B \\<inter> \\<E>')\n  B \\<inter> \\<E>' = B\n\ngoal (1 subgoal):\n 1. indep_in \\<E>' B", "by auto"], ["proof (state)\nthis:\n  indep_in \\<E>' B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  indep_in \\<E>' B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> indep_in \\<E>' (insert x B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> indep_in \\<E>' (insert x B)", "show \"\\<And>x. x \\<in> \\<E>' - B \\<Longrightarrow> \\<not> indep_in \\<E>' (insert x B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> indep_in \\<E>' (insert x B)", "using assms basis_in_subset_carrier basis_in_max_indep_in dep_in_subI[of _ \\<E> \\<E>']"], ["proof (prove)\nusing this:\n  B \\<subseteq> \\<E>'\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  basis_in \\<E> B\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?X;\n   ?x \\<in> ?\\<E> - ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep_in ?\\<E> (insert ?x ?X)\n  \\<lbrakk>?X \\<subseteq> \\<E>; \\<not> indep_in \\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep_in \\<E>' ?X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<E>' - B \\<Longrightarrow>\n       \\<not> indep_in \\<E>' (insert x B)", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> \\<E>' - B \\<Longrightarrow> \\<not> indep_in \\<E>' (insert ?x B)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Relation between dependence and circuits\\<close>"], ["", "text \\<open>\n  A set is dependent iff it contains a circuit.\n\\<close>"], ["", "lemma dep_imp_supset_circuit:\n  assumes \"X \\<subseteq> carrier\"\n  assumes \"\\<not> indep X\"\n  shows \"\\<exists>C. circuit C \\<and> C \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C. circuit C \\<and> C \\<subseteq> X", "using assms"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  \\<not> indep X\n\ngoal (1 subgoal):\n 1. \\<exists>C. circuit C \\<and> C \\<subseteq> X", "proof (induction X rule: remove_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; \\<not> indep {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> {}\n 2. \\<lbrakk>infinite X; X \\<subseteq> carrier; \\<not> indep X\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> X\n 3. \\<And>A.\n       \\<lbrakk>finite A; A \\<noteq> {}; A \\<subseteq> X;\n        \\<And>x.\n           \\<lbrakk>x \\<in> A; A - {x} \\<subseteq> carrier;\n            \\<not> indep (A - {x})\\<rbrakk>\n           \\<Longrightarrow> \\<exists>C.\n                                circuit C \\<and> C \\<subseteq> A - {x};\n        A \\<subseteq> carrier; \\<not> indep A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> A", "case (remove X)"], ["proof (state)\nthis:\n  finite X\n  X \\<noteq> {}\n  X \\<subseteq> X\n  \\<lbrakk>?x \\<in> X; X - {?x} \\<subseteq> carrier;\n   \\<not> indep (X - {?x})\\<rbrakk>\n  \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> X - {?x}\n  X \\<subseteq> carrier\n  \\<not> indep X\n\ngoal (3 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; \\<not> indep {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> {}\n 2. \\<lbrakk>infinite X; X \\<subseteq> carrier; \\<not> indep X\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> X\n 3. \\<And>A.\n       \\<lbrakk>finite A; A \\<noteq> {}; A \\<subseteq> X;\n        \\<And>x.\n           \\<lbrakk>x \\<in> A; A - {x} \\<subseteq> carrier;\n            \\<not> indep (A - {x})\\<rbrakk>\n           \\<Longrightarrow> \\<exists>C.\n                                circuit C \\<and> C \\<subseteq> A - {x};\n        A \\<subseteq> carrier; \\<not> indep A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> A", "{"], ["proof (state)\nthis:\n  finite X\n  X \\<noteq> {}\n  X \\<subseteq> X\n  \\<lbrakk>?x \\<in> X; X - {?x} \\<subseteq> carrier;\n   \\<not> indep (X - {?x})\\<rbrakk>\n  \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> X - {?x}\n  X \\<subseteq> carrier\n  \\<not> indep X\n\ngoal (3 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; \\<not> indep {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> {}\n 2. \\<lbrakk>infinite X; X \\<subseteq> carrier; \\<not> indep X\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> X\n 3. \\<And>A.\n       \\<lbrakk>finite A; A \\<noteq> {}; A \\<subseteq> X;\n        \\<And>x.\n           \\<lbrakk>x \\<in> A; A - {x} \\<subseteq> carrier;\n            \\<not> indep (A - {x})\\<rbrakk>\n           \\<Longrightarrow> \\<exists>C.\n                                circuit C \\<and> C \\<subseteq> A - {x};\n        A \\<subseteq> carrier; \\<not> indep A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> A", "assume \"\\<not> circuit X\""], ["proof (state)\nthis:\n  \\<not> circuit X\n\ngoal (3 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; \\<not> indep {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> {}\n 2. \\<lbrakk>infinite X; X \\<subseteq> carrier; \\<not> indep X\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> X\n 3. \\<And>A.\n       \\<lbrakk>finite A; A \\<noteq> {}; A \\<subseteq> X;\n        \\<And>x.\n           \\<lbrakk>x \\<in> A; A - {x} \\<subseteq> carrier;\n            \\<not> indep (A - {x})\\<rbrakk>\n           \\<Longrightarrow> \\<exists>C.\n                                circuit C \\<and> C \\<subseteq> A - {x};\n        A \\<subseteq> carrier; \\<not> indep A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> A", "then"], ["proof (chain)\npicking this:\n  \\<not> circuit X", "obtain x where \"x \\<in> X\" \"\\<not> indep (X - {x})\""], ["proof (prove)\nusing this:\n  \\<not> circuit X\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> X; \\<not> indep (X - {x})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using remove.prems dep_not_circuit"], ["proof (prove)\nusing this:\n  \\<not> circuit X\n  X \\<subseteq> carrier\n  \\<not> indep X\n  \\<lbrakk>?X \\<subseteq> carrier; \\<not> indep ?X;\n   \\<not> circuit ?X\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<in>?X. \\<not> indep (?X - {x})\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> X; \\<not> indep (X - {x})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> X\n  \\<not> indep (X - {x})\n\ngoal (3 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; \\<not> indep {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> {}\n 2. \\<lbrakk>infinite X; X \\<subseteq> carrier; \\<not> indep X\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> X\n 3. \\<And>A.\n       \\<lbrakk>finite A; A \\<noteq> {}; A \\<subseteq> X;\n        \\<And>x.\n           \\<lbrakk>x \\<in> A; A - {x} \\<subseteq> carrier;\n            \\<not> indep (A - {x})\\<rbrakk>\n           \\<Longrightarrow> \\<exists>C.\n                                circuit C \\<and> C \\<subseteq> A - {x};\n        A \\<subseteq> carrier; \\<not> indep A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> A", "then"], ["proof (chain)\npicking this:\n  x \\<in> X\n  \\<not> indep (X - {x})", "obtain C where \"circuit C\" \"C \\<subseteq> X - {x}\""], ["proof (prove)\nusing this:\n  x \\<in> X\n  \\<not> indep (X - {x})\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>circuit C; C \\<subseteq> X - {x}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using remove.prems remove.IH[of x]"], ["proof (prove)\nusing this:\n  x \\<in> X\n  \\<not> indep (X - {x})\n  X \\<subseteq> carrier\n  \\<not> indep X\n  \\<lbrakk>x \\<in> X; X - {x} \\<subseteq> carrier;\n   \\<not> indep (X - {x})\\<rbrakk>\n  \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> X - {x}\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>circuit C; C \\<subseteq> X - {x}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  circuit C\n  C \\<subseteq> X - {x}\n\ngoal (3 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; \\<not> indep {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> {}\n 2. \\<lbrakk>infinite X; X \\<subseteq> carrier; \\<not> indep X\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> X\n 3. \\<And>A.\n       \\<lbrakk>finite A; A \\<noteq> {}; A \\<subseteq> X;\n        \\<And>x.\n           \\<lbrakk>x \\<in> A; A - {x} \\<subseteq> carrier;\n            \\<not> indep (A - {x})\\<rbrakk>\n           \\<Longrightarrow> \\<exists>C.\n                                circuit C \\<and> C \\<subseteq> A - {x};\n        A \\<subseteq> carrier; \\<not> indep A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> A", "then"], ["proof (chain)\npicking this:\n  circuit C\n  C \\<subseteq> X - {x}", "have ?case"], ["proof (prove)\nusing this:\n  circuit C\n  C \\<subseteq> X - {x}\n\ngoal (1 subgoal):\n 1. \\<exists>C. circuit C \\<and> C \\<subseteq> X", "by auto"], ["proof (state)\nthis:\n  \\<exists>C. circuit C \\<and> C \\<subseteq> X\n\ngoal (3 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; \\<not> indep {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> {}\n 2. \\<lbrakk>infinite X; X \\<subseteq> carrier; \\<not> indep X\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> X\n 3. \\<And>A.\n       \\<lbrakk>finite A; A \\<noteq> {}; A \\<subseteq> X;\n        \\<And>x.\n           \\<lbrakk>x \\<in> A; A - {x} \\<subseteq> carrier;\n            \\<not> indep (A - {x})\\<rbrakk>\n           \\<Longrightarrow> \\<exists>C.\n                                circuit C \\<and> C \\<subseteq> A - {x};\n        A \\<subseteq> carrier; \\<not> indep A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> A", "}"], ["proof (state)\nthis:\n  \\<not> circuit X \\<Longrightarrow>\n  \\<exists>C. circuit C \\<and> C \\<subseteq> X\n\ngoal (3 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; \\<not> indep {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> {}\n 2. \\<lbrakk>infinite X; X \\<subseteq> carrier; \\<not> indep X\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> X\n 3. \\<And>A.\n       \\<lbrakk>finite A; A \\<noteq> {}; A \\<subseteq> X;\n        \\<And>x.\n           \\<lbrakk>x \\<in> A; A - {x} \\<subseteq> carrier;\n            \\<not> indep (A - {x})\\<rbrakk>\n           \\<Longrightarrow> \\<exists>C.\n                                circuit C \\<and> C \\<subseteq> A - {x};\n        A \\<subseteq> carrier; \\<not> indep A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> A", "then"], ["proof (chain)\npicking this:\n  \\<not> circuit X \\<Longrightarrow>\n  \\<exists>C. circuit C \\<and> C \\<subseteq> X", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> circuit X \\<Longrightarrow>\n  \\<exists>C. circuit C \\<and> C \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<exists>C. circuit C \\<and> C \\<subseteq> X", "using remove.prems"], ["proof (prove)\nusing this:\n  \\<not> circuit X \\<Longrightarrow>\n  \\<exists>C. circuit C \\<and> C \\<subseteq> X\n  X \\<subseteq> carrier\n  \\<not> indep X\n\ngoal (1 subgoal):\n 1. \\<exists>C. circuit C \\<and> C \\<subseteq> X", "by auto"], ["proof (state)\nthis:\n  \\<exists>C. circuit C \\<and> C \\<subseteq> X\n\ngoal (2 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; \\<not> indep {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> {}\n 2. \\<lbrakk>infinite X; X \\<subseteq> carrier; \\<not> indep X\\<rbrakk>\n    \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> X", "qed (auto simp add: carrier_finite finite_subset)"], ["", "lemma supset_circuit_imp_dep:\n  assumes \"circuit C \\<and> C \\<subseteq> X\"\n  shows \"\\<not> indep X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> indep X", "using assms indep_subset circuit_dep"], ["proof (prove)\nusing this:\n  circuit C \\<and> C \\<subseteq> X\n  \\<lbrakk>indep ?X; ?Y \\<subseteq> ?X\\<rbrakk> \\<Longrightarrow> indep ?Y\n  circuit ?X \\<Longrightarrow> \\<not> indep ?X\n\ngoal (1 subgoal):\n 1. \\<not> indep X", "by auto"], ["", "lemma dep_iff_supset_circuit:\n  assumes \"X \\<subseteq> carrier\"\n  shows \"\\<not> indep X \\<longleftrightarrow> (\\<exists>C. circuit C \\<and> C \\<subseteq> X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> indep X) = (\\<exists>C. circuit C \\<and> C \\<subseteq> X)", "using assms dep_imp_supset_circuit supset_circuit_imp_dep"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  \\<lbrakk>?X \\<subseteq> carrier; \\<not> indep ?X\\<rbrakk>\n  \\<Longrightarrow> \\<exists>C. circuit C \\<and> C \\<subseteq> ?X\n  circuit ?C \\<and> ?C \\<subseteq> ?X \\<Longrightarrow> \\<not> indep ?X\n\ngoal (1 subgoal):\n 1. (\\<not> indep X) = (\\<exists>C. circuit C \\<and> C \\<subseteq> X)", "by auto"], ["", "context\n  fixes \\<E>\n  assumes \"\\<E> \\<subseteq> carrier\"\nbegin"], ["", "interpretation \\<E>: indep_system \\<E> \"indep_in \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "using \\<open>\\<E> \\<subseteq> carrier\\<close>"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "by auto"], ["", "lemma dep_in_imp_supset_circuit_in:\n  assumes \"X \\<subseteq> \\<E>\"\n  assumes \"\\<not> indep_in \\<E> X\"\n  shows \"\\<exists>C. circuit_in \\<E> C \\<and> C \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C. circuit_in \\<E> C \\<and> C \\<subseteq> X", "unfolding circuit_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C. \\<E>.circuit C \\<and> C \\<subseteq> X", "using \\<E>.dep_imp_supset_circuit[OF assms]"], ["proof (prove)\nusing this:\n  \\<exists>C. \\<E>.circuit C \\<and> C \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<exists>C. \\<E>.circuit C \\<and> C \\<subseteq> X", "."], ["", "lemma supset_circuit_in_imp_dep_in:\n  assumes \"circuit_in \\<E> C \\<and> C \\<subseteq> X\"\n  shows \"\\<not> indep_in \\<E> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> indep_in \\<E> X", "using assms \\<E>.supset_circuit_imp_dep"], ["proof (prove)\nusing this:\n  circuit_in \\<E> C \\<and> C \\<subseteq> X\n  \\<E>.circuit ?C \\<and> ?C \\<subseteq> ?X \\<Longrightarrow>\n  \\<not> indep_in \\<E> ?X\n\ngoal (1 subgoal):\n 1. \\<not> indep_in \\<E> X", "unfolding circuit_in_def"], ["proof (prove)\nusing this:\n  \\<E>.circuit C \\<and> C \\<subseteq> X\n  \\<E>.circuit ?C \\<and> ?C \\<subseteq> ?X \\<Longrightarrow>\n  \\<not> indep_in \\<E> ?X\n\ngoal (1 subgoal):\n 1. \\<not> indep_in \\<E> X", "by auto"], ["", "lemma dep_in_iff_supset_circuit_in:\n  assumes \"X \\<subseteq> \\<E>\"\n  shows \"\\<not> indep_in \\<E> X \\<longleftrightarrow> (\\<exists>C. circuit_in \\<E> C \\<and> C \\<subseteq> X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> indep_in \\<E> X) =\n    (\\<exists>C. circuit_in \\<E> C \\<and> C \\<subseteq> X)", "using assms dep_in_imp_supset_circuit_in supset_circuit_in_imp_dep_in"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>\n  \\<lbrakk>?X \\<subseteq> \\<E>; \\<not> indep_in \\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> \\<exists>C. circuit_in \\<E> C \\<and> C \\<subseteq> ?X\n  circuit_in \\<E> ?C \\<and> ?C \\<subseteq> ?X \\<Longrightarrow>\n  \\<not> indep_in \\<E> ?X\n\ngoal (1 subgoal):\n 1. (\\<not> indep_in \\<E> X) =\n    (\\<exists>C. circuit_in \\<E> C \\<and> C \\<subseteq> X)", "by auto"], ["", "end"], ["", "subsection \\<open>Ranks\\<close>"], ["", "definition lower_rank_of :: \"'a set \\<Rightarrow> nat\" where\n  \"lower_rank_of carrier' \\<equiv> Min {card B | B. basis_in carrier' B}\""], ["", "definition upper_rank_of :: \"'a set \\<Rightarrow> nat\" where\n  \"upper_rank_of carrier' \\<equiv> Max {card B | B. basis_in carrier' B}\""], ["", "lemma collect_basis_finite: \"finite (Collect basis)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Collect basis)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (Collect basis)", "have \"Collect basis \\<subseteq> {X. X \\<subseteq> carrier}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Collect basis \\<subseteq> {X. X \\<subseteq> carrier}", "using basis_subset_carrier"], ["proof (prove)\nusing this:\n  basis ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. Collect basis \\<subseteq> {X. X \\<subseteq> carrier}", "by auto"], ["proof (state)\nthis:\n  Collect basis \\<subseteq> {X. X \\<subseteq> carrier}\n\ngoal (1 subgoal):\n 1. finite (Collect basis)", "moreover"], ["proof (state)\nthis:\n  Collect basis \\<subseteq> {X. X \\<subseteq> carrier}\n\ngoal (1 subgoal):\n 1. finite (Collect basis)", "have \"finite \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {X. X \\<subseteq> carrier}", "using carrier_finite"], ["proof (prove)\nusing this:\n  finite carrier\n\ngoal (1 subgoal):\n 1. finite {X. X \\<subseteq> carrier}", "by auto"], ["proof (state)\nthis:\n  finite {X. X \\<subseteq> carrier}\n\ngoal (1 subgoal):\n 1. finite (Collect basis)", "ultimately"], ["proof (chain)\npicking this:\n  Collect basis \\<subseteq> {X. X \\<subseteq> carrier}\n  finite {X. X \\<subseteq> carrier}", "show ?thesis"], ["proof (prove)\nusing this:\n  Collect basis \\<subseteq> {X. X \\<subseteq> carrier}\n  finite {X. X \\<subseteq> carrier}\n\ngoal (1 subgoal):\n 1. finite (Collect basis)", "using finite_subset"], ["proof (prove)\nusing this:\n  Collect basis \\<subseteq> {X. X \\<subseteq> carrier}\n  finite {X. X \\<subseteq> carrier}\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite (Collect basis)", "by auto"], ["proof (state)\nthis:\n  finite (Collect basis)\n\ngoal:\nNo subgoals!", "qed"], ["", "context\n  fixes \\<E>\n  assumes *: \"\\<E> \\<subseteq> carrier\"\nbegin"], ["", "interpretation \\<E>: indep_system \\<E> \"indep_in \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "using *"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "by auto"], ["", "lemma collect_basis_in_finite: \"finite (Collect (basis_in \\<E>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Collect (basis_in \\<E>))", "unfolding basis_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Collect \\<E>.basis)", "using \\<E>.collect_basis_finite"], ["proof (prove)\nusing this:\n  finite (Collect \\<E>.basis)\n\ngoal (1 subgoal):\n 1. finite (Collect \\<E>.basis)", "."], ["", "lemma lower_rank_of_le: \"lower_rank_of \\<E> \\<le> card \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lower_rank_of \\<E> \\<le> card \\<E>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lower_rank_of \\<E> \\<le> card \\<E>", "have \"\\<exists>n \\<in> {card B | B. basis_in \\<E> B}. n \\<le> card \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>{card B |B. basis_in \\<E> B}. n \\<le> card \\<E>", "using card_mono[OF \\<E>.carrier_finite basis_in_subset_carrier[OF *]] basis_in_ex[OF *]"], ["proof (prove)\nusing this:\n  basis_in \\<E> ?A \\<Longrightarrow> card ?A \\<le> card \\<E>\n  \\<exists>B. basis_in \\<E> B\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>{card B |B. basis_in \\<E> B}. n \\<le> card \\<E>", "by auto"], ["proof (state)\nthis:\n  \\<exists>n\\<in>{card B |B. basis_in \\<E> B}. n \\<le> card \\<E>\n\ngoal (1 subgoal):\n 1. lower_rank_of \\<E> \\<le> card \\<E>", "moreover"], ["proof (state)\nthis:\n  \\<exists>n\\<in>{card B |B. basis_in \\<E> B}. n \\<le> card \\<E>\n\ngoal (1 subgoal):\n 1. lower_rank_of \\<E> \\<le> card \\<E>", "have \"finite {card B | B. basis_in \\<E> B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {card B |B. basis_in \\<E> B}", "using collect_basis_in_finite"], ["proof (prove)\nusing this:\n  finite (Collect (basis_in \\<E>))\n\ngoal (1 subgoal):\n 1. finite {card B |B. basis_in \\<E> B}", "by auto"], ["proof (state)\nthis:\n  finite {card B |B. basis_in \\<E> B}\n\ngoal (1 subgoal):\n 1. lower_rank_of \\<E> \\<le> card \\<E>", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>n\\<in>{card B |B. basis_in \\<E> B}. n \\<le> card \\<E>\n  finite {card B |B. basis_in \\<E> B}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>n\\<in>{card B |B. basis_in \\<E> B}. n \\<le> card \\<E>\n  finite {card B |B. basis_in \\<E> B}\n\ngoal (1 subgoal):\n 1. lower_rank_of \\<E> \\<le> card \\<E>", "unfolding lower_rank_of_def"], ["proof (prove)\nusing this:\n  \\<exists>n\\<in>{card B |B. basis_in \\<E> B}. n \\<le> card \\<E>\n  finite {card B |B. basis_in \\<E> B}\n\ngoal (1 subgoal):\n 1. Min {card B |B. basis_in \\<E> B} \\<le> card \\<E>", "using basis_ex Min_le_iff"], ["proof (prove)\nusing this:\n  \\<exists>n\\<in>{card B |B. basis_in \\<E> B}. n \\<le> card \\<E>\n  finite {card B |B. basis_in \\<E> B}\n  Ex basis\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> (Min ?A \\<le> ?x) = (\\<exists>a\\<in>?A. a \\<le> ?x)\n\ngoal (1 subgoal):\n 1. Min {card B |B. basis_in \\<E> B} \\<le> card \\<E>", "by auto"], ["proof (state)\nthis:\n  lower_rank_of \\<E> \\<le> card \\<E>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma upper_rank_of_le: \"upper_rank_of \\<E> \\<le> card \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. upper_rank_of \\<E> \\<le> card \\<E>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. upper_rank_of \\<E> \\<le> card \\<E>", "have \"\\<forall>n \\<in> {card B | B. basis_in \\<E> B}. n \\<le> card \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n\\<in>{card B |B. basis_in \\<E> B}. n \\<le> card \\<E>", "using card_mono[OF \\<E>.carrier_finite basis_in_subset_carrier[OF *]]"], ["proof (prove)\nusing this:\n  basis_in \\<E> ?A \\<Longrightarrow> card ?A \\<le> card \\<E>\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<in>{card B |B. basis_in \\<E> B}. n \\<le> card \\<E>", "by auto"], ["proof (state)\nthis:\n  \\<forall>n\\<in>{card B |B. basis_in \\<E> B}. n \\<le> card \\<E>\n\ngoal (1 subgoal):\n 1. upper_rank_of \\<E> \\<le> card \\<E>", "then"], ["proof (chain)\npicking this:\n  \\<forall>n\\<in>{card B |B. basis_in \\<E> B}. n \\<le> card \\<E>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n\\<in>{card B |B. basis_in \\<E> B}. n \\<le> card \\<E>\n\ngoal (1 subgoal):\n 1. upper_rank_of \\<E> \\<le> card \\<E>", "unfolding upper_rank_of_def"], ["proof (prove)\nusing this:\n  \\<forall>n\\<in>{card B |B. basis_in \\<E> B}. n \\<le> card \\<E>\n\ngoal (1 subgoal):\n 1. Max {card B |B. basis_in \\<E> B} \\<le> card \\<E>", "using basis_in_ex[OF *] collect_basis_in_finite"], ["proof (prove)\nusing this:\n  \\<forall>n\\<in>{card B |B. basis_in \\<E> B}. n \\<le> card \\<E>\n  \\<exists>B. basis_in \\<E> B\n  finite (Collect (basis_in \\<E>))\n\ngoal (1 subgoal):\n 1. Max {card B |B. basis_in \\<E> B} \\<le> card \\<E>", "by auto"], ["proof (state)\nthis:\n  upper_rank_of \\<E> \\<le> card \\<E>\n\ngoal:\nNo subgoals!", "qed"], ["", "context\n  fixes \\<E>'\n  assumes **: \"\\<E>' \\<subseteq> \\<E>\"\nbegin"], ["", "interpretation \\<E>'\\<^sub>1: indep_system \\<E>' \"indep_in \\<E>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_system \\<E>' (indep_in \\<E>')", "using * **"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n  \\<E>' \\<subseteq> \\<E>\n\ngoal (1 subgoal):\n 1. indep_system \\<E>' (indep_in \\<E>')", "by auto"], ["", "interpretation \\<E>'\\<^sub>2: indep_system \\<E>' \"\\<E>.indep_in \\<E>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_system \\<E>' (\\<E>.indep_in \\<E>')", "using * **"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n  \\<E>' \\<subseteq> \\<E>\n\ngoal (1 subgoal):\n 1. indep_system \\<E>' (\\<E>.indep_in \\<E>')", "by auto"], ["", "lemma lower_rank_of_sub_cong:\n  shows \"\\<E>.lower_rank_of \\<E>' = lower_rank_of \\<E>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.lower_rank_of \\<E>' = lower_rank_of \\<E>'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<E>.lower_rank_of \\<E>' = lower_rank_of \\<E>'", "have \"\\<And>B. \\<E>'\\<^sub>1.basis B \\<longleftrightarrow> \\<E>'\\<^sub>2.basis B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>B. \\<E>'\\<^sub>1.basis B = \\<E>'\\<^sub>2.basis B", "using ** basis_in_sub_cong[OF *, of \\<E>']"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E>' \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.basis_in \\<E>' ?B = basis_in \\<E>' ?B\n\ngoal (1 subgoal):\n 1. \\<And>B. \\<E>'\\<^sub>1.basis B = \\<E>'\\<^sub>2.basis B", "unfolding basis_in_def \\<E>.basis_in_def"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E>' \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>'\\<^sub>2.basis ?B = \\<E>'\\<^sub>1.basis ?B\n\ngoal (1 subgoal):\n 1. \\<And>B. \\<E>'\\<^sub>1.basis B = \\<E>'\\<^sub>2.basis B", "by auto"], ["proof (state)\nthis:\n  \\<E>'\\<^sub>1.basis ?B = \\<E>'\\<^sub>2.basis ?B\n\ngoal (1 subgoal):\n 1. \\<E>.lower_rank_of \\<E>' = lower_rank_of \\<E>'", "then"], ["proof (chain)\npicking this:\n  \\<E>'\\<^sub>1.basis ?B = \\<E>'\\<^sub>2.basis ?B", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<E>'\\<^sub>1.basis ?B = \\<E>'\\<^sub>2.basis ?B\n\ngoal (1 subgoal):\n 1. \\<E>.lower_rank_of \\<E>' = lower_rank_of \\<E>'", "unfolding lower_rank_of_def \\<E>.lower_rank_of_def"], ["proof (prove)\nusing this:\n  \\<E>'\\<^sub>1.basis ?B = \\<E>'\\<^sub>2.basis ?B\n\ngoal (1 subgoal):\n 1. Min {card B |B. \\<E>.basis_in \\<E>' B} =\n    Min {card B |B. basis_in \\<E>' B}", "using basis_in_sub_cong[OF * **]"], ["proof (prove)\nusing this:\n  \\<E>'\\<^sub>1.basis ?B = \\<E>'\\<^sub>2.basis ?B\n  \\<E>.basis_in \\<E>' ?B = basis_in \\<E>' ?B\n\ngoal (1 subgoal):\n 1. Min {card B |B. \\<E>.basis_in \\<E>' B} =\n    Min {card B |B. basis_in \\<E>' B}", "by auto"], ["proof (state)\nthis:\n  \\<E>.lower_rank_of \\<E>' = lower_rank_of \\<E>'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma upper_rank_of_sub_cong:\n  shows \"\\<E>.upper_rank_of \\<E>' = upper_rank_of \\<E>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.upper_rank_of \\<E>' = upper_rank_of \\<E>'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<E>.upper_rank_of \\<E>' = upper_rank_of \\<E>'", "have \"\\<And>B. \\<E>'\\<^sub>1.basis B \\<longleftrightarrow> \\<E>'\\<^sub>2.basis B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>B. \\<E>'\\<^sub>1.basis B = \\<E>'\\<^sub>2.basis B", "using ** basis_in_sub_cong[OF *, of \\<E>']"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E>' \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.basis_in \\<E>' ?B = basis_in \\<E>' ?B\n\ngoal (1 subgoal):\n 1. \\<And>B. \\<E>'\\<^sub>1.basis B = \\<E>'\\<^sub>2.basis B", "unfolding basis_in_def \\<E>.basis_in_def"], ["proof (prove)\nusing this:\n  \\<E>' \\<subseteq> \\<E>\n  \\<E>' \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>'\\<^sub>2.basis ?B = \\<E>'\\<^sub>1.basis ?B\n\ngoal (1 subgoal):\n 1. \\<And>B. \\<E>'\\<^sub>1.basis B = \\<E>'\\<^sub>2.basis B", "by auto"], ["proof (state)\nthis:\n  \\<E>'\\<^sub>1.basis ?B = \\<E>'\\<^sub>2.basis ?B\n\ngoal (1 subgoal):\n 1. \\<E>.upper_rank_of \\<E>' = upper_rank_of \\<E>'", "then"], ["proof (chain)\npicking this:\n  \\<E>'\\<^sub>1.basis ?B = \\<E>'\\<^sub>2.basis ?B", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<E>'\\<^sub>1.basis ?B = \\<E>'\\<^sub>2.basis ?B\n\ngoal (1 subgoal):\n 1. \\<E>.upper_rank_of \\<E>' = upper_rank_of \\<E>'", "unfolding upper_rank_of_def \\<E>.upper_rank_of_def"], ["proof (prove)\nusing this:\n  \\<E>'\\<^sub>1.basis ?B = \\<E>'\\<^sub>2.basis ?B\n\ngoal (1 subgoal):\n 1. Max {card B |B. \\<E>.basis_in \\<E>' B} =\n    Max {card B |B. basis_in \\<E>' B}", "using basis_in_sub_cong[OF * **]"], ["proof (prove)\nusing this:\n  \\<E>'\\<^sub>1.basis ?B = \\<E>'\\<^sub>2.basis ?B\n  \\<E>.basis_in \\<E>' ?B = basis_in \\<E>' ?B\n\ngoal (1 subgoal):\n 1. Max {card B |B. \\<E>.basis_in \\<E>' B} =\n    Max {card B |B. basis_in \\<E>' B}", "by auto"], ["proof (state)\nthis:\n  \\<E>.upper_rank_of \\<E>' = upper_rank_of \\<E>'\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"], ["", "end"], ["", "end"]]}