{"file_name": "/home/qj213/afp-2021-10-22/thys/Matroids/Matroid.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Matroids", "problem_names": ["lemma card_subset_ex:\n  assumes \"finite A\" \"n \\<le> card A\"\n  shows \"\\<exists>B \\<subseteq> A. card B = n\"", "lemma augment:\n  assumes \"indep X\" \"indep Y\" \"card Y < card X\"\n  shows \"\\<exists>x \\<in> X - Y. indep (insert x Y)\"", "lemma augment_psubset:\n  assumes \"indep X\" \"indep Y\" \"Y \\<subset> X\"\n  shows \"\\<exists>x \\<in> X - Y. indep (insert x Y)\"", "lemma matroid_subset [simp, intro]:\n  assumes \"\\<E> \\<subseteq> carrier\"\n  shows \"matroid \\<E> (indep_in \\<E>)\"", "lemmas augment_aux_indep_in = \\<E>.augment_aux", "lemmas augment_indep_in = \\<E>.augment", "lemmas augment_psubset_indep_in = \\<E>.augment_psubset", "lemma basis_card:\n  assumes \"basis B\\<^sub>1\"\n  assumes \"basis B\\<^sub>2\"\n  shows \"card B\\<^sub>1 = card B\\<^sub>2\"", "lemma basis_indep_card:\n  assumes \"indep X\"\n  assumes \"basis B\"\n  shows \"card X \\<le> card B\"", "lemma basis_augment:\n  assumes \"basis B\\<^sub>1\" \"basis B\\<^sub>2\" \"x \\<in> B\\<^sub>1 - B\\<^sub>2\"\n  shows \"\\<exists>y \\<in> B\\<^sub>2 - B\\<^sub>1. basis (insert y (B\\<^sub>1 - {x}))\"", "lemmas basis_in_card = \\<E>.basis_card[OF basis_inD_aux[OF *] basis_inD_aux[OF *]]", "lemmas basis_in_indep_in_card = \\<E>.basis_indep_card[OF _ basis_inD_aux[OF *]]", "lemma basis_in_augment:\n  assumes \"basis_in \\<E> B\\<^sub>1\" \"basis_in \\<E> B\\<^sub>2\" \"x \\<in> B\\<^sub>1 - B\\<^sub>2\"\n  shows \"\\<exists>y \\<in> B\\<^sub>2 - B\\<^sub>1. basis_in \\<E> (insert y (B\\<^sub>1 - {x}))\"", "lemma circuit_elim:\n  assumes \"circuit C\\<^sub>1\" \"circuit C\\<^sub>2\" \"C\\<^sub>1 \\<noteq> C\\<^sub>2\" \"x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\"\n  shows \"\\<exists>C\\<^sub>3 \\<subseteq> (C\\<^sub>1 \\<union> C\\<^sub>2) - {x}. circuit C\\<^sub>3\"", "lemma min_dep_imp_supset_circuit:\n  assumes \"indep X\"\n  assumes \"circuit C\"\n  assumes \"C \\<subseteq> insert x X\"\n  shows \"x \\<in> C\"", "lemma min_dep_imp_ex1_supset_circuit:\n  assumes \"x \\<in> carrier\"\n  assumes \"indep X\"\n  assumes \"\\<not> indep (insert x X)\"\n  shows \"\\<exists>!C. circuit C \\<and> C \\<subseteq> insert x X\"", "lemma basis_ex1_supset_circuit:\n  assumes \"basis B\"\n  assumes \"x \\<in> carrier - B\"\n  shows \"\\<exists>!C. circuit C \\<and> C \\<subseteq> insert x B\"", "lemma circuit_iff_fund_circuit:\n  \"circuit C \\<longleftrightarrow> (\\<exists>x B. x \\<in> carrier - B \\<and> basis B \\<and> C = fund_circuit x B)\"", "lemma fund_circuitI:\n  assumes \"basis B\"\n  assumes \"x \\<in> carrier - B\"\n  assumes \"circuit C\"\n  assumes \"C \\<subseteq> insert x B\"\n  shows \"fund_circuit x B = C\"", "lemma fund_circuit_inI_aux: \"\\<E>.fund_circuit x B = fund_circuit_in \\<E> x B\"", "lemma circuit_in_elim:\n  assumes \"circuit_in \\<E> C\\<^sub>1\" \"circuit_in \\<E> C\\<^sub>2\" \"C\\<^sub>1 \\<noteq> C\\<^sub>2\" \"x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\"\n  shows \"\\<exists>C\\<^sub>3 \\<subseteq> (C\\<^sub>1 \\<union> C\\<^sub>2) - {x}. circuit_in \\<E> C\\<^sub>3\"", "lemmas min_dep_in_imp_supset_circuit_in = \\<E>.min_dep_imp_supset_circuit[OF _ circuit_inD_aux[OF *]]", "lemma min_dep_in_imp_ex1_supset_circuit_in:\n  assumes \"x \\<in> \\<E>\"\n  assumes \"indep_in \\<E> X\"\n  assumes \"\\<not> indep_in \\<E> (insert x X)\"\n  shows \"\\<exists>!C. circuit_in \\<E> C \\<and> C \\<subseteq> insert x X\"", "lemma basis_in_ex1_supset_circuit_in:\n  assumes \"basis_in \\<E> B\"\n  assumes \"x \\<in> \\<E> - B\"\n  shows \"\\<exists>!C. circuit_in \\<E> C \\<and> C \\<subseteq> insert x B\"", "lemma fund_circuit_inI:\n  assumes \"basis_in \\<E> B\"\n  assumes \"x \\<in> \\<E> - B\"\n  assumes \"circuit_in \\<E> C\"\n  assumes \"C \\<subseteq> insert x B\"\n  shows \"fund_circuit_in \\<E> x B = C\"", "lemma fund_circuit_in_sub_cong:\n  assumes \"\\<E>' \\<subseteq> \\<E>\"\n  assumes \"x \\<in> \\<E>' - B\"\n  assumes \"basis_in \\<E>' B\"\n  shows \"\\<E>.fund_circuit_in \\<E>' x B = fund_circuit_in \\<E>' x B\"", "lemmas rank_of_def = lower_rank_of_def", "lemmas rank_of_sub_cong = lower_rank_of_sub_cong", "lemmas rank_of_le = lower_rank_of_le", "lemma lower_rank_of_eq_upper_rank_of: \"lower_rank_of \\<E> = upper_rank_of \\<E>\"", "lemma rank_of_eq_card_basis_in:\n  assumes \"basis_in \\<E> B\"\n  shows \"rank_of \\<E> = card B\"", "lemma rank_of_indep_in_le:\n  assumes \"indep_in \\<E> X\"\n  shows \"card X \\<le> rank_of \\<E>\"", "lemma rank_of_mono:\n  assumes \"X \\<subseteq> Y\"\n  assumes \"Y \\<subseteq> carrier\"\n  shows \"rank_of X \\<le> rank_of Y\"", "lemma rank_of_insert_le:\n  assumes \"X \\<subseteq> carrier\"\n  assumes \"x \\<in> carrier\"\n  shows \"rank_of (insert x X) \\<le> Suc (rank_of X)\"", "lemma rank_of_Un_Int_le:\n  assumes \"X \\<subseteq> carrier\"\n  assumes \"Y \\<subseteq> carrier\"\n  shows \"rank_of (X \\<union> Y) + rank_of (X \\<inter> Y) \\<le> rank_of X + rank_of Y\"", "lemma rank_of_Un_absorbI:\n  assumes \"X \\<subseteq> carrier\" \"Y \\<subseteq> carrier\"\n  assumes \"\\<And>y. y \\<in> Y - X \\<Longrightarrow> rank_of (insert y X) = rank_of X\"\n  shows \"rank_of (X \\<union> Y) = rank_of X\"", "lemma indep_iff_rank_of:\n  assumes \"X \\<subseteq> carrier\"\n  shows \"indep X \\<longleftrightarrow> rank_of X = card X\"", "lemma basis_iff_rank_of:\n  assumes \"X \\<subseteq> carrier\"\n  shows \"basis X \\<longleftrightarrow> rank_of X = card X \\<and> rank_of X = rank_of carrier\"", "lemma circuit_iff_rank_of:\n  assumes \"X \\<subseteq> carrier\"\n  shows \"circuit X \\<longleftrightarrow> X \\<noteq> {} \\<and> (\\<forall>x \\<in> X. rank_of (X - {x}) = card (X - {x}) \\<and> card (X - {x}) = rank_of X)\"", "lemma indep_in_iff_rank_of:\n  assumes \"X \\<subseteq> \\<E>\"\n  shows \"indep_in \\<E> X \\<longleftrightarrow> rank_of X = card X\"", "lemma basis_in_iff_rank_of:\n  assumes \"X \\<subseteq> \\<E>\"\n  shows \"basis_in \\<E> X \\<longleftrightarrow> rank_of X = card X \\<and> rank_of X = rank_of \\<E>\"", "lemma circuit_in_iff_rank_of:\n  assumes \"X \\<subseteq> \\<E>\"\n  shows \"circuit_in \\<E> X \\<longleftrightarrow> X \\<noteq> {} \\<and> (\\<forall>x \\<in> X. rank_of (X - {x}) = card (X - {x}) \\<and> card (X - {x}) = rank_of X)\"", "lemma clI:\n  assumes \"x \\<in> carrier\"\n  assumes \"rank_of (insert x X) = rank_of X\"\n  shows \"x \\<in> cl X\"", "lemma cl_altdef:\n  assumes \"X \\<subseteq> carrier\"\n  shows \"cl X = \\<Union>{Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\"", "lemma cl_rank_of: \"x \\<in> cl X \\<Longrightarrow> rank_of (insert x X) = rank_of X\"", "lemma cl_subset_carrier: \"cl X \\<subseteq> carrier\"", "lemmas clD = cl_rank_of cl_subset_carrier", "lemma cl_subset:\n  assumes \"X \\<subseteq> carrier\"\n  shows \"X \\<subseteq> cl X\"", "lemma cl_mono:\n  assumes \"X \\<subseteq> Y\"\n  assumes \"Y \\<subseteq> carrier\"\n  shows \"cl X \\<subseteq> cl Y\"", "lemma cl_insert_absorb:\n  assumes \"X \\<subseteq> carrier\"\n  assumes \"x \\<in> cl X\"\n  shows \"cl (insert x X) = cl X\"", "lemma cl_cl_absorb:\n  assumes \"X \\<subseteq> carrier\"\n  shows \"cl (cl X) = cl X\"", "lemma cl_augment:\n  assumes \"X \\<subseteq> carrier\"\n  assumes \"x \\<in> carrier\"\n  assumes \"y \\<in> cl (insert x X) - cl X\"\n  shows \"x \\<in> cl (insert y X)\"", "lemma clI_insert:\n  assumes \"x \\<in> carrier\"\n  assumes \"indep X\"\n  assumes \"\\<not> indep (insert x X)\"\n  shows \"x \\<in> cl X\"", "lemma indep_in_carrier [simp]: \"indep_in carrier = indep\"", "lemma I_mono: \"I Y\" if \"Y \\<subseteq> X\" \"I X\" for X Y :: \"'a set\"", "lemma clI':\n  assumes \"I X\" \"x \\<in> carrier\" \"\\<not>I (insert x X)\"\n  shows   \"x \\<in> cl X\"", "lemma matroid_I: \"matroid carrier I\"", "lemma cl_eq_cl_in:\n  assumes \"X \\<subseteq> carrier\"\n  shows \"cl X = cl_in carrier X\"", "lemma cl_inI_aux: \"x \\<in> \\<E>.cl X \\<Longrightarrow> x \\<in> cl_in \\<E> X\"", "lemma cl_inD_aux: \"x \\<in> cl_in \\<E> X \\<Longrightarrow> x \\<in> \\<E>.cl X\"", "lemma cl_inI:\n  assumes \"X \\<subseteq> \\<E>\"\n  assumes \"x \\<in> \\<E>\"\n  assumes \"rank_of (insert x X) = rank_of X\"\n  shows \"x \\<in> cl_in \\<E> X\"", "lemma cl_in_altdef:\n  assumes \"X \\<subseteq> \\<E>\"\n  shows \"cl_in \\<E> X = \\<Union>{Y \\<in> Pow \\<E>. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\"", "lemma cl_in_subset_carrier: \"cl_in \\<E> X \\<subseteq> \\<E>\"", "lemma cl_in_rank_of:\n  assumes \"X \\<subseteq> \\<E>\"\n  assumes \"x \\<in> cl_in \\<E> X\"\n  shows \"rank_of (insert x X) = rank_of X\"", "lemmas cl_inD = cl_in_rank_of cl_in_subset_carrier", "lemma cl_in_subset:\n  assumes \"X \\<subseteq> \\<E>\"\n  shows \"X \\<subseteq> cl_in \\<E> X\"", "lemma cl_in_mono:\n  assumes \"X \\<subseteq> Y\"\n  assumes \"Y \\<subseteq> \\<E>\"\n  shows \"cl_in \\<E> X \\<subseteq> cl_in \\<E> Y\"", "lemma cl_in_insert_absorb:\n  assumes \"X \\<subseteq> \\<E>\"\n  assumes \"x \\<in> cl_in \\<E> X\"\n  shows \"cl_in \\<E> (insert x X) = cl_in \\<E> X\"", "lemma cl_in_augment:\n  assumes \"X \\<subseteq> \\<E>\"\n  assumes \"x \\<in> \\<E>\"\n  assumes \"y \\<in> cl_in \\<E> (insert x X) - cl_in \\<E> X\"\n  shows \"x \\<in> cl_in \\<E> (insert y X)\"", "lemmas cl_inI_insert = cl_inI_aux[OF \\<E>.clI_insert]", "lemma cl_in_subI:\n  assumes \"X \\<subseteq> \\<E>'\" \"\\<E>' \\<subseteq> \\<E>\" \"\\<E> \\<subseteq> carrier\"\n  shows \"cl_in \\<E>' X \\<subseteq> cl_in \\<E> X\"", "lemma cl_in_sub_cong:\n  assumes \"X \\<subseteq> \\<E>'\" \"\\<E>' \\<subseteq> \\<E>\"\n  shows \"\\<E>.cl_in \\<E>' X = cl_in \\<E>' X\""], "translations": [["", "lemma card_subset_ex:\n  assumes \"finite A\" \"n \\<le> card A\"\n  shows \"\\<exists>B \\<subseteq> A. card B = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A. card B = n", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  n \\<le> card A\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A. card B = n", "proof (induction A arbitrary: n rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n.\n       n \\<le> card {} \\<Longrightarrow> \\<exists>B\\<subseteq>{}. card B = n\n 2. \\<And>x F n.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>n.\n           n \\<le> card F \\<Longrightarrow>\n           \\<exists>B\\<subseteq>F. card B = n;\n        n \\<le> card (insert x F)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B\\<subseteq>insert x F. card B = n", "case (insert x A)"], ["proof (state)\nthis:\n  finite A\n  x \\<notin> A\n  ?n \\<le> card A \\<Longrightarrow> \\<exists>B\\<subseteq>A. card B = ?n\n  n \\<le> card (insert x A)\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       n \\<le> card {} \\<Longrightarrow> \\<exists>B\\<subseteq>{}. card B = n\n 2. \\<And>x F n.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>n.\n           n \\<le> card F \\<Longrightarrow>\n           \\<exists>B\\<subseteq>F. card B = n;\n        n \\<le> card (insert x F)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B\\<subseteq>insert x F. card B = n", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>insert x A. card B = n", "proof (cases n)"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> \\<exists>B\\<subseteq>insert x A. card B = n\n 2. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>B\\<subseteq>insert x A. card B = n", "case 0"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> \\<exists>B\\<subseteq>insert x A. card B = n\n 2. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>B\\<subseteq>insert x A. card B = n", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>insert x A. card B = n", "using card.empty"], ["proof (prove)\nusing this:\n  n = 0\n  card {} = 0\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>insert x A. card B = n", "by blast"], ["proof (state)\nthis:\n  \\<exists>B\\<subseteq>insert x A. card B = n\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>B\\<subseteq>insert x A. card B = n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>B\\<subseteq>insert x A. card B = n", "case (Suc k)"], ["proof (state)\nthis:\n  n = Suc k\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>B\\<subseteq>insert x A. card B = n", "then"], ["proof (chain)\npicking this:\n  n = Suc k", "have \"\\<exists>B \\<subseteq> A. card B = k\""], ["proof (prove)\nusing this:\n  n = Suc k\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A. card B = k", "using insert"], ["proof (prove)\nusing this:\n  n = Suc k\n  finite A\n  x \\<notin> A\n  ?n \\<le> card A \\<Longrightarrow> \\<exists>B\\<subseteq>A. card B = ?n\n  n \\<le> card (insert x A)\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A. card B = k", "by auto"], ["proof (state)\nthis:\n  \\<exists>B\\<subseteq>A. card B = k\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>B\\<subseteq>insert x A. card B = n", "then"], ["proof (chain)\npicking this:\n  \\<exists>B\\<subseteq>A. card B = k", "obtain B where \"B \\<subseteq> A\" \"card B = k\""], ["proof (prove)\nusing this:\n  \\<exists>B\\<subseteq>A. card B = k\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>B \\<subseteq> A; card B = k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B \\<subseteq> A\n  card B = k\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>B\\<subseteq>insert x A. card B = n", "moreover"], ["proof (state)\nthis:\n  B \\<subseteq> A\n  card B = k\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>B\\<subseteq>insert x A. card B = n", "from this"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  card B = k", "have \"finite B\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  card B = k\n\ngoal (1 subgoal):\n 1. finite B", "using insert.hyps finite_subset"], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  card B = k\n  finite A\n  x \\<notin> A\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite B", "by auto"], ["proof (state)\nthis:\n  finite B\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>B\\<subseteq>insert x A. card B = n", "ultimately"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  card B = k\n  finite B", "have \"card (insert x B) = n\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  card B = k\n  finite B\n\ngoal (1 subgoal):\n 1. card (insert x B) = n", "using Suc insert.hyps card_insert_disjoint"], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  card B = k\n  finite B\n  n = Suc k\n  finite A\n  x \\<notin> A\n  \\<lbrakk>finite ?A; ?x \\<notin> ?A\\<rbrakk>\n  \\<Longrightarrow> card (insert ?x ?A) = Suc (card ?A)\n\ngoal (1 subgoal):\n 1. card (insert x B) = n", "by fastforce"], ["proof (state)\nthis:\n  card (insert x B) = n\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>B\\<subseteq>insert x A. card B = n", "then"], ["proof (chain)\npicking this:\n  card (insert x B) = n", "show ?thesis"], ["proof (prove)\nusing this:\n  card (insert x B) = n\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>insert x A. card B = n", "using \\<open>B \\<subseteq> A\\<close>"], ["proof (prove)\nusing this:\n  card (insert x B) = n\n  B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>insert x A. card B = n", "by blast"], ["proof (state)\nthis:\n  \\<exists>B\\<subseteq>insert x A. card B = n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>B\\<subseteq>insert x A. card B = n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       n \\<le> card {} \\<Longrightarrow> \\<exists>B\\<subseteq>{}. card B = n", "qed auto"], ["", "locale matroid = indep_system +\n  assumes augment_aux:\n    \"indep X \\<Longrightarrow> indep Y \\<Longrightarrow> card X = Suc (card Y) \\<Longrightarrow> \\<exists>x \\<in> X - Y. indep (insert x Y)\"\nbegin"], ["", "lemma augment:\n  assumes \"indep X\" \"indep Y\" \"card Y < card X\"\n  shows \"\\<exists>x \\<in> X - Y. indep (insert x Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X - Y. indep (insert x Y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X - Y. indep (insert x Y)", "obtain X' where \"X' \\<subseteq> X\" \"card X' = Suc (card Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X'.\n        \\<lbrakk>X' \\<subseteq> X; card X' = Suc (card Y)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms card_subset_ex[of X \"Suc (card Y)\"] indep_finite"], ["proof (prove)\nusing this:\n  indep X\n  indep Y\n  card Y < card X\n  \\<lbrakk>finite X; Suc (card Y) \\<le> card X\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B\\<subseteq>X. card B = Suc (card Y)\n  indep ?A \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. (\\<And>X'.\n        \\<lbrakk>X' \\<subseteq> X; card X' = Suc (card Y)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  X' \\<subseteq> X\n  card X' = Suc (card Y)\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X - Y. indep (insert x Y)", "then"], ["proof (chain)\npicking this:\n  X' \\<subseteq> X\n  card X' = Suc (card Y)", "obtain x where \"x \\<in> X' - Y\"  \"indep (insert x Y)\""], ["proof (prove)\nusing this:\n  X' \\<subseteq> X\n  card X' = Suc (card Y)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> X' - Y; indep (insert x Y)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms augment_aux[of X' Y] indep_subset"], ["proof (prove)\nusing this:\n  X' \\<subseteq> X\n  card X' = Suc (card Y)\n  indep X\n  indep Y\n  card Y < card X\n  \\<lbrakk>indep X'; indep Y; card X' = Suc (card Y)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<in>X' - Y. indep (insert x Y)\n  \\<lbrakk>indep ?X; ?Y \\<subseteq> ?X\\<rbrakk> \\<Longrightarrow> indep ?Y\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> X' - Y; indep (insert x Y)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> X' - Y\n  indep (insert x Y)\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X - Y. indep (insert x Y)", "then"], ["proof (chain)\npicking this:\n  x \\<in> X' - Y\n  indep (insert x Y)", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> X' - Y\n  indep (insert x Y)\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X - Y. indep (insert x Y)", "using \\<open>X' \\<subseteq> X\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> X' - Y\n  indep (insert x Y)\n  X' \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X - Y. indep (insert x Y)", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>X - Y. indep (insert x Y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma augment_psubset:\n  assumes \"indep X\" \"indep Y\" \"Y \\<subset> X\"\n  shows \"\\<exists>x \\<in> X - Y. indep (insert x Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X - Y. indep (insert x Y)", "using assms augment psubset_card_mono indep_finite"], ["proof (prove)\nusing this:\n  indep X\n  indep Y\n  Y \\<subset> X\n  \\<lbrakk>indep ?X; indep ?Y; card ?Y < card ?X\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<in>?X - ?Y. indep (insert x ?Y)\n  \\<lbrakk>finite ?B; ?A \\<subset> ?B\\<rbrakk>\n  \\<Longrightarrow> card ?A < card ?B\n  indep ?A \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X - Y. indep (insert x Y)", "by blast"], ["", "subsection \\<open>Minors\\<close>"], ["", "text \\<open>\n  A subset of the ground set induces a matroid.\n\\<close>"], ["", "lemma matroid_subset [simp, intro]:\n  assumes \"\\<E> \\<subseteq> carrier\"\n  shows \"matroid \\<E> (indep_in \\<E>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matroid \\<E> (indep_in \\<E>)", "unfolding matroid_def matroid_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>) \\<and>\n    (\\<forall>X Y.\n        indep_in \\<E> X \\<longrightarrow>\n        indep_in \\<E> Y \\<longrightarrow>\n        card X = Suc (card Y) \\<longrightarrow>\n        (\\<exists>x\\<in>X - Y. indep_in \\<E> (insert x Y)))", "proof (safe, goal_cases indep_system augment)"], ["proof (state)\ngoal (2 subgoals):\n 1. indep_system \\<E> (indep_in \\<E>)\n 2. \\<And>X Y.\n       \\<lbrakk>indep_in \\<E> X; indep_in \\<E> Y;\n        card X = Suc (card Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>X - Y. indep_in \\<E> (insert x Y)", "case indep_system"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. indep_system \\<E> (indep_in \\<E>)\n 2. \\<And>X Y.\n       \\<lbrakk>indep_in \\<E> X; indep_in \\<E> Y;\n        card X = Suc (card Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>X - Y. indep_in \\<E> (insert x Y)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "using indep_system_subset[OF assms]"], ["proof (prove)\nusing this:\n  indep_system \\<E> (indep_in \\<E>)\n\ngoal (1 subgoal):\n 1. indep_system \\<E> (indep_in \\<E>)", "."], ["proof (state)\nthis:\n  indep_system \\<E> (indep_in \\<E>)\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>indep_in \\<E> X; indep_in \\<E> Y;\n        card X = Suc (card Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>X - Y. indep_in \\<E> (insert x Y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>indep_in \\<E> X; indep_in \\<E> Y;\n        card X = Suc (card Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>X - Y. indep_in \\<E> (insert x Y)", "case (augment X Y)"], ["proof (state)\nthis:\n  indep_in \\<E> X\n  indep_in \\<E> Y\n  card X = Suc (card Y)\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>indep_in \\<E> X; indep_in \\<E> Y;\n        card X = Suc (card Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>X - Y. indep_in \\<E> (insert x Y)", "then"], ["proof (chain)\npicking this:\n  indep_in \\<E> X\n  indep_in \\<E> Y\n  card X = Suc (card Y)", "show ?case"], ["proof (prove)\nusing this:\n  indep_in \\<E> X\n  indep_in \\<E> Y\n  card X = Suc (card Y)\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X - Y. indep_in \\<E> (insert x Y)", "using augment_aux[of X Y]"], ["proof (prove)\nusing this:\n  indep_in \\<E> X\n  indep_in \\<E> Y\n  card X = Suc (card Y)\n  \\<lbrakk>indep X; indep Y; card X = Suc (card Y)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<in>X - Y. indep (insert x Y)\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X - Y. indep_in \\<E> (insert x Y)", "unfolding indep_in_def"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E> \\<and> indep X\n  Y \\<subseteq> \\<E> \\<and> indep Y\n  card X = Suc (card Y)\n  \\<lbrakk>indep X; indep Y; card X = Suc (card Y)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<in>X - Y. indep (insert x Y)\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X - Y.\n       insert x Y \\<subseteq> \\<E> \\<and> indep (insert x Y)", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>X - Y. indep_in \\<E> (insert x Y)\n\ngoal:\nNo subgoals!", "qed"], ["", "context\n  fixes \\<E>\n  assumes \"\\<E> \\<subseteq> carrier\"\nbegin"], ["", "interpretation \\<E>: matroid \\<E> \"indep_in \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matroid \\<E> (indep_in \\<E>)", "using \\<open>\\<E> \\<subseteq> carrier\\<close>"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. matroid \\<E> (indep_in \\<E>)", "by auto"], ["", "lemmas augment_aux_indep_in = \\<E>.augment_aux"], ["", "lemmas augment_indep_in = \\<E>.augment"], ["", "lemmas augment_psubset_indep_in = \\<E>.augment_psubset"], ["", "end"], ["", "subsection \\<open>Bases\\<close>"], ["", "lemma basis_card:\n  assumes \"basis B\\<^sub>1\"\n  assumes \"basis B\\<^sub>2\"\n  shows \"card B\\<^sub>1 = card B\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card B\\<^sub>1 = card B\\<^sub>2", "proof (rule ccontr, goal_cases False)"], ["proof (state)\ngoal (1 subgoal):\n 1. card B\\<^sub>1 \\<noteq> card B\\<^sub>2 \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  card B\\<^sub>1 \\<noteq> card B\\<^sub>2\n\ngoal (1 subgoal):\n 1. card B\\<^sub>1 \\<noteq> card B\\<^sub>2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  card B\\<^sub>1 \\<noteq> card B\\<^sub>2", "have \"card B\\<^sub>1 < card B\\<^sub>2 \\<or> card B\\<^sub>2 < card B\\<^sub>1\""], ["proof (prove)\nusing this:\n  card B\\<^sub>1 \\<noteq> card B\\<^sub>2\n\ngoal (1 subgoal):\n 1. card B\\<^sub>1 < card B\\<^sub>2 \\<or> card B\\<^sub>2 < card B\\<^sub>1", "by auto"], ["proof (state)\nthis:\n  card B\\<^sub>1 < card B\\<^sub>2 \\<or> card B\\<^sub>2 < card B\\<^sub>1\n\ngoal (1 subgoal):\n 1. card B\\<^sub>1 \\<noteq> card B\\<^sub>2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  card B\\<^sub>1 < card B\\<^sub>2 \\<or> card B\\<^sub>2 < card B\\<^sub>1\n\ngoal (1 subgoal):\n 1. card B\\<^sub>1 \\<noteq> card B\\<^sub>2 \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  card B\\<^sub>1 < card B\\<^sub>2 \\<or> card B\\<^sub>2 < card B\\<^sub>1\n\ngoal (1 subgoal):\n 1. card B\\<^sub>1 \\<noteq> card B\\<^sub>2 \\<Longrightarrow> False", "fix B\\<^sub>1 B\\<^sub>2"], ["proof (state)\ngoal (1 subgoal):\n 1. card B\\<^sub>1 \\<noteq> card B\\<^sub>2 \\<Longrightarrow> False", "assume \"basis B\\<^sub>1\" \"basis B\\<^sub>2\" \"card B\\<^sub>1 < card B\\<^sub>2\""], ["proof (state)\nthis:\n  basis B\\<^sub>1\n  basis B\\<^sub>2\n  card B\\<^sub>1 < card B\\<^sub>2\n\ngoal (1 subgoal):\n 1. card B\\<^sub>1 \\<noteq> card B\\<^sub>2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  basis B\\<^sub>1\n  basis B\\<^sub>2\n  card B\\<^sub>1 < card B\\<^sub>2", "obtain x where \"x \\<in> B\\<^sub>2 - B\\<^sub>1\" \"indep (insert x B\\<^sub>1)\""], ["proof (prove)\nusing this:\n  basis B\\<^sub>1\n  basis B\\<^sub>2\n  card B\\<^sub>1 < card B\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> B\\<^sub>2 - B\\<^sub>1;\n         indep (insert x B\\<^sub>1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using augment basisD"], ["proof (prove)\nusing this:\n  basis B\\<^sub>1\n  basis B\\<^sub>2\n  card B\\<^sub>1 < card B\\<^sub>2\n  \\<lbrakk>indep ?X; indep ?Y; card ?Y < card ?X\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<in>?X - ?Y. indep (insert x ?Y)\n  basis ?X \\<Longrightarrow> indep ?X\n  \\<lbrakk>basis ?X; ?x \\<in> carrier - ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep (insert ?x ?X)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> B\\<^sub>2 - B\\<^sub>1;\n         indep (insert x B\\<^sub>1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> B\\<^sub>2 - B\\<^sub>1\n  indep (insert x B\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card B\\<^sub>1 \\<noteq> card B\\<^sub>2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<in> B\\<^sub>2 - B\\<^sub>1\n  indep (insert x B\\<^sub>1)", "have \"x \\<in> carrier - B\\<^sub>1\""], ["proof (prove)\nusing this:\n  x \\<in> B\\<^sub>2 - B\\<^sub>1\n  indep (insert x B\\<^sub>1)\n\ngoal (1 subgoal):\n 1. x \\<in> carrier - B\\<^sub>1", "using \\<open>basis B\\<^sub>1\\<close> basisD indep_subset_carrier"], ["proof (prove)\nusing this:\n  x \\<in> B\\<^sub>2 - B\\<^sub>1\n  indep (insert x B\\<^sub>1)\n  basis B\\<^sub>1\n  basis ?X \\<Longrightarrow> indep ?X\n  \\<lbrakk>basis ?X; ?x \\<in> carrier - ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep (insert ?x ?X)\n  indep ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. x \\<in> carrier - B\\<^sub>1", "by blast"], ["proof (state)\nthis:\n  x \\<in> carrier - B\\<^sub>1\n\ngoal (1 subgoal):\n 1. card B\\<^sub>1 \\<noteq> card B\\<^sub>2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<in> carrier - B\\<^sub>1", "have \"\\<not> indep (insert x B\\<^sub>1)\""], ["proof (prove)\nusing this:\n  x \\<in> carrier - B\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<not> indep (insert x B\\<^sub>1)", "using \\<open>basis B\\<^sub>1\\<close> basisD"], ["proof (prove)\nusing this:\n  x \\<in> carrier - B\\<^sub>1\n  basis B\\<^sub>1\n  basis ?X \\<Longrightarrow> indep ?X\n  \\<lbrakk>basis ?X; ?x \\<in> carrier - ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep (insert ?x ?X)\n\ngoal (1 subgoal):\n 1. \\<not> indep (insert x B\\<^sub>1)", "by auto"], ["proof (state)\nthis:\n  \\<not> indep (insert x B\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card B\\<^sub>1 \\<noteq> card B\\<^sub>2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> indep (insert x B\\<^sub>1)", "have \"False\""], ["proof (prove)\nusing this:\n  \\<not> indep (insert x B\\<^sub>1)\n\ngoal (1 subgoal):\n 1. False", "using \\<open>indep (insert x B\\<^sub>1)\\<close>"], ["proof (prove)\nusing this:\n  \\<not> indep (insert x B\\<^sub>1)\n  indep (insert x B\\<^sub>1)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. card B\\<^sub>1 \\<noteq> card B\\<^sub>2 \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>basis ?B\\<^sub>1'2; basis ?B\\<^sub>2'2;\n   card ?B\\<^sub>1'2 < card ?B\\<^sub>2'2\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. card B\\<^sub>1 \\<noteq> card B\\<^sub>2 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  card B\\<^sub>1 < card B\\<^sub>2 \\<or> card B\\<^sub>2 < card B\\<^sub>1\n  \\<lbrakk>basis ?B\\<^sub>1'2; basis ?B\\<^sub>2'2;\n   card ?B\\<^sub>1'2 < card ?B\\<^sub>2'2\\<rbrakk>\n  \\<Longrightarrow> False", "show ?case"], ["proof (prove)\nusing this:\n  card B\\<^sub>1 < card B\\<^sub>2 \\<or> card B\\<^sub>2 < card B\\<^sub>1\n  \\<lbrakk>basis ?B\\<^sub>1'2; basis ?B\\<^sub>2'2;\n   card ?B\\<^sub>1'2 < card ?B\\<^sub>2'2\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  card B\\<^sub>1 < card B\\<^sub>2 \\<or> card B\\<^sub>2 < card B\\<^sub>1\n  \\<lbrakk>basis ?B\\<^sub>1'2; basis ?B\\<^sub>2'2;\n   card ?B\\<^sub>1'2 < card ?B\\<^sub>2'2\\<rbrakk>\n  \\<Longrightarrow> False\n  basis B\\<^sub>1\n  basis B\\<^sub>2\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_indep_card:\n  assumes \"indep X\"\n  assumes \"basis B\"\n  shows \"card X \\<le> card B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card X \\<le> card B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card X \\<le> card B", "obtain B' where \"basis B'\" \"X \\<subseteq> B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        \\<lbrakk>basis B'; X \\<subseteq> B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms indep_imp_subset_basis"], ["proof (prove)\nusing this:\n  indep X\n  basis B\n  indep ?X \\<Longrightarrow> \\<exists>B. basis B \\<and> ?X \\<subseteq> B\n\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        \\<lbrakk>basis B'; X \\<subseteq> B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  basis B'\n  X \\<subseteq> B'\n\ngoal (1 subgoal):\n 1. card X \\<le> card B", "then"], ["proof (chain)\npicking this:\n  basis B'\n  X \\<subseteq> B'", "show ?thesis"], ["proof (prove)\nusing this:\n  basis B'\n  X \\<subseteq> B'\n\ngoal (1 subgoal):\n 1. card X \\<le> card B", "using assms basis_finite basis_card[of B B']"], ["proof (prove)\nusing this:\n  basis B'\n  X \\<subseteq> B'\n  indep X\n  basis B\n  basis ?A \\<Longrightarrow> finite ?A\n  \\<lbrakk>basis B; basis B'\\<rbrakk> \\<Longrightarrow> card B = card B'\n\ngoal (1 subgoal):\n 1. card X \\<le> card B", "by (auto intro: card_mono)"], ["proof (state)\nthis:\n  card X \\<le> card B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_augment:\n  assumes \"basis B\\<^sub>1\" \"basis B\\<^sub>2\" \"x \\<in> B\\<^sub>1 - B\\<^sub>2\"\n  shows \"\\<exists>y \\<in> B\\<^sub>2 - B\\<^sub>1. basis (insert y (B\\<^sub>1 - {x}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>B\\<^sub>2 - B\\<^sub>1. basis (insert y (B\\<^sub>1 - {x}))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>B\\<^sub>2 - B\\<^sub>1. basis (insert y (B\\<^sub>1 - {x}))", "let ?B\\<^sub>1 = \"B\\<^sub>1 - {x}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>B\\<^sub>2 - B\\<^sub>1. basis (insert y (B\\<^sub>1 - {x}))", "have \"card ?B\\<^sub>1 < card B\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (B\\<^sub>1 - {x}) < card B\\<^sub>2", "using assms basis_card[of B\\<^sub>1 B\\<^sub>2] card_Diff1_less[OF basis_finite, of B\\<^sub>1]"], ["proof (prove)\nusing this:\n  basis B\\<^sub>1\n  basis B\\<^sub>2\n  x \\<in> B\\<^sub>1 - B\\<^sub>2\n  \\<lbrakk>basis B\\<^sub>1; basis B\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> card B\\<^sub>1 = card B\\<^sub>2\n  \\<lbrakk>basis B\\<^sub>1; ?x \\<in> B\\<^sub>1\\<rbrakk>\n  \\<Longrightarrow> card (B\\<^sub>1 - {?x}) < card B\\<^sub>1\n\ngoal (1 subgoal):\n 1. card (B\\<^sub>1 - {x}) < card B\\<^sub>2", "by auto"], ["proof (state)\nthis:\n  card (B\\<^sub>1 - {x}) < card B\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>B\\<^sub>2 - B\\<^sub>1. basis (insert y (B\\<^sub>1 - {x}))", "moreover"], ["proof (state)\nthis:\n  card (B\\<^sub>1 - {x}) < card B\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>B\\<^sub>2 - B\\<^sub>1. basis (insert y (B\\<^sub>1 - {x}))", "have \"indep ?B\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep (B\\<^sub>1 - {x})", "using assms basis_indep[of B\\<^sub>1] indep_subset[of B\\<^sub>1 ?B\\<^sub>1]"], ["proof (prove)\nusing this:\n  basis B\\<^sub>1\n  basis B\\<^sub>2\n  x \\<in> B\\<^sub>1 - B\\<^sub>2\n  basis B\\<^sub>1 \\<Longrightarrow> indep B\\<^sub>1\n  \\<lbrakk>indep B\\<^sub>1; B\\<^sub>1 - {x} \\<subseteq> B\\<^sub>1\\<rbrakk>\n  \\<Longrightarrow> indep (B\\<^sub>1 - {x})\n\ngoal (1 subgoal):\n 1. indep (B\\<^sub>1 - {x})", "by auto"], ["proof (state)\nthis:\n  indep (B\\<^sub>1 - {x})\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>B\\<^sub>2 - B\\<^sub>1. basis (insert y (B\\<^sub>1 - {x}))", "ultimately"], ["proof (chain)\npicking this:\n  card (B\\<^sub>1 - {x}) < card B\\<^sub>2\n  indep (B\\<^sub>1 - {x})", "obtain y where y: \"y \\<in> B\\<^sub>2 - ?B\\<^sub>1\" \"indep (insert y ?B\\<^sub>1)\""], ["proof (prove)\nusing this:\n  card (B\\<^sub>1 - {x}) < card B\\<^sub>2\n  indep (B\\<^sub>1 - {x})\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> B\\<^sub>2 - (B\\<^sub>1 - {x});\n         indep (insert y (B\\<^sub>1 - {x}))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms augment[of B\\<^sub>2 ?B\\<^sub>1] basis_indep"], ["proof (prove)\nusing this:\n  card (B\\<^sub>1 - {x}) < card B\\<^sub>2\n  indep (B\\<^sub>1 - {x})\n  basis B\\<^sub>1\n  basis B\\<^sub>2\n  x \\<in> B\\<^sub>1 - B\\<^sub>2\n  \\<lbrakk>indep B\\<^sub>2; indep (B\\<^sub>1 - {x});\n   card (B\\<^sub>1 - {x}) < card B\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xa\\<in>B\\<^sub>2 - (B\\<^sub>1 - {x}).\n                       indep (insert xa (B\\<^sub>1 - {x}))\n  basis ?X \\<Longrightarrow> indep ?X\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> B\\<^sub>2 - (B\\<^sub>1 - {x});\n         indep (insert y (B\\<^sub>1 - {x}))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> B\\<^sub>2 - (B\\<^sub>1 - {x})\n  indep (insert y (B\\<^sub>1 - {x}))\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>B\\<^sub>2 - B\\<^sub>1. basis (insert y (B\\<^sub>1 - {x}))", "let ?B\\<^sub>1' = \"insert y ?B\\<^sub>1\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>B\\<^sub>2 - B\\<^sub>1. basis (insert y (B\\<^sub>1 - {x}))", "have \"basis ?B\\<^sub>1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis (insert y (B\\<^sub>1 - {x}))", "using \\<open>indep ?B\\<^sub>1'\\<close>"], ["proof (prove)\nusing this:\n  indep (insert y (B\\<^sub>1 - {x}))\n\ngoal (1 subgoal):\n 1. basis (insert y (B\\<^sub>1 - {x}))", "proof (rule basisI, goal_cases \"insert\")"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> carrier - insert y (B\\<^sub>1 - {x}) \\<Longrightarrow>\n       \\<not> indep (insert xa (insert y (B\\<^sub>1 - {x})))", "case (insert x)"], ["proof (state)\nthis:\n  x \\<in> carrier - insert y (B\\<^sub>1 - {x})\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> carrier - insert y (B\\<^sub>1 - {x}) \\<Longrightarrow>\n       \\<not> indep (insert xa (insert y (B\\<^sub>1 - {x})))", "have \"card (insert x ?B\\<^sub>1') > card B\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card B\\<^sub>1 < card (insert x (insert y (B\\<^sub>1 - {x})))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card B\\<^sub>1 < card (insert x (insert y (B\\<^sub>1 - {x})))", "have \"card (insert x ?B\\<^sub>1') = Suc (card ?B\\<^sub>1')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (insert x (insert y (B\\<^sub>1 - {x}))) =\n    Suc (card (insert y (B\\<^sub>1 - {x})))", "using insert card.insert_remove[OF indep_finite, of ?B\\<^sub>1'] y"], ["proof (prove)\nusing this:\n  x \\<in> carrier - insert y (B\\<^sub>1 - {x})\n  indep (insert y (B\\<^sub>1 - {x})) \\<Longrightarrow>\n  card (insert ?x (insert y (B\\<^sub>1 - {x}))) =\n  Suc (card (insert y (B\\<^sub>1 - {x}) - {?x}))\n  y \\<in> B\\<^sub>2 - (B\\<^sub>1 - {x})\n  indep (insert y (B\\<^sub>1 - {x}))\n\ngoal (1 subgoal):\n 1. card (insert x (insert y (B\\<^sub>1 - {x}))) =\n    Suc (card (insert y (B\\<^sub>1 - {x})))", "by auto"], ["proof (state)\nthis:\n  card (insert x (insert y (B\\<^sub>1 - {x}))) =\n  Suc (card (insert y (B\\<^sub>1 - {x})))\n\ngoal (1 subgoal):\n 1. card B\\<^sub>1 < card (insert x (insert y (B\\<^sub>1 - {x})))", "also"], ["proof (state)\nthis:\n  card (insert x (insert y (B\\<^sub>1 - {x}))) =\n  Suc (card (insert y (B\\<^sub>1 - {x})))\n\ngoal (1 subgoal):\n 1. card B\\<^sub>1 < card (insert x (insert y (B\\<^sub>1 - {x})))", "have \"\\<dots> = Suc (Suc (card ?B\\<^sub>1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (card (insert y (B\\<^sub>1 - {x}))) =\n    Suc (Suc (card (B\\<^sub>1 - {x})))", "using card.insert_remove[OF indep_finite, of ?B\\<^sub>1] \\<open>indep ?B\\<^sub>1\\<close> y"], ["proof (prove)\nusing this:\n  indep (B\\<^sub>1 - {x}) \\<Longrightarrow>\n  card (insert ?x (B\\<^sub>1 - {x})) = Suc (card (B\\<^sub>1 - {x} - {?x}))\n  indep (B\\<^sub>1 - {x})\n  y \\<in> B\\<^sub>2 - (B\\<^sub>1 - {x})\n  indep (insert y (B\\<^sub>1 - {x}))\n\ngoal (1 subgoal):\n 1. Suc (card (insert y (B\\<^sub>1 - {x}))) =\n    Suc (Suc (card (B\\<^sub>1 - {x})))", "by auto"], ["proof (state)\nthis:\n  Suc (card (insert y (B\\<^sub>1 - {x}))) =\n  Suc (Suc (card (B\\<^sub>1 - {x})))\n\ngoal (1 subgoal):\n 1. card B\\<^sub>1 < card (insert x (insert y (B\\<^sub>1 - {x})))", "also"], ["proof (state)\nthis:\n  Suc (card (insert y (B\\<^sub>1 - {x}))) =\n  Suc (Suc (card (B\\<^sub>1 - {x})))\n\ngoal (1 subgoal):\n 1. card B\\<^sub>1 < card (insert x (insert y (B\\<^sub>1 - {x})))", "have \"\\<dots> = Suc (card B\\<^sub>1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Suc (card (B\\<^sub>1 - {x}))) = Suc (card B\\<^sub>1)", "using assms basis_finite[of B\\<^sub>1] card.remove[of B\\<^sub>1]"], ["proof (prove)\nusing this:\n  basis B\\<^sub>1\n  basis B\\<^sub>2\n  x \\<in> B\\<^sub>1 - B\\<^sub>2\n  basis B\\<^sub>1 \\<Longrightarrow> finite B\\<^sub>1\n  \\<lbrakk>finite B\\<^sub>1; ?x \\<in> B\\<^sub>1\\<rbrakk>\n  \\<Longrightarrow> card B\\<^sub>1 = Suc (card (B\\<^sub>1 - {?x}))\n\ngoal (1 subgoal):\n 1. Suc (Suc (card (B\\<^sub>1 - {x}))) = Suc (card B\\<^sub>1)", "by auto"], ["proof (state)\nthis:\n  Suc (Suc (card (B\\<^sub>1 - {x}))) = Suc (card B\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card B\\<^sub>1 < card (insert x (insert y (B\\<^sub>1 - {x})))", "finally"], ["proof (chain)\npicking this:\n  card (insert x (insert y (B\\<^sub>1 - {x}))) = Suc (card B\\<^sub>1)", "show ?thesis"], ["proof (prove)\nusing this:\n  card (insert x (insert y (B\\<^sub>1 - {x}))) = Suc (card B\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card B\\<^sub>1 < card (insert x (insert y (B\\<^sub>1 - {x})))", "by auto"], ["proof (state)\nthis:\n  card B\\<^sub>1 < card (insert x (insert y (B\\<^sub>1 - {x})))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card B\\<^sub>1 < card (insert x (insert y (B\\<^sub>1 - {x})))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> carrier - insert y (B\\<^sub>1 - {x}) \\<Longrightarrow>\n       \\<not> indep (insert xa (insert y (B\\<^sub>1 - {x})))", "then"], ["proof (chain)\npicking this:\n  card B\\<^sub>1 < card (insert x (insert y (B\\<^sub>1 - {x})))", "have \"\\<not>indep (insert x (insert y ?B\\<^sub>1))\""], ["proof (prove)\nusing this:\n  card B\\<^sub>1 < card (insert x (insert y (B\\<^sub>1 - {x})))\n\ngoal (1 subgoal):\n 1. \\<not> indep (insert x (insert y (B\\<^sub>1 - {x})))", "using assms basis_indep_card[of \"insert x (insert y ?B\\<^sub>1)\" B\\<^sub>1]"], ["proof (prove)\nusing this:\n  card B\\<^sub>1 < card (insert x (insert y (B\\<^sub>1 - {x})))\n  basis B\\<^sub>1\n  basis B\\<^sub>2\n  x \\<in> B\\<^sub>1 - B\\<^sub>2\n  \\<lbrakk>indep (insert x (insert y (B\\<^sub>1 - {x})));\n   basis B\\<^sub>1\\<rbrakk>\n  \\<Longrightarrow> card (insert x (insert y (B\\<^sub>1 - {x})))\n                    \\<le> card B\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<not> indep (insert x (insert y (B\\<^sub>1 - {x})))", "by auto"], ["proof (state)\nthis:\n  \\<not> indep (insert x (insert y (B\\<^sub>1 - {x})))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> carrier - insert y (B\\<^sub>1 - {x}) \\<Longrightarrow>\n       \\<not> indep (insert xa (insert y (B\\<^sub>1 - {x})))", "moreover"], ["proof (state)\nthis:\n  \\<not> indep (insert x (insert y (B\\<^sub>1 - {x})))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> carrier - insert y (B\\<^sub>1 - {x}) \\<Longrightarrow>\n       \\<not> indep (insert xa (insert y (B\\<^sub>1 - {x})))", "have \"insert x (insert y ?B\\<^sub>1) \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x (insert y (B\\<^sub>1 - {x})) \\<subseteq> carrier", "using assms insert y basis_finite indep_subset_carrier"], ["proof (prove)\nusing this:\n  basis B\\<^sub>1\n  basis B\\<^sub>2\n  x \\<in> B\\<^sub>1 - B\\<^sub>2\n  x \\<in> carrier - insert y (B\\<^sub>1 - {x})\n  y \\<in> B\\<^sub>2 - (B\\<^sub>1 - {x})\n  indep (insert y (B\\<^sub>1 - {x}))\n  basis ?A \\<Longrightarrow> finite ?A\n  indep ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. insert x (insert y (B\\<^sub>1 - {x})) \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  insert x (insert y (B\\<^sub>1 - {x})) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> carrier - insert y (B\\<^sub>1 - {x}) \\<Longrightarrow>\n       \\<not> indep (insert xa (insert y (B\\<^sub>1 - {x})))", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> indep (insert x (insert y (B\\<^sub>1 - {x})))\n  insert x (insert y (B\\<^sub>1 - {x})) \\<subseteq> carrier", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> indep (insert x (insert y (B\\<^sub>1 - {x})))\n  insert x (insert y (B\\<^sub>1 - {x})) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<not> indep (insert x (insert y (B\\<^sub>1 - {x})))", "by auto"], ["proof (state)\nthis:\n  \\<not> indep (insert x (insert y (B\\<^sub>1 - {x})))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  basis (insert y (B\\<^sub>1 - {x}))\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>B\\<^sub>2 - B\\<^sub>1. basis (insert y (B\\<^sub>1 - {x}))", "then"], ["proof (chain)\npicking this:\n  basis (insert y (B\\<^sub>1 - {x}))", "show ?thesis"], ["proof (prove)\nusing this:\n  basis (insert y (B\\<^sub>1 - {x}))\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>B\\<^sub>2 - B\\<^sub>1. basis (insert y (B\\<^sub>1 - {x}))", "using assms y"], ["proof (prove)\nusing this:\n  basis (insert y (B\\<^sub>1 - {x}))\n  basis B\\<^sub>1\n  basis B\\<^sub>2\n  x \\<in> B\\<^sub>1 - B\\<^sub>2\n  y \\<in> B\\<^sub>2 - (B\\<^sub>1 - {x})\n  indep (insert y (B\\<^sub>1 - {x}))\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>B\\<^sub>2 - B\\<^sub>1. basis (insert y (B\\<^sub>1 - {x}))", "by auto"], ["proof (state)\nthis:\n  \\<exists>y\\<in>B\\<^sub>2 - B\\<^sub>1. basis (insert y (B\\<^sub>1 - {x}))\n\ngoal:\nNo subgoals!", "qed"], ["", "context\n  fixes \\<E>\n  assumes *: \"\\<E> \\<subseteq> carrier\"\nbegin"], ["", "interpretation \\<E>: matroid \\<E> \"indep_in \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matroid \\<E> (indep_in \\<E>)", "using \\<open>\\<E> \\<subseteq> carrier\\<close>"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. matroid \\<E> (indep_in \\<E>)", "by auto"], ["", "lemmas basis_in_card = \\<E>.basis_card[OF basis_inD_aux[OF *] basis_inD_aux[OF *]]"], ["", "lemmas basis_in_indep_in_card = \\<E>.basis_indep_card[OF _ basis_inD_aux[OF *]]"], ["", "lemma basis_in_augment:\n  assumes \"basis_in \\<E> B\\<^sub>1\" \"basis_in \\<E> B\\<^sub>2\" \"x \\<in> B\\<^sub>1 - B\\<^sub>2\"\n  shows \"\\<exists>y \\<in> B\\<^sub>2 - B\\<^sub>1. basis_in \\<E> (insert y (B\\<^sub>1 - {x}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>B\\<^sub>2 - B\\<^sub>1.\n       basis_in \\<E> (insert y (B\\<^sub>1 - {x}))", "using assms \\<E>.basis_augment"], ["proof (prove)\nusing this:\n  basis_in \\<E> B\\<^sub>1\n  basis_in \\<E> B\\<^sub>2\n  x \\<in> B\\<^sub>1 - B\\<^sub>2\n  \\<lbrakk>\\<E>.basis ?B\\<^sub>1; \\<E>.basis ?B\\<^sub>2;\n   ?x \\<in> ?B\\<^sub>1 - ?B\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y\\<in>?B\\<^sub>2 - ?B\\<^sub>1.\n                       \\<E>.basis (insert y (?B\\<^sub>1 - {?x}))\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>B\\<^sub>2 - B\\<^sub>1.\n       basis_in \\<E> (insert y (B\\<^sub>1 - {x}))", "unfolding basis_in_def"], ["proof (prove)\nusing this:\n  \\<E>.basis B\\<^sub>1\n  \\<E>.basis B\\<^sub>2\n  x \\<in> B\\<^sub>1 - B\\<^sub>2\n  \\<lbrakk>\\<E>.basis ?B\\<^sub>1; \\<E>.basis ?B\\<^sub>2;\n   ?x \\<in> ?B\\<^sub>1 - ?B\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y\\<in>?B\\<^sub>2 - ?B\\<^sub>1.\n                       \\<E>.basis (insert y (?B\\<^sub>1 - {?x}))\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>B\\<^sub>2 - B\\<^sub>1.\n       \\<E>.basis (insert y (B\\<^sub>1 - {x}))", "by auto"], ["", "end"], ["", "subsection \\<open>Circuits\\<close>"], ["", "lemma circuit_elim:\n  assumes \"circuit C\\<^sub>1\" \"circuit C\\<^sub>2\" \"C\\<^sub>1 \\<noteq> C\\<^sub>2\" \"x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\"\n  shows \"\\<exists>C\\<^sub>3 \\<subseteq> (C\\<^sub>1 \\<union> C\\<^sub>2) - {x}. circuit C\\<^sub>3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "let ?C = \"(C\\<^sub>1 \\<union> C\\<^sub>2) - {x}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "let ?carrier = \"C\\<^sub>1 \\<union> C\\<^sub>2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "have assms': \"circuit_in carrier C\\<^sub>1\" \"circuit_in carrier C\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circuit_in carrier C\\<^sub>1 &&& circuit_in carrier C\\<^sub>2", "using assms circuit_imp_circuit_in"], ["proof (prove)\nusing this:\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n  circuit ?C \\<Longrightarrow> circuit_in carrier ?C\n\ngoal (1 subgoal):\n 1. circuit_in carrier C\\<^sub>1 &&& circuit_in carrier C\\<^sub>2", "by auto"], ["proof (state)\nthis:\n  circuit_in carrier C\\<^sub>1\n  circuit_in carrier C\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "have \"?C \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C\\<^sub>1 \\<union> C\\<^sub>2 - {x} \\<subseteq> carrier", "using assms circuit_subset_carrier"], ["proof (prove)\nusing this:\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n  circuit ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. C\\<^sub>1 \\<union> C\\<^sub>2 - {x} \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  C\\<^sub>1 \\<union> C\\<^sub>2 - {x} \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "proof (cases \"indep ?C\")"], ["proof (state)\ngoal (2 subgoals):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3\n 2. \\<not> indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "case False"], ["proof (state)\nthis:\n  \\<not> indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})\n\ngoal (2 subgoals):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3\n 2. \\<not> indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "then"], ["proof (chain)\npicking this:\n  \\<not> indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})\n\ngoal (1 subgoal):\n 1. \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "using dep_iff_supset_circuit \\<open>?C \\<subseteq> carrier\\<close>"], ["proof (prove)\nusing this:\n  \\<not> indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})\n  ?X \\<subseteq> carrier \\<Longrightarrow>\n  (\\<not> indep ?X) = (\\<exists>C. circuit C \\<and> C \\<subseteq> ?X)\n  C\\<^sub>1 \\<union> C\\<^sub>2 - {x} \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "by auto"], ["proof (state)\nthis:\n  \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n     circuit C\\<^sub>3\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "case True"], ["proof (state)\nthis:\n  indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "then"], ["proof (chain)\npicking this:\n  indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})", "have \"indep_in ?carrier ?C\""], ["proof (prove)\nusing this:\n  indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})\n\ngoal (1 subgoal):\n 1. indep_in (C\\<^sub>1 \\<union> C\\<^sub>2)\n     (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})", "using \\<open>?C \\<subseteq> carrier\\<close>"], ["proof (prove)\nusing this:\n  indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})\n  C\\<^sub>1 \\<union> C\\<^sub>2 - {x} \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. indep_in (C\\<^sub>1 \\<union> C\\<^sub>2)\n     (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})", "by (auto intro: indep_inI)"], ["proof (state)\nthis:\n  indep_in (C\\<^sub>1 \\<union> C\\<^sub>2)\n   (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "have *: \"?carrier \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C\\<^sub>1 \\<union> C\\<^sub>2 \\<subseteq> carrier", "using assms circuit_subset_carrier"], ["proof (prove)\nusing this:\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n  circuit ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. C\\<^sub>1 \\<union> C\\<^sub>2 \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  C\\<^sub>1 \\<union> C\\<^sub>2 \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "obtain y where y: \"y \\<in> C\\<^sub>2\" \"y \\<notin> C\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> C\\<^sub>2; y \\<notin> C\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms circuit_subset_eq"], ["proof (prove)\nusing this:\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n  \\<lbrakk>circuit ?C\\<^sub>1; circuit ?C\\<^sub>2;\n   ?C\\<^sub>1 \\<subseteq> ?C\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?C\\<^sub>1 = ?C\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> C\\<^sub>2; y \\<notin> C\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  y \\<in> C\\<^sub>2\n  y \\<notin> C\\<^sub>1\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "then"], ["proof (chain)\npicking this:\n  y \\<in> C\\<^sub>2\n  y \\<notin> C\\<^sub>1", "have \"indep_in ?carrier (C\\<^sub>2 - {y})\""], ["proof (prove)\nusing this:\n  y \\<in> C\\<^sub>2\n  y \\<notin> C\\<^sub>1\n\ngoal (1 subgoal):\n 1. indep_in (C\\<^sub>1 \\<union> C\\<^sub>2) (C\\<^sub>2 - {y})", "using assms' circuit_in_min_dep_in[OF * circuit_in_supI[OF *, of C\\<^sub>2]]"], ["proof (prove)\nusing this:\n  y \\<in> C\\<^sub>2\n  y \\<notin> C\\<^sub>1\n  circuit_in carrier C\\<^sub>1\n  circuit_in carrier C\\<^sub>2\n  \\<lbrakk>carrier \\<subseteq> carrier;\n   C\\<^sub>2 \\<subseteq> C\\<^sub>1 \\<union> C\\<^sub>2;\n   circuit_in carrier C\\<^sub>2; ?x \\<in> C\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> indep_in (C\\<^sub>1 \\<union> C\\<^sub>2)\n                     (C\\<^sub>2 - {?x})\n\ngoal (1 subgoal):\n 1. indep_in (C\\<^sub>1 \\<union> C\\<^sub>2) (C\\<^sub>2 - {y})", "by auto"], ["proof (state)\nthis:\n  indep_in (C\\<^sub>1 \\<union> C\\<^sub>2) (C\\<^sub>2 - {y})\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "then"], ["proof (chain)\npicking this:\n  indep_in (C\\<^sub>1 \\<union> C\\<^sub>2) (C\\<^sub>2 - {y})", "obtain B where B: \"basis_in ?carrier B\" \"C\\<^sub>2 - {y} \\<subseteq> B\""], ["proof (prove)\nusing this:\n  indep_in (C\\<^sub>1 \\<union> C\\<^sub>2) (C\\<^sub>2 - {y})\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>basis_in (C\\<^sub>1 \\<union> C\\<^sub>2) B;\n         C\\<^sub>2 - {y} \\<subseteq> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using * assms indep_in_imp_subset_basis_in[of ?carrier \"C\\<^sub>2 - {y}\"]"], ["proof (prove)\nusing this:\n  indep_in (C\\<^sub>1 \\<union> C\\<^sub>2) (C\\<^sub>2 - {y})\n  C\\<^sub>1 \\<union> C\\<^sub>2 \\<subseteq> carrier\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n  \\<lbrakk>C\\<^sub>1 \\<union> C\\<^sub>2 \\<subseteq> carrier;\n   indep_in (C\\<^sub>1 \\<union> C\\<^sub>2) (C\\<^sub>2 - {y})\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B.\n                       basis_in (C\\<^sub>1 \\<union> C\\<^sub>2) B \\<and>\n                       C\\<^sub>2 - {y} \\<subseteq> B\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>basis_in (C\\<^sub>1 \\<union> C\\<^sub>2) B;\n         C\\<^sub>2 - {y} \\<subseteq> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  basis_in (C\\<^sub>1 \\<union> C\\<^sub>2) B\n  C\\<^sub>2 - {y} \\<subseteq> B\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "have \"y \\<notin> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<notin> B", "proof (rule ccontr, goal_cases False)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> B \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> y \\<notin> B\n\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> B \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> y \\<notin> B", "have \"C\\<^sub>2 \\<subseteq> B\""], ["proof (prove)\nusing this:\n  \\<not> y \\<notin> B\n\ngoal (1 subgoal):\n 1. C\\<^sub>2 \\<subseteq> B", "using B"], ["proof (prove)\nusing this:\n  \\<not> y \\<notin> B\n  basis_in (C\\<^sub>1 \\<union> C\\<^sub>2) B\n  C\\<^sub>2 - {y} \\<subseteq> B\n\ngoal (1 subgoal):\n 1. C\\<^sub>2 \\<subseteq> B", "by auto"], ["proof (state)\nthis:\n  C\\<^sub>2 \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> B \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  C\\<^sub>2 \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> B \\<Longrightarrow> False", "have \"circuit_in ?carrier C\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circuit_in (C\\<^sub>1 \\<union> C\\<^sub>2) C\\<^sub>2", "using * assms' circuit_in_supI"], ["proof (prove)\nusing this:\n  C\\<^sub>1 \\<union> C\\<^sub>2 \\<subseteq> carrier\n  circuit_in carrier C\\<^sub>1\n  circuit_in carrier C\\<^sub>2\n  \\<lbrakk>?\\<E>' \\<subseteq> ?\\<E>; ?\\<E> \\<subseteq> carrier;\n   ?C \\<subseteq> ?\\<E>'; circuit_in ?\\<E> ?C\\<rbrakk>\n  \\<Longrightarrow> circuit_in ?\\<E>' ?C\n\ngoal (1 subgoal):\n 1. circuit_in (C\\<^sub>1 \\<union> C\\<^sub>2) C\\<^sub>2", "by auto"], ["proof (state)\nthis:\n  circuit_in (C\\<^sub>1 \\<union> C\\<^sub>2) C\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> B \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  C\\<^sub>2 \\<subseteq> B\n  circuit_in (C\\<^sub>1 \\<union> C\\<^sub>2) C\\<^sub>2", "have \"\\<not> indep_in ?carrier B\""], ["proof (prove)\nusing this:\n  C\\<^sub>2 \\<subseteq> B\n  circuit_in (C\\<^sub>1 \\<union> C\\<^sub>2) C\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<not> indep_in (C\\<^sub>1 \\<union> C\\<^sub>2) B", "using B basis_in_subset_carrier[OF *] supset_circuit_in_imp_dep_in[OF *]"], ["proof (prove)\nusing this:\n  C\\<^sub>2 \\<subseteq> B\n  circuit_in (C\\<^sub>1 \\<union> C\\<^sub>2) C\\<^sub>2\n  basis_in (C\\<^sub>1 \\<union> C\\<^sub>2) B\n  C\\<^sub>2 - {y} \\<subseteq> B\n  basis_in (C\\<^sub>1 \\<union> C\\<^sub>2) ?X \\<Longrightarrow>\n  ?X \\<subseteq> C\\<^sub>1 \\<union> C\\<^sub>2\n  circuit_in (C\\<^sub>1 \\<union> C\\<^sub>2) ?C \\<and>\n  ?C \\<subseteq> ?X \\<Longrightarrow>\n  \\<not> indep_in (C\\<^sub>1 \\<union> C\\<^sub>2) ?X\n\ngoal (1 subgoal):\n 1. \\<not> indep_in (C\\<^sub>1 \\<union> C\\<^sub>2) B", "by auto"], ["proof (state)\nthis:\n  \\<not> indep_in (C\\<^sub>1 \\<union> C\\<^sub>2) B\n\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> B \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> indep_in (C\\<^sub>1 \\<union> C\\<^sub>2) B", "show False"], ["proof (prove)\nusing this:\n  \\<not> indep_in (C\\<^sub>1 \\<union> C\\<^sub>2) B\n\ngoal (1 subgoal):\n 1. False", "using assms B basis_in_indep_in[OF *]"], ["proof (prove)\nusing this:\n  \\<not> indep_in (C\\<^sub>1 \\<union> C\\<^sub>2) B\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n  basis_in (C\\<^sub>1 \\<union> C\\<^sub>2) B\n  C\\<^sub>2 - {y} \\<subseteq> B\n  basis_in (C\\<^sub>1 \\<union> C\\<^sub>2) ?X \\<Longrightarrow>\n  indep_in (C\\<^sub>1 \\<union> C\\<^sub>2) ?X\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<notin> B\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "have \"C\\<^sub>1 - B \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C\\<^sub>1 - B \\<noteq> {}", "proof (rule ccontr, goal_cases False)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> C\\<^sub>1 - B \\<noteq> {} \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> C\\<^sub>1 - B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> C\\<^sub>1 - B \\<noteq> {} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> C\\<^sub>1 - B \\<noteq> {}", "have \"C\\<^sub>1 - (C\\<^sub>1 \\<inter> B) = {}\""], ["proof (prove)\nusing this:\n  \\<not> C\\<^sub>1 - B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. C\\<^sub>1 - C\\<^sub>1 \\<inter> B = {}", "by auto"], ["proof (state)\nthis:\n  C\\<^sub>1 - C\\<^sub>1 \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. \\<not> C\\<^sub>1 - B \\<noteq> {} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  C\\<^sub>1 - C\\<^sub>1 \\<inter> B = {}", "have \"C\\<^sub>1 = C\\<^sub>1 \\<inter> B\""], ["proof (prove)\nusing this:\n  C\\<^sub>1 - C\\<^sub>1 \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. C\\<^sub>1 = C\\<^sub>1 \\<inter> B", "using assms circuit_subset_eq"], ["proof (prove)\nusing this:\n  C\\<^sub>1 - C\\<^sub>1 \\<inter> B = {}\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n  \\<lbrakk>circuit ?C\\<^sub>1; circuit ?C\\<^sub>2;\n   ?C\\<^sub>1 \\<subseteq> ?C\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?C\\<^sub>1 = ?C\\<^sub>2\n\ngoal (1 subgoal):\n 1. C\\<^sub>1 = C\\<^sub>1 \\<inter> B", "by auto"], ["proof (state)\nthis:\n  C\\<^sub>1 = C\\<^sub>1 \\<inter> B\n\ngoal (1 subgoal):\n 1. \\<not> C\\<^sub>1 - B \\<noteq> {} \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  C\\<^sub>1 = C\\<^sub>1 \\<inter> B\n\ngoal (1 subgoal):\n 1. \\<not> C\\<^sub>1 - B \\<noteq> {} \\<Longrightarrow> False", "have \"indep (C\\<^sub>1 \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<inter> B)", "using assms B basis_in_indep_in[OF *] indep_in_subset[OF *, of B \"C\\<^sub>1 \\<inter> B\"] indep_in_indep"], ["proof (prove)\nusing this:\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n  basis_in (C\\<^sub>1 \\<union> C\\<^sub>2) B\n  C\\<^sub>2 - {y} \\<subseteq> B\n  basis_in (C\\<^sub>1 \\<union> C\\<^sub>2) ?X \\<Longrightarrow>\n  indep_in (C\\<^sub>1 \\<union> C\\<^sub>2) ?X\n  \\<lbrakk>indep_in (C\\<^sub>1 \\<union> C\\<^sub>2) B;\n   C\\<^sub>1 \\<inter> B \\<subseteq> B\\<rbrakk>\n  \\<Longrightarrow> indep_in (C\\<^sub>1 \\<union> C\\<^sub>2)\n                     (C\\<^sub>1 \\<inter> B)\n  indep_in ?\\<E> ?X \\<Longrightarrow> indep ?X\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<inter> B)", "by auto"], ["proof (state)\nthis:\n  indep (C\\<^sub>1 \\<inter> B)\n\ngoal (1 subgoal):\n 1. \\<not> C\\<^sub>1 - B \\<noteq> {} \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  C\\<^sub>1 = C\\<^sub>1 \\<inter> B\n  indep (C\\<^sub>1 \\<inter> B)", "show ?case"], ["proof (prove)\nusing this:\n  C\\<^sub>1 = C\\<^sub>1 \\<inter> B\n  indep (C\\<^sub>1 \\<inter> B)\n\ngoal (1 subgoal):\n 1. False", "using assms circuitD"], ["proof (prove)\nusing this:\n  C\\<^sub>1 = C\\<^sub>1 \\<inter> B\n  indep (C\\<^sub>1 \\<inter> B)\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n  circuit ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n  circuit ?X \\<Longrightarrow> \\<not> indep ?X\n  \\<lbrakk>circuit ?X; ?x \\<in> ?X\\<rbrakk>\n  \\<Longrightarrow> indep (?X - {?x})\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  C\\<^sub>1 - B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "then"], ["proof (chain)\npicking this:\n  C\\<^sub>1 - B \\<noteq> {}", "obtain z where z: \"z \\<in> C\\<^sub>1\" \"z \\<notin> B\""], ["proof (prove)\nusing this:\n  C\\<^sub>1 - B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<in> C\\<^sub>1; z \\<notin> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z \\<in> C\\<^sub>1\n  z \\<notin> B\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "have \"y \\<noteq> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<noteq> z", "using y z"], ["proof (prove)\nusing this:\n  y \\<in> C\\<^sub>2\n  y \\<notin> C\\<^sub>1\n  z \\<in> C\\<^sub>1\n  z \\<notin> B\n\ngoal (1 subgoal):\n 1. y \\<noteq> z", "by auto"], ["proof (state)\nthis:\n  y \\<noteq> z\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "have \"x \\<in> C\\<^sub>1\" \"x \\<in> C\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> C\\<^sub>1 &&& x \\<in> C\\<^sub>2", "using assms"], ["proof (prove)\nusing this:\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n\ngoal (1 subgoal):\n 1. x \\<in> C\\<^sub>1 &&& x \\<in> C\\<^sub>2", "by auto"], ["proof (state)\nthis:\n  x \\<in> C\\<^sub>1\n  x \\<in> C\\<^sub>2\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "have \"finite ?carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (C\\<^sub>1 \\<union> C\\<^sub>2)", "using assms carrier_finite finite_subset"], ["proof (prove)\nusing this:\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n  finite carrier\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite (C\\<^sub>1 \\<union> C\\<^sub>2)", "by auto"], ["proof (state)\nthis:\n  finite (C\\<^sub>1 \\<union> C\\<^sub>2)\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "have \"card B \\<le> card (?carrier - {y, z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card B \\<le> card (C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z})", "proof (rule card_mono)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z})\n 2. B \\<subseteq> C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z}", "show \"finite (C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z})", "using \\<open>finite ?carrier\\<close>"], ["proof (prove)\nusing this:\n  finite (C\\<^sub>1 \\<union> C\\<^sub>2)\n\ngoal (1 subgoal):\n 1. finite (C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z})", "by auto"], ["proof (state)\nthis:\n  finite (C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z})\n\ngoal (1 subgoal):\n 1. B \\<subseteq> C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<subseteq> C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z}", "show \"B \\<subseteq> C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z}", "using B basis_in_subset_carrier[OF *, of B] \\<open>y \\<notin> B\\<close> \\<open>z \\<notin> B\\<close>"], ["proof (prove)\nusing this:\n  basis_in (C\\<^sub>1 \\<union> C\\<^sub>2) B\n  C\\<^sub>2 - {y} \\<subseteq> B\n  basis_in (C\\<^sub>1 \\<union> C\\<^sub>2) B \\<Longrightarrow>\n  B \\<subseteq> C\\<^sub>1 \\<union> C\\<^sub>2\n  y \\<notin> B\n  z \\<notin> B\n\ngoal (1 subgoal):\n 1. B \\<subseteq> C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z}", "by auto"], ["proof (state)\nthis:\n  B \\<subseteq> C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card B \\<le> card (C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z})\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "also"], ["proof (state)\nthis:\n  card B \\<le> card (C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z})\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "have \"\\<dots> = card ?carrier - 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z}) =\n    card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2", "using \\<open>finite ?carrier\\<close> \\<open>y \\<in> C\\<^sub>2\\<close> \\<open>z \\<in> C\\<^sub>1\\<close> \\<open>y \\<noteq> z\\<close> card_Diff_subset_Int"], ["proof (prove)\nusing this:\n  finite (C\\<^sub>1 \\<union> C\\<^sub>2)\n  y \\<in> C\\<^sub>2\n  z \\<in> C\\<^sub>1\n  y \\<noteq> z\n  finite (?A \\<inter> ?B) \\<Longrightarrow>\n  card (?A - ?B) = card ?A - card (?A \\<inter> ?B)\n\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z}) =\n    card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2", "by auto"], ["proof (state)\nthis:\n  card (C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z}) =\n  card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "also"], ["proof (state)\nthis:\n  card (C\\<^sub>1 \\<union> C\\<^sub>2 - {y, z}) =\n  card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "have \"\\<dots> < card ?carrier - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n    < card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n    < card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1", "have \"card ?carrier = card C\\<^sub>1 + card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) =\n    card C\\<^sub>1 + card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)", "using assms \\<open>finite ?carrier\\<close> card_Un_Int[of C\\<^sub>1 C\\<^sub>2]"], ["proof (prove)\nusing this:\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n  finite (C\\<^sub>1 \\<union> C\\<^sub>2)\n  \\<lbrakk>finite C\\<^sub>1; finite C\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> card C\\<^sub>1 + card C\\<^sub>2 =\n                    card (C\\<^sub>1 \\<union> C\\<^sub>2) +\n                    card (C\\<^sub>1 \\<inter> C\\<^sub>2)\n\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) =\n    card C\\<^sub>1 + card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)", "by auto"], ["proof (state)\nthis:\n  card (C\\<^sub>1 \\<union> C\\<^sub>2) =\n  card C\\<^sub>1 + card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)\n\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n    < card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1", "also"], ["proof (state)\nthis:\n  card (C\\<^sub>1 \\<union> C\\<^sub>2) =\n  card C\\<^sub>1 + card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)\n\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n    < card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1", "have \"\\<dots> = card C\\<^sub>1 + (card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card C\\<^sub>1 + card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2) =\n    card C\\<^sub>1 + (card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2))", "using assms \\<open>finite ?carrier\\<close> card_mono[of C\\<^sub>2]"], ["proof (prove)\nusing this:\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n  finite (C\\<^sub>1 \\<union> C\\<^sub>2)\n  \\<lbrakk>finite C\\<^sub>2; ?A \\<subseteq> C\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> card ?A \\<le> card C\\<^sub>2\n\ngoal (1 subgoal):\n 1. card C\\<^sub>1 + card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2) =\n    card C\\<^sub>1 + (card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2))", "by auto"], ["proof (state)\nthis:\n  card C\\<^sub>1 + card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2) =\n  card C\\<^sub>1 + (card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2))\n\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n    < card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1", "also"], ["proof (state)\nthis:\n  card C\\<^sub>1 + card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2) =\n  card C\\<^sub>1 + (card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2))\n\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n    < card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1", "have \"\\<dots> = card C\\<^sub>1 + card (C\\<^sub>2 - C\\<^sub>1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card C\\<^sub>1 +\n    (card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)) =\n    card C\\<^sub>1 + card (C\\<^sub>2 - C\\<^sub>1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card C\\<^sub>1 +\n    (card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)) =\n    card C\\<^sub>1 + card (C\\<^sub>2 - C\\<^sub>1)", "have \"card (C\\<^sub>2 - C\\<^sub>1) = card C\\<^sub>2 - card (C\\<^sub>2 \\<inter> C\\<^sub>1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (C\\<^sub>2 - C\\<^sub>1) =\n    card C\\<^sub>2 - card (C\\<^sub>2 \\<inter> C\\<^sub>1)", "using assms \\<open>finite ?carrier\\<close> card_Diff_subset_Int[of C\\<^sub>2 C\\<^sub>1]"], ["proof (prove)\nusing this:\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n  finite (C\\<^sub>1 \\<union> C\\<^sub>2)\n  finite (C\\<^sub>2 \\<inter> C\\<^sub>1) \\<Longrightarrow>\n  card (C\\<^sub>2 - C\\<^sub>1) =\n  card C\\<^sub>2 - card (C\\<^sub>2 \\<inter> C\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card (C\\<^sub>2 - C\\<^sub>1) =\n    card C\\<^sub>2 - card (C\\<^sub>2 \\<inter> C\\<^sub>1)", "by auto"], ["proof (state)\nthis:\n  card (C\\<^sub>2 - C\\<^sub>1) =\n  card C\\<^sub>2 - card (C\\<^sub>2 \\<inter> C\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card C\\<^sub>1 +\n    (card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)) =\n    card C\\<^sub>1 + card (C\\<^sub>2 - C\\<^sub>1)", "also"], ["proof (state)\nthis:\n  card (C\\<^sub>2 - C\\<^sub>1) =\n  card C\\<^sub>2 - card (C\\<^sub>2 \\<inter> C\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card C\\<^sub>1 +\n    (card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)) =\n    card C\\<^sub>1 + card (C\\<^sub>2 - C\\<^sub>1)", "have \"\\<dots> = card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card C\\<^sub>2 - card (C\\<^sub>2 \\<inter> C\\<^sub>1) =\n    card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)", "by (simp add: inf_commute)"], ["proof (state)\nthis:\n  card C\\<^sub>2 - card (C\\<^sub>2 \\<inter> C\\<^sub>1) =\n  card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)\n\ngoal (1 subgoal):\n 1. card C\\<^sub>1 +\n    (card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)) =\n    card C\\<^sub>1 + card (C\\<^sub>2 - C\\<^sub>1)", "finally"], ["proof (chain)\npicking this:\n  card (C\\<^sub>2 - C\\<^sub>1) =\n  card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  card (C\\<^sub>2 - C\\<^sub>1) =\n  card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)\n\ngoal (1 subgoal):\n 1. card C\\<^sub>1 +\n    (card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)) =\n    card C\\<^sub>1 + card (C\\<^sub>2 - C\\<^sub>1)", "by auto"], ["proof (state)\nthis:\n  card C\\<^sub>1 + (card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)) =\n  card C\\<^sub>1 + card (C\\<^sub>2 - C\\<^sub>1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card C\\<^sub>1 + (card C\\<^sub>2 - card (C\\<^sub>1 \\<inter> C\\<^sub>2)) =\n  card C\\<^sub>1 + card (C\\<^sub>2 - C\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n    < card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1", "finally"], ["proof (chain)\npicking this:\n  card (C\\<^sub>1 \\<union> C\\<^sub>2) =\n  card C\\<^sub>1 + card (C\\<^sub>2 - C\\<^sub>1)", "have \"card (C\\<^sub>1 \\<union> C\\<^sub>2) = card C\\<^sub>1 + card (C\\<^sub>2 - C\\<^sub>1)\""], ["proof (prove)\nusing this:\n  card (C\\<^sub>1 \\<union> C\\<^sub>2) =\n  card C\\<^sub>1 + card (C\\<^sub>2 - C\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) =\n    card C\\<^sub>1 + card (C\\<^sub>2 - C\\<^sub>1)", "."], ["proof (state)\nthis:\n  card (C\\<^sub>1 \\<union> C\\<^sub>2) =\n  card C\\<^sub>1 + card (C\\<^sub>2 - C\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n    < card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1", "moreover"], ["proof (state)\nthis:\n  card (C\\<^sub>1 \\<union> C\\<^sub>2) =\n  card C\\<^sub>1 + card (C\\<^sub>2 - C\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n    < card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1", "have \"card C\\<^sub>1 > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < card C\\<^sub>1", "using assms circuit_nonempty \\<open>finite ?carrier\\<close>"], ["proof (prove)\nusing this:\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n  circuit ?X \\<Longrightarrow> ?X \\<noteq> {}\n  finite (C\\<^sub>1 \\<union> C\\<^sub>2)\n\ngoal (1 subgoal):\n 1. 0 < card C\\<^sub>1", "by auto"], ["proof (state)\nthis:\n  0 < card C\\<^sub>1\n\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n    < card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1", "moreover"], ["proof (state)\nthis:\n  0 < card C\\<^sub>1\n\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n    < card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1", "have \"card (C\\<^sub>2 - C\\<^sub>1) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < card (C\\<^sub>2 - C\\<^sub>1)", "using assms \\<open>finite ?carrier\\<close> \\<open>y \\<in> C\\<^sub>2\\<close> \\<open>y \\<notin> C\\<^sub>1\\<close>"], ["proof (prove)\nusing this:\n  circuit C\\<^sub>1\n  circuit C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n  finite (C\\<^sub>1 \\<union> C\\<^sub>2)\n  y \\<in> C\\<^sub>2\n  y \\<notin> C\\<^sub>1\n\ngoal (1 subgoal):\n 1. 0 < card (C\\<^sub>2 - C\\<^sub>1)", "by auto"], ["proof (state)\nthis:\n  0 < card (C\\<^sub>2 - C\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n    < card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1", "ultimately"], ["proof (chain)\npicking this:\n  card (C\\<^sub>1 \\<union> C\\<^sub>2) =\n  card C\\<^sub>1 + card (C\\<^sub>2 - C\\<^sub>1)\n  0 < card C\\<^sub>1\n  0 < card (C\\<^sub>2 - C\\<^sub>1)", "show ?thesis"], ["proof (prove)\nusing this:\n  card (C\\<^sub>1 \\<union> C\\<^sub>2) =\n  card C\\<^sub>1 + card (C\\<^sub>2 - C\\<^sub>1)\n  0 < card C\\<^sub>1\n  0 < card (C\\<^sub>2 - C\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n    < card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1", "by auto"], ["proof (state)\nthis:\n  card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n  < card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n  < card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "also"], ["proof (state)\nthis:\n  card (C\\<^sub>1 \\<union> C\\<^sub>2) - 2\n  < card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "have \"\\<dots> = card ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1 =\n    card (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})", "using \\<open>finite ?carrier\\<close> card_Diff_singleton \\<open>x \\<in> C\\<^sub>1\\<close> \\<open>x \\<in> C\\<^sub>2\\<close>"], ["proof (prove)\nusing this:\n  finite (C\\<^sub>1 \\<union> C\\<^sub>2)\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> card (?A - {?x}) = card ?A - 1\n  x \\<in> C\\<^sub>1\n  x \\<in> C\\<^sub>2\n\ngoal (1 subgoal):\n 1. card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1 =\n    card (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})", "by auto"], ["proof (state)\nthis:\n  card (C\\<^sub>1 \\<union> C\\<^sub>2) - 1 =\n  card (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "finally"], ["proof (chain)\npicking this:\n  card B < card (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})", "have \"card B < card ?C\""], ["proof (prove)\nusing this:\n  card B < card (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})\n\ngoal (1 subgoal):\n 1. card B < card (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})", "."], ["proof (state)\nthis:\n  card B < card (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "then"], ["proof (chain)\npicking this:\n  card B < card (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})", "have False"], ["proof (prove)\nusing this:\n  card B < card (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})\n\ngoal (1 subgoal):\n 1. False", "using basis_in_indep_in_card[OF *, of ?C B] B \\<open>indep_in ?carrier ?C\\<close>"], ["proof (prove)\nusing this:\n  card B < card (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})\n  \\<lbrakk>indep_in (C\\<^sub>1 \\<union> C\\<^sub>2)\n            (C\\<^sub>1 \\<union> C\\<^sub>2 - {x});\n   basis_in (C\\<^sub>1 \\<union> C\\<^sub>2) B\\<rbrakk>\n  \\<Longrightarrow> card (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<le> card B\n  basis_in (C\\<^sub>1 \\<union> C\\<^sub>2) B\n  C\\<^sub>2 - {y} \\<subseteq> B\n  indep_in (C\\<^sub>1 \\<union> C\\<^sub>2)\n   (C\\<^sub>1 \\<union> C\\<^sub>2 - {x})\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. indep (C\\<^sub>1 \\<union> C\\<^sub>2 - {x}) \\<Longrightarrow>\n    \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "then"], ["proof (chain)\npicking this:\n  False", "show ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit C\\<^sub>3", "by auto"], ["proof (state)\nthis:\n  \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n     circuit C\\<^sub>3\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n     circuit C\\<^sub>3\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma min_dep_imp_supset_circuit:\n  assumes \"indep X\"\n  assumes \"circuit C\"\n  assumes \"C \\<subseteq> insert x X\"\n  shows \"x \\<in> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> C", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> C \\<Longrightarrow> False", "assume \"x \\<notin> C\""], ["proof (state)\nthis:\n  x \\<notin> C\n\ngoal (1 subgoal):\n 1. x \\<notin> C \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<notin> C", "have \"C \\<subseteq> X\""], ["proof (prove)\nusing this:\n  x \\<notin> C\n\ngoal (1 subgoal):\n 1. C \\<subseteq> X", "using assms"], ["proof (prove)\nusing this:\n  x \\<notin> C\n  indep X\n  circuit C\n  C \\<subseteq> insert x X\n\ngoal (1 subgoal):\n 1. C \\<subseteq> X", "by auto"], ["proof (state)\nthis:\n  C \\<subseteq> X\n\ngoal (1 subgoal):\n 1. x \\<notin> C \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  C \\<subseteq> X", "have \"indep C\""], ["proof (prove)\nusing this:\n  C \\<subseteq> X\n\ngoal (1 subgoal):\n 1. indep C", "using assms indep_subset"], ["proof (prove)\nusing this:\n  C \\<subseteq> X\n  indep X\n  circuit C\n  C \\<subseteq> insert x X\n  \\<lbrakk>indep ?X; ?Y \\<subseteq> ?X\\<rbrakk> \\<Longrightarrow> indep ?Y\n\ngoal (1 subgoal):\n 1. indep C", "by auto"], ["proof (state)\nthis:\n  indep C\n\ngoal (1 subgoal):\n 1. x \\<notin> C \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  indep C", "show False"], ["proof (prove)\nusing this:\n  indep C\n\ngoal (1 subgoal):\n 1. False", "using assms circuitD"], ["proof (prove)\nusing this:\n  indep C\n  indep X\n  circuit C\n  C \\<subseteq> insert x X\n  circuit ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n  circuit ?X \\<Longrightarrow> \\<not> indep ?X\n  \\<lbrakk>circuit ?X; ?x \\<in> ?X\\<rbrakk>\n  \\<Longrightarrow> indep (?X - {?x})\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma min_dep_imp_ex1_supset_circuit:\n  assumes \"x \\<in> carrier\"\n  assumes \"indep X\"\n  assumes \"\\<not> indep (insert x X)\"\n  shows \"\\<exists>!C. circuit C \\<and> C \\<subseteq> insert x X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!C. circuit C \\<and> C \\<subseteq> insert x X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!C. circuit C \\<and> C \\<subseteq> insert x X", "obtain C where C: \"circuit C\" \"C \\<subseteq> insert x X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>circuit C; C \\<subseteq> insert x X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms indep_subset_carrier dep_iff_supset_circuit"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n  indep X\n  \\<not> indep (insert x X)\n  indep ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n  ?X \\<subseteq> carrier \\<Longrightarrow>\n  (\\<not> indep ?X) = (\\<exists>C. circuit C \\<and> C \\<subseteq> ?X)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>circuit C; C \\<subseteq> insert x X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  circuit C\n  C \\<subseteq> insert x X\n\ngoal (1 subgoal):\n 1. \\<exists>!C. circuit C \\<and> C \\<subseteq> insert x X", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!C. circuit C \\<and> C \\<subseteq> insert x X", "proof (rule ex1I, goal_cases ex unique)"], ["proof (state)\ngoal (2 subgoals):\n 1. circuit ?a \\<and> ?a \\<subseteq> insert x X\n 2. \\<And>C.\n       circuit C \\<and> C \\<subseteq> insert x X \\<Longrightarrow> C = ?a", "show \"circuit C \\<and> C \\<subseteq> insert x X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circuit C \\<and> C \\<subseteq> insert x X", "using C"], ["proof (prove)\nusing this:\n  circuit C\n  C \\<subseteq> insert x X\n\ngoal (1 subgoal):\n 1. circuit C \\<and> C \\<subseteq> insert x X", "by auto"], ["proof (state)\nthis:\n  circuit C \\<and> C \\<subseteq> insert x X\n\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       circuit Ca \\<and> Ca \\<subseteq> insert x X \\<Longrightarrow> Ca = C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       circuit Ca \\<and> Ca \\<subseteq> insert x X \\<Longrightarrow> Ca = C", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       circuit Ca \\<and> Ca \\<subseteq> insert x X \\<Longrightarrow> Ca = C", "fix C'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       circuit Ca \\<and> Ca \\<subseteq> insert x X \\<Longrightarrow> Ca = C", "assume C': \"circuit C'\" \"C' \\<subseteq> insert x X\""], ["proof (state)\nthis:\n  circuit C'\n  C' \\<subseteq> insert x X\n\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       circuit Ca \\<and> Ca \\<subseteq> insert x X \\<Longrightarrow> Ca = C", "have \"C' = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C' = C", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. C' \\<noteq> C \\<Longrightarrow> False", "assume \"C' \\<noteq> C\""], ["proof (state)\nthis:\n  C' \\<noteq> C\n\ngoal (1 subgoal):\n 1. C' \\<noteq> C \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  C' \\<noteq> C\n\ngoal (1 subgoal):\n 1. C' \\<noteq> C \\<Longrightarrow> False", "have \"x \\<in> C' \\<inter> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> C' \\<inter> C", "using C C' assms min_dep_imp_supset_circuit"], ["proof (prove)\nusing this:\n  circuit C\n  C \\<subseteq> insert x X\n  circuit C'\n  C' \\<subseteq> insert x X\n  x \\<in> carrier\n  indep X\n  \\<not> indep (insert x X)\n  \\<lbrakk>indep ?X; circuit ?C; ?C \\<subseteq> insert ?x ?X\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> ?C\n\ngoal (1 subgoal):\n 1. x \\<in> C' \\<inter> C", "by auto"], ["proof (state)\nthis:\n  x \\<in> C' \\<inter> C\n\ngoal (1 subgoal):\n 1. C' \\<noteq> C \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  C' \\<noteq> C\n  x \\<in> C' \\<inter> C", "have \"\\<not> indep (C' \\<union> C - {x})\""], ["proof (prove)\nusing this:\n  C' \\<noteq> C\n  x \\<in> C' \\<inter> C\n\ngoal (1 subgoal):\n 1. \\<not> indep (C' \\<union> C - {x})", "using circuit_elim[OF C(1) C'(1), of x] supset_circuit_imp_dep[of _ \"C' \\<union> C - {x}\"]"], ["proof (prove)\nusing this:\n  C' \\<noteq> C\n  x \\<in> C' \\<inter> C\n  \\<lbrakk>C \\<noteq> C'; x \\<in> C \\<inter> C'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>C\\<^sub>3\\<subseteq>C \\<union> C' - {x}.\n                       circuit C\\<^sub>3\n  circuit ?C \\<and> ?C \\<subseteq> C' \\<union> C - {x} \\<Longrightarrow>\n  \\<not> indep (C' \\<union> C - {x})\n\ngoal (1 subgoal):\n 1. \\<not> indep (C' \\<union> C - {x})", "by auto"], ["proof (state)\nthis:\n  \\<not> indep (C' \\<union> C - {x})\n\ngoal (1 subgoal):\n 1. C' \\<noteq> C \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<not> indep (C' \\<union> C - {x})\n\ngoal (1 subgoal):\n 1. C' \\<noteq> C \\<Longrightarrow> False", "have \"C' \\<union> C - {x} \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C' \\<union> C - {x} \\<subseteq> X", "using C C'"], ["proof (prove)\nusing this:\n  circuit C\n  C \\<subseteq> insert x X\n  circuit C'\n  C' \\<subseteq> insert x X\n\ngoal (1 subgoal):\n 1. C' \\<union> C - {x} \\<subseteq> X", "by auto"], ["proof (state)\nthis:\n  C' \\<union> C - {x} \\<subseteq> X\n\ngoal (1 subgoal):\n 1. C' \\<noteq> C \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> indep (C' \\<union> C - {x})\n  C' \\<union> C - {x} \\<subseteq> X", "show False"], ["proof (prove)\nusing this:\n  \\<not> indep (C' \\<union> C - {x})\n  C' \\<union> C - {x} \\<subseteq> X\n\ngoal (1 subgoal):\n 1. False", "using assms indep_subset"], ["proof (prove)\nusing this:\n  \\<not> indep (C' \\<union> C - {x})\n  C' \\<union> C - {x} \\<subseteq> X\n  x \\<in> carrier\n  indep X\n  \\<not> indep (insert x X)\n  \\<lbrakk>indep ?X; ?Y \\<subseteq> ?X\\<rbrakk> \\<Longrightarrow> indep ?Y\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  C' = C\n\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       circuit Ca \\<and> Ca \\<subseteq> insert x X \\<Longrightarrow> Ca = C", "}"], ["proof (state)\nthis:\n  \\<lbrakk>circuit ?C'2; ?C'2 \\<subseteq> insert x X\\<rbrakk>\n  \\<Longrightarrow> ?C'2 = C\n\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       circuit Ca \\<and> Ca \\<subseteq> insert x X \\<Longrightarrow> Ca = C", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>circuit ?C'2; ?C'2 \\<subseteq> insert x X\\<rbrakk>\n  \\<Longrightarrow> ?C'2 = C", "show \"\\<And>C'. circuit C' \\<and> C' \\<subseteq> insert x X \\<Longrightarrow> C' = C\""], ["proof (prove)\nusing this:\n  \\<lbrakk>circuit ?C'2; ?C'2 \\<subseteq> insert x X\\<rbrakk>\n  \\<Longrightarrow> ?C'2 = C\n\ngoal (1 subgoal):\n 1. \\<And>C'.\n       circuit C' \\<and> C' \\<subseteq> insert x X \\<Longrightarrow> C' = C", "by auto"], ["proof (state)\nthis:\n  circuit ?C' \\<and> ?C' \\<subseteq> insert x X \\<Longrightarrow> ?C' = C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!C. circuit C \\<and> C \\<subseteq> insert x X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_ex1_supset_circuit:\n  assumes \"basis B\"\n  assumes \"x \\<in> carrier - B\"\n  shows \"\\<exists>!C. circuit C \\<and> C \\<subseteq> insert x B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!C. circuit C \\<and> C \\<subseteq> insert x B", "using assms min_dep_imp_ex1_supset_circuit basisD"], ["proof (prove)\nusing this:\n  basis B\n  x \\<in> carrier - B\n  \\<lbrakk>?x \\<in> carrier; indep ?X; \\<not> indep (insert ?x ?X)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!C. circuit C \\<and> C \\<subseteq> insert ?x ?X\n  basis ?X \\<Longrightarrow> indep ?X\n  \\<lbrakk>basis ?X; ?x \\<in> carrier - ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep (insert ?x ?X)\n\ngoal (1 subgoal):\n 1. \\<exists>!C. circuit C \\<and> C \\<subseteq> insert x B", "by auto"], ["", "definition fund_circuit :: \"'a \\<Rightarrow> 'a set \\<Rightarrow> 'a set\" where\n  \"fund_circuit x B \\<equiv> (THE C. circuit C \\<and> C \\<subseteq> insert x B)\""], ["", "lemma circuit_iff_fund_circuit:\n  \"circuit C \\<longleftrightarrow> (\\<exists>x B. x \\<in> carrier - B \\<and> basis B \\<and> C = fund_circuit x B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circuit C =\n    (\\<exists>x B.\n        x \\<in> carrier - B \\<and> basis B \\<and> C = fund_circuit x B)", "proof (safe, goal_cases LTR RTL)"], ["proof (state)\ngoal (2 subgoals):\n 1. circuit C \\<Longrightarrow>\n    \\<exists>x B.\n       x \\<in> carrier - B \\<and> basis B \\<and> C = fund_circuit x B\n 2. \\<And>x B.\n       \\<lbrakk>x \\<in> carrier; x \\<notin> B; basis B;\n        C = fund_circuit x B\\<rbrakk>\n       \\<Longrightarrow> circuit (fund_circuit x B)", "case LTR"], ["proof (state)\nthis:\n  circuit C\n\ngoal (2 subgoals):\n 1. circuit C \\<Longrightarrow>\n    \\<exists>x B.\n       x \\<in> carrier - B \\<and> basis B \\<and> C = fund_circuit x B\n 2. \\<And>x B.\n       \\<lbrakk>x \\<in> carrier; x \\<notin> B; basis B;\n        C = fund_circuit x B\\<rbrakk>\n       \\<Longrightarrow> circuit (fund_circuit x B)", "then"], ["proof (chain)\npicking this:\n  circuit C", "obtain x where \"x \\<in> C\""], ["proof (prove)\nusing this:\n  circuit C\n\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> C \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using circuit_nonempty"], ["proof (prove)\nusing this:\n  circuit C\n  circuit ?X \\<Longrightarrow> ?X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> C \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> C\n\ngoal (2 subgoals):\n 1. circuit C \\<Longrightarrow>\n    \\<exists>x B.\n       x \\<in> carrier - B \\<and> basis B \\<and> C = fund_circuit x B\n 2. \\<And>x B.\n       \\<lbrakk>x \\<in> carrier; x \\<notin> B; basis B;\n        C = fund_circuit x B\\<rbrakk>\n       \\<Longrightarrow> circuit (fund_circuit x B)", "then"], ["proof (chain)\npicking this:\n  x \\<in> C", "have \"indep (C - {x})\""], ["proof (prove)\nusing this:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. indep (C - {x})", "using LTR"], ["proof (prove)\nusing this:\n  x \\<in> C\n  circuit C\n\ngoal (1 subgoal):\n 1. indep (C - {x})", "unfolding circuit_def"], ["proof (prove)\nusing this:\n  x \\<in> C\n  C \\<subseteq> carrier \\<and>\n  \\<not> indep C \\<and> (\\<forall>x\\<in>C. indep (C - {x}))\n\ngoal (1 subgoal):\n 1. indep (C - {x})", "by auto"], ["proof (state)\nthis:\n  indep (C - {x})\n\ngoal (2 subgoals):\n 1. circuit C \\<Longrightarrow>\n    \\<exists>x B.\n       x \\<in> carrier - B \\<and> basis B \\<and> C = fund_circuit x B\n 2. \\<And>x B.\n       \\<lbrakk>x \\<in> carrier; x \\<notin> B; basis B;\n        C = fund_circuit x B\\<rbrakk>\n       \\<Longrightarrow> circuit (fund_circuit x B)", "then"], ["proof (chain)\npicking this:\n  indep (C - {x})", "obtain B where B: \"basis B\" \"C - {x} \\<subseteq> B\""], ["proof (prove)\nusing this:\n  indep (C - {x})\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>basis B; C - {x} \\<subseteq> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using indep_imp_subset_basis"], ["proof (prove)\nusing this:\n  indep (C - {x})\n  indep ?X \\<Longrightarrow> \\<exists>B. basis B \\<and> ?X \\<subseteq> B\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>basis B; C - {x} \\<subseteq> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  basis B\n  C - {x} \\<subseteq> B\n\ngoal (2 subgoals):\n 1. circuit C \\<Longrightarrow>\n    \\<exists>x B.\n       x \\<in> carrier - B \\<and> basis B \\<and> C = fund_circuit x B\n 2. \\<And>x B.\n       \\<lbrakk>x \\<in> carrier; x \\<notin> B; basis B;\n        C = fund_circuit x B\\<rbrakk>\n       \\<Longrightarrow> circuit (fund_circuit x B)", "then"], ["proof (chain)\npicking this:\n  basis B\n  C - {x} \\<subseteq> B", "have \"x \\<in> carrier\""], ["proof (prove)\nusing this:\n  basis B\n  C - {x} \\<subseteq> B\n\ngoal (1 subgoal):\n 1. x \\<in> carrier", "using LTR circuit_subset_carrier \\<open>x \\<in> C\\<close>"], ["proof (prove)\nusing this:\n  basis B\n  C - {x} \\<subseteq> B\n  circuit C\n  circuit ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. x \\<in> carrier", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier\n\ngoal (2 subgoals):\n 1. circuit C \\<Longrightarrow>\n    \\<exists>x B.\n       x \\<in> carrier - B \\<and> basis B \\<and> C = fund_circuit x B\n 2. \\<And>x B.\n       \\<lbrakk>x \\<in> carrier; x \\<notin> B; basis B;\n        C = fund_circuit x B\\<rbrakk>\n       \\<Longrightarrow> circuit (fund_circuit x B)", "moreover"], ["proof (state)\nthis:\n  x \\<in> carrier\n\ngoal (2 subgoals):\n 1. circuit C \\<Longrightarrow>\n    \\<exists>x B.\n       x \\<in> carrier - B \\<and> basis B \\<and> C = fund_circuit x B\n 2. \\<And>x B.\n       \\<lbrakk>x \\<in> carrier; x \\<notin> B; basis B;\n        C = fund_circuit x B\\<rbrakk>\n       \\<Longrightarrow> circuit (fund_circuit x B)", "have \"x \\<notin> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> B", "proof (rule ccontr, goal_cases False)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> B \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> x \\<notin> B\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> B \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> x \\<notin> B", "have \"C \\<subseteq> B\""], ["proof (prove)\nusing this:\n  \\<not> x \\<notin> B\n\ngoal (1 subgoal):\n 1. C \\<subseteq> B", "using \\<open>C - {x} \\<subseteq> B\\<close>"], ["proof (prove)\nusing this:\n  \\<not> x \\<notin> B\n  C - {x} \\<subseteq> B\n\ngoal (1 subgoal):\n 1. C \\<subseteq> B", "by auto"], ["proof (state)\nthis:\n  C \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> B \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  C \\<subseteq> B", "have \"\\<not> indep B\""], ["proof (prove)\nusing this:\n  C \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<not> indep B", "using LTR B basis_subset_carrier supset_circuit_imp_dep"], ["proof (prove)\nusing this:\n  C \\<subseteq> B\n  circuit C\n  basis B\n  C - {x} \\<subseteq> B\n  basis ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n  circuit ?C \\<and> ?C \\<subseteq> ?X \\<Longrightarrow> \\<not> indep ?X\n\ngoal (1 subgoal):\n 1. \\<not> indep B", "by auto"], ["proof (state)\nthis:\n  \\<not> indep B\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> B \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> indep B", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> indep B\n\ngoal (1 subgoal):\n 1. False", "using B basis_indep"], ["proof (prove)\nusing this:\n  \\<not> indep B\n  basis B\n  C - {x} \\<subseteq> B\n  basis ?X \\<Longrightarrow> indep ?X\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> B\n\ngoal (2 subgoals):\n 1. circuit C \\<Longrightarrow>\n    \\<exists>x B.\n       x \\<in> carrier - B \\<and> basis B \\<and> C = fund_circuit x B\n 2. \\<And>x B.\n       \\<lbrakk>x \\<in> carrier; x \\<notin> B; basis B;\n        C = fund_circuit x B\\<rbrakk>\n       \\<Longrightarrow> circuit (fund_circuit x B)", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> carrier\n  x \\<notin> B", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n  x \\<notin> B\n\ngoal (1 subgoal):\n 1. \\<exists>x B.\n       x \\<in> carrier - B \\<and> basis B \\<and> C = fund_circuit x B", "unfolding fund_circuit_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n  x \\<notin> B\n\ngoal (1 subgoal):\n 1. \\<exists>x B.\n       x \\<in> carrier - B \\<and>\n       basis B \\<and> C = (THE C. circuit C \\<and> C \\<subseteq> insert x B)", "using LTR B theI_unique[OF basis_ex1_supset_circuit[of B x], of C]"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n  x \\<notin> B\n  circuit C\n  basis B\n  C - {x} \\<subseteq> B\n  \\<lbrakk>basis B; x \\<in> carrier - B\\<rbrakk>\n  \\<Longrightarrow> (circuit C \\<and> C \\<subseteq> insert x B) =\n                    (C = (THE C. circuit C \\<and> C \\<subseteq> insert x B))\n\ngoal (1 subgoal):\n 1. \\<exists>x B.\n       x \\<in> carrier - B \\<and>\n       basis B \\<and> C = (THE C. circuit C \\<and> C \\<subseteq> insert x B)", "by auto"], ["proof (state)\nthis:\n  \\<exists>x B.\n     x \\<in> carrier - B \\<and> basis B \\<and> C = fund_circuit x B\n\ngoal (1 subgoal):\n 1. \\<And>x B.\n       \\<lbrakk>x \\<in> carrier; x \\<notin> B; basis B;\n        C = fund_circuit x B\\<rbrakk>\n       \\<Longrightarrow> circuit (fund_circuit x B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x B.\n       \\<lbrakk>x \\<in> carrier; x \\<notin> B; basis B;\n        C = fund_circuit x B\\<rbrakk>\n       \\<Longrightarrow> circuit (fund_circuit x B)", "case (RTL x B)"], ["proof (state)\nthis:\n  x \\<in> carrier\n  x \\<notin> B\n  basis B\n  C = fund_circuit x B\n\ngoal (1 subgoal):\n 1. \\<And>x B.\n       \\<lbrakk>x \\<in> carrier; x \\<notin> B; basis B;\n        C = fund_circuit x B\\<rbrakk>\n       \\<Longrightarrow> circuit (fund_circuit x B)", "then"], ["proof (chain)\npicking this:\n  x \\<in> carrier\n  x \\<notin> B\n  basis B\n  C = fund_circuit x B", "have \"\\<exists>!C. circuit C \\<and> C \\<subseteq> insert x B\""], ["proof (prove)\nusing this:\n  x \\<in> carrier\n  x \\<notin> B\n  basis B\n  C = fund_circuit x B\n\ngoal (1 subgoal):\n 1. \\<exists>!C. circuit C \\<and> C \\<subseteq> insert x B", "using min_dep_imp_ex1_supset_circuit basisD[of B]"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n  x \\<notin> B\n  basis B\n  C = fund_circuit x B\n  \\<lbrakk>?x \\<in> carrier; indep ?X; \\<not> indep (insert ?x ?X)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!C. circuit C \\<and> C \\<subseteq> insert ?x ?X\n  basis B \\<Longrightarrow> indep B\n  \\<lbrakk>basis B; ?x \\<in> carrier - B\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep (insert ?x B)\n\ngoal (1 subgoal):\n 1. \\<exists>!C. circuit C \\<and> C \\<subseteq> insert x B", "by auto"], ["proof (state)\nthis:\n  \\<exists>!C. circuit C \\<and> C \\<subseteq> insert x B\n\ngoal (1 subgoal):\n 1. \\<And>x B.\n       \\<lbrakk>x \\<in> carrier; x \\<notin> B; basis B;\n        C = fund_circuit x B\\<rbrakk>\n       \\<Longrightarrow> circuit (fund_circuit x B)", "then"], ["proof (chain)\npicking this:\n  \\<exists>!C. circuit C \\<and> C \\<subseteq> insert x B", "show ?case"], ["proof (prove)\nusing this:\n  \\<exists>!C. circuit C \\<and> C \\<subseteq> insert x B\n\ngoal (1 subgoal):\n 1. circuit (fund_circuit x B)", "unfolding fund_circuit_def"], ["proof (prove)\nusing this:\n  \\<exists>!C. circuit C \\<and> C \\<subseteq> insert x B\n\ngoal (1 subgoal):\n 1. circuit (THE C. circuit C \\<and> C \\<subseteq> insert x B)", "using theI[of \"\\<lambda>C. circuit C \\<and> C \\<subseteq> insert x B\"]"], ["proof (prove)\nusing this:\n  \\<exists>!C. circuit C \\<and> C \\<subseteq> insert x B\n  \\<lbrakk>circuit ?a \\<and> ?a \\<subseteq> insert x B;\n   \\<And>xa.\n      circuit xa \\<and> xa \\<subseteq> insert x B \\<Longrightarrow>\n      xa = ?a\\<rbrakk>\n  \\<Longrightarrow> circuit\n                     (THE xa.\n                         circuit xa \\<and> xa \\<subseteq> insert x B) \\<and>\n                    (THE xa. circuit xa \\<and> xa \\<subseteq> insert x B)\n                    \\<subseteq> insert x B\n\ngoal (1 subgoal):\n 1. circuit (THE C. circuit C \\<and> C \\<subseteq> insert x B)", "by fastforce"], ["proof (state)\nthis:\n  circuit (fund_circuit x B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fund_circuitI:\n  assumes \"basis B\"\n  assumes \"x \\<in> carrier - B\"\n  assumes \"circuit C\"\n  assumes \"C \\<subseteq> insert x B\"\n  shows \"fund_circuit x B = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fund_circuit x B = C", "unfolding fund_circuit_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE C. circuit C \\<and> C \\<subseteq> insert x B) = C", "using assms theI_unique[OF basis_ex1_supset_circuit, of B x C]"], ["proof (prove)\nusing this:\n  basis B\n  x \\<in> carrier - B\n  circuit C\n  C \\<subseteq> insert x B\n  \\<lbrakk>basis B; x \\<in> carrier - B\\<rbrakk>\n  \\<Longrightarrow> (circuit C \\<and> C \\<subseteq> insert x B) =\n                    (C = (THE C. circuit C \\<and> C \\<subseteq> insert x B))\n\ngoal (1 subgoal):\n 1. (THE C. circuit C \\<and> C \\<subseteq> insert x B) = C", "by auto"], ["", "definition fund_circuit_in where \"fund_circuit_in \\<E> x B \\<equiv> matroid.fund_circuit \\<E> (indep_in \\<E>) x B\""], ["", "context\n  fixes \\<E>\n  assumes *: \"\\<E> \\<subseteq> carrier\"\nbegin"], ["", "interpretation \\<E>: matroid \\<E> \"indep_in \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matroid \\<E> (indep_in \\<E>)", "using \\<open>\\<E> \\<subseteq> carrier\\<close>"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. matroid \\<E> (indep_in \\<E>)", "by auto"], ["", "lemma fund_circuit_inI_aux: \"\\<E>.fund_circuit x B = fund_circuit_in \\<E> x B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.fund_circuit x B = fund_circuit_in \\<E> x B", "unfolding fund_circuit_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.fund_circuit x B = \\<E>.fund_circuit x B", "by auto"], ["", "lemma circuit_in_elim:\n  assumes \"circuit_in \\<E> C\\<^sub>1\" \"circuit_in \\<E> C\\<^sub>2\" \"C\\<^sub>1 \\<noteq> C\\<^sub>2\" \"x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\"\n  shows \"\\<exists>C\\<^sub>3 \\<subseteq> (C\\<^sub>1 \\<union> C\\<^sub>2) - {x}. circuit_in \\<E> C\\<^sub>3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit_in \\<E> C\\<^sub>3", "using assms \\<E>.circuit_elim"], ["proof (prove)\nusing this:\n  circuit_in \\<E> C\\<^sub>1\n  circuit_in \\<E> C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n  \\<lbrakk>\\<E>.circuit ?C\\<^sub>1; \\<E>.circuit ?C\\<^sub>2;\n   ?C\\<^sub>1 \\<noteq> ?C\\<^sub>2;\n   ?x \\<in> ?C\\<^sub>1 \\<inter> ?C\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>C\\<^sub>3\\<subseteq>?C\\<^sub>1 \\<union>\n           ?C\\<^sub>2 -\n           {?x}.\n                       \\<E>.circuit C\\<^sub>3\n\ngoal (1 subgoal):\n 1. \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       circuit_in \\<E> C\\<^sub>3", "unfolding circuit_in_def"], ["proof (prove)\nusing this:\n  \\<E>.circuit C\\<^sub>1\n  \\<E>.circuit C\\<^sub>2\n  C\\<^sub>1 \\<noteq> C\\<^sub>2\n  x \\<in> C\\<^sub>1 \\<inter> C\\<^sub>2\n  \\<lbrakk>\\<E>.circuit ?C\\<^sub>1; \\<E>.circuit ?C\\<^sub>2;\n   ?C\\<^sub>1 \\<noteq> ?C\\<^sub>2;\n   ?x \\<in> ?C\\<^sub>1 \\<inter> ?C\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>C\\<^sub>3\\<subseteq>?C\\<^sub>1 \\<union>\n           ?C\\<^sub>2 -\n           {?x}.\n                       \\<E>.circuit C\\<^sub>3\n\ngoal (1 subgoal):\n 1. \\<exists>C\\<^sub>3\\<subseteq>C\\<^sub>1 \\<union> C\\<^sub>2 - {x}.\n       \\<E>.circuit C\\<^sub>3", "by auto"], ["", "lemmas min_dep_in_imp_supset_circuit_in = \\<E>.min_dep_imp_supset_circuit[OF _ circuit_inD_aux[OF *]]"], ["", "lemma min_dep_in_imp_ex1_supset_circuit_in:\n  assumes \"x \\<in> \\<E>\"\n  assumes \"indep_in \\<E> X\"\n  assumes \"\\<not> indep_in \\<E> (insert x X)\"\n  shows \"\\<exists>!C. circuit_in \\<E> C \\<and> C \\<subseteq> insert x X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!C. circuit_in \\<E> C \\<and> C \\<subseteq> insert x X", "using assms \\<E>.min_dep_imp_ex1_supset_circuit"], ["proof (prove)\nusing this:\n  x \\<in> \\<E>\n  indep_in \\<E> X\n  \\<not> indep_in \\<E> (insert x X)\n  \\<lbrakk>?x \\<in> \\<E>; indep_in \\<E> ?X;\n   \\<not> indep_in \\<E> (insert ?x ?X)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!C.\n                       \\<E>.circuit C \\<and> C \\<subseteq> insert ?x ?X\n\ngoal (1 subgoal):\n 1. \\<exists>!C. circuit_in \\<E> C \\<and> C \\<subseteq> insert x X", "unfolding circuit_in_def"], ["proof (prove)\nusing this:\n  x \\<in> \\<E>\n  indep_in \\<E> X\n  \\<not> indep_in \\<E> (insert x X)\n  \\<lbrakk>?x \\<in> \\<E>; indep_in \\<E> ?X;\n   \\<not> indep_in \\<E> (insert ?x ?X)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!C.\n                       \\<E>.circuit C \\<and> C \\<subseteq> insert ?x ?X\n\ngoal (1 subgoal):\n 1. \\<exists>!C. \\<E>.circuit C \\<and> C \\<subseteq> insert x X", "by auto"], ["", "lemma basis_in_ex1_supset_circuit_in:\n  assumes \"basis_in \\<E> B\"\n  assumes \"x \\<in> \\<E> - B\"\n  shows \"\\<exists>!C. circuit_in \\<E> C \\<and> C \\<subseteq> insert x B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!C. circuit_in \\<E> C \\<and> C \\<subseteq> insert x B", "using assms \\<E>.basis_ex1_supset_circuit"], ["proof (prove)\nusing this:\n  basis_in \\<E> B\n  x \\<in> \\<E> - B\n  \\<lbrakk>\\<E>.basis ?B; ?x \\<in> \\<E> - ?B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!C.\n                       \\<E>.circuit C \\<and> C \\<subseteq> insert ?x ?B\n\ngoal (1 subgoal):\n 1. \\<exists>!C. circuit_in \\<E> C \\<and> C \\<subseteq> insert x B", "unfolding circuit_in_def basis_in_def"], ["proof (prove)\nusing this:\n  \\<E>.basis B\n  x \\<in> \\<E> - B\n  \\<lbrakk>\\<E>.basis ?B; ?x \\<in> \\<E> - ?B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!C.\n                       \\<E>.circuit C \\<and> C \\<subseteq> insert ?x ?B\n\ngoal (1 subgoal):\n 1. \\<exists>!C. \\<E>.circuit C \\<and> C \\<subseteq> insert x B", "by auto"], ["", "lemma fund_circuit_inI:\n  assumes \"basis_in \\<E> B\"\n  assumes \"x \\<in> \\<E> - B\"\n  assumes \"circuit_in \\<E> C\"\n  assumes \"C \\<subseteq> insert x B\"\n  shows \"fund_circuit_in \\<E> x B = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fund_circuit_in \\<E> x B = C", "using assms \\<E>.fund_circuitI"], ["proof (prove)\nusing this:\n  basis_in \\<E> B\n  x \\<in> \\<E> - B\n  circuit_in \\<E> C\n  C \\<subseteq> insert x B\n  \\<lbrakk>\\<E>.basis ?B; ?x \\<in> \\<E> - ?B; \\<E>.circuit ?C;\n   ?C \\<subseteq> insert ?x ?B\\<rbrakk>\n  \\<Longrightarrow> \\<E>.fund_circuit ?x ?B = ?C\n\ngoal (1 subgoal):\n 1. fund_circuit_in \\<E> x B = C", "unfolding basis_in_def circuit_in_def fund_circuit_in_def"], ["proof (prove)\nusing this:\n  \\<E>.basis B\n  x \\<in> \\<E> - B\n  \\<E>.circuit C\n  C \\<subseteq> insert x B\n  \\<lbrakk>\\<E>.basis ?B; ?x \\<in> \\<E> - ?B; \\<E>.circuit ?C;\n   ?C \\<subseteq> insert ?x ?B\\<rbrakk>\n  \\<Longrightarrow> \\<E>.fund_circuit ?x ?B = ?C\n\ngoal (1 subgoal):\n 1. \\<E>.fund_circuit x B = C", "by auto"], ["", "end"], ["", "context\n  fixes \\<E>\n  assumes *: \"\\<E> \\<subseteq> carrier\"\nbegin"], ["", "interpretation \\<E>: matroid \\<E> \"indep_in \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matroid \\<E> (indep_in \\<E>)", "using \\<open>\\<E> \\<subseteq> carrier\\<close>"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. matroid \\<E> (indep_in \\<E>)", "by auto"], ["", "lemma fund_circuit_in_sub_cong:\n  assumes \"\\<E>' \\<subseteq> \\<E>\"\n  assumes \"x \\<in> \\<E>' - B\"\n  assumes \"basis_in \\<E>' B\"\n  shows \"\\<E>.fund_circuit_in \\<E>' x B = fund_circuit_in \\<E>' x B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.fund_circuit_in \\<E>' x B = fund_circuit_in \\<E>' x B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<E>.fund_circuit_in \\<E>' x B = fund_circuit_in \\<E>' x B", "obtain C where C: \"circuit_in \\<E>' C\" \"C \\<subseteq> insert x B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>circuit_in \\<E>' C; C \\<subseteq> insert x B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using * assms basis_in_ex1_supset_circuit_in[of \\<E>' B x]"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n  \\<E>' \\<subseteq> \\<E>\n  x \\<in> \\<E>' - B\n  basis_in \\<E>' B\n  \\<lbrakk>\\<E>' \\<subseteq> carrier; basis_in \\<E>' B;\n   x \\<in> \\<E>' - B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!C.\n                       circuit_in \\<E>' C \\<and> C \\<subseteq> insert x B\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>circuit_in \\<E>' C; C \\<subseteq> insert x B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  circuit_in \\<E>' C\n  C \\<subseteq> insert x B\n\ngoal (1 subgoal):\n 1. \\<E>.fund_circuit_in \\<E>' x B = fund_circuit_in \\<E>' x B", "then"], ["proof (chain)\npicking this:\n  circuit_in \\<E>' C\n  C \\<subseteq> insert x B", "have \"fund_circuit_in \\<E>' x B = C\""], ["proof (prove)\nusing this:\n  circuit_in \\<E>' C\n  C \\<subseteq> insert x B\n\ngoal (1 subgoal):\n 1. fund_circuit_in \\<E>' x B = C", "using * assms fund_circuit_inI"], ["proof (prove)\nusing this:\n  circuit_in \\<E>' C\n  C \\<subseteq> insert x B\n  \\<E> \\<subseteq> carrier\n  \\<E>' \\<subseteq> \\<E>\n  x \\<in> \\<E>' - B\n  basis_in \\<E>' B\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?B;\n   ?x \\<in> ?\\<E> - ?B; circuit_in ?\\<E> ?C;\n   ?C \\<subseteq> insert ?x ?B\\<rbrakk>\n  \\<Longrightarrow> fund_circuit_in ?\\<E> ?x ?B = ?C\n\ngoal (1 subgoal):\n 1. fund_circuit_in \\<E>' x B = C", "by auto"], ["proof (state)\nthis:\n  fund_circuit_in \\<E>' x B = C\n\ngoal (1 subgoal):\n 1. \\<E>.fund_circuit_in \\<E>' x B = fund_circuit_in \\<E>' x B", "also"], ["proof (state)\nthis:\n  fund_circuit_in \\<E>' x B = C\n\ngoal (1 subgoal):\n 1. \\<E>.fund_circuit_in \\<E>' x B = fund_circuit_in \\<E>' x B", "have \"\\<dots> = \\<E>.fund_circuit_in \\<E>' x B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C = \\<E>.fund_circuit_in \\<E>' x B", "using * assms C \\<E>.fund_circuit_inI basis_in_sub_cong[of \\<E>] circuit_in_sub_cong[of \\<E>]"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n  \\<E>' \\<subseteq> \\<E>\n  x \\<in> \\<E>' - B\n  basis_in \\<E>' B\n  circuit_in \\<E>' C\n  C \\<subseteq> insert x B\n  \\<lbrakk>?\\<E> \\<subseteq> \\<E>; \\<E>.basis_in ?\\<E> ?B;\n   ?x \\<in> ?\\<E> - ?B; \\<E>.circuit_in ?\\<E> ?C;\n   ?C \\<subseteq> insert ?x ?B\\<rbrakk>\n  \\<Longrightarrow> \\<E>.fund_circuit_in ?\\<E> ?x ?B = ?C\n  \\<lbrakk>\\<E> \\<subseteq> carrier; ?\\<E>' \\<subseteq> \\<E>\\<rbrakk>\n  \\<Longrightarrow> \\<E>.basis_in ?\\<E>' ?B = basis_in ?\\<E>' ?B\n  \\<lbrakk>\\<E> \\<subseteq> carrier; ?\\<E>' \\<subseteq> \\<E>\\<rbrakk>\n  \\<Longrightarrow> \\<E>.circuit_in ?\\<E>' ?C = circuit_in ?\\<E>' ?C\n\ngoal (1 subgoal):\n 1. C = \\<E>.fund_circuit_in \\<E>' x B", "by auto"], ["proof (state)\nthis:\n  C = \\<E>.fund_circuit_in \\<E>' x B\n\ngoal (1 subgoal):\n 1. \\<E>.fund_circuit_in \\<E>' x B = fund_circuit_in \\<E>' x B", "finally"], ["proof (chain)\npicking this:\n  fund_circuit_in \\<E>' x B = \\<E>.fund_circuit_in \\<E>' x B", "show ?thesis"], ["proof (prove)\nusing this:\n  fund_circuit_in \\<E>' x B = \\<E>.fund_circuit_in \\<E>' x B\n\ngoal (1 subgoal):\n 1. \\<E>.fund_circuit_in \\<E>' x B = fund_circuit_in \\<E>' x B", "by auto"], ["proof (state)\nthis:\n  \\<E>.fund_circuit_in \\<E>' x B = fund_circuit_in \\<E>' x B\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Ranks\\<close>"], ["", "abbreviation rank_of where \"rank_of \\<equiv> lower_rank_of\""], ["", "lemmas rank_of_def = lower_rank_of_def"], ["", "lemmas rank_of_sub_cong = lower_rank_of_sub_cong"], ["", "lemmas rank_of_le = lower_rank_of_le"], ["", "context\n  fixes \\<E>\n  assumes *: \"\\<E> \\<subseteq> carrier\"\nbegin"], ["", "interpretation \\<E>: matroid \\<E> \"indep_in \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matroid \\<E> (indep_in \\<E>)", "using *"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. matroid \\<E> (indep_in \\<E>)", "by auto"], ["", "lemma lower_rank_of_eq_upper_rank_of: \"lower_rank_of \\<E> = upper_rank_of \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of \\<E> = upper_rank_of \\<E>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of \\<E> = upper_rank_of \\<E>", "obtain B where \"basis_in \\<E> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B. basis_in \\<E> B \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using basis_in_ex[OF *]"], ["proof (prove)\nusing this:\n  \\<exists>B. basis_in \\<E> B\n\ngoal (1 subgoal):\n 1. (\\<And>B. basis_in \\<E> B \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  basis_in \\<E> B\n\ngoal (1 subgoal):\n 1. rank_of \\<E> = upper_rank_of \\<E>", "then"], ["proof (chain)\npicking this:\n  basis_in \\<E> B", "have \"{card B | B. basis_in \\<E> B} = {card B}\""], ["proof (prove)\nusing this:\n  basis_in \\<E> B\n\ngoal (1 subgoal):\n 1. {card B |B. basis_in \\<E> B} = {card B}", "by safe (auto dest: basis_in_card[OF *])"], ["proof (state)\nthis:\n  {card B |B. basis_in \\<E> B} = {card B}\n\ngoal (1 subgoal):\n 1. rank_of \\<E> = upper_rank_of \\<E>", "then"], ["proof (chain)\npicking this:\n  {card B |B. basis_in \\<E> B} = {card B}", "show ?thesis"], ["proof (prove)\nusing this:\n  {card B |B. basis_in \\<E> B} = {card B}\n\ngoal (1 subgoal):\n 1. rank_of \\<E> = upper_rank_of \\<E>", "unfolding lower_rank_of_def upper_rank_of_def"], ["proof (prove)\nusing this:\n  {card B |B. basis_in \\<E> B} = {card B}\n\ngoal (1 subgoal):\n 1. Min {card B |B. basis_in \\<E> B} = Max {card B |B. basis_in \\<E> B}", "by auto"], ["proof (state)\nthis:\n  rank_of \\<E> = upper_rank_of \\<E>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rank_of_eq_card_basis_in:\n  assumes \"basis_in \\<E> B\"\n  shows \"rank_of \\<E> = card B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of \\<E> = card B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of \\<E> = card B", "have \"{card B | B. basis_in \\<E> B} = {card B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {card B |B. basis_in \\<E> B} = {card B}", "using assms"], ["proof (prove)\nusing this:\n  basis_in \\<E> B\n\ngoal (1 subgoal):\n 1. {card B |B. basis_in \\<E> B} = {card B}", "by safe (auto dest: basis_in_card[OF *])"], ["proof (state)\nthis:\n  {card B |B. basis_in \\<E> B} = {card B}\n\ngoal (1 subgoal):\n 1. rank_of \\<E> = card B", "then"], ["proof (chain)\npicking this:\n  {card B |B. basis_in \\<E> B} = {card B}", "show ?thesis"], ["proof (prove)\nusing this:\n  {card B |B. basis_in \\<E> B} = {card B}\n\ngoal (1 subgoal):\n 1. rank_of \\<E> = card B", "unfolding rank_of_def"], ["proof (prove)\nusing this:\n  {card B |B. basis_in \\<E> B} = {card B}\n\ngoal (1 subgoal):\n 1. Min {card B |B. basis_in \\<E> B} = card B", "by auto"], ["proof (state)\nthis:\n  rank_of \\<E> = card B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rank_of_indep_in_le:\n  assumes \"indep_in \\<E> X\"\n  shows \"card X \\<le> rank_of \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card X \\<le> rank_of \\<E>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card X \\<le> rank_of \\<E>", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. card X \\<le> rank_of \\<E>", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. card X \\<le> rank_of \\<E>", "assume \"basis_in \\<E> B\""], ["proof (state)\nthis:\n  basis_in \\<E> B\n\ngoal (1 subgoal):\n 1. card X \\<le> rank_of \\<E>", "moreover"], ["proof (state)\nthis:\n  basis_in \\<E> B\n\ngoal (1 subgoal):\n 1. card X \\<le> rank_of \\<E>", "obtain B' where \"basis_in \\<E> B'\" \"X \\<subseteq> B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        \\<lbrakk>basis_in \\<E> B'; X \\<subseteq> B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms indep_in_imp_subset_basis_in[OF *]"], ["proof (prove)\nusing this:\n  indep_in \\<E> X\n  indep_in \\<E> ?X \\<Longrightarrow>\n  \\<exists>B. basis_in \\<E> B \\<and> ?X \\<subseteq> B\n\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        \\<lbrakk>basis_in \\<E> B'; X \\<subseteq> B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  basis_in \\<E> B'\n  X \\<subseteq> B'\n\ngoal (1 subgoal):\n 1. card X \\<le> rank_of \\<E>", "ultimately"], ["proof (chain)\npicking this:\n  basis_in \\<E> B\n  basis_in \\<E> B'\n  X \\<subseteq> B'", "have \"card X \\<le> card B\""], ["proof (prove)\nusing this:\n  basis_in \\<E> B\n  basis_in \\<E> B'\n  X \\<subseteq> B'\n\ngoal (1 subgoal):\n 1. card X \\<le> card B", "using card_mono[OF basis_in_finite[OF *]] basis_in_card[OF *, of B B']"], ["proof (prove)\nusing this:\n  basis_in \\<E> B\n  basis_in \\<E> B'\n  X \\<subseteq> B'\n  \\<lbrakk>basis_in \\<E> ?B; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> card ?A \\<le> card ?B\n  \\<lbrakk>basis_in \\<E> B; basis_in \\<E> B'\\<rbrakk>\n  \\<Longrightarrow> card B = card B'\n\ngoal (1 subgoal):\n 1. card X \\<le> card B", "by auto"], ["proof (state)\nthis:\n  card X \\<le> card B\n\ngoal (1 subgoal):\n 1. card X \\<le> rank_of \\<E>", "}"], ["proof (state)\nthis:\n  basis_in \\<E> ?B2 \\<Longrightarrow> card X \\<le> card ?B2\n\ngoal (1 subgoal):\n 1. card X \\<le> rank_of \\<E>", "moreover"], ["proof (state)\nthis:\n  basis_in \\<E> ?B2 \\<Longrightarrow> card X \\<le> card ?B2\n\ngoal (1 subgoal):\n 1. card X \\<le> rank_of \\<E>", "have \"finite {card B | B. basis_in \\<E> B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {card B |B. basis_in \\<E> B}", "using collect_basis_in_finite[OF *]"], ["proof (prove)\nusing this:\n  finite (Collect (basis_in \\<E>))\n\ngoal (1 subgoal):\n 1. finite {card B |B. basis_in \\<E> B}", "by auto"], ["proof (state)\nthis:\n  finite {card B |B. basis_in \\<E> B}\n\ngoal (1 subgoal):\n 1. card X \\<le> rank_of \\<E>", "ultimately"], ["proof (chain)\npicking this:\n  basis_in \\<E> ?B2 \\<Longrightarrow> card X \\<le> card ?B2\n  finite {card B |B. basis_in \\<E> B}", "show ?thesis"], ["proof (prove)\nusing this:\n  basis_in \\<E> ?B2 \\<Longrightarrow> card X \\<le> card ?B2\n  finite {card B |B. basis_in \\<E> B}\n\ngoal (1 subgoal):\n 1. card X \\<le> rank_of \\<E>", "unfolding rank_of_def"], ["proof (prove)\nusing this:\n  basis_in \\<E> ?B2 \\<Longrightarrow> card X \\<le> card ?B2\n  finite {card B |B. basis_in \\<E> B}\n\ngoal (1 subgoal):\n 1. card X \\<le> Min {card B |B. basis_in \\<E> B}", "using basis_in_ex[OF *]"], ["proof (prove)\nusing this:\n  basis_in \\<E> ?B2 \\<Longrightarrow> card X \\<le> card ?B2\n  finite {card B |B. basis_in \\<E> B}\n  \\<exists>B. basis_in \\<E> B\n\ngoal (1 subgoal):\n 1. card X \\<le> Min {card B |B. basis_in \\<E> B}", "by auto"], ["proof (state)\nthis:\n  card X \\<le> rank_of \\<E>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma rank_of_mono:\n  assumes \"X \\<subseteq> Y\"\n  assumes \"Y \\<subseteq> carrier\"\n  shows \"rank_of X \\<le> rank_of Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of X \\<le> rank_of Y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of X \\<le> rank_of Y", "obtain B\\<^sub>X where B\\<^sub>X: \"basis_in X  B\\<^sub>X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B\\<^sub>X.\n        basis_in X B\\<^sub>X \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms basis_in_ex[of X]"], ["proof (prove)\nusing this:\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  X \\<subseteq> carrier \\<Longrightarrow> \\<exists>B. basis_in X B\n\ngoal (1 subgoal):\n 1. (\\<And>B\\<^sub>X.\n        basis_in X B\\<^sub>X \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  basis_in X B\\<^sub>X\n\ngoal (1 subgoal):\n 1. rank_of X \\<le> rank_of Y", "moreover"], ["proof (state)\nthis:\n  basis_in X B\\<^sub>X\n\ngoal (1 subgoal):\n 1. rank_of X \\<le> rank_of Y", "obtain B\\<^sub>Y where B\\<^sub>Y: \"basis_in Y B\\<^sub>Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B\\<^sub>Y.\n        basis_in Y B\\<^sub>Y \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms basis_in_ex[of Y]"], ["proof (prove)\nusing this:\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  Y \\<subseteq> carrier \\<Longrightarrow> \\<exists>B. basis_in Y B\n\ngoal (1 subgoal):\n 1. (\\<And>B\\<^sub>Y.\n        basis_in Y B\\<^sub>Y \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  basis_in Y B\\<^sub>Y\n\ngoal (1 subgoal):\n 1. rank_of X \\<le> rank_of Y", "moreover"], ["proof (state)\nthis:\n  basis_in Y B\\<^sub>Y\n\ngoal (1 subgoal):\n 1. rank_of X \\<le> rank_of Y", "have \"card B\\<^sub>X \\<le> card B\\<^sub>Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card B\\<^sub>X \\<le> card B\\<^sub>Y", "using assms basis_in_indep_in_card[OF _ _ B\\<^sub>Y] basis_in_indep_in[OF _ B\\<^sub>X] indep_in_subI_subset"], ["proof (prove)\nusing this:\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  \\<lbrakk>Y \\<subseteq> carrier; indep_in Y ?X\\<rbrakk>\n  \\<Longrightarrow> card ?X \\<le> card B\\<^sub>Y\n  X \\<subseteq> carrier \\<Longrightarrow> indep_in X B\\<^sub>X\n  \\<lbrakk>?\\<E>' \\<subseteq> ?\\<E>; indep_in ?\\<E>' ?X\\<rbrakk>\n  \\<Longrightarrow> indep_in ?\\<E> ?X\n\ngoal (1 subgoal):\n 1. card B\\<^sub>X \\<le> card B\\<^sub>Y", "by auto"], ["proof (state)\nthis:\n  card B\\<^sub>X \\<le> card B\\<^sub>Y\n\ngoal (1 subgoal):\n 1. rank_of X \\<le> rank_of Y", "ultimately"], ["proof (chain)\npicking this:\n  basis_in X B\\<^sub>X\n  basis_in Y B\\<^sub>Y\n  card B\\<^sub>X \\<le> card B\\<^sub>Y", "show ?thesis"], ["proof (prove)\nusing this:\n  basis_in X B\\<^sub>X\n  basis_in Y B\\<^sub>Y\n  card B\\<^sub>X \\<le> card B\\<^sub>Y\n\ngoal (1 subgoal):\n 1. rank_of X \\<le> rank_of Y", "using assms rank_of_eq_card_basis_in"], ["proof (prove)\nusing this:\n  basis_in X B\\<^sub>X\n  basis_in Y B\\<^sub>Y\n  card B\\<^sub>X \\<le> card B\\<^sub>Y\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?B\\<rbrakk>\n  \\<Longrightarrow> rank_of ?\\<E> = card ?B\n\ngoal (1 subgoal):\n 1. rank_of X \\<le> rank_of Y", "by auto"], ["proof (state)\nthis:\n  rank_of X \\<le> rank_of Y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rank_of_insert_le:\n  assumes \"X \\<subseteq> carrier\"\n  assumes \"x \\<in> carrier\"\n  shows \"rank_of (insert x X) \\<le> Suc (rank_of X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> Suc (rank_of X)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> Suc (rank_of X)", "obtain B where B: \"basis_in X B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B. basis_in X B \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms basis_in_ex[of X]"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> carrier\n  X \\<subseteq> carrier \\<Longrightarrow> \\<exists>B. basis_in X B\n\ngoal (1 subgoal):\n 1. (\\<And>B. basis_in X B \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  basis_in X B\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> Suc (rank_of X)", "have \"basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)", "obtain B' where B': \"B' \\<subseteq> insert x X - X\" \"basis_in (insert x X) (B \\<union> B')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        \\<lbrakk>B' \\<subseteq> insert x X - X;\n         basis_in (insert x X) (B \\<union> B')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms B basis_in_subI[of \"insert x X\" X B]"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> carrier\n  basis_in X B\n  \\<lbrakk>insert x X \\<subseteq> carrier; X \\<subseteq> insert x X;\n   insert x X \\<subseteq> carrier; basis_in X B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B'\\<subseteq>insert x X - X.\n                       basis_in (insert x X) (B \\<union> B')\n\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        \\<lbrakk>B' \\<subseteq> insert x X - X;\n         basis_in (insert x X) (B \\<union> B')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B' \\<subseteq> insert x X - X\n  basis_in (insert x X) (B \\<union> B')\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)", "then"], ["proof (chain)\npicking this:\n  B' \\<subseteq> insert x X - X\n  basis_in (insert x X) (B \\<union> B')", "have \"B' = {} \\<or> B' = {x}\""], ["proof (prove)\nusing this:\n  B' \\<subseteq> insert x X - X\n  basis_in (insert x X) (B \\<union> B')\n\ngoal (1 subgoal):\n 1. B' = {} \\<or> B' = {x}", "by auto"], ["proof (state)\nthis:\n  B' = {} \\<or> B' = {x}\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)", "then"], ["proof (chain)\npicking this:\n  B' = {} \\<or> B' = {x}", "show ?thesis"], ["proof (prove)\nusing this:\n  B' = {} \\<or> B' = {x}\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. B' = {} \\<Longrightarrow>\n    basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)\n 2. B' = {x} \\<Longrightarrow>\n    basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)", "assume \"B' = {}\""], ["proof (state)\nthis:\n  B' = {}\n\ngoal (2 subgoals):\n 1. B' = {} \\<Longrightarrow>\n    basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)\n 2. B' = {x} \\<Longrightarrow>\n    basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)", "then"], ["proof (chain)\npicking this:\n  B' = {}", "have \"basis_in (insert x X) B\""], ["proof (prove)\nusing this:\n  B' = {}\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) B", "using B'"], ["proof (prove)\nusing this:\n  B' = {}\n  B' \\<subseteq> insert x X - X\n  basis_in (insert x X) (B \\<union> B')\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) B", "by auto"], ["proof (state)\nthis:\n  basis_in (insert x X) B\n\ngoal (2 subgoals):\n 1. B' = {} \\<Longrightarrow>\n    basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)\n 2. B' = {x} \\<Longrightarrow>\n    basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)", "then"], ["proof (chain)\npicking this:\n  basis_in (insert x X) B", "show ?thesis"], ["proof (prove)\nusing this:\n  basis_in (insert x X) B\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)", "by auto"], ["proof (state)\nthis:\n  basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)\n\ngoal (1 subgoal):\n 1. B' = {x} \\<Longrightarrow>\n    basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. B' = {x} \\<Longrightarrow>\n    basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)", "assume \"B' = {x}\""], ["proof (state)\nthis:\n  B' = {x}\n\ngoal (1 subgoal):\n 1. B' = {x} \\<Longrightarrow>\n    basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)", "then"], ["proof (chain)\npicking this:\n  B' = {x}", "have \"basis_in (insert x X) (insert x B)\""], ["proof (prove)\nusing this:\n  B' = {x}\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) (insert x B)", "using B'"], ["proof (prove)\nusing this:\n  B' = {x}\n  B' \\<subseteq> insert x X - X\n  basis_in (insert x X) (B \\<union> B')\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) (insert x B)", "by auto"], ["proof (state)\nthis:\n  basis_in (insert x X) (insert x B)\n\ngoal (1 subgoal):\n 1. B' = {x} \\<Longrightarrow>\n    basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)", "then"], ["proof (chain)\npicking this:\n  basis_in (insert x X) (insert x B)", "show ?thesis"], ["proof (prove)\nusing this:\n  basis_in (insert x X) (insert x B)\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)", "by auto"], ["proof (state)\nthis:\n  basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> Suc (rank_of X)", "then"], ["proof (chain)\npicking this:\n  basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)", "show ?thesis"], ["proof (prove)\nusing this:\n  basis_in (insert x X) B \\<or> basis_in (insert x X) (insert x B)\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> Suc (rank_of X)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. basis_in (insert x X) B \\<Longrightarrow>\n    rank_of (insert x X) \\<le> Suc (rank_of X)\n 2. basis_in (insert x X) (insert x B) \\<Longrightarrow>\n    rank_of (insert x X) \\<le> Suc (rank_of X)", "assume \"basis_in (insert x X) B\""], ["proof (state)\nthis:\n  basis_in (insert x X) B\n\ngoal (2 subgoals):\n 1. basis_in (insert x X) B \\<Longrightarrow>\n    rank_of (insert x X) \\<le> Suc (rank_of X)\n 2. basis_in (insert x X) (insert x B) \\<Longrightarrow>\n    rank_of (insert x X) \\<le> Suc (rank_of X)", "then"], ["proof (chain)\npicking this:\n  basis_in (insert x X) B", "show ?thesis"], ["proof (prove)\nusing this:\n  basis_in (insert x X) B\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> Suc (rank_of X)", "using assms B rank_of_eq_card_basis_in"], ["proof (prove)\nusing this:\n  basis_in (insert x X) B\n  X \\<subseteq> carrier\n  x \\<in> carrier\n  basis_in X B\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?B\\<rbrakk>\n  \\<Longrightarrow> rank_of ?\\<E> = card ?B\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> Suc (rank_of X)", "by auto"], ["proof (state)\nthis:\n  rank_of (insert x X) \\<le> Suc (rank_of X)\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) (insert x B) \\<Longrightarrow>\n    rank_of (insert x X) \\<le> Suc (rank_of X)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. basis_in (insert x X) (insert x B) \\<Longrightarrow>\n    rank_of (insert x X) \\<le> Suc (rank_of X)", "assume \"basis_in (insert x X) (insert x B)\""], ["proof (state)\nthis:\n  basis_in (insert x X) (insert x B)\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) (insert x B) \\<Longrightarrow>\n    rank_of (insert x X) \\<le> Suc (rank_of X)", "then"], ["proof (chain)\npicking this:\n  basis_in (insert x X) (insert x B)", "have \"rank_of (insert x X) = card (insert x B)\""], ["proof (prove)\nusing this:\n  basis_in (insert x X) (insert x B)\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = card (insert x B)", "using assms rank_of_eq_card_basis_in"], ["proof (prove)\nusing this:\n  basis_in (insert x X) (insert x B)\n  X \\<subseteq> carrier\n  x \\<in> carrier\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?B\\<rbrakk>\n  \\<Longrightarrow> rank_of ?\\<E> = card ?B\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = card (insert x B)", "by auto"], ["proof (state)\nthis:\n  rank_of (insert x X) = card (insert x B)\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) (insert x B) \\<Longrightarrow>\n    rank_of (insert x X) \\<le> Suc (rank_of X)", "also"], ["proof (state)\nthis:\n  rank_of (insert x X) = card (insert x B)\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) (insert x B) \\<Longrightarrow>\n    rank_of (insert x X) \\<le> Suc (rank_of X)", "have \"\\<dots> = Suc (card (B - {x}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (insert x B) = Suc (card (B - {x}))", "using assms card.insert_remove[of B x]"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> carrier\n  finite B \\<Longrightarrow> card (insert x B) = Suc (card (B - {x}))\n\ngoal (1 subgoal):\n 1. card (insert x B) = Suc (card (B - {x}))", "using B basis_in_finite"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> carrier\n  finite B \\<Longrightarrow> card (insert x B) = Suc (card (B - {x}))\n  basis_in X B\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?A\\<rbrakk>\n  \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. card (insert x B) = Suc (card (B - {x}))", "by auto"], ["proof (state)\nthis:\n  card (insert x B) = Suc (card (B - {x}))\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) (insert x B) \\<Longrightarrow>\n    rank_of (insert x X) \\<le> Suc (rank_of X)", "also"], ["proof (state)\nthis:\n  card (insert x B) = Suc (card (B - {x}))\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) (insert x B) \\<Longrightarrow>\n    rank_of (insert x X) \\<le> Suc (rank_of X)", "have \"\\<dots> \\<le> Suc (card B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (card (B - {x})) \\<le> Suc (card B)", "using assms B basis_in_finite card_Diff1_le[of B]"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> carrier\n  basis_in X B\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?A\\<rbrakk>\n  \\<Longrightarrow> finite ?A\n  finite B \\<Longrightarrow> card (B - {?x}) \\<le> card B\n\ngoal (1 subgoal):\n 1. Suc (card (B - {x})) \\<le> Suc (card B)", "by auto"], ["proof (state)\nthis:\n  Suc (card (B - {x})) \\<le> Suc (card B)\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) (insert x B) \\<Longrightarrow>\n    rank_of (insert x X) \\<le> Suc (rank_of X)", "also"], ["proof (state)\nthis:\n  Suc (card (B - {x})) \\<le> Suc (card B)\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) (insert x B) \\<Longrightarrow>\n    rank_of (insert x X) \\<le> Suc (rank_of X)", "have \"\\<dots> = Suc (rank_of X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (card B) = Suc (rank_of X)", "using assms B rank_of_eq_card_basis_in"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> carrier\n  basis_in X B\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?B\\<rbrakk>\n  \\<Longrightarrow> rank_of ?\\<E> = card ?B\n\ngoal (1 subgoal):\n 1. Suc (card B) = Suc (rank_of X)", "by auto"], ["proof (state)\nthis:\n  Suc (card B) = Suc (rank_of X)\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) (insert x B) \\<Longrightarrow>\n    rank_of (insert x X) \\<le> Suc (rank_of X)", "finally"], ["proof (chain)\npicking this:\n  rank_of (insert x X) \\<le> Suc (rank_of X)", "show ?thesis"], ["proof (prove)\nusing this:\n  rank_of (insert x X) \\<le> Suc (rank_of X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> Suc (rank_of X)", "."], ["proof (state)\nthis:\n  rank_of (insert x X) \\<le> Suc (rank_of X)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of (insert x X) \\<le> Suc (rank_of X)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rank_of_Un_Int_le:\n  assumes \"X \\<subseteq> carrier\"\n  assumes \"Y \\<subseteq> carrier\"\n  shows \"rank_of (X \\<union> Y) + rank_of (X \\<inter> Y) \\<le> rank_of X + rank_of Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "obtain B_Int where B_Int: \"basis_in (X \\<inter> Y) B_Int\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B_Int.\n        basis_in (X \\<inter> Y) B_Int \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms basis_in_ex[of \"X \\<inter> Y\"]"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  X \\<inter> Y \\<subseteq> carrier \\<Longrightarrow>\n  \\<exists>B. basis_in (X \\<inter> Y) B\n\ngoal (1 subgoal):\n 1. (\\<And>B_Int.\n        basis_in (X \\<inter> Y) B_Int \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  basis_in (X \\<inter> Y) B_Int\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "then"], ["proof (chain)\npicking this:\n  basis_in (X \\<inter> Y) B_Int", "have \"indep_in (X \\<union> Y) B_Int\""], ["proof (prove)\nusing this:\n  basis_in (X \\<inter> Y) B_Int\n\ngoal (1 subgoal):\n 1. indep_in (X \\<union> Y) B_Int", "using assms indep_in_subI_subset[OF _ basis_in_indep_in[of \"X \\<inter> Y\" B_Int], of \"X \\<union> Y\"]"], ["proof (prove)\nusing this:\n  basis_in (X \\<inter> Y) B_Int\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  \\<lbrakk>X \\<inter> Y \\<subseteq> X \\<union> Y;\n   X \\<inter> Y \\<subseteq> carrier; basis_in (X \\<inter> Y) B_Int\\<rbrakk>\n  \\<Longrightarrow> indep_in (X \\<union> Y) B_Int\n\ngoal (1 subgoal):\n 1. indep_in (X \\<union> Y) B_Int", "by auto"], ["proof (state)\nthis:\n  indep_in (X \\<union> Y) B_Int\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "then"], ["proof (chain)\npicking this:\n  indep_in (X \\<union> Y) B_Int", "obtain B_Un where B_Un: \"basis_in (X \\<union> Y) B_Un\" \"B_Int \\<subseteq> B_Un\""], ["proof (prove)\nusing this:\n  indep_in (X \\<union> Y) B_Int\n\ngoal (1 subgoal):\n 1. (\\<And>B_Un.\n        \\<lbrakk>basis_in (X \\<union> Y) B_Un;\n         B_Int \\<subseteq> B_Un\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms indep_in_imp_subset_basis_in[of \"X \\<union> Y\" B_Int]"], ["proof (prove)\nusing this:\n  indep_in (X \\<union> Y) B_Int\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  \\<lbrakk>X \\<union> Y \\<subseteq> carrier;\n   indep_in (X \\<union> Y) B_Int\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B.\n                       basis_in (X \\<union> Y) B \\<and> B_Int \\<subseteq> B\n\ngoal (1 subgoal):\n 1. (\\<And>B_Un.\n        \\<lbrakk>basis_in (X \\<union> Y) B_Un;\n         B_Int \\<subseteq> B_Un\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  basis_in (X \\<union> Y) B_Un\n  B_Int \\<subseteq> B_Un\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "have \"card (B_Un \\<inter> (X \\<union> Y)) + card (B_Un \\<inter> (X \\<inter> Y)) = card ((B_Un \\<inter> X) \\<union> (B_Un \\<inter> Y)) + card ((B_Un \\<inter> X) \\<inter> (B_Un \\<inter> Y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> (X \\<union> Y)) +\n    card (B_Un \\<inter> (X \\<inter> Y)) =\n    card (B_Un \\<inter> X \\<union> B_Un \\<inter> Y) +\n    card (B_Un \\<inter> X \\<inter> (B_Un \\<inter> Y))", "by (simp add: inf_assoc inf_left_commute inf_sup_distrib1)"], ["proof (state)\nthis:\n  card (B_Un \\<inter> (X \\<union> Y)) +\n  card (B_Un \\<inter> (X \\<inter> Y)) =\n  card (B_Un \\<inter> X \\<union> B_Un \\<inter> Y) +\n  card (B_Un \\<inter> X \\<inter> (B_Un \\<inter> Y))\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "also"], ["proof (state)\nthis:\n  card (B_Un \\<inter> (X \\<union> Y)) +\n  card (B_Un \\<inter> (X \\<inter> Y)) =\n  card (B_Un \\<inter> X \\<union> B_Un \\<inter> Y) +\n  card (B_Un \\<inter> X \\<inter> (B_Un \\<inter> Y))\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "have \"\\<dots> = card (B_Un \\<inter> X) + card (B_Un \\<inter> Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> X \\<union> B_Un \\<inter> Y) +\n    card (B_Un \\<inter> X \\<inter> (B_Un \\<inter> Y)) =\n    card (B_Un \\<inter> X) + card (B_Un \\<inter> Y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> X \\<union> B_Un \\<inter> Y) +\n    card (B_Un \\<inter> X \\<inter> (B_Un \\<inter> Y)) =\n    card (B_Un \\<inter> X) + card (B_Un \\<inter> Y)", "have \"finite (B_Un \\<inter> X)\" \"finite (B_Un \\<inter> Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (B_Un \\<inter> X) &&& finite (B_Un \\<inter> Y)", "using assms finite_subset[OF _ carrier_finite]"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  ?A \\<subseteq> carrier \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite (B_Un \\<inter> X) &&& finite (B_Un \\<inter> Y)", "by auto"], ["proof (state)\nthis:\n  finite (B_Un \\<inter> X)\n  finite (B_Un \\<inter> Y)\n\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> X \\<union> B_Un \\<inter> Y) +\n    card (B_Un \\<inter> X \\<inter> (B_Un \\<inter> Y)) =\n    card (B_Un \\<inter> X) + card (B_Un \\<inter> Y)", "then"], ["proof (chain)\npicking this:\n  finite (B_Un \\<inter> X)\n  finite (B_Un \\<inter> Y)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (B_Un \\<inter> X)\n  finite (B_Un \\<inter> Y)\n\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> X \\<union> B_Un \\<inter> Y) +\n    card (B_Un \\<inter> X \\<inter> (B_Un \\<inter> Y)) =\n    card (B_Un \\<inter> X) + card (B_Un \\<inter> Y)", "using card_Un_Int[of \"B_Un \\<inter> X\" \"B_Un \\<inter> Y\"]"], ["proof (prove)\nusing this:\n  finite (B_Un \\<inter> X)\n  finite (B_Un \\<inter> Y)\n  \\<lbrakk>finite (B_Un \\<inter> X); finite (B_Un \\<inter> Y)\\<rbrakk>\n  \\<Longrightarrow> card (B_Un \\<inter> X) + card (B_Un \\<inter> Y) =\n                    card (B_Un \\<inter> X \\<union> B_Un \\<inter> Y) +\n                    card (B_Un \\<inter> X \\<inter> (B_Un \\<inter> Y))\n\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> X \\<union> B_Un \\<inter> Y) +\n    card (B_Un \\<inter> X \\<inter> (B_Un \\<inter> Y)) =\n    card (B_Un \\<inter> X) + card (B_Un \\<inter> Y)", "by auto"], ["proof (state)\nthis:\n  card (B_Un \\<inter> X \\<union> B_Un \\<inter> Y) +\n  card (B_Un \\<inter> X \\<inter> (B_Un \\<inter> Y)) =\n  card (B_Un \\<inter> X) + card (B_Un \\<inter> Y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card (B_Un \\<inter> X \\<union> B_Un \\<inter> Y) +\n  card (B_Un \\<inter> X \\<inter> (B_Un \\<inter> Y)) =\n  card (B_Un \\<inter> X) + card (B_Un \\<inter> Y)\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "also"], ["proof (state)\nthis:\n  card (B_Un \\<inter> X \\<union> B_Un \\<inter> Y) +\n  card (B_Un \\<inter> X \\<inter> (B_Un \\<inter> Y)) =\n  card (B_Un \\<inter> X) + card (B_Un \\<inter> Y)\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "have \"\\<dots> \\<le> rank_of X + rank_of Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> X) + card (B_Un \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> X) + card (B_Un \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "have \"card (B_Un \\<inter> X) \\<le> rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> X) \\<le> rank_of X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> X) \\<le> rank_of X", "have \"indep_in X (B_Un \\<inter> X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in X (B_Un \\<inter> X)", "using assms basis_in_indep_in[OF _ B_Un(1)] indep_in_subI"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  X \\<union> Y \\<subseteq> carrier \\<Longrightarrow>\n  indep_in (X \\<union> Y) B_Un\n  indep_in ?\\<E> ?X \\<Longrightarrow> indep_in ?\\<E>' (?X \\<inter> ?\\<E>')\n\ngoal (1 subgoal):\n 1. indep_in X (B_Un \\<inter> X)", "by auto"], ["proof (state)\nthis:\n  indep_in X (B_Un \\<inter> X)\n\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> X) \\<le> rank_of X", "then"], ["proof (chain)\npicking this:\n  indep_in X (B_Un \\<inter> X)", "show ?thesis"], ["proof (prove)\nusing this:\n  indep_in X (B_Un \\<inter> X)\n\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> X) \\<le> rank_of X", "using assms rank_of_indep_in_le"], ["proof (prove)\nusing this:\n  indep_in X (B_Un \\<inter> X)\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; indep_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> card ?X \\<le> rank_of ?\\<E>\n\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> X) \\<le> rank_of X", "by auto"], ["proof (state)\nthis:\n  card (B_Un \\<inter> X) \\<le> rank_of X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card (B_Un \\<inter> X) \\<le> rank_of X\n\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> X) + card (B_Un \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "moreover"], ["proof (state)\nthis:\n  card (B_Un \\<inter> X) \\<le> rank_of X\n\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> X) + card (B_Un \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "have \"card (B_Un \\<inter> Y) \\<le> rank_of Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> Y) \\<le> rank_of Y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> Y) \\<le> rank_of Y", "have \"indep_in Y (B_Un \\<inter> Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in Y (B_Un \\<inter> Y)", "using assms basis_in_indep_in[OF _ B_Un(1)] indep_in_subI"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  X \\<union> Y \\<subseteq> carrier \\<Longrightarrow>\n  indep_in (X \\<union> Y) B_Un\n  indep_in ?\\<E> ?X \\<Longrightarrow> indep_in ?\\<E>' (?X \\<inter> ?\\<E>')\n\ngoal (1 subgoal):\n 1. indep_in Y (B_Un \\<inter> Y)", "by auto"], ["proof (state)\nthis:\n  indep_in Y (B_Un \\<inter> Y)\n\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> Y) \\<le> rank_of Y", "then"], ["proof (chain)\npicking this:\n  indep_in Y (B_Un \\<inter> Y)", "show ?thesis"], ["proof (prove)\nusing this:\n  indep_in Y (B_Un \\<inter> Y)\n\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> Y) \\<le> rank_of Y", "using assms rank_of_indep_in_le"], ["proof (prove)\nusing this:\n  indep_in Y (B_Un \\<inter> Y)\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; indep_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> card ?X \\<le> rank_of ?\\<E>\n\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> Y) \\<le> rank_of Y", "by auto"], ["proof (state)\nthis:\n  card (B_Un \\<inter> Y) \\<le> rank_of Y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card (B_Un \\<inter> Y) \\<le> rank_of Y\n\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> X) + card (B_Un \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "ultimately"], ["proof (chain)\npicking this:\n  card (B_Un \\<inter> X) \\<le> rank_of X\n  card (B_Un \\<inter> Y) \\<le> rank_of Y", "show ?thesis"], ["proof (prove)\nusing this:\n  card (B_Un \\<inter> X) \\<le> rank_of X\n  card (B_Un \\<inter> Y) \\<le> rank_of Y\n\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> X) + card (B_Un \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "by auto"], ["proof (state)\nthis:\n  card (B_Un \\<inter> X) + card (B_Un \\<inter> Y)\n  \\<le> rank_of X + rank_of Y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card (B_Un \\<inter> X) + card (B_Un \\<inter> Y)\n  \\<le> rank_of X + rank_of Y\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "finally"], ["proof (chain)\npicking this:\n  card (B_Un \\<inter> (X \\<union> Y)) + card (B_Un \\<inter> (X \\<inter> Y))\n  \\<le> rank_of X + rank_of Y", "have \"rank_of X + rank_of Y \\<ge> card (B_Un \\<inter> (X \\<union> Y)) + card (B_Un \\<inter> (X \\<inter> Y))\""], ["proof (prove)\nusing this:\n  card (B_Un \\<inter> (X \\<union> Y)) + card (B_Un \\<inter> (X \\<inter> Y))\n  \\<le> rank_of X + rank_of Y\n\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> (X \\<union> Y)) +\n    card (B_Un \\<inter> (X \\<inter> Y))\n    \\<le> rank_of X + rank_of Y", "."], ["proof (state)\nthis:\n  card (B_Un \\<inter> (X \\<union> Y)) + card (B_Un \\<inter> (X \\<inter> Y))\n  \\<le> rank_of X + rank_of Y\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "moreover"], ["proof (state)\nthis:\n  card (B_Un \\<inter> (X \\<union> Y)) + card (B_Un \\<inter> (X \\<inter> Y))\n  \\<le> rank_of X + rank_of Y\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "have \"B_Un \\<inter> (X \\<union> Y) = B_Un\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B_Un \\<inter> (X \\<union> Y) = B_Un", "using assms basis_in_subset_carrier[OF _ B_Un(1)]"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  X \\<union> Y \\<subseteq> carrier \\<Longrightarrow>\n  B_Un \\<subseteq> X \\<union> Y\n\ngoal (1 subgoal):\n 1. B_Un \\<inter> (X \\<union> Y) = B_Un", "by auto"], ["proof (state)\nthis:\n  B_Un \\<inter> (X \\<union> Y) = B_Un\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "moreover"], ["proof (state)\nthis:\n  B_Un \\<inter> (X \\<union> Y) = B_Un\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "have \"B_Un \\<inter> (X \\<inter> Y) = B_Int\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B_Un \\<inter> (X \\<inter> Y) = B_Int", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. B_Un \\<inter> (X \\<inter> Y) = B_Int", "have \"card (B_Un \\<inter> (X \\<inter> Y)) \\<le> card B_Int\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> (X \\<inter> Y)) \\<le> card B_Int", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> (X \\<inter> Y)) \\<le> card B_Int", "have \"indep_in (X \\<inter> Y) (B_Un \\<inter> (X \\<inter> Y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in (X \\<inter> Y) (B_Un \\<inter> (X \\<inter> Y))", "using assms basis_in_indep_in[OF _ B_Un(1)] indep_in_subI"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  X \\<union> Y \\<subseteq> carrier \\<Longrightarrow>\n  indep_in (X \\<union> Y) B_Un\n  indep_in ?\\<E> ?X \\<Longrightarrow> indep_in ?\\<E>' (?X \\<inter> ?\\<E>')\n\ngoal (1 subgoal):\n 1. indep_in (X \\<inter> Y) (B_Un \\<inter> (X \\<inter> Y))", "by auto"], ["proof (state)\nthis:\n  indep_in (X \\<inter> Y) (B_Un \\<inter> (X \\<inter> Y))\n\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> (X \\<inter> Y)) \\<le> card B_Int", "then"], ["proof (chain)\npicking this:\n  indep_in (X \\<inter> Y) (B_Un \\<inter> (X \\<inter> Y))", "show ?thesis"], ["proof (prove)\nusing this:\n  indep_in (X \\<inter> Y) (B_Un \\<inter> (X \\<inter> Y))\n\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> (X \\<inter> Y)) \\<le> card B_Int", "using assms basis_in_indep_in_card[of \"X \\<inter> Y\" _ B_Int] B_Int"], ["proof (prove)\nusing this:\n  indep_in (X \\<inter> Y) (B_Un \\<inter> (X \\<inter> Y))\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  \\<lbrakk>X \\<inter> Y \\<subseteq> carrier; indep_in (X \\<inter> Y) ?X;\n   basis_in (X \\<inter> Y) B_Int\\<rbrakk>\n  \\<Longrightarrow> card ?X \\<le> card B_Int\n  basis_in (X \\<inter> Y) B_Int\n\ngoal (1 subgoal):\n 1. card (B_Un \\<inter> (X \\<inter> Y)) \\<le> card B_Int", "by auto"], ["proof (state)\nthis:\n  card (B_Un \\<inter> (X \\<inter> Y)) \\<le> card B_Int\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card (B_Un \\<inter> (X \\<inter> Y)) \\<le> card B_Int\n\ngoal (1 subgoal):\n 1. B_Un \\<inter> (X \\<inter> Y) = B_Int", "moreover"], ["proof (state)\nthis:\n  card (B_Un \\<inter> (X \\<inter> Y)) \\<le> card B_Int\n\ngoal (1 subgoal):\n 1. B_Un \\<inter> (X \\<inter> Y) = B_Int", "have \"finite (B_Un \\<inter> (X \\<inter> Y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (B_Un \\<inter> (X \\<inter> Y))", "using assms carrier_finite finite_subset[of \"B_Un \\<inter> (X \\<inter> Y)\"]"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  finite carrier\n  \\<lbrakk>B_Un \\<inter> (X \\<inter> Y) \\<subseteq> ?B; finite ?B\\<rbrakk>\n  \\<Longrightarrow> finite (B_Un \\<inter> (X \\<inter> Y))\n\ngoal (1 subgoal):\n 1. finite (B_Un \\<inter> (X \\<inter> Y))", "by auto"], ["proof (state)\nthis:\n  finite (B_Un \\<inter> (X \\<inter> Y))\n\ngoal (1 subgoal):\n 1. B_Un \\<inter> (X \\<inter> Y) = B_Int", "moreover"], ["proof (state)\nthis:\n  finite (B_Un \\<inter> (X \\<inter> Y))\n\ngoal (1 subgoal):\n 1. B_Un \\<inter> (X \\<inter> Y) = B_Int", "have \"B_Int \\<subseteq> B_Un \\<inter> (X \\<inter> Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B_Int \\<subseteq> B_Un \\<inter> (X \\<inter> Y)", "using assms B_Un B_Int basis_in_subset_carrier[of \"X \\<inter> Y\" B_Int]"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  basis_in (X \\<union> Y) B_Un\n  B_Int \\<subseteq> B_Un\n  basis_in (X \\<inter> Y) B_Int\n  \\<lbrakk>X \\<inter> Y \\<subseteq> carrier;\n   basis_in (X \\<inter> Y) B_Int\\<rbrakk>\n  \\<Longrightarrow> B_Int \\<subseteq> X \\<inter> Y\n\ngoal (1 subgoal):\n 1. B_Int \\<subseteq> B_Un \\<inter> (X \\<inter> Y)", "by auto"], ["proof (state)\nthis:\n  B_Int \\<subseteq> B_Un \\<inter> (X \\<inter> Y)\n\ngoal (1 subgoal):\n 1. B_Un \\<inter> (X \\<inter> Y) = B_Int", "ultimately"], ["proof (chain)\npicking this:\n  card (B_Un \\<inter> (X \\<inter> Y)) \\<le> card B_Int\n  finite (B_Un \\<inter> (X \\<inter> Y))\n  B_Int \\<subseteq> B_Un \\<inter> (X \\<inter> Y)", "show ?thesis"], ["proof (prove)\nusing this:\n  card (B_Un \\<inter> (X \\<inter> Y)) \\<le> card B_Int\n  finite (B_Un \\<inter> (X \\<inter> Y))\n  B_Int \\<subseteq> B_Un \\<inter> (X \\<inter> Y)\n\ngoal (1 subgoal):\n 1. B_Un \\<inter> (X \\<inter> Y) = B_Int", "using card_seteq"], ["proof (prove)\nusing this:\n  card (B_Un \\<inter> (X \\<inter> Y)) \\<le> card B_Int\n  finite (B_Un \\<inter> (X \\<inter> Y))\n  B_Int \\<subseteq> B_Un \\<inter> (X \\<inter> Y)\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B; card ?B \\<le> card ?A\\<rbrakk>\n  \\<Longrightarrow> ?A = ?B\n\ngoal (1 subgoal):\n 1. B_Un \\<inter> (X \\<inter> Y) = B_Int", "by blast"], ["proof (state)\nthis:\n  B_Un \\<inter> (X \\<inter> Y) = B_Int\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B_Un \\<inter> (X \\<inter> Y) = B_Int\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "ultimately"], ["proof (chain)\npicking this:\n  card (B_Un \\<inter> (X \\<union> Y)) + card (B_Un \\<inter> (X \\<inter> Y))\n  \\<le> rank_of X + rank_of Y\n  B_Un \\<inter> (X \\<union> Y) = B_Un\n  B_Un \\<inter> (X \\<inter> Y) = B_Int", "have \"rank_of X + rank_of Y \\<ge> card B_Un + card B_Int\""], ["proof (prove)\nusing this:\n  card (B_Un \\<inter> (X \\<union> Y)) + card (B_Un \\<inter> (X \\<inter> Y))\n  \\<le> rank_of X + rank_of Y\n  B_Un \\<inter> (X \\<union> Y) = B_Un\n  B_Un \\<inter> (X \\<inter> Y) = B_Int\n\ngoal (1 subgoal):\n 1. card B_Un + card B_Int \\<le> rank_of X + rank_of Y", "by auto"], ["proof (state)\nthis:\n  card B_Un + card B_Int \\<le> rank_of X + rank_of Y\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "moreover"], ["proof (state)\nthis:\n  card B_Un + card B_Int \\<le> rank_of X + rank_of Y\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "have \"card B_Un = rank_of (X \\<union> Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card B_Un = rank_of (X \\<union> Y)", "using assms rank_of_eq_card_basis_in[OF _ B_Un(1)]"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  X \\<union> Y \\<subseteq> carrier \\<Longrightarrow>\n  rank_of (X \\<union> Y) = card B_Un\n\ngoal (1 subgoal):\n 1. card B_Un = rank_of (X \\<union> Y)", "by auto"], ["proof (state)\nthis:\n  card B_Un = rank_of (X \\<union> Y)\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "moreover"], ["proof (state)\nthis:\n  card B_Un = rank_of (X \\<union> Y)\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "have \"card B_Int = rank_of (X \\<inter> Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card B_Int = rank_of (X \\<inter> Y)", "using assms rank_of_eq_card_basis_in[OF _ B_Int]"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  X \\<inter> Y \\<subseteq> carrier \\<Longrightarrow>\n  rank_of (X \\<inter> Y) = card B_Int\n\ngoal (1 subgoal):\n 1. card B_Int = rank_of (X \\<inter> Y)", "by fastforce"], ["proof (state)\nthis:\n  card B_Int = rank_of (X \\<inter> Y)\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "ultimately"], ["proof (chain)\npicking this:\n  card B_Un + card B_Int \\<le> rank_of X + rank_of Y\n  card B_Un = rank_of (X \\<union> Y)\n  card B_Int = rank_of (X \\<inter> Y)", "show \"rank_of X + rank_of Y \\<ge> rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\""], ["proof (prove)\nusing this:\n  card B_Un + card B_Int \\<le> rank_of X + rank_of Y\n  card B_Un = rank_of (X \\<union> Y)\n  card B_Int = rank_of (X \\<inter> Y)\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n    \\<le> rank_of X + rank_of Y", "by auto"], ["proof (state)\nthis:\n  rank_of (X \\<union> Y) + rank_of (X \\<inter> Y)\n  \\<le> rank_of X + rank_of Y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rank_of_Un_absorbI:\n  assumes \"X \\<subseteq> carrier\" \"Y \\<subseteq> carrier\"\n  assumes \"\\<And>y. y \\<in> Y - X \\<Longrightarrow> rank_of (insert y X) = rank_of X\"\n  shows \"rank_of (X \\<union> Y) = rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) = rank_of X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) = rank_of X", "have \"finite (Y - X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Y - X)", "using finite_subset[OF \\<open>Y \\<subseteq> carrier\\<close>] carrier_finite"], ["proof (prove)\nusing this:\n  finite carrier \\<Longrightarrow> finite Y\n  finite carrier\n\ngoal (1 subgoal):\n 1. finite (Y - X)", "by auto"], ["proof (state)\nthis:\n  finite (Y - X)\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) = rank_of X", "then"], ["proof (chain)\npicking this:\n  finite (Y - X)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (Y - X)\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) = rank_of X", "using assms"], ["proof (prove)\nusing this:\n  finite (Y - X)\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  ?y \\<in> Y - X \\<Longrightarrow> rank_of (insert ?y X) = rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) = rank_of X", "proof (induction \"Y - X\" arbitrary: Y rule: finite_induct )"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Y.\n       \\<lbrakk>{} = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n        \\<And>y.\n           y \\<in> Y - X \\<Longrightarrow>\n           rank_of (insert y X) = rank_of X\\<rbrakk>\n       \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X\n 2. \\<And>x F Y.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>Y.\n           \\<lbrakk>F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n            \\<And>y.\n               y \\<in> Y - X \\<Longrightarrow>\n               rank_of (insert y X) = rank_of X\\<rbrakk>\n           \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X;\n        insert x F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n        \\<And>y.\n           y \\<in> Y - X \\<Longrightarrow>\n           rank_of (insert y X) = rank_of X\\<rbrakk>\n       \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X", "case empty"], ["proof (state)\nthis:\n  {} = Y - X\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  ?y \\<in> Y - X \\<Longrightarrow> rank_of (insert ?y X) = rank_of X\n\ngoal (2 subgoals):\n 1. \\<And>Y.\n       \\<lbrakk>{} = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n        \\<And>y.\n           y \\<in> Y - X \\<Longrightarrow>\n           rank_of (insert y X) = rank_of X\\<rbrakk>\n       \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X\n 2. \\<And>x F Y.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>Y.\n           \\<lbrakk>F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n            \\<And>y.\n               y \\<in> Y - X \\<Longrightarrow>\n               rank_of (insert y X) = rank_of X\\<rbrakk>\n           \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X;\n        insert x F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n        \\<And>y.\n           y \\<in> Y - X \\<Longrightarrow>\n           rank_of (insert y X) = rank_of X\\<rbrakk>\n       \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X", "then"], ["proof (chain)\npicking this:\n  {} = Y - X\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  ?y \\<in> Y - X \\<Longrightarrow> rank_of (insert ?y X) = rank_of X", "have \"X \\<union> Y = X\""], ["proof (prove)\nusing this:\n  {} = Y - X\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  ?y \\<in> Y - X \\<Longrightarrow> rank_of (insert ?y X) = rank_of X\n\ngoal (1 subgoal):\n 1. X \\<union> Y = X", "by auto"], ["proof (state)\nthis:\n  X \\<union> Y = X\n\ngoal (2 subgoals):\n 1. \\<And>Y.\n       \\<lbrakk>{} = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n        \\<And>y.\n           y \\<in> Y - X \\<Longrightarrow>\n           rank_of (insert y X) = rank_of X\\<rbrakk>\n       \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X\n 2. \\<And>x F Y.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>Y.\n           \\<lbrakk>F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n            \\<And>y.\n               y \\<in> Y - X \\<Longrightarrow>\n               rank_of (insert y X) = rank_of X\\<rbrakk>\n           \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X;\n        insert x F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n        \\<And>y.\n           y \\<in> Y - X \\<Longrightarrow>\n           rank_of (insert y X) = rank_of X\\<rbrakk>\n       \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X", "then"], ["proof (chain)\npicking this:\n  X \\<union> Y = X", "show ?case"], ["proof (prove)\nusing this:\n  X \\<union> Y = X\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) = rank_of X", "by auto"], ["proof (state)\nthis:\n  rank_of (X \\<union> Y) = rank_of X\n\ngoal (1 subgoal):\n 1. \\<And>x F Y.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>Y.\n           \\<lbrakk>F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n            \\<And>y.\n               y \\<in> Y - X \\<Longrightarrow>\n               rank_of (insert y X) = rank_of X\\<rbrakk>\n           \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X;\n        insert x F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n        \\<And>y.\n           y \\<in> Y - X \\<Longrightarrow>\n           rank_of (insert y X) = rank_of X\\<rbrakk>\n       \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F Y.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>Y.\n           \\<lbrakk>F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n            \\<And>y.\n               y \\<in> Y - X \\<Longrightarrow>\n               rank_of (insert y X) = rank_of X\\<rbrakk>\n           \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X;\n        insert x F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n        \\<And>y.\n           y \\<in> Y - X \\<Longrightarrow>\n           rank_of (insert y X) = rank_of X\\<rbrakk>\n       \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X", "case (insert y F)"], ["proof (state)\nthis:\n  finite F\n  y \\<notin> F\n  \\<lbrakk>F = ?Y - X; X \\<subseteq> carrier; ?Y \\<subseteq> carrier;\n   \\<And>y.\n      y \\<in> ?Y - X \\<Longrightarrow>\n      rank_of (insert y X) = rank_of X\\<rbrakk>\n  \\<Longrightarrow> rank_of (X \\<union> ?Y) = rank_of X\n  insert y F = Y - X\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  ?y \\<in> Y - X \\<Longrightarrow> rank_of (insert ?y X) = rank_of X\n\ngoal (1 subgoal):\n 1. \\<And>x F Y.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>Y.\n           \\<lbrakk>F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n            \\<And>y.\n               y \\<in> Y - X \\<Longrightarrow>\n               rank_of (insert y X) = rank_of X\\<rbrakk>\n           \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X;\n        insert x F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n        \\<And>y.\n           y \\<in> Y - X \\<Longrightarrow>\n           rank_of (insert y X) = rank_of X\\<rbrakk>\n       \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X", "have \"rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X", "have \"rank_of (X \\<union> Y) + rank_of X = rank_of ((X \\<union> (Y - {y})) \\<union> (insert y X)) + rank_of ((X \\<union> (Y - {y})) \\<inter> (insert y X))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of X =\n    rank_of (X \\<union> (Y - {y}) \\<union> insert y X) +\n    rank_of ((X \\<union> (Y - {y})) \\<inter> insert y X)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of X =\n    rank_of (X \\<union> (Y - {y}) \\<union> insert y X) +\n    rank_of ((X \\<union> (Y - {y})) \\<inter> insert y X)", "have \"X \\<union> Y = (X \\<union> (Y - {y})) \\<union> (insert y X)\" \"X = (X \\<union> (Y - {y})) \\<inter> (insert y X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<union> Y = X \\<union> (Y - {y}) \\<union> insert y X &&&\n    X = (X \\<union> (Y - {y})) \\<inter> insert y X", "using insert"], ["proof (prove)\nusing this:\n  finite F\n  y \\<notin> F\n  \\<lbrakk>F = ?Y - X; X \\<subseteq> carrier; ?Y \\<subseteq> carrier;\n   \\<And>y.\n      y \\<in> ?Y - X \\<Longrightarrow>\n      rank_of (insert y X) = rank_of X\\<rbrakk>\n  \\<Longrightarrow> rank_of (X \\<union> ?Y) = rank_of X\n  insert y F = Y - X\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  ?y \\<in> Y - X \\<Longrightarrow> rank_of (insert ?y X) = rank_of X\n\ngoal (1 subgoal):\n 1. X \\<union> Y = X \\<union> (Y - {y}) \\<union> insert y X &&&\n    X = (X \\<union> (Y - {y})) \\<inter> insert y X", "by auto"], ["proof (state)\nthis:\n  X \\<union> Y = X \\<union> (Y - {y}) \\<union> insert y X\n  X = (X \\<union> (Y - {y})) \\<inter> insert y X\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of X =\n    rank_of (X \\<union> (Y - {y}) \\<union> insert y X) +\n    rank_of ((X \\<union> (Y - {y})) \\<inter> insert y X)", "then"], ["proof (chain)\npicking this:\n  X \\<union> Y = X \\<union> (Y - {y}) \\<union> insert y X\n  X = (X \\<union> (Y - {y})) \\<inter> insert y X", "show ?thesis"], ["proof (prove)\nusing this:\n  X \\<union> Y = X \\<union> (Y - {y}) \\<union> insert y X\n  X = (X \\<union> (Y - {y})) \\<inter> insert y X\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of X =\n    rank_of (X \\<union> (Y - {y}) \\<union> insert y X) +\n    rank_of ((X \\<union> (Y - {y})) \\<inter> insert y X)", "by auto"], ["proof (state)\nthis:\n  rank_of (X \\<union> Y) + rank_of X =\n  rank_of (X \\<union> (Y - {y}) \\<union> insert y X) +\n  rank_of ((X \\<union> (Y - {y})) \\<inter> insert y X)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of (X \\<union> Y) + rank_of X =\n  rank_of (X \\<union> (Y - {y}) \\<union> insert y X) +\n  rank_of ((X \\<union> (Y - {y})) \\<inter> insert y X)\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X", "also"], ["proof (state)\nthis:\n  rank_of (X \\<union> Y) + rank_of X =\n  rank_of (X \\<union> (Y - {y}) \\<union> insert y X) +\n  rank_of ((X \\<union> (Y - {y})) \\<inter> insert y X)\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X", "have \"\\<dots> \\<le> rank_of (X \\<union> (Y - {y})) +  rank_of (insert y X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (X \\<union> (Y - {y}) \\<union> insert y X) +\n    rank_of ((X \\<union> (Y - {y})) \\<inter> insert y X)\n    \\<le> rank_of (X \\<union> (Y - {y})) + rank_of (insert y X)", "proof (rule rank_of_Un_Int_le)"], ["proof (state)\ngoal (2 subgoals):\n 1. X \\<union> (Y - {y}) \\<subseteq> carrier\n 2. insert y X \\<subseteq> carrier", "show \"X \\<union> (Y - {y}) \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<union> (Y - {y}) \\<subseteq> carrier", "using insert"], ["proof (prove)\nusing this:\n  finite F\n  y \\<notin> F\n  \\<lbrakk>F = ?Y - X; X \\<subseteq> carrier; ?Y \\<subseteq> carrier;\n   \\<And>y.\n      y \\<in> ?Y - X \\<Longrightarrow>\n      rank_of (insert y X) = rank_of X\\<rbrakk>\n  \\<Longrightarrow> rank_of (X \\<union> ?Y) = rank_of X\n  insert y F = Y - X\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  ?y \\<in> Y - X \\<Longrightarrow> rank_of (insert ?y X) = rank_of X\n\ngoal (1 subgoal):\n 1. X \\<union> (Y - {y}) \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  X \\<union> (Y - {y}) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. insert y X \\<subseteq> carrier", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. insert y X \\<subseteq> carrier", "show \"insert y X \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert y X \\<subseteq> carrier", "using insert"], ["proof (prove)\nusing this:\n  finite F\n  y \\<notin> F\n  \\<lbrakk>F = ?Y - X; X \\<subseteq> carrier; ?Y \\<subseteq> carrier;\n   \\<And>y.\n      y \\<in> ?Y - X \\<Longrightarrow>\n      rank_of (insert y X) = rank_of X\\<rbrakk>\n  \\<Longrightarrow> rank_of (X \\<union> ?Y) = rank_of X\n  insert y F = Y - X\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  ?y \\<in> Y - X \\<Longrightarrow> rank_of (insert ?y X) = rank_of X\n\ngoal (1 subgoal):\n 1. insert y X \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  insert y X \\<subseteq> carrier\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of (X \\<union> (Y - {y}) \\<union> insert y X) +\n  rank_of ((X \\<union> (Y - {y})) \\<inter> insert y X)\n  \\<le> rank_of (X \\<union> (Y - {y})) + rank_of (insert y X)\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X", "also"], ["proof (state)\nthis:\n  rank_of (X \\<union> (Y - {y}) \\<union> insert y X) +\n  rank_of ((X \\<union> (Y - {y})) \\<inter> insert y X)\n  \\<le> rank_of (X \\<union> (Y - {y})) + rank_of (insert y X)\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X", "have \"\\<dots> = rank_of (X \\<union> (Y - {y})) + rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (X \\<union> (Y - {y})) + rank_of (insert y X) =\n    rank_of (X \\<union> (Y - {y})) + rank_of X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (X \\<union> (Y - {y})) + rank_of (insert y X) =\n    rank_of (X \\<union> (Y - {y})) + rank_of X", "have \"y \\<in> Y - X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> Y - X", "using insert"], ["proof (prove)\nusing this:\n  finite F\n  y \\<notin> F\n  \\<lbrakk>F = ?Y - X; X \\<subseteq> carrier; ?Y \\<subseteq> carrier;\n   \\<And>y.\n      y \\<in> ?Y - X \\<Longrightarrow>\n      rank_of (insert y X) = rank_of X\\<rbrakk>\n  \\<Longrightarrow> rank_of (X \\<union> ?Y) = rank_of X\n  insert y F = Y - X\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  ?y \\<in> Y - X \\<Longrightarrow> rank_of (insert ?y X) = rank_of X\n\ngoal (1 subgoal):\n 1. y \\<in> Y - X", "by auto"], ["proof (state)\nthis:\n  y \\<in> Y - X\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> (Y - {y})) + rank_of (insert y X) =\n    rank_of (X \\<union> (Y - {y})) + rank_of X", "then"], ["proof (chain)\npicking this:\n  y \\<in> Y - X", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> Y - X\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> (Y - {y})) + rank_of (insert y X) =\n    rank_of (X \\<union> (Y - {y})) + rank_of X", "using insert"], ["proof (prove)\nusing this:\n  y \\<in> Y - X\n  finite F\n  y \\<notin> F\n  \\<lbrakk>F = ?Y - X; X \\<subseteq> carrier; ?Y \\<subseteq> carrier;\n   \\<And>y.\n      y \\<in> ?Y - X \\<Longrightarrow>\n      rank_of (insert y X) = rank_of X\\<rbrakk>\n  \\<Longrightarrow> rank_of (X \\<union> ?Y) = rank_of X\n  insert y F = Y - X\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  ?y \\<in> Y - X \\<Longrightarrow> rank_of (insert ?y X) = rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> (Y - {y})) + rank_of (insert y X) =\n    rank_of (X \\<union> (Y - {y})) + rank_of X", "by auto"], ["proof (state)\nthis:\n  rank_of (X \\<union> (Y - {y})) + rank_of (insert y X) =\n  rank_of (X \\<union> (Y - {y})) + rank_of X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of (X \\<union> (Y - {y})) + rank_of (insert y X) =\n  rank_of (X \\<union> (Y - {y})) + rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X", "also"], ["proof (state)\nthis:\n  rank_of (X \\<union> (Y - {y})) + rank_of (insert y X) =\n  rank_of (X \\<union> (Y - {y})) + rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X", "have \"\\<dots> = rank_of X + rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (X \\<union> (Y - {y})) + rank_of X = rank_of X + rank_of X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (X \\<union> (Y - {y})) + rank_of X = rank_of X + rank_of X", "have \"F = (Y - {y}) - X\" \"Y - {y} \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F = Y - {y} - X &&& Y - {y} \\<subseteq> carrier", "using insert"], ["proof (prove)\nusing this:\n  finite F\n  y \\<notin> F\n  \\<lbrakk>F = ?Y - X; X \\<subseteq> carrier; ?Y \\<subseteq> carrier;\n   \\<And>y.\n      y \\<in> ?Y - X \\<Longrightarrow>\n      rank_of (insert y X) = rank_of X\\<rbrakk>\n  \\<Longrightarrow> rank_of (X \\<union> ?Y) = rank_of X\n  insert y F = Y - X\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  ?y \\<in> Y - X \\<Longrightarrow> rank_of (insert ?y X) = rank_of X\n\ngoal (1 subgoal):\n 1. F = Y - {y} - X &&& Y - {y} \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  F = Y - {y} - X\n  Y - {y} \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> (Y - {y})) + rank_of X = rank_of X + rank_of X", "then"], ["proof (chain)\npicking this:\n  F = Y - {y} - X\n  Y - {y} \\<subseteq> carrier", "show ?thesis"], ["proof (prove)\nusing this:\n  F = Y - {y} - X\n  Y - {y} \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> (Y - {y})) + rank_of X = rank_of X + rank_of X", "using insert insert(3)[of \"Y - {y}\"]"], ["proof (prove)\nusing this:\n  F = Y - {y} - X\n  Y - {y} \\<subseteq> carrier\n  finite F\n  y \\<notin> F\n  \\<lbrakk>F = ?Y - X; X \\<subseteq> carrier; ?Y \\<subseteq> carrier;\n   \\<And>y.\n      y \\<in> ?Y - X \\<Longrightarrow>\n      rank_of (insert y X) = rank_of X\\<rbrakk>\n  \\<Longrightarrow> rank_of (X \\<union> ?Y) = rank_of X\n  insert y F = Y - X\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  ?y \\<in> Y - X \\<Longrightarrow> rank_of (insert ?y X) = rank_of X\n  \\<lbrakk>F = Y - {y} - X; X \\<subseteq> carrier;\n   Y - {y} \\<subseteq> carrier;\n   \\<And>ya.\n      ya \\<in> Y - {y} - X \\<Longrightarrow>\n      rank_of (insert ya X) = rank_of X\\<rbrakk>\n  \\<Longrightarrow> rank_of (X \\<union> (Y - {y})) = rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> (Y - {y})) + rank_of X = rank_of X + rank_of X", "by auto"], ["proof (state)\nthis:\n  rank_of (X \\<union> (Y - {y})) + rank_of X = rank_of X + rank_of X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of (X \\<union> (Y - {y})) + rank_of X = rank_of X + rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X", "finally"], ["proof (chain)\npicking this:\n  rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X", "show ?thesis"], ["proof (prove)\nusing this:\n  rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X", "."], ["proof (state)\nthis:\n  rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X\n\ngoal (1 subgoal):\n 1. \\<And>x F Y.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>Y.\n           \\<lbrakk>F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n            \\<And>y.\n               y \\<in> Y - X \\<Longrightarrow>\n               rank_of (insert y X) = rank_of X\\<rbrakk>\n           \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X;\n        insert x F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n        \\<And>y.\n           y \\<in> Y - X \\<Longrightarrow>\n           rank_of (insert y X) = rank_of X\\<rbrakk>\n       \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X", "moreover"], ["proof (state)\nthis:\n  rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X\n\ngoal (1 subgoal):\n 1. \\<And>x F Y.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>Y.\n           \\<lbrakk>F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n            \\<And>y.\n               y \\<in> Y - X \\<Longrightarrow>\n               rank_of (insert y X) = rank_of X\\<rbrakk>\n           \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X;\n        insert x F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n        \\<And>y.\n           y \\<in> Y - X \\<Longrightarrow>\n           rank_of (insert y X) = rank_of X\\<rbrakk>\n       \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X", "have \"rank_of (X \\<union> Y) + rank_of X \\<ge> rank_of X + rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of X + rank_of X \\<le> rank_of (X \\<union> Y) + rank_of X", "using insert rank_of_mono"], ["proof (prove)\nusing this:\n  finite F\n  y \\<notin> F\n  \\<lbrakk>F = ?Y - X; X \\<subseteq> carrier; ?Y \\<subseteq> carrier;\n   \\<And>y.\n      y \\<in> ?Y - X \\<Longrightarrow>\n      rank_of (insert y X) = rank_of X\\<rbrakk>\n  \\<Longrightarrow> rank_of (X \\<union> ?Y) = rank_of X\n  insert y F = Y - X\n  X \\<subseteq> carrier\n  Y \\<subseteq> carrier\n  ?y \\<in> Y - X \\<Longrightarrow> rank_of (insert ?y X) = rank_of X\n  \\<lbrakk>?X \\<subseteq> ?Y; ?Y \\<subseteq> carrier\\<rbrakk>\n  \\<Longrightarrow> rank_of ?X \\<le> rank_of ?Y\n\ngoal (1 subgoal):\n 1. rank_of X + rank_of X \\<le> rank_of (X \\<union> Y) + rank_of X", "by auto"], ["proof (state)\nthis:\n  rank_of X + rank_of X \\<le> rank_of (X \\<union> Y) + rank_of X\n\ngoal (1 subgoal):\n 1. \\<And>x F Y.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>Y.\n           \\<lbrakk>F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n            \\<And>y.\n               y \\<in> Y - X \\<Longrightarrow>\n               rank_of (insert y X) = rank_of X\\<rbrakk>\n           \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X;\n        insert x F = Y - X; X \\<subseteq> carrier; Y \\<subseteq> carrier;\n        \\<And>y.\n           y \\<in> Y - X \\<Longrightarrow>\n           rank_of (insert y X) = rank_of X\\<rbrakk>\n       \\<Longrightarrow> rank_of (X \\<union> Y) = rank_of X", "ultimately"], ["proof (chain)\npicking this:\n  rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X\n  rank_of X + rank_of X \\<le> rank_of (X \\<union> Y) + rank_of X", "show ?case"], ["proof (prove)\nusing this:\n  rank_of (X \\<union> Y) + rank_of X \\<le> rank_of X + rank_of X\n  rank_of X + rank_of X \\<le> rank_of (X \\<union> Y) + rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> Y) = rank_of X", "by auto"], ["proof (state)\nthis:\n  rank_of (X \\<union> Y) = rank_of X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of (X \\<union> Y) = rank_of X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma indep_iff_rank_of:\n  assumes \"X \\<subseteq> carrier\"\n  shows \"indep X \\<longleftrightarrow> rank_of X = card X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep X = (rank_of X = card X)", "proof (standard, goal_cases LTR RTL)"], ["proof (state)\ngoal (2 subgoals):\n 1. indep X \\<Longrightarrow> rank_of X = card X\n 2. rank_of X = card X \\<Longrightarrow> indep X", "case LTR"], ["proof (state)\nthis:\n  indep X\n\ngoal (2 subgoals):\n 1. indep X \\<Longrightarrow> rank_of X = card X\n 2. rank_of X = card X \\<Longrightarrow> indep X", "then"], ["proof (chain)\npicking this:\n  indep X", "have \"indep_in X X\""], ["proof (prove)\nusing this:\n  indep X\n\ngoal (1 subgoal):\n 1. indep_in X X", "by (auto intro: indep_inI)"], ["proof (state)\nthis:\n  indep_in X X\n\ngoal (2 subgoals):\n 1. indep X \\<Longrightarrow> rank_of X = card X\n 2. rank_of X = card X \\<Longrightarrow> indep X", "then"], ["proof (chain)\npicking this:\n  indep_in X X", "have \"basis_in X X\""], ["proof (prove)\nusing this:\n  indep_in X X\n\ngoal (1 subgoal):\n 1. basis_in X X", "by (auto intro: basis_inI[OF assms])"], ["proof (state)\nthis:\n  basis_in X X\n\ngoal (2 subgoals):\n 1. indep X \\<Longrightarrow> rank_of X = card X\n 2. rank_of X = card X \\<Longrightarrow> indep X", "then"], ["proof (chain)\npicking this:\n  basis_in X X", "show ?case"], ["proof (prove)\nusing this:\n  basis_in X X\n\ngoal (1 subgoal):\n 1. rank_of X = card X", "using rank_of_eq_card_basis_in[OF assms]"], ["proof (prove)\nusing this:\n  basis_in X X\n  basis_in X ?B \\<Longrightarrow> rank_of X = card ?B\n\ngoal (1 subgoal):\n 1. rank_of X = card X", "by auto"], ["proof (state)\nthis:\n  rank_of X = card X\n\ngoal (1 subgoal):\n 1. rank_of X = card X \\<Longrightarrow> indep X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of X = card X \\<Longrightarrow> indep X", "case RTL"], ["proof (state)\nthis:\n  rank_of X = card X\n\ngoal (1 subgoal):\n 1. rank_of X = card X \\<Longrightarrow> indep X", "obtain B where B: \"basis_in X B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B. basis_in X B \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using basis_in_ex[OF assms]"], ["proof (prove)\nusing this:\n  \\<exists>B. basis_in X B\n\ngoal (1 subgoal):\n 1. (\\<And>B. basis_in X B \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  basis_in X B\n\ngoal (1 subgoal):\n 1. rank_of X = card X \\<Longrightarrow> indep X", "then"], ["proof (chain)\npicking this:\n  basis_in X B", "have \"card B = card X\""], ["proof (prove)\nusing this:\n  basis_in X B\n\ngoal (1 subgoal):\n 1. card B = card X", "using RTL rank_of_eq_card_basis_in[OF assms]"], ["proof (prove)\nusing this:\n  basis_in X B\n  rank_of X = card X\n  basis_in X ?B \\<Longrightarrow> rank_of X = card ?B\n\ngoal (1 subgoal):\n 1. card B = card X", "by auto"], ["proof (state)\nthis:\n  card B = card X\n\ngoal (1 subgoal):\n 1. rank_of X = card X \\<Longrightarrow> indep X", "then"], ["proof (chain)\npicking this:\n  card B = card X", "have \"B = X\""], ["proof (prove)\nusing this:\n  card B = card X\n\ngoal (1 subgoal):\n 1. B = X", "using basis_in_subset_carrier[OF assms B] card_seteq[OF finite_subset[OF assms carrier_finite]]"], ["proof (prove)\nusing this:\n  card B = card X\n  B \\<subseteq> X\n  \\<lbrakk>?A \\<subseteq> X; card X \\<le> card ?A\\<rbrakk>\n  \\<Longrightarrow> ?A = X\n\ngoal (1 subgoal):\n 1. B = X", "by auto"], ["proof (state)\nthis:\n  B = X\n\ngoal (1 subgoal):\n 1. rank_of X = card X \\<Longrightarrow> indep X", "then"], ["proof (chain)\npicking this:\n  B = X", "show ?case"], ["proof (prove)\nusing this:\n  B = X\n\ngoal (1 subgoal):\n 1. indep X", "using basis_in_indep_in[OF assms B] indep_in_indep"], ["proof (prove)\nusing this:\n  B = X\n  indep_in X B\n  indep_in ?\\<E> ?X \\<Longrightarrow> indep ?X\n\ngoal (1 subgoal):\n 1. indep X", "by auto"], ["proof (state)\nthis:\n  indep X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_iff_rank_of:\n  assumes \"X \\<subseteq> carrier\"\n  shows \"basis X \\<longleftrightarrow> rank_of X = card X \\<and> rank_of X = rank_of carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis X = (rank_of X = card X \\<and> rank_of X = rank_of carrier)", "proof (standard, goal_cases LTR RTL)"], ["proof (state)\ngoal (2 subgoals):\n 1. basis X \\<Longrightarrow>\n    rank_of X = card X \\<and> rank_of X = rank_of carrier\n 2. rank_of X = card X \\<and> rank_of X = rank_of carrier \\<Longrightarrow>\n    basis X", "case LTR"], ["proof (state)\nthis:\n  basis X\n\ngoal (2 subgoals):\n 1. basis X \\<Longrightarrow>\n    rank_of X = card X \\<and> rank_of X = rank_of carrier\n 2. rank_of X = card X \\<and> rank_of X = rank_of carrier \\<Longrightarrow>\n    basis X", "then"], ["proof (chain)\npicking this:\n  basis X", "have \"rank_of X = card X\""], ["proof (prove)\nusing this:\n  basis X\n\ngoal (1 subgoal):\n 1. rank_of X = card X", "using assms indep_iff_rank_of basis_indep"], ["proof (prove)\nusing this:\n  basis X\n  X \\<subseteq> carrier\n  ?X \\<subseteq> carrier \\<Longrightarrow> indep ?X = (rank_of ?X = card ?X)\n  basis ?X \\<Longrightarrow> indep ?X\n\ngoal (1 subgoal):\n 1. rank_of X = card X", "by auto"], ["proof (state)\nthis:\n  rank_of X = card X\n\ngoal (2 subgoals):\n 1. basis X \\<Longrightarrow>\n    rank_of X = card X \\<and> rank_of X = rank_of carrier\n 2. rank_of X = card X \\<and> rank_of X = rank_of carrier \\<Longrightarrow>\n    basis X", "moreover"], ["proof (state)\nthis:\n  rank_of X = card X\n\ngoal (2 subgoals):\n 1. basis X \\<Longrightarrow>\n    rank_of X = card X \\<and> rank_of X = rank_of carrier\n 2. rank_of X = card X \\<and> rank_of X = rank_of carrier \\<Longrightarrow>\n    basis X", "have \"\\<dots> = rank_of carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card X = rank_of carrier", "using LTR rank_of_eq_card_basis_in[of carrier X] basis_iff_basis_in"], ["proof (prove)\nusing this:\n  basis X\n  \\<lbrakk>carrier \\<subseteq> carrier; basis_in carrier X\\<rbrakk>\n  \\<Longrightarrow> rank_of carrier = card X\n  basis ?B = basis_in carrier ?B\n\ngoal (1 subgoal):\n 1. card X = rank_of carrier", "by auto"], ["proof (state)\nthis:\n  card X = rank_of carrier\n\ngoal (2 subgoals):\n 1. basis X \\<Longrightarrow>\n    rank_of X = card X \\<and> rank_of X = rank_of carrier\n 2. rank_of X = card X \\<and> rank_of X = rank_of carrier \\<Longrightarrow>\n    basis X", "ultimately"], ["proof (chain)\npicking this:\n  rank_of X = card X\n  card X = rank_of carrier", "show ?case"], ["proof (prove)\nusing this:\n  rank_of X = card X\n  card X = rank_of carrier\n\ngoal (1 subgoal):\n 1. rank_of X = card X \\<and> rank_of X = rank_of carrier", "by auto"], ["proof (state)\nthis:\n  rank_of X = card X \\<and> rank_of X = rank_of carrier\n\ngoal (1 subgoal):\n 1. rank_of X = card X \\<and> rank_of X = rank_of carrier \\<Longrightarrow>\n    basis X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of X = card X \\<and> rank_of X = rank_of carrier \\<Longrightarrow>\n    basis X", "case RTL"], ["proof (state)\nthis:\n  rank_of X = card X \\<and> rank_of X = rank_of carrier\n\ngoal (1 subgoal):\n 1. rank_of X = card X \\<and> rank_of X = rank_of carrier \\<Longrightarrow>\n    basis X", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. basis X", "proof (rule basisI)"], ["proof (state)\ngoal (2 subgoals):\n 1. indep X\n 2. \\<And>x. x \\<in> carrier - X \\<Longrightarrow> \\<not> indep (insert x X)", "show \"indep X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep X", "using assms RTL indep_iff_rank_of"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  rank_of X = card X \\<and> rank_of X = rank_of carrier\n  ?X \\<subseteq> carrier \\<Longrightarrow> indep ?X = (rank_of ?X = card ?X)\n\ngoal (1 subgoal):\n 1. indep X", "by blast"], ["proof (state)\nthis:\n  indep X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier - X \\<Longrightarrow> \\<not> indep (insert x X)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier - X \\<Longrightarrow> \\<not> indep (insert x X)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier - X \\<Longrightarrow> \\<not> indep (insert x X)", "assume x: \"x \\<in> carrier - X\""], ["proof (state)\nthis:\n  x \\<in> carrier - X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier - X \\<Longrightarrow> \\<not> indep (insert x X)", "show \"\\<not> indep (insert x X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> indep (insert x X)", "proof (rule ccontr, goal_cases False)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> indep (insert x X) \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> \\<not> indep (insert x X)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> indep (insert x X) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> \\<not> indep (insert x X)", "have \"card (insert x X) \\<le> rank_of carrier\""], ["proof (prove)\nusing this:\n  \\<not> \\<not> indep (insert x X)\n\ngoal (1 subgoal):\n 1. card (insert x X) \\<le> rank_of carrier", "using assms x indep_inI rank_of_indep_in_le"], ["proof (prove)\nusing this:\n  \\<not> \\<not> indep (insert x X)\n  X \\<subseteq> carrier\n  x \\<in> carrier - X\n  \\<lbrakk>?X \\<subseteq> ?\\<E>; indep ?X\\<rbrakk>\n  \\<Longrightarrow> indep_in ?\\<E> ?X\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; indep_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> card ?X \\<le> rank_of ?\\<E>\n\ngoal (1 subgoal):\n 1. card (insert x X) \\<le> rank_of carrier", "by auto"], ["proof (state)\nthis:\n  card (insert x X) \\<le> rank_of carrier\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> indep (insert x X) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  card (insert x X) \\<le> rank_of carrier\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> indep (insert x X) \\<Longrightarrow> False", "have \"\\<dots> = card X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of carrier = card X", "using RTL"], ["proof (prove)\nusing this:\n  rank_of X = card X \\<and> rank_of X = rank_of carrier\n\ngoal (1 subgoal):\n 1. rank_of carrier = card X", "by auto"], ["proof (state)\nthis:\n  rank_of carrier = card X\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> indep (insert x X) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  card (insert x X) \\<le> card X", "show ?case"], ["proof (prove)\nusing this:\n  card (insert x X) \\<le> card X\n\ngoal (1 subgoal):\n 1. False", "using finite_subset[OF assms carrier_finite] x"], ["proof (prove)\nusing this:\n  card (insert x X) \\<le> card X\n  finite X\n  x \\<in> carrier - X\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> indep (insert x X)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  basis X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma circuit_iff_rank_of:\n  assumes \"X \\<subseteq> carrier\"\n  shows \"circuit X \\<longleftrightarrow> X \\<noteq> {} \\<and> (\\<forall>x \\<in> X. rank_of (X - {x}) = card (X - {x}) \\<and> card (X - {x}) = rank_of X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circuit X =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = rank_of X))", "proof (standard, goal_cases LTR RTL)"], ["proof (state)\ngoal (2 subgoals):\n 1. circuit X \\<Longrightarrow>\n    X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X)\n 2. X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X) \\<Longrightarrow>\n    circuit X", "case LTR"], ["proof (state)\nthis:\n  circuit X\n\ngoal (2 subgoals):\n 1. circuit X \\<Longrightarrow>\n    X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X)\n 2. X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X) \\<Longrightarrow>\n    circuit X", "then"], ["proof (chain)\npicking this:\n  circuit X", "have \"X \\<noteq> {}\""], ["proof (prove)\nusing this:\n  circuit X\n\ngoal (1 subgoal):\n 1. X \\<noteq> {}", "using circuit_nonempty"], ["proof (prove)\nusing this:\n  circuit X\n  circuit ?X \\<Longrightarrow> ?X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. X \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (2 subgoals):\n 1. circuit X \\<Longrightarrow>\n    X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X)\n 2. X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X) \\<Longrightarrow>\n    circuit X", "moreover"], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (2 subgoals):\n 1. circuit X \\<Longrightarrow>\n    X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X)\n 2. X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X) \\<Longrightarrow>\n    circuit X", "have indep_remove: \"\\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = card (X - {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = card (X - {x})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = card (X - {x})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = card (X - {x})", "assume \"x \\<in> X\""], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = card (X - {x})", "then"], ["proof (chain)\npicking this:\n  x \\<in> X", "have \"indep (X - {x})\""], ["proof (prove)\nusing this:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. indep (X - {x})", "using circuit_min_dep[OF LTR]"], ["proof (prove)\nusing this:\n  x \\<in> X\n  ?x \\<in> X \\<Longrightarrow> indep (X - {?x})\n\ngoal (1 subgoal):\n 1. indep (X - {x})", "by auto"], ["proof (state)\nthis:\n  indep (X - {x})\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = card (X - {x})", "moreover"], ["proof (state)\nthis:\n  indep (X - {x})\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = card (X - {x})", "have \"X - {x} \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X - {x} \\<subseteq> carrier", "using assms"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. X - {x} \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  X - {x} \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = card (X - {x})", "ultimately"], ["proof (chain)\npicking this:\n  indep (X - {x})\n  X - {x} \\<subseteq> carrier", "show \"rank_of (X - {x}) = card (X - {x})\""], ["proof (prove)\nusing this:\n  indep (X - {x})\n  X - {x} \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. rank_of (X - {x}) = card (X - {x})", "using indep_iff_rank_of"], ["proof (prove)\nusing this:\n  indep (X - {x})\n  X - {x} \\<subseteq> carrier\n  ?X \\<subseteq> carrier \\<Longrightarrow> indep ?X = (rank_of ?X = card ?X)\n\ngoal (1 subgoal):\n 1. rank_of (X - {x}) = card (X - {x})", "by auto"], ["proof (state)\nthis:\n  rank_of (X - {x}) = card (X - {x})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> X \\<Longrightarrow> rank_of (X - {?x}) = card (X - {?x})\n\ngoal (2 subgoals):\n 1. circuit X \\<Longrightarrow>\n    X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X)\n 2. X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X) \\<Longrightarrow>\n    circuit X", "moreover"], ["proof (state)\nthis:\n  ?x \\<in> X \\<Longrightarrow> rank_of (X - {?x}) = card (X - {?x})\n\ngoal (2 subgoals):\n 1. circuit X \\<Longrightarrow>\n    X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X)\n 2. X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X) \\<Longrightarrow>\n    circuit X", "have \"\\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = rank_of X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = rank_of X", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = rank_of X", "assume *: \"x \\<in> X\""], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = rank_of X", "have \"rank_of X \\<le> card X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of X \\<le> card X", "using assms rank_of_le"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  ?\\<E> \\<subseteq> carrier \\<Longrightarrow> rank_of ?\\<E> \\<le> card ?\\<E>\n\ngoal (1 subgoal):\n 1. rank_of X \\<le> card X", "by auto"], ["proof (state)\nthis:\n  rank_of X \\<le> card X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = rank_of X", "moreover"], ["proof (state)\nthis:\n  rank_of X \\<le> card X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = rank_of X", "have \"rank_of X \\<noteq> card X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of X \\<noteq> card X", "using assms LTR circuitD indep_iff_rank_of[of X]"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  circuit X\n  circuit ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n  circuit ?X \\<Longrightarrow> \\<not> indep ?X\n  \\<lbrakk>circuit ?X; ?x \\<in> ?X\\<rbrakk>\n  \\<Longrightarrow> indep (?X - {?x})\n  X \\<subseteq> carrier \\<Longrightarrow> indep X = (rank_of X = card X)\n\ngoal (1 subgoal):\n 1. rank_of X \\<noteq> card X", "by auto"], ["proof (state)\nthis:\n  rank_of X \\<noteq> card X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = rank_of X", "ultimately"], ["proof (chain)\npicking this:\n  rank_of X \\<le> card X\n  rank_of X \\<noteq> card X", "have \"rank_of X < card X\""], ["proof (prove)\nusing this:\n  rank_of X \\<le> card X\n  rank_of X \\<noteq> card X\n\ngoal (1 subgoal):\n 1. rank_of X < card X", "by auto"], ["proof (state)\nthis:\n  rank_of X < card X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = rank_of X", "then"], ["proof (chain)\npicking this:\n  rank_of X < card X", "have \"rank_of X \\<le> card (X - {x})\""], ["proof (prove)\nusing this:\n  rank_of X < card X\n\ngoal (1 subgoal):\n 1. rank_of X \\<le> card (X - {x})", "using * finite_subset[OF assms] carrier_finite"], ["proof (prove)\nusing this:\n  rank_of X < card X\n  x \\<in> X\n  finite carrier \\<Longrightarrow> finite X\n  finite carrier\n\ngoal (1 subgoal):\n 1. rank_of X \\<le> card (X - {x})", "by auto"], ["proof (state)\nthis:\n  rank_of X \\<le> card (X - {x})\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = rank_of X", "also"], ["proof (state)\nthis:\n  rank_of X \\<le> card (X - {x})\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = rank_of X", "have \"\\<dots> = rank_of (X - {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (X - {x}) = rank_of (X - {x})", "using indep_remove \\<open>x \\<in> X\\<close>"], ["proof (prove)\nusing this:\n  ?x \\<in> X \\<Longrightarrow> rank_of (X - {?x}) = card (X - {?x})\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. card (X - {x}) = rank_of (X - {x})", "by auto"], ["proof (state)\nthis:\n  card (X - {x}) = rank_of (X - {x})\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = rank_of X", "finally"], ["proof (chain)\npicking this:\n  rank_of X \\<le> rank_of (X - {x})", "show \"rank_of (X - {x}) = rank_of X\""], ["proof (prove)\nusing this:\n  rank_of X \\<le> rank_of (X - {x})\n\ngoal (1 subgoal):\n 1. rank_of (X - {x}) = rank_of X", "using assms rank_of_mono[of \"X - {x}\" X]"], ["proof (prove)\nusing this:\n  rank_of X \\<le> rank_of (X - {x})\n  X \\<subseteq> carrier\n  \\<lbrakk>X - {x} \\<subseteq> X; X \\<subseteq> carrier\\<rbrakk>\n  \\<Longrightarrow> rank_of (X - {x}) \\<le> rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (X - {x}) = rank_of X", "by auto"], ["proof (state)\nthis:\n  rank_of (X - {x}) = rank_of X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> X \\<Longrightarrow> rank_of (X - {?x}) = rank_of X\n\ngoal (2 subgoals):\n 1. circuit X \\<Longrightarrow>\n    X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X)\n 2. X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X) \\<Longrightarrow>\n    circuit X", "ultimately"], ["proof (chain)\npicking this:\n  X \\<noteq> {}\n  ?x \\<in> X \\<Longrightarrow> rank_of (X - {?x}) = card (X - {?x})\n  ?x \\<in> X \\<Longrightarrow> rank_of (X - {?x}) = rank_of X", "show ?case"], ["proof (prove)\nusing this:\n  X \\<noteq> {}\n  ?x \\<in> X \\<Longrightarrow> rank_of (X - {?x}) = card (X - {?x})\n  ?x \\<in> X \\<Longrightarrow> rank_of (X - {?x}) = rank_of X\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X)", "by auto"], ["proof (state)\nthis:\n  X \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>X.\n      rank_of (X - {x}) = card (X - {x}) \\<and> card (X - {x}) = rank_of X)\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X) \\<Longrightarrow>\n    circuit X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X) \\<Longrightarrow>\n    circuit X", "case RTL"], ["proof (state)\nthis:\n  X \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>X.\n      rank_of (X - {x}) = card (X - {x}) \\<and> card (X - {x}) = rank_of X)\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X) \\<Longrightarrow>\n    circuit X", "then"], ["proof (chain)\npicking this:\n  X \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>X.\n      rank_of (X - {x}) = card (X - {x}) \\<and> card (X - {x}) = rank_of X)", "have \"X \\<noteq> {}\"\n    and indep_remove: \"\\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = card (X - {x})\"\n    and dep: \"\\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = rank_of X\""], ["proof (prove)\nusing this:\n  X \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>X.\n      rank_of (X - {x}) = card (X - {x}) \\<and> card (X - {x}) = rank_of X)\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} &&&\n    (\\<And>x.\n        x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = card (X - {x})) &&&\n    (\\<And>x. x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = rank_of X)", "by auto"], ["proof (state)\nthis:\n  X \\<noteq> {}\n  ?x \\<in> X \\<Longrightarrow> rank_of (X - {?x}) = card (X - {?x})\n  ?x \\<in> X \\<Longrightarrow> rank_of (X - {?x}) = rank_of X\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<and>\n    (\\<forall>x\\<in>X.\n        rank_of (X - {x}) = card (X - {x}) \\<and>\n        card (X - {x}) = rank_of X) \\<Longrightarrow>\n    circuit X", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. circuit X", "using assms"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. circuit X", "proof (rule circuitI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<not> indep X\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> indep (X - {x})", "obtain x where x: \"x \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> X \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using \\<open>X \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> X \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (2 subgoals):\n 1. \\<not> indep X\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> indep (X - {x})", "then"], ["proof (chain)\npicking this:\n  x \\<in> X", "have \"rank_of X = card (X - {x})\""], ["proof (prove)\nusing this:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. rank_of X = card (X - {x})", "using dep indep_remove"], ["proof (prove)\nusing this:\n  x \\<in> X\n  ?x \\<in> X \\<Longrightarrow> rank_of (X - {?x}) = rank_of X\n  ?x \\<in> X \\<Longrightarrow> rank_of (X - {?x}) = card (X - {?x})\n\ngoal (1 subgoal):\n 1. rank_of X = card (X - {x})", "by auto"], ["proof (state)\nthis:\n  rank_of X = card (X - {x})\n\ngoal (2 subgoals):\n 1. \\<not> indep X\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> indep (X - {x})", "also"], ["proof (state)\nthis:\n  rank_of X = card (X - {x})\n\ngoal (2 subgoals):\n 1. \\<not> indep X\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> indep (X - {x})", "have \"\\<dots> < card X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (X - {x}) < card X", "using card_Diff1_less[OF finite_subset[OF assms carrier_finite] x]"], ["proof (prove)\nusing this:\n  card (X - {x}) < card X\n\ngoal (1 subgoal):\n 1. card (X - {x}) < card X", "."], ["proof (state)\nthis:\n  card (X - {x}) < card X\n\ngoal (2 subgoals):\n 1. \\<not> indep X\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> indep (X - {x})", "finally"], ["proof (chain)\npicking this:\n  rank_of X < card X", "show \"\\<not> indep X\""], ["proof (prove)\nusing this:\n  rank_of X < card X\n\ngoal (1 subgoal):\n 1. \\<not> indep X", "using indep_iff_rank_of[OF assms]"], ["proof (prove)\nusing this:\n  rank_of X < card X\n  indep X = (rank_of X = card X)\n\ngoal (1 subgoal):\n 1. \\<not> indep X", "by auto"], ["proof (state)\nthis:\n  \\<not> indep X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> indep (X - {x})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> indep (X - {x})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> indep (X - {x})", "assume \"x \\<in> X\""], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> indep (X - {x})", "then"], ["proof (chain)\npicking this:\n  x \\<in> X", "show \"indep (X - {x})\""], ["proof (prove)\nusing this:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. indep (X - {x})", "using assms indep_remove[of x] indep_iff_rank_of[of \"X - {x}\"]"], ["proof (prove)\nusing this:\n  x \\<in> X\n  X \\<subseteq> carrier\n  x \\<in> X \\<Longrightarrow> rank_of (X - {x}) = card (X - {x})\n  X - {x} \\<subseteq> carrier \\<Longrightarrow>\n  indep (X - {x}) = (rank_of (X - {x}) = card (X - {x}))\n\ngoal (1 subgoal):\n 1. indep (X - {x})", "by auto"], ["proof (state)\nthis:\n  indep (X - {x})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  circuit X\n\ngoal:\nNo subgoals!", "qed"], ["", "context\n  fixes \\<E>\n  assumes *: \"\\<E> \\<subseteq> carrier\"\nbegin"], ["", "interpretation \\<E>: matroid \\<E> \"indep_in \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matroid \\<E> (indep_in \\<E>)", "using *"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. matroid \\<E> (indep_in \\<E>)", "by auto"], ["", "lemma indep_in_iff_rank_of:\n  assumes \"X \\<subseteq> \\<E>\"\n  shows \"indep_in \\<E> X \\<longleftrightarrow> rank_of X = card X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in \\<E> X = (rank_of X = card X)", "using assms \\<E>.indep_iff_rank_of rank_of_sub_cong[OF * assms]"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>\n  ?X \\<subseteq> \\<E> \\<Longrightarrow>\n  indep_in \\<E> ?X = (\\<E>.rank_of ?X = card ?X)\n  \\<E>.rank_of X = rank_of X\n\ngoal (1 subgoal):\n 1. indep_in \\<E> X = (rank_of X = card X)", "by auto"], ["", "lemma basis_in_iff_rank_of:\n  assumes \"X \\<subseteq> \\<E>\"\n  shows \"basis_in \\<E> X \\<longleftrightarrow> rank_of X = card X \\<and> rank_of X = rank_of \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis_in \\<E> X = (rank_of X = card X \\<and> rank_of X = rank_of \\<E>)", "using \\<E>.basis_iff_rank_of[OF assms] rank_of_sub_cong[OF *] assms"], ["proof (prove)\nusing this:\n  \\<E>.basis X =\n  (\\<E>.rank_of X = card X \\<and> \\<E>.rank_of X = \\<E>.rank_of \\<E>)\n  ?\\<E>' \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.rank_of ?\\<E>' = rank_of ?\\<E>'\n  X \\<subseteq> \\<E>\n\ngoal (1 subgoal):\n 1. basis_in \\<E> X = (rank_of X = card X \\<and> rank_of X = rank_of \\<E>)", "unfolding basis_in_def"], ["proof (prove)\nusing this:\n  \\<E>.basis X =\n  (\\<E>.rank_of X = card X \\<and> \\<E>.rank_of X = \\<E>.rank_of \\<E>)\n  ?\\<E>' \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.rank_of ?\\<E>' = rank_of ?\\<E>'\n  X \\<subseteq> \\<E>\n\ngoal (1 subgoal):\n 1. \\<E>.basis X = (rank_of X = card X \\<and> rank_of X = rank_of \\<E>)", "by auto"], ["", "lemma circuit_in_iff_rank_of:\n  assumes \"X \\<subseteq> \\<E>\"\n  shows \"circuit_in \\<E> X \\<longleftrightarrow> X \\<noteq> {} \\<and> (\\<forall>x \\<in> X. rank_of (X - {x}) = card (X - {x}) \\<and> card (X - {x}) = rank_of X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circuit_in \\<E> X =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = rank_of X))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. circuit_in \\<E> X =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = rank_of X))", "have \"circuit_in \\<E> X \\<longleftrightarrow> \\<E>.circuit X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circuit_in \\<E> X = \\<E>.circuit X", "unfolding circuit_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.circuit X = \\<E>.circuit X", ".."], ["proof (state)\nthis:\n  circuit_in \\<E> X = \\<E>.circuit X\n\ngoal (1 subgoal):\n 1. circuit_in \\<E> X =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = rank_of X))", "also"], ["proof (state)\nthis:\n  circuit_in \\<E> X = \\<E>.circuit X\n\ngoal (1 subgoal):\n 1. circuit_in \\<E> X =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = rank_of X))", "have \"\\<dots> \\<longleftrightarrow>  X \\<noteq> {} \\<and> (\\<forall>x \\<in> X. \\<E>.rank_of (X - {x}) = card (X - {x}) \\<and> card (X - {x}) = \\<E>.rank_of X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.circuit X =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         \\<E>.rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = \\<E>.rank_of X))", "using \\<E>.circuit_iff_rank_of[OF assms]"], ["proof (prove)\nusing this:\n  \\<E>.circuit X =\n  (X \\<noteq> {} \\<and>\n   (\\<forall>x\\<in>X.\n       \\<E>.rank_of (X - {x}) = card (X - {x}) \\<and>\n       card (X - {x}) = \\<E>.rank_of X))\n\ngoal (1 subgoal):\n 1. \\<E>.circuit X =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         \\<E>.rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = \\<E>.rank_of X))", "."], ["proof (state)\nthis:\n  \\<E>.circuit X =\n  (X \\<noteq> {} \\<and>\n   (\\<forall>x\\<in>X.\n       \\<E>.rank_of (X - {x}) = card (X - {x}) \\<and>\n       card (X - {x}) = \\<E>.rank_of X))\n\ngoal (1 subgoal):\n 1. circuit_in \\<E> X =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = rank_of X))", "also"], ["proof (state)\nthis:\n  \\<E>.circuit X =\n  (X \\<noteq> {} \\<and>\n   (\\<forall>x\\<in>X.\n       \\<E>.rank_of (X - {x}) = card (X - {x}) \\<and>\n       card (X - {x}) = \\<E>.rank_of X))\n\ngoal (1 subgoal):\n 1. circuit_in \\<E> X =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = rank_of X))", "have \"\\<dots> \\<longleftrightarrow> X \\<noteq> {} \\<and> (\\<forall>x \\<in> X. rank_of (X - {x}) = card (X - {x}) \\<and> card (X - {x}) = rank_of X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         \\<E>.rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = \\<E>.rank_of X)) =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = rank_of X))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         \\<E>.rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = \\<E>.rank_of X)) =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = rank_of X))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         \\<E>.rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = \\<E>.rank_of X)) =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = rank_of X))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         \\<E>.rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = \\<E>.rank_of X)) =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = rank_of X))", "have \"\\<E>.rank_of (X - {x}) = rank_of (X - {x})\" \"\\<E>.rank_of X = rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.rank_of (X - {x}) = rank_of (X - {x}) &&&\n    \\<E>.rank_of X = rank_of X", "using assms rank_of_sub_cong[OF *, of \"X - {x}\"] rank_of_sub_cong[OF *, of X]"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>\n  X - {x} \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.rank_of (X - {x}) = rank_of (X - {x})\n  X \\<subseteq> \\<E> \\<Longrightarrow> \\<E>.rank_of X = rank_of X\n\ngoal (1 subgoal):\n 1. \\<E>.rank_of (X - {x}) = rank_of (X - {x}) &&&\n    \\<E>.rank_of X = rank_of X", "by auto"], ["proof (state)\nthis:\n  \\<E>.rank_of (X - {x}) = rank_of (X - {x})\n  \\<E>.rank_of X = rank_of X\n\ngoal (1 subgoal):\n 1. (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         \\<E>.rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = \\<E>.rank_of X)) =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = rank_of X))", "then"], ["proof (chain)\npicking this:\n  \\<E>.rank_of (X - {x}) = rank_of (X - {x})\n  \\<E>.rank_of X = rank_of X", "have \"\\<E>.rank_of (X - {x}) = card (X - {x}) \\<and> card (X - {x}) = \\<E>.rank_of X \\<longleftrightarrow> rank_of (X - {x}) = card (X - {x}) \\<and> card (X - {x}) = rank_of X\""], ["proof (prove)\nusing this:\n  \\<E>.rank_of (X - {x}) = rank_of (X - {x})\n  \\<E>.rank_of X = rank_of X\n\ngoal (1 subgoal):\n 1. (\\<E>.rank_of (X - {x}) = card (X - {x}) \\<and>\n     card (X - {x}) = \\<E>.rank_of X) =\n    (rank_of (X - {x}) = card (X - {x}) \\<and> card (X - {x}) = rank_of X)", "by auto"], ["proof (state)\nthis:\n  (\\<E>.rank_of (X - {x}) = card (X - {x}) \\<and>\n   card (X - {x}) = \\<E>.rank_of X) =\n  (rank_of (X - {x}) = card (X - {x}) \\<and> card (X - {x}) = rank_of X)\n\ngoal (1 subgoal):\n 1. (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         \\<E>.rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = \\<E>.rank_of X)) =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = rank_of X))", "}"], ["proof (state)\nthis:\n  (\\<E>.rank_of (X - {?x2}) = card (X - {?x2}) \\<and>\n   card (X - {?x2}) = \\<E>.rank_of X) =\n  (rank_of (X - {?x2}) = card (X - {?x2}) \\<and>\n   card (X - {?x2}) = rank_of X)\n\ngoal (1 subgoal):\n 1. (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         \\<E>.rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = \\<E>.rank_of X)) =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = rank_of X))", "then"], ["proof (chain)\npicking this:\n  (\\<E>.rank_of (X - {?x2}) = card (X - {?x2}) \\<and>\n   card (X - {?x2}) = \\<E>.rank_of X) =\n  (rank_of (X - {?x2}) = card (X - {?x2}) \\<and>\n   card (X - {?x2}) = rank_of X)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<E>.rank_of (X - {?x2}) = card (X - {?x2}) \\<and>\n   card (X - {?x2}) = \\<E>.rank_of X) =\n  (rank_of (X - {?x2}) = card (X - {?x2}) \\<and>\n   card (X - {?x2}) = rank_of X)\n\ngoal (1 subgoal):\n 1. (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         \\<E>.rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = \\<E>.rank_of X)) =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = rank_of X))", "by auto"], ["proof (state)\nthis:\n  (X \\<noteq> {} \\<and>\n   (\\<forall>x\\<in>X.\n       \\<E>.rank_of (X - {x}) = card (X - {x}) \\<and>\n       card (X - {x}) = \\<E>.rank_of X)) =\n  (X \\<noteq> {} \\<and>\n   (\\<forall>x\\<in>X.\n       rank_of (X - {x}) = card (X - {x}) \\<and>\n       card (X - {x}) = rank_of X))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (X \\<noteq> {} \\<and>\n   (\\<forall>x\\<in>X.\n       \\<E>.rank_of (X - {x}) = card (X - {x}) \\<and>\n       card (X - {x}) = \\<E>.rank_of X)) =\n  (X \\<noteq> {} \\<and>\n   (\\<forall>x\\<in>X.\n       rank_of (X - {x}) = card (X - {x}) \\<and>\n       card (X - {x}) = rank_of X))\n\ngoal (1 subgoal):\n 1. circuit_in \\<E> X =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = rank_of X))", "finally"], ["proof (chain)\npicking this:\n  circuit_in \\<E> X =\n  (X \\<noteq> {} \\<and>\n   (\\<forall>x\\<in>X.\n       rank_of (X - {x}) = card (X - {x}) \\<and>\n       card (X - {x}) = rank_of X))", "show ?thesis"], ["proof (prove)\nusing this:\n  circuit_in \\<E> X =\n  (X \\<noteq> {} \\<and>\n   (\\<forall>x\\<in>X.\n       rank_of (X - {x}) = card (X - {x}) \\<and>\n       card (X - {x}) = rank_of X))\n\ngoal (1 subgoal):\n 1. circuit_in \\<E> X =\n    (X \\<noteq> {} \\<and>\n     (\\<forall>x\\<in>X.\n         rank_of (X - {x}) = card (X - {x}) \\<and>\n         card (X - {x}) = rank_of X))", "."], ["proof (state)\nthis:\n  circuit_in \\<E> X =\n  (X \\<noteq> {} \\<and>\n   (\\<forall>x\\<in>X.\n       rank_of (X - {x}) = card (X - {x}) \\<and>\n       card (X - {x}) = rank_of X))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Closure\\<close>"], ["", "definition cl :: \"'a set \\<Rightarrow> 'a set\" where\n  \"cl X \\<equiv> {x \\<in> carrier. rank_of (insert x X) = rank_of X}\""], ["", "lemma clI:\n  assumes \"x \\<in> carrier\"\n  assumes \"rank_of (insert x X) = rank_of X\"\n  shows \"x \\<in> cl X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> cl X", "unfolding cl_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> carrier. rank_of (insert x X) = rank_of X}", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n  rank_of (insert x X) = rank_of X\n\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> carrier. rank_of (insert x X) = rank_of X}", "by auto"], ["", "lemma cl_altdef:\n  assumes \"X \\<subseteq> carrier\"\n  shows \"cl X = \\<Union>{Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl X =\n    \\<Union>\n     {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cl X =\n    \\<Union>\n     {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. cl X =\n    \\<Union>\n     {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. cl X =\n    \\<Union>\n     {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "assume *: \"x \\<in> cl X\""], ["proof (state)\nthis:\n  x \\<in> cl X\n\ngoal (1 subgoal):\n 1. cl X =\n    \\<Union>\n     {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "have \"x \\<in> \\<Union>{Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> \\<Union>\n             {Y \\<in> Pow carrier.\n              X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ?X \\<in> {Y \\<in> Pow carrier.\n              X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n 2. x \\<in> ?X", "show \"insert x X \\<in> {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x X\n    \\<in> {Y \\<in> Pow carrier.\n           X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "using assms *"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> cl X\n\ngoal (1 subgoal):\n 1. insert x X\n    \\<in> {Y \\<in> Pow carrier.\n           X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "unfolding cl_def"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> {x \\<in> carrier. rank_of (insert x X) = rank_of X}\n\ngoal (1 subgoal):\n 1. insert x X\n    \\<in> {Y \\<in> Pow carrier.\n           X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "by auto"], ["proof (state)\nthis:\n  insert x X\n  \\<in> {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n\ngoal (1 subgoal):\n 1. x \\<in> insert x X", "qed auto"], ["proof (state)\nthis:\n  x \\<in> \\<Union>\n           {Y \\<in> Pow carrier.\n            X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n\ngoal (1 subgoal):\n 1. cl X =\n    \\<Union>\n     {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "}"], ["proof (state)\nthis:\n  ?x2 \\<in> cl X \\<Longrightarrow>\n  ?x2\n  \\<in> \\<Union>\n         {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n\ngoal (1 subgoal):\n 1. cl X =\n    \\<Union>\n     {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "moreover"], ["proof (state)\nthis:\n  ?x2 \\<in> cl X \\<Longrightarrow>\n  ?x2\n  \\<in> \\<Union>\n         {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n\ngoal (1 subgoal):\n 1. cl X =\n    \\<Union>\n     {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "{"], ["proof (state)\nthis:\n  ?x2 \\<in> cl X \\<Longrightarrow>\n  ?x2\n  \\<in> \\<Union>\n         {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n\ngoal (1 subgoal):\n 1. cl X =\n    \\<Union>\n     {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. cl X =\n    \\<Union>\n     {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "assume *: \"x \\<in> \\<Union>{Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\""], ["proof (state)\nthis:\n  x \\<in> \\<Union>\n           {Y \\<in> Pow carrier.\n            X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n\ngoal (1 subgoal):\n 1. cl X =\n    \\<Union>\n     {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<Union>\n           {Y \\<in> Pow carrier.\n            X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "obtain Y where Y: \"x \\<in> Y\" \"Y \\<subseteq> carrier\" \"X \\<subseteq> Y\" \"rank_of Y = rank_of X\""], ["proof (prove)\nusing this:\n  x \\<in> \\<Union>\n           {Y \\<in> Pow carrier.\n            X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n\ngoal (1 subgoal):\n 1. (\\<And>Y.\n        \\<lbrakk>x \\<in> Y; Y \\<subseteq> carrier; X \\<subseteq> Y;\n         rank_of Y = rank_of X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> Y\n  Y \\<subseteq> carrier\n  X \\<subseteq> Y\n  rank_of Y = rank_of X\n\ngoal (1 subgoal):\n 1. cl X =\n    \\<Union>\n     {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "have \"rank_of (insert x X) = rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "have \"rank_of (insert x X) \\<le> rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> rank_of X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> rank_of X", "have \"insert x X \\<subseteq> Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x X \\<subseteq> Y", "using Y"], ["proof (prove)\nusing this:\n  x \\<in> Y\n  Y \\<subseteq> carrier\n  X \\<subseteq> Y\n  rank_of Y = rank_of X\n\ngoal (1 subgoal):\n 1. insert x X \\<subseteq> Y", "by auto"], ["proof (state)\nthis:\n  insert x X \\<subseteq> Y\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> rank_of X", "then"], ["proof (chain)\npicking this:\n  insert x X \\<subseteq> Y", "show ?thesis"], ["proof (prove)\nusing this:\n  insert x X \\<subseteq> Y\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> rank_of X", "using rank_of_mono[of \"insert x X\" Y] Y"], ["proof (prove)\nusing this:\n  insert x X \\<subseteq> Y\n  \\<lbrakk>insert x X \\<subseteq> Y; Y \\<subseteq> carrier\\<rbrakk>\n  \\<Longrightarrow> rank_of (insert x X) \\<le> rank_of Y\n  x \\<in> Y\n  Y \\<subseteq> carrier\n  X \\<subseteq> Y\n  rank_of Y = rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> rank_of X", "by auto"], ["proof (state)\nthis:\n  rank_of (insert x X) \\<le> rank_of X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of (insert x X) \\<le> rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "moreover"], ["proof (state)\nthis:\n  rank_of (insert x X) \\<le> rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "have \"rank_of X \\<le> rank_of (insert x X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of X \\<le> rank_of (insert x X)", "using Y"], ["proof (prove)\nusing this:\n  x \\<in> Y\n  Y \\<subseteq> carrier\n  X \\<subseteq> Y\n  rank_of Y = rank_of X\n\ngoal (1 subgoal):\n 1. rank_of X \\<le> rank_of (insert x X)", "by (auto intro: rank_of_mono)"], ["proof (state)\nthis:\n  rank_of X \\<le> rank_of (insert x X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "ultimately"], ["proof (chain)\npicking this:\n  rank_of (insert x X) \\<le> rank_of X\n  rank_of X \\<le> rank_of (insert x X)", "show ?thesis"], ["proof (prove)\nusing this:\n  rank_of (insert x X) \\<le> rank_of X\n  rank_of X \\<le> rank_of (insert x X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "by auto"], ["proof (state)\nthis:\n  rank_of (insert x X) = rank_of X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of (insert x X) = rank_of X\n\ngoal (1 subgoal):\n 1. cl X =\n    \\<Union>\n     {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "then"], ["proof (chain)\npicking this:\n  rank_of (insert x X) = rank_of X", "have \"x \\<in> cl X\""], ["proof (prove)\nusing this:\n  rank_of (insert x X) = rank_of X\n\ngoal (1 subgoal):\n 1. x \\<in> cl X", "using *"], ["proof (prove)\nusing this:\n  rank_of (insert x X) = rank_of X\n  x \\<in> \\<Union>\n           {Y \\<in> Pow carrier.\n            X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n\ngoal (1 subgoal):\n 1. x \\<in> cl X", "unfolding cl_def"], ["proof (prove)\nusing this:\n  rank_of (insert x X) = rank_of X\n  x \\<in> \\<Union>\n           {Y \\<in> Pow carrier.\n            X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> carrier. rank_of (insert x X) = rank_of X}", "by auto"], ["proof (state)\nthis:\n  x \\<in> cl X\n\ngoal (1 subgoal):\n 1. cl X =\n    \\<Union>\n     {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "}"], ["proof (state)\nthis:\n  ?x2\n  \\<in> \\<Union>\n         {Y \\<in> Pow carrier.\n          X \\<subseteq> Y \\<and> rank_of Y = rank_of X} \\<Longrightarrow>\n  ?x2 \\<in> cl X\n\ngoal (1 subgoal):\n 1. cl X =\n    \\<Union>\n     {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "ultimately"], ["proof (chain)\npicking this:\n  ?x2 \\<in> cl X \\<Longrightarrow>\n  ?x2\n  \\<in> \\<Union>\n         {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n  ?x2\n  \\<in> \\<Union>\n         {Y \\<in> Pow carrier.\n          X \\<subseteq> Y \\<and> rank_of Y = rank_of X} \\<Longrightarrow>\n  ?x2 \\<in> cl X", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x2 \\<in> cl X \\<Longrightarrow>\n  ?x2\n  \\<in> \\<Union>\n         {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n  ?x2\n  \\<in> \\<Union>\n         {Y \\<in> Pow carrier.\n          X \\<subseteq> Y \\<and> rank_of Y = rank_of X} \\<Longrightarrow>\n  ?x2 \\<in> cl X\n\ngoal (1 subgoal):\n 1. cl X =\n    \\<Union>\n     {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "by blast"], ["proof (state)\nthis:\n  cl X =\n  \\<Union>\n   {Y \\<in> Pow carrier. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cl_rank_of: \"x \\<in> cl X \\<Longrightarrow> rank_of (insert x X) = rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> cl X \\<Longrightarrow> rank_of (insert x X) = rank_of X", "unfolding cl_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> carrier.\n             rank_of (insert x X) = rank_of X} \\<Longrightarrow>\n    rank_of (insert x X) = rank_of X", "by auto"], ["", "lemma cl_subset_carrier: \"cl X \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl X \\<subseteq> carrier", "unfolding cl_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> carrier. rank_of (insert x X) = rank_of X} \\<subseteq> carrier", "by auto"], ["", "lemmas clD = cl_rank_of cl_subset_carrier"], ["", "lemma cl_subset:\n  assumes \"X \\<subseteq> carrier\"\n  shows \"X \\<subseteq> cl X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> cl X", "using assms"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. X \\<subseteq> cl X", "using insert_absorb[of _ X]"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  ?a \\<in> X \\<Longrightarrow> insert ?a X = X\n\ngoal (1 subgoal):\n 1. X \\<subseteq> cl X", "by (auto intro!: clI)"], ["", "lemma cl_mono:\n  assumes \"X \\<subseteq> Y\"\n  assumes \"Y \\<subseteq> carrier\"\n  shows \"cl X \\<subseteq> cl Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl X \\<subseteq> cl Y", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> cl X \\<Longrightarrow> x \\<in> cl Y", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> cl X \\<Longrightarrow> x \\<in> cl Y", "assume \"x \\<in> cl X\""], ["proof (state)\nthis:\n  x \\<in> cl X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> cl X \\<Longrightarrow> x \\<in> cl Y", "then"], ["proof (chain)\npicking this:\n  x \\<in> cl X", "have \"x \\<in> carrier\""], ["proof (prove)\nusing this:\n  x \\<in> cl X\n\ngoal (1 subgoal):\n 1. x \\<in> carrier", "using cl_subset_carrier"], ["proof (prove)\nusing this:\n  x \\<in> cl X\n  cl ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. x \\<in> carrier", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> cl X \\<Longrightarrow> x \\<in> cl Y", "have \"insert x X \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x X \\<subseteq> carrier", "using assms \\<open>x \\<in> cl X\\<close> cl_subset_carrier[of X]"], ["proof (prove)\nusing this:\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  x \\<in> cl X\n  cl X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. insert x X \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  insert x X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> cl X \\<Longrightarrow> x \\<in> cl Y", "then"], ["proof (chain)\npicking this:\n  insert x X \\<subseteq> carrier", "interpret X_insert: matroid \"insert x X\" \"indep_in (insert x X)\""], ["proof (prove)\nusing this:\n  insert x X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. matroid (insert x X) (indep_in (insert x X))", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> cl X \\<Longrightarrow> x \\<in> cl Y", "have \"insert x Y \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x Y \\<subseteq> carrier", "using assms \\<open>x \\<in> cl X\\<close> cl_subset_carrier[of X]"], ["proof (prove)\nusing this:\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  x \\<in> cl X\n  cl X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. insert x Y \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  insert x Y \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> cl X \\<Longrightarrow> x \\<in> cl Y", "then"], ["proof (chain)\npicking this:\n  insert x Y \\<subseteq> carrier", "interpret Y_insert: matroid \"insert x Y\" \"indep_in (insert x Y)\""], ["proof (prove)\nusing this:\n  insert x Y \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. matroid (insert x Y) (indep_in (insert x Y))", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> cl X \\<Longrightarrow> x \\<in> cl Y", "show \"x \\<in> cl Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> cl Y", "using \\<open>x \\<in> carrier\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n\ngoal (1 subgoal):\n 1. x \\<in> cl Y", "proof (rule clI, cases \"x \\<in> X\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> carrier; x \\<in> X\\<rbrakk>\n    \\<Longrightarrow> rank_of (insert x Y) = rank_of Y\n 2. \\<lbrakk>x \\<in> carrier; x \\<notin> X\\<rbrakk>\n    \\<Longrightarrow> rank_of (insert x Y) = rank_of Y", "case True"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> carrier; x \\<in> X\\<rbrakk>\n    \\<Longrightarrow> rank_of (insert x Y) = rank_of Y\n 2. \\<lbrakk>x \\<in> carrier; x \\<notin> X\\<rbrakk>\n    \\<Longrightarrow> rank_of (insert x Y) = rank_of Y", "then"], ["proof (chain)\npicking this:\n  x \\<in> X", "show \"rank_of (insert x Y) = rank_of Y\""], ["proof (prove)\nusing this:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. rank_of (insert x Y) = rank_of Y", "using assms insert_absorb[of x Y]"], ["proof (prove)\nusing this:\n  x \\<in> X\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  x \\<in> Y \\<Longrightarrow> insert x Y = Y\n\ngoal (1 subgoal):\n 1. rank_of (insert x Y) = rank_of Y", "by auto"], ["proof (state)\nthis:\n  rank_of (insert x Y) = rank_of Y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> carrier; x \\<notin> X\\<rbrakk>\n    \\<Longrightarrow> rank_of (insert x Y) = rank_of Y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> carrier; x \\<notin> X\\<rbrakk>\n    \\<Longrightarrow> rank_of (insert x Y) = rank_of Y", "case False"], ["proof (state)\nthis:\n  x \\<notin> X\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> carrier; x \\<notin> X\\<rbrakk>\n    \\<Longrightarrow> rank_of (insert x Y) = rank_of Y", "obtain B\\<^sub>X where B\\<^sub>X: \"basis_in X B\\<^sub>X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B\\<^sub>X.\n        basis_in X B\\<^sub>X \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms basis_in_ex[of X]"], ["proof (prove)\nusing this:\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  X \\<subseteq> carrier \\<Longrightarrow> \\<exists>B. basis_in X B\n\ngoal (1 subgoal):\n 1. (\\<And>B\\<^sub>X.\n        basis_in X B\\<^sub>X \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  basis_in X B\\<^sub>X\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> carrier; x \\<notin> X\\<rbrakk>\n    \\<Longrightarrow> rank_of (insert x Y) = rank_of Y", "have \"basis_in (insert x X) B\\<^sub>X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis_in (insert x X) B\\<^sub>X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. basis_in (insert x X) B\\<^sub>X", "have \"rank_of B\\<^sub>X = card B\\<^sub>X \\<and> rank_of B\\<^sub>X = rank_of (insert x X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of B\\<^sub>X = card B\\<^sub>X \\<and>\n    rank_of B\\<^sub>X = rank_of (insert x X)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of B\\<^sub>X = card B\\<^sub>X \\<and>\n    rank_of B\\<^sub>X = rank_of (insert x X)", "have \"rank_of B\\<^sub>X = card B\\<^sub>X \\<and> rank_of B\\<^sub>X = rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of B\\<^sub>X = card B\\<^sub>X \\<and> rank_of B\\<^sub>X = rank_of X", "using assms B\\<^sub>X\n            basis_in_subset_carrier[where \\<E> = X and X = B\\<^sub>X]\n            basis_in_iff_rank_of[where \\<E> = X and X = B\\<^sub>X]"], ["proof (prove)\nusing this:\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  basis_in X B\\<^sub>X\n  \\<lbrakk>X \\<subseteq> carrier; basis_in X B\\<^sub>X\\<rbrakk>\n  \\<Longrightarrow> B\\<^sub>X \\<subseteq> X\n  \\<lbrakk>X \\<subseteq> carrier; B\\<^sub>X \\<subseteq> X\\<rbrakk>\n  \\<Longrightarrow> basis_in X B\\<^sub>X =\n                    (rank_of B\\<^sub>X = card B\\<^sub>X \\<and>\n                     rank_of B\\<^sub>X = rank_of X)\n\ngoal (1 subgoal):\n 1. rank_of B\\<^sub>X = card B\\<^sub>X \\<and> rank_of B\\<^sub>X = rank_of X", "by blast"], ["proof (state)\nthis:\n  rank_of B\\<^sub>X = card B\\<^sub>X \\<and> rank_of B\\<^sub>X = rank_of X\n\ngoal (1 subgoal):\n 1. rank_of B\\<^sub>X = card B\\<^sub>X \\<and>\n    rank_of B\\<^sub>X = rank_of (insert x X)", "then"], ["proof (chain)\npicking this:\n  rank_of B\\<^sub>X = card B\\<^sub>X \\<and> rank_of B\\<^sub>X = rank_of X", "show ?thesis"], ["proof (prove)\nusing this:\n  rank_of B\\<^sub>X = card B\\<^sub>X \\<and> rank_of B\\<^sub>X = rank_of X\n\ngoal (1 subgoal):\n 1. rank_of B\\<^sub>X = card B\\<^sub>X \\<and>\n    rank_of B\\<^sub>X = rank_of (insert x X)", "using cl_rank_of[OF \\<open>x \\<in> cl X\\<close>]"], ["proof (prove)\nusing this:\n  rank_of B\\<^sub>X = card B\\<^sub>X \\<and> rank_of B\\<^sub>X = rank_of X\n  rank_of (insert x X) = rank_of X\n\ngoal (1 subgoal):\n 1. rank_of B\\<^sub>X = card B\\<^sub>X \\<and>\n    rank_of B\\<^sub>X = rank_of (insert x X)", "by auto"], ["proof (state)\nthis:\n  rank_of B\\<^sub>X = card B\\<^sub>X \\<and>\n  rank_of B\\<^sub>X = rank_of (insert x X)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of B\\<^sub>X = card B\\<^sub>X \\<and>\n  rank_of B\\<^sub>X = rank_of (insert x X)\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) B\\<^sub>X", "then"], ["proof (chain)\npicking this:\n  rank_of B\\<^sub>X = card B\\<^sub>X \\<and>\n  rank_of B\\<^sub>X = rank_of (insert x X)", "show ?thesis"], ["proof (prove)\nusing this:\n  rank_of B\\<^sub>X = card B\\<^sub>X \\<and>\n  rank_of B\\<^sub>X = rank_of (insert x X)\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) B\\<^sub>X", "using assms basis_in_subset_carrier[OF _ B\\<^sub>X] \\<open>x \\<in> carrier\\<close> basis_in_iff_rank_of[of \"insert x X\" B\\<^sub>X]"], ["proof (prove)\nusing this:\n  rank_of B\\<^sub>X = card B\\<^sub>X \\<and>\n  rank_of B\\<^sub>X = rank_of (insert x X)\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  X \\<subseteq> carrier \\<Longrightarrow> B\\<^sub>X \\<subseteq> X\n  x \\<in> carrier\n  \\<lbrakk>insert x X \\<subseteq> carrier;\n   B\\<^sub>X \\<subseteq> insert x X\\<rbrakk>\n  \\<Longrightarrow> basis_in (insert x X) B\\<^sub>X =\n                    (rank_of B\\<^sub>X = card B\\<^sub>X \\<and>\n                     rank_of B\\<^sub>X = rank_of (insert x X))\n\ngoal (1 subgoal):\n 1. basis_in (insert x X) B\\<^sub>X", "by auto"], ["proof (state)\nthis:\n  basis_in (insert x X) B\\<^sub>X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  basis_in (insert x X) B\\<^sub>X\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> carrier; x \\<notin> X\\<rbrakk>\n    \\<Longrightarrow> rank_of (insert x Y) = rank_of Y", "have \"indep_in (insert x Y) B\\<^sub>X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in (insert x Y) B\\<^sub>X", "using assms basis_in_indep_in[OF _ B\\<^sub>X] indep_in_subI_subset[of X \"insert x Y\"]"], ["proof (prove)\nusing this:\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  X \\<subseteq> carrier \\<Longrightarrow> indep_in X B\\<^sub>X\n  \\<lbrakk>X \\<subseteq> insert x Y; indep_in X ?X\\<rbrakk>\n  \\<Longrightarrow> indep_in (insert x Y) ?X\n\ngoal (1 subgoal):\n 1. indep_in (insert x Y) B\\<^sub>X", "by auto"], ["proof (state)\nthis:\n  indep_in (insert x Y) B\\<^sub>X\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> carrier; x \\<notin> X\\<rbrakk>\n    \\<Longrightarrow> rank_of (insert x Y) = rank_of Y", "then"], ["proof (chain)\npicking this:\n  indep_in (insert x Y) B\\<^sub>X", "obtain B\\<^sub>Y where B\\<^sub>Y: \"basis_in (insert x Y) B\\<^sub>Y\" \"B\\<^sub>X \\<subseteq> B\\<^sub>Y\""], ["proof (prove)\nusing this:\n  indep_in (insert x Y) B\\<^sub>X\n\ngoal (1 subgoal):\n 1. (\\<And>B\\<^sub>Y.\n        \\<lbrakk>basis_in (insert x Y) B\\<^sub>Y;\n         B\\<^sub>X \\<subseteq> B\\<^sub>Y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms \\<open>x \\<in> carrier\\<close> indep_in_iff_subset_basis_in[of \"insert x Y\" B\\<^sub>X]"], ["proof (prove)\nusing this:\n  indep_in (insert x Y) B\\<^sub>X\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  x \\<in> carrier\n  insert x Y \\<subseteq> carrier \\<Longrightarrow>\n  indep_in (insert x Y) B\\<^sub>X =\n  (\\<exists>B. basis_in (insert x Y) B \\<and> B\\<^sub>X \\<subseteq> B)\n\ngoal (1 subgoal):\n 1. (\\<And>B\\<^sub>Y.\n        \\<lbrakk>basis_in (insert x Y) B\\<^sub>Y;\n         B\\<^sub>X \\<subseteq> B\\<^sub>Y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  basis_in (insert x Y) B\\<^sub>Y\n  B\\<^sub>X \\<subseteq> B\\<^sub>Y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> carrier; x \\<notin> X\\<rbrakk>\n    \\<Longrightarrow> rank_of (insert x Y) = rank_of Y", "have \"basis_in Y B\\<^sub>Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis_in Y B\\<^sub>Y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. basis_in Y B\\<^sub>Y", "have \"x \\<notin> B\\<^sub>Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> B\\<^sub>Y", "proof (rule ccontr, goal_cases False)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> B\\<^sub>Y \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> x \\<notin> B\\<^sub>Y\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> B\\<^sub>Y \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> x \\<notin> B\\<^sub>Y", "have \"insert x B\\<^sub>X \\<subseteq> B\\<^sub>Y\""], ["proof (prove)\nusing this:\n  \\<not> x \\<notin> B\\<^sub>Y\n\ngoal (1 subgoal):\n 1. insert x B\\<^sub>X \\<subseteq> B\\<^sub>Y", "using \\<open>B\\<^sub>X \\<subseteq> B\\<^sub>Y\\<close>"], ["proof (prove)\nusing this:\n  \\<not> x \\<notin> B\\<^sub>Y\n  B\\<^sub>X \\<subseteq> B\\<^sub>Y\n\ngoal (1 subgoal):\n 1. insert x B\\<^sub>X \\<subseteq> B\\<^sub>Y", "by auto"], ["proof (state)\nthis:\n  insert x B\\<^sub>X \\<subseteq> B\\<^sub>Y\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> B\\<^sub>Y \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  insert x B\\<^sub>X \\<subseteq> B\\<^sub>Y", "have \"indep_in (insert x Y) (insert x B\\<^sub>X)\""], ["proof (prove)\nusing this:\n  insert x B\\<^sub>X \\<subseteq> B\\<^sub>Y\n\ngoal (1 subgoal):\n 1. indep_in (insert x Y) (insert x B\\<^sub>X)", "using assms \\<open>x \\<in> carrier\\<close>\n            B\\<^sub>Y basis_in_indep_in[where \\<E> = \"insert x Y\" and X = B\\<^sub>Y]\n            indep_in_subset[where \\<E> = \"insert x Y\" and X = B\\<^sub>Y and Y = \"insert x B\\<^sub>X\"]"], ["proof (prove)\nusing this:\n  insert x B\\<^sub>X \\<subseteq> B\\<^sub>Y\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  x \\<in> carrier\n  basis_in (insert x Y) B\\<^sub>Y\n  B\\<^sub>X \\<subseteq> B\\<^sub>Y\n  \\<lbrakk>insert x Y \\<subseteq> carrier;\n   basis_in (insert x Y) B\\<^sub>Y\\<rbrakk>\n  \\<Longrightarrow> indep_in (insert x Y) B\\<^sub>Y\n  \\<lbrakk>insert x Y \\<subseteq> carrier; indep_in (insert x Y) B\\<^sub>Y;\n   insert x B\\<^sub>X \\<subseteq> B\\<^sub>Y\\<rbrakk>\n  \\<Longrightarrow> indep_in (insert x Y) (insert x B\\<^sub>X)\n\ngoal (1 subgoal):\n 1. indep_in (insert x Y) (insert x B\\<^sub>X)", "by auto"], ["proof (state)\nthis:\n  indep_in (insert x Y) (insert x B\\<^sub>X)\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> B\\<^sub>Y \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  indep_in (insert x Y) (insert x B\\<^sub>X)", "have \"indep_in (insert x X) (insert x B\\<^sub>X)\""], ["proof (prove)\nusing this:\n  indep_in (insert x Y) (insert x B\\<^sub>X)\n\ngoal (1 subgoal):\n 1. indep_in (insert x X) (insert x B\\<^sub>X)", "using assms B\\<^sub>X\n            basis_in_subset_carrier[where \\<E> = X and X = B\\<^sub>X]\n            indep_in_supI[where \\<E> = \"insert x Y\" and \\<E>' = \"insert x X\" and X = \"insert x B\\<^sub>X\"]"], ["proof (prove)\nusing this:\n  indep_in (insert x Y) (insert x B\\<^sub>X)\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  basis_in X B\\<^sub>X\n  \\<lbrakk>X \\<subseteq> carrier; basis_in X B\\<^sub>X\\<rbrakk>\n  \\<Longrightarrow> B\\<^sub>X \\<subseteq> X\n  \\<lbrakk>insert x B\\<^sub>X \\<subseteq> insert x X;\n   insert x X \\<subseteq> insert x Y;\n   indep_in (insert x Y) (insert x B\\<^sub>X)\\<rbrakk>\n  \\<Longrightarrow> indep_in (insert x X) (insert x B\\<^sub>X)\n\ngoal (1 subgoal):\n 1. indep_in (insert x X) (insert x B\\<^sub>X)", "by auto"], ["proof (state)\nthis:\n  indep_in (insert x X) (insert x B\\<^sub>X)\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> B\\<^sub>Y \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  indep_in (insert x X) (insert x B\\<^sub>X)\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> B\\<^sub>Y \\<Longrightarrow> False", "have \"x \\<in> insert x X - B\\<^sub>X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> insert x X - B\\<^sub>X", "using assms \\<open>x \\<notin> X\\<close> B\\<^sub>X basis_in_subset_carrier[where \\<E> = X and X = B\\<^sub>X]"], ["proof (prove)\nusing this:\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  x \\<notin> X\n  basis_in X B\\<^sub>X\n  \\<lbrakk>X \\<subseteq> carrier; basis_in X B\\<^sub>X\\<rbrakk>\n  \\<Longrightarrow> B\\<^sub>X \\<subseteq> X\n\ngoal (1 subgoal):\n 1. x \\<in> insert x X - B\\<^sub>X", "by auto"], ["proof (state)\nthis:\n  x \\<in> insert x X - B\\<^sub>X\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> B\\<^sub>Y \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  indep_in (insert x X) (insert x B\\<^sub>X)\n  x \\<in> insert x X - B\\<^sub>X", "show ?case"], ["proof (prove)\nusing this:\n  indep_in (insert x X) (insert x B\\<^sub>X)\n  x \\<in> insert x X - B\\<^sub>X\n\ngoal (1 subgoal):\n 1. False", "using assms \\<open>x \\<in> carrier\\<close> \\<open>basis_in (insert x X) B\\<^sub>X\\<close>\n            basis_in_max_indep_in[where \\<E> = \"insert x X\" and X = B\\<^sub>X and x = x]"], ["proof (prove)\nusing this:\n  indep_in (insert x X) (insert x B\\<^sub>X)\n  x \\<in> insert x X - B\\<^sub>X\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  x \\<in> carrier\n  basis_in (insert x X) B\\<^sub>X\n  \\<lbrakk>insert x X \\<subseteq> carrier; basis_in (insert x X) B\\<^sub>X;\n   x \\<in> insert x X - B\\<^sub>X\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep_in (insert x X) (insert x B\\<^sub>X)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> B\\<^sub>Y\n\ngoal (1 subgoal):\n 1. basis_in Y B\\<^sub>Y", "then"], ["proof (chain)\npicking this:\n  x \\<notin> B\\<^sub>Y", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> B\\<^sub>Y\n\ngoal (1 subgoal):\n 1. basis_in Y B\\<^sub>Y", "using assms \\<open>x \\<in> carrier\\<close> B\\<^sub>Y basis_in_subset_carrier[of \"insert x Y\" B\\<^sub>Y]\n        basis_in_supI[where \\<E> = \"insert x Y\" and \\<E>' = Y and B = B\\<^sub>Y]"], ["proof (prove)\nusing this:\n  x \\<notin> B\\<^sub>Y\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  x \\<in> carrier\n  basis_in (insert x Y) B\\<^sub>Y\n  B\\<^sub>X \\<subseteq> B\\<^sub>Y\n  \\<lbrakk>insert x Y \\<subseteq> carrier;\n   basis_in (insert x Y) B\\<^sub>Y\\<rbrakk>\n  \\<Longrightarrow> B\\<^sub>Y \\<subseteq> insert x Y\n  \\<lbrakk>insert x Y \\<subseteq> carrier; B\\<^sub>Y \\<subseteq> Y;\n   Y \\<subseteq> insert x Y; insert x Y \\<subseteq> carrier;\n   basis_in (insert x Y) B\\<^sub>Y\\<rbrakk>\n  \\<Longrightarrow> basis_in Y B\\<^sub>Y\n\ngoal (1 subgoal):\n 1. basis_in Y B\\<^sub>Y", "by auto"], ["proof (state)\nthis:\n  basis_in Y B\\<^sub>Y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  basis_in Y B\\<^sub>Y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> carrier; x \\<notin> X\\<rbrakk>\n    \\<Longrightarrow> rank_of (insert x Y) = rank_of Y", "show \"rank_of (insert x Y) = rank_of Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert x Y) = rank_of Y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (insert x Y) = rank_of Y", "have \"rank_of (insert x Y) = card B\\<^sub>Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert x Y) = card B\\<^sub>Y", "using assms \\<open>x \\<in> carrier\\<close> \\<open>basis_in (insert x Y) B\\<^sub>Y\\<close> basis_in_subset_carrier"], ["proof (prove)\nusing this:\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  x \\<in> carrier\n  basis_in (insert x Y) B\\<^sub>Y\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n\ngoal (1 subgoal):\n 1. rank_of (insert x Y) = card B\\<^sub>Y", "using basis_in_iff_rank_of[where \\<E> = \"insert x Y\" and X = B\\<^sub>Y]"], ["proof (prove)\nusing this:\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  x \\<in> carrier\n  basis_in (insert x Y) B\\<^sub>Y\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n  \\<lbrakk>insert x Y \\<subseteq> carrier;\n   B\\<^sub>Y \\<subseteq> insert x Y\\<rbrakk>\n  \\<Longrightarrow> basis_in (insert x Y) B\\<^sub>Y =\n                    (rank_of B\\<^sub>Y = card B\\<^sub>Y \\<and>\n                     rank_of B\\<^sub>Y = rank_of (insert x Y))\n\ngoal (1 subgoal):\n 1. rank_of (insert x Y) = card B\\<^sub>Y", "by auto"], ["proof (state)\nthis:\n  rank_of (insert x Y) = card B\\<^sub>Y\n\ngoal (1 subgoal):\n 1. rank_of (insert x Y) = rank_of Y", "also"], ["proof (state)\nthis:\n  rank_of (insert x Y) = card B\\<^sub>Y\n\ngoal (1 subgoal):\n 1. rank_of (insert x Y) = rank_of Y", "have \"\\<dots> = rank_of Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card B\\<^sub>Y = rank_of Y", "using assms \\<open>x \\<in> carrier\\<close> \\<open>basis_in Y B\\<^sub>Y\\<close> basis_in_subset_carrier"], ["proof (prove)\nusing this:\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  x \\<in> carrier\n  basis_in Y B\\<^sub>Y\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n\ngoal (1 subgoal):\n 1. card B\\<^sub>Y = rank_of Y", "using basis_in_iff_rank_of[where \\<E> = Y and X = B\\<^sub>Y]"], ["proof (prove)\nusing this:\n  X \\<subseteq> Y\n  Y \\<subseteq> carrier\n  x \\<in> carrier\n  basis_in Y B\\<^sub>Y\n  \\<lbrakk>?\\<E> \\<subseteq> carrier; basis_in ?\\<E> ?X\\<rbrakk>\n  \\<Longrightarrow> ?X \\<subseteq> ?\\<E>\n  \\<lbrakk>Y \\<subseteq> carrier; B\\<^sub>Y \\<subseteq> Y\\<rbrakk>\n  \\<Longrightarrow> basis_in Y B\\<^sub>Y =\n                    (rank_of B\\<^sub>Y = card B\\<^sub>Y \\<and>\n                     rank_of B\\<^sub>Y = rank_of Y)\n\ngoal (1 subgoal):\n 1. card B\\<^sub>Y = rank_of Y", "by auto"], ["proof (state)\nthis:\n  card B\\<^sub>Y = rank_of Y\n\ngoal (1 subgoal):\n 1. rank_of (insert x Y) = rank_of Y", "finally"], ["proof (chain)\npicking this:\n  rank_of (insert x Y) = rank_of Y", "show ?thesis"], ["proof (prove)\nusing this:\n  rank_of (insert x Y) = rank_of Y\n\ngoal (1 subgoal):\n 1. rank_of (insert x Y) = rank_of Y", "."], ["proof (state)\nthis:\n  rank_of (insert x Y) = rank_of Y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of (insert x Y) = rank_of Y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> cl Y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cl_insert_absorb:\n  assumes \"X \\<subseteq> carrier\"\n  assumes \"x \\<in> cl X\"\n  shows \"cl (insert x X) = cl X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl (insert x X) = cl X", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. cl (insert x X) \\<subseteq> cl X\n 2. cl X \\<subseteq> cl (insert x X)", "show \"cl (insert x X) \\<subseteq> cl X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl (insert x X) \\<subseteq> cl X", "proof (standard, goal_cases elem)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> cl (insert x X) \\<Longrightarrow> xa \\<in> cl X", "case (elem y)"], ["proof (state)\nthis:\n  y \\<in> cl (insert x X)\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> cl (insert x X) \\<Longrightarrow> xa \\<in> cl X", "then"], ["proof (chain)\npicking this:\n  y \\<in> cl (insert x X)", "have *: \"x \\<in> carrier\" \"y \\<in> carrier\""], ["proof (prove)\nusing this:\n  y \\<in> cl (insert x X)\n\ngoal (1 subgoal):\n 1. x \\<in> carrier &&& y \\<in> carrier", "using assms cl_subset_carrier"], ["proof (prove)\nusing this:\n  y \\<in> cl (insert x X)\n  X \\<subseteq> carrier\n  x \\<in> cl X\n  cl ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. x \\<in> carrier &&& y \\<in> carrier", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier\n  y \\<in> carrier\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> cl (insert x X) \\<Longrightarrow> xa \\<in> cl X", "have \"rank_of (insert y X) = rank_of (insert y (insert x X))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert y X) = rank_of (insert y (insert x X))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (insert y X) = rank_of (insert y (insert x X))", "have \"rank_of (insert y X) \\<le> rank_of (insert y (insert x X))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert y X) \\<le> rank_of (insert y (insert x X))", "using assms *"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> cl X\n  x \\<in> carrier\n  y \\<in> carrier\n\ngoal (1 subgoal):\n 1. rank_of (insert y X) \\<le> rank_of (insert y (insert x X))", "by (auto intro: rank_of_mono)"], ["proof (state)\nthis:\n  rank_of (insert y X) \\<le> rank_of (insert y (insert x X))\n\ngoal (1 subgoal):\n 1. rank_of (insert y X) = rank_of (insert y (insert x X))", "moreover"], ["proof (state)\nthis:\n  rank_of (insert y X) \\<le> rank_of (insert y (insert x X))\n\ngoal (1 subgoal):\n 1. rank_of (insert y X) = rank_of (insert y (insert x X))", "have \"rank_of (insert y (insert x X)) = rank_of (insert y X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert y (insert x X)) = rank_of (insert y X)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (insert y (insert x X)) = rank_of (insert y X)", "have \"insert y (insert x X) = insert x (insert y X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert y (insert x X) = insert x (insert y X)", "by auto"], ["proof (state)\nthis:\n  insert y (insert x X) = insert x (insert y X)\n\ngoal (1 subgoal):\n 1. rank_of (insert y (insert x X)) = rank_of (insert y X)", "then"], ["proof (chain)\npicking this:\n  insert y (insert x X) = insert x (insert y X)", "have \"rank_of (insert y (insert x X)) = rank_of (insert x (insert y X))\""], ["proof (prove)\nusing this:\n  insert y (insert x X) = insert x (insert y X)\n\ngoal (1 subgoal):\n 1. rank_of (insert y (insert x X)) = rank_of (insert x (insert y X))", "by auto"], ["proof (state)\nthis:\n  rank_of (insert y (insert x X)) = rank_of (insert x (insert y X))\n\ngoal (1 subgoal):\n 1. rank_of (insert y (insert x X)) = rank_of (insert y X)", "also"], ["proof (state)\nthis:\n  rank_of (insert y (insert x X)) = rank_of (insert x (insert y X))\n\ngoal (1 subgoal):\n 1. rank_of (insert y (insert x X)) = rank_of (insert y X)", "have \"\\<dots> = rank_of (insert y X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) = rank_of (insert y X)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) = rank_of (insert y X)", "have \"cl X \\<subseteq> cl (insert y X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl X \\<subseteq> cl (insert y X)", "by (rule cl_mono) (auto simp add: assms \\<open>y \\<in> carrier\\<close>)"], ["proof (state)\nthis:\n  cl X \\<subseteq> cl (insert y X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) = rank_of (insert y X)", "then"], ["proof (chain)\npicking this:\n  cl X \\<subseteq> cl (insert y X)", "have \"x \\<in> cl (insert y X)\""], ["proof (prove)\nusing this:\n  cl X \\<subseteq> cl (insert y X)\n\ngoal (1 subgoal):\n 1. x \\<in> cl (insert y X)", "using assms"], ["proof (prove)\nusing this:\n  cl X \\<subseteq> cl (insert y X)\n  X \\<subseteq> carrier\n  x \\<in> cl X\n\ngoal (1 subgoal):\n 1. x \\<in> cl (insert y X)", "by auto"], ["proof (state)\nthis:\n  x \\<in> cl (insert y X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) = rank_of (insert y X)", "then"], ["proof (chain)\npicking this:\n  x \\<in> cl (insert y X)", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> cl (insert y X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) = rank_of (insert y X)", "unfolding cl_def"], ["proof (prove)\nusing this:\n  x \\<in> {x \\<in> carrier.\n           rank_of (insert x (insert y X)) = rank_of (insert y X)}\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) = rank_of (insert y X)", "by auto"], ["proof (state)\nthis:\n  rank_of (insert x (insert y X)) = rank_of (insert y X)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of (insert x (insert y X)) = rank_of (insert y X)\n\ngoal (1 subgoal):\n 1. rank_of (insert y (insert x X)) = rank_of (insert y X)", "finally"], ["proof (chain)\npicking this:\n  rank_of (insert y (insert x X)) = rank_of (insert y X)", "show ?thesis"], ["proof (prove)\nusing this:\n  rank_of (insert y (insert x X)) = rank_of (insert y X)\n\ngoal (1 subgoal):\n 1. rank_of (insert y (insert x X)) = rank_of (insert y X)", "."], ["proof (state)\nthis:\n  rank_of (insert y (insert x X)) = rank_of (insert y X)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of (insert y (insert x X)) = rank_of (insert y X)\n\ngoal (1 subgoal):\n 1. rank_of (insert y X) = rank_of (insert y (insert x X))", "ultimately"], ["proof (chain)\npicking this:\n  rank_of (insert y X) \\<le> rank_of (insert y (insert x X))\n  rank_of (insert y (insert x X)) = rank_of (insert y X)", "show ?thesis"], ["proof (prove)\nusing this:\n  rank_of (insert y X) \\<le> rank_of (insert y (insert x X))\n  rank_of (insert y (insert x X)) = rank_of (insert y X)\n\ngoal (1 subgoal):\n 1. rank_of (insert y X) = rank_of (insert y (insert x X))", "by auto"], ["proof (state)\nthis:\n  rank_of (insert y X) = rank_of (insert y (insert x X))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of (insert y X) = rank_of (insert y (insert x X))\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> cl (insert x X) \\<Longrightarrow> xa \\<in> cl X", "also"], ["proof (state)\nthis:\n  rank_of (insert y X) = rank_of (insert y (insert x X))\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> cl (insert x X) \\<Longrightarrow> xa \\<in> cl X", "have \"\\<dots> = rank_of (insert x X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert y (insert x X)) = rank_of (insert x X)", "using elem"], ["proof (prove)\nusing this:\n  y \\<in> cl (insert x X)\n\ngoal (1 subgoal):\n 1. rank_of (insert y (insert x X)) = rank_of (insert x X)", "using cl_rank_of"], ["proof (prove)\nusing this:\n  y \\<in> cl (insert x X)\n  ?x \\<in> cl ?X \\<Longrightarrow> rank_of (insert ?x ?X) = rank_of ?X\n\ngoal (1 subgoal):\n 1. rank_of (insert y (insert x X)) = rank_of (insert x X)", "by auto"], ["proof (state)\nthis:\n  rank_of (insert y (insert x X)) = rank_of (insert x X)\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> cl (insert x X) \\<Longrightarrow> xa \\<in> cl X", "also"], ["proof (state)\nthis:\n  rank_of (insert y (insert x X)) = rank_of (insert x X)\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> cl (insert x X) \\<Longrightarrow> xa \\<in> cl X", "have \"\\<dots> = rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "using assms cl_rank_of"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> cl X\n  ?x \\<in> cl ?X \\<Longrightarrow> rank_of (insert ?x ?X) = rank_of ?X\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "by auto"], ["proof (state)\nthis:\n  rank_of (insert x X) = rank_of X\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> cl (insert x X) \\<Longrightarrow> xa \\<in> cl X", "finally"], ["proof (chain)\npicking this:\n  rank_of (insert y X) = rank_of X", "show \"y \\<in> cl X\""], ["proof (prove)\nusing this:\n  rank_of (insert y X) = rank_of X\n\ngoal (1 subgoal):\n 1. y \\<in> cl X", "using *"], ["proof (prove)\nusing this:\n  rank_of (insert y X) = rank_of X\n  x \\<in> carrier\n  y \\<in> carrier\n\ngoal (1 subgoal):\n 1. y \\<in> cl X", "by (auto intro: clI)"], ["proof (state)\nthis:\n  y \\<in> cl X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cl (insert x X) \\<subseteq> cl X\n\ngoal (1 subgoal):\n 1. cl X \\<subseteq> cl (insert x X)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. cl X \\<subseteq> cl (insert x X)", "have \"insert x X \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x X \\<subseteq> carrier", "using assms cl_subset_carrier"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> cl X\n  cl ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. insert x X \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  insert x X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. cl X \\<subseteq> cl (insert x X)", "moreover"], ["proof (state)\nthis:\n  insert x X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. cl X \\<subseteq> cl (insert x X)", "have \"X \\<subseteq> insert x X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> insert x X", "using assms"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> cl X\n\ngoal (1 subgoal):\n 1. X \\<subseteq> insert x X", "by auto"], ["proof (state)\nthis:\n  X \\<subseteq> insert x X\n\ngoal (1 subgoal):\n 1. cl X \\<subseteq> cl (insert x X)", "ultimately"], ["proof (chain)\npicking this:\n  insert x X \\<subseteq> carrier\n  X \\<subseteq> insert x X", "show \"cl X \\<subseteq> cl (insert x X)\""], ["proof (prove)\nusing this:\n  insert x X \\<subseteq> carrier\n  X \\<subseteq> insert x X\n\ngoal (1 subgoal):\n 1. cl X \\<subseteq> cl (insert x X)", "using assms cl_subset_carrier cl_mono"], ["proof (prove)\nusing this:\n  insert x X \\<subseteq> carrier\n  X \\<subseteq> insert x X\n  X \\<subseteq> carrier\n  x \\<in> cl X\n  cl ?X \\<subseteq> carrier\n  \\<lbrakk>?X \\<subseteq> ?Y; ?Y \\<subseteq> carrier\\<rbrakk>\n  \\<Longrightarrow> cl ?X \\<subseteq> cl ?Y\n\ngoal (1 subgoal):\n 1. cl X \\<subseteq> cl (insert x X)", "by auto"], ["proof (state)\nthis:\n  cl X \\<subseteq> cl (insert x X)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cl_cl_absorb:\n  assumes \"X \\<subseteq> carrier\"\n  shows \"cl (cl X) = cl X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl (cl X) = cl X", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. cl (cl X) \\<subseteq> cl X\n 2. cl X \\<subseteq> cl (cl X)", "show \"cl (cl X) \\<subseteq> cl X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl (cl X) \\<subseteq> cl X", "proof (standard, goal_cases elem)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> cl (cl X) \\<Longrightarrow> x \\<in> cl X", "case (elem x)"], ["proof (state)\nthis:\n  x \\<in> cl (cl X)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> cl (cl X) \\<Longrightarrow> x \\<in> cl X", "then"], ["proof (chain)\npicking this:\n  x \\<in> cl (cl X)", "have \"x \\<in> carrier\""], ["proof (prove)\nusing this:\n  x \\<in> cl (cl X)\n\ngoal (1 subgoal):\n 1. x \\<in> carrier", "using cl_subset_carrier"], ["proof (prove)\nusing this:\n  x \\<in> cl (cl X)\n  cl ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. x \\<in> carrier", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> cl (cl X) \\<Longrightarrow> x \\<in> cl X", "then"], ["proof (chain)\npicking this:\n  x \\<in> carrier", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n\ngoal (1 subgoal):\n 1. x \\<in> cl X", "proof (rule clI)"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "have \"rank_of (insert x X) \\<ge> rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of X \\<le> rank_of (insert x X)", "using assms \\<open>x \\<in> carrier\\<close> rank_of_mono[of X \"insert x X\"]"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> carrier\n  \\<lbrakk>X \\<subseteq> insert x X; insert x X \\<subseteq> carrier\\<rbrakk>\n  \\<Longrightarrow> rank_of X \\<le> rank_of (insert x X)\n\ngoal (1 subgoal):\n 1. rank_of X \\<le> rank_of (insert x X)", "by auto"], ["proof (state)\nthis:\n  rank_of X \\<le> rank_of (insert x X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "moreover"], ["proof (state)\nthis:\n  rank_of X \\<le> rank_of (insert x X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "have \"rank_of (insert x X) \\<le> rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> rank_of X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> rank_of X", "have \"rank_of (insert x X) \\<le> rank_of (insert x (cl X))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> rank_of (insert x (cl X))", "using assms \\<open>x \\<in> carrier\\<close> cl_subset_carrier cl_subset[of X]\n                rank_of_mono[of \"insert x X\" \"insert x (cl X)\"]"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> carrier\n  cl ?X \\<subseteq> carrier\n  X \\<subseteq> carrier \\<Longrightarrow> X \\<subseteq> cl X\n  \\<lbrakk>insert x X \\<subseteq> insert x (cl X);\n   insert x (cl X) \\<subseteq> carrier\\<rbrakk>\n  \\<Longrightarrow> rank_of (insert x X) \\<le> rank_of (insert x (cl X))\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> rank_of (insert x (cl X))", "by auto"], ["proof (state)\nthis:\n  rank_of (insert x X) \\<le> rank_of (insert x (cl X))\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> rank_of X", "also"], ["proof (state)\nthis:\n  rank_of (insert x X) \\<le> rank_of (insert x (cl X))\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> rank_of X", "have \"\\<dots> = rank_of (cl X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert x (cl X)) = rank_of (cl X)", "using elem cl_rank_of"], ["proof (prove)\nusing this:\n  x \\<in> cl (cl X)\n  ?x \\<in> cl ?X \\<Longrightarrow> rank_of (insert ?x ?X) = rank_of ?X\n\ngoal (1 subgoal):\n 1. rank_of (insert x (cl X)) = rank_of (cl X)", "by auto"], ["proof (state)\nthis:\n  rank_of (insert x (cl X)) = rank_of (cl X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> rank_of X", "also"], ["proof (state)\nthis:\n  rank_of (insert x (cl X)) = rank_of (cl X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> rank_of X", "have \"\\<dots> = rank_of (X \\<union> (cl X - X))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (cl X) = rank_of (X \\<union> (cl X - X))", "using Diff_partition[OF cl_subset[OF assms]]"], ["proof (prove)\nusing this:\n  X \\<union> (cl X - X) = cl X\n\ngoal (1 subgoal):\n 1. rank_of (cl X) = rank_of (X \\<union> (cl X - X))", "by auto"], ["proof (state)\nthis:\n  rank_of (cl X) = rank_of (X \\<union> (cl X - X))\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> rank_of X", "also"], ["proof (state)\nthis:\n  rank_of (cl X) = rank_of (X \\<union> (cl X - X))\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> rank_of X", "have \"\\<dots> = rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (X \\<union> (cl X - X)) = rank_of X", "using \\<open>X \\<subseteq> carrier\\<close>"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. rank_of (X \\<union> (cl X - X)) = rank_of X", "proof (rule rank_of_Un_absorbI)"], ["proof (state)\ngoal (2 subgoals):\n 1. cl X - X \\<subseteq> carrier\n 2. \\<And>y.\n       y \\<in> cl X - X - X \\<Longrightarrow>\n       rank_of (insert y X) = rank_of X", "show \"cl X - X \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl X - X \\<subseteq> carrier", "using assms cl_subset_carrier"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  cl ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. cl X - X \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  cl X - X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> cl X - X - X \\<Longrightarrow>\n       rank_of (insert y X) = rank_of X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> cl X - X - X \\<Longrightarrow>\n       rank_of (insert y X) = rank_of X", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> cl X - X - X \\<Longrightarrow>\n       rank_of (insert y X) = rank_of X", "assume \"y \\<in> cl X - X - X\""], ["proof (state)\nthis:\n  y \\<in> cl X - X - X\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> cl X - X - X \\<Longrightarrow>\n       rank_of (insert y X) = rank_of X", "then"], ["proof (chain)\npicking this:\n  y \\<in> cl X - X - X", "show \"rank_of (insert y X) = rank_of X\""], ["proof (prove)\nusing this:\n  y \\<in> cl X - X - X\n\ngoal (1 subgoal):\n 1. rank_of (insert y X) = rank_of X", "unfolding cl_def"], ["proof (prove)\nusing this:\n  y \\<in> {x \\<in> carrier. rank_of (insert x X) = rank_of X} - X - X\n\ngoal (1 subgoal):\n 1. rank_of (insert y X) = rank_of X", "by auto"], ["proof (state)\nthis:\n  rank_of (insert y X) = rank_of X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of (X \\<union> (cl X - X)) = rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> rank_of X", "finally"], ["proof (chain)\npicking this:\n  rank_of (insert x X) \\<le> rank_of X", "show ?thesis"], ["proof (prove)\nusing this:\n  rank_of (insert x X) \\<le> rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> rank_of X", "."], ["proof (state)\nthis:\n  rank_of (insert x X) \\<le> rank_of X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of (insert x X) \\<le> rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "ultimately"], ["proof (chain)\npicking this:\n  rank_of X \\<le> rank_of (insert x X)\n  rank_of (insert x X) \\<le> rank_of X", "show \"rank_of (insert x X) = rank_of X\""], ["proof (prove)\nusing this:\n  rank_of X \\<le> rank_of (insert x X)\n  rank_of (insert x X) \\<le> rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "by auto"], ["proof (state)\nthis:\n  rank_of (insert x X) = rank_of X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> cl X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cl (cl X) \\<subseteq> cl X\n\ngoal (1 subgoal):\n 1. cl X \\<subseteq> cl (cl X)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. cl X \\<subseteq> cl (cl X)", "show \"cl X \\<subseteq> cl (cl X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl X \\<subseteq> cl (cl X)", "using cl_subset[OF cl_subset_carrier]"], ["proof (prove)\nusing this:\n  cl ?X1 \\<subseteq> cl (cl ?X1)\n\ngoal (1 subgoal):\n 1. cl X \\<subseteq> cl (cl X)", "by auto"], ["proof (state)\nthis:\n  cl X \\<subseteq> cl (cl X)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cl_augment:\n  assumes \"X \\<subseteq> carrier\"\n  assumes \"x \\<in> carrier\"\n  assumes \"y \\<in> cl (insert x X) - cl X\"\n  shows \"x \\<in> cl (insert y X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> cl (insert y X)", "using \\<open>x \\<in> carrier\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n\ngoal (1 subgoal):\n 1. x \\<in> cl (insert y X)", "proof (rule clI)"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) = rank_of (insert y X)", "have \"rank_of (insert y X) \\<le> rank_of (insert x (insert y X))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert y X) \\<le> rank_of (insert x (insert y X))", "using assms cl_subset_carrier"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> carrier\n  y \\<in> cl (insert x X) - cl X\n  cl ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. rank_of (insert y X) \\<le> rank_of (insert x (insert y X))", "by (auto intro: rank_of_mono)"], ["proof (state)\nthis:\n  rank_of (insert y X) \\<le> rank_of (insert x (insert y X))\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) = rank_of (insert y X)", "moreover"], ["proof (state)\nthis:\n  rank_of (insert y X) \\<le> rank_of (insert x (insert y X))\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) = rank_of (insert y X)", "have \"rank_of (insert x (insert y X)) \\<le> rank_of (insert y X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) \\<le> rank_of (insert y X)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) \\<le> rank_of (insert y X)", "have \"rank_of (insert x (insert y X)) = rank_of (insert y (insert x X))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) = rank_of (insert y (insert x X))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) = rank_of (insert y (insert x X))", "have \"insert x (insert y X) = insert y (insert x X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x (insert y X) = insert y (insert x X)", "by auto"], ["proof (state)\nthis:\n  insert x (insert y X) = insert y (insert x X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) = rank_of (insert y (insert x X))", "then"], ["proof (chain)\npicking this:\n  insert x (insert y X) = insert y (insert x X)", "show ?thesis"], ["proof (prove)\nusing this:\n  insert x (insert y X) = insert y (insert x X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) = rank_of (insert y (insert x X))", "by auto"], ["proof (state)\nthis:\n  rank_of (insert x (insert y X)) = rank_of (insert y (insert x X))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of (insert x (insert y X)) = rank_of (insert y (insert x X))\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) \\<le> rank_of (insert y X)", "also"], ["proof (state)\nthis:\n  rank_of (insert x (insert y X)) = rank_of (insert y (insert x X))\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) \\<le> rank_of (insert y X)", "have \"rank_of (insert y (insert x X)) = rank_of (insert x X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert y (insert x X)) = rank_of (insert x X)", "using assms cl_def"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> carrier\n  y \\<in> cl (insert x X) - cl X\n  cl ?X \\<equiv> {x \\<in> carrier. rank_of (insert x ?X) = rank_of ?X}\n\ngoal (1 subgoal):\n 1. rank_of (insert y (insert x X)) = rank_of (insert x X)", "by auto"], ["proof (state)\nthis:\n  rank_of (insert y (insert x X)) = rank_of (insert x X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) \\<le> rank_of (insert y X)", "also"], ["proof (state)\nthis:\n  rank_of (insert y (insert x X)) = rank_of (insert x X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) \\<le> rank_of (insert y X)", "have \"\\<dots> \\<le> Suc (rank_of X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> Suc (rank_of X)", "using assms cl_subset_carrier"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> carrier\n  y \\<in> cl (insert x X) - cl X\n  cl ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) \\<le> Suc (rank_of X)", "by (auto intro: rank_of_insert_le)"], ["proof (state)\nthis:\n  rank_of (insert x X) \\<le> Suc (rank_of X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) \\<le> rank_of (insert y X)", "also"], ["proof (state)\nthis:\n  rank_of (insert x X) \\<le> Suc (rank_of X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) \\<le> rank_of (insert y X)", "have \"\\<dots> = rank_of (insert y X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (rank_of X) = rank_of (insert y X)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Suc (rank_of X) = rank_of (insert y X)", "have \"rank_of (insert y X) \\<le> Suc (rank_of X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert y X) \\<le> Suc (rank_of X)", "using assms cl_subset_carrier"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> carrier\n  y \\<in> cl (insert x X) - cl X\n  cl ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. rank_of (insert y X) \\<le> Suc (rank_of X)", "by (auto intro: rank_of_insert_le)"], ["proof (state)\nthis:\n  rank_of (insert y X) \\<le> Suc (rank_of X)\n\ngoal (1 subgoal):\n 1. Suc (rank_of X) = rank_of (insert y X)", "moreover"], ["proof (state)\nthis:\n  rank_of (insert y X) \\<le> Suc (rank_of X)\n\ngoal (1 subgoal):\n 1. Suc (rank_of X) = rank_of (insert y X)", "have \"rank_of (insert y X) \\<noteq> rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert y X) \\<noteq> rank_of X", "using assms cl_def"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> carrier\n  y \\<in> cl (insert x X) - cl X\n  cl ?X \\<equiv> {x \\<in> carrier. rank_of (insert x ?X) = rank_of ?X}\n\ngoal (1 subgoal):\n 1. rank_of (insert y X) \\<noteq> rank_of X", "by auto"], ["proof (state)\nthis:\n  rank_of (insert y X) \\<noteq> rank_of X\n\ngoal (1 subgoal):\n 1. Suc (rank_of X) = rank_of (insert y X)", "moreover"], ["proof (state)\nthis:\n  rank_of (insert y X) \\<noteq> rank_of X\n\ngoal (1 subgoal):\n 1. Suc (rank_of X) = rank_of (insert y X)", "have \"rank_of X \\<le> rank_of (insert y X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of X \\<le> rank_of (insert y X)", "using assms cl_subset_carrier"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> carrier\n  y \\<in> cl (insert x X) - cl X\n  cl ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. rank_of X \\<le> rank_of (insert y X)", "by (auto intro: rank_of_mono)"], ["proof (state)\nthis:\n  rank_of X \\<le> rank_of (insert y X)\n\ngoal (1 subgoal):\n 1. Suc (rank_of X) = rank_of (insert y X)", "ultimately"], ["proof (chain)\npicking this:\n  rank_of (insert y X) \\<le> Suc (rank_of X)\n  rank_of (insert y X) \\<noteq> rank_of X\n  rank_of X \\<le> rank_of (insert y X)", "show ?thesis"], ["proof (prove)\nusing this:\n  rank_of (insert y X) \\<le> Suc (rank_of X)\n  rank_of (insert y X) \\<noteq> rank_of X\n  rank_of X \\<le> rank_of (insert y X)\n\ngoal (1 subgoal):\n 1. Suc (rank_of X) = rank_of (insert y X)", "by auto"], ["proof (state)\nthis:\n  Suc (rank_of X) = rank_of (insert y X)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Suc (rank_of X) = rank_of (insert y X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) \\<le> rank_of (insert y X)", "finally"], ["proof (chain)\npicking this:\n  rank_of (insert x (insert y X)) \\<le> rank_of (insert y X)", "show ?thesis"], ["proof (prove)\nusing this:\n  rank_of (insert x (insert y X)) \\<le> rank_of (insert y X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) \\<le> rank_of (insert y X)", "."], ["proof (state)\nthis:\n  rank_of (insert x (insert y X)) \\<le> rank_of (insert y X)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank_of (insert x (insert y X)) \\<le> rank_of (insert y X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) = rank_of (insert y X)", "ultimately"], ["proof (chain)\npicking this:\n  rank_of (insert y X) \\<le> rank_of (insert x (insert y X))\n  rank_of (insert x (insert y X)) \\<le> rank_of (insert y X)", "show \"rank_of (insert x (insert y X)) = rank_of (insert y X)\""], ["proof (prove)\nusing this:\n  rank_of (insert y X) \\<le> rank_of (insert x (insert y X))\n  rank_of (insert x (insert y X)) \\<le> rank_of (insert y X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x (insert y X)) = rank_of (insert y X)", "by auto"], ["proof (state)\nthis:\n  rank_of (insert x (insert y X)) = rank_of (insert y X)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma clI_insert:\n  assumes \"x \\<in> carrier\"\n  assumes \"indep X\"\n  assumes \"\\<not> indep (insert x X)\"\n  shows \"x \\<in> cl X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> cl X", "using \\<open>x \\<in> carrier\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n\ngoal (1 subgoal):\n 1. x \\<in> cl X", "proof (rule clI)"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "have *: \"X \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> carrier", "using assms indep_subset_carrier"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n  indep X\n  \\<not> indep (insert x X)\n  indep ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. X \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "then"], ["proof (chain)\npicking this:\n  X \\<subseteq> carrier", "have **: \"insert x X \\<subseteq> carrier\""], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. insert x X \\<subseteq> carrier", "using assms"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n  x \\<in> carrier\n  indep X\n  \\<not> indep (insert x X)\n\ngoal (1 subgoal):\n 1. insert x X \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  insert x X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "have \"indep_in (insert x X) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in (insert x X) X", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n  indep X\n  \\<not> indep (insert x X)\n\ngoal (1 subgoal):\n 1. indep_in (insert x X) X", "by (auto intro: indep_inI)"], ["proof (state)\nthis:\n  indep_in (insert x X) X\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "then"], ["proof (chain)\npicking this:\n  indep_in (insert x X) X", "obtain B where B: \"basis_in (insert x X) B\" \"X \\<subseteq> B\""], ["proof (prove)\nusing this:\n  indep_in (insert x X) X\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>basis_in (insert x X) B; X \\<subseteq> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms indep_in_iff_subset_basis_in[OF **]"], ["proof (prove)\nusing this:\n  indep_in (insert x X) X\n  x \\<in> carrier\n  indep X\n  \\<not> indep (insert x X)\n  indep_in (insert x X) ?X =\n  (\\<exists>B. basis_in (insert x X) B \\<and> ?X \\<subseteq> B)\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>basis_in (insert x X) B; X \\<subseteq> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  basis_in (insert x X) B\n  X \\<subseteq> B\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "have \"x \\<notin> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> B", "proof (rule ccontr, goal_cases False)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> B \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> x \\<notin> B\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> B \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> x \\<notin> B", "have \"indep_in (insert x X) (insert x X)\""], ["proof (prove)\nusing this:\n  \\<not> x \\<notin> B\n\ngoal (1 subgoal):\n 1. indep_in (insert x X) (insert x X)", "using B indep_in_subset[OF ** basis_in_indep_in[OF **]]"], ["proof (prove)\nusing this:\n  \\<not> x \\<notin> B\n  basis_in (insert x X) B\n  X \\<subseteq> B\n  \\<lbrakk>basis_in (insert x X) ?X; ?Y \\<subseteq> ?X\\<rbrakk>\n  \\<Longrightarrow> indep_in (insert x X) ?Y\n\ngoal (1 subgoal):\n 1. indep_in (insert x X) (insert x X)", "by auto"], ["proof (state)\nthis:\n  indep_in (insert x X) (insert x X)\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> B \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  indep_in (insert x X) (insert x X)", "show ?case"], ["proof (prove)\nusing this:\n  indep_in (insert x X) (insert x X)\n\ngoal (1 subgoal):\n 1. False", "using assms indep_in_indep"], ["proof (prove)\nusing this:\n  indep_in (insert x X) (insert x X)\n  x \\<in> carrier\n  indep X\n  \\<not> indep (insert x X)\n  indep_in ?\\<E> ?X \\<Longrightarrow> indep ?X\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> B\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "have \"basis_in X B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis_in X B", "using *"], ["proof (prove)\nusing this:\n  X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. basis_in X B", "proof (rule basis_inI, goal_cases indep max_indep)"], ["proof (state)\ngoal (2 subgoals):\n 1. indep_in X B\n 2. \\<And>x. x \\<in> X - B \\<Longrightarrow> \\<not> indep_in X (insert x B)", "case indep"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. indep_in X B\n 2. \\<And>x. x \\<in> X - B \\<Longrightarrow> \\<not> indep_in X (insert x B)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in X B", "proof (rule indep_in_supI[where \\<E> = \"insert x X\"])"], ["proof (state)\ngoal (3 subgoals):\n 1. B \\<subseteq> X\n 2. X \\<subseteq> insert x X\n 3. indep_in (insert x X) B", "show \"B \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> X", "using B basis_in_subset_carrier[OF **] \\<open>x \\<notin> B\\<close>"], ["proof (prove)\nusing this:\n  basis_in (insert x X) B\n  X \\<subseteq> B\n  basis_in (insert x X) ?X \\<Longrightarrow> ?X \\<subseteq> insert x X\n  x \\<notin> B\n\ngoal (1 subgoal):\n 1. B \\<subseteq> X", "by auto"], ["proof (state)\nthis:\n  B \\<subseteq> X\n\ngoal (2 subgoals):\n 1. X \\<subseteq> insert x X\n 2. indep_in (insert x X) B", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. X \\<subseteq> insert x X\n 2. indep_in (insert x X) B", "show \"indep_in (insert x X) B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in (insert x X) B", "using basis_in_indep_in[OF ** B(1)]"], ["proof (prove)\nusing this:\n  indep_in (insert x X) B\n\ngoal (1 subgoal):\n 1. indep_in (insert x X) B", "."], ["proof (state)\nthis:\n  indep_in (insert x X) B\n\ngoal (1 subgoal):\n 1. X \\<subseteq> insert x X", "qed auto"], ["proof (state)\nthis:\n  indep_in X B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X - B \\<Longrightarrow> \\<not> indep_in X (insert x B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X - B \\<Longrightarrow> \\<not> indep_in X (insert x B)", "case (max_indep y)"], ["proof (state)\nthis:\n  y \\<in> X - B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X - B \\<Longrightarrow> \\<not> indep_in X (insert x B)", "then"], ["proof (chain)\npicking this:\n  y \\<in> X - B", "have \"\\<not> indep_in (insert x X) (insert y B)\""], ["proof (prove)\nusing this:\n  y \\<in> X - B\n\ngoal (1 subgoal):\n 1. \\<not> indep_in (insert x X) (insert y B)", "using B basis_in_max_indep_in[OF **]"], ["proof (prove)\nusing this:\n  y \\<in> X - B\n  basis_in (insert x X) B\n  X \\<subseteq> B\n  \\<lbrakk>basis_in (insert x X) ?X; ?x \\<in> insert x X - ?X\\<rbrakk>\n  \\<Longrightarrow> \\<not> indep_in (insert x X) (insert ?x ?X)\n\ngoal (1 subgoal):\n 1. \\<not> indep_in (insert x X) (insert y B)", "by auto"], ["proof (state)\nthis:\n  \\<not> indep_in (insert x X) (insert y B)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> X - B \\<Longrightarrow> \\<not> indep_in X (insert x B)", "then"], ["proof (chain)\npicking this:\n  \\<not> indep_in (insert x X) (insert y B)", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> indep_in (insert x X) (insert y B)\n\ngoal (1 subgoal):\n 1. \\<not> indep_in X (insert y B)", "by (auto intro: indep_in_subI_subset)"], ["proof (state)\nthis:\n  \\<not> indep_in X (insert y B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  basis_in X B\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "then"], ["proof (chain)\npicking this:\n  basis_in X B", "show \"rank_of (insert x X) = rank_of X\""], ["proof (prove)\nusing this:\n  basis_in X B\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "using B rank_of_eq_card_basis_in[OF *] rank_of_eq_card_basis_in[OF **]"], ["proof (prove)\nusing this:\n  basis_in X B\n  basis_in (insert x X) B\n  X \\<subseteq> B\n  basis_in X ?B \\<Longrightarrow> rank_of X = card ?B\n  basis_in (insert x X) ?B \\<Longrightarrow> rank_of (insert x X) = card ?B\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "by auto"], ["proof (state)\nthis:\n  rank_of (insert x X) = rank_of X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma indep_in_carrier [simp]: \"indep_in carrier = indep\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indep_in carrier = indep", "using indep_subset_carrier"], ["proof (prove)\nusing this:\n  indep ?X \\<Longrightarrow> ?X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. indep_in carrier = indep", "by (auto simp: indep_in_def fun_eq_iff)"], ["", "context\n  fixes I\n  defines \"I \\<equiv> (\\<lambda>X. X \\<subseteq> carrier \\<and> (\\<forall>x\\<in>X. x \\<notin> cl (X - {x})))\"\nbegin"], ["", "lemma I_mono: \"I Y\" if \"Y \\<subseteq> X\" \"I X\" for X Y :: \"'a set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I Y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. I Y", "have \"\\<forall>x\\<in>Y. x \\<notin> cl (Y - {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>Y. x \\<notin> cl (Y - {x})", "proof (intro ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Y \\<Longrightarrow> x \\<notin> cl (Y - {x})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Y \\<Longrightarrow> x \\<notin> cl (Y - {x})", "assume x: \"x \\<in> Y\""], ["proof (state)\nthis:\n  x \\<in> Y\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Y \\<Longrightarrow> x \\<notin> cl (Y - {x})", "with that"], ["proof (chain)\npicking this:\n  Y \\<subseteq> X\n  I X\n  x \\<in> Y", "have \"cl (Y - {x}) \\<subseteq> cl (X - {x})\""], ["proof (prove)\nusing this:\n  Y \\<subseteq> X\n  I X\n  x \\<in> Y\n\ngoal (1 subgoal):\n 1. cl (Y - {x}) \\<subseteq> cl (X - {x})", "by (intro cl_mono) (auto simp: I_def)"], ["proof (state)\nthis:\n  cl (Y - {x}) \\<subseteq> cl (X - {x})\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Y \\<Longrightarrow> x \\<notin> cl (Y - {x})", "with that and x"], ["proof (chain)\npicking this:\n  Y \\<subseteq> X\n  I X\n  x \\<in> Y\n  cl (Y - {x}) \\<subseteq> cl (X - {x})", "show \"x \\<notin> cl (Y - {x})\""], ["proof (prove)\nusing this:\n  Y \\<subseteq> X\n  I X\n  x \\<in> Y\n  cl (Y - {x}) \\<subseteq> cl (X - {x})\n\ngoal (1 subgoal):\n 1. x \\<notin> cl (Y - {x})", "by (auto simp: I_def)"], ["proof (state)\nthis:\n  x \\<notin> cl (Y - {x})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x\\<in>Y. x \\<notin> cl (Y - {x})\n\ngoal (1 subgoal):\n 1. I Y", "with that"], ["proof (chain)\npicking this:\n  Y \\<subseteq> X\n  I X\n  \\<forall>x\\<in>Y. x \\<notin> cl (Y - {x})", "show ?thesis"], ["proof (prove)\nusing this:\n  Y \\<subseteq> X\n  I X\n  \\<forall>x\\<in>Y. x \\<notin> cl (Y - {x})\n\ngoal (1 subgoal):\n 1. I Y", "by (auto simp: I_def)"], ["proof (state)\nthis:\n  I Y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma clI':\n  assumes \"I X\" \"x \\<in> carrier\" \"\\<not>I (insert x X)\"\n  shows   \"x \\<in> cl X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> cl X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> cl X", "from assms"], ["proof (chain)\npicking this:\n  I X\n  x \\<in> carrier\n  \\<not> I (insert x X)", "have x: \"x \\<notin> X\""], ["proof (prove)\nusing this:\n  I X\n  x \\<in> carrier\n  \\<not> I (insert x X)\n\ngoal (1 subgoal):\n 1. x \\<notin> X", "by (auto simp: insert_absorb)"], ["proof (state)\nthis:\n  x \\<notin> X\n\ngoal (1 subgoal):\n 1. x \\<in> cl X", "from assms"], ["proof (chain)\npicking this:\n  I X\n  x \\<in> carrier\n  \\<not> I (insert x X)", "obtain y where y: \"y \\<in> insert x X\" \"y \\<in> cl (insert x X - {y})\""], ["proof (prove)\nusing this:\n  I X\n  x \\<in> carrier\n  \\<not> I (insert x X)\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> insert x X; y \\<in> cl (insert x X - {y})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force simp: I_def)"], ["proof (state)\nthis:\n  y \\<in> insert x X\n  y \\<in> cl (insert x X - {y})\n\ngoal (1 subgoal):\n 1. x \\<in> cl X", "show \"x \\<in> cl X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> cl X", "proof (cases \"x = y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> x \\<in> cl X\n 2. x \\<noteq> y \\<Longrightarrow> x \\<in> cl X", "case True"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> x \\<in> cl X\n 2. x \\<noteq> y \\<Longrightarrow> x \\<in> cl X", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. x \\<in> cl X", "using assms x y"], ["proof (prove)\nusing this:\n  x = y\n  I X\n  x \\<in> carrier\n  \\<not> I (insert x X)\n  x \\<notin> X\n  y \\<in> insert x X\n  y \\<in> cl (insert x X - {y})\n\ngoal (1 subgoal):\n 1. x \\<in> cl X", "by (auto simp: I_def)"], ["proof (state)\nthis:\n  x \\<in> cl X\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> x \\<in> cl X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> x \\<in> cl X", "case False"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> x \\<in> cl X", "have \"y \\<in> cl (insert x X - {y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> cl (insert x X - {y})", "by fact"], ["proof (state)\nthis:\n  y \\<in> cl (insert x X - {y})\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> x \\<in> cl X", "also"], ["proof (state)\nthis:\n  y \\<in> cl (insert x X - {y})\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> x \\<in> cl X", "from False"], ["proof (chain)\npicking this:\n  x \\<noteq> y", "have \"insert x X - {y} = insert x (X - {y})\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. insert x X - {y} = insert x (X - {y})", "by auto"], ["proof (state)\nthis:\n  insert x X - {y} = insert x (X - {y})\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> x \\<in> cl X", "finally"], ["proof (chain)\npicking this:\n  y \\<in> cl (insert x (X - {y}))", "have \"y \\<in> cl (insert x (X - {y})) - cl (X - {y})\""], ["proof (prove)\nusing this:\n  y \\<in> cl (insert x (X - {y}))\n\ngoal (1 subgoal):\n 1. y \\<in> cl (insert x (X - {y})) - cl (X - {y})", "using assms False y"], ["proof (prove)\nusing this:\n  y \\<in> cl (insert x (X - {y}))\n  I X\n  x \\<in> carrier\n  \\<not> I (insert x X)\n  x \\<noteq> y\n  y \\<in> insert x X\n  y \\<in> cl (insert x X - {y})\n\ngoal (1 subgoal):\n 1. y \\<in> cl (insert x (X - {y})) - cl (X - {y})", "unfolding I_def"], ["proof (prove)\nusing this:\n  y \\<in> cl (insert x (X - {y}))\n  X \\<subseteq> carrier \\<and> (\\<forall>x\\<in>X. x \\<notin> cl (X - {x}))\n  x \\<in> carrier\n  \\<not> (insert x X \\<subseteq> carrier \\<and>\n          (\\<forall>xa\\<in>insert x X. xa \\<notin> cl (insert x X - {xa})))\n  x \\<noteq> y\n  y \\<in> insert x X\n  y \\<in> cl (insert x X - {y})\n\ngoal (1 subgoal):\n 1. y \\<in> cl (insert x (X - {y})) - cl (X - {y})", "by blast"], ["proof (state)\nthis:\n  y \\<in> cl (insert x (X - {y})) - cl (X - {y})\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> x \\<in> cl X", "hence \"x \\<in> cl (insert y (X - {y}))\""], ["proof (prove)\nusing this:\n  y \\<in> cl (insert x (X - {y})) - cl (X - {y})\n\ngoal (1 subgoal):\n 1. x \\<in> cl (insert y (X - {y}))", "using cl_augment[of \"X - {y}\" x y] assms False y"], ["proof (prove)\nusing this:\n  y \\<in> cl (insert x (X - {y})) - cl (X - {y})\n  \\<lbrakk>X - {y} \\<subseteq> carrier; x \\<in> carrier;\n   y \\<in> cl (insert x (X - {y})) - cl (X - {y})\\<rbrakk>\n  \\<Longrightarrow> x \\<in> cl (insert y (X - {y}))\n  I X\n  x \\<in> carrier\n  \\<not> I (insert x X)\n  x \\<noteq> y\n  y \\<in> insert x X\n  y \\<in> cl (insert x X - {y})\n\ngoal (1 subgoal):\n 1. x \\<in> cl (insert y (X - {y}))", "by (auto simp: I_def)"], ["proof (state)\nthis:\n  x \\<in> cl (insert y (X - {y}))\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> x \\<in> cl X", "also"], ["proof (state)\nthis:\n  x \\<in> cl (insert y (X - {y}))\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> x \\<in> cl X", "from y and False"], ["proof (chain)\npicking this:\n  y \\<in> insert x X\n  y \\<in> cl (insert x X - {y})\n  x \\<noteq> y", "have \"insert y (X - {y}) = X\""], ["proof (prove)\nusing this:\n  y \\<in> insert x X\n  y \\<in> cl (insert x X - {y})\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. insert y (X - {y}) = X", "by auto"], ["proof (state)\nthis:\n  insert y (X - {y}) = X\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> x \\<in> cl X", "finally"], ["proof (chain)\npicking this:\n  x \\<in> cl X", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> cl X\n\ngoal (1 subgoal):\n 1. x \\<in> cl X", "."], ["proof (state)\nthis:\n  x \\<in> cl X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> cl X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma matroid_I: \"matroid carrier I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matroid carrier I", "proof (unfold_locales, goal_cases)"], ["proof (state)\ngoal (5 subgoals):\n 1. finite carrier\n 2. \\<And>X. I X \\<Longrightarrow> X \\<subseteq> carrier\n 3. \\<exists>X. I X\n 4. \\<And>X Y. \\<lbrakk>I X; Y \\<subseteq> X\\<rbrakk> \\<Longrightarrow> I Y\n 5. \\<And>X Y.\n       \\<lbrakk>I X; I Y; card X = Suc (card Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>X - Y. I (insert x Y)", "show \"finite carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite carrier", "by (rule carrier_finite)"], ["proof (state)\nthis:\n  finite carrier\n\ngoal (4 subgoals):\n 1. \\<And>X. I X \\<Longrightarrow> X \\<subseteq> carrier\n 2. \\<exists>X. I X\n 3. \\<And>X Y. \\<lbrakk>I X; Y \\<subseteq> X\\<rbrakk> \\<Longrightarrow> I Y\n 4. \\<And>X Y.\n       \\<lbrakk>I X; I Y; card X = Suc (card Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>X - Y. I (insert x Y)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>X. I X \\<Longrightarrow> X \\<subseteq> carrier\n 2. \\<exists>X. I X\n 3. \\<And>X Y. \\<lbrakk>I X; Y \\<subseteq> X\\<rbrakk> \\<Longrightarrow> I Y\n 4. \\<And>X Y.\n       \\<lbrakk>I X; I Y; card X = Suc (card Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>X - Y. I (insert x Y)", "case (4 X Y)"], ["proof (state)\nthis:\n  I X\n  Y \\<subseteq> X\n\ngoal (4 subgoals):\n 1. \\<And>X. I X \\<Longrightarrow> X \\<subseteq> carrier\n 2. \\<exists>X. I X\n 3. \\<And>X Y. \\<lbrakk>I X; Y \\<subseteq> X\\<rbrakk> \\<Longrightarrow> I Y\n 4. \\<And>X Y.\n       \\<lbrakk>I X; I Y; card X = Suc (card Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>X - Y. I (insert x Y)", "have \"\\<forall>x\\<in>Y. x \\<notin> cl (Y - {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>Y. x \\<notin> cl (Y - {x})", "proof (intro ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Y \\<Longrightarrow> x \\<notin> cl (Y - {x})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Y \\<Longrightarrow> x \\<notin> cl (Y - {x})", "assume x: \"x \\<in> Y\""], ["proof (state)\nthis:\n  x \\<in> Y\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Y \\<Longrightarrow> x \\<notin> cl (Y - {x})", "with 4"], ["proof (chain)\npicking this:\n  I X\n  Y \\<subseteq> X\n  x \\<in> Y", "have \"cl (Y - {x}) \\<subseteq> cl (X - {x})\""], ["proof (prove)\nusing this:\n  I X\n  Y \\<subseteq> X\n  x \\<in> Y\n\ngoal (1 subgoal):\n 1. cl (Y - {x}) \\<subseteq> cl (X - {x})", "by (intro cl_mono) (auto simp: I_def)"], ["proof (state)\nthis:\n  cl (Y - {x}) \\<subseteq> cl (X - {x})\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Y \\<Longrightarrow> x \\<notin> cl (Y - {x})", "with 4 and x"], ["proof (chain)\npicking this:\n  I X\n  Y \\<subseteq> X\n  x \\<in> Y\n  cl (Y - {x}) \\<subseteq> cl (X - {x})", "show \"x \\<notin> cl (Y - {x})\""], ["proof (prove)\nusing this:\n  I X\n  Y \\<subseteq> X\n  x \\<in> Y\n  cl (Y - {x}) \\<subseteq> cl (X - {x})\n\ngoal (1 subgoal):\n 1. x \\<notin> cl (Y - {x})", "by (auto simp: I_def)"], ["proof (state)\nthis:\n  x \\<notin> cl (Y - {x})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x\\<in>Y. x \\<notin> cl (Y - {x})\n\ngoal (4 subgoals):\n 1. \\<And>X. I X \\<Longrightarrow> X \\<subseteq> carrier\n 2. \\<exists>X. I X\n 3. \\<And>X Y. \\<lbrakk>I X; Y \\<subseteq> X\\<rbrakk> \\<Longrightarrow> I Y\n 4. \\<And>X Y.\n       \\<lbrakk>I X; I Y; card X = Suc (card Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>X - Y. I (insert x Y)", "with 4"], ["proof (chain)\npicking this:\n  I X\n  Y \\<subseteq> X\n  \\<forall>x\\<in>Y. x \\<notin> cl (Y - {x})", "show ?case"], ["proof (prove)\nusing this:\n  I X\n  Y \\<subseteq> X\n  \\<forall>x\\<in>Y. x \\<notin> cl (Y - {x})\n\ngoal (1 subgoal):\n 1. I Y", "by (auto simp: I_def)"], ["proof (state)\nthis:\n  I Y\n\ngoal (3 subgoals):\n 1. \\<And>X. I X \\<Longrightarrow> X \\<subseteq> carrier\n 2. \\<exists>X. I X\n 3. \\<And>X Y.\n       \\<lbrakk>I X; I Y; card X = Suc (card Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>X - Y. I (insert x Y)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>X. I X \\<Longrightarrow> X \\<subseteq> carrier\n 2. \\<exists>X. I X\n 3. \\<And>X Y.\n       \\<lbrakk>I X; I Y; card X = Suc (card Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>X - Y. I (insert x Y)", "case (5 X Y)"], ["proof (state)\nthis:\n  I X\n  I Y\n  card X = Suc (card Y)\n\ngoal (3 subgoals):\n 1. \\<And>X. I X \\<Longrightarrow> X \\<subseteq> carrier\n 2. \\<exists>X. I X\n 3. \\<And>X Y.\n       \\<lbrakk>I X; I Y; card X = Suc (card Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>X - Y. I (insert x Y)", "have \"~(\\<exists>X Y. I X \\<and> I Y \\<and> card X < card Y \\<and> (\\<forall>x\\<in>Y-X. \\<not>I (insert x X)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>X Y.\n       I X \\<and>\n       I Y \\<and>\n       card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>X Y.\n       I X \\<and>\n       I Y \\<and>\n       card X < card Y \\<and>\n       (\\<forall>x\\<in>Y - X. \\<not> I (insert x X)) \\<Longrightarrow>\n    False", "assume *: \"\\<exists>X Y. I X \\<and> I Y \\<and> card X < card Y \\<and> (\\<forall>x\\<in>Y-X. \\<not>I (insert x X))\" (is \"\\<exists>X Y. ?P X Y\")"], ["proof (state)\nthis:\n  \\<exists>X Y.\n     I X \\<and>\n     I Y \\<and>\n     card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n\ngoal (1 subgoal):\n 1. \\<exists>X Y.\n       I X \\<and>\n       I Y \\<and>\n       card X < card Y \\<and>\n       (\\<forall>x\\<in>Y - X. \\<not> I (insert x X)) \\<Longrightarrow>\n    False", "define n where \"n = Max ((\\<lambda>(X, Y). card (X \\<inter> Y)) ` {(X, Y). ?P X Y})\""], ["proof (state)\nthis:\n  n =\n  (MAX (X,\n      Y)\\<in>{(X, Y).\n              I X \\<and>\n              I Y \\<and>\n              card X < card Y \\<and>\n              (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}.\n      card (X \\<inter> Y))\n\ngoal (1 subgoal):\n 1. \\<exists>X Y.\n       I X \\<and>\n       I Y \\<and>\n       card X < card Y \\<and>\n       (\\<forall>x\\<in>Y - X. \\<not> I (insert x X)) \\<Longrightarrow>\n    False", "have \"{(X, Y). ?P X Y} \\<subseteq> Pow carrier \\<times> Pow carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(X, Y).\n     I X \\<and>\n     I Y \\<and>\n     card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}\n    \\<subseteq> Pow carrier \\<times> Pow carrier", "by (auto simp: I_def)"], ["proof (state)\nthis:\n  {(X, Y).\n   I X \\<and>\n   I Y \\<and>\n   card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}\n  \\<subseteq> Pow carrier \\<times> Pow carrier\n\ngoal (1 subgoal):\n 1. \\<exists>X Y.\n       I X \\<and>\n       I Y \\<and>\n       card X < card Y \\<and>\n       (\\<forall>x\\<in>Y - X. \\<not> I (insert x X)) \\<Longrightarrow>\n    False", "hence finite: \"finite {(X, Y). ?P X Y}\""], ["proof (prove)\nusing this:\n  {(X, Y).\n   I X \\<and>\n   I Y \\<and>\n   card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}\n  \\<subseteq> Pow carrier \\<times> Pow carrier\n\ngoal (1 subgoal):\n 1. finite\n     {(X, Y).\n      I X \\<and>\n      I Y \\<and>\n      card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}", "by (rule finite_subset) (insert carrier_finite, auto)"], ["proof (state)\nthis:\n  finite\n   {(X, Y).\n    I X \\<and>\n    I Y \\<and>\n    card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}\n\ngoal (1 subgoal):\n 1. \\<exists>X Y.\n       I X \\<and>\n       I Y \\<and>\n       card X < card Y \\<and>\n       (\\<forall>x\\<in>Y - X. \\<not> I (insert x X)) \\<Longrightarrow>\n    False", "hence \"n \\<in> ((\\<lambda>(X, Y). card (X \\<inter> Y)) ` {(X, Y). ?P X Y})\""], ["proof (prove)\nusing this:\n  finite\n   {(X, Y).\n    I X \\<and>\n    I Y \\<and>\n    card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}\n\ngoal (1 subgoal):\n 1. n \\<in> (\\<lambda>(X, Y). card (X \\<inter> Y)) `\n            {(X, Y).\n             I X \\<and>\n             I Y \\<and>\n             card X < card Y \\<and>\n             (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}", "unfolding n_def"], ["proof (prove)\nusing this:\n  finite\n   {(X, Y).\n    I X \\<and>\n    I Y \\<and>\n    card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}\n\ngoal (1 subgoal):\n 1. (MAX (X,\n        Y)\\<in>{(X, Y).\n                I X \\<and>\n                I Y \\<and>\n                card X < card Y \\<and>\n                (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}.\n        card (X \\<inter> Y))\n    \\<in> (\\<lambda>(X, Y). card (X \\<inter> Y)) `\n          {(X, Y).\n           I X \\<and>\n           I Y \\<and>\n           card X < card Y \\<and>\n           (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}", "using *"], ["proof (prove)\nusing this:\n  finite\n   {(X, Y).\n    I X \\<and>\n    I Y \\<and>\n    card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}\n  \\<exists>X Y.\n     I X \\<and>\n     I Y \\<and>\n     card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n\ngoal (1 subgoal):\n 1. (MAX (X,\n        Y)\\<in>{(X, Y).\n                I X \\<and>\n                I Y \\<and>\n                card X < card Y \\<and>\n                (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}.\n        card (X \\<inter> Y))\n    \\<in> (\\<lambda>(X, Y). card (X \\<inter> Y)) `\n          {(X, Y).\n           I X \\<and>\n           I Y \\<and>\n           card X < card Y \\<and>\n           (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}", "by (intro Max_in finite_imageI) auto"], ["proof (state)\nthis:\n  n \\<in> (\\<lambda>(X, Y). card (X \\<inter> Y)) `\n          {(X, Y).\n           I X \\<and>\n           I Y \\<and>\n           card X < card Y \\<and>\n           (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}\n\ngoal (1 subgoal):\n 1. \\<exists>X Y.\n       I X \\<and>\n       I Y \\<and>\n       card X < card Y \\<and>\n       (\\<forall>x\\<in>Y - X. \\<not> I (insert x X)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  n \\<in> (\\<lambda>(X, Y). card (X \\<inter> Y)) `\n          {(X, Y).\n           I X \\<and>\n           I Y \\<and>\n           card X < card Y \\<and>\n           (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}", "obtain X Y where XY: \"?P X Y\" \"n = card (X \\<inter> Y)\""], ["proof (prove)\nusing this:\n  n \\<in> (\\<lambda>(X, Y). card (X \\<inter> Y)) `\n          {(X, Y).\n           I X \\<and>\n           I Y \\<and>\n           card X < card Y \\<and>\n           (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}\n\ngoal (1 subgoal):\n 1. (\\<And>X Y.\n        \\<lbrakk>I X \\<and>\n                 I Y \\<and>\n                 card X < card Y \\<and>\n                 (\\<forall>x\\<in>Y - X. \\<not> I (insert x X));\n         n = card (X \\<inter> Y)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n\ngoal (1 subgoal):\n 1. \\<exists>X Y.\n       I X \\<and>\n       I Y \\<and>\n       card X < card Y \\<and>\n       (\\<forall>x\\<in>Y - X. \\<not> I (insert x X)) \\<Longrightarrow>\n    False", "hence finite': \"finite X\" \"finite Y\""], ["proof (prove)\nusing this:\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n\ngoal (1 subgoal):\n 1. finite X &&& finite Y", "using finite_subset[OF _ carrier_finite] XY"], ["proof (prove)\nusing this:\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n  ?A \\<subseteq> carrier \\<Longrightarrow> finite ?A\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n\ngoal (1 subgoal):\n 1. finite X &&& finite Y", "by (auto simp: I_def)"], ["proof (state)\nthis:\n  finite X\n  finite Y\n\ngoal (1 subgoal):\n 1. \\<exists>X Y.\n       I X \\<and>\n       I Y \\<and>\n       card X < card Y \\<and>\n       (\\<forall>x\\<in>Y - X. \\<not> I (insert x X)) \\<Longrightarrow>\n    False", "from XY finite'"], ["proof (chain)\npicking this:\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n  finite X\n  finite Y", "have \"~(Y \\<subseteq> X)\""], ["proof (prove)\nusing this:\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n  finite X\n  finite Y\n\ngoal (1 subgoal):\n 1. \\<not> Y \\<subseteq> X", "using card_mono[of X Y]"], ["proof (prove)\nusing this:\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n  finite X\n  finite Y\n  \\<lbrakk>finite X; Y \\<subseteq> X\\<rbrakk>\n  \\<Longrightarrow> card Y \\<le> card X\n\ngoal (1 subgoal):\n 1. \\<not> Y \\<subseteq> X", "by auto"], ["proof (state)\nthis:\n  \\<not> Y \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<exists>X Y.\n       I X \\<and>\n       I Y \\<and>\n       card X < card Y \\<and>\n       (\\<forall>x\\<in>Y - X. \\<not> I (insert x X)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> Y \\<subseteq> X", "obtain y where y: \"y \\<in> Y - X\""], ["proof (prove)\nusing this:\n  \\<not> Y \\<subseteq> X\n\ngoal (1 subgoal):\n 1. (\\<And>y. y \\<in> Y - X \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  y \\<in> Y - X\n\ngoal (1 subgoal):\n 1. \\<exists>X Y.\n       I X \\<and>\n       I Y \\<and>\n       card X < card Y \\<and>\n       (\\<forall>x\\<in>Y - X. \\<not> I (insert x X)) \\<Longrightarrow>\n    False", "have False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"X \\<subseteq> cl (Y - {y})\")"], ["proof (state)\ngoal (2 subgoals):\n 1. X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False\n 2. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  X \\<subseteq> cl (Y - {y})\n\ngoal (2 subgoals):\n 1. X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False\n 2. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "from y XY"], ["proof (chain)\npicking this:\n  y \\<in> Y - X\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)", "have [simp]: \"y \\<in> carrier\""], ["proof (prove)\nusing this:\n  y \\<in> Y - X\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n\ngoal (1 subgoal):\n 1. y \\<in> carrier", "by (auto simp: I_def)"], ["proof (state)\nthis:\n  y \\<in> carrier\n\ngoal (2 subgoals):\n 1. X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False\n 2. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "assume \"X \\<subseteq> cl (Y - {y})\""], ["proof (state)\nthis:\n  X \\<subseteq> cl (Y - {y})\n\ngoal (2 subgoals):\n 1. X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False\n 2. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "hence \"cl X \\<subseteq> cl (cl (Y - {y}))\""], ["proof (prove)\nusing this:\n  X \\<subseteq> cl (Y - {y})\n\ngoal (1 subgoal):\n 1. cl X \\<subseteq> cl (cl (Y - {y}))", "by (intro cl_mono cl_subset_carrier)"], ["proof (state)\nthis:\n  cl X \\<subseteq> cl (cl (Y - {y}))\n\ngoal (2 subgoals):\n 1. X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False\n 2. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  cl X \\<subseteq> cl (cl (Y - {y}))\n\ngoal (2 subgoals):\n 1. X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False\n 2. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "have \"\\<dots> = cl (Y - {y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl (cl (Y - {y})) = cl (Y - {y})", "using XY"], ["proof (prove)\nusing this:\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n\ngoal (1 subgoal):\n 1. cl (cl (Y - {y})) = cl (Y - {y})", "by (intro cl_cl_absorb) (auto simp: I_def)"], ["proof (state)\nthis:\n  cl (cl (Y - {y})) = cl (Y - {y})\n\ngoal (2 subgoals):\n 1. X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False\n 2. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  cl X \\<subseteq> cl (Y - {y})", "have \"cl X \\<subseteq> cl (Y - {y})\""], ["proof (prove)\nusing this:\n  cl X \\<subseteq> cl (Y - {y})\n\ngoal (1 subgoal):\n 1. cl X \\<subseteq> cl (Y - {y})", "."], ["proof (state)\nthis:\n  cl X \\<subseteq> cl (Y - {y})\n\ngoal (2 subgoals):\n 1. X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False\n 2. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  cl X \\<subseteq> cl (Y - {y})\n\ngoal (2 subgoals):\n 1. X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False\n 2. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "have \"y \\<notin> cl (Y - {y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<notin> cl (Y - {y})", "using y I_def XY(1)"], ["proof (prove)\nusing this:\n  y \\<in> Y - X\n  I \\<equiv>\n  \\<lambda>X.\n     X \\<subseteq> carrier \\<and>\n     (\\<forall>x\\<in>X. x \\<notin> cl (X - {x}))\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n\ngoal (1 subgoal):\n 1. y \\<notin> cl (Y - {y})", "by blast"], ["proof (state)\nthis:\n  y \\<notin> cl (Y - {y})\n\ngoal (2 subgoals):\n 1. X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False\n 2. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  cl X \\<subseteq> cl (Y - {y})\n  y \\<notin> cl (Y - {y})", "have \"y \\<notin> cl X\""], ["proof (prove)\nusing this:\n  cl X \\<subseteq> cl (Y - {y})\n  y \\<notin> cl (Y - {y})\n\ngoal (1 subgoal):\n 1. y \\<notin> cl X", "by blast"], ["proof (state)\nthis:\n  y \\<notin> cl X\n\ngoal (2 subgoals):\n 1. X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False\n 2. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  y \\<notin> cl X\n\ngoal (1 subgoal):\n 1. False", "unfolding I_def"], ["proof (prove)\nusing this:\n  y \\<notin> cl X\n\ngoal (1 subgoal):\n 1. False", "using XY y clI' \\<open>y \\<in> carrier\\<close>"], ["proof (prove)\nusing this:\n  y \\<notin> cl X\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n  y \\<in> Y - X\n  \\<lbrakk>I ?X; ?x \\<in> carrier; \\<not> I (insert ?x ?X)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> cl ?X\n  y \\<in> carrier\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> X \\<subseteq> cl (Y - {y})\n\ngoal (1 subgoal):\n 1. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "with y XY"], ["proof (chain)\npicking this:\n  y \\<in> Y - X\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n  \\<not> X \\<subseteq> cl (Y - {y})", "have [simp]: \"y \\<in> carrier\""], ["proof (prove)\nusing this:\n  y \\<in> Y - X\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n  \\<not> X \\<subseteq> cl (Y - {y})\n\ngoal (1 subgoal):\n 1. y \\<in> carrier", "by (auto simp: I_def)"], ["proof (state)\nthis:\n  y \\<in> carrier\n\ngoal (1 subgoal):\n 1. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "assume \"\\<not>(X \\<subseteq> cl (Y - {y}))\""], ["proof (state)\nthis:\n  \\<not> X \\<subseteq> cl (Y - {y})\n\ngoal (1 subgoal):\n 1. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> X \\<subseteq> cl (Y - {y})", "obtain t where t: \"t \\<in> X\" \"t \\<notin> cl (Y - {y})\""], ["proof (prove)\nusing this:\n  \\<not> X \\<subseteq> cl (Y - {y})\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<in> X; t \\<notin> cl (Y - {y})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t \\<in> X\n  t \\<notin> cl (Y - {y})\n\ngoal (1 subgoal):\n 1. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "with XY"], ["proof (chain)\npicking this:\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n  t \\<in> X\n  t \\<notin> cl (Y - {y})", "have [simp]: \"t \\<in> carrier\""], ["proof (prove)\nusing this:\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n  t \\<in> X\n  t \\<notin> cl (Y - {y})\n\ngoal (1 subgoal):\n 1. t \\<in> carrier", "by (auto simp: I_def)"], ["proof (state)\nthis:\n  t \\<in> carrier\n\ngoal (1 subgoal):\n 1. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "have \"t \\<in> X - Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> X - Y", "using t y clI[of t \"Y - {y}\"]"], ["proof (prove)\nusing this:\n  t \\<in> X\n  t \\<notin> cl (Y - {y})\n  y \\<in> Y - X\n  \\<lbrakk>t \\<in> carrier;\n   rank_of (insert t (Y - {y})) = rank_of (Y - {y})\\<rbrakk>\n  \\<Longrightarrow> t \\<in> cl (Y - {y})\n\ngoal (1 subgoal):\n 1. t \\<in> X - Y", "by (cases \"t = y\") (auto simp: insert_absorb)"], ["proof (state)\nthis:\n  t \\<in> X - Y\n\ngoal (1 subgoal):\n 1. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  t \\<in> X - Y\n\ngoal (1 subgoal):\n 1. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "have \"I  (Y - {y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I (Y - {y})", "using XY(1) I_mono[of \"Y - {y}\" Y]"], ["proof (prove)\nusing this:\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  \\<lbrakk>Y - {y} \\<subseteq> Y; I Y\\<rbrakk> \\<Longrightarrow> I (Y - {y})\n\ngoal (1 subgoal):\n 1. I (Y - {y})", "by blast"], ["proof (state)\nthis:\n  I (Y - {y})\n\ngoal (1 subgoal):\n 1. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  t \\<in> X - Y\n  I (Y - {y})", "have *: \"I (insert t (Y - {y}))\""], ["proof (prove)\nusing this:\n  t \\<in> X - Y\n  I (Y - {y})\n\ngoal (1 subgoal):\n 1. I (insert t (Y - {y}))", "using clI'[of \"Y - {y}\" t] t"], ["proof (prove)\nusing this:\n  t \\<in> X - Y\n  I (Y - {y})\n  \\<lbrakk>I (Y - {y}); t \\<in> carrier;\n   \\<not> I (insert t (Y - {y}))\\<rbrakk>\n  \\<Longrightarrow> t \\<in> cl (Y - {y})\n  t \\<in> X\n  t \\<notin> cl (Y - {y})\n\ngoal (1 subgoal):\n 1. I (insert t (Y - {y}))", "by auto"], ["proof (state)\nthis:\n  I (insert t (Y - {y}))\n\ngoal (1 subgoal):\n 1. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "from XY"], ["proof (chain)\npicking this:\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)", "have \"finite Y\""], ["proof (prove)\nusing this:\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n\ngoal (1 subgoal):\n 1. finite Y", "by (intro finite_subset[OF _ carrier_finite]) (auto simp: I_def)"], ["proof (state)\nthis:\n  finite Y\n\ngoal (1 subgoal):\n 1. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  finite Y\n\ngoal (1 subgoal):\n 1. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "from y"], ["proof (chain)\npicking this:\n  y \\<in> Y - X", "have \"Y \\<noteq> {}\""], ["proof (prove)\nusing this:\n  y \\<in> Y - X\n\ngoal (1 subgoal):\n 1. Y \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  Y \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  finite Y\n  Y \\<noteq> {}", "have [simp]: \"card (insert t (Y - {y})) = card Y\""], ["proof (prove)\nusing this:\n  finite Y\n  Y \\<noteq> {}\n\ngoal (1 subgoal):\n 1. card (insert t (Y - {y})) = card Y", "using \\<open>t \\<in> X - Y\\<close> y"], ["proof (prove)\nusing this:\n  finite Y\n  Y \\<noteq> {}\n  t \\<in> X - Y\n  y \\<in> Y - X\n\ngoal (1 subgoal):\n 1. card (insert t (Y - {y})) = card Y", "by (simp add: Suc_diff_Suc card_gt_0_iff)"], ["proof (state)\nthis:\n  card (insert t (Y - {y})) = card Y\n\ngoal (1 subgoal):\n 1. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "have \"\\<exists>x\\<in>Y - X. I (insert x X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>Y - X. I (insert x X)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>x\\<in>Y - X. I (insert x X)) \\<Longrightarrow> False", "assume \"\\<not>?thesis\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>x\\<in>Y - X. I (insert x X))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>x\\<in>Y - X. I (insert x X)) \\<Longrightarrow> False", "hence \"?P X (insert t (Y - {y}))\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>x\\<in>Y - X. I (insert x X))\n\ngoal (1 subgoal):\n 1. I X \\<and>\n    I (insert t (Y - {y})) \\<and>\n    card X < card (insert t (Y - {y})) \\<and>\n    (\\<forall>x\\<in>insert t (Y - {y}) - X. \\<not> I (insert x X))", "using XY * \\<open>t \\<in> X - Y\\<close>"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>x\\<in>Y - X. I (insert x X))\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n  I (insert t (Y - {y}))\n  t \\<in> X - Y\n\ngoal (1 subgoal):\n 1. I X \\<and>\n    I (insert t (Y - {y})) \\<and>\n    card X < card (insert t (Y - {y})) \\<and>\n    (\\<forall>x\\<in>insert t (Y - {y}) - X. \\<not> I (insert x X))", "by auto"], ["proof (state)\nthis:\n  I X \\<and>\n  I (insert t (Y - {y})) \\<and>\n  card X < card (insert t (Y - {y})) \\<and>\n  (\\<forall>x\\<in>insert t (Y - {y}) - X. \\<not> I (insert x X))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>x\\<in>Y - X. I (insert x X)) \\<Longrightarrow> False", "hence \"card (X \\<inter> insert t (Y - {y})) \\<le> n\""], ["proof (prove)\nusing this:\n  I X \\<and>\n  I (insert t (Y - {y})) \\<and>\n  card X < card (insert t (Y - {y})) \\<and>\n  (\\<forall>x\\<in>insert t (Y - {y}) - X. \\<not> I (insert x X))\n\ngoal (1 subgoal):\n 1. card (X \\<inter> insert t (Y - {y})) \\<le> n", "unfolding n_def"], ["proof (prove)\nusing this:\n  I X \\<and>\n  I (insert t (Y - {y})) \\<and>\n  card X < card (insert t (Y - {y})) \\<and>\n  (\\<forall>x\\<in>insert t (Y - {y}) - X. \\<not> I (insert x X))\n\ngoal (1 subgoal):\n 1. card (X \\<inter> insert t (Y - {y}))\n    \\<le> (MAX (X,\n              Y)\\<in>{(X, Y).\n                      I X \\<and>\n                      I Y \\<and>\n                      card X < card Y \\<and>\n                      (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}.\n              card (X \\<inter> Y))", "using finite"], ["proof (prove)\nusing this:\n  I X \\<and>\n  I (insert t (Y - {y})) \\<and>\n  card X < card (insert t (Y - {y})) \\<and>\n  (\\<forall>x\\<in>insert t (Y - {y}) - X. \\<not> I (insert x X))\n  finite\n   {(X, Y).\n    I X \\<and>\n    I Y \\<and>\n    card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}\n\ngoal (1 subgoal):\n 1. card (X \\<inter> insert t (Y - {y}))\n    \\<le> (MAX (X,\n              Y)\\<in>{(X, Y).\n                      I X \\<and>\n                      I Y \\<and>\n                      card X < card Y \\<and>\n                      (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))}.\n              card (X \\<inter> Y))", "by (intro Max_ge) auto"], ["proof (state)\nthis:\n  card (X \\<inter> insert t (Y - {y})) \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>x\\<in>Y - X. I (insert x X)) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  card (X \\<inter> insert t (Y - {y})) \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>x\\<in>Y - X. I (insert x X)) \\<Longrightarrow> False", "have \"X \\<inter> insert t (Y - {y}) = insert t ((X \\<inter> Y) - {y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<inter> insert t (Y - {y}) = insert t (X \\<inter> Y - {y})", "using y \\<open>t \\<in> X - Y\\<close>"], ["proof (prove)\nusing this:\n  y \\<in> Y - X\n  t \\<in> X - Y\n\ngoal (1 subgoal):\n 1. X \\<inter> insert t (Y - {y}) = insert t (X \\<inter> Y - {y})", "by blast"], ["proof (state)\nthis:\n  X \\<inter> insert t (Y - {y}) = insert t (X \\<inter> Y - {y})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>x\\<in>Y - X. I (insert x X)) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  X \\<inter> insert t (Y - {y}) = insert t (X \\<inter> Y - {y})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>x\\<in>Y - X. I (insert x X)) \\<Longrightarrow> False", "have \"card \\<dots> = Suc (card (X \\<inter> Y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (insert t (X \\<inter> Y - {y})) = Suc (card (X \\<inter> Y))", "using y \\<open>t \\<in> X - Y\\<close> \\<open>finite Y\\<close>"], ["proof (prove)\nusing this:\n  y \\<in> Y - X\n  t \\<in> X - Y\n  finite Y\n\ngoal (1 subgoal):\n 1. card (insert t (X \\<inter> Y - {y})) = Suc (card (X \\<inter> Y))", "by (simp add: card.insert_remove)"], ["proof (state)\nthis:\n  card (insert t (X \\<inter> Y - {y})) = Suc (card (X \\<inter> Y))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>x\\<in>Y - X. I (insert x X)) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  Suc (card (X \\<inter> Y)) \\<le> n", "show False"], ["proof (prove)\nusing this:\n  Suc (card (X \\<inter> Y)) \\<le> n\n\ngoal (1 subgoal):\n 1. False", "using XY"], ["proof (prove)\nusing this:\n  Suc (card (X \\<inter> Y)) \\<le> n\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x\\<in>Y - X. I (insert x X)\n\ngoal (1 subgoal):\n 1. \\<not> X \\<subseteq> cl (Y - {y}) \\<Longrightarrow> False", "with XY"], ["proof (chain)\npicking this:\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n  \\<exists>x\\<in>Y - X. I (insert x X)", "show False"], ["proof (prove)\nusing this:\n  I X \\<and>\n  I Y \\<and>\n  card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n  n = card (X \\<inter> Y)\n  \\<exists>x\\<in>Y - X. I (insert x X)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>X Y.\n       I X \\<and>\n       I Y \\<and>\n       card X < card Y \\<and>\n       (\\<forall>x\\<in>Y - X. \\<not> I (insert x X)) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. False", "."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>X Y.\n     I X \\<and>\n     I Y \\<and>\n     card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n\ngoal (3 subgoals):\n 1. \\<And>X. I X \\<Longrightarrow> X \\<subseteq> carrier\n 2. \\<exists>X. I X\n 3. \\<And>X Y.\n       \\<lbrakk>I X; I Y; card X = Suc (card Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>X - Y. I (insert x Y)", "with 5"], ["proof (chain)\npicking this:\n  I X\n  I Y\n  card X = Suc (card Y)\n  \\<nexists>X Y.\n     I X \\<and>\n     I Y \\<and>\n     card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))", "show ?case"], ["proof (prove)\nusing this:\n  I X\n  I Y\n  card X = Suc (card Y)\n  \\<nexists>X Y.\n     I X \\<and>\n     I Y \\<and>\n     card X < card Y \\<and> (\\<forall>x\\<in>Y - X. \\<not> I (insert x X))\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X - Y. I (insert x Y)", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>X - Y. I (insert x Y)\n\ngoal (2 subgoals):\n 1. \\<And>X. I X \\<Longrightarrow> X \\<subseteq> carrier\n 2. \\<exists>X. I X", "qed (auto simp: I_def)"], ["", "end"], ["", "definition cl_in where \"cl_in \\<E> X = matroid.cl \\<E> (indep_in \\<E>) X\""], ["", "lemma cl_eq_cl_in:\n  assumes \"X \\<subseteq> carrier\"\n  shows \"cl X = cl_in carrier X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl X = cl_in carrier X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cl X = cl_in carrier X", "interpret \\<E>: matroid carrier \"indep_in carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matroid carrier (indep_in carrier)", "by (intro matroid_subset) auto"], ["proof (state)\ngoal (1 subgoal):\n 1. cl X = cl_in carrier X", "have \"cl X = {x \\<in> carrier. rank_of (insert x X) = rank_of X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl X = {x \\<in> carrier. rank_of (insert x X) = rank_of X}", "unfolding cl_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> carrier. rank_of (insert x X) = rank_of X} =\n    {x \\<in> carrier. rank_of (insert x X) = rank_of X}", "by auto"], ["proof (state)\nthis:\n  cl X = {x \\<in> carrier. rank_of (insert x X) = rank_of X}\n\ngoal (1 subgoal):\n 1. cl X = cl_in carrier X", "also"], ["proof (state)\nthis:\n  cl X = {x \\<in> carrier. rank_of (insert x X) = rank_of X}\n\ngoal (1 subgoal):\n 1. cl X = cl_in carrier X", "have \"\\<dots> = {x \\<in> carrier. \\<E>.rank_of (insert x X) = \\<E>.rank_of X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> carrier. rank_of (insert x X) = rank_of X} =\n    {x \\<in> carrier. \\<E>.rank_of (insert x X) = \\<E>.rank_of X}", "using rank_of_sub_cong[of carrier] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>carrier \\<subseteq> carrier; ?\\<E>' \\<subseteq> carrier\\<rbrakk>\n  \\<Longrightarrow> \\<E>.rank_of ?\\<E>' = rank_of ?\\<E>'\n  X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. {x \\<in> carrier. rank_of (insert x X) = rank_of X} =\n    {x \\<in> carrier. \\<E>.rank_of (insert x X) = \\<E>.rank_of X}", "by auto"], ["proof (state)\nthis:\n  {x \\<in> carrier. rank_of (insert x X) = rank_of X} =\n  {x \\<in> carrier. \\<E>.rank_of (insert x X) = \\<E>.rank_of X}\n\ngoal (1 subgoal):\n 1. cl X = cl_in carrier X", "also"], ["proof (state)\nthis:\n  {x \\<in> carrier. rank_of (insert x X) = rank_of X} =\n  {x \\<in> carrier. \\<E>.rank_of (insert x X) = \\<E>.rank_of X}\n\ngoal (1 subgoal):\n 1. cl X = cl_in carrier X", "have \"\\<dots> = cl_in carrier X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> carrier. \\<E>.rank_of (insert x X) = \\<E>.rank_of X} =\n    cl_in carrier X", "unfolding cl_in_def \\<E>.cl_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> carrier. \\<E>.rank_of (insert x X) = \\<E>.rank_of X} =\n    {x \\<in> carrier. \\<E>.rank_of (insert x X) = \\<E>.rank_of X}", "by auto"], ["proof (state)\nthis:\n  {x \\<in> carrier. \\<E>.rank_of (insert x X) = \\<E>.rank_of X} =\n  cl_in carrier X\n\ngoal (1 subgoal):\n 1. cl X = cl_in carrier X", "finally"], ["proof (chain)\npicking this:\n  cl X = cl_in carrier X", "show ?thesis"], ["proof (prove)\nusing this:\n  cl X = cl_in carrier X\n\ngoal (1 subgoal):\n 1. cl X = cl_in carrier X", "."], ["proof (state)\nthis:\n  cl X = cl_in carrier X\n\ngoal:\nNo subgoals!", "qed"], ["", "context\n  fixes \\<E>\n  assumes *: \"\\<E> \\<subseteq> carrier\"\nbegin"], ["", "interpretation \\<E>: matroid \\<E> \"indep_in \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matroid \\<E> (indep_in \\<E>)", "using *"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. matroid \\<E> (indep_in \\<E>)", "by auto"], ["", "lemma cl_inI_aux: \"x \\<in> \\<E>.cl X \\<Longrightarrow> x \\<in> cl_in \\<E> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> \\<E>.cl X \\<Longrightarrow> x \\<in> cl_in \\<E> X", "unfolding cl_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> \\<E>.cl X \\<Longrightarrow> x \\<in> \\<E>.cl X", "by auto"], ["", "lemma cl_inD_aux: \"x \\<in> cl_in \\<E> X \\<Longrightarrow> x \\<in> \\<E>.cl X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> cl_in \\<E> X \\<Longrightarrow> x \\<in> \\<E>.cl X", "unfolding cl_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> \\<E>.cl X \\<Longrightarrow> x \\<in> \\<E>.cl X", "by auto"], ["", "lemma cl_inI:\n  assumes \"X \\<subseteq> \\<E>\"\n  assumes \"x \\<in> \\<E>\"\n  assumes \"rank_of (insert x X) = rank_of X\"\n  shows \"x \\<in> cl_in \\<E> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> cl_in \\<E> X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> cl_in \\<E> X", "have \"\\<E>.rank_of (insert x X) = rank_of (insert x X)\" \"\\<E>.rank_of X = rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.rank_of (insert x X) = rank_of (insert x X) &&&\n    \\<E>.rank_of X = rank_of X", "using assms rank_of_sub_cong[OF *]"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>\n  x \\<in> \\<E>\n  rank_of (insert x X) = rank_of X\n  ?\\<E>' \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.rank_of ?\\<E>' = rank_of ?\\<E>'\n\ngoal (1 subgoal):\n 1. \\<E>.rank_of (insert x X) = rank_of (insert x X) &&&\n    \\<E>.rank_of X = rank_of X", "by auto"], ["proof (state)\nthis:\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n  \\<E>.rank_of X = rank_of X\n\ngoal (1 subgoal):\n 1. x \\<in> cl_in \\<E> X", "then"], ["proof (chain)\npicking this:\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n  \\<E>.rank_of X = rank_of X", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n  \\<E>.rank_of X = rank_of X\n\ngoal (1 subgoal):\n 1. x \\<in> cl_in \\<E> X", "unfolding cl_in_def"], ["proof (prove)\nusing this:\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n  \\<E>.rank_of X = rank_of X\n\ngoal (1 subgoal):\n 1. x \\<in> \\<E>.cl X", "using assms"], ["proof (prove)\nusing this:\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n  \\<E>.rank_of X = rank_of X\n  X \\<subseteq> \\<E>\n  x \\<in> \\<E>\n  rank_of (insert x X) = rank_of X\n\ngoal (1 subgoal):\n 1. x \\<in> \\<E>.cl X", "by (auto intro: \\<E>.clI)"], ["proof (state)\nthis:\n  x \\<in> cl_in \\<E> X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cl_in_altdef:\n  assumes \"X \\<subseteq> \\<E>\"\n  shows \"cl_in \\<E> X = \\<Union>{Y \\<in> Pow \\<E>. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl_in \\<E> X =\n    \\<Union>\n     {Y \\<in> Pow \\<E>. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "unfolding cl_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.cl X =\n    \\<Union>\n     {Y \\<in> Pow \\<E>. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "proof (safe, goal_cases LTR RTL)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<E>.cl X \\<Longrightarrow>\n       x \\<in> \\<Union>\n                {Y \\<in> Pow \\<E>.\n                 X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n 2. \\<And>x Xa.\n       \\<lbrakk>x \\<in> Xa; Xa \\<subseteq> \\<E>; X \\<subseteq> Xa;\n        rank_of Xa = rank_of X\\<rbrakk>\n       \\<Longrightarrow> x \\<in> \\<E>.cl X", "case (LTR x)"], ["proof (state)\nthis:\n  x \\<in> \\<E>.cl X\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<E>.cl X \\<Longrightarrow>\n       x \\<in> \\<Union>\n                {Y \\<in> Pow \\<E>.\n                 X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n 2. \\<And>x Xa.\n       \\<lbrakk>x \\<in> Xa; Xa \\<subseteq> \\<E>; X \\<subseteq> Xa;\n        rank_of Xa = rank_of X\\<rbrakk>\n       \\<Longrightarrow> x \\<in> \\<E>.cl X", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<E>.cl X", "have \"x \\<in> \\<Union>{Y \\<in> Pow \\<E>. X \\<subseteq> Y \\<and> \\<E>.rank_of Y = \\<E>.rank_of X}\""], ["proof (prove)\nusing this:\n  x \\<in> \\<E>.cl X\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Union>\n             {Y \\<in> Pow \\<E>.\n              X \\<subseteq> Y \\<and> \\<E>.rank_of Y = \\<E>.rank_of X}", "using \\<E>.cl_altdef[OF assms]"], ["proof (prove)\nusing this:\n  x \\<in> \\<E>.cl X\n  \\<E>.cl X =\n  \\<Union>\n   {Y \\<in> Pow \\<E>.\n    X \\<subseteq> Y \\<and> \\<E>.rank_of Y = \\<E>.rank_of X}\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Union>\n             {Y \\<in> Pow \\<E>.\n              X \\<subseteq> Y \\<and> \\<E>.rank_of Y = \\<E>.rank_of X}", "by auto"], ["proof (state)\nthis:\n  x \\<in> \\<Union>\n           {Y \\<in> Pow \\<E>.\n            X \\<subseteq> Y \\<and> \\<E>.rank_of Y = \\<E>.rank_of X}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<E>.cl X \\<Longrightarrow>\n       x \\<in> \\<Union>\n                {Y \\<in> Pow \\<E>.\n                 X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n 2. \\<And>x Xa.\n       \\<lbrakk>x \\<in> Xa; Xa \\<subseteq> \\<E>; X \\<subseteq> Xa;\n        rank_of Xa = rank_of X\\<rbrakk>\n       \\<Longrightarrow> x \\<in> \\<E>.cl X", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<Union>\n           {Y \\<in> Pow \\<E>.\n            X \\<subseteq> Y \\<and> \\<E>.rank_of Y = \\<E>.rank_of X}", "obtain Y where Y: \"x \\<in> Y\" \"Y \\<in> Pow \\<E>\" \"X \\<subseteq> Y\" \"\\<E>.rank_of Y = \\<E>.rank_of X\""], ["proof (prove)\nusing this:\n  x \\<in> \\<Union>\n           {Y \\<in> Pow \\<E>.\n            X \\<subseteq> Y \\<and> \\<E>.rank_of Y = \\<E>.rank_of X}\n\ngoal (1 subgoal):\n 1. (\\<And>Y.\n        \\<lbrakk>x \\<in> Y; Y \\<in> Pow \\<E>; X \\<subseteq> Y;\n         \\<E>.rank_of Y = \\<E>.rank_of X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> Y\n  Y \\<in> Pow \\<E>\n  X \\<subseteq> Y\n  \\<E>.rank_of Y = \\<E>.rank_of X\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<E>.cl X \\<Longrightarrow>\n       x \\<in> \\<Union>\n                {Y \\<in> Pow \\<E>.\n                 X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n 2. \\<And>x Xa.\n       \\<lbrakk>x \\<in> Xa; Xa \\<subseteq> \\<E>; X \\<subseteq> Xa;\n        rank_of Xa = rank_of X\\<rbrakk>\n       \\<Longrightarrow> x \\<in> \\<E>.cl X", "then"], ["proof (chain)\npicking this:\n  x \\<in> Y\n  Y \\<in> Pow \\<E>\n  X \\<subseteq> Y\n  \\<E>.rank_of Y = \\<E>.rank_of X", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> Y\n  Y \\<in> Pow \\<E>\n  X \\<subseteq> Y\n  \\<E>.rank_of Y = \\<E>.rank_of X\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Union>\n             {Y \\<in> Pow \\<E>.\n              X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "using rank_of_sub_cong[OF *]"], ["proof (prove)\nusing this:\n  x \\<in> Y\n  Y \\<in> Pow \\<E>\n  X \\<subseteq> Y\n  \\<E>.rank_of Y = \\<E>.rank_of X\n  ?\\<E>' \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.rank_of ?\\<E>' = rank_of ?\\<E>'\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Union>\n             {Y \\<in> Pow \\<E>.\n              X \\<subseteq> Y \\<and> rank_of Y = rank_of X}", "by auto"], ["proof (state)\nthis:\n  x \\<in> \\<Union>\n           {Y \\<in> Pow \\<E>. X \\<subseteq> Y \\<and> rank_of Y = rank_of X}\n\ngoal (1 subgoal):\n 1. \\<And>x Xa.\n       \\<lbrakk>x \\<in> Xa; Xa \\<subseteq> \\<E>; X \\<subseteq> Xa;\n        rank_of Xa = rank_of X\\<rbrakk>\n       \\<Longrightarrow> x \\<in> \\<E>.cl X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x Xa.\n       \\<lbrakk>x \\<in> Xa; Xa \\<subseteq> \\<E>; X \\<subseteq> Xa;\n        rank_of Xa = rank_of X\\<rbrakk>\n       \\<Longrightarrow> x \\<in> \\<E>.cl X", "case (RTL x Y)"], ["proof (state)\nthis:\n  x \\<in> Y\n  Y \\<subseteq> \\<E>\n  X \\<subseteq> Y\n  rank_of Y = rank_of X\n\ngoal (1 subgoal):\n 1. \\<And>x Xa.\n       \\<lbrakk>x \\<in> Xa; Xa \\<subseteq> \\<E>; X \\<subseteq> Xa;\n        rank_of Xa = rank_of X\\<rbrakk>\n       \\<Longrightarrow> x \\<in> \\<E>.cl X", "then"], ["proof (chain)\npicking this:\n  x \\<in> Y\n  Y \\<subseteq> \\<E>\n  X \\<subseteq> Y\n  rank_of Y = rank_of X", "have \"x \\<in> \\<Union>{Y \\<in> Pow \\<E>. X \\<subseteq> Y \\<and> \\<E>.rank_of Y = \\<E>.rank_of X}\""], ["proof (prove)\nusing this:\n  x \\<in> Y\n  Y \\<subseteq> \\<E>\n  X \\<subseteq> Y\n  rank_of Y = rank_of X\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Union>\n             {Y \\<in> Pow \\<E>.\n              X \\<subseteq> Y \\<and> \\<E>.rank_of Y = \\<E>.rank_of X}", "using rank_of_sub_cong[OF *, of X] rank_of_sub_cong[OF *, of Y]"], ["proof (prove)\nusing this:\n  x \\<in> Y\n  Y \\<subseteq> \\<E>\n  X \\<subseteq> Y\n  rank_of Y = rank_of X\n  X \\<subseteq> \\<E> \\<Longrightarrow> \\<E>.rank_of X = rank_of X\n  Y \\<subseteq> \\<E> \\<Longrightarrow> \\<E>.rank_of Y = rank_of Y\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Union>\n             {Y \\<in> Pow \\<E>.\n              X \\<subseteq> Y \\<and> \\<E>.rank_of Y = \\<E>.rank_of X}", "by auto"], ["proof (state)\nthis:\n  x \\<in> \\<Union>\n           {Y \\<in> Pow \\<E>.\n            X \\<subseteq> Y \\<and> \\<E>.rank_of Y = \\<E>.rank_of X}\n\ngoal (1 subgoal):\n 1. \\<And>x Xa.\n       \\<lbrakk>x \\<in> Xa; Xa \\<subseteq> \\<E>; X \\<subseteq> Xa;\n        rank_of Xa = rank_of X\\<rbrakk>\n       \\<Longrightarrow> x \\<in> \\<E>.cl X", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<Union>\n           {Y \\<in> Pow \\<E>.\n            X \\<subseteq> Y \\<and> \\<E>.rank_of Y = \\<E>.rank_of X}", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> \\<Union>\n           {Y \\<in> Pow \\<E>.\n            X \\<subseteq> Y \\<and> \\<E>.rank_of Y = \\<E>.rank_of X}\n\ngoal (1 subgoal):\n 1. x \\<in> \\<E>.cl X", "using \\<E>.cl_altdef[OF assms]"], ["proof (prove)\nusing this:\n  x \\<in> \\<Union>\n           {Y \\<in> Pow \\<E>.\n            X \\<subseteq> Y \\<and> \\<E>.rank_of Y = \\<E>.rank_of X}\n  \\<E>.cl X =\n  \\<Union>\n   {Y \\<in> Pow \\<E>.\n    X \\<subseteq> Y \\<and> \\<E>.rank_of Y = \\<E>.rank_of X}\n\ngoal (1 subgoal):\n 1. x \\<in> \\<E>.cl X", "by auto"], ["proof (state)\nthis:\n  x \\<in> \\<E>.cl X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cl_in_subset_carrier: \"cl_in \\<E> X \\<subseteq> \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl_in \\<E> X \\<subseteq> \\<E>", "using \\<E>.cl_subset_carrier"], ["proof (prove)\nusing this:\n  \\<E>.cl ?X \\<subseteq> \\<E>\n\ngoal (1 subgoal):\n 1. cl_in \\<E> X \\<subseteq> \\<E>", "unfolding cl_in_def"], ["proof (prove)\nusing this:\n  \\<E>.cl ?X \\<subseteq> \\<E>\n\ngoal (1 subgoal):\n 1. \\<E>.cl X \\<subseteq> \\<E>", "."], ["", "lemma cl_in_rank_of:\n  assumes \"X \\<subseteq> \\<E>\"\n  assumes \"x \\<in> cl_in \\<E> X\"\n  shows \"rank_of (insert x X) = rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "have \"\\<E>.rank_of (insert x X) = \\<E>.rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.rank_of (insert x X) = \\<E>.rank_of X", "using assms \\<E>.cl_rank_of"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>\n  x \\<in> cl_in \\<E> X\n  ?x \\<in> \\<E>.cl ?X \\<Longrightarrow>\n  \\<E>.rank_of (insert ?x ?X) = \\<E>.rank_of ?X\n\ngoal (1 subgoal):\n 1. \\<E>.rank_of (insert x X) = \\<E>.rank_of X", "unfolding cl_in_def"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>\n  x \\<in> \\<E>.cl X\n  ?x \\<in> \\<E>.cl ?X \\<Longrightarrow>\n  \\<E>.rank_of (insert ?x ?X) = \\<E>.rank_of ?X\n\ngoal (1 subgoal):\n 1. \\<E>.rank_of (insert x X) = \\<E>.rank_of X", "by auto"], ["proof (state)\nthis:\n  \\<E>.rank_of (insert x X) = \\<E>.rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "moreover"], ["proof (state)\nthis:\n  \\<E>.rank_of (insert x X) = \\<E>.rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "have \"\\<E>.rank_of (insert x X) = rank_of (insert x X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.rank_of (insert x X) = rank_of (insert x X)", "using assms rank_of_sub_cong[OF *, of \"insert x X\"] cl_in_subset_carrier"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>\n  x \\<in> cl_in \\<E> X\n  insert x X \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n  cl_in \\<E> ?X \\<subseteq> \\<E>\n\ngoal (1 subgoal):\n 1. \\<E>.rank_of (insert x X) = rank_of (insert x X)", "by auto"], ["proof (state)\nthis:\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "moreover"], ["proof (state)\nthis:\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "have \"\\<E>.rank_of X = rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.rank_of X = rank_of X", "using assms rank_of_sub_cong[OF *]"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>\n  x \\<in> cl_in \\<E> X\n  ?\\<E>' \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.rank_of ?\\<E>' = rank_of ?\\<E>'\n\ngoal (1 subgoal):\n 1. \\<E>.rank_of X = rank_of X", "by auto"], ["proof (state)\nthis:\n  \\<E>.rank_of X = rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "ultimately"], ["proof (chain)\npicking this:\n  \\<E>.rank_of (insert x X) = \\<E>.rank_of X\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n  \\<E>.rank_of X = rank_of X", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<E>.rank_of (insert x X) = \\<E>.rank_of X\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n  \\<E>.rank_of X = rank_of X\n\ngoal (1 subgoal):\n 1. rank_of (insert x X) = rank_of X", "by auto"], ["proof (state)\nthis:\n  rank_of (insert x X) = rank_of X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas cl_inD = cl_in_rank_of cl_in_subset_carrier"], ["", "lemma cl_in_subset:\n  assumes \"X \\<subseteq> \\<E>\"\n  shows \"X \\<subseteq> cl_in \\<E> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> cl_in \\<E> X", "using \\<E>.cl_subset[OF assms]"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>.cl X\n\ngoal (1 subgoal):\n 1. X \\<subseteq> cl_in \\<E> X", "unfolding cl_in_def"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>.cl X\n\ngoal (1 subgoal):\n 1. X \\<subseteq> \\<E>.cl X", "."], ["", "lemma cl_in_mono:\n  assumes \"X \\<subseteq> Y\"\n  assumes \"Y \\<subseteq> \\<E>\"\n  shows \"cl_in \\<E> X \\<subseteq> cl_in \\<E> Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl_in \\<E> X \\<subseteq> cl_in \\<E> Y", "using \\<E>.cl_mono[OF assms]"], ["proof (prove)\nusing this:\n  \\<E>.cl X \\<subseteq> \\<E>.cl Y\n\ngoal (1 subgoal):\n 1. cl_in \\<E> X \\<subseteq> cl_in \\<E> Y", "unfolding cl_in_def"], ["proof (prove)\nusing this:\n  \\<E>.cl X \\<subseteq> \\<E>.cl Y\n\ngoal (1 subgoal):\n 1. \\<E>.cl X \\<subseteq> \\<E>.cl Y", "."], ["", "lemma cl_in_insert_absorb:\n  assumes \"X \\<subseteq> \\<E>\"\n  assumes \"x \\<in> cl_in \\<E> X\"\n  shows \"cl_in \\<E> (insert x X) = cl_in \\<E> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl_in \\<E> (insert x X) = cl_in \\<E> X", "using assms \\<E>.cl_insert_absorb"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>\n  x \\<in> cl_in \\<E> X\n  \\<lbrakk>?X \\<subseteq> \\<E>; ?x \\<in> \\<E>.cl ?X\\<rbrakk>\n  \\<Longrightarrow> \\<E>.cl (insert ?x ?X) = \\<E>.cl ?X\n\ngoal (1 subgoal):\n 1. cl_in \\<E> (insert x X) = cl_in \\<E> X", "unfolding cl_in_def"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>\n  x \\<in> \\<E>.cl X\n  \\<lbrakk>?X \\<subseteq> \\<E>; ?x \\<in> \\<E>.cl ?X\\<rbrakk>\n  \\<Longrightarrow> \\<E>.cl (insert ?x ?X) = \\<E>.cl ?X\n\ngoal (1 subgoal):\n 1. \\<E>.cl (insert x X) = \\<E>.cl X", "by auto"], ["", "lemma cl_in_augment:\n  assumes \"X \\<subseteq> \\<E>\"\n  assumes \"x \\<in> \\<E>\"\n  assumes \"y \\<in> cl_in \\<E> (insert x X) - cl_in \\<E> X\"\n  shows \"x \\<in> cl_in \\<E> (insert y X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> cl_in \\<E> (insert y X)", "using assms \\<E>.cl_augment"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>\n  x \\<in> \\<E>\n  y \\<in> cl_in \\<E> (insert x X) - cl_in \\<E> X\n  \\<lbrakk>?X \\<subseteq> \\<E>; ?x \\<in> \\<E>;\n   ?y \\<in> \\<E>.cl (insert ?x ?X) - \\<E>.cl ?X\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> \\<E>.cl (insert ?y ?X)\n\ngoal (1 subgoal):\n 1. x \\<in> cl_in \\<E> (insert y X)", "unfolding cl_in_def"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>\n  x \\<in> \\<E>\n  y \\<in> \\<E>.cl (insert x X) - \\<E>.cl X\n  \\<lbrakk>?X \\<subseteq> \\<E>; ?x \\<in> \\<E>;\n   ?y \\<in> \\<E>.cl (insert ?x ?X) - \\<E>.cl ?X\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> \\<E>.cl (insert ?y ?X)\n\ngoal (1 subgoal):\n 1. x \\<in> \\<E>.cl (insert y X)", "by auto"], ["", "lemmas cl_inI_insert = cl_inI_aux[OF \\<E>.clI_insert]"], ["", "end"], ["", "lemma cl_in_subI:\n  assumes \"X \\<subseteq> \\<E>'\" \"\\<E>' \\<subseteq> \\<E>\" \"\\<E> \\<subseteq> carrier\"\n  shows \"cl_in \\<E>' X \\<subseteq> cl_in \\<E> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cl_in \\<E>' X \\<subseteq> cl_in \\<E> X", "proof (safe, goal_cases elem)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> cl_in \\<E> X", "case (elem x)"], ["proof (state)\nthis:\n  x \\<in> cl_in \\<E>' X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> cl_in \\<E> X", "then"], ["proof (chain)\npicking this:\n  x \\<in> cl_in \\<E>' X", "have \"x \\<in> \\<E>'\" \"rank_of (insert x X) = rank_of X\""], ["proof (prove)\nusing this:\n  x \\<in> cl_in \\<E>' X\n\ngoal (1 subgoal):\n 1. x \\<in> \\<E>' &&& rank_of (insert x X) = rank_of X", "using assms cl_inD[where \\<E> = \\<E>' and X = X]"], ["proof (prove)\nusing this:\n  x \\<in> cl_in \\<E>' X\n  X \\<subseteq> \\<E>'\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n  \\<lbrakk>\\<E>' \\<subseteq> carrier; X \\<subseteq> \\<E>';\n   ?x \\<in> cl_in \\<E>' X\\<rbrakk>\n  \\<Longrightarrow> rank_of (insert ?x X) = rank_of X\n  \\<E>' \\<subseteq> carrier \\<Longrightarrow>\n  cl_in \\<E>' X \\<subseteq> \\<E>'\n\ngoal (1 subgoal):\n 1. x \\<in> \\<E>' &&& rank_of (insert x X) = rank_of X", "by auto"], ["proof (state)\nthis:\n  x \\<in> \\<E>'\n  rank_of (insert x X) = rank_of X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> cl_in \\<E> X", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<E>'\n  rank_of (insert x X) = rank_of X", "show \"x \\<in> cl_in \\<E> X\""], ["proof (prove)\nusing this:\n  x \\<in> \\<E>'\n  rank_of (insert x X) = rank_of X\n\ngoal (1 subgoal):\n 1. x \\<in> cl_in \\<E> X", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> \\<E>'\n  rank_of (insert x X) = rank_of X\n  X \\<subseteq> \\<E>'\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. x \\<in> cl_in \\<E> X", "by (auto intro: cl_inI)"], ["proof (state)\nthis:\n  x \\<in> cl_in \\<E> X\n\ngoal:\nNo subgoals!", "qed"], ["", "context\n  fixes \\<E>\n  assumes *: \"\\<E> \\<subseteq> carrier\"\nbegin"], ["", "interpretation \\<E>: matroid \\<E> \"indep_in \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matroid \\<E> (indep_in \\<E>)", "using *"], ["proof (prove)\nusing this:\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. matroid \\<E> (indep_in \\<E>)", "by auto"], ["", "lemma cl_in_sub_cong:\n  assumes \"X \\<subseteq> \\<E>'\" \"\\<E>' \\<subseteq> \\<E>\"\n  shows \"\\<E>.cl_in \\<E>' X = cl_in \\<E>' X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.cl_in \\<E>' X = cl_in \\<E>' X", "proof (safe, goal_cases LTR RTL)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<E>.cl_in \\<E>' X \\<Longrightarrow> x \\<in> cl_in \\<E>' X\n 2. \\<And>x.\n       x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> \\<E>.cl_in \\<E>' X", "case (LTR x)"], ["proof (state)\nthis:\n  x \\<in> \\<E>.cl_in \\<E>' X\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<E>.cl_in \\<E>' X \\<Longrightarrow> x \\<in> cl_in \\<E>' X\n 2. \\<And>x.\n       x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> \\<E>.cl_in \\<E>' X", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<E>.cl_in \\<E>' X", "have \"x \\<in> \\<E>'\" \"\\<E>.rank_of (insert x X) = \\<E>.rank_of X\""], ["proof (prove)\nusing this:\n  x \\<in> \\<E>.cl_in \\<E>' X\n\ngoal (1 subgoal):\n 1. x \\<in> \\<E>' &&& \\<E>.rank_of (insert x X) = \\<E>.rank_of X", "using assms\n      \\<E>.cl_in_rank_of[where \\<E> = \\<E>' and X = X and x = x]\n      \\<E>.cl_in_subset_carrier[where \\<E> = \\<E>']"], ["proof (prove)\nusing this:\n  x \\<in> \\<E>.cl_in \\<E>' X\n  X \\<subseteq> \\<E>'\n  \\<E>' \\<subseteq> \\<E>\n  \\<lbrakk>\\<E>' \\<subseteq> \\<E>; X \\<subseteq> \\<E>';\n   x \\<in> \\<E>.cl_in \\<E>' X\\<rbrakk>\n  \\<Longrightarrow> \\<E>.rank_of (insert x X) = \\<E>.rank_of X\n  \\<E>' \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.cl_in \\<E>' ?X \\<subseteq> \\<E>'\n\ngoal (1 subgoal):\n 1. x \\<in> \\<E>' &&& \\<E>.rank_of (insert x X) = \\<E>.rank_of X", "by auto"], ["proof (state)\nthis:\n  x \\<in> \\<E>'\n  \\<E>.rank_of (insert x X) = \\<E>.rank_of X\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<E>.cl_in \\<E>' X \\<Longrightarrow> x \\<in> cl_in \\<E>' X\n 2. \\<And>x.\n       x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> \\<E>.cl_in \\<E>' X", "moreover"], ["proof (state)\nthis:\n  x \\<in> \\<E>'\n  \\<E>.rank_of (insert x X) = \\<E>.rank_of X\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<E>.cl_in \\<E>' X \\<Longrightarrow> x \\<in> cl_in \\<E>' X\n 2. \\<And>x.\n       x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> \\<E>.cl_in \\<E>' X", "have \"\\<E>.rank_of X = rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.rank_of X = rank_of X", "using assms rank_of_sub_cong[OF *]"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>'\n  \\<E>' \\<subseteq> \\<E>\n  ?\\<E>' \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.rank_of ?\\<E>' = rank_of ?\\<E>'\n\ngoal (1 subgoal):\n 1. \\<E>.rank_of X = rank_of X", "by auto"], ["proof (state)\nthis:\n  \\<E>.rank_of X = rank_of X\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<E>.cl_in \\<E>' X \\<Longrightarrow> x \\<in> cl_in \\<E>' X\n 2. \\<And>x.\n       x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> \\<E>.cl_in \\<E>' X", "moreover"], ["proof (state)\nthis:\n  \\<E>.rank_of X = rank_of X\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<E>.cl_in \\<E>' X \\<Longrightarrow> x \\<in> cl_in \\<E>' X\n 2. \\<And>x.\n       x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> \\<E>.cl_in \\<E>' X", "have \"\\<E>.rank_of (insert x X) = rank_of (insert x X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.rank_of (insert x X) = rank_of (insert x X)", "using assms rank_of_sub_cong[OF *, of \"insert x X\"] \\<open>x \\<in> \\<E>'\\<close>"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>'\n  \\<E>' \\<subseteq> \\<E>\n  insert x X \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n  x \\<in> \\<E>'\n\ngoal (1 subgoal):\n 1. \\<E>.rank_of (insert x X) = rank_of (insert x X)", "by auto"], ["proof (state)\nthis:\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<E>.cl_in \\<E>' X \\<Longrightarrow> x \\<in> cl_in \\<E>' X\n 2. \\<And>x.\n       x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> \\<E>.cl_in \\<E>' X", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> \\<E>'\n  \\<E>.rank_of (insert x X) = \\<E>.rank_of X\n  \\<E>.rank_of X = rank_of X\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> \\<E>'\n  \\<E>.rank_of (insert x X) = \\<E>.rank_of X\n  \\<E>.rank_of X = rank_of X\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n\ngoal (1 subgoal):\n 1. x \\<in> cl_in \\<E>' X", "using assms *"], ["proof (prove)\nusing this:\n  x \\<in> \\<E>'\n  \\<E>.rank_of (insert x X) = \\<E>.rank_of X\n  \\<E>.rank_of X = rank_of X\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n  X \\<subseteq> \\<E>'\n  \\<E>' \\<subseteq> \\<E>\n  \\<E> \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. x \\<in> cl_in \\<E>' X", "by (auto intro: cl_inI)"], ["proof (state)\nthis:\n  x \\<in> cl_in \\<E>' X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> \\<E>.cl_in \\<E>' X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> \\<E>.cl_in \\<E>' X", "case (RTL x)"], ["proof (state)\nthis:\n  x \\<in> cl_in \\<E>' X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> \\<E>.cl_in \\<E>' X", "then"], ["proof (chain)\npicking this:\n  x \\<in> cl_in \\<E>' X", "have \"x \\<in> \\<E>'\" \"rank_of (insert x X) = rank_of X\""], ["proof (prove)\nusing this:\n  x \\<in> cl_in \\<E>' X\n\ngoal (1 subgoal):\n 1. x \\<in> \\<E>' &&& rank_of (insert x X) = rank_of X", "using * assms cl_inD[where \\<E> = \\<E>' and X = X]"], ["proof (prove)\nusing this:\n  x \\<in> cl_in \\<E>' X\n  \\<E> \\<subseteq> carrier\n  X \\<subseteq> \\<E>'\n  \\<E>' \\<subseteq> \\<E>\n  \\<lbrakk>\\<E>' \\<subseteq> carrier; X \\<subseteq> \\<E>';\n   ?x \\<in> cl_in \\<E>' X\\<rbrakk>\n  \\<Longrightarrow> rank_of (insert ?x X) = rank_of X\n  \\<E>' \\<subseteq> carrier \\<Longrightarrow>\n  cl_in \\<E>' X \\<subseteq> \\<E>'\n\ngoal (1 subgoal):\n 1. x \\<in> \\<E>' &&& rank_of (insert x X) = rank_of X", "by auto"], ["proof (state)\nthis:\n  x \\<in> \\<E>'\n  rank_of (insert x X) = rank_of X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> \\<E>.cl_in \\<E>' X", "moreover"], ["proof (state)\nthis:\n  x \\<in> \\<E>'\n  rank_of (insert x X) = rank_of X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> \\<E>.cl_in \\<E>' X", "have \"\\<E>.rank_of X = rank_of X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.rank_of X = rank_of X", "using assms rank_of_sub_cong[OF *]"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>'\n  \\<E>' \\<subseteq> \\<E>\n  ?\\<E>' \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.rank_of ?\\<E>' = rank_of ?\\<E>'\n\ngoal (1 subgoal):\n 1. \\<E>.rank_of X = rank_of X", "by auto"], ["proof (state)\nthis:\n  \\<E>.rank_of X = rank_of X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> \\<E>.cl_in \\<E>' X", "moreover"], ["proof (state)\nthis:\n  \\<E>.rank_of X = rank_of X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> \\<E>.cl_in \\<E>' X", "have \"\\<E>.rank_of (insert x X) = rank_of (insert x X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<E>.rank_of (insert x X) = rank_of (insert x X)", "using assms rank_of_sub_cong[OF *, of \"insert x X\"] \\<open>x \\<in> \\<E>'\\<close>"], ["proof (prove)\nusing this:\n  X \\<subseteq> \\<E>'\n  \\<E>' \\<subseteq> \\<E>\n  insert x X \\<subseteq> \\<E> \\<Longrightarrow>\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n  x \\<in> \\<E>'\n\ngoal (1 subgoal):\n 1. \\<E>.rank_of (insert x X) = rank_of (insert x X)", "by auto"], ["proof (state)\nthis:\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> cl_in \\<E>' X \\<Longrightarrow> x \\<in> \\<E>.cl_in \\<E>' X", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> \\<E>'\n  rank_of (insert x X) = rank_of X\n  \\<E>.rank_of X = rank_of X\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> \\<E>'\n  rank_of (insert x X) = rank_of X\n  \\<E>.rank_of X = rank_of X\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n\ngoal (1 subgoal):\n 1. x \\<in> \\<E>.cl_in \\<E>' X", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> \\<E>'\n  rank_of (insert x X) = rank_of X\n  \\<E>.rank_of X = rank_of X\n  \\<E>.rank_of (insert x X) = rank_of (insert x X)\n  X \\<subseteq> \\<E>'\n  \\<E>' \\<subseteq> \\<E>\n\ngoal (1 subgoal):\n 1. x \\<in> \\<E>.cl_in \\<E>' X", "by (auto intro: \\<E>.cl_inI)"], ["proof (state)\nthis:\n  x \\<in> \\<E>.cl_in \\<E>' X\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"], ["", "end"]]}