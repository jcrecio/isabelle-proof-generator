{"file_name": "/home/qj213/afp-2021-10-22/thys/ConcurrentGC/concrete/Concrete.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/ConcurrentGC", "problem_names": ["lemma\n  \"gc_system_init init_state\""], "translations": [["", "lemma\n  \"gc_system_init init_state\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gc_system_init\n     (\\<lambda>p.\n         case p of\n         mutator m \\<Rightarrow>\n           lookup\n            [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n             (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n             (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n            mut_common_init_state m\n         | gc \\<Rightarrow> gc_init_state\n         | sys \\<Rightarrow>\n             mem_lock_update Map.empty\n              (undefined\n               \\<lparr>fA := initial_mark, fM := initial_mark,\n                  heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                  hs_type := ht_GetRoots\\<rparr>)\n             \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n                W := {}, ghost_honorary_grey := {},\n                ghost_hs_in_sync := \\<lambda>s. True,\n                ghost_hs_phase := hp_IdleMarkSweep\\<rparr>)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. gc_system_init\n     (\\<lambda>p.\n         case p of\n         mutator m \\<Rightarrow>\n           lookup\n            [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n             (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n             (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n            mut_common_init_state m\n         | gc \\<Rightarrow> gc_init_state\n         | sys \\<Rightarrow>\n             mem_lock_update Map.empty\n              (undefined\n               \\<lparr>fA := initial_mark, fM := initial_mark,\n                  heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                  hs_type := ht_GetRoots\\<rparr>)\n             \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n                W := {}, ghost_honorary_grey := {},\n                ghost_hs_in_sync := \\<lambda>s. True,\n                ghost_hs_phase := hp_IdleMarkSweep\\<rparr>)", "unfolding gc_system_init_def gc_initial_state_def mut_initial_state_def sys_initial_state_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (gc_fM\n      (case_process_name\n        (lookup\n          [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n           (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n           (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n          mut_common_init_state)\n        gc_init_state\n        (mem_lock_update Map.empty\n          (undefined\n           \\<lparr>fA := initial_mark, fM := initial_mark,\n              heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n              hs_type := ht_GetRoots\\<rparr>)\n         \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n            W := {}, ghost_honorary_grey := {},\n            ghost_hs_in_sync := \\<lambda>s. True,\n            ghost_hs_phase := hp_IdleMarkSweep\\<rparr>)) =\n     initial_mark \\<and>\n     gc_phase\n      (case_process_name\n        (lookup\n          [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n           (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n           (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n          mut_common_init_state)\n        gc_init_state\n        (mem_lock_update Map.empty\n          (undefined\n           \\<lparr>fA := initial_mark, fM := initial_mark,\n              heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n              hs_type := ht_GetRoots\\<rparr>)\n         \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n            W := {}, ghost_honorary_grey := {},\n            ghost_hs_in_sync := \\<lambda>s. True,\n            ghost_hs_phase := hp_IdleMarkSweep\\<rparr>)) =\n     ph_Idle \\<and>\n     gc_ghost_honorary_grey\n      (case_process_name\n        (lookup\n          [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n           (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n           (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n          mut_common_init_state)\n        gc_init_state\n        (mem_lock_update Map.empty\n          (undefined\n           \\<lparr>fA := initial_mark, fM := initial_mark,\n              heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n              hs_type := ht_GetRoots\\<rparr>)\n         \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n            W := {}, ghost_honorary_grey := {},\n            ghost_hs_in_sync := \\<lambda>s. True,\n            ghost_hs_phase := hp_IdleMarkSweep\\<rparr>)) =\n     {} \\<and>\n     gc_W\n      (case_process_name\n        (lookup\n          [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n           (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n           (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n          mut_common_init_state)\n        gc_init_state\n        (mem_lock_update Map.empty\n          (undefined\n           \\<lparr>fA := initial_mark, fM := initial_mark,\n              heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n              hs_type := ht_GetRoots\\<rparr>)\n         \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n            W := {}, ghost_honorary_grey := {},\n            ghost_hs_in_sync := \\<lambda>s. True,\n            ghost_hs_phase := hp_IdleMarkSweep\\<rparr>)) =\n     {}) \\<and>\n    (\\<forall>m.\n        ghost_hs_phase\n         (case mutator m of\n          mutator x \\<Rightarrow>\n            lookup\n             [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n              (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n              (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n             mut_common_init_state x\n          | gc \\<Rightarrow> gc_init_state\n          | sys \\<Rightarrow>\n              mem_lock_update Map.empty\n               (undefined\n                \\<lparr>fA := initial_mark, fM := initial_mark,\n                   heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                   hs_type := ht_GetRoots\\<rparr>)\n              \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n                 W := {}, ghost_honorary_grey := {},\n                 ghost_hs_in_sync := \\<lambda>s. True,\n                 ghost_hs_phase := hp_IdleMarkSweep\\<rparr>) =\n        hp_IdleMarkSweep \\<and>\n        ghost_honorary_grey\n         (case mutator m of\n          mutator x \\<Rightarrow>\n            lookup\n             [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n              (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n              (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n             mut_common_init_state x\n          | gc \\<Rightarrow> gc_init_state\n          | sys \\<Rightarrow>\n              mem_lock_update Map.empty\n               (undefined\n                \\<lparr>fA := initial_mark, fM := initial_mark,\n                   heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                   hs_type := ht_GetRoots\\<rparr>)\n              \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n                 W := {}, ghost_honorary_grey := {},\n                 ghost_hs_in_sync := \\<lambda>s. True,\n                 ghost_hs_phase := hp_IdleMarkSweep\\<rparr>) =\n        {} \\<and>\n        ghost_honorary_root\n         (case mutator m of\n          mutator x \\<Rightarrow>\n            lookup\n             [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n              (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n              (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n             mut_common_init_state x\n          | gc \\<Rightarrow> gc_init_state\n          | sys \\<Rightarrow>\n              mem_lock_update Map.empty\n               (undefined\n                \\<lparr>fA := initial_mark, fM := initial_mark,\n                   heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                   hs_type := ht_GetRoots\\<rparr>)\n              \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n                 W := {}, ghost_honorary_grey := {},\n                 ghost_hs_in_sync := \\<lambda>s. True,\n                 ghost_hs_phase := hp_IdleMarkSweep\\<rparr>) =\n        {} \\<and>\n        W (case mutator m of\n           mutator x \\<Rightarrow>\n             lookup\n              [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n               (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n               (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n              mut_common_init_state x\n           | gc \\<Rightarrow> gc_init_state\n           | sys \\<Rightarrow>\n               mem_lock_update Map.empty\n                (undefined\n                 \\<lparr>fA := initial_mark, fM := initial_mark,\n                    heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                    hs_type := ht_GetRoots\\<rparr>)\n               \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                  phase := ph_Idle, W := {}, ghost_honorary_grey := {},\n                  ghost_hs_in_sync := \\<lambda>s. True,\n                  ghost_hs_phase := hp_IdleMarkSweep\\<rparr>) =\n        {}) \\<and>\n    ((\\<forall>m.\n         \\<not> sys_hs_pending m\n                 (case_process_name\n                   (lookup\n                     [(0, mut_common_init_state\n                       \\<lparr>roots := {1, 2, 3}\\<rparr>),\n                      (1, mut_common_init_state\n                       \\<lparr>roots := {3}\\<rparr>),\n                      (2, mut_common_init_state\n                       \\<lparr>roots := {2, 5}\\<rparr>)]\n                     mut_common_init_state)\n                   gc_init_state\n                   (mem_lock_update Map.empty\n                     (undefined\n                      \\<lparr>fA := initial_mark, fM := initial_mark,\n                         heap := sys_init_heap,\n                         hs_pending := \\<lambda>s. False,\n                         hs_type := ht_GetRoots\\<rparr>)\n                    \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                       phase := ph_Idle, W := {}, ghost_honorary_grey := {},\n                       ghost_hs_in_sync := \\<lambda>s. True,\n                       ghost_hs_phase := hp_IdleMarkSweep\\<rparr>)) \\<and>\n         sys_ghost_hs_in_sync m\n          (case_process_name\n            (lookup\n              [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n               (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n               (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n              mut_common_init_state)\n            gc_init_state\n            (mem_lock_update Map.empty\n              (undefined\n               \\<lparr>fA := initial_mark, fM := initial_mark,\n                  heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                  hs_type := ht_GetRoots\\<rparr>)\n             \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n                W := {}, ghost_honorary_grey := {},\n                ghost_hs_in_sync := \\<lambda>s. True,\n                ghost_hs_phase := hp_IdleMarkSweep\\<rparr>))) \\<and>\n     sys_ghost_hs_phase\n      (case_process_name\n        (lookup\n          [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n           (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n           (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n          mut_common_init_state)\n        gc_init_state\n        (mem_lock_update Map.empty\n          (undefined\n           \\<lparr>fA := initial_mark, fM := initial_mark,\n              heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n              hs_type := ht_GetRoots\\<rparr>)\n         \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n            W := {}, ghost_honorary_grey := {},\n            ghost_hs_in_sync := \\<lambda>s. True,\n            ghost_hs_phase := hp_IdleMarkSweep\\<rparr>)) =\n     hp_IdleMarkSweep \\<and>\n     sys_hs_type\n      (case_process_name\n        (lookup\n          [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n           (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n           (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n          mut_common_init_state)\n        gc_init_state\n        (mem_lock_update Map.empty\n          (undefined\n           \\<lparr>fA := initial_mark, fM := initial_mark,\n              heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n              hs_type := ht_GetRoots\\<rparr>)\n         \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n            W := {}, ghost_honorary_grey := {},\n            ghost_hs_in_sync := \\<lambda>s. True,\n            ghost_hs_phase := hp_IdleMarkSweep\\<rparr>)) =\n     ht_GetRoots \\<and>\n     obj_mark `\n     ran (sys_heap\n           (case_process_name\n             (lookup\n               [(0, mut_common_init_state\n                 \\<lparr>roots := {1, 2, 3}\\<rparr>),\n                (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n                (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n               mut_common_init_state)\n             gc_init_state\n             (mem_lock_update Map.empty\n               (undefined\n                \\<lparr>fA := initial_mark, fM := initial_mark,\n                   heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                   hs_type := ht_GetRoots\\<rparr>)\n              \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n                 W := {}, ghost_honorary_grey := {},\n                 ghost_hs_in_sync := \\<lambda>s. True,\n                 ghost_hs_phase := hp_IdleMarkSweep\\<rparr>)))\n     \\<subseteq> {initial_mark} \\<and>\n     sys_fA\n      (case_process_name\n        (lookup\n          [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n           (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n           (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n          mut_common_init_state)\n        gc_init_state\n        (mem_lock_update Map.empty\n          (undefined\n           \\<lparr>fA := initial_mark, fM := initial_mark,\n              heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n              hs_type := ht_GetRoots\\<rparr>)\n         \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n            W := {}, ghost_honorary_grey := {},\n            ghost_hs_in_sync := \\<lambda>s. True,\n            ghost_hs_phase := hp_IdleMarkSweep\\<rparr>)) =\n     initial_mark \\<and>\n     sys_fM\n      (case_process_name\n        (lookup\n          [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n           (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n           (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n          mut_common_init_state)\n        gc_init_state\n        (mem_lock_update Map.empty\n          (undefined\n           \\<lparr>fA := initial_mark, fM := initial_mark,\n              heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n              hs_type := ht_GetRoots\\<rparr>)\n         \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n            W := {}, ghost_honorary_grey := {},\n            ghost_hs_in_sync := \\<lambda>s. True,\n            ghost_hs_phase := hp_IdleMarkSweep\\<rparr>)) =\n     initial_mark \\<and>\n     sys_phase\n      (case_process_name\n        (lookup\n          [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n           (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n           (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n          mut_common_init_state)\n        gc_init_state\n        (mem_lock_update Map.empty\n          (undefined\n           \\<lparr>fA := initial_mark, fM := initial_mark,\n              heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n              hs_type := ht_GetRoots\\<rparr>)\n         \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n            W := {}, ghost_honorary_grey := {},\n            ghost_hs_in_sync := \\<lambda>s. True,\n            ghost_hs_phase := hp_IdleMarkSweep\\<rparr>)) =\n     ph_Idle \\<and>\n     sys_ghost_honorary_grey\n      (case_process_name\n        (lookup\n          [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n           (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n           (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n          mut_common_init_state)\n        gc_init_state\n        (mem_lock_update Map.empty\n          (undefined\n           \\<lparr>fA := initial_mark, fM := initial_mark,\n              heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n              hs_type := ht_GetRoots\\<rparr>)\n         \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n            W := {}, ghost_honorary_grey := {},\n            ghost_hs_in_sync := \\<lambda>s. True,\n            ghost_hs_phase := hp_IdleMarkSweep\\<rparr>)) =\n     {} \\<and>\n     sys_W\n      (case_process_name\n        (lookup\n          [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n           (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n           (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n          mut_common_init_state)\n        gc_init_state\n        (mem_lock_update Map.empty\n          (undefined\n           \\<lparr>fA := initial_mark, fM := initial_mark,\n              heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n              hs_type := ht_GetRoots\\<rparr>)\n         \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n            W := {}, ghost_honorary_grey := {},\n            ghost_hs_in_sync := \\<lambda>s. True,\n            ghost_hs_phase := hp_IdleMarkSweep\\<rparr>)) =\n     {} \\<and>\n     (\\<forall>p.\n         sys_mem_store_buffers p\n          (case_process_name\n            (lookup\n              [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n               (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n               (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n              mut_common_init_state)\n            gc_init_state\n            (mem_lock_update Map.empty\n              (undefined\n               \\<lparr>fA := initial_mark, fM := initial_mark,\n                  heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                  hs_type := ht_GetRoots\\<rparr>)\n             \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n                W := {}, ghost_honorary_grey := {},\n                ghost_hs_in_sync := \\<lambda>s. True,\n                ghost_hs_phase := hp_IdleMarkSweep\\<rparr>)) =\n         []) \\<and>\n     sys_mem_lock\n      (case_process_name\n        (lookup\n          [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n           (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n           (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n          mut_common_init_state)\n        gc_init_state\n        (mem_lock_update Map.empty\n          (undefined\n           \\<lparr>fA := initial_mark, fM := initial_mark,\n              heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n              hs_type := ht_GetRoots\\<rparr>)\n         \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n            W := {}, ghost_honorary_grey := {},\n            ghost_hs_in_sync := \\<lambda>s. True,\n            ghost_hs_phase := hp_IdleMarkSweep\\<rparr>)) =\n     None) \\<and>\n    valid_refs\n     (case_process_name\n       (lookup\n         [(0, mut_common_init_state\\<lparr>roots := {1, 2, 3}\\<rparr>),\n          (1, mut_common_init_state\\<lparr>roots := {3}\\<rparr>),\n          (2, mut_common_init_state\\<lparr>roots := {2, 5}\\<rparr>)]\n         mut_common_init_state)\n       gc_init_state\n       (mem_lock_update Map.empty\n         (undefined\n          \\<lparr>fA := initial_mark, fM := initial_mark,\n             heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n             hs_type := ht_GetRoots\\<rparr>)\n        \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n           W := {}, ghost_honorary_grey := {},\n           ghost_hs_in_sync := \\<lambda>s. True,\n           ghost_hs_phase := hp_IdleMarkSweep\\<rparr>))", "apply (clarsimp; intro conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. obj_mark ` ran sys_init_heap \\<subseteq> {initial_mark}\n 2. valid_refs\n     (case_process_name\n       (lookup\n         [(0, undefined\n           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n              ghost_honorary_grey := {}, ghost_honorary_root := {}, W := {},\n              roots := {1, 2, 3}\\<rparr>),\n          (1, undefined\n           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n              ghost_honorary_grey := {}, ghost_honorary_root := {}, W := {},\n              roots := {3}\\<rparr>),\n          (2, undefined\n           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n              ghost_honorary_grey := {}, ghost_honorary_root := {}, W := {},\n              roots := {2, 5}\\<rparr>)]\n         mut_common_init_state)\n       gc_init_state\n       (mem_lock_update Map.empty\n         (undefined\n          \\<lparr>fA := initial_mark, fM := initial_mark,\n             heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n             hs_type := ht_GetRoots\\<rparr>)\n        \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n           W := {}, ghost_honorary_grey := {},\n           ghost_hs_in_sync := \\<lambda>s. True,\n           ghost_hs_phase := hp_IdleMarkSweep\\<rparr>))", "apply (auto simp: ran_def; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. valid_refs\n     (case_process_name\n       (lookup\n         [(0, undefined\n           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n              ghost_honorary_grey := {}, ghost_honorary_root := {}, W := {},\n              roots := {1, 2, 3}\\<rparr>),\n          (1, undefined\n           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n              ghost_honorary_grey := {}, ghost_honorary_root := {}, W := {},\n              roots := {3}\\<rparr>),\n          (2, undefined\n           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n              ghost_honorary_grey := {}, ghost_honorary_root := {}, W := {},\n              roots := {2, 5}\\<rparr>)]\n         mut_common_init_state)\n       gc_init_state\n       (mem_lock_update Map.empty\n         (undefined\n          \\<lparr>fA := initial_mark, fM := initial_mark,\n             heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n             hs_type := ht_GetRoots\\<rparr>)\n        \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n           W := {}, ghost_honorary_grey := {},\n           ghost_hs_in_sync := \\<lambda>s. True,\n           ghost_hs_phase := hp_IdleMarkSweep\\<rparr>))", "unfolding valid_refs_def reaches_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (\\<exists>xa xaa.\n           xaa\n           \\<in> roots\n                  (case mutator xa of\n                   mutator x \\<Rightarrow>\n                     lookup\n                      [(0, undefined\n                        \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                           ghost_honorary_grey := {},\n                           ghost_honorary_root := {}, W := {},\n                           roots := {1, 2, 3}\\<rparr>),\n                       (1, undefined\n                        \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                           ghost_honorary_grey := {},\n                           ghost_honorary_root := {}, W := {},\n                           roots := {3}\\<rparr>),\n                       (2, undefined\n                        \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                           ghost_honorary_grey := {},\n                           ghost_honorary_root := {}, W := {},\n                           roots := {2, 5}\\<rparr>)]\n                      mut_common_init_state x\n                   | gc \\<Rightarrow> gc_init_state\n                   | sys \\<Rightarrow>\n                       mem_lock_update Map.empty\n                        (undefined\n                         \\<lparr>fA := initial_mark, fM := initial_mark,\n                            heap := sys_init_heap,\n                            hs_pending := \\<lambda>s. False,\n                            hs_type := ht_GetRoots\\<rparr>)\n                       \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                          phase := ph_Idle, W := {},\n                          ghost_honorary_grey := {},\n                          ghost_hs_in_sync := \\<lambda>s. True,\n                          ghost_hs_phase := hp_IdleMarkSweep\\<rparr>) \\<and>\n           (\\<lambda>x y.\n               (x points_to y)\n                (case_process_name\n                  (lookup\n                    [(0, undefined\n                      \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                         ghost_honorary_grey := {},\n                         ghost_honorary_root := {}, W := {},\n                         roots := {1, 2, 3}\\<rparr>),\n                     (1, undefined\n                      \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                         ghost_honorary_grey := {},\n                         ghost_honorary_root := {}, W := {},\n                         roots := {3}\\<rparr>),\n                     (2, undefined\n                      \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                         ghost_honorary_grey := {},\n                         ghost_honorary_root := {}, W := {},\n                         roots := {2, 5}\\<rparr>)]\n                    mut_common_init_state)\n                  gc_init_state\n                  (mem_lock_update Map.empty\n                    (undefined\n                     \\<lparr>fA := initial_mark, fM := initial_mark,\n                        heap := sys_init_heap,\n                        hs_pending := \\<lambda>s. False,\n                        hs_type := ht_GetRoots\\<rparr>)\n                   \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                      phase := ph_Idle, W := {}, ghost_honorary_grey := {},\n                      ghost_hs_in_sync := \\<lambda>s. True,\n                      ghost_hs_phase :=\n                        hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n            xaa x) \\<longrightarrow>\n       obj_at (\\<lambda>s. True) x\n        (case_process_name\n          (lookup\n            [(0, undefined\n              \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                 ghost_honorary_grey := {}, ghost_honorary_root := {},\n                 W := {}, roots := {1, 2, 3}\\<rparr>),\n             (1, undefined\n              \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                 ghost_honorary_grey := {}, ghost_honorary_root := {},\n                 W := {}, roots := {3}\\<rparr>),\n             (2, undefined\n              \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                 ghost_honorary_grey := {}, ghost_honorary_root := {},\n                 W := {}, roots := {2, 5}\\<rparr>)]\n            mut_common_init_state)\n          gc_init_state\n          (mem_lock_update Map.empty\n            (undefined\n             \\<lparr>fA := initial_mark, fM := initial_mark,\n                heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                hs_type := ht_GetRoots\\<rparr>)\n           \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n              W := {}, ghost_honorary_grey := {},\n              ghost_hs_in_sync := \\<lambda>s. True,\n              ghost_hs_phase := hp_IdleMarkSweep\\<rparr>))", "apply auto"], ["proof (prove)\ngoal (25 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>(\\<lambda>x y.\n                    (x points_to y)\n                     (case_process_name\n                       (lookup\n                         [(0, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {1, 2, 3}\\<rparr>),\n                          (1, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {3}\\<rparr>),\n                          (2, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {2, 5}\\<rparr>)]\n                         mut_common_init_state)\n                       gc_init_state\n                       (mem_lock_update Map.empty\n                         (undefined\n                          \\<lparr>fA := initial_mark, fM := initial_mark,\n                             heap := sys_init_heap,\n                             hs_pending := \\<lambda>s. False,\n                             hs_type := ht_GetRoots\\<rparr>)\n                        \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                           phase := ph_Idle, W := {},\n                           ghost_honorary_grey := {},\n                           ghost_hs_in_sync := \\<lambda>s. True,\n                           ghost_hs_phase :=\n                             hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n                 3 x;\n        \\<not> obj_at (\\<lambda>s. True) x\n                (case_process_name\n                  (lookup\n                    [(0, undefined\n                      \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                         ghost_honorary_grey := {},\n                         ghost_honorary_root := {}, W := {},\n                         roots := {1, 2, 3}\\<rparr>),\n                     (1, undefined\n                      \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                         ghost_honorary_grey := {},\n                         ghost_honorary_root := {}, W := {},\n                         roots := {3}\\<rparr>),\n                     (2, undefined\n                      \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                         ghost_honorary_grey := {},\n                         ghost_honorary_root := {}, W := {},\n                         roots := {2, 5}\\<rparr>)]\n                    mut_common_init_state)\n                  gc_init_state\n                  (mem_lock_update Map.empty\n                    (undefined\n                     \\<lparr>fA := initial_mark, fM := initial_mark,\n                        heap := sys_init_heap,\n                        hs_pending := \\<lambda>s. False,\n                        hs_type := ht_GetRoots\\<rparr>)\n                   \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                      phase := ph_Idle, W := {}, ghost_honorary_grey := {},\n                      ghost_hs_in_sync := \\<lambda>s. True,\n                      ghost_hs_phase := hp_IdleMarkSweep\\<rparr>))\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       \\<lbrakk>(\\<lambda>x y.\n                    (x points_to y)\n                     (case_process_name\n                       (lookup\n                         [(0, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {1, 2, 3}\\<rparr>),\n                          (1, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {3}\\<rparr>),\n                          (2, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {2, 5}\\<rparr>)]\n                         mut_common_init_state)\n                       gc_init_state\n                       (mem_lock_update Map.empty\n                         (undefined\n                          \\<lparr>fA := initial_mark, fM := initial_mark,\n                             heap := sys_init_heap,\n                             hs_pending := \\<lambda>s. False,\n                             hs_type := ht_GetRoots\\<rparr>)\n                        \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                           phase := ph_Idle, W := {},\n                           ghost_honorary_grey := {},\n                           ghost_hs_in_sync := \\<lambda>s. True,\n                           ghost_hs_phase :=\n                             hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n                 1 x;\n        \\<not> obj_at (\\<lambda>s. True) x\n                (case_process_name\n                  (lookup\n                    [(0, undefined\n                      \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                         ghost_honorary_grey := {},\n                         ghost_honorary_root := {}, W := {},\n                         roots := {1, 2, 3}\\<rparr>),\n                     (1, undefined\n                      \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                         ghost_honorary_grey := {},\n                         ghost_honorary_root := {}, W := {},\n                         roots := {3}\\<rparr>),\n                     (2, undefined\n                      \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                         ghost_honorary_grey := {},\n                         ghost_honorary_root := {}, W := {},\n                         roots := {2, 5}\\<rparr>)]\n                    mut_common_init_state)\n                  gc_init_state\n                  (mem_lock_update Map.empty\n                    (undefined\n                     \\<lparr>fA := initial_mark, fM := initial_mark,\n                        heap := sys_init_heap,\n                        hs_pending := \\<lambda>s. False,\n                        hs_type := ht_GetRoots\\<rparr>)\n                   \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                      phase := ph_Idle, W := {}, ghost_honorary_grey := {},\n                      ghost_hs_in_sync := \\<lambda>s. True,\n                      ghost_hs_phase := hp_IdleMarkSweep\\<rparr>))\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x.\n       (\\<lambda>x y.\n           (x points_to y)\n            (case_process_name\n              (lookup\n                [(0, undefined\n                  \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                     ghost_honorary_grey := {}, ghost_honorary_root := {},\n                     W := {}, roots := {1, 2, 3}\\<rparr>),\n                 (1, undefined\n                  \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                     ghost_honorary_grey := {}, ghost_honorary_root := {},\n                     W := {}, roots := {3}\\<rparr>),\n                 (2, undefined\n                  \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                     ghost_honorary_grey := {}, ghost_honorary_root := {},\n                     W := {}, roots := {2, 5}\\<rparr>)]\n                mut_common_init_state)\n              gc_init_state\n              (mem_lock_update Map.empty\n                (undefined\n                 \\<lparr>fA := initial_mark, fM := initial_mark,\n                    heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                    hs_type := ht_GetRoots\\<rparr>)\n               \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                  phase := ph_Idle, W := {}, ghost_honorary_grey := {},\n                  ghost_hs_in_sync := \\<lambda>s. True,\n                  ghost_hs_phase :=\n                    hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n        1 x \\<Longrightarrow>\n       obj_at (\\<lambda>s. True) x\n        (case_process_name\n          (lookup\n            [(0, undefined\n              \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                 ghost_honorary_grey := {}, ghost_honorary_root := {},\n                 W := {}, roots := {1, 2, 3}\\<rparr>),\n             (1, undefined\n              \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                 ghost_honorary_grey := {}, ghost_honorary_root := {},\n                 W := {}, roots := {3}\\<rparr>),\n             (2, undefined\n              \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                 ghost_honorary_grey := {}, ghost_honorary_root := {},\n                 W := {}, roots := {2, 5}\\<rparr>)]\n            mut_common_init_state)\n          gc_init_state\n          (mem_lock_update Map.empty\n            (undefined\n             \\<lparr>fA := initial_mark, fM := initial_mark,\n                heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                hs_type := ht_GetRoots\\<rparr>)\n           \\<lparr>mem_store_buffers := \\<lambda>s. [], phase := ph_Idle,\n              W := {}, ghost_honorary_grey := {},\n              ghost_hs_in_sync := \\<lambda>s. True,\n              ghost_hs_phase := hp_IdleMarkSweep\\<rparr>))\n 4. \\<And>x.\n       \\<lbrakk>(\\<lambda>x y.\n                    (x points_to y)\n                     (case_process_name\n                       (lookup\n                         [(0, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {1, 2, 3}\\<rparr>),\n                          (1, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {3}\\<rparr>),\n                          (2, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {2, 5}\\<rparr>)]\n                         mut_common_init_state)\n                       gc_init_state\n                       (mem_lock_update Map.empty\n                         (undefined\n                          \\<lparr>fA := initial_mark, fM := initial_mark,\n                             heap := sys_init_heap,\n                             hs_pending := \\<lambda>s. False,\n                             hs_type := ht_GetRoots\\<rparr>)\n                        \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                           phase := ph_Idle, W := {},\n                           ghost_honorary_grey := {},\n                           ghost_hs_in_sync := \\<lambda>s. True,\n                           ghost_hs_phase :=\n                             hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n                 1 x;\n        (\\<lambda>x y.\n            (x points_to y)\n             (case_process_name\n               (lookup\n                 [(0, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {1, 2, 3}\\<rparr>),\n                  (1, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {3}\\<rparr>),\n                  (2, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {2, 5}\\<rparr>)]\n                 mut_common_init_state)\n               gc_init_state\n               (mem_lock_update Map.empty\n                 (undefined\n                  \\<lparr>fA := initial_mark, fM := initial_mark,\n                     heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                     hs_type := ht_GetRoots\\<rparr>)\n                \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                   phase := ph_Idle, W := {}, ghost_honorary_grey := {},\n                   ghost_hs_in_sync := \\<lambda>s. True,\n                   ghost_hs_phase :=\n                     hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n         2 x\\<rbrakk>\n       \\<Longrightarrow> obj_at (\\<lambda>s. True) x\n                          (case_process_name\n                            (lookup\n                              [(0, undefined\n                                \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                                   ghost_honorary_grey := {},\n                                   ghost_honorary_root := {}, W := {},\n                                   roots := {1, 2, 3}\\<rparr>),\n                               (1, undefined\n                                \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                                   ghost_honorary_grey := {},\n                                   ghost_honorary_root := {}, W := {},\n                                   roots := {3}\\<rparr>),\n                               (2, undefined\n                                \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                                   ghost_honorary_grey := {},\n                                   ghost_honorary_root := {}, W := {},\n                                   roots := {2, 5}\\<rparr>)]\n                              mut_common_init_state)\n                            gc_init_state\n                            (mem_lock_update Map.empty\n                              (undefined\n                               \\<lparr>fA := initial_mark,\n                                  fM := initial_mark, heap := sys_init_heap,\n                                  hs_pending := \\<lambda>s. False,\n                                  hs_type := ht_GetRoots\\<rparr>)\n                             \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                                phase := ph_Idle, W := {},\n                                ghost_honorary_grey := {},\n                                ghost_hs_in_sync := \\<lambda>s. True,\n                                ghost_hs_phase := hp_IdleMarkSweep\\<rparr>))\n 5. \\<And>x.\n       \\<lbrakk>(\\<lambda>x y.\n                    (x points_to y)\n                     (case_process_name\n                       (lookup\n                         [(0, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {1, 2, 3}\\<rparr>),\n                          (1, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {3}\\<rparr>),\n                          (2, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {2, 5}\\<rparr>)]\n                         mut_common_init_state)\n                       gc_init_state\n                       (mem_lock_update Map.empty\n                         (undefined\n                          \\<lparr>fA := initial_mark, fM := initial_mark,\n                             heap := sys_init_heap,\n                             hs_pending := \\<lambda>s. False,\n                             hs_type := ht_GetRoots\\<rparr>)\n                        \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                           phase := ph_Idle, W := {},\n                           ghost_honorary_grey := {},\n                           ghost_hs_in_sync := \\<lambda>s. True,\n                           ghost_hs_phase :=\n                             hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n                 1 x;\n        (\\<lambda>x y.\n            (x points_to y)\n             (case_process_name\n               (lookup\n                 [(0, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {1, 2, 3}\\<rparr>),\n                  (1, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {3}\\<rparr>),\n                  (2, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {2, 5}\\<rparr>)]\n                 mut_common_init_state)\n               gc_init_state\n               (mem_lock_update Map.empty\n                 (undefined\n                  \\<lparr>fA := initial_mark, fM := initial_mark,\n                     heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                     hs_type := ht_GetRoots\\<rparr>)\n                \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                   phase := ph_Idle, W := {}, ghost_honorary_grey := {},\n                   ghost_hs_in_sync := \\<lambda>s. True,\n                   ghost_hs_phase :=\n                     hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n         3 x\\<rbrakk>\n       \\<Longrightarrow> obj_at (\\<lambda>s. True) x\n                          (case_process_name\n                            (lookup\n                              [(0, undefined\n                                \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                                   ghost_honorary_grey := {},\n                                   ghost_honorary_root := {}, W := {},\n                                   roots := {1, 2, 3}\\<rparr>),\n                               (1, undefined\n                                \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                                   ghost_honorary_grey := {},\n                                   ghost_honorary_root := {}, W := {},\n                                   roots := {3}\\<rparr>),\n                               (2, undefined\n                                \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                                   ghost_honorary_grey := {},\n                                   ghost_honorary_root := {}, W := {},\n                                   roots := {2, 5}\\<rparr>)]\n                              mut_common_init_state)\n                            gc_init_state\n                            (mem_lock_update Map.empty\n                              (undefined\n                               \\<lparr>fA := initial_mark,\n                                  fM := initial_mark, heap := sys_init_heap,\n                                  hs_pending := \\<lambda>s. False,\n                                  hs_type := ht_GetRoots\\<rparr>)\n                             \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                                phase := ph_Idle, W := {},\n                                ghost_honorary_grey := {},\n                                ghost_hs_in_sync := \\<lambda>s. True,\n                                ghost_hs_phase := hp_IdleMarkSweep\\<rparr>))\n 6. \\<And>x.\n       \\<lbrakk>(\\<lambda>x y.\n                    (x points_to y)\n                     (case_process_name\n                       (lookup\n                         [(0, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {1, 2, 3}\\<rparr>),\n                          (1, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {3}\\<rparr>),\n                          (2, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {2, 5}\\<rparr>)]\n                         mut_common_init_state)\n                       gc_init_state\n                       (mem_lock_update Map.empty\n                         (undefined\n                          \\<lparr>fA := initial_mark, fM := initial_mark,\n                             heap := sys_init_heap,\n                             hs_pending := \\<lambda>s. False,\n                             hs_type := ht_GetRoots\\<rparr>)\n                        \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                           phase := ph_Idle, W := {},\n                           ghost_honorary_grey := {},\n                           ghost_hs_in_sync := \\<lambda>s. True,\n                           ghost_hs_phase :=\n                             hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n                 1 x;\n        (\\<lambda>x y.\n            (x points_to y)\n             (case_process_name\n               (lookup\n                 [(0, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {1, 2, 3}\\<rparr>),\n                  (1, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {3}\\<rparr>),\n                  (2, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {2, 5}\\<rparr>)]\n                 mut_common_init_state)\n               gc_init_state\n               (mem_lock_update Map.empty\n                 (undefined\n                  \\<lparr>fA := initial_mark, fM := initial_mark,\n                     heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                     hs_type := ht_GetRoots\\<rparr>)\n                \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                   phase := ph_Idle, W := {}, ghost_honorary_grey := {},\n                   ghost_hs_in_sync := \\<lambda>s. True,\n                   ghost_hs_phase :=\n                     hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n         3 x;\n        \\<not> obj_at (\\<lambda>s. True) x\n                (case_process_name\n                  (lookup\n                    [(0, undefined\n                      \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                         ghost_honorary_grey := {},\n                         ghost_honorary_root := {}, W := {},\n                         roots := {1, 2, 3}\\<rparr>),\n                     (1, undefined\n                      \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                         ghost_honorary_grey := {},\n                         ghost_honorary_root := {}, W := {},\n                         roots := {3}\\<rparr>),\n                     (2, undefined\n                      \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                         ghost_honorary_grey := {},\n                         ghost_honorary_root := {}, W := {},\n                         roots := {2, 5}\\<rparr>)]\n                    mut_common_init_state)\n                  gc_init_state\n                  (mem_lock_update Map.empty\n                    (undefined\n                     \\<lparr>fA := initial_mark, fM := initial_mark,\n                        heap := sys_init_heap,\n                        hs_pending := \\<lambda>s. False,\n                        hs_type := ht_GetRoots\\<rparr>)\n                   \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                      phase := ph_Idle, W := {}, ghost_honorary_grey := {},\n                      ghost_hs_in_sync := \\<lambda>s. True,\n                      ghost_hs_phase := hp_IdleMarkSweep\\<rparr>))\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x.\n       \\<lbrakk>(\\<lambda>x y.\n                    (x points_to y)\n                     (case_process_name\n                       (lookup\n                         [(0, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {1, 2, 3}\\<rparr>),\n                          (1, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {3}\\<rparr>),\n                          (2, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {2, 5}\\<rparr>)]\n                         mut_common_init_state)\n                       gc_init_state\n                       (mem_lock_update Map.empty\n                         (undefined\n                          \\<lparr>fA := initial_mark, fM := initial_mark,\n                             heap := sys_init_heap,\n                             hs_pending := \\<lambda>s. False,\n                             hs_type := ht_GetRoots\\<rparr>)\n                        \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                           phase := ph_Idle, W := {},\n                           ghost_honorary_grey := {},\n                           ghost_hs_in_sync := \\<lambda>s. True,\n                           ghost_hs_phase :=\n                             hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n                 3 x;\n        (\\<lambda>x y.\n            (x points_to y)\n             (case_process_name\n               (lookup\n                 [(0, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {1, 2, 3}\\<rparr>),\n                  (1, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {3}\\<rparr>),\n                  (2, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {2, 5}\\<rparr>)]\n                 mut_common_init_state)\n               gc_init_state\n               (mem_lock_update Map.empty\n                 (undefined\n                  \\<lparr>fA := initial_mark, fM := initial_mark,\n                     heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                     hs_type := ht_GetRoots\\<rparr>)\n                \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                   phase := ph_Idle, W := {}, ghost_honorary_grey := {},\n                   ghost_hs_in_sync := \\<lambda>s. True,\n                   ghost_hs_phase :=\n                     hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n         1 x\\<rbrakk>\n       \\<Longrightarrow> obj_at (\\<lambda>s. True) x\n                          (case_process_name\n                            (lookup\n                              [(0, undefined\n                                \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                                   ghost_honorary_grey := {},\n                                   ghost_honorary_root := {}, W := {},\n                                   roots := {1, 2, 3}\\<rparr>),\n                               (1, undefined\n                                \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                                   ghost_honorary_grey := {},\n                                   ghost_honorary_root := {}, W := {},\n                                   roots := {3}\\<rparr>),\n                               (2, undefined\n                                \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                                   ghost_honorary_grey := {},\n                                   ghost_honorary_root := {}, W := {},\n                                   roots := {2, 5}\\<rparr>)]\n                              mut_common_init_state)\n                            gc_init_state\n                            (mem_lock_update Map.empty\n                              (undefined\n                               \\<lparr>fA := initial_mark,\n                                  fM := initial_mark, heap := sys_init_heap,\n                                  hs_pending := \\<lambda>s. False,\n                                  hs_type := ht_GetRoots\\<rparr>)\n                             \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                                phase := ph_Idle, W := {},\n                                ghost_honorary_grey := {},\n                                ghost_hs_in_sync := \\<lambda>s. True,\n                                ghost_hs_phase := hp_IdleMarkSweep\\<rparr>))\n 8. \\<And>x.\n       \\<lbrakk>(\\<lambda>x y.\n                    (x points_to y)\n                     (case_process_name\n                       (lookup\n                         [(0, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {1, 2, 3}\\<rparr>),\n                          (1, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {3}\\<rparr>),\n                          (2, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {2, 5}\\<rparr>)]\n                         mut_common_init_state)\n                       gc_init_state\n                       (mem_lock_update Map.empty\n                         (undefined\n                          \\<lparr>fA := initial_mark, fM := initial_mark,\n                             heap := sys_init_heap,\n                             hs_pending := \\<lambda>s. False,\n                             hs_type := ht_GetRoots\\<rparr>)\n                        \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                           phase := ph_Idle, W := {},\n                           ghost_honorary_grey := {},\n                           ghost_hs_in_sync := \\<lambda>s. True,\n                           ghost_hs_phase :=\n                             hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n                 1 x;\n        (\\<lambda>x y.\n            (x points_to y)\n             (case_process_name\n               (lookup\n                 [(0, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {1, 2, 3}\\<rparr>),\n                  (1, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {3}\\<rparr>),\n                  (2, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {2, 5}\\<rparr>)]\n                 mut_common_init_state)\n               gc_init_state\n               (mem_lock_update Map.empty\n                 (undefined\n                  \\<lparr>fA := initial_mark, fM := initial_mark,\n                     heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                     hs_type := ht_GetRoots\\<rparr>)\n                \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                   phase := ph_Idle, W := {}, ghost_honorary_grey := {},\n                   ghost_hs_in_sync := \\<lambda>s. True,\n                   ghost_hs_phase :=\n                     hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n         3 x;\n        (\\<lambda>x y.\n            (x points_to y)\n             (case_process_name\n               (lookup\n                 [(0, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {1, 2, 3}\\<rparr>),\n                  (1, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {3}\\<rparr>),\n                  (2, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {2, 5}\\<rparr>)]\n                 mut_common_init_state)\n               gc_init_state\n               (mem_lock_update Map.empty\n                 (undefined\n                  \\<lparr>fA := initial_mark, fM := initial_mark,\n                     heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                     hs_type := ht_GetRoots\\<rparr>)\n                \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                   phase := ph_Idle, W := {}, ghost_honorary_grey := {},\n                   ghost_hs_in_sync := \\<lambda>s. True,\n                   ghost_hs_phase :=\n                     hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n         2 x\\<rbrakk>\n       \\<Longrightarrow> obj_at (\\<lambda>s. True) x\n                          (case_process_name\n                            (lookup\n                              [(0, undefined\n                                \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                                   ghost_honorary_grey := {},\n                                   ghost_honorary_root := {}, W := {},\n                                   roots := {1, 2, 3}\\<rparr>),\n                               (1, undefined\n                                \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                                   ghost_honorary_grey := {},\n                                   ghost_honorary_root := {}, W := {},\n                                   roots := {3}\\<rparr>),\n                               (2, undefined\n                                \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                                   ghost_honorary_grey := {},\n                                   ghost_honorary_root := {}, W := {},\n                                   roots := {2, 5}\\<rparr>)]\n                              mut_common_init_state)\n                            gc_init_state\n                            (mem_lock_update Map.empty\n                              (undefined\n                               \\<lparr>fA := initial_mark,\n                                  fM := initial_mark, heap := sys_init_heap,\n                                  hs_pending := \\<lambda>s. False,\n                                  hs_type := ht_GetRoots\\<rparr>)\n                             \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                                phase := ph_Idle, W := {},\n                                ghost_honorary_grey := {},\n                                ghost_hs_in_sync := \\<lambda>s. True,\n                                ghost_hs_phase := hp_IdleMarkSweep\\<rparr>))\n 9. \\<And>x.\n       \\<lbrakk>(\\<lambda>x y.\n                    (x points_to y)\n                     (case_process_name\n                       (lookup\n                         [(0, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {1, 2, 3}\\<rparr>),\n                          (1, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {3}\\<rparr>),\n                          (2, undefined\n                           \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                              ghost_honorary_grey := {},\n                              ghost_honorary_root := {}, W := {},\n                              roots := {2, 5}\\<rparr>)]\n                         mut_common_init_state)\n                       gc_init_state\n                       (mem_lock_update Map.empty\n                         (undefined\n                          \\<lparr>fA := initial_mark, fM := initial_mark,\n                             heap := sys_init_heap,\n                             hs_pending := \\<lambda>s. False,\n                             hs_type := ht_GetRoots\\<rparr>)\n                        \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                           phase := ph_Idle, W := {},\n                           ghost_honorary_grey := {},\n                           ghost_hs_in_sync := \\<lambda>s. True,\n                           ghost_hs_phase :=\n                             hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n                 1 x;\n        (\\<lambda>x y.\n            (x points_to y)\n             (case_process_name\n               (lookup\n                 [(0, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {1, 2, 3}\\<rparr>),\n                  (1, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {3}\\<rparr>),\n                  (2, undefined\n                   \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                      ghost_honorary_grey := {}, ghost_honorary_root := {},\n                      W := {}, roots := {2, 5}\\<rparr>)]\n                 mut_common_init_state)\n               gc_init_state\n               (mem_lock_update Map.empty\n                 (undefined\n                  \\<lparr>fA := initial_mark, fM := initial_mark,\n                     heap := sys_init_heap, hs_pending := \\<lambda>s. False,\n                     hs_type := ht_GetRoots\\<rparr>)\n                \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                   phase := ph_Idle, W := {}, ghost_honorary_grey := {},\n                   ghost_hs_in_sync := \\<lambda>s. True,\n                   ghost_hs_phase :=\n                     hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n         3 x\\<rbrakk>\n       \\<Longrightarrow> obj_at (\\<lambda>s. True) x\n                          (case_process_name\n                            (lookup\n                              [(0, undefined\n                                \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                                   ghost_honorary_grey := {},\n                                   ghost_honorary_root := {}, W := {},\n                                   roots := {1, 2, 3}\\<rparr>),\n                               (1, undefined\n                                \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                                   ghost_honorary_grey := {},\n                                   ghost_honorary_root := {}, W := {},\n                                   roots := {3}\\<rparr>),\n                               (2, undefined\n                                \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                                   ghost_honorary_grey := {},\n                                   ghost_honorary_root := {}, W := {},\n                                   roots := {2, 5}\\<rparr>)]\n                              mut_common_init_state)\n                            gc_init_state\n                            (mem_lock_update Map.empty\n                              (undefined\n                               \\<lparr>fA := initial_mark,\n                                  fM := initial_mark, heap := sys_init_heap,\n                                  hs_pending := \\<lambda>s. False,\n                                  hs_type := ht_GetRoots\\<rparr>)\n                             \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                                phase := ph_Idle, W := {},\n                                ghost_honorary_grey := {},\n                                ghost_hs_in_sync := \\<lambda>s. True,\n                                ghost_hs_phase := hp_IdleMarkSweep\\<rparr>))\n 10. \\<And>x.\n        \\<lbrakk>(\\<lambda>x y.\n                     (x points_to y)\n                      (case_process_name\n                        (lookup\n                          [(0, undefined\n                            \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                               ghost_honorary_grey := {},\n                               ghost_honorary_root := {}, W := {},\n                               roots := {1, 2, 3}\\<rparr>),\n                           (1, undefined\n                            \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                               ghost_honorary_grey := {},\n                               ghost_honorary_root := {}, W := {},\n                               roots := {3}\\<rparr>),\n                           (2, undefined\n                            \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                               ghost_honorary_grey := {},\n                               ghost_honorary_root := {}, W := {},\n                               roots := {2, 5}\\<rparr>)]\n                          mut_common_init_state)\n                        gc_init_state\n                        (mem_lock_update Map.empty\n                          (undefined\n                           \\<lparr>fA := initial_mark, fM := initial_mark,\n                              heap := sys_init_heap,\n                              hs_pending := \\<lambda>s. False,\n                              hs_type := ht_GetRoots\\<rparr>)\n                         \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                            phase := ph_Idle, W := {},\n                            ghost_honorary_grey := {},\n                            ghost_hs_in_sync := \\<lambda>s. True,\n                            ghost_hs_phase :=\n                              hp_IdleMarkSweep\\<rparr>)))\\<^sup>*\\<^sup>*\n                  2 x;\n         \\<not> obj_at (\\<lambda>s. True) x\n                 (case_process_name\n                   (lookup\n                     [(0, undefined\n                       \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                          ghost_honorary_grey := {},\n                          ghost_honorary_root := {}, W := {},\n                          roots := {1, 2, 3}\\<rparr>),\n                      (1, undefined\n                       \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                          ghost_honorary_grey := {},\n                          ghost_honorary_root := {}, W := {},\n                          roots := {3}\\<rparr>),\n                      (2, undefined\n                       \\<lparr>ghost_hs_phase := hp_IdleMarkSweep,\n                          ghost_honorary_grey := {},\n                          ghost_honorary_root := {}, W := {},\n                          roots := {2, 5}\\<rparr>)]\n                     mut_common_init_state)\n                   gc_init_state\n                   (mem_lock_update Map.empty\n                     (undefined\n                      \\<lparr>fA := initial_mark, fM := initial_mark,\n                         heap := sys_init_heap,\n                         hs_pending := \\<lambda>s. False,\n                         hs_type := ht_GetRoots\\<rparr>)\n                    \\<lparr>mem_store_buffers := \\<lambda>s. [],\n                       phase := ph_Idle, W := {}, ghost_honorary_grey := {},\n                       ghost_hs_in_sync := \\<lambda>s. True,\n                       ghost_hs_phase := hp_IdleMarkSweep\\<rparr>))\\<rbrakk>\n        \\<Longrightarrow> False\nA total of 25 subgoals...", "apply (erule rtranclp.cases; auto simp: ran_def split: if_splits obj_at_splits)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>\\<close>"], ["", "end"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"]]}