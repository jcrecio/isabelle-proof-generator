{"file_name": "/home/qj213/afp-2021-10-22/thys/Density_Compiler/PDF_Compiler_Pred.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Density_Compiler", "problem_names": ["lemmas expr_has_density_intros =\n  hd_val hd_var hd_let hd_rand hd_rand_det hd_fail hd_pair hd_if hd_if_det\n  hd_fst hd_snd hd_op_discr hd_neg hd_addc hd_multc hd_exp hd_inv hd_add", "lemma has_subprob_density_distr_Fst:\n  fixes t1 t2 f\n  defines \"N \\<equiv> stock_measure (PRODUCT t1 t2)\"\n  defines \"N' \\<equiv> stock_measure t1\"\n  defines \"fst' \\<equiv> op_sem Fst\"\n  defines \"f' \\<equiv> \\<lambda>x. \\<integral>\\<^sup>+y. f <|x,y|> \\<partial>stock_measure t2\"\n  assumes dens: \"has_subprob_density M N f\"\n  shows \"has_subprob_density (distr M N' fst') N' f'\"", "lemma has_subprob_density_distr_Snd:\n  fixes t1 t2 f\n  defines \"N \\<equiv> stock_measure (PRODUCT t1 t2)\"\n  defines \"N' \\<equiv> stock_measure t2\"\n  defines \"snd' \\<equiv> op_sem Snd\"\n  defines \"f' \\<equiv> \\<lambda>y. \\<integral>\\<^sup>+x. f <|x,y|> \\<partial>stock_measure t1\"\n  assumes dens: \"has_subprob_density M N f\"\n  shows \"has_subprob_density (distr M N' snd') N' f'\"", "lemma dens_ctxt_measure_empty_bind:\n  assumes \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\"\n  assumes f[measurable]: \"f \\<in> measurable (state_measure V' \\<Gamma>) (subprob_algebra N)\"\n  shows \"dens_ctxt_measure ({},V',\\<Gamma>,\\<lambda>_. 1) \\<rho> \\<bind> f = f \\<rho>\" (is \"bind ?M _ = ?R\")", "lemma (in density_context) bind_dens_ctxt_measure_cong:\n  assumes fg: \"\\<And>\\<sigma>. (\\<And>x. x \\<in> V' \\<Longrightarrow> \\<sigma> x = \\<rho> x) \\<Longrightarrow> f \\<sigma> = g \\<sigma>\"\n  assumes \\<rho>[measurable]: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\"\n  assumes Mf[measurable]: \"f \\<in> measurable (state_measure (V \\<union> V') \\<Gamma>) (subprob_algebra N)\"\n  assumes Mg[measurable]: \"g \\<in> measurable (state_measure (V \\<union> V') \\<Gamma>) (subprob_algebra N)\"\n  defines \"M \\<equiv> dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho>\"\n  shows \"M \\<bind> f = M \\<bind> g\"", "lemma (in density_context) bin_op_randomfree_restructure:\n  assumes t1: \"\\<Gamma> \\<turnstile> e : t\" and t2: \"\\<Gamma> \\<turnstile> e' : t'\" and t3: \"op_type oper (PRODUCT t t') = Some tr\"\n  assumes rf: \"randomfree e'\" and vars1: \"free_vars e \\<subseteq> V\\<union>V'\" and vars2: \"free_vars e' \\<subseteq> V'\"\n  assumes \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\"\n  defines \"M \\<equiv> dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho>\"\n  defines \"v \\<equiv> expr_sem_rf \\<rho> e'\"\n  shows \"M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e, e'>)) =\n              distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure tr) (\\<lambda>w. op_sem oper <|w,v|>)\"", "lemma addc_density_measurable:\n  assumes Mf: \"case_prod f \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\"\n  assumes t_disj: \"t = REAL \\<or> t = INTEG\" and t: \"\\<Gamma> \\<turnstile> e' : t\"\n  assumes rf: \"randomfree e'\" and vars: \"free_vars e' \\<subseteq> V'\"\n  defines \"f' \\<equiv> (\\<lambda>\\<rho> x. f \\<rho> (op_sem Add <|x, expr_sem_rf \\<rho> (Minus $$ e')|>))\"\n  shows \"case_prod f' \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\"", "lemma (in density_context) emeasure_bind_if_dens_ctxt_measure:\n  assumes \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\"\n  defines \"M \\<equiv> dens_ctxt_measure \\<Y> \\<rho>\"\n  assumes Mf[measurable]: \"f \\<in> measurable M (subprob_algebra (stock_measure BOOL))\"\n  assumes Mg[measurable]: \"g \\<in> measurable M (subprob_algebra R)\"\n  assumes Mh[measurable]: \"h \\<in> measurable M (subprob_algebra R)\"\n  assumes densf: \"has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n                      f (stock_measure BOOL) \\<delta>f\"\n  assumes densg: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n                      (\\<lambda>\\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,\\<lambda>\\<sigma>. \\<delta> \\<sigma> * \\<delta>f \\<sigma> (BoolVal True)) \\<rho> \\<bind> g) R \\<delta>g\"\n  assumes densh: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n                      (\\<lambda>\\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,\\<lambda>\\<sigma>. \\<delta> \\<sigma> * \\<delta>f \\<sigma> (BoolVal False)) \\<rho> \\<bind> h) R \\<delta>h\"\n  defines \"P \\<equiv> \\<lambda>b. b = BoolVal True\"\n  shows \"M \\<bind> (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)) = density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)\"\n          (is \"?lhs = ?rhs\")", "lemma (in density_context) emeasure_bind_if_det_dens_ctxt_measure:\n  fixes f\n  assumes \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\"\n  defines \"M \\<equiv> dens_ctxt_measure \\<Y> \\<rho>\"\n  defines \"P \\<equiv> \\<lambda>b. f b = BoolVal True\" and \"P' \\<equiv> \\<lambda>b. f b = BoolVal False\"\n  assumes dc1: \"density_context V V' \\<Gamma> (\\<lambda>\\<sigma>. \\<delta> \\<sigma> * (if P \\<sigma> then 1 else 0))\"\n  assumes dc2: \"density_context V V' \\<Gamma> (\\<lambda>\\<sigma>. \\<delta> \\<sigma> * (if P' \\<sigma> then 1 else 0))\"\n  assumes Mf[measurable]: \"f \\<in> measurable M (stock_measure BOOL)\"\n  assumes Mg[measurable]: \"g \\<in> measurable M (subprob_algebra R)\"\n  assumes Mh[measurable]: \"h \\<in> measurable M (subprob_algebra R)\"\n  assumes densg: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n                      (\\<lambda>\\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,\\<lambda>\\<sigma>. \\<delta> \\<sigma> * (if P \\<sigma> then 1 else 0)) \\<rho> \\<bind> g) R \\<delta>g\"\n  assumes densh: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n                      (\\<lambda>\\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,\\<lambda>\\<sigma>. \\<delta> \\<sigma> * (if P' \\<sigma> then 1 else 0)) \\<rho> \\<bind> h) R \\<delta>h\"\n  shows \"M \\<bind> (\\<lambda>x. if P x then g x else h x) = density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)\"\n          (is \"?lhs = ?rhs\")", "lemma restrict_state_measure[measurable]:\n  \"(\\<lambda>x. restrict x V') \\<in> measurable (state_measure (V \\<union> V') \\<Gamma>) (state_measure V' \\<Gamma>)\"", "lemma expr_has_density_sound_op:\n  assumes dens_ctxt: \"density_context V V' \\<Gamma> \\<delta>\"\n  assumes dens: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n                   (\\<lambda>\\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t) f\"\n  assumes Mg: \"case_prod g \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')\"\n  assumes dens': \"\\<And>M \\<rho>. has_subprob_density M (stock_measure t) (f \\<rho>) \\<Longrightarrow>\n                            has_density (distr M (stock_measure t') (op_sem oper))\n                                        (stock_measure t') (g \\<rho>)\"\n  assumes t1: \"\\<Gamma> \\<turnstile> e : t\" and t2 : \"op_type oper t = Some t'\"\n  assumes free_vars: \"free_vars (oper $$ e) \\<subseteq> V \\<union> V'\"\n  shows \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n           (\\<lambda>\\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e))) (stock_measure t') g\"", "lemma expr_has_density_sound_aux:\n  assumes \"(V,V',\\<Gamma>,\\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\" \"\\<Gamma> \\<turnstile> e : t\"\n          \"density_context V V' \\<Gamma> \\<delta>\" \"free_vars e \\<subseteq> V \\<union> V'\"\n  shows \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n             (\\<lambda>\\<rho>. do {\\<sigma> \\<leftarrow> dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho>; expr_sem \\<sigma> e}) (stock_measure t)\n             (\\<lambda>\\<rho> x. f \\<rho> x)\"", "lemma hd_cong:\n  assumes \"(V,V',\\<Gamma>,\\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\" \"density_context V V' \\<Gamma> \\<delta>\" \"\\<Gamma> \\<turnstile> e : t\" \"free_vars e \\<subseteq> V \\<union> V'\"\n  assumes \"\\<And>\\<rho> x. \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow> x \\<in> space (stock_measure t) \\<Longrightarrow> f \\<rho> x = f' \\<rho> x\"\n  shows \"(V,V',\\<Gamma>,\\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f'\"", "lemma prob_space_empty_dens_ctxt[simp]:\n  \"prob_space (dens_ctxt_measure ({},{},\\<Gamma>,(\\<lambda>_. 1)) (\\<lambda>_. undefined))\"", "lemma branch_prob_empty_ctxt[simp]: \"branch_prob ({},{},\\<Gamma>,(\\<lambda>_. 1)) (\\<lambda>_. undefined) = 1\"", "lemma expr_has_density_sound:\n  assumes \"({},{},\\<Gamma>,(\\<lambda>_. 1)) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\" \"\\<Gamma> \\<turnstile> e : t\" \"free_vars e = {}\"\n  shows \"has_subprob_density (expr_sem \\<sigma> e) (stock_measure t) (f (\\<lambda>_. undefined))\""], "translations": [["", "lemmas expr_has_density_intros =\n  hd_val hd_var hd_let hd_rand hd_rand_det hd_fail hd_pair hd_if hd_if_det\n  hd_fst hd_snd hd_op_discr hd_neg hd_addc hd_multc hd_exp hd_inv hd_add"], ["", "subsection \\<open>Auxiliary lemmas\\<close>"], ["", "lemma has_subprob_density_distr_Fst:\n  fixes t1 t2 f\n  defines \"N \\<equiv> stock_measure (PRODUCT t1 t2)\"\n  defines \"N' \\<equiv> stock_measure t1\"\n  defines \"fst' \\<equiv> op_sem Fst\"\n  defines \"f' \\<equiv> \\<lambda>x. \\<integral>\\<^sup>+y. f <|x,y|> \\<partial>stock_measure t2\"\n  assumes dens: \"has_subprob_density M N f\"\n  shows \"has_subprob_density (distr M N' fst') N' f'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_subprob_density (distr M N' fst') N' f'", "proof (intro has_subprob_densityI measure_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. f' \\<in> borel_measurable N'\n 2. sets (distr M N' fst') = sets (density N' f')\n 3. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A\n 4. subprob_space (distr M N' fst')", "from dens"], ["proof (chain)\npicking this:\n  has_subprob_density M N f", "interpret subprob_space M"], ["proof (prove)\nusing this:\n  has_subprob_density M N f\n\ngoal (1 subgoal):\n 1. subprob_space M", "by (rule has_subprob_densityD)"], ["proof (state)\ngoal (4 subgoals):\n 1. f' \\<in> borel_measurable N'\n 2. sets (distr M N' fst') = sets (density N' f')\n 3. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A\n 4. subprob_space (distr M N' fst')", "from dens"], ["proof (chain)\npicking this:\n  has_subprob_density M N f", "have M_M: \"measurable M = measurable N\""], ["proof (prove)\nusing this:\n  has_subprob_density M N f\n\ngoal (1 subgoal):\n 1. (\\<rightarrow>\\<^sub>M) M = (\\<rightarrow>\\<^sub>M) N", "by (intro ext measurable_cong_sets) (auto dest: has_subprob_densityD)"], ["proof (state)\nthis:\n  (\\<rightarrow>\\<^sub>M) M = (\\<rightarrow>\\<^sub>M) N\n\ngoal (4 subgoals):\n 1. f' \\<in> borel_measurable N'\n 2. sets (distr M N' fst') = sets (density N' f')\n 3. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A\n 4. subprob_space (distr M N' fst')", "hence meas_fst: \"fst' \\<in> measurable M N'\""], ["proof (prove)\nusing this:\n  (\\<rightarrow>\\<^sub>M) M = (\\<rightarrow>\\<^sub>M) N\n\ngoal (1 subgoal):\n 1. fst' \\<in> M \\<rightarrow>\\<^sub>M N'", "unfolding fst'_def"], ["proof (prove)\nusing this:\n  (\\<rightarrow>\\<^sub>M) M = (\\<rightarrow>\\<^sub>M) N\n\ngoal (1 subgoal):\n 1. op_sem Fst \\<in> M \\<rightarrow>\\<^sub>M N'", "by (subst op_sem.simps) (simp add: N'_def N_def M_M)"], ["proof (state)\nthis:\n  fst' \\<in> M \\<rightarrow>\\<^sub>M N'\n\ngoal (4 subgoals):\n 1. f' \\<in> borel_measurable N'\n 2. sets (distr M N' fst') = sets (density N' f')\n 3. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A\n 4. subprob_space (distr M N' fst')", "thus \"subprob_space (distr M N' fst')\""], ["proof (prove)\nusing this:\n  fst' \\<in> M \\<rightarrow>\\<^sub>M N'\n\ngoal (1 subgoal):\n 1. subprob_space (distr M N' fst')", "by (rule subprob_space_distr) (simp_all add: N'_def)"], ["proof (state)\nthis:\n  subprob_space (distr M N' fst')\n\ngoal (3 subgoals):\n 1. f' \\<in> borel_measurable N'\n 2. sets (distr M N' fst') = sets (density N' f')\n 3. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "interpret sigma_finite_measure \"stock_measure t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_measure (stock_measure t2)", "by simp"], ["proof (state)\ngoal (3 subgoals):\n 1. f' \\<in> borel_measurable N'\n 2. sets (distr M N' fst') = sets (density N' f')\n 3. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "have f[measurable]: \"f \\<in> borel_measurable (stock_measure (PRODUCT t1 t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (stock_measure (PRODUCT t1 t2))", "using dens"], ["proof (prove)\nusing this:\n  has_subprob_density M N f\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (stock_measure (PRODUCT t1 t2))", "by (auto simp: has_subprob_density_def has_density_def N_def)"], ["proof (state)\nthis:\n  f \\<in> borel_measurable (stock_measure (PRODUCT t1 t2))\n\ngoal (3 subgoals):\n 1. f' \\<in> borel_measurable N'\n 2. sets (distr M N' fst') = sets (density N' f')\n 3. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "then"], ["proof (chain)\npicking this:\n  f \\<in> borel_measurable (stock_measure (PRODUCT t1 t2))", "show meas_f': \"f' \\<in> borel_measurable N'\""], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (stock_measure (PRODUCT t1 t2))\n\ngoal (1 subgoal):\n 1. f' \\<in> borel_measurable N'", "unfolding f'_def N'_def"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (stock_measure (PRODUCT t1 t2))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        \\<integral>\\<^sup>+ y. f <|x, y|> \\<partial>stock_measure t2)\n    \\<in> borel_measurable (stock_measure t1)", "by measurable"], ["proof (state)\nthis:\n  f' \\<in> borel_measurable N'\n\ngoal (2 subgoals):\n 1. sets (distr M N' fst') = sets (density N' f')\n 2. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "let ?M1 = \"distr M N' fst'\" and ?M2 = \"density N' f'\""], ["proof (state)\ngoal (2 subgoals):\n 1. sets (distr M N' fst') = sets (density N' f')\n 2. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "show \"sets ?M1 = sets ?M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (distr M N' fst') = sets (density N' f')", "by simp"], ["proof (state)\nthis:\n  sets (distr M N' fst') = sets (density N' f')\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "assume \"X \\<in> sets ?M1\""], ["proof (state)\nthis:\n  X \\<in> sets (distr M N' fst')\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "hence X: \"X \\<in> sets N'\" \"X \\<in> sets N'\""], ["proof (prove)\nusing this:\n  X \\<in> sets (distr M N' fst')\n\ngoal (1 subgoal):\n 1. X \\<in> sets N' &&& X \\<in> sets N'", "by (simp_all add: N'_def)"], ["proof (state)\nthis:\n  X \\<in> sets N'\n  X \\<in> sets N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "then"], ["proof (chain)\npicking this:\n  X \\<in> sets N'\n  X \\<in> sets N'", "have [measurable]: \"X \\<in> sets (stock_measure t1)\""], ["proof (prove)\nusing this:\n  X \\<in> sets N'\n  X \\<in> sets N'\n\ngoal (1 subgoal):\n 1. X \\<in> sets (stock_measure t1)", "by (simp add: N'_def)"], ["proof (state)\nthis:\n  X \\<in> sets (stock_measure t1)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "from meas_fst and X(1)"], ["proof (chain)\npicking this:\n  fst' \\<in> M \\<rightarrow>\\<^sub>M N'\n  X \\<in> sets N'", "have \"emeasure ?M1 X = emeasure M (fst' -` X \\<inter> space M)\""], ["proof (prove)\nusing this:\n  fst' \\<in> M \\<rightarrow>\\<^sub>M N'\n  X \\<in> sets N'\n\ngoal (1 subgoal):\n 1. emeasure (distr M N' fst') X = emeasure M (fst' -` X \\<inter> space M)", "by (rule emeasure_distr)"], ["proof (state)\nthis:\n  emeasure (distr M N' fst') X = emeasure M (fst' -` X \\<inter> space M)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "also"], ["proof (state)\nthis:\n  emeasure (distr M N' fst') X = emeasure M (fst' -` X \\<inter> space M)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "from dens"], ["proof (chain)\npicking this:\n  has_subprob_density M N f", "have M: \"M = density N f\""], ["proof (prove)\nusing this:\n  has_subprob_density M N f\n\ngoal (1 subgoal):\n 1. M = density N f", "by (rule has_subprob_densityD)"], ["proof (state)\nthis:\n  M = density N f\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "from this and meas_fst"], ["proof (chain)\npicking this:\n  M = density N f\n  fst' \\<in> M \\<rightarrow>\\<^sub>M N'", "have meas_fst': \"fst' \\<in> measurable N N'\""], ["proof (prove)\nusing this:\n  M = density N f\n  fst' \\<in> M \\<rightarrow>\\<^sub>M N'\n\ngoal (1 subgoal):\n 1. fst' \\<in> N \\<rightarrow>\\<^sub>M N'", "by simp"], ["proof (state)\nthis:\n  fst' \\<in> N \\<rightarrow>\\<^sub>M N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "with dens and X"], ["proof (chain)\npicking this:\n  has_subprob_density M N f\n  X \\<in> sets N'\n  X \\<in> sets N'\n  fst' \\<in> N \\<rightarrow>\\<^sub>M N'", "have \"emeasure M (fst' -` X \\<inter> space M) =\n                            \\<integral>\\<^sup>+x. f x * indicator (fst' -` X \\<inter> space N) x \\<partial>N\""], ["proof (prove)\nusing this:\n  has_subprob_density M N f\n  X \\<in> sets N'\n  X \\<in> sets N'\n  fst' \\<in> N \\<rightarrow>\\<^sub>M N'\n\ngoal (1 subgoal):\n 1. emeasure M (fst' -` X \\<inter> space M) =\n    set_nn_integral N (fst' -` X \\<inter> space N) f", "by (subst (1 2) M, subst space_density, subst emeasure_density)\n       (erule has_subprob_densityD, erule measurable_sets, simp, simp)"], ["proof (state)\nthis:\n  emeasure M (fst' -` X \\<inter> space M) =\n  set_nn_integral N (fst' -` X \\<inter> space N) f\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "also"], ["proof (state)\nthis:\n  emeasure M (fst' -` X \\<inter> space M) =\n  set_nn_integral N (fst' -` X \\<inter> space N) f\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "have \"N = distr (N' \\<Otimes>\\<^sub>M stock_measure t2) N (case_prod PairVal)\" (is \"_ = ?N\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. N =\n    distr (N' \\<Otimes>\\<^sub>M stock_measure t2) N\n     (\\<lambda>(x, y). <|x, y|>)", "unfolding N_def N'_def stock_measure.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. embed_measure (stock_measure t1 \\<Otimes>\\<^sub>M stock_measure t2)\n     (\\<lambda>(x, y). <|x, y|>) =\n    distr (stock_measure t1 \\<Otimes>\\<^sub>M stock_measure t2)\n     (embed_measure (stock_measure t1 \\<Otimes>\\<^sub>M stock_measure t2)\n       (\\<lambda>(x, y). <|x, y|>))\n     (\\<lambda>(x, y). <|x, y|>)", "by (rule embed_measure_eq_distr) (simp add: inj_PairVal)"], ["proof (state)\nthis:\n  N =\n  distr (N' \\<Otimes>\\<^sub>M stock_measure t2) N\n   (\\<lambda>(x, y). <|x, y|>)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "hence \"\\<And>f. nn_integral N f = nn_integral ... f\""], ["proof (prove)\nusing this:\n  N =\n  distr (N' \\<Otimes>\\<^sub>M stock_measure t2) N\n   (\\<lambda>(x, y). <|x, y|>)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       integral\\<^sup>N N f =\n       integral\\<^sup>N\n        (distr (N' \\<Otimes>\\<^sub>M stock_measure t2) N\n          (\\<lambda>(x, y). <|x, y|>))\n        f", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>N N ?f1 =\n  integral\\<^sup>N\n   (distr (N' \\<Otimes>\\<^sub>M stock_measure t2) N\n     (\\<lambda>(x, y). <|x, y|>))\n   ?f1\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "also"], ["proof (state)\nthis:\n  integral\\<^sup>N N ?f1 =\n  integral\\<^sup>N\n   (distr (N' \\<Otimes>\\<^sub>M stock_measure t2) N\n     (\\<lambda>(x, y). <|x, y|>))\n   ?f1\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "from dens and X"], ["proof (chain)\npicking this:\n  has_subprob_density M N f\n  X \\<in> sets N'\n  X \\<in> sets N'", "have \"(\\<integral>\\<^sup>+x. f x * indicator (fst' -` X \\<inter> space N) x \\<partial>?N) =\n              \\<integral>\\<^sup>+x. f (case_prod PairVal x) * indicator (fst' -` X \\<inter> space N) (case_prod PairVal x)\n                \\<partial>(N' \\<Otimes>\\<^sub>M stock_measure t2)\""], ["proof (prove)\nusing this:\n  has_subprob_density M N f\n  X \\<in> sets N'\n  X \\<in> sets N'\n\ngoal (1 subgoal):\n 1. set_nn_integral\n     (distr (N' \\<Otimes>\\<^sub>M stock_measure t2) N\n       (\\<lambda>(x, y). <|x, y|>))\n     (fst' -` X \\<inter> space N) f =\n    \\<integral>\\<^sup>+ x. f (case x of (x, xa) \\<Rightarrow> <|x, xa|>) *\n                           indicator (fst' -` X \\<inter> space N)\n                            (case x of (x, xa) \\<Rightarrow> <|x, xa|>)\n                       \\<partial>N' \\<Otimes>\\<^sub>M stock_measure t2", "by (intro nn_integral_distr)\n         (simp_all add: measurable_embed_measure2 N_def N'_def fst'_def)"], ["proof (state)\nthis:\n  set_nn_integral\n   (distr (N' \\<Otimes>\\<^sub>M stock_measure t2) N\n     (\\<lambda>(x, y). <|x, y|>))\n   (fst' -` X \\<inter> space N) f =\n  \\<integral>\\<^sup>+ x. f (case x of (x, xa) \\<Rightarrow> <|x, xa|>) *\n                         indicator (fst' -` X \\<inter> space N)\n                          (case x of (x, xa) \\<Rightarrow> <|x, xa|>)\n                     \\<partial>N' \\<Otimes>\\<^sub>M stock_measure t2\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "also"], ["proof (state)\nthis:\n  set_nn_integral\n   (distr (N' \\<Otimes>\\<^sub>M stock_measure t2) N\n     (\\<lambda>(x, y). <|x, y|>))\n   (fst' -` X \\<inter> space N) f =\n  \\<integral>\\<^sup>+ x. f (case x of (x, xa) \\<Rightarrow> <|x, xa|>) *\n                         indicator (fst' -` X \\<inter> space N)\n                          (case x of (x, xa) \\<Rightarrow> <|x, xa|>)\n                     \\<partial>N' \\<Otimes>\\<^sub>M stock_measure t2\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "from has_subprob_densityD(1)[OF dens] and X"], ["proof (chain)\npicking this:\n  f \\<in> borel_measurable N\n  X \\<in> sets N'\n  X \\<in> sets N'", "have \"... = \\<integral>\\<^sup>+x. \\<integral>\\<^sup>+y. f <|x,y|> * indicator (fst' -` X \\<inter> space N) <|x, y|> \\<partial>stock_measure t2 \\<partial>N'\"\n             (is \"_ = ?I\")"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable N\n  X \\<in> sets N'\n  X \\<in> sets N'\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. f (case x of (x, xa) \\<Rightarrow> <|x, xa|>) *\n                           indicator (fst' -` X \\<inter> space N)\n                            (case x of (x, xa) \\<Rightarrow> <|x, xa|>)\n                       \\<partial>N' \\<Otimes>\\<^sub>M stock_measure t2 =\n    \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y.\n          f <|x, y|> * indicator (fst' -` X \\<inter> space N) <|x, y|>\n        \\<partial>stock_measure t2\n                       \\<partial>N'", "by (subst sigma_finite_measure.nn_integral_fst[symmetric])\n       (auto simp: N_def N'_def fst'_def comp_def simp del: space_stock_measure)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. f (case x of (x, xa) \\<Rightarrow> <|x, xa|>) *\n                         indicator (fst' -` X \\<inter> space N)\n                          (case x of (x, xa) \\<Rightarrow> <|x, xa|>)\n                     \\<partial>N' \\<Otimes>\\<^sub>M stock_measure t2 =\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y.\n        f <|x, y|> * indicator (fst' -` X \\<inter> space N) <|x, y|>\n      \\<partial>stock_measure t2\n                     \\<partial>N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. f (case x of (x, xa) \\<Rightarrow> <|x, xa|>) *\n                         indicator (fst' -` X \\<inter> space N)\n                          (case x of (x, xa) \\<Rightarrow> <|x, xa|>)\n                     \\<partial>N' \\<Otimes>\\<^sub>M stock_measure t2 =\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y.\n        f <|x, y|> * indicator (fst' -` X \\<inter> space N) <|x, y|>\n      \\<partial>stock_measure t2\n                     \\<partial>N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "from X"], ["proof (chain)\npicking this:\n  X \\<in> sets N'\n  X \\<in> sets N'", "have A: \"\\<And>x y. x \\<in> space N' \\<Longrightarrow> y \\<in> space (stock_measure t2) \\<Longrightarrow>\n                          indicator (fst' -` X \\<inter> space N) <|x, y|> = indicator X x\""], ["proof (prove)\nusing this:\n  X \\<in> sets N'\n  X \\<in> sets N'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> space N'; y \\<in> space (stock_measure t2)\\<rbrakk>\n       \\<Longrightarrow> indicator (fst' -` X \\<inter> space N) <|x, y|> =\n                         indicator X x", "by (auto split: split_indicator simp: fst'_def N_def\n                 space_embed_measure space_pair_measure N'_def)"], ["proof (state)\nthis:\n  \\<lbrakk>?x1 \\<in> space N'; ?y1 \\<in> space (stock_measure t2)\\<rbrakk>\n  \\<Longrightarrow> indicator (fst' -` X \\<inter> space N) <|?x1, ?y1|> =\n                    indicator X ?x1\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "have \"?I = \\<integral>\\<^sup>+x. \\<integral>\\<^sup>+y. f <|x,y|> * indicator X x \\<partial>stock_measure t2 \\<partial>N'\"  (is \"_ = ?I\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y.\n          f <|x, y|> * indicator (fst' -` X \\<inter> space N) <|x, y|>\n        \\<partial>stock_measure t2\n                       \\<partial>N' =\n    \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. f <|x, y|> * indicator X x\n        \\<partial>stock_measure t2\n                       \\<partial>N'", "by (intro nn_integral_cong) (simp add: A)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y.\n        f <|x, y|> * indicator (fst' -` X \\<inter> space N) <|x, y|>\n      \\<partial>stock_measure t2\n                     \\<partial>N' =\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. f <|x, y|> * indicator X x\n      \\<partial>stock_measure t2\n                     \\<partial>N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y.\n        f <|x, y|> * indicator (fst' -` X \\<inter> space N) <|x, y|>\n      \\<partial>stock_measure t2\n                     \\<partial>N' =\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. f <|x, y|> * indicator X x\n      \\<partial>stock_measure t2\n                     \\<partial>N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "have A: \"\\<And>x. x \\<in> space N' \\<Longrightarrow> (\\<lambda>y. f <|x,y|>) = f \\<circ> case_prod PairVal \\<circ> (\\<lambda>y. (x,y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space N' \\<Longrightarrow>\n       (\\<lambda>y. f <|x, y|>) =\n       f \\<circ> (\\<lambda>(x, y). <|x, y|>) \\<circ> Product_Type.Pair x", "by (intro ext) simp"], ["proof (state)\nthis:\n  ?x2 \\<in> space N' \\<Longrightarrow>\n  (\\<lambda>y. f <|?x2, y|>) =\n  f \\<circ> (\\<lambda>(x, y). <|x, y|>) \\<circ> Product_Type.Pair ?x2\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "from dens"], ["proof (chain)\npicking this:\n  has_subprob_density M N f", "have \"?I = \\<integral>\\<^sup>+x. (\\<integral>\\<^sup>+y. f <|x,y|> \\<partial>stock_measure t2) * indicator X x \\<partial>N'\""], ["proof (prove)\nusing this:\n  has_subprob_density M N f\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. f <|x, y|> * indicator X x\n        \\<partial>stock_measure t2\n                       \\<partial>N' =\n    \\<integral>\\<^sup>+x\\<in>X.\n                       \\<integral>\\<^sup>+ y. f <|x, y|>\n    \\<partial>stock_measure t2\n    \\<partial>N'", "by (intro nn_integral_cong nn_integral_multc, subst A)\n       (auto intro!: measurable_comp f measurable_PairVal simp: N'_def)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. f <|x, y|> * indicator X x\n      \\<partial>stock_measure t2\n                     \\<partial>N' =\n  \\<integral>\\<^sup>+x\\<in>X.\n                     \\<integral>\\<^sup>+ y. f <|x, y|>\n  \\<partial>stock_measure t2\n  \\<partial>N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. f <|x, y|> * indicator X x\n      \\<partial>stock_measure t2\n                     \\<partial>N' =\n  \\<integral>\\<^sup>+x\\<in>X.\n                     \\<integral>\\<^sup>+ y. f <|x, y|>\n  \\<partial>stock_measure t2\n  \\<partial>N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "from meas_f' and X(2)"], ["proof (chain)\npicking this:\n  f' \\<in> borel_measurable N'\n  X \\<in> sets N'", "have \"... = emeasure ?M2 X\""], ["proof (prove)\nusing this:\n  f' \\<in> borel_measurable N'\n  X \\<in> sets N'\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>X.\n                       \\<integral>\\<^sup>+ y. f <|x, y|>\n    \\<partial>stock_measure t2\n    \\<partial>N' =\n    emeasure (density N' f') X", "unfolding f'_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<integral>\\<^sup>+ y. f <|x, y|> \\<partial>stock_measure t2)\n  \\<in> borel_measurable N'\n  X \\<in> sets N'\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>X.\n                       \\<integral>\\<^sup>+ y. f <|x, y|>\n    \\<partial>stock_measure t2\n    \\<partial>N' =\n    emeasure\n     (density N'\n       (\\<lambda>x.\n           \\<integral>\\<^sup>+ y. f <|x, y|> \\<partial>stock_measure t2))\n     X", "by (rule emeasure_density[symmetric])"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>X.\n                     \\<integral>\\<^sup>+ y. f <|x, y|>\n  \\<partial>stock_measure t2\n  \\<partial>N' =\n  emeasure (density N' f') X\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' fst') \\<Longrightarrow>\n       emeasure (distr M N' fst') A = emeasure (density N' f') A", "finally"], ["proof (chain)\npicking this:\n  emeasure (distr M N' fst') X = emeasure (density N' f') X", "show \"emeasure ?M1 X = emeasure ?M2 X\""], ["proof (prove)\nusing this:\n  emeasure (distr M N' fst') X = emeasure (density N' f') X\n\ngoal (1 subgoal):\n 1. emeasure (distr M N' fst') X = emeasure (density N' f') X", "."], ["proof (state)\nthis:\n  emeasure (distr M N' fst') X = emeasure (density N' f') X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma has_subprob_density_distr_Snd:\n  fixes t1 t2 f\n  defines \"N \\<equiv> stock_measure (PRODUCT t1 t2)\"\n  defines \"N' \\<equiv> stock_measure t2\"\n  defines \"snd' \\<equiv> op_sem Snd\"\n  defines \"f' \\<equiv> \\<lambda>y. \\<integral>\\<^sup>+x. f <|x,y|> \\<partial>stock_measure t1\"\n  assumes dens: \"has_subprob_density M N f\"\n  shows \"has_subprob_density (distr M N' snd') N' f'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_subprob_density (distr M N' snd') N' f'", "proof (intro has_subprob_densityI measure_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. f' \\<in> borel_measurable N'\n 2. sets (distr M N' snd') = sets (density N' f')\n 3. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A\n 4. subprob_space (distr M N' snd')", "from dens"], ["proof (chain)\npicking this:\n  has_subprob_density M N f", "interpret subprob_space M"], ["proof (prove)\nusing this:\n  has_subprob_density M N f\n\ngoal (1 subgoal):\n 1. subprob_space M", "by (rule has_subprob_densityD)"], ["proof (state)\ngoal (4 subgoals):\n 1. f' \\<in> borel_measurable N'\n 2. sets (distr M N' snd') = sets (density N' f')\n 3. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A\n 4. subprob_space (distr M N' snd')", "from dens"], ["proof (chain)\npicking this:\n  has_subprob_density M N f", "have M_M: \"measurable M = measurable N\""], ["proof (prove)\nusing this:\n  has_subprob_density M N f\n\ngoal (1 subgoal):\n 1. (\\<rightarrow>\\<^sub>M) M = (\\<rightarrow>\\<^sub>M) N", "by (intro ext measurable_cong_sets) (auto dest: has_subprob_densityD)"], ["proof (state)\nthis:\n  (\\<rightarrow>\\<^sub>M) M = (\\<rightarrow>\\<^sub>M) N\n\ngoal (4 subgoals):\n 1. f' \\<in> borel_measurable N'\n 2. sets (distr M N' snd') = sets (density N' f')\n 3. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A\n 4. subprob_space (distr M N' snd')", "hence meas_snd: \"snd' \\<in> measurable M N'\""], ["proof (prove)\nusing this:\n  (\\<rightarrow>\\<^sub>M) M = (\\<rightarrow>\\<^sub>M) N\n\ngoal (1 subgoal):\n 1. snd' \\<in> M \\<rightarrow>\\<^sub>M N'", "unfolding snd'_def"], ["proof (prove)\nusing this:\n  (\\<rightarrow>\\<^sub>M) M = (\\<rightarrow>\\<^sub>M) N\n\ngoal (1 subgoal):\n 1. op_sem Snd \\<in> M \\<rightarrow>\\<^sub>M N'", "by (subst op_sem.simps) (simp add: N'_def N_def M_M)"], ["proof (state)\nthis:\n  snd' \\<in> M \\<rightarrow>\\<^sub>M N'\n\ngoal (4 subgoals):\n 1. f' \\<in> borel_measurable N'\n 2. sets (distr M N' snd') = sets (density N' f')\n 3. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A\n 4. subprob_space (distr M N' snd')", "thus \"subprob_space (distr M N' snd')\""], ["proof (prove)\nusing this:\n  snd' \\<in> M \\<rightarrow>\\<^sub>M N'\n\ngoal (1 subgoal):\n 1. subprob_space (distr M N' snd')", "by (rule subprob_space_distr) (simp_all add: N'_def)"], ["proof (state)\nthis:\n  subprob_space (distr M N' snd')\n\ngoal (3 subgoals):\n 1. f' \\<in> borel_measurable N'\n 2. sets (distr M N' snd') = sets (density N' f')\n 3. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "interpret t1: sigma_finite_measure \"stock_measure t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_measure (stock_measure t1)", "by simp"], ["proof (state)\ngoal (3 subgoals):\n 1. f' \\<in> borel_measurable N'\n 2. sets (distr M N' snd') = sets (density N' f')\n 3. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "have A: \"(\\<lambda>(x, y). f <| x ,  y |>) = f \\<circ> case_prod PairVal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). f <|x, y|>) = f \\<circ> (\\<lambda>(x, y). <|x, y|>)", "by (intro ext) (simp add: o_def split: prod.split)"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). f <|x, y|>) = f \\<circ> (\\<lambda>(x, y). <|x, y|>)\n\ngoal (3 subgoals):\n 1. f' \\<in> borel_measurable N'\n 2. sets (distr M N' snd') = sets (density N' f')\n 3. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "have f[measurable]: \"f \\<in> borel_measurable (stock_measure (PRODUCT t1 t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (stock_measure (PRODUCT t1 t2))", "using dens"], ["proof (prove)\nusing this:\n  has_subprob_density M N f\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (stock_measure (PRODUCT t1 t2))", "by (auto simp: has_subprob_density_def has_density_def N_def)"], ["proof (state)\nthis:\n  f \\<in> borel_measurable (stock_measure (PRODUCT t1 t2))\n\ngoal (3 subgoals):\n 1. f' \\<in> borel_measurable N'\n 2. sets (distr M N' snd') = sets (density N' f')\n 3. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "then"], ["proof (chain)\npicking this:\n  f \\<in> borel_measurable (stock_measure (PRODUCT t1 t2))", "show meas_f': \"f' \\<in> borel_measurable N'\""], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (stock_measure (PRODUCT t1 t2))\n\ngoal (1 subgoal):\n 1. f' \\<in> borel_measurable N'", "unfolding f'_def N'_def"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (stock_measure (PRODUCT t1 t2))\n\ngoal (1 subgoal):\n 1. (\\<lambda>y.\n        \\<integral>\\<^sup>+ x. f <|x, y|> \\<partial>stock_measure t1)\n    \\<in> borel_measurable (stock_measure t2)", "by measurable"], ["proof (state)\nthis:\n  f' \\<in> borel_measurable N'\n\ngoal (2 subgoals):\n 1. sets (distr M N' snd') = sets (density N' f')\n 2. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "interpret N': sigma_finite_measure N'"], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_measure N'", "unfolding N'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_measure (stock_measure t2)", "by (rule sigma_finite_stock_measure)"], ["proof (state)\ngoal (2 subgoals):\n 1. sets (distr M N' snd') = sets (density N' f')\n 2. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "interpret N'_t1: pair_sigma_finite t1 N'"], ["proof (prove)\ngoal (1 subgoal):\n 1. pair_sigma_finite (stock_measure t1) N'", "proof"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\ngoal (2 subgoals):\n 1. sets (distr M N' snd') = sets (density N' f')\n 2. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "let ?M1 = \"distr M N' snd'\" and ?M2 = \"density N' f'\""], ["proof (state)\ngoal (2 subgoals):\n 1. sets (distr M N' snd') = sets (density N' f')\n 2. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "show \"sets ?M1 = sets ?M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (distr M N' snd') = sets (density N' f')", "by simp"], ["proof (state)\nthis:\n  sets (distr M N' snd') = sets (density N' f')\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "assume \"X \\<in> sets ?M1\""], ["proof (state)\nthis:\n  X \\<in> sets (distr M N' snd')\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "hence X: \"X \\<in> sets N'\" \"X \\<in> sets N'\""], ["proof (prove)\nusing this:\n  X \\<in> sets (distr M N' snd')\n\ngoal (1 subgoal):\n 1. X \\<in> sets N' &&& X \\<in> sets N'", "by (simp_all add: N'_def)"], ["proof (state)\nthis:\n  X \\<in> sets N'\n  X \\<in> sets N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "then"], ["proof (chain)\npicking this:\n  X \\<in> sets N'\n  X \\<in> sets N'", "have [measurable]: \"X \\<in> sets (stock_measure t2)\""], ["proof (prove)\nusing this:\n  X \\<in> sets N'\n  X \\<in> sets N'\n\ngoal (1 subgoal):\n 1. X \\<in> sets (stock_measure t2)", "by (simp add: N'_def)"], ["proof (state)\nthis:\n  X \\<in> sets (stock_measure t2)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "from meas_snd and X(1)"], ["proof (chain)\npicking this:\n  snd' \\<in> M \\<rightarrow>\\<^sub>M N'\n  X \\<in> sets N'", "have \"emeasure ?M1 X = emeasure M (snd' -` X \\<inter> space M)\""], ["proof (prove)\nusing this:\n  snd' \\<in> M \\<rightarrow>\\<^sub>M N'\n  X \\<in> sets N'\n\ngoal (1 subgoal):\n 1. emeasure (distr M N' snd') X = emeasure M (snd' -` X \\<inter> space M)", "by (rule emeasure_distr)"], ["proof (state)\nthis:\n  emeasure (distr M N' snd') X = emeasure M (snd' -` X \\<inter> space M)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "also"], ["proof (state)\nthis:\n  emeasure (distr M N' snd') X = emeasure M (snd' -` X \\<inter> space M)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "from dens"], ["proof (chain)\npicking this:\n  has_subprob_density M N f", "have M: \"M = density N f\""], ["proof (prove)\nusing this:\n  has_subprob_density M N f\n\ngoal (1 subgoal):\n 1. M = density N f", "by (rule has_subprob_densityD)"], ["proof (state)\nthis:\n  M = density N f\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "from this and meas_snd"], ["proof (chain)\npicking this:\n  M = density N f\n  snd' \\<in> M \\<rightarrow>\\<^sub>M N'", "have meas_snd': \"snd' \\<in> measurable N N'\""], ["proof (prove)\nusing this:\n  M = density N f\n  snd' \\<in> M \\<rightarrow>\\<^sub>M N'\n\ngoal (1 subgoal):\n 1. snd' \\<in> N \\<rightarrow>\\<^sub>M N'", "by simp"], ["proof (state)\nthis:\n  snd' \\<in> N \\<rightarrow>\\<^sub>M N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "with dens and X"], ["proof (chain)\npicking this:\n  has_subprob_density M N f\n  X \\<in> sets N'\n  X \\<in> sets N'\n  snd' \\<in> N \\<rightarrow>\\<^sub>M N'", "have \"emeasure M (snd' -` X \\<inter> space M) =\n                            \\<integral>\\<^sup>+x. f x * indicator (snd' -` X \\<inter> space N) x \\<partial>N\""], ["proof (prove)\nusing this:\n  has_subprob_density M N f\n  X \\<in> sets N'\n  X \\<in> sets N'\n  snd' \\<in> N \\<rightarrow>\\<^sub>M N'\n\ngoal (1 subgoal):\n 1. emeasure M (snd' -` X \\<inter> space M) =\n    set_nn_integral N (snd' -` X \\<inter> space N) f", "by (subst (1 2) M, subst space_density, subst emeasure_density)\n       (erule has_subprob_densityD, erule measurable_sets, simp, simp)"], ["proof (state)\nthis:\n  emeasure M (snd' -` X \\<inter> space M) =\n  set_nn_integral N (snd' -` X \\<inter> space N) f\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "also"], ["proof (state)\nthis:\n  emeasure M (snd' -` X \\<inter> space M) =\n  set_nn_integral N (snd' -` X \\<inter> space N) f\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "have \"N = distr (stock_measure t1 \\<Otimes>\\<^sub>M N') N (case_prod PairVal)\" (is \"_ = ?N\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. N =\n    distr (stock_measure t1 \\<Otimes>\\<^sub>M N') N\n     (\\<lambda>(x, y). <|x, y|>)", "unfolding N_def N'_def stock_measure.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. embed_measure (stock_measure t1 \\<Otimes>\\<^sub>M stock_measure t2)\n     (\\<lambda>(x, y). <|x, y|>) =\n    distr (stock_measure t1 \\<Otimes>\\<^sub>M stock_measure t2)\n     (embed_measure (stock_measure t1 \\<Otimes>\\<^sub>M stock_measure t2)\n       (\\<lambda>(x, y). <|x, y|>))\n     (\\<lambda>(x, y). <|x, y|>)", "by (rule embed_measure_eq_distr) (simp add: inj_PairVal)"], ["proof (state)\nthis:\n  N =\n  distr (stock_measure t1 \\<Otimes>\\<^sub>M N') N\n   (\\<lambda>(x, y). <|x, y|>)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "hence \"\\<And>f. nn_integral N f = nn_integral ... f\""], ["proof (prove)\nusing this:\n  N =\n  distr (stock_measure t1 \\<Otimes>\\<^sub>M N') N\n   (\\<lambda>(x, y). <|x, y|>)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       integral\\<^sup>N N f =\n       integral\\<^sup>N\n        (distr (stock_measure t1 \\<Otimes>\\<^sub>M N') N\n          (\\<lambda>(x, y). <|x, y|>))\n        f", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>N N ?f1 =\n  integral\\<^sup>N\n   (distr (stock_measure t1 \\<Otimes>\\<^sub>M N') N\n     (\\<lambda>(x, y). <|x, y|>))\n   ?f1\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "also"], ["proof (state)\nthis:\n  integral\\<^sup>N N ?f1 =\n  integral\\<^sup>N\n   (distr (stock_measure t1 \\<Otimes>\\<^sub>M N') N\n     (\\<lambda>(x, y). <|x, y|>))\n   ?f1\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "from dens and X"], ["proof (chain)\npicking this:\n  has_subprob_density M N f\n  X \\<in> sets N'\n  X \\<in> sets N'", "have \"(\\<integral>\\<^sup>+x. f x * indicator (snd' -` X \\<inter> space N) x \\<partial>?N) =\n              \\<integral>\\<^sup>+x. f (case_prod PairVal x) * indicator (snd' -` X \\<inter> space N) (case_prod PairVal x)\n                \\<partial>(stock_measure t1 \\<Otimes>\\<^sub>M N')\""], ["proof (prove)\nusing this:\n  has_subprob_density M N f\n  X \\<in> sets N'\n  X \\<in> sets N'\n\ngoal (1 subgoal):\n 1. set_nn_integral\n     (distr (stock_measure t1 \\<Otimes>\\<^sub>M N') N\n       (\\<lambda>(x, y). <|x, y|>))\n     (snd' -` X \\<inter> space N) f =\n    \\<integral>\\<^sup>+ x. f (case x of (x, xa) \\<Rightarrow> <|x, xa|>) *\n                           indicator (snd' -` X \\<inter> space N)\n                            (case x of (x, xa) \\<Rightarrow> <|x, xa|>)\n                       \\<partial>stock_measure t1 \\<Otimes>\\<^sub>M N'", "by (intro nn_integral_distr)\n         (simp_all add: measurable_embed_measure2 N_def N'_def snd'_def)"], ["proof (state)\nthis:\n  set_nn_integral\n   (distr (stock_measure t1 \\<Otimes>\\<^sub>M N') N\n     (\\<lambda>(x, y). <|x, y|>))\n   (snd' -` X \\<inter> space N) f =\n  \\<integral>\\<^sup>+ x. f (case x of (x, xa) \\<Rightarrow> <|x, xa|>) *\n                         indicator (snd' -` X \\<inter> space N)\n                          (case x of (x, xa) \\<Rightarrow> <|x, xa|>)\n                     \\<partial>stock_measure t1 \\<Otimes>\\<^sub>M N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "also"], ["proof (state)\nthis:\n  set_nn_integral\n   (distr (stock_measure t1 \\<Otimes>\\<^sub>M N') N\n     (\\<lambda>(x, y). <|x, y|>))\n   (snd' -` X \\<inter> space N) f =\n  \\<integral>\\<^sup>+ x. f (case x of (x, xa) \\<Rightarrow> <|x, xa|>) *\n                         indicator (snd' -` X \\<inter> space N)\n                          (case x of (x, xa) \\<Rightarrow> <|x, xa|>)\n                     \\<partial>stock_measure t1 \\<Otimes>\\<^sub>M N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "from has_subprob_densityD(1)[OF dens] and X"], ["proof (chain)\npicking this:\n  f \\<in> borel_measurable N\n  X \\<in> sets N'\n  X \\<in> sets N'", "have \"... = \\<integral>\\<^sup>+y. \\<integral>\\<^sup>+x. f <|x,y|> * indicator (snd' -` X \\<inter> space N) <|x, y|> \\<partial>stock_measure t1 \\<partial>N'\"\n      (is \"\\<dots> = ?I\")"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable N\n  X \\<in> sets N'\n  X \\<in> sets N'\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. f (case x of (x, xa) \\<Rightarrow> <|x, xa|>) *\n                           indicator (snd' -` X \\<inter> space N)\n                            (case x of (x, xa) \\<Rightarrow> <|x, xa|>)\n                       \\<partial>stock_measure t1 \\<Otimes>\\<^sub>M N' =\n    \\<integral>\\<^sup>+ y. \\<integral>\\<^sup>+ x.\n          f <|x, y|> * indicator (snd' -` X \\<inter> space N) <|x, y|>\n        \\<partial>stock_measure t1\n                       \\<partial>N'", "by (subst N'_t1.nn_integral_snd[symmetric])\n       (auto simp: N_def N'_def snd'_def comp_def simp del: space_stock_measure)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. f (case x of (x, xa) \\<Rightarrow> <|x, xa|>) *\n                         indicator (snd' -` X \\<inter> space N)\n                          (case x of (x, xa) \\<Rightarrow> <|x, xa|>)\n                     \\<partial>stock_measure t1 \\<Otimes>\\<^sub>M N' =\n  \\<integral>\\<^sup>+ y. \\<integral>\\<^sup>+ x.\n        f <|x, y|> * indicator (snd' -` X \\<inter> space N) <|x, y|>\n      \\<partial>stock_measure t1\n                     \\<partial>N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. f (case x of (x, xa) \\<Rightarrow> <|x, xa|>) *\n                         indicator (snd' -` X \\<inter> space N)\n                          (case x of (x, xa) \\<Rightarrow> <|x, xa|>)\n                     \\<partial>stock_measure t1 \\<Otimes>\\<^sub>M N' =\n  \\<integral>\\<^sup>+ y. \\<integral>\\<^sup>+ x.\n        f <|x, y|> * indicator (snd' -` X \\<inter> space N) <|x, y|>\n      \\<partial>stock_measure t1\n                     \\<partial>N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "from X"], ["proof (chain)\npicking this:\n  X \\<in> sets N'\n  X \\<in> sets N'", "have A: \"\\<And>x y. x \\<in> space N' \\<Longrightarrow> y \\<in> space (stock_measure t1) \\<Longrightarrow>\n                          indicator (snd' -` X \\<inter> space N) <|y, x|> = indicator X x\""], ["proof (prove)\nusing this:\n  X \\<in> sets N'\n  X \\<in> sets N'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> space N'; y \\<in> space (stock_measure t1)\\<rbrakk>\n       \\<Longrightarrow> indicator (snd' -` X \\<inter> space N) <|y, x|> =\n                         indicator X x", "by (auto split: split_indicator simp: snd'_def N_def\n                 space_embed_measure space_pair_measure N'_def)"], ["proof (state)\nthis:\n  \\<lbrakk>?x1 \\<in> space N'; ?y1 \\<in> space (stock_measure t1)\\<rbrakk>\n  \\<Longrightarrow> indicator (snd' -` X \\<inter> space N) <|?y1, ?x1|> =\n                    indicator X ?x1\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "have \"?I = \\<integral>\\<^sup>+y. \\<integral>\\<^sup>+x. f <|x,y|> * indicator X y \\<partial>stock_measure t1 \\<partial>N'\"  (is \"_ = ?I\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ y. \\<integral>\\<^sup>+ x.\n          f <|x, y|> * indicator (snd' -` X \\<inter> space N) <|x, y|>\n        \\<partial>stock_measure t1\n                       \\<partial>N' =\n    \\<integral>\\<^sup>+ y. \\<integral>\\<^sup>+ x. f <|x, y|> * indicator X y\n        \\<partial>stock_measure t1\n                       \\<partial>N'", "by (intro nn_integral_cong) (simp add: A)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ y. \\<integral>\\<^sup>+ x.\n        f <|x, y|> * indicator (snd' -` X \\<inter> space N) <|x, y|>\n      \\<partial>stock_measure t1\n                     \\<partial>N' =\n  \\<integral>\\<^sup>+ y. \\<integral>\\<^sup>+ x. f <|x, y|> * indicator X y\n      \\<partial>stock_measure t1\n                     \\<partial>N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ y. \\<integral>\\<^sup>+ x.\n        f <|x, y|> * indicator (snd' -` X \\<inter> space N) <|x, y|>\n      \\<partial>stock_measure t1\n                     \\<partial>N' =\n  \\<integral>\\<^sup>+ y. \\<integral>\\<^sup>+ x. f <|x, y|> * indicator X y\n      \\<partial>stock_measure t1\n                     \\<partial>N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "have A: \"\\<And>y. y \\<in> space N' \\<Longrightarrow> (\\<lambda>x. f <|x,y|>) = f \\<circ> case_prod PairVal \\<circ> (\\<lambda>x. (x,y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> space N' \\<Longrightarrow>\n       (\\<lambda>x. f <|x, y|>) =\n       f \\<circ> (\\<lambda>(x, y). <|x, y|>) \\<circ> (\\<lambda>x. (x, y))", "by (intro ext) simp"], ["proof (state)\nthis:\n  ?y2 \\<in> space N' \\<Longrightarrow>\n  (\\<lambda>x. f <|x, ?y2|>) =\n  f \\<circ> (\\<lambda>(x, y). <|x, y|>) \\<circ> (\\<lambda>x. (x, ?y2))\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "from dens"], ["proof (chain)\npicking this:\n  has_subprob_density M N f", "have \"?I = \\<integral>\\<^sup>+y. (\\<integral>\\<^sup>+x. f <|x,y|> \\<partial>stock_measure t1) * indicator X y \\<partial>N'\""], ["proof (prove)\nusing this:\n  has_subprob_density M N f\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ y. \\<integral>\\<^sup>+ x. f <|x, y|> * indicator X y\n        \\<partial>stock_measure t1\n                       \\<partial>N' =\n    \\<integral>\\<^sup>+y\\<in>X.\n                       \\<integral>\\<^sup>+ x. f <|x, y|>\n    \\<partial>stock_measure t1\n    \\<partial>N'", "by (intro nn_integral_cong nn_integral_multc) (auto simp: N'_def)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ y. \\<integral>\\<^sup>+ x. f <|x, y|> * indicator X y\n      \\<partial>stock_measure t1\n                     \\<partial>N' =\n  \\<integral>\\<^sup>+y\\<in>X.\n                     \\<integral>\\<^sup>+ x. f <|x, y|>\n  \\<partial>stock_measure t1\n  \\<partial>N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ y. \\<integral>\\<^sup>+ x. f <|x, y|> * indicator X y\n      \\<partial>stock_measure t1\n                     \\<partial>N' =\n  \\<integral>\\<^sup>+y\\<in>X.\n                     \\<integral>\\<^sup>+ x. f <|x, y|>\n  \\<partial>stock_measure t1\n  \\<partial>N'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "from meas_f' and X(2)"], ["proof (chain)\npicking this:\n  f' \\<in> borel_measurable N'\n  X \\<in> sets N'", "have \"... = emeasure ?M2 X\""], ["proof (prove)\nusing this:\n  f' \\<in> borel_measurable N'\n  X \\<in> sets N'\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+y\\<in>X.\n                       \\<integral>\\<^sup>+ x. f <|x, y|>\n    \\<partial>stock_measure t1\n    \\<partial>N' =\n    emeasure (density N' f') X", "unfolding f'_def"], ["proof (prove)\nusing this:\n  (\\<lambda>y. \\<integral>\\<^sup>+ x. f <|x, y|> \\<partial>stock_measure t1)\n  \\<in> borel_measurable N'\n  X \\<in> sets N'\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+y\\<in>X.\n                       \\<integral>\\<^sup>+ x. f <|x, y|>\n    \\<partial>stock_measure t1\n    \\<partial>N' =\n    emeasure\n     (density N'\n       (\\<lambda>y.\n           \\<integral>\\<^sup>+ x. f <|x, y|> \\<partial>stock_measure t1))\n     X", "by (rule emeasure_density[symmetric])"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+y\\<in>X.\n                     \\<integral>\\<^sup>+ x. f <|x, y|>\n  \\<partial>stock_measure t1\n  \\<partial>N' =\n  emeasure (density N' f') X\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N' snd') \\<Longrightarrow>\n       emeasure (distr M N' snd') A = emeasure (density N' f') A", "finally"], ["proof (chain)\npicking this:\n  emeasure (distr M N' snd') X = emeasure (density N' f') X", "show \"emeasure ?M1 X = emeasure ?M2 X\""], ["proof (prove)\nusing this:\n  emeasure (distr M N' snd') X = emeasure (density N' f') X\n\ngoal (1 subgoal):\n 1. emeasure (distr M N' snd') X = emeasure (density N' f') X", "."], ["proof (state)\nthis:\n  emeasure (distr M N' snd') X = emeasure (density N' f') X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dens_ctxt_measure_empty_bind:\n  assumes \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\"\n  assumes f[measurable]: \"f \\<in> measurable (state_measure V' \\<Gamma>) (subprob_algebra N)\"\n  shows \"dens_ctxt_measure ({},V',\\<Gamma>,\\<lambda>_. 1) \\<rho> \\<bind> f = f \\<rho>\" (is \"bind ?M _ = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind> f =\n    f \\<rho>", "proof (intro measure_eqI)"], ["proof (state)\ngoal (2 subgoals):\n 1. sets\n     (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n      f) =\n    sets (f \\<rho>)\n 2. \\<And>A.\n       A \\<in> sets\n                (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                  \\<rho> \\<bind>\n                 f) \\<Longrightarrow>\n       emeasure\n        (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n         f)\n        A =\n       emeasure (f \\<rho>) A", "from assms"], ["proof (chain)\npicking this:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  f \\<in> state_measure V' \\<Gamma> \\<rightarrow>\\<^sub>M subprob_algebra N", "have nonempty: \"space ?M \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  f \\<in> state_measure V' \\<Gamma> \\<rightarrow>\\<^sub>M subprob_algebra N\n\ngoal (1 subgoal):\n 1. space\n     (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho>) \\<noteq>\n    {}", "by (auto simp: dens_ctxt_measure_def state_measure'_def state_measure_def space_PiM)"], ["proof (state)\nthis:\n  space\n   (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho>) \\<noteq>\n  {}\n\ngoal (2 subgoals):\n 1. sets\n     (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n      f) =\n    sets (f \\<rho>)\n 2. \\<And>A.\n       A \\<in> sets\n                (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                  \\<rho> \\<bind>\n                 f) \\<Longrightarrow>\n       emeasure\n        (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n         f)\n        A =\n       emeasure (f \\<rho>) A", "moreover"], ["proof (state)\nthis:\n  space\n   (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho>) \\<noteq>\n  {}\n\ngoal (2 subgoals):\n 1. sets\n     (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n      f) =\n    sets (f \\<rho>)\n 2. \\<And>A.\n       A \\<in> sets\n                (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                  \\<rho> \\<bind>\n                 f) \\<Longrightarrow>\n       emeasure\n        (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n         f)\n        A =\n       emeasure (f \\<rho>) A", "have meas: \"measurable ?M = measurable (state_measure V' \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<rightarrow>\\<^sub>M)\n     (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho>) =\n    (\\<rightarrow>\\<^sub>M) (state_measure V' \\<Gamma>)", "by (intro ext measurable_cong_sets) (auto simp: dens_ctxt_measure_def state_measure'_def)"], ["proof (state)\nthis:\n  (\\<rightarrow>\\<^sub>M)\n   (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho>) =\n  (\\<rightarrow>\\<^sub>M) (state_measure V' \\<Gamma>)\n\ngoal (2 subgoals):\n 1. sets\n     (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n      f) =\n    sets (f \\<rho>)\n 2. \\<And>A.\n       A \\<in> sets\n                (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                  \\<rho> \\<bind>\n                 f) \\<Longrightarrow>\n       emeasure\n        (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n         f)\n        A =\n       emeasure (f \\<rho>) A", "moreover"], ["proof (state)\nthis:\n  (\\<rightarrow>\\<^sub>M)\n   (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho>) =\n  (\\<rightarrow>\\<^sub>M) (state_measure V' \\<Gamma>)\n\ngoal (2 subgoals):\n 1. sets\n     (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n      f) =\n    sets (f \\<rho>)\n 2. \\<And>A.\n       A \\<in> sets\n                (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                  \\<rho> \\<bind>\n                 f) \\<Longrightarrow>\n       emeasure\n        (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n         f)\n        A =\n       emeasure (f \\<rho>) A", "from assms"], ["proof (chain)\npicking this:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  f \\<in> state_measure V' \\<Gamma> \\<rightarrow>\\<^sub>M subprob_algebra N", "have [simp]: \"sets (f \\<rho>) = sets N\""], ["proof (prove)\nusing this:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  f \\<in> state_measure V' \\<Gamma> \\<rightarrow>\\<^sub>M subprob_algebra N\n\ngoal (1 subgoal):\n 1. sets (f \\<rho>) = sets N", "by (intro sets_kernel[OF assms(2)])"], ["proof (state)\nthis:\n  sets (f \\<rho>) = sets N\n\ngoal (2 subgoals):\n 1. sets\n     (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n      f) =\n    sets (f \\<rho>)\n 2. \\<And>A.\n       A \\<in> sets\n                (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                  \\<rho> \\<bind>\n                 f) \\<Longrightarrow>\n       emeasure\n        (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n         f)\n        A =\n       emeasure (f \\<rho>) A", "ultimately"], ["proof (chain)\npicking this:\n  space\n   (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho>) \\<noteq>\n  {}\n  (\\<rightarrow>\\<^sub>M)\n   (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho>) =\n  (\\<rightarrow>\\<^sub>M) (state_measure V' \\<Gamma>)\n  sets (f \\<rho>) = sets N", "show sets_eq: \"sets (?M \\<bind> f) = sets ?R\""], ["proof (prove)\nusing this:\n  space\n   (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho>) \\<noteq>\n  {}\n  (\\<rightarrow>\\<^sub>M)\n   (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho>) =\n  (\\<rightarrow>\\<^sub>M) (state_measure V' \\<Gamma>)\n  sets (f \\<rho>) = sets N\n\ngoal (1 subgoal):\n 1. sets\n     (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n      f) =\n    sets (f \\<rho>)", "using assms"], ["proof (prove)\nusing this:\n  space\n   (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho>) \\<noteq>\n  {}\n  (\\<rightarrow>\\<^sub>M)\n   (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho>) =\n  (\\<rightarrow>\\<^sub>M) (state_measure V' \\<Gamma>)\n  sets (f \\<rho>) = sets N\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  f \\<in> state_measure V' \\<Gamma> \\<rightarrow>\\<^sub>M subprob_algebra N\n\ngoal (1 subgoal):\n 1. sets\n     (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n      f) =\n    sets (f \\<rho>)", "by (subst sets_bind[OF sets_kernel[OF f]])\n       (simp_all add: dens_ctxt_measure_def state_measure'_def state_measure_def)"], ["proof (state)\nthis:\n  sets\n   (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind> f) =\n  sets (f \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                  \\<rho> \\<bind>\n                 f) \\<Longrightarrow>\n       emeasure\n        (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n         f)\n        A =\n       emeasure (f \\<rho>) A", "from assms"], ["proof (chain)\npicking this:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  f \\<in> state_measure V' \\<Gamma> \\<rightarrow>\\<^sub>M subprob_algebra N", "have [simp]: \"\\<And>\\<sigma>. merge {} V' (\\<sigma>,\\<rho>) = \\<rho>\""], ["proof (prove)\nusing this:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  f \\<in> state_measure V' \\<Gamma> \\<rightarrow>\\<^sub>M subprob_algebra N\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>. merge {} V' (\\<sigma>, \\<rho>) = \\<rho>", "by (intro ext) (auto simp: merge_def state_measure_def space_PiM)"], ["proof (state)\nthis:\n  merge {} V' (?\\<sigma>1, \\<rho>) = \\<rho>\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                  \\<rho> \\<bind>\n                 f) \\<Longrightarrow>\n       emeasure\n        (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n         f)\n        A =\n       emeasure (f \\<rho>) A", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                  \\<rho> \\<bind>\n                 f) \\<Longrightarrow>\n       emeasure\n        (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n         f)\n        A =\n       emeasure (f \\<rho>) A", "assume X: \"X \\<in> sets (?M \\<bind> f)\""], ["proof (state)\nthis:\n  X \\<in> sets\n           (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n             \\<rho> \\<bind>\n            f)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                  \\<rho> \\<bind>\n                 f) \\<Longrightarrow>\n       emeasure\n        (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n         f)\n        A =\n       emeasure (f \\<rho>) A", "hence \"emeasure (?M \\<bind> f) X =  \\<integral>\\<^sup>+x. emeasure (f x) X \\<partial>?M\""], ["proof (prove)\nusing this:\n  X \\<in> sets\n           (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n             \\<rho> \\<bind>\n            f)\n\ngoal (1 subgoal):\n 1. emeasure\n     (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind> f)\n     X =\n    \\<integral>\\<^sup>+ x. emeasure (f x) X\n                       \\<partial>dens_ctxt_measure\n                                  ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho>", "using assms"], ["proof (prove)\nusing this:\n  X \\<in> sets\n           (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n             \\<rho> \\<bind>\n            f)\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  f \\<in> state_measure V' \\<Gamma> \\<rightarrow>\\<^sub>M subprob_algebra N\n\ngoal (1 subgoal):\n 1. emeasure\n     (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind> f)\n     X =\n    \\<integral>\\<^sup>+ x. emeasure (f x) X\n                       \\<partial>dens_ctxt_measure\n                                  ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho>", "by (subst emeasure_bind[OF nonempty]) (simp_all add: nonempty meas sets_eq cong: measurable_cong_sets)"], ["proof (state)\nthis:\n  emeasure\n   (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind> f)\n   X =\n  \\<integral>\\<^sup>+ x. emeasure (f x) X\n                     \\<partial>dens_ctxt_measure\n                                ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho>\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                  \\<rho> \\<bind>\n                 f) \\<Longrightarrow>\n       emeasure\n        (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n         f)\n        A =\n       emeasure (f \\<rho>) A", "also"], ["proof (state)\nthis:\n  emeasure\n   (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind> f)\n   X =\n  \\<integral>\\<^sup>+ x. emeasure (f x) X\n                     \\<partial>dens_ctxt_measure\n                                ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho>\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                  \\<rho> \\<bind>\n                 f) \\<Longrightarrow>\n       emeasure\n        (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n         f)\n        A =\n       emeasure (f \\<rho>) A", "have \"... = \\<integral>\\<^sup>+(x::state). emeasure (f \\<rho>) X \\<partial>count_space {\\<lambda>_. undefined}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. emeasure (f x) X\n                       \\<partial>dens_ctxt_measure\n                                  ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> =\n    \\<integral>\\<^sup>+ x. emeasure (f \\<rho>) X\n                       \\<partial>count_space {\\<lambda>_. undefined}", "unfolding dens_ctxt_measure_def state_measure'_def state_measure_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. emeasure (f x) X\n                       \\<partial>(case ({}, V', \\<Gamma>, \\<lambda>_. 1) of\n                                  (V, V', \\<Gamma>, \\<delta>) \\<Rightarrow>\n                                    \\<lambda>\\<rho>.\n density\n  (distr (Pi\\<^sub>M V (\\<lambda>x. stock_measure (\\<Gamma> x)))\n    (Pi\\<^sub>M (V \\<union> V') (\\<lambda>x. stock_measure (\\<Gamma> x)))\n    (\\<lambda>\\<sigma>. merge V V' (\\<sigma>, \\<rho>)))\n  \\<delta>)\n                                  \\<rho> =\n    \\<integral>\\<^sup>+ x. emeasure (f \\<rho>) X\n                       \\<partial>count_space {\\<lambda>_. undefined}", "using X assms"], ["proof (prove)\nusing this:\n  X \\<in> sets\n           (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n             \\<rho> \\<bind>\n            f)\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  f \\<in> state_measure V' \\<Gamma> \\<rightarrow>\\<^sub>M subprob_algebra N\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. emeasure (f x) X\n                       \\<partial>(case ({}, V', \\<Gamma>, \\<lambda>_. 1) of\n                                  (V, V', \\<Gamma>, \\<delta>) \\<Rightarrow>\n                                    \\<lambda>\\<rho>.\n density\n  (distr (Pi\\<^sub>M V (\\<lambda>x. stock_measure (\\<Gamma> x)))\n    (Pi\\<^sub>M (V \\<union> V') (\\<lambda>x. stock_measure (\\<Gamma> x)))\n    (\\<lambda>\\<sigma>. merge V V' (\\<sigma>, \\<rho>)))\n  \\<delta>)\n                                  \\<rho> =\n    \\<integral>\\<^sup>+ x. emeasure (f \\<rho>) X\n                       \\<partial>count_space {\\<lambda>_. undefined}", "apply (simp only: prod.case)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<in> sets\n                      (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                        \\<rho> \\<bind>\n                       f);\n     \\<rho> \\<in> space (state_measure V' \\<Gamma>);\n     f \\<in> state_measure V' \\<Gamma> \\<rightarrow>\\<^sub>M\n             subprob_algebra N\\<rbrakk>\n    \\<Longrightarrow> \\<integral>\\<^sup>+ x. emeasure (f x) X\n   \\<partial>density\n              (distr\n                (Pi\\<^sub>M {} (\\<lambda>x. stock_measure (\\<Gamma> x)))\n                (Pi\\<^sub>M ({} \\<union> V')\n                  (\\<lambda>x. stock_measure (\\<Gamma> x)))\n                (\\<lambda>\\<sigma>. merge {} V' (\\<sigma>, \\<rho>)))\n              (\\<lambda>_. 1) =\n                      \\<integral>\\<^sup>+ x. emeasure (f \\<rho>) X\n   \\<partial>count_space {\\<lambda>_. undefined}", "apply (subst nn_integral_density)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>X \\<in> sets\n                      (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                        \\<rho> \\<bind>\n                       f);\n     \\<rho> \\<in> space (state_measure V' \\<Gamma>);\n     f \\<in> state_measure V' \\<Gamma> \\<rightarrow>\\<^sub>M\n             subprob_algebra N\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>_. 1)\n                      \\<in> borel_measurable\n                             (distr\n                               (Pi\\<^sub>M {}\n                                 (\\<lambda>x. stock_measure (\\<Gamma> x)))\n                               (Pi\\<^sub>M ({} \\<union> V')\n                                 (\\<lambda>x. stock_measure (\\<Gamma> x)))\n                               (\\<lambda>\\<sigma>.\n                                   merge {} V' (\\<sigma>, \\<rho>)))\n 2. \\<lbrakk>X \\<in> sets\n                      (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                        \\<rho> \\<bind>\n                       f);\n     \\<rho> \\<in> space (state_measure V' \\<Gamma>);\n     f \\<in> state_measure V' \\<Gamma> \\<rightarrow>\\<^sub>M\n             subprob_algebra N\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. emeasure (f x) X)\n                      \\<in> borel_measurable\n                             (distr\n                               (Pi\\<^sub>M {}\n                                 (\\<lambda>x. stock_measure (\\<Gamma> x)))\n                               (Pi\\<^sub>M ({} \\<union> V')\n                                 (\\<lambda>x. stock_measure (\\<Gamma> x)))\n                               (\\<lambda>\\<sigma>.\n                                   merge {} V' (\\<sigma>, \\<rho>)))\n 3. \\<lbrakk>X \\<in> sets\n                      (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                        \\<rho> \\<bind>\n                       f);\n     \\<rho> \\<in> space (state_measure V' \\<Gamma>);\n     f \\<in> state_measure V' \\<Gamma> \\<rightarrow>\\<^sub>M\n             subprob_algebra N\\<rbrakk>\n    \\<Longrightarrow> \\<integral>\\<^sup>+ x. 1 * emeasure (f x) X\n   \\<partial>distr (Pi\\<^sub>M {} (\\<lambda>x. stock_measure (\\<Gamma> x)))\n              (Pi\\<^sub>M ({} \\<union> V')\n                (\\<lambda>x. stock_measure (\\<Gamma> x)))\n              (\\<lambda>\\<sigma>. merge {} V' (\\<sigma>, \\<rho>)) =\n                      \\<integral>\\<^sup>+ x. emeasure (f \\<rho>) X\n   \\<partial>count_space {\\<lambda>_. undefined}", "apply (auto intro!: measurable_compose[OF _ measurable_emeasure_subprob_algebra]\n                  simp:  state_measure_def sets_eq PiM_empty) [3]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<in> sets N;\n     \\<rho>\n     \\<in> space (Pi\\<^sub>M V' (\\<lambda>x. stock_measure (\\<Gamma> x)));\n     f \\<in> Pi\\<^sub>M V'\n              (\\<lambda>x. stock_measure (\\<Gamma> x)) \\<rightarrow>\\<^sub>M\n             subprob_algebra N\\<rbrakk>\n    \\<Longrightarrow> \\<integral>\\<^sup>+ x. emeasure (f x) X\n   \\<partial>distr (count_space {\\<lambda>_. undefined})\n              (Pi\\<^sub>M V' (\\<lambda>x. stock_measure (\\<Gamma> x)))\n              (\\<lambda>\\<sigma>. \\<rho>) =\n                      emeasure (f \\<rho>) X", "apply (subst nn_integral_distr)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>X \\<in> sets N;\n     \\<rho>\n     \\<in> space (Pi\\<^sub>M V' (\\<lambda>x. stock_measure (\\<Gamma> x)));\n     f \\<in> Pi\\<^sub>M V'\n              (\\<lambda>x. stock_measure (\\<Gamma> x)) \\<rightarrow>\\<^sub>M\n             subprob_algebra N\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>\\<sigma>. \\<rho>)\n                      \\<in> count_space\n                             {\\<lambda>_. undefined} \\<rightarrow>\\<^sub>M\n                            Pi\\<^sub>M V'\n                             (\\<lambda>x. stock_measure (\\<Gamma> x))\n 2. \\<lbrakk>X \\<in> sets N;\n     \\<rho>\n     \\<in> space (Pi\\<^sub>M V' (\\<lambda>x. stock_measure (\\<Gamma> x)));\n     f \\<in> Pi\\<^sub>M V'\n              (\\<lambda>x. stock_measure (\\<Gamma> x)) \\<rightarrow>\\<^sub>M\n             subprob_algebra N\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. emeasure (f x) X)\n                      \\<in> borel_measurable\n                             (distr (count_space {\\<lambda>_. undefined})\n                               (Pi\\<^sub>M V'\n                                 (\\<lambda>x. stock_measure (\\<Gamma> x)))\n                               (\\<lambda>\\<sigma>. \\<rho>))\n 3. \\<lbrakk>X \\<in> sets N;\n     \\<rho>\n     \\<in> space (Pi\\<^sub>M V' (\\<lambda>x. stock_measure (\\<Gamma> x)));\n     f \\<in> Pi\\<^sub>M V'\n              (\\<lambda>x. stock_measure (\\<Gamma> x)) \\<rightarrow>\\<^sub>M\n             subprob_algebra N\\<rbrakk>\n    \\<Longrightarrow> \\<integral>\\<^sup>+ x. emeasure (f \\<rho>) X\n   \\<partial>count_space {\\<lambda>_. undefined} =\n                      emeasure (f \\<rho>) X", "apply (auto intro!: measurable_compose[OF _ measurable_emeasure_subprob_algebra]\n                  simp: state_measure_def sets_eq PiM_empty)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. emeasure (f x) X\n                     \\<partial>dens_ctxt_measure\n                                ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> =\n  \\<integral>\\<^sup>+ x. emeasure (f \\<rho>) X\n                     \\<partial>count_space {\\<lambda>_. undefined}\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                  \\<rho> \\<bind>\n                 f) \\<Longrightarrow>\n       emeasure\n        (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n         f)\n        A =\n       emeasure (f \\<rho>) A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. emeasure (f x) X\n                     \\<partial>dens_ctxt_measure\n                                ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> =\n  \\<integral>\\<^sup>+ x. emeasure (f \\<rho>) X\n                     \\<partial>count_space {\\<lambda>_. undefined}\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                  \\<rho> \\<bind>\n                 f) \\<Longrightarrow>\n       emeasure\n        (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n         f)\n        A =\n       emeasure (f \\<rho>) A", "have \"... = emeasure (f \\<rho>) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. emeasure (f \\<rho>) X\n                       \\<partial>count_space {\\<lambda>_. undefined} =\n    emeasure (f \\<rho>) X", "by (subst nn_integral_count_space_finite) (simp_all add: max_def)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. emeasure (f \\<rho>) X\n                     \\<partial>count_space {\\<lambda>_. undefined} =\n  emeasure (f \\<rho>) X\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1)\n                  \\<rho> \\<bind>\n                 f) \\<Longrightarrow>\n       emeasure\n        (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n         f)\n        A =\n       emeasure (f \\<rho>) A", "finally"], ["proof (chain)\npicking this:\n  emeasure\n   (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind> f)\n   X =\n  emeasure (f \\<rho>) X", "show \"emeasure (?M \\<bind> f) X = emeasure (f \\<rho>) X\""], ["proof (prove)\nusing this:\n  emeasure\n   (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind> f)\n   X =\n  emeasure (f \\<rho>) X\n\ngoal (1 subgoal):\n 1. emeasure\n     (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind> f)\n     X =\n    emeasure (f \\<rho>) X", "."], ["proof (state)\nthis:\n  emeasure\n   (dens_ctxt_measure ({}, V', \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind> f)\n   X =\n  emeasure (f \\<rho>) X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in density_context) bind_dens_ctxt_measure_cong:\n  assumes fg: \"\\<And>\\<sigma>. (\\<And>x. x \\<in> V' \\<Longrightarrow> \\<sigma> x = \\<rho> x) \\<Longrightarrow> f \\<sigma> = g \\<sigma>\"\n  assumes \\<rho>[measurable]: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\"\n  assumes Mf[measurable]: \"f \\<in> measurable (state_measure (V \\<union> V') \\<Gamma>) (subprob_algebra N)\"\n  assumes Mg[measurable]: \"g \\<in> measurable (state_measure (V \\<union> V') \\<Gamma>) (subprob_algebra N)\"\n  defines \"M \\<equiv> dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho>\"\n  shows \"M \\<bind> f = M \\<bind> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<bind> f = M \\<bind> g", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. M \\<bind> f = M \\<bind> g", "have [measurable]: \"(\\<lambda>\\<sigma>. merge V V' (\\<sigma>, \\<rho>)) \\<in> measurable (state_measure V \\<Gamma>) (state_measure (V \\<union> V') \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. merge V V' (\\<sigma>, \\<rho>))\n    \\<in> state_measure V \\<Gamma> \\<rightarrow>\\<^sub>M\n          state_measure (V \\<union> V') \\<Gamma>", "using \\<rho>"], ["proof (prove)\nusing this:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. merge V V' (\\<sigma>, \\<rho>))\n    \\<in> state_measure V \\<Gamma> \\<rightarrow>\\<^sub>M\n          state_measure (V \\<union> V') \\<Gamma>", "unfolding state_measure_def"], ["proof (prove)\nusing this:\n  \\<rho>\n  \\<in> space (Pi\\<^sub>M V' (\\<lambda>x. stock_measure (\\<Gamma> x)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. merge V V' (\\<sigma>, \\<rho>))\n    \\<in> Pi\\<^sub>M V\n           (\\<lambda>x. stock_measure (\\<Gamma> x)) \\<rightarrow>\\<^sub>M\n          Pi\\<^sub>M (V \\<union> V')\n           (\\<lambda>x. stock_measure (\\<Gamma> x))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>\\<sigma>. merge V V' (\\<sigma>, \\<rho>))\n  \\<in> state_measure V \\<Gamma> \\<rightarrow>\\<^sub>M\n        state_measure (V \\<union> V') \\<Gamma>\n\ngoal (1 subgoal):\n 1. M \\<bind> f = M \\<bind> g", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<bind> f = M \\<bind> g", "using disjoint"], ["proof (prove)\nusing this:\n  V \\<inter> V' = {}\n\ngoal (1 subgoal):\n 1. M \\<bind> f = M \\<bind> g", "apply (simp add: M_def dens_ctxt_measure_def state_measure'_def density_distr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. V \\<inter> V' = {} \\<Longrightarrow>\n    distr\n     (density (state_measure V \\<Gamma>)\n       (\\<lambda>x. \\<delta> (merge V V' (x, \\<rho>))))\n     (state_measure (V \\<union> V') \\<Gamma>)\n     (\\<lambda>\\<sigma>. merge V V' (\\<sigma>, \\<rho>)) \\<bind>\n    f =\n    distr\n     (density (state_measure V \\<Gamma>)\n       (\\<lambda>x. \\<delta> (merge V V' (x, \\<rho>))))\n     (state_measure (V \\<union> V') \\<Gamma>)\n     (\\<lambda>\\<sigma>. merge V V' (\\<sigma>, \\<rho>)) \\<bind>\n    g", "apply (subst (1 2) bind_distr)"], ["proof (prove)\ngoal (5 subgoals):\n 1. V \\<inter> V' = {} \\<Longrightarrow>\n    (\\<lambda>\\<sigma>. merge V V' (\\<sigma>, \\<rho>))\n    \\<in> density (state_measure V \\<Gamma>)\n           (\\<lambda>x.\n               \\<delta> (merge V V' (x, \\<rho>))) \\<rightarrow>\\<^sub>M\n          state_measure (V \\<union> V') \\<Gamma>\n 2. V \\<inter> V' = {} \\<Longrightarrow>\n    g \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n            subprob_algebra ?K1\n 3. V \\<inter> V' = {} \\<Longrightarrow>\n    space\n     (density (state_measure V \\<Gamma>)\n       (\\<lambda>x. \\<delta> (merge V V' (x, \\<rho>)))) \\<noteq>\n    {}\n 4. V \\<inter> V' = {} \\<Longrightarrow>\n    f \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n            subprob_algebra ?K2\n 5. V \\<inter> V' = {} \\<Longrightarrow>\n    density (state_measure V \\<Gamma>)\n     (\\<lambda>x. \\<delta> (merge V V' (x, \\<rho>))) \\<bind>\n    (\\<lambda>x. f (merge V V' (x, \\<rho>))) =\n    density (state_measure V \\<Gamma>)\n     (\\<lambda>x. \\<delta> (merge V V' (x, \\<rho>))) \\<bind>\n    (\\<lambda>x. g (merge V V' (x, \\<rho>)))", "apply measurable"], ["proof (prove)\ngoal (1 subgoal):\n 1. V \\<inter> V' = {} \\<Longrightarrow>\n    density (state_measure V \\<Gamma>)\n     (\\<lambda>x. \\<delta> (merge V V' (x, \\<rho>))) \\<bind>\n    (\\<lambda>x. f (merge V V' (x, \\<rho>))) =\n    density (state_measure V \\<Gamma>)\n     (\\<lambda>x. \\<delta> (merge V V' (x, \\<rho>))) \\<bind>\n    (\\<lambda>x. g (merge V V' (x, \\<rho>)))", "apply (intro bind_cong_AE[where B=N] AE_I2 refl fg)"], ["proof (prove)\ngoal (3 subgoals):\n 1. V \\<inter> V' = {} \\<Longrightarrow>\n    (\\<lambda>x. f (merge V V' (x, \\<rho>)))\n    \\<in> density (state_measure V \\<Gamma>)\n           (\\<lambda>x.\n               \\<delta> (merge V V' (x, \\<rho>))) \\<rightarrow>\\<^sub>M\n          subprob_algebra N\n 2. V \\<inter> V' = {} \\<Longrightarrow>\n    (\\<lambda>x. g (merge V V' (x, \\<rho>)))\n    \\<in> density (state_measure V \\<Gamma>)\n           (\\<lambda>x.\n               \\<delta> (merge V V' (x, \\<rho>))) \\<rightarrow>\\<^sub>M\n          subprob_algebra N\n 3. \\<And>x xa.\n       \\<lbrakk>V \\<inter> V' = {};\n        x \\<in> space\n                 (density (state_measure V \\<Gamma>)\n                   (\\<lambda>x. \\<delta> (merge V V' (x, \\<rho>))));\n        xa \\<in> V'\\<rbrakk>\n       \\<Longrightarrow> merge V V' (x, \\<rho>) xa = \\<rho> xa", "apply measurable"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  M \\<bind> f = M \\<bind> g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in density_context) bin_op_randomfree_restructure:\n  assumes t1: \"\\<Gamma> \\<turnstile> e : t\" and t2: \"\\<Gamma> \\<turnstile> e' : t'\" and t3: \"op_type oper (PRODUCT t t') = Some tr\"\n  assumes rf: \"randomfree e'\" and vars1: \"free_vars e \\<subseteq> V\\<union>V'\" and vars2: \"free_vars e' \\<subseteq> V'\"\n  assumes \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\"\n  defines \"M \\<equiv> dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho>\"\n  defines \"v \\<equiv> expr_sem_rf \\<rho> e'\"\n  shows \"M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e, e'>)) =\n              distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure tr) (\\<lambda>w. op_sem oper <|w,v|>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "from assms"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> e : t\n  \\<Gamma> \\<turnstile> e' : t'\n  op_type oper (PRODUCT t t') = Some tr\n  randomfree e'\n  free_vars e \\<subseteq> V \\<union> V'\n  free_vars e' \\<subseteq> V'\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  M \\<equiv> dens_ctxt_measure \\<Y> \\<rho>\n  v \\<equiv> expr_sem_rf \\<rho> e'", "have vars1': \"\\<And>\\<sigma>. \\<sigma> \\<in> space M \\<Longrightarrow> \\<forall>x\\<in>free_vars e. val_type (\\<sigma> x) = \\<Gamma> x\"\n               and vars2': \"\\<And>\\<sigma>. \\<sigma> \\<in> space M \\<Longrightarrow> \\<forall>x\\<in>free_vars e'. val_type (\\<sigma> x) = \\<Gamma> x\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> e : t\n  \\<Gamma> \\<turnstile> e' : t'\n  op_type oper (PRODUCT t t') = Some tr\n  randomfree e'\n  free_vars e \\<subseteq> V \\<union> V'\n  free_vars e' \\<subseteq> V'\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  M \\<equiv> dens_ctxt_measure \\<Y> \\<rho>\n  v \\<equiv> expr_sem_rf \\<rho> e'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>.\n        \\<sigma> \\<in> space M \\<Longrightarrow>\n        \\<forall>x\\<in>free_vars e. val_type (\\<sigma> x) = \\<Gamma> x) &&&\n    (\\<And>\\<sigma>.\n        \\<sigma> \\<in> space M \\<Longrightarrow>\n        \\<forall>x\\<in>free_vars e'. val_type (\\<sigma> x) = \\<Gamma> x)", "by (auto simp: M_def space_dens_ctxt_measure state_measure_def space_PiM\n             dest: PiE_mem)"], ["proof (state)\nthis:\n  ?\\<sigma> \\<in> space M \\<Longrightarrow>\n  \\<forall>x\\<in>free_vars e. val_type (?\\<sigma> x) = \\<Gamma> x\n  ?\\<sigma> \\<in> space M \\<Longrightarrow>\n  \\<forall>x\\<in>free_vars e'. val_type (?\\<sigma> x) = \\<Gamma> x\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "have Me: \"(\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<in>\n                 measurable (state_measure (V \\<union> V') \\<Gamma>) (subprob_algebra (stock_measure t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n    \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n          subprob_algebra (stock_measure t)", "by (rule measurable_expr_sem[OF t1 vars1])"], ["proof (state)\nthis:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure t)\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "from assms"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> e : t\n  \\<Gamma> \\<turnstile> e' : t'\n  op_type oper (PRODUCT t t') = Some tr\n  randomfree e'\n  free_vars e \\<subseteq> V \\<union> V'\n  free_vars e' \\<subseteq> V'\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  M \\<equiv> dens_ctxt_measure \\<Y> \\<rho>\n  v \\<equiv> expr_sem_rf \\<rho> e'", "have e': \"\\<And>\\<sigma>. \\<sigma> \\<in> space M \\<Longrightarrow> expr_sem \\<sigma> e' = return_val (expr_sem_rf \\<sigma> e')\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> e : t\n  \\<Gamma> \\<turnstile> e' : t'\n  op_type oper (PRODUCT t t') = Some tr\n  randomfree e'\n  free_vars e \\<subseteq> V \\<union> V'\n  free_vars e' \\<subseteq> V'\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  M \\<equiv> dens_ctxt_measure \\<Y> \\<rho>\n  v \\<equiv> expr_sem_rf \\<rho> e'\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       \\<sigma> \\<in> space M \\<Longrightarrow>\n       expr_sem \\<sigma> e' = return_val (expr_sem_rf \\<sigma> e')", "by (intro expr_sem_rf_sound[symmetric]) (auto simp: M_def space_dens_ctxt_measure)"], ["proof (state)\nthis:\n  ?\\<sigma> \\<in> space M \\<Longrightarrow>\n  expr_sem ?\\<sigma> e' = return_val (expr_sem_rf ?\\<sigma> e')\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "from assms"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> e : t\n  \\<Gamma> \\<turnstile> e' : t'\n  op_type oper (PRODUCT t t') = Some tr\n  randomfree e'\n  free_vars e \\<subseteq> V \\<union> V'\n  free_vars e' \\<subseteq> V'\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  M \\<equiv> dens_ctxt_measure \\<Y> \\<rho>\n  v \\<equiv> expr_sem_rf \\<rho> e'", "have vt_e': \"\\<And>\\<sigma>. \\<sigma> \\<in> space M \\<Longrightarrow> val_type (expr_sem_rf \\<sigma> e') = t'\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> e : t\n  \\<Gamma> \\<turnstile> e' : t'\n  op_type oper (PRODUCT t t') = Some tr\n  randomfree e'\n  free_vars e \\<subseteq> V \\<union> V'\n  free_vars e' \\<subseteq> V'\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  M \\<equiv> dens_ctxt_measure \\<Y> \\<rho>\n  v \\<equiv> expr_sem_rf \\<rho> e'\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       \\<sigma> \\<in> space M \\<Longrightarrow>\n       val_type (expr_sem_rf \\<sigma> e') = t'", "by (intro val_type_expr_sem_rf) (auto simp: M_def space_dens_ctxt_measure)"], ["proof (state)\nthis:\n  ?\\<sigma> \\<in> space M \\<Longrightarrow>\n  val_type (expr_sem_rf ?\\<sigma> e') = t'\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "let ?tt' = \"PRODUCT t t'\""], ["proof (state)\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "fix \\<sigma>"], ["proof (state)\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "assume \\<sigma>: \"\\<sigma> \\<in> space M\""], ["proof (state)\nthis:\n  \\<sigma> \\<in> space M\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "with vars2"], ["proof (chain)\npicking this:\n  free_vars e' \\<subseteq> V'\n  \\<sigma> \\<in> space M", "have [simp]: \"measurable (expr_sem \\<sigma> e') = measurable (stock_measure t')\""], ["proof (prove)\nusing this:\n  free_vars e' \\<subseteq> V'\n  \\<sigma> \\<in> space M\n\ngoal (1 subgoal):\n 1. (\\<rightarrow>\\<^sub>M) (expr_sem \\<sigma> e') =\n    (\\<rightarrow>\\<^sub>M) (stock_measure t')", "by (intro measurable_expr_sem_eq[OF t2, of _ \"V\\<union>V'\"]) (auto simp: M_def space_dens_ctxt_measure)"], ["proof (state)\nthis:\n  (\\<rightarrow>\\<^sub>M) (expr_sem \\<sigma> e') =\n  (\\<rightarrow>\\<^sub>M) (stock_measure t')\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "from \\<sigma>"], ["proof (chain)\npicking this:\n  \\<sigma> \\<in> space M", "have [simp]: \"space (expr_sem \\<sigma> e) = space (stock_measure t)\"\n                          \"space (expr_sem \\<sigma> e') = space (stock_measure t')\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<in> space M\n\ngoal (1 subgoal):\n 1. space (expr_sem \\<sigma> e) = space (stock_measure t) &&&\n    space (expr_sem \\<sigma> e') = space (stock_measure t')", "using space_expr_sem[OF t1 vars1'[OF \\<sigma>]] space_expr_sem[OF t2 vars2'[OF \\<sigma>]]"], ["proof (prove)\nusing this:\n  \\<sigma> \\<in> space M\n  space (expr_sem \\<sigma> e) = type_universe t\n  space (expr_sem \\<sigma> e') = type_universe t'\n\ngoal (1 subgoal):\n 1. space (expr_sem \\<sigma> e) = space (stock_measure t) &&&\n    space (expr_sem \\<sigma> e') = space (stock_measure t')", "by simp_all"], ["proof (state)\nthis:\n  space (expr_sem \\<sigma> e) = space (stock_measure t)\n  space (expr_sem \\<sigma> e') = space (stock_measure t')\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "have \"expr_sem \\<sigma> e \\<bind> (\\<lambda>x. expr_sem \\<sigma> e' \\<bind> (\\<lambda>y. return_val <| x ,  y |>)) =\n            expr_sem \\<sigma> e \\<bind> (\\<lambda>x. return_val (expr_sem_rf \\<sigma> e') \\<bind> (\\<lambda>y. return_val <| x ,  y |>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expr_sem \\<sigma> e \\<bind>\n    (\\<lambda>x.\n        expr_sem \\<sigma> e' \\<bind> (\\<lambda>y. return_val <|x, y|>)) =\n    expr_sem \\<sigma> e \\<bind>\n    (\\<lambda>x.\n        return_val (expr_sem_rf \\<sigma> e') \\<bind>\n        (\\<lambda>y. return_val <|x, y|>))", "by (intro bind_cong refl, subst e'[OF \\<sigma>]) simp"], ["proof (state)\nthis:\n  expr_sem \\<sigma> e \\<bind>\n  (\\<lambda>x.\n      expr_sem \\<sigma> e' \\<bind> (\\<lambda>y. return_val <|x, y|>)) =\n  expr_sem \\<sigma> e \\<bind>\n  (\\<lambda>x.\n      return_val (expr_sem_rf \\<sigma> e') \\<bind>\n      (\\<lambda>y. return_val <|x, y|>))\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "also"], ["proof (state)\nthis:\n  expr_sem \\<sigma> e \\<bind>\n  (\\<lambda>x.\n      expr_sem \\<sigma> e' \\<bind> (\\<lambda>y. return_val <|x, y|>)) =\n  expr_sem \\<sigma> e \\<bind>\n  (\\<lambda>x.\n      return_val (expr_sem_rf \\<sigma> e') \\<bind>\n      (\\<lambda>y. return_val <|x, y|>))\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "have \"... = expr_sem \\<sigma> e \\<bind> (\\<lambda>x. return_val <|x , expr_sem_rf \\<sigma> e'|>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expr_sem \\<sigma> e \\<bind>\n    (\\<lambda>x.\n        return_val (expr_sem_rf \\<sigma> e') \\<bind>\n        (\\<lambda>y. return_val <|x, y|>)) =\n    expr_sem \\<sigma> e \\<bind>\n    (\\<lambda>x. return_val <|x, expr_sem_rf \\<sigma> e'|>)", "using \\<sigma> vars2"], ["proof (prove)\nusing this:\n  \\<sigma> \\<in> space M\n  free_vars e' \\<subseteq> V'\n\ngoal (1 subgoal):\n 1. expr_sem \\<sigma> e \\<bind>\n    (\\<lambda>x.\n        return_val (expr_sem_rf \\<sigma> e') \\<bind>\n        (\\<lambda>y. return_val <|x, y|>)) =\n    expr_sem \\<sigma> e \\<bind>\n    (\\<lambda>x. return_val <|x, expr_sem_rf \\<sigma> e'|>)", "by (intro bind_cong refl, subst bind_return_val'[of _ t' _ ?tt'])\n         (auto simp: vt_e' M_def space_dens_ctxt_measure\n               intro!: measurable_PairVal)"], ["proof (state)\nthis:\n  expr_sem \\<sigma> e \\<bind>\n  (\\<lambda>x.\n      return_val (expr_sem_rf \\<sigma> e') \\<bind>\n      (\\<lambda>y. return_val <|x, y|>)) =\n  expr_sem \\<sigma> e \\<bind>\n  (\\<lambda>x. return_val <|x, expr_sem_rf \\<sigma> e'|>)\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "finally"], ["proof (chain)\npicking this:\n  expr_sem \\<sigma> e \\<bind>\n  (\\<lambda>x.\n      expr_sem \\<sigma> e' \\<bind> (\\<lambda>y. return_val <|x, y|>)) =\n  expr_sem \\<sigma> e \\<bind>\n  (\\<lambda>x. return_val <|x, expr_sem_rf \\<sigma> e'|>)", "have \"expr_sem \\<sigma> e \\<bind> (\\<lambda>x. expr_sem \\<sigma> e' \\<bind> (\\<lambda>y. return_val <|x,y|>)) =\n                     expr_sem \\<sigma> e \\<bind> (\\<lambda>x. return_val <|x, expr_sem_rf \\<sigma> e'|>)\""], ["proof (prove)\nusing this:\n  expr_sem \\<sigma> e \\<bind>\n  (\\<lambda>x.\n      expr_sem \\<sigma> e' \\<bind> (\\<lambda>y. return_val <|x, y|>)) =\n  expr_sem \\<sigma> e \\<bind>\n  (\\<lambda>x. return_val <|x, expr_sem_rf \\<sigma> e'|>)\n\ngoal (1 subgoal):\n 1. expr_sem \\<sigma> e \\<bind>\n    (\\<lambda>x.\n        expr_sem \\<sigma> e' \\<bind> (\\<lambda>y. return_val <|x, y|>)) =\n    expr_sem \\<sigma> e \\<bind>\n    (\\<lambda>x. return_val <|x, expr_sem_rf \\<sigma> e'|>)", "."], ["proof (state)\nthis:\n  expr_sem \\<sigma> e \\<bind>\n  (\\<lambda>x.\n      expr_sem \\<sigma> e' \\<bind> (\\<lambda>y. return_val <|x, y|>)) =\n  expr_sem \\<sigma> e \\<bind>\n  (\\<lambda>x. return_val <|x, expr_sem_rf \\<sigma> e'|>)\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "}"], ["proof (state)\nthis:\n  ?\\<sigma>2 \\<in> space M \\<Longrightarrow>\n  expr_sem ?\\<sigma>2 e \\<bind>\n  (\\<lambda>x.\n      expr_sem ?\\<sigma>2 e' \\<bind> (\\<lambda>y. return_val <|x, y|>)) =\n  expr_sem ?\\<sigma>2 e \\<bind>\n  (\\<lambda>x. return_val <|x, expr_sem_rf ?\\<sigma>2 e'|>)\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "hence \"M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e, e'>)) =\n             M \\<bind> (\\<lambda>\\<sigma>. (expr_sem \\<sigma> e \\<bind> (\\<lambda>x. return_val <|x, expr_sem_rf \\<sigma> e'|>))\n                   \\<bind> (\\<lambda>x. return_val (op_sem oper x)))\" (is \"_ = ?T\")"], ["proof (prove)\nusing this:\n  ?\\<sigma>2 \\<in> space M \\<Longrightarrow>\n  expr_sem ?\\<sigma>2 e \\<bind>\n  (\\<lambda>x.\n      expr_sem ?\\<sigma>2 e' \\<bind> (\\<lambda>y. return_val <|x, y|>)) =\n  expr_sem ?\\<sigma>2 e \\<bind>\n  (\\<lambda>x. return_val <|x, expr_sem_rf ?\\<sigma>2 e'|>)\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    M \\<bind>\n    (\\<lambda>\\<sigma>.\n        expr_sem \\<sigma> e \\<bind>\n        (\\<lambda>x. return_val <|x, expr_sem_rf \\<sigma> e'|>) \\<bind>\n        (\\<lambda>x. return_val (op_sem oper x)))", "by (intro bind_cong refl) (simp only: expr_sem.simps)"], ["proof (state)\nthis:\n  M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n  M \\<bind>\n  (\\<lambda>\\<sigma>.\n      expr_sem \\<sigma> e \\<bind>\n      (\\<lambda>x. return_val <|x, expr_sem_rf \\<sigma> e'|>) \\<bind>\n      (\\<lambda>x. return_val (op_sem oper x)))\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "also"], ["proof (state)\nthis:\n  M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n  M \\<bind>\n  (\\<lambda>\\<sigma>.\n      expr_sem \\<sigma> e \\<bind>\n      (\\<lambda>x. return_val <|x, expr_sem_rf \\<sigma> e'|>) \\<bind>\n      (\\<lambda>x. return_val (op_sem oper x)))\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "have [measurable]: \"\\<And>\\<sigma>. \\<sigma> \\<in> space M \\<Longrightarrow> expr_sem_rf \\<sigma> e' \\<in> space t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       \\<sigma> \\<in> space M \\<Longrightarrow>\n       expr_sem_rf \\<sigma> e' \\<in> space (stock_measure t')", "by (simp add: type_universe_def vt_e' del: type_universe_type)"], ["proof (state)\nthis:\n  ?\\<sigma> \\<in> space M \\<Longrightarrow>\n  expr_sem_rf ?\\<sigma> e' \\<in> space (stock_measure t')\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "note [measurable] = measurable_op_sem[OF t3]"], ["proof (state)\nthis:\n  op_sem oper\n  \\<in> stock_measure (PRODUCT t t') \\<rightarrow>\\<^sub>M stock_measure tr\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "hence  \"?T = M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e \\<bind> (\\<lambda>x. return_val (op_sem oper <|x, expr_sem_rf \\<sigma> e'|>)))\"\n    (is \"_ = ?T\")"], ["proof (prove)\nusing this:\n  op_sem oper\n  \\<in> stock_measure (PRODUCT t t') \\<rightarrow>\\<^sub>M stock_measure tr\n\ngoal (1 subgoal):\n 1. M \\<bind>\n    (\\<lambda>\\<sigma>.\n        expr_sem \\<sigma> e \\<bind>\n        (\\<lambda>x. return_val <|x, expr_sem_rf \\<sigma> e'|>) \\<bind>\n        (\\<lambda>x. return_val (op_sem oper x))) =\n    M \\<bind>\n    (\\<lambda>\\<sigma>.\n        expr_sem \\<sigma> e \\<bind>\n        (\\<lambda>x.\n            return_val (op_sem oper <|x, expr_sem_rf \\<sigma> e'|>)))", "by (intro bind_cong[OF refl], subst bind_assoc_return_val[of _ t _ ?tt' _ tr])\n       (auto simp: sets_expr_sem[OF t1 vars1'])"], ["proof (state)\nthis:\n  M \\<bind>\n  (\\<lambda>\\<sigma>.\n      expr_sem \\<sigma> e \\<bind>\n      (\\<lambda>x. return_val <|x, expr_sem_rf \\<sigma> e'|>) \\<bind>\n      (\\<lambda>x. return_val (op_sem oper x))) =\n  M \\<bind>\n  (\\<lambda>\\<sigma>.\n      expr_sem \\<sigma> e \\<bind>\n      (\\<lambda>x. return_val (op_sem oper <|x, expr_sem_rf \\<sigma> e'|>)))\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "also"], ["proof (state)\nthis:\n  M \\<bind>\n  (\\<lambda>\\<sigma>.\n      expr_sem \\<sigma> e \\<bind>\n      (\\<lambda>x. return_val <|x, expr_sem_rf \\<sigma> e'|>) \\<bind>\n      (\\<lambda>x. return_val (op_sem oper x))) =\n  M \\<bind>\n  (\\<lambda>\\<sigma>.\n      expr_sem \\<sigma> e \\<bind>\n      (\\<lambda>x. return_val (op_sem oper <|x, expr_sem_rf \\<sigma> e'|>)))\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "have eq: \"\\<And>\\<sigma>. (\\<And>x. x \\<in> V' \\<Longrightarrow> \\<sigma> x = \\<rho> x) \\<Longrightarrow> expr_sem_rf \\<sigma> e' = expr_sem_rf \\<rho> e'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       (\\<And>x.\n           x \\<in> V' \\<Longrightarrow>\n           \\<sigma> x = \\<rho> x) \\<Longrightarrow>\n       expr_sem_rf \\<sigma> e' = expr_sem_rf \\<rho> e'", "using vars2"], ["proof (prove)\nusing this:\n  free_vars e' \\<subseteq> V'\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       (\\<And>x.\n           x \\<in> V' \\<Longrightarrow>\n           \\<sigma> x = \\<rho> x) \\<Longrightarrow>\n       expr_sem_rf \\<sigma> e' = expr_sem_rf \\<rho> e'", "by (intro expr_sem_rf_eq_on_vars) auto"], ["proof (state)\nthis:\n  (\\<And>x.\n      x \\<in> V' \\<Longrightarrow> ?\\<sigma> x = \\<rho> x) \\<Longrightarrow>\n  expr_sem_rf ?\\<sigma> e' = expr_sem_rf \\<rho> e'\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "have [measurable]: \"(\\<lambda>\\<sigma>. expr_sem_rf \\<sigma> e') \\<in> measurable (state_measure (V \\<union> V') \\<Gamma>) (stock_measure t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. expr_sem_rf \\<sigma> e')\n    \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n          stock_measure t'", "using vars2"], ["proof (prove)\nusing this:\n  free_vars e' \\<subseteq> V'\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. expr_sem_rf \\<sigma> e')\n    \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n          stock_measure t'", "by (intro measurable_expr_sem_rf[OF t2 rf]) blast"], ["proof (state)\nthis:\n  (\\<lambda>\\<sigma>. expr_sem_rf \\<sigma> e')\n  \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n        stock_measure t'\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "note [measurable] = Me measurable_bind measurable_return_val"], ["proof (state)\nthis:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure t)\n  \\<lbrakk>?f \\<in> ?M \\<rightarrow>\\<^sub>M subprob_algebra ?N;\n   (\\<lambda>x. ?g (fst x) (snd x))\n   \\<in> ?M \\<Otimes>\\<^sub>M ?N \\<rightarrow>\\<^sub>M\n         subprob_algebra ?R\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. ?f x \\<bind> ?g x)\n                    \\<in> ?M \\<rightarrow>\\<^sub>M subprob_algebra ?R\n  return_val\n  \\<in> stock_measure ?t \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure ?t)\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "have expr_sem_rf_space: \"expr_sem_rf \\<rho> e' \\<in> space (stock_measure t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expr_sem_rf \\<rho> e' \\<in> space (stock_measure t')", "using val_type_expr_sem_rf[OF t2 rf vars2 \\<rho>]"], ["proof (prove)\nusing this:\n  val_type (expr_sem_rf \\<rho> e') = t'\n\ngoal (1 subgoal):\n 1. expr_sem_rf \\<rho> e' \\<in> space (stock_measure t')", "by (simp add: type_universe_def del: type_universe_type)"], ["proof (state)\nthis:\n  expr_sem_rf \\<rho> e' \\<in> space (stock_measure t')\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "hence \"?T = M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e \\<bind> (\\<lambda>x. return_val (op_sem oper <|x,  expr_sem_rf \\<rho> e'|>)))\""], ["proof (prove)\nusing this:\n  expr_sem_rf \\<rho> e' \\<in> space (stock_measure t')\n\ngoal (1 subgoal):\n 1. M \\<bind>\n    (\\<lambda>\\<sigma>.\n        expr_sem \\<sigma> e \\<bind>\n        (\\<lambda>x.\n            return_val (op_sem oper <|x, expr_sem_rf \\<sigma> e'|>))) =\n    M \\<bind>\n    (\\<lambda>\\<sigma>.\n        expr_sem \\<sigma> e \\<bind>\n        (\\<lambda>x. return_val (op_sem oper <|x, expr_sem_rf \\<rho> e'|>)))", "using \\<rho>"], ["proof (prove)\nusing this:\n  expr_sem_rf \\<rho> e' \\<in> space (stock_measure t')\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. M \\<bind>\n    (\\<lambda>\\<sigma>.\n        expr_sem \\<sigma> e \\<bind>\n        (\\<lambda>x.\n            return_val (op_sem oper <|x, expr_sem_rf \\<sigma> e'|>))) =\n    M \\<bind>\n    (\\<lambda>\\<sigma>.\n        expr_sem \\<sigma> e \\<bind>\n        (\\<lambda>x. return_val (op_sem oper <|x, expr_sem_rf \\<rho> e'|>)))", "unfolding M_def"], ["proof (prove)\nusing this:\n  expr_sem_rf \\<rho> e' \\<in> space (stock_measure t')\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        expr_sem \\<sigma> e \\<bind>\n        (\\<lambda>x.\n            return_val (op_sem oper <|x, expr_sem_rf \\<sigma> e'|>))) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        expr_sem \\<sigma> e \\<bind>\n        (\\<lambda>x. return_val (op_sem oper <|x, expr_sem_rf \\<rho> e'|>)))", "by (intro bind_dens_ctxt_measure_cong, subst eq) (simp, simp, simp, measurable)"], ["proof (state)\nthis:\n  M \\<bind>\n  (\\<lambda>\\<sigma>.\n      expr_sem \\<sigma> e \\<bind>\n      (\\<lambda>x.\n          return_val (op_sem oper <|x, expr_sem_rf \\<sigma> e'|>))) =\n  M \\<bind>\n  (\\<lambda>\\<sigma>.\n      expr_sem \\<sigma> e \\<bind>\n      (\\<lambda>x. return_val (op_sem oper <|x, expr_sem_rf \\<rho> e'|>)))\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "also"], ["proof (state)\nthis:\n  M \\<bind>\n  (\\<lambda>\\<sigma>.\n      expr_sem \\<sigma> e \\<bind>\n      (\\<lambda>x.\n          return_val (op_sem oper <|x, expr_sem_rf \\<sigma> e'|>))) =\n  M \\<bind>\n  (\\<lambda>\\<sigma>.\n      expr_sem \\<sigma> e \\<bind>\n      (\\<lambda>x. return_val (op_sem oper <|x, expr_sem_rf \\<rho> e'|>)))\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "have \"... = (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) \\<bind>\n                         return_val \\<circ> (\\<lambda>x. op_sem oper <|x, expr_sem_rf \\<rho> e'|>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<bind>\n    (\\<lambda>\\<sigma>.\n        expr_sem \\<sigma> e \\<bind>\n        (\\<lambda>x.\n            return_val (op_sem oper <|x, expr_sem_rf \\<rho> e'|>))) =\n    M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<bind>\n    return_val \\<circ>\n    (\\<lambda>x. op_sem oper <|x, expr_sem_rf \\<rho> e'|>)", "using expr_sem_rf_space"], ["proof (prove)\nusing this:\n  expr_sem_rf \\<rho> e' \\<in> space (stock_measure t')\n\ngoal (1 subgoal):\n 1. M \\<bind>\n    (\\<lambda>\\<sigma>.\n        expr_sem \\<sigma> e \\<bind>\n        (\\<lambda>x.\n            return_val (op_sem oper <|x, expr_sem_rf \\<rho> e'|>))) =\n    M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<bind>\n    return_val \\<circ>\n    (\\<lambda>x. op_sem oper <|x, expr_sem_rf \\<rho> e'|>)", "by (subst bind_assoc[of _ _ \"stock_measure t\" _ \"stock_measure tr\", symmetric])\n         (simp_all add: M_def measurable_dens_ctxt_measure_eq o_def)"], ["proof (state)\nthis:\n  M \\<bind>\n  (\\<lambda>\\<sigma>.\n      expr_sem \\<sigma> e \\<bind>\n      (\\<lambda>x. return_val (op_sem oper <|x, expr_sem_rf \\<rho> e'|>))) =\n  M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<bind>\n  return_val \\<circ> (\\<lambda>x. op_sem oper <|x, expr_sem_rf \\<rho> e'|>)\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "also"], ["proof (state)\nthis:\n  M \\<bind>\n  (\\<lambda>\\<sigma>.\n      expr_sem \\<sigma> e \\<bind>\n      (\\<lambda>x. return_val (op_sem oper <|x, expr_sem_rf \\<rho> e'|>))) =\n  M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<bind>\n  return_val \\<circ> (\\<lambda>x. op_sem oper <|x, expr_sem_rf \\<rho> e'|>)\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "have \"... = distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure tr)\n                      (\\<lambda>x. op_sem oper <|x, expr_sem_rf \\<rho> e'|>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<bind>\n    return_val \\<circ>\n    (\\<lambda>x. op_sem oper <|x, expr_sem_rf \\<rho> e'|>) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr)\n     (\\<lambda>x. op_sem oper <|x, expr_sem_rf \\<rho> e'|>)", "using Me expr_sem_rf_space"], ["proof (prove)\nusing this:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure t)\n  expr_sem_rf \\<rho> e' \\<in> space (stock_measure t')\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<bind>\n    return_val \\<circ>\n    (\\<lambda>x. op_sem oper <|x, expr_sem_rf \\<rho> e'|>) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr)\n     (\\<lambda>x. op_sem oper <|x, expr_sem_rf \\<rho> e'|>)", "by (subst bind_return_val_distr[of _ t _ tr])\n       (simp_all add: M_def sets_expr_sem[OF t1 vars1'])"], ["proof (state)\nthis:\n  M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<bind>\n  return_val \\<circ>\n  (\\<lambda>x. op_sem oper <|x, expr_sem_rf \\<rho> e'|>) =\n  distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure tr) (\\<lambda>x. op_sem oper <|x, expr_sem_rf \\<rho> e'|>)\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "finally"], ["proof (chain)\npicking this:\n  M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n  distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure tr) (\\<lambda>x. op_sem oper <|x, expr_sem_rf \\<rho> e'|>)", "show ?thesis"], ["proof (prove)\nusing this:\n  M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n  distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure tr) (\\<lambda>x. op_sem oper <|x, expr_sem_rf \\<rho> e'|>)\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)", "unfolding v_def"], ["proof (prove)\nusing this:\n  M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n  distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure tr) (\\<lambda>x. op_sem oper <|x, expr_sem_rf \\<rho> e'|>)\n\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n    distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure tr)\n     (\\<lambda>w. op_sem oper <|w, expr_sem_rf \\<rho> e'|>)", "."], ["proof (state)\nthis:\n  M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ <e ,  e'>)) =\n  distr (M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure tr) (\\<lambda>w. op_sem oper <|w, v|>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma addc_density_measurable:\n  assumes Mf: \"case_prod f \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\"\n  assumes t_disj: \"t = REAL \\<or> t = INTEG\" and t: \"\\<Gamma> \\<turnstile> e' : t\"\n  assumes rf: \"randomfree e'\" and vars: \"free_vars e' \\<subseteq> V'\"\n  defines \"f' \\<equiv> (\\<lambda>\\<rho> x. f \\<rho> (op_sem Add <|x, expr_sem_rf \\<rho> (Minus $$ e')|>))\"\n  shows \"case_prod f' \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "proof (insert t_disj, elim disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n 2. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "assume A: \"t = REAL\""], ["proof (state)\nthis:\n  t = REAL\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n 2. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "from A and t"], ["proof (chain)\npicking this:\n  t = REAL\n  \\<Gamma> \\<turnstile> e' : t", "have t': \"\\<Gamma> \\<turnstile> e' : REAL\""], ["proof (prove)\nusing this:\n  t = REAL\n  \\<Gamma> \\<turnstile> e' : t\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> e' : REAL", "by simp"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> e' : REAL\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n 2. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "with rf vars"], ["proof (chain)\npicking this:\n  randomfree e'\n  free_vars e' \\<subseteq> V'\n  \\<Gamma> \\<turnstile> e' : REAL", "have vt_e':\n    \"\\<And>\\<rho>. \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow> val_type (expr_sem_rf \\<rho> e') = REAL\""], ["proof (prove)\nusing this:\n  randomfree e'\n  free_vars e' \\<subseteq> V'\n  \\<Gamma> \\<turnstile> e' : REAL\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho>.\n       \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       val_type (expr_sem_rf \\<rho> e') = REAL", "by (intro val_type_expr_sem_rf) simp_all"], ["proof (state)\nthis:\n  ?\\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  val_type (expr_sem_rf ?\\<rho> e') = REAL\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n 2. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "let ?f' = \"\\<lambda>\\<sigma> x. let c = expr_sem_rf \\<sigma> e'\n                    in  f \\<sigma> (RealVal (extract_real x - extract_real c))\""], ["proof (state)\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n 2. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "note Mf[unfolded A, measurable] and rf[measurable] and vars[measurable] and t[unfolded A, measurable]"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). f x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure REAL)\n  randomfree e'\n  free_vars e' \\<subseteq> V'\n  \\<Gamma> \\<turnstile> e' : REAL\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n 2. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "have \"case_prod ?f' \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<sigma>, x).\n        let c = expr_sem_rf \\<sigma> e'\n        in f \\<sigma> (RealVal (extract_real x - extract_real c)))\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "unfolding Let_def A"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<sigma>, x).\n        f \\<sigma>\n         (RealVal\n           (extract_real x - extract_real (expr_sem_rf \\<sigma> e'))))\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure REAL)", "by measurable"], ["proof (state)\nthis:\n  (\\<lambda>(\\<sigma>, x).\n      let c = expr_sem_rf \\<sigma> e'\n      in f \\<sigma> (RealVal (extract_real x - extract_real c)))\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n 2. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "also"], ["proof (state)\nthis:\n  (\\<lambda>(\\<sigma>, x).\n      let c = expr_sem_rf \\<sigma> e'\n      in f \\<sigma> (RealVal (extract_real x - extract_real c)))\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n 2. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "have \"case_prod ?f' \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t) \\<longleftrightarrow>\n                case_prod f' \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>(\\<sigma>, x).\n         let c = expr_sem_rf \\<sigma> e'\n         in f \\<sigma> (RealVal (extract_real x - extract_real c)))\n     \\<in> borel_measurable\n            (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)) =\n    ((\\<lambda>(x, y). f' x y)\n     \\<in> borel_measurable\n            (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t))", "by (intro measurable_cong)\n       (auto simp: Let_def space_pair_measure A space_embed_measure f'_def lift_RealIntVal2_def\n                   lift_RealIntVal_def extract_real_def\n             dest!: vt_e' split: val.split)"], ["proof (state)\nthis:\n  ((\\<lambda>(\\<sigma>, x).\n       let c = expr_sem_rf \\<sigma> e'\n       in f \\<sigma> (RealVal (extract_real x - extract_real c)))\n   \\<in> borel_measurable\n          (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)) =\n  ((\\<lambda>(x, y). f' x y)\n   \\<in> borel_measurable\n          (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t))\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n 2. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>(x, y). f' x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>(x, y). f' x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "."], ["proof (state)\nthis:\n  (\\<lambda>(x, y). f' x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "assume A: \"t = INTEG\""], ["proof (state)\nthis:\n  t = INTEG\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "with t"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> e' : t\n  t = INTEG", "have t': \"\\<Gamma> \\<turnstile> e' : INTEG\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> e' : t\n  t = INTEG\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> e' : INTEG", "by simp"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> e' : INTEG\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "with rf vars"], ["proof (chain)\npicking this:\n  randomfree e'\n  free_vars e' \\<subseteq> V'\n  \\<Gamma> \\<turnstile> e' : INTEG", "have vt_e':\n    \"\\<And>\\<rho>. \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow> val_type (expr_sem_rf \\<rho> e') = INTEG\""], ["proof (prove)\nusing this:\n  randomfree e'\n  free_vars e' \\<subseteq> V'\n  \\<Gamma> \\<turnstile> e' : INTEG\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho>.\n       \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       val_type (expr_sem_rf \\<rho> e') = INTEG", "by (intro val_type_expr_sem_rf) simp_all"], ["proof (state)\nthis:\n  ?\\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  val_type (expr_sem_rf ?\\<rho> e') = INTEG\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "let ?f' = \"\\<lambda>\\<sigma> x. let c = expr_sem_rf \\<sigma> e'\n                    in  f \\<sigma> (IntVal (extract_int x - extract_int c))\""], ["proof (state)\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "note Mf[unfolded A, measurable] and rf[measurable] and vars[measurable] and t[unfolded A, measurable]"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). f x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure INTEG)\n  randomfree e'\n  free_vars e' \\<subseteq> V'\n  \\<Gamma> \\<turnstile> e' : INTEG\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "have Mdiff: \"case_prod ((-) :: int \\<Rightarrow> _) \\<in>\n                 measurable (count_space UNIV \\<Otimes>\\<^sub>M count_space UNIV) (count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). x - y)\n    \\<in> count_space UNIV \\<Otimes>\\<^sub>M\n          count_space UNIV \\<rightarrow>\\<^sub>M\n          count_space UNIV", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). x - y)\n  \\<in> count_space UNIV \\<Otimes>\\<^sub>M\n        count_space UNIV \\<rightarrow>\\<^sub>M\n        count_space UNIV\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "have \"case_prod ?f' \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<sigma>, x).\n        let c = expr_sem_rf \\<sigma> e'\n        in f \\<sigma> (IntVal (extract_int x - extract_int c)))\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "unfolding Let_def A"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<sigma>, x).\n        f \\<sigma>\n         (IntVal (extract_int x - extract_int (expr_sem_rf \\<sigma> e'))))\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure INTEG)", "by measurable"], ["proof (state)\nthis:\n  (\\<lambda>(\\<sigma>, x).\n      let c = expr_sem_rf \\<sigma> e'\n      in f \\<sigma> (IntVal (extract_int x - extract_int c)))\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "also"], ["proof (state)\nthis:\n  (\\<lambda>(\\<sigma>, x).\n      let c = expr_sem_rf \\<sigma> e'\n      in f \\<sigma> (IntVal (extract_int x - extract_int c)))\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "have \"case_prod ?f' \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t) \\<longleftrightarrow>\n                case_prod f' \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>(\\<sigma>, x).\n         let c = expr_sem_rf \\<sigma> e'\n         in f \\<sigma> (IntVal (extract_int x - extract_int c)))\n     \\<in> borel_measurable\n            (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)) =\n    ((\\<lambda>(x, y). f' x y)\n     \\<in> borel_measurable\n            (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t))", "by (intro measurable_cong)\n       (auto simp: Let_def space_pair_measure A space_embed_measure f'_def lift_RealIntVal2_def\n                   lift_RealIntVal_def extract_int_def\n             dest!: vt_e' split: val.split)"], ["proof (state)\nthis:\n  ((\\<lambda>(\\<sigma>, x).\n       let c = expr_sem_rf \\<sigma> e'\n       in f \\<sigma> (IntVal (extract_int x - extract_int c)))\n   \\<in> borel_measurable\n          (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)) =\n  ((\\<lambda>(x, y). f' x y)\n   \\<in> borel_measurable\n          (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t))\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>(x, y). f' x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>(x, y). f' x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). f' x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "."], ["proof (state)\nthis:\n  (\\<lambda>(x, y). f' x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in density_context) emeasure_bind_if_dens_ctxt_measure:\n  assumes \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\"\n  defines \"M \\<equiv> dens_ctxt_measure \\<Y> \\<rho>\"\n  assumes Mf[measurable]: \"f \\<in> measurable M (subprob_algebra (stock_measure BOOL))\"\n  assumes Mg[measurable]: \"g \\<in> measurable M (subprob_algebra R)\"\n  assumes Mh[measurable]: \"h \\<in> measurable M (subprob_algebra R)\"\n  assumes densf: \"has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n                      f (stock_measure BOOL) \\<delta>f\"\n  assumes densg: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n                      (\\<lambda>\\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,\\<lambda>\\<sigma>. \\<delta> \\<sigma> * \\<delta>f \\<sigma> (BoolVal True)) \\<rho> \\<bind> g) R \\<delta>g\"\n  assumes densh: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n                      (\\<lambda>\\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,\\<lambda>\\<sigma>. \\<delta> \\<sigma> * \\<delta>f \\<sigma> (BoolVal False)) \\<rho> \\<bind> h) R \\<delta>h\"\n  defines \"P \\<equiv> \\<lambda>b. b = BoolVal True\"\n  shows \"M \\<bind> (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)) = density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)\"\n          (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<bind>\n    (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)) =\n    density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)", "proof (intro measure_eqI)"], ["proof (state)\ngoal (2 subgoals):\n 1. sets\n     (M \\<bind>\n      (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x))) =\n    sets (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))\n 2. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have sets_lhs: \"sets ?lhs = sets R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets\n     (M \\<bind>\n      (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x))) =\n    sets R", "apply (subst sets_bind_measurable[of _ _ R])"], ["proof (prove)\ngoal (3 subgoals):\n 1. (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x))\n    \\<in> M \\<rightarrow>\\<^sub>M subprob_algebra R\n 2. space M \\<noteq> {}\n 3. sets R = sets R", "apply measurable"], ["proof (prove)\ngoal (3 subgoals):\n 1. Measurable.pred (M \\<Otimes>\\<^sub>M stock_measure BOOL)\n     (\\<lambda>x. P (snd x))\n 2. space M \\<noteq> {}\n 3. sets R = sets R", "apply (simp_all add: P_def M_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  sets\n   (M \\<bind>\n    (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x))) =\n  sets R\n\ngoal (2 subgoals):\n 1. sets\n     (M \\<bind>\n      (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x))) =\n    sets (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))\n 2. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "thus \"sets ?lhs = sets ?rhs\""], ["proof (prove)\nusing this:\n  sets\n   (M \\<bind>\n    (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x))) =\n  sets R\n\ngoal (1 subgoal):\n 1. sets\n     (M \\<bind>\n      (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x))) =\n    sets (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))", "by simp"], ["proof (state)\nthis:\n  sets\n   (M \\<bind>\n    (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x))) =\n  sets (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "assume \"X \\<in> sets ?lhs\""], ["proof (state)\nthis:\n  X \\<in> sets\n           (M \\<bind>\n            (\\<lambda>x.\n                f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "hence X: \"X \\<in> sets R\""], ["proof (prove)\nusing this:\n  X \\<in> sets\n           (M \\<bind>\n            (\\<lambda>x.\n                f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n\ngoal (1 subgoal):\n 1. X \\<in> sets R", "by (simp only: sets_lhs)"], ["proof (state)\nthis:\n  X \\<in> sets R\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "from Mf"], ["proof (chain)\npicking this:\n  f \\<in> M \\<rightarrow>\\<^sub>M subprob_algebra (stock_measure BOOL)", "have [simp]: \"\\<And>x. x \\<in> space M \\<Longrightarrow> sets (f x) = sets (stock_measure BOOL)\""], ["proof (prove)\nusing this:\n  f \\<in> M \\<rightarrow>\\<^sub>M subprob_algebra (stock_measure BOOL)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space M \\<Longrightarrow>\n       sets (f x) = sets (stock_measure BOOL)", "by (rule sets_kernel)"], ["proof (state)\nthis:\n  ?x \\<in> space M \\<Longrightarrow> sets (f ?x) = sets (stock_measure BOOL)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "note [simp] = sets_eq_imp_space_eq[OF this]"], ["proof (state)\nthis:\n  ?x1 \\<in> space M \\<Longrightarrow>\n  space (f ?x1) = space (stock_measure BOOL)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "from has_parametrized_subprob_densityD(3)[OF densf]"], ["proof (chain)\npicking this:\n  (\\<lambda>(x, y). \\<delta>f x y)\n  \\<in> borel_measurable\n         (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n          stock_measure BOOL)", "have M\\<delta>f[measurable]: \"(\\<lambda>(x, y). \\<delta>f x y)\n        \\<in> borel_measurable (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M stock_measure BOOL)\""], ["proof (prove)\nusing this:\n  (\\<lambda>(x, y). \\<delta>f x y)\n  \\<in> borel_measurable\n         (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n          stock_measure BOOL)\n\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). \\<delta>f x y)\n    \\<in> borel_measurable\n           (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n            stock_measure BOOL)", "by (simp add: M_def dens_ctxt_measure_def state_measure'_def)"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). \\<delta>f x y)\n  \\<in> borel_measurable\n         (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n          stock_measure BOOL)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have [measurable]: \"Measurable.pred (stock_measure BOOL) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Measurable.pred (stock_measure BOOL) P", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Measurable.pred (stock_measure BOOL) (\\<lambda>b. b = TRUE)", "by simp"], ["proof (state)\nthis:\n  Measurable.pred (stock_measure BOOL) P\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have BoolVal_in_space: \"BoolVal True \\<in> space (stock_measure BOOL)\"\n                         \"BoolVal False \\<in> space (stock_measure BOOL)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. TRUE \\<in> space (stock_measure BOOL) &&&\n    FALSE \\<in> space (stock_measure BOOL)", "by auto"], ["proof (state)\nthis:\n  TRUE \\<in> space (stock_measure BOOL)\n  FALSE \\<in> space (stock_measure BOOL)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "from Mg"], ["proof (chain)\npicking this:\n  g \\<in> M \\<rightarrow>\\<^sub>M subprob_algebra R", "have Mg'[measurable]: \"g \\<in> measurable (state_measure (V \\<union> V') \\<Gamma>) (subprob_algebra R)\""], ["proof (prove)\nusing this:\n  g \\<in> M \\<rightarrow>\\<^sub>M subprob_algebra R\n\ngoal (1 subgoal):\n 1. g \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n            subprob_algebra R", "by (simp add: M_def measurable_dens_ctxt_measure_eq)"], ["proof (state)\nthis:\n  g \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n          subprob_algebra R\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "from Mh"], ["proof (chain)\npicking this:\n  h \\<in> M \\<rightarrow>\\<^sub>M subprob_algebra R", "have Mh'[measurable]: \"h \\<in> measurable (state_measure (V \\<union> V') \\<Gamma>) (subprob_algebra R)\""], ["proof (prove)\nusing this:\n  h \\<in> M \\<rightarrow>\\<^sub>M subprob_algebra R\n\ngoal (1 subgoal):\n 1. h \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n            subprob_algebra R", "by (simp add: M_def measurable_dens_ctxt_measure_eq)"], ["proof (state)\nthis:\n  h \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n          subprob_algebra R\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "from densf"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   f (stock_measure BOOL) \\<delta>f", "have densf': \"has_parametrized_subprob_density M f (stock_measure BOOL) \\<delta>f\""], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   f (stock_measure BOOL) \\<delta>f\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density M f (stock_measure BOOL) \\<delta>f", "unfolding has_parametrized_subprob_density_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n      has_subprob_density (f x) (stock_measure BOOL) (\\<delta>f x)) \\<and>\n  (\\<lambda>(x, y). \\<delta>f x y)\n  \\<in> borel_measurable\n         (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n          stock_measure BOOL)\n\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>space M.\n        has_subprob_density (f x) (stock_measure BOOL) (\\<delta>f x)) \\<and>\n    (\\<lambda>(x, y). \\<delta>f x y)\n    \\<in> borel_measurable (M \\<Otimes>\\<^sub>M stock_measure BOOL)", "apply (subst measurable_cong_sets, subst sets_pair_measure_cong)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>(\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n                 has_subprob_density (f x) (stock_measure BOOL)\n                  (\\<delta>f x)) \\<and>\n             (\\<lambda>(x, y). \\<delta>f x y)\n             \\<in> borel_measurable\n                    (state_measure (V \\<union> V')\n                      \\<Gamma> \\<Otimes>\\<^sub>M\n                     stock_measure BOOL);\n     (\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n         has_subprob_density (f x) (stock_measure BOOL)\n          (\\<delta>f x)) \\<and>\n     (\\<lambda>(x, y). \\<delta>f x y)\n     \\<in> borel_measurable\n            (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n             stock_measure BOOL)\\<rbrakk>\n    \\<Longrightarrow> sets M = sets ?M1'4\n 2. \\<lbrakk>(\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n                 has_subprob_density (f x) (stock_measure BOOL)\n                  (\\<delta>f x)) \\<and>\n             (\\<lambda>(x, y). \\<delta>f x y)\n             \\<in> borel_measurable\n                    (state_measure (V \\<union> V')\n                      \\<Gamma> \\<Otimes>\\<^sub>M\n                     stock_measure BOOL);\n     (\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n         has_subprob_density (f x) (stock_measure BOOL)\n          (\\<delta>f x)) \\<and>\n     (\\<lambda>(x, y). \\<delta>f x y)\n     \\<in> borel_measurable\n            (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n             stock_measure BOOL)\\<rbrakk>\n    \\<Longrightarrow> sets (stock_measure BOOL) = sets ?M2'4\n 3. \\<lbrakk>(\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n                 has_subprob_density (f x) (stock_measure BOOL)\n                  (\\<delta>f x)) \\<and>\n             (\\<lambda>(x, y). \\<delta>f x y)\n             \\<in> borel_measurable\n                    (state_measure (V \\<union> V')\n                      \\<Gamma> \\<Otimes>\\<^sub>M\n                     stock_measure BOOL);\n     (\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n         has_subprob_density (f x) (stock_measure BOOL)\n          (\\<delta>f x)) \\<and>\n     (\\<lambda>(x, y). \\<delta>f x y)\n     \\<in> borel_measurable\n            (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n             stock_measure BOOL)\\<rbrakk>\n    \\<Longrightarrow> sets (?M1'4 \\<Otimes>\\<^sub>M ?M2'4) = sets ?M'1\n 4. (\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n        has_subprob_density (f x) (stock_measure BOOL) (\\<delta>f x)) \\<and>\n    (\\<lambda>(x, y). \\<delta>f x y)\n    \\<in> borel_measurable\n           (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n            stock_measure BOOL) \\<Longrightarrow>\n    sets borel = sets ?N'1\n 5. (\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n        has_subprob_density (f x) (stock_measure BOOL) (\\<delta>f x)) \\<and>\n    (\\<lambda>(x, y). \\<delta>f x y)\n    \\<in> borel_measurable\n           (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n            stock_measure BOOL) \\<Longrightarrow>\n    (\\<forall>x\\<in>space M.\n        has_subprob_density (f x) (stock_measure BOOL) (\\<delta>f x)) \\<and>\n    (\\<lambda>(x, y). \\<delta>f x y) \\<in> ?M'1 \\<rightarrow>\\<^sub>M ?N'1", "apply (unfold M_def dens_ctxt_measure_def state_measure'_def, (subst prod.case)+) []"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>(\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n                 has_subprob_density (f x) (stock_measure BOOL)\n                  (\\<delta>f x)) \\<and>\n             (\\<lambda>(x, y). \\<delta>f x y)\n             \\<in> borel_measurable\n                    (state_measure (V \\<union> V')\n                      \\<Gamma> \\<Otimes>\\<^sub>M\n                     stock_measure BOOL);\n     (\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n         has_subprob_density (f x) (stock_measure BOOL)\n          (\\<delta>f x)) \\<and>\n     (\\<lambda>(x, y). \\<delta>f x y)\n     \\<in> borel_measurable\n            (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n             stock_measure BOOL)\\<rbrakk>\n    \\<Longrightarrow> sets\n                       (density\n                         (distr (state_measure V \\<Gamma>)\n                           (state_measure (V \\<union> V') \\<Gamma>)\n                           (\\<lambda>\\<sigma>.\n                               merge V V' (\\<sigma>, \\<rho>)))\n                         \\<delta>) =\n                      sets ?M1'4\n 2. \\<lbrakk>(\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n                 has_subprob_density (f x) (stock_measure BOOL)\n                  (\\<delta>f x)) \\<and>\n             (\\<lambda>(x, y). \\<delta>f x y)\n             \\<in> borel_measurable\n                    (state_measure (V \\<union> V')\n                      \\<Gamma> \\<Otimes>\\<^sub>M\n                     stock_measure BOOL);\n     (\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n         has_subprob_density (f x) (stock_measure BOOL)\n          (\\<delta>f x)) \\<and>\n     (\\<lambda>(x, y). \\<delta>f x y)\n     \\<in> borel_measurable\n            (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n             stock_measure BOOL)\\<rbrakk>\n    \\<Longrightarrow> sets (stock_measure BOOL) = sets ?M2'4\n 3. \\<lbrakk>(\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n                 has_subprob_density (f x) (stock_measure BOOL)\n                  (\\<delta>f x)) \\<and>\n             (\\<lambda>(x, y). \\<delta>f x y)\n             \\<in> borel_measurable\n                    (state_measure (V \\<union> V')\n                      \\<Gamma> \\<Otimes>\\<^sub>M\n                     stock_measure BOOL);\n     (\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n         has_subprob_density (f x) (stock_measure BOOL)\n          (\\<delta>f x)) \\<and>\n     (\\<lambda>(x, y). \\<delta>f x y)\n     \\<in> borel_measurable\n            (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n             stock_measure BOOL)\\<rbrakk>\n    \\<Longrightarrow> sets (?M1'4 \\<Otimes>\\<^sub>M ?M2'4) = sets ?M'1\n 4. (\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n        has_subprob_density (f x) (stock_measure BOOL) (\\<delta>f x)) \\<and>\n    (\\<lambda>(x, y). \\<delta>f x y)\n    \\<in> borel_measurable\n           (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n            stock_measure BOOL) \\<Longrightarrow>\n    sets borel = sets ?N'1\n 5. (\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n        has_subprob_density (f x) (stock_measure BOOL) (\\<delta>f x)) \\<and>\n    (\\<lambda>(x, y). \\<delta>f x y)\n    \\<in> borel_measurable\n           (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n            stock_measure BOOL) \\<Longrightarrow>\n    (\\<forall>x\\<in>space M.\n        has_subprob_density (f x) (stock_measure BOOL) (\\<delta>f x)) \\<and>\n    (\\<lambda>(x, y). \\<delta>f x y) \\<in> ?M'1 \\<rightarrow>\\<^sub>M ?N'1", "apply (subst sets_density, subst sets_distr, rule refl, rule refl, rule refl, rule refl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>space (state_measure (V \\<union> V') \\<Gamma>).\n        has_subprob_density (f x) (stock_measure BOOL) (\\<delta>f x)) \\<and>\n    (\\<lambda>(x, y). \\<delta>f x y)\n    \\<in> borel_measurable\n           (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n            stock_measure BOOL) \\<Longrightarrow>\n    (\\<forall>x\\<in>space M.\n        has_subprob_density (f x) (stock_measure BOOL) (\\<delta>f x)) \\<and>\n    (\\<lambda>(x, y). \\<delta>f x y)\n    \\<in> borel_measurable\n           (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n            stock_measure BOOL)", "apply (auto simp: M_def space_dens_ctxt_measure)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  has_parametrized_subprob_density M f (stock_measure BOOL) \\<delta>f\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "interpret dc_True: density_context V V' \\<Gamma> \"\\<lambda>\\<sigma>. \\<delta> \\<sigma> * \\<delta>f \\<sigma> (BoolVal True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma>\n     (\\<lambda>\\<sigma>. \\<delta> \\<sigma> * \\<delta>f \\<sigma> TRUE)", "using density_context_if_dens[of _ \\<delta>f True] densf"], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   ?M (count_space (range BoolVal)) \\<delta>f \\<Longrightarrow>\n  density_context V V' \\<Gamma> (if_dens \\<delta> \\<delta>f True)\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   f (stock_measure BOOL) \\<delta>f\n\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma>\n     (\\<lambda>\\<sigma>. \\<delta> \\<sigma> * \\<delta>f \\<sigma> TRUE)", "unfolding if_dens_def"], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   ?M (count_space (range BoolVal)) \\<delta>f \\<Longrightarrow>\n  density_context V V' \\<Gamma>\n   (\\<lambda>\\<sigma>. \\<delta> \\<sigma> * \\<delta>f \\<sigma> TRUE)\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   f (stock_measure BOOL) \\<delta>f\n\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma>\n     (\\<lambda>\\<sigma>. \\<delta> \\<sigma> * \\<delta>f \\<sigma> TRUE)", "by (simp add: stock_measure.simps)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "interpret dc_False: density_context V V' \\<Gamma> \"\\<lambda>\\<sigma>. \\<delta> \\<sigma> * \\<delta>f \\<sigma> (BoolVal False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma>\n     (\\<lambda>\\<sigma>. \\<delta> \\<sigma> * \\<delta>f \\<sigma> FALSE)", "using density_context_if_dens[of _ \\<delta>f False] densf"], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   ?M (count_space (range BoolVal)) \\<delta>f \\<Longrightarrow>\n  density_context V V' \\<Gamma> (if_dens \\<delta> \\<delta>f False)\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   f (stock_measure BOOL) \\<delta>f\n\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma>\n     (\\<lambda>\\<sigma>. \\<delta> \\<sigma> * \\<delta>f \\<sigma> FALSE)", "unfolding if_dens_def"], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   ?M (count_space (range BoolVal)) \\<delta>f \\<Longrightarrow>\n  density_context V V' \\<Gamma>\n   (\\<lambda>\\<sigma>. \\<delta> \\<sigma> * \\<delta>f \\<sigma> FALSE)\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   f (stock_measure BOOL) \\<delta>f\n\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma>\n     (\\<lambda>\\<sigma>. \\<delta> \\<sigma> * \\<delta>f \\<sigma> FALSE)", "by (simp add: stock_measure.simps)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have \"emeasure (M \\<bind> (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x))) X =\n          \\<integral>\\<^sup>+x. emeasure (f x \\<bind> (\\<lambda>b. if P b then g x else h x)) X \\<partial>M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure\n     (M \\<bind>\n      (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n     X =\n    \\<integral>\\<^sup>+ x. emeasure\n                            (f x \\<bind>\n                             (\\<lambda>b. if P b then g x else h x))\n                            X\n                       \\<partial>M", "using X"], ["proof (prove)\nusing this:\n  X \\<in> sets R\n\ngoal (1 subgoal):\n 1. emeasure\n     (M \\<bind>\n      (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n     X =\n    \\<integral>\\<^sup>+ x. emeasure\n                            (f x \\<bind>\n                             (\\<lambda>b. if P b then g x else h x))\n                            X\n                       \\<partial>M", "by (subst emeasure_bind[of _ _ R], simp add: M_def, intro measurable_bind[OF Mf], measurable)"], ["proof (state)\nthis:\n  emeasure\n   (M \\<bind>\n    (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n   X =\n  \\<integral>\\<^sup>+ x. emeasure\n                          (f x \\<bind>\n                           (\\<lambda>b. if P b then g x else h x))\n                          X\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "also"], ["proof (state)\nthis:\n  emeasure\n   (M \\<bind>\n    (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n   X =\n  \\<integral>\\<^sup>+ x. emeasure\n                          (f x \\<bind>\n                           (\\<lambda>b. if P b then g x else h x))\n                          X\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have \"... = \\<integral>\\<^sup>+x. \\<integral>\\<^sup>+b. emeasure (if P b then g x else h x) X \\<partial>f x \\<partial>M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. emeasure\n                            (f x \\<bind>\n                             (\\<lambda>b. if P b then g x else h x))\n                            X\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ b.\n          emeasure (if P b then g x else h x) X\n        \\<partial>f x\n                       \\<partial>M", "by (intro nn_integral_cong) (simp_all add: X emeasure_bind[where N=R])"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. emeasure\n                          (f x \\<bind>\n                           (\\<lambda>b. if P b then g x else h x))\n                          X\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ b.\n        emeasure (if P b then g x else h x) X\n      \\<partial>f x\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. emeasure\n                          (f x \\<bind>\n                           (\\<lambda>b. if P b then g x else h x))\n                          X\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ b.\n        emeasure (if P b then g x else h x) X\n      \\<partial>f x\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have \"... = \\<integral>\\<^sup>+x. \\<integral>\\<^sup>+b. emeasure (if P b then g x else h x) X * \\<delta>f x b \\<partial>stock_measure BOOL \\<partial>M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ b.\n          emeasure (if P b then g x else h x) X\n        \\<partial>f x\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ b.\n          emeasure (if P b then g x else h x) X * \\<delta>f x b\n        \\<partial>stock_measure BOOL\n                       \\<partial>M", "using has_parametrized_subprob_densityD[OF densf]"], ["proof (prove)\nusing this:\n  ?x \\<in> space (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n  f ?x = density (stock_measure BOOL) (\\<delta>f ?x)\n  ?x \\<in> space (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n  subprob_space (f ?x)\n  (\\<lambda>(x, y). \\<delta>f x y)\n  \\<in> borel_measurable\n         (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n          stock_measure BOOL)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ b.\n          emeasure (if P b then g x else h x) X\n        \\<partial>f x\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ b.\n          emeasure (if P b then g x else h x) X * \\<delta>f x b\n        \\<partial>stock_measure BOOL\n                       \\<partial>M", "by (intro nn_integral_cong)\n       (simp_all add: AE_count_space field_simps nn_integral_density\n                      M_def space_dens_ctxt_measure stock_measure.simps)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ b.\n        emeasure (if P b then g x else h x) X\n      \\<partial>f x\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ b.\n        emeasure (if P b then g x else h x) X * \\<delta>f x b\n      \\<partial>stock_measure BOOL\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ b.\n        emeasure (if P b then g x else h x) X\n      \\<partial>f x\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ b.\n        emeasure (if P b then g x else h x) X * \\<delta>f x b\n      \\<partial>stock_measure BOOL\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have \"... = \\<integral>\\<^sup>+x. emeasure (g x) X * \\<delta>f x (BoolVal True) +\n                        emeasure (h x) X * \\<delta>f x (BoolVal False) \\<partial>M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ b.\n          emeasure (if P b then g x else h x) X * \\<delta>f x b\n        \\<partial>stock_measure BOOL\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE +\n                           emeasure (h x) X * \\<delta>f x FALSE\n                       \\<partial>M", "using has_parametrized_subprob_densityD[OF densf']"], ["proof (prove)\nusing this:\n  ?x \\<in> space M \\<Longrightarrow>\n  f ?x = density (stock_measure BOOL) (\\<delta>f ?x)\n  ?x \\<in> space M \\<Longrightarrow> subprob_space (f ?x)\n  (\\<lambda>(x, y). \\<delta>f x y)\n  \\<in> borel_measurable (M \\<Otimes>\\<^sub>M stock_measure BOOL)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ b.\n          emeasure (if P b then g x else h x) X * \\<delta>f x b\n        \\<partial>stock_measure BOOL\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE +\n                           emeasure (h x) X * \\<delta>f x FALSE\n                       \\<partial>M", "by (intro nn_integral_cong, subst nn_integral_BoolVal)\n       (auto simp: P_def nn_integral_BoolVal)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ b.\n        emeasure (if P b then g x else h x) X * \\<delta>f x b\n      \\<partial>stock_measure BOOL\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE +\n                         emeasure (h x) X * \\<delta>f x FALSE\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ b.\n        emeasure (if P b then g x else h x) X * \\<delta>f x b\n      \\<partial>stock_measure BOOL\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE +\n                         emeasure (h x) X * \\<delta>f x FALSE\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have \"... = (\\<integral>\\<^sup>+x. emeasure (g x) X * \\<delta>f x (BoolVal True) \\<partial>M) +\n                   (\\<integral>\\<^sup>+x. emeasure (h x) X * \\<delta>f x (BoolVal False) \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE +\n                           emeasure (h x) X * \\<delta>f x FALSE\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE \\<partial>M +\n    \\<integral>\\<^sup>+ x. emeasure (h x) X * \\<delta>f x FALSE \\<partial>M", "using X"], ["proof (prove)\nusing this:\n  X \\<in> sets R\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE +\n                           emeasure (h x) X * \\<delta>f x FALSE\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE \\<partial>M +\n    \\<integral>\\<^sup>+ x. emeasure (h x) X * \\<delta>f x FALSE \\<partial>M", "using has_parametrized_subprob_densityD[OF densf'] BoolVal_in_space"], ["proof (prove)\nusing this:\n  X \\<in> sets R\n  ?x \\<in> space M \\<Longrightarrow>\n  f ?x = density (stock_measure BOOL) (\\<delta>f ?x)\n  ?x \\<in> space M \\<Longrightarrow> subprob_space (f ?x)\n  (\\<lambda>(x, y). \\<delta>f x y)\n  \\<in> borel_measurable (M \\<Otimes>\\<^sub>M stock_measure BOOL)\n  TRUE \\<in> space (stock_measure BOOL)\n  FALSE \\<in> space (stock_measure BOOL)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE +\n                           emeasure (h x) X * \\<delta>f x FALSE\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE \\<partial>M +\n    \\<integral>\\<^sup>+ x. emeasure (h x) X * \\<delta>f x FALSE \\<partial>M", "by (intro nn_integral_add) (auto simp:)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE +\n                         emeasure (h x) X * \\<delta>f x FALSE\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE \\<partial>M +\n  \\<integral>\\<^sup>+ x. emeasure (h x) X * \\<delta>f x FALSE \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE +\n                         emeasure (h x) X * \\<delta>f x FALSE\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE \\<partial>M +\n  \\<integral>\\<^sup>+ x. emeasure (h x) X * \\<delta>f x FALSE \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have \"(\\<integral>\\<^sup>+x. emeasure (g x) X * \\<delta>f x (BoolVal True) \\<partial>M) =\n                  \\<integral>\\<^sup>+x. \\<delta> (merge V V' (x, \\<rho>)) * \\<delta>f (merge V V' (x, \\<rho>)) (BoolVal True) *\n                         (emeasure (g (merge V V' (x, \\<rho>)))) X \\<partial>state_measure V \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE \\<partial>M =\n    \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                           \\<delta>f (merge V V' (x, \\<rho>)) TRUE *\n                           emeasure (g (merge V V' (x, \\<rho>))) X\n                       \\<partial>state_measure V \\<Gamma>", "using X has_parametrized_subprob_densityD[OF densf] BoolVal_in_space"], ["proof (prove)\nusing this:\n  X \\<in> sets R\n  ?x \\<in> space (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n  f ?x = density (stock_measure BOOL) (\\<delta>f ?x)\n  ?x \\<in> space (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n  subprob_space (f ?x)\n  (\\<lambda>(x, y). \\<delta>f x y)\n  \\<in> borel_measurable\n         (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n          stock_measure BOOL)\n  TRUE \\<in> space (stock_measure BOOL)\n  FALSE \\<in> space (stock_measure BOOL)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE \\<partial>M =\n    \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                           \\<delta>f (merge V V' (x, \\<rho>)) TRUE *\n                           emeasure (g (merge V V' (x, \\<rho>))) X\n                       \\<partial>state_measure V \\<Gamma>", "unfolding M_def"], ["proof (prove)\nusing this:\n  X \\<in> sets R\n  ?x \\<in> space (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n  f ?x = density (stock_measure BOOL) (\\<delta>f ?x)\n  ?x \\<in> space (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n  subprob_space (f ?x)\n  (\\<lambda>(x, y). \\<delta>f x y)\n  \\<in> borel_measurable\n         (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n          stock_measure BOOL)\n  TRUE \\<in> space (stock_measure BOOL)\n  FALSE \\<in> space (stock_measure BOOL)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE\n                       \\<partial>dens_ctxt_measure \\<Y> \\<rho> =\n    \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                           \\<delta>f (merge V V' (x, \\<rho>)) TRUE *\n                           emeasure (g (merge V V' (x, \\<rho>))) X\n                       \\<partial>state_measure V \\<Gamma>", "by (subst nn_integral_dens_ctxt_measure) (simp_all add: \\<rho> mult_ac)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE \\<partial>M =\n  \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                         \\<delta>f (merge V V' (x, \\<rho>)) TRUE *\n                         emeasure (g (merge V V' (x, \\<rho>))) X\n                     \\<partial>state_measure V \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. emeasure (g x) X * \\<delta>f x TRUE \\<partial>M =\n  \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                         \\<delta>f (merge V V' (x, \\<rho>)) TRUE *\n                         emeasure (g (merge V V' (x, \\<rho>))) X\n                     \\<partial>state_measure V \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have \"... = emeasure (density R (\\<delta>g \\<rho>)) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                           \\<delta>f (merge V V' (x, \\<rho>)) TRUE *\n                           emeasure (g (merge V V' (x, \\<rho>))) X\n                       \\<partial>state_measure V \\<Gamma> =\n    emeasure (density R (\\<delta>g \\<rho>)) X", "using \\<rho> X"], ["proof (prove)\nusing this:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  X \\<in> sets R\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                           \\<delta>f (merge V V' (x, \\<rho>)) TRUE *\n                           emeasure (g (merge V V' (x, \\<rho>))) X\n                       \\<partial>state_measure V \\<Gamma> =\n    emeasure (density R (\\<delta>g \\<rho>)) X", "apply (subst dc_True.nn_integral_dens_ctxt_measure[symmetric], simp_all) []"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<rho> \\<in> space (state_measure V' \\<Gamma>);\n     X \\<in> sets R\\<rbrakk>\n    \\<Longrightarrow> \\<integral>\\<^sup>+ x. emeasure (g x) X\n   \\<partial>dens_ctxt_measure dc_True.\\<Y> \\<rho> =\n                      emeasure (density R (\\<delta>g \\<rho>)) X", "apply (subst emeasure_bind[of _ _ R, symmetric], simp_all add: measurable_dens_ctxt_measure_eq) []"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<rho> \\<in> space (state_measure V' \\<Gamma>);\n     X \\<in> sets R\\<rbrakk>\n    \\<Longrightarrow> emeasure\n                       (dens_ctxt_measure dc_True.\\<Y> \\<rho> \\<bind> g) X =\n                      emeasure (density R (\\<delta>g \\<rho>)) X", "apply (subst has_parametrized_subprob_densityD(1)[OF densg], simp_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                         \\<delta>f (merge V V' (x, \\<rho>)) TRUE *\n                         emeasure (g (merge V V' (x, \\<rho>))) X\n                     \\<partial>state_measure V \\<Gamma> =\n  emeasure (density R (\\<delta>g \\<rho>)) X\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                         \\<delta>f (merge V V' (x, \\<rho>)) TRUE *\n                         emeasure (g (merge V V' (x, \\<rho>))) X\n                     \\<partial>state_measure V \\<Gamma> =\n  emeasure (density R (\\<delta>g \\<rho>)) X\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have \"(\\<integral>\\<^sup>+x. emeasure (h x) X * \\<delta>f x (BoolVal False) \\<partial>M) =\n                  \\<integral>\\<^sup>+x. \\<delta> (merge V V' (x, \\<rho>)) * \\<delta>f (merge V V' (x, \\<rho>)) (BoolVal False) *\n                         (emeasure (h (merge V V' (x, \\<rho>)))) X \\<partial>state_measure V \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. emeasure (h x) X * \\<delta>f x FALSE\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                           \\<delta>f (merge V V' (x, \\<rho>)) FALSE *\n                           emeasure (h (merge V V' (x, \\<rho>))) X\n                       \\<partial>state_measure V \\<Gamma>", "using X has_parametrized_subprob_densityD[OF densf] BoolVal_in_space"], ["proof (prove)\nusing this:\n  X \\<in> sets R\n  ?x \\<in> space (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n  f ?x = density (stock_measure BOOL) (\\<delta>f ?x)\n  ?x \\<in> space (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n  subprob_space (f ?x)\n  (\\<lambda>(x, y). \\<delta>f x y)\n  \\<in> borel_measurable\n         (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n          stock_measure BOOL)\n  TRUE \\<in> space (stock_measure BOOL)\n  FALSE \\<in> space (stock_measure BOOL)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. emeasure (h x) X * \\<delta>f x FALSE\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                           \\<delta>f (merge V V' (x, \\<rho>)) FALSE *\n                           emeasure (h (merge V V' (x, \\<rho>))) X\n                       \\<partial>state_measure V \\<Gamma>", "unfolding M_def"], ["proof (prove)\nusing this:\n  X \\<in> sets R\n  ?x \\<in> space (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n  f ?x = density (stock_measure BOOL) (\\<delta>f ?x)\n  ?x \\<in> space (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n  subprob_space (f ?x)\n  (\\<lambda>(x, y). \\<delta>f x y)\n  \\<in> borel_measurable\n         (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M\n          stock_measure BOOL)\n  TRUE \\<in> space (stock_measure BOOL)\n  FALSE \\<in> space (stock_measure BOOL)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. emeasure (h x) X * \\<delta>f x FALSE\n                       \\<partial>dens_ctxt_measure \\<Y> \\<rho> =\n    \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                           \\<delta>f (merge V V' (x, \\<rho>)) FALSE *\n                           emeasure (h (merge V V' (x, \\<rho>))) X\n                       \\<partial>state_measure V \\<Gamma>", "by (subst nn_integral_dens_ctxt_measure) (simp_all add: \\<rho> mult_ac)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. emeasure (h x) X * \\<delta>f x FALSE \\<partial>M =\n  \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                         \\<delta>f (merge V V' (x, \\<rho>)) FALSE *\n                         emeasure (h (merge V V' (x, \\<rho>))) X\n                     \\<partial>state_measure V \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. emeasure (h x) X * \\<delta>f x FALSE \\<partial>M =\n  \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                         \\<delta>f (merge V V' (x, \\<rho>)) FALSE *\n                         emeasure (h (merge V V' (x, \\<rho>))) X\n                     \\<partial>state_measure V \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have \"... = emeasure (density R (\\<delta>h \\<rho>)) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                           \\<delta>f (merge V V' (x, \\<rho>)) FALSE *\n                           emeasure (h (merge V V' (x, \\<rho>))) X\n                       \\<partial>state_measure V \\<Gamma> =\n    emeasure (density R (\\<delta>h \\<rho>)) X", "using \\<rho> X"], ["proof (prove)\nusing this:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  X \\<in> sets R\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                           \\<delta>f (merge V V' (x, \\<rho>)) FALSE *\n                           emeasure (h (merge V V' (x, \\<rho>))) X\n                       \\<partial>state_measure V \\<Gamma> =\n    emeasure (density R (\\<delta>h \\<rho>)) X", "apply (subst dc_False.nn_integral_dens_ctxt_measure[symmetric], simp_all) []"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<rho> \\<in> space (state_measure V' \\<Gamma>);\n     X \\<in> sets R\\<rbrakk>\n    \\<Longrightarrow> \\<integral>\\<^sup>+ x. emeasure (h x) X\n   \\<partial>dens_ctxt_measure dc_False.\\<Y> \\<rho> =\n                      emeasure (density R (\\<delta>h \\<rho>)) X", "apply (subst emeasure_bind[of _ _ R, symmetric], simp_all add: measurable_dens_ctxt_measure_eq) []"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<rho> \\<in> space (state_measure V' \\<Gamma>);\n     X \\<in> sets R\\<rbrakk>\n    \\<Longrightarrow> emeasure\n                       (dens_ctxt_measure dc_False.\\<Y> \\<rho> \\<bind> h)\n                       X =\n                      emeasure (density R (\\<delta>h \\<rho>)) X", "apply (subst has_parametrized_subprob_densityD(1)[OF densh], simp_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                         \\<delta>f (merge V V' (x, \\<rho>)) FALSE *\n                         emeasure (h (merge V V' (x, \\<rho>))) X\n                     \\<partial>state_measure V \\<Gamma> =\n  emeasure (density R (\\<delta>h \\<rho>)) X\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                         \\<delta>f (merge V V' (x, \\<rho>)) FALSE *\n                         emeasure (h (merge V V' (x, \\<rho>))) X\n                     \\<partial>state_measure V \\<Gamma> =\n  emeasure (density R (\\<delta>h \\<rho>)) X\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have \"emeasure (density R (\\<delta>g \\<rho>)) X + emeasure (density R (\\<delta>h \\<rho>)) X =\n                 emeasure (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (density R (\\<delta>g \\<rho>)) X +\n    emeasure (density R (\\<delta>h \\<rho>)) X =\n    emeasure\n     (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) X", "using X \\<rho>"], ["proof (prove)\nusing this:\n  X \\<in> sets R\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. emeasure (density R (\\<delta>g \\<rho>)) X +\n    emeasure (density R (\\<delta>h \\<rho>)) X =\n    emeasure\n     (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) X", "using has_parametrized_subprob_densityD(2,3)[OF densg]\n          has_parametrized_subprob_densityD(2,3)[OF densh]"], ["proof (prove)\nusing this:\n  X \\<in> sets R\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  ?x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  subprob_space (dens_ctxt_measure dc_True.\\<Y> ?x \\<bind> g)\n  (\\<lambda>(x, y). \\<delta>g x y)\n  \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M R)\n  ?x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  subprob_space (dens_ctxt_measure dc_False.\\<Y> ?x \\<bind> h)\n  (\\<lambda>(x, y). \\<delta>h x y)\n  \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M R)\n\ngoal (1 subgoal):\n 1. emeasure (density R (\\<delta>g \\<rho>)) X +\n    emeasure (density R (\\<delta>h \\<rho>)) X =\n    emeasure\n     (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) X", "by (intro emeasure_density_add) simp_all"], ["proof (state)\nthis:\n  emeasure (density R (\\<delta>g \\<rho>)) X +\n  emeasure (density R (\\<delta>h \\<rho>)) X =\n  emeasure (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))\n   X\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x.\n                     f x \\<bind>\n                     (\\<lambda>b.\n                         if P b then g x else h x))) \\<Longrightarrow>\n       emeasure\n        (M \\<bind>\n         (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n        A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "finally"], ["proof (chain)\npicking this:\n  emeasure\n   (M \\<bind>\n    (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n   X =\n  emeasure (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))\n   X", "show \"emeasure ?lhs X = emeasure ?rhs X\""], ["proof (prove)\nusing this:\n  emeasure\n   (M \\<bind>\n    (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n   X =\n  emeasure (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))\n   X\n\ngoal (1 subgoal):\n 1. emeasure\n     (M \\<bind>\n      (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n     X =\n    emeasure\n     (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) X", "."], ["proof (state)\nthis:\n  emeasure\n   (M \\<bind>\n    (\\<lambda>x. f x \\<bind> (\\<lambda>b. if P b then g x else h x)))\n   X =\n  emeasure (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))\n   X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in density_context) emeasure_bind_if_det_dens_ctxt_measure:\n  fixes f\n  assumes \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\"\n  defines \"M \\<equiv> dens_ctxt_measure \\<Y> \\<rho>\"\n  defines \"P \\<equiv> \\<lambda>b. f b = BoolVal True\" and \"P' \\<equiv> \\<lambda>b. f b = BoolVal False\"\n  assumes dc1: \"density_context V V' \\<Gamma> (\\<lambda>\\<sigma>. \\<delta> \\<sigma> * (if P \\<sigma> then 1 else 0))\"\n  assumes dc2: \"density_context V V' \\<Gamma> (\\<lambda>\\<sigma>. \\<delta> \\<sigma> * (if P' \\<sigma> then 1 else 0))\"\n  assumes Mf[measurable]: \"f \\<in> measurable M (stock_measure BOOL)\"\n  assumes Mg[measurable]: \"g \\<in> measurable M (subprob_algebra R)\"\n  assumes Mh[measurable]: \"h \\<in> measurable M (subprob_algebra R)\"\n  assumes densg: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n                      (\\<lambda>\\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,\\<lambda>\\<sigma>. \\<delta> \\<sigma> * (if P \\<sigma> then 1 else 0)) \\<rho> \\<bind> g) R \\<delta>g\"\n  assumes densh: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n                      (\\<lambda>\\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,\\<lambda>\\<sigma>. \\<delta> \\<sigma> * (if P' \\<sigma> then 1 else 0)) \\<rho> \\<bind> h) R \\<delta>h\"\n  shows \"M \\<bind> (\\<lambda>x. if P x then g x else h x) = density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)\"\n          (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<bind> (\\<lambda>x. if P x then g x else h x) =\n    density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)", "proof (intro measure_eqI)"], ["proof (state)\ngoal (2 subgoals):\n 1. sets (M \\<bind> (\\<lambda>x. if P x then g x else h x)) =\n    sets (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))\n 2. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have [measurable]: \"Measurable.pred M P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Measurable.pred M P", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Measurable.pred M (\\<lambda>b. f b = TRUE)", "by (rule pred_eq_const1[OF Mf]) simp"], ["proof (state)\nthis:\n  Measurable.pred M P\n\ngoal (2 subgoals):\n 1. sets (M \\<bind> (\\<lambda>x. if P x then g x else h x)) =\n    sets (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))\n 2. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have [measurable]: \"Measurable.pred M P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Measurable.pred M P'", "unfolding P'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Measurable.pred M (\\<lambda>b. f b = FALSE)", "by (rule pred_eq_const1[OF Mf]) simp"], ["proof (state)\nthis:\n  Measurable.pred M P'\n\ngoal (2 subgoals):\n 1. sets (M \\<bind> (\\<lambda>x. if P x then g x else h x)) =\n    sets (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))\n 2. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have sets_lhs: \"sets ?lhs = sets R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (M \\<bind> (\\<lambda>x. if P x then g x else h x)) = sets R", "by (subst sets_bind_measurable[of _ _ R]) (simp_all, simp add: M_def)"], ["proof (state)\nthis:\n  sets (M \\<bind> (\\<lambda>x. if P x then g x else h x)) = sets R\n\ngoal (2 subgoals):\n 1. sets (M \\<bind> (\\<lambda>x. if P x then g x else h x)) =\n    sets (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))\n 2. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "thus \"sets ?lhs = sets ?rhs\""], ["proof (prove)\nusing this:\n  sets (M \\<bind> (\\<lambda>x. if P x then g x else h x)) = sets R\n\ngoal (1 subgoal):\n 1. sets (M \\<bind> (\\<lambda>x. if P x then g x else h x)) =\n    sets (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))", "by simp"], ["proof (state)\nthis:\n  sets (M \\<bind> (\\<lambda>x. if P x then g x else h x)) =\n  sets (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "from Mg"], ["proof (chain)\npicking this:\n  g \\<in> M \\<rightarrow>\\<^sub>M subprob_algebra R", "have Mg'[measurable]: \"g \\<in> measurable (state_measure (V \\<union> V') \\<Gamma>) (subprob_algebra R)\""], ["proof (prove)\nusing this:\n  g \\<in> M \\<rightarrow>\\<^sub>M subprob_algebra R\n\ngoal (1 subgoal):\n 1. g \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n            subprob_algebra R", "by (simp add: M_def measurable_dens_ctxt_measure_eq)"], ["proof (state)\nthis:\n  g \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n          subprob_algebra R\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "from Mh"], ["proof (chain)\npicking this:\n  h \\<in> M \\<rightarrow>\\<^sub>M subprob_algebra R", "have Mh'[measurable]: \"h \\<in> measurable (state_measure (V \\<union> V') \\<Gamma>) (subprob_algebra R)\""], ["proof (prove)\nusing this:\n  h \\<in> M \\<rightarrow>\\<^sub>M subprob_algebra R\n\ngoal (1 subgoal):\n 1. h \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n            subprob_algebra R", "by (simp add: M_def measurable_dens_ctxt_measure_eq)"], ["proof (state)\nthis:\n  h \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n          subprob_algebra R\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have [simp]: \"\\<And>x. x \\<in> space M \\<Longrightarrow> sets (g x) = sets R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> space M \\<Longrightarrow> sets (g x) = sets R", "by (rule sets_kernel[OF Mg])"], ["proof (state)\nthis:\n  ?x \\<in> space M \\<Longrightarrow> sets (g ?x) = sets R\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have [simp]: \"\\<And>x. x \\<in> space M \\<Longrightarrow> sets (h x) = sets R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> space M \\<Longrightarrow> sets (h x) = sets R", "by (rule sets_kernel[OF Mh])"], ["proof (state)\nthis:\n  ?x \\<in> space M \\<Longrightarrow> sets (h ?x) = sets R\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have [simp]: \"sets M = sets (state_measure (V \\<union> V') \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets M = sets (state_measure (V \\<union> V') \\<Gamma>)", "by (simp add: M_def dens_ctxt_measure_def state_measure'_def)"], ["proof (state)\nthis:\n  sets M = sets (state_measure (V \\<union> V') \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "then"], ["proof (chain)\npicking this:\n  sets M = sets (state_measure (V \\<union> V') \\<Gamma>)", "have [measurable_cong]: \"sets (state_measure (V \\<union> V') \\<Gamma>) = sets M\""], ["proof (prove)\nusing this:\n  sets M = sets (state_measure (V \\<union> V') \\<Gamma>)\n\ngoal (1 subgoal):\n 1. sets (state_measure (V \\<union> V') \\<Gamma>) = sets M", ".."], ["proof (state)\nthis:\n  sets (state_measure (V \\<union> V') \\<Gamma>) = sets M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have [simp]: \"range BoolVal = {BoolVal True, BoolVal False}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range BoolVal = {TRUE, FALSE}", "by auto"], ["proof (state)\nthis:\n  range BoolVal = {TRUE, FALSE}\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "assume \"X \\<in> sets ?lhs\""], ["proof (state)\nthis:\n  X \\<in> sets (M \\<bind> (\\<lambda>x. if P x then g x else h x))\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "hence X[measurable]: \"X \\<in> sets R\""], ["proof (prove)\nusing this:\n  X \\<in> sets (M \\<bind> (\\<lambda>x. if P x then g x else h x))\n\ngoal (1 subgoal):\n 1. X \\<in> sets R", "by (simp only: sets_lhs)"], ["proof (state)\nthis:\n  X \\<in> sets R\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "interpret dc_True: density_context V V' \\<Gamma> \"\\<lambda>\\<sigma>. \\<delta> \\<sigma> * (if P \\<sigma> then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma>\n     (\\<lambda>\\<sigma>. \\<delta> \\<sigma> * (if P \\<sigma> then 1 else 0))", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "interpret dc_False: density_context V V' \\<Gamma> \"\\<lambda>\\<sigma>. \\<delta> \\<sigma> * (if P' \\<sigma> then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma>\n     (\\<lambda>\\<sigma>. \\<delta> \\<sigma> * (if P' \\<sigma> then 1 else 0))", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have \"emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) X =\n          \\<integral>\\<^sup>+x. (if P x then emeasure (g x) X else emeasure (h x) X) \\<partial>M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) X =\n    \\<integral>\\<^sup>+ x. (if P x then emeasure (g x) X\n                            else emeasure (h x) X)\n                       \\<partial>M", "using X"], ["proof (prove)\nusing this:\n  X \\<in> sets R\n\ngoal (1 subgoal):\n 1. emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) X =\n    \\<integral>\\<^sup>+ x. (if P x then emeasure (g x) X\n                            else emeasure (h x) X)\n                       \\<partial>M", "by (subst emeasure_bind[of _ _ R], simp add: M_def, measurable)\n       (intro nn_integral_cong, simp)"], ["proof (state)\nthis:\n  emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) X =\n  \\<integral>\\<^sup>+ x. (if P x then emeasure (g x) X\n                          else emeasure (h x) X)\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "also"], ["proof (state)\nthis:\n  emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) X =\n  \\<integral>\\<^sup>+ x. (if P x then emeasure (g x) X\n                          else emeasure (h x) X)\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have \"... = \\<integral>\\<^sup>+x. (if P x then 1 else 0) * emeasure (g x) X +\n                        (if P' x then 1 else 0) * emeasure (h x) X \\<partial>M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. (if P x then emeasure (g x) X\n                            else emeasure (h x) X)\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X +\n                           (if P' x then 1 else 0) * emeasure (h x) X\n                       \\<partial>M", "using X"], ["proof (prove)\nusing this:\n  X \\<in> sets R\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. (if P x then emeasure (g x) X\n                            else emeasure (h x) X)\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X +\n                           (if P' x then 1 else 0) * emeasure (h x) X\n                       \\<partial>M", "using measurable_space[OF Mf]"], ["proof (prove)\nusing this:\n  X \\<in> sets R\n  ?x \\<in> space M \\<Longrightarrow> f ?x \\<in> space (stock_measure BOOL)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. (if P x then emeasure (g x) X\n                            else emeasure (h x) X)\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X +\n                           (if P' x then 1 else 0) * emeasure (h x) X\n                       \\<partial>M", "by (intro nn_integral_cong) (auto simp add: P_def P'_def stock_measure.simps)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. (if P x then emeasure (g x) X\n                          else emeasure (h x) X)\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X +\n                         (if P' x then 1 else 0) * emeasure (h x) X\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. (if P x then emeasure (g x) X\n                          else emeasure (h x) X)\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X +\n                         (if P' x then 1 else 0) * emeasure (h x) X\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have \"... = (\\<integral>\\<^sup>+x. (if P x then 1 else 0) * emeasure (g x) X \\<partial>M) +\n                   (\\<integral>\\<^sup>+x. (if P' x then 1 else 0) * emeasure (h x) X \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X +\n                           (if P' x then 1 else 0) * emeasure (h x) X\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X\n                       \\<partial>M +\n    \\<integral>\\<^sup>+ x. (if P' x then 1 else 0) * emeasure (h x) X\n                       \\<partial>M", "using X"], ["proof (prove)\nusing this:\n  X \\<in> sets R\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X +\n                           (if P' x then 1 else 0) * emeasure (h x) X\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X\n                       \\<partial>M +\n    \\<integral>\\<^sup>+ x. (if P' x then 1 else 0) * emeasure (h x) X\n                       \\<partial>M", "by (intro nn_integral_add) (simp_all add:)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X +\n                         (if P' x then 1 else 0) * emeasure (h x) X\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X\n                     \\<partial>M +\n  \\<integral>\\<^sup>+ x. (if P' x then 1 else 0) * emeasure (h x) X\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X +\n                         (if P' x then 1 else 0) * emeasure (h x) X\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X\n                     \\<partial>M +\n  \\<integral>\\<^sup>+ x. (if P' x then 1 else 0) * emeasure (h x) X\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have \"... = (\\<integral>\\<^sup>+ y. \\<delta>g \\<rho> y * indicator X y \\<partial>R) + (\\<integral>\\<^sup>+ y. \\<delta>h \\<rho> y * indicator X y \\<partial>R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X\n                       \\<partial>M +\n    \\<integral>\\<^sup>+ x. (if P' x then 1 else 0) * emeasure (h x) X\n                       \\<partial>M =\n    set_nn_integral R X (\\<delta>g \\<rho>) +\n    set_nn_integral R X (\\<delta>h \\<rho>)", "unfolding M_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X\n                       \\<partial>dens_ctxt_measure \\<Y> \\<rho> +\n    \\<integral>\\<^sup>+ x. (if P' x then 1 else 0) * emeasure (h x) X\n                       \\<partial>dens_ctxt_measure \\<Y> \\<rho> =\n    set_nn_integral R X (\\<delta>g \\<rho>) +\n    set_nn_integral R X (\\<delta>h \\<rho>)", "using \\<rho> X"], ["proof (prove)\nusing this:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  X \\<in> sets R\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X\n                       \\<partial>dens_ctxt_measure \\<Y> \\<rho> +\n    \\<integral>\\<^sup>+ x. (if P' x then 1 else 0) * emeasure (h x) X\n                       \\<partial>dens_ctxt_measure \\<Y> \\<rho> =\n    set_nn_integral R X (\\<delta>g \\<rho>) +\n    set_nn_integral R X (\\<delta>h \\<rho>)", "apply (simp add: nn_integral_dens_ctxt_measure)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n    \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                           ((if P (merge V V' (x, \\<rho>)) then 1 else 0) *\n                            emeasure (g (merge V V' (x, \\<rho>))) X)\n                       \\<partial>state_measure V \\<Gamma> +\n    \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                           ((if P' (merge V V' (x, \\<rho>)) then 1 else 0) *\n                            emeasure (h (merge V V' (x, \\<rho>))) X)\n                       \\<partial>state_measure V \\<Gamma> =\n    set_nn_integral R X (\\<delta>g \\<rho>) +\n    set_nn_integral R X (\\<delta>h \\<rho>)", "apply (subst (1 2) mult.assoc[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n    \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                           (if P (merge V V' (x, \\<rho>)) then 1 else 0) *\n                           emeasure (g (merge V V' (x, \\<rho>))) X\n                       \\<partial>state_measure V \\<Gamma> +\n    \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                           (if P' (merge V V' (x, \\<rho>)) then 1 else 0) *\n                           emeasure (h (merge V V' (x, \\<rho>))) X\n                       \\<partial>state_measure V \\<Gamma> =\n    set_nn_integral R X (\\<delta>g \\<rho>) +\n    set_nn_integral R X (\\<delta>h \\<rho>)", "apply (subst dc_True.nn_integral_dens_ctxt_measure[symmetric], simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n    \\<integral>\\<^sup>+ x. emeasure (g x) X\n                       \\<partial>dens_ctxt_measure dc_True.\\<Y> \\<rho> +\n    \\<integral>\\<^sup>+ x. \\<delta> (merge V V' (x, \\<rho>)) *\n                           (if P' (merge V V' (x, \\<rho>)) then 1 else 0) *\n                           emeasure (h (merge V V' (x, \\<rho>))) X\n                       \\<partial>state_measure V \\<Gamma> =\n    set_nn_integral R X (\\<delta>g \\<rho>) +\n    set_nn_integral R X (\\<delta>h \\<rho>)", "apply (subst dc_False.nn_integral_dens_ctxt_measure[symmetric], simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n    \\<integral>\\<^sup>+ x. emeasure (g x) X\n                       \\<partial>dens_ctxt_measure dc_True.\\<Y> \\<rho> +\n    \\<integral>\\<^sup>+ x. emeasure (h x) X\n                       \\<partial>dens_ctxt_measure dc_False.\\<Y> \\<rho> =\n    set_nn_integral R X (\\<delta>g \\<rho>) +\n    set_nn_integral R X (\\<delta>h \\<rho>)", "apply (subst (1 2) emeasure_bind[symmetric], simp_all add: measurable_dens_ctxt_measure_eq)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n    h \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n            subprob_algebra ?N2\n 2. \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n    X \\<in> sets ?N2\n 3. \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n    g \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n            subprob_algebra ?N3\n 4. \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n    X \\<in> sets ?N3\n 5. \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n    emeasure (dens_ctxt_measure dc_True.\\<Y> \\<rho> \\<bind> g) X +\n    emeasure (dens_ctxt_measure dc_False.\\<Y> \\<rho> \\<bind> h) X =\n    set_nn_integral R X (\\<delta>g \\<rho>) +\n    set_nn_integral R X (\\<delta>h \\<rho>)", "apply measurable"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n    emeasure (dens_ctxt_measure dc_True.\\<Y> \\<rho> \\<bind> g) X +\n    emeasure (dens_ctxt_measure dc_False.\\<Y> \\<rho> \\<bind> h) X =\n    set_nn_integral R X (\\<delta>g \\<rho>) +\n    set_nn_integral R X (\\<delta>h \\<rho>)", "apply (subst emeasure_has_parametrized_subprob_density[OF densg], simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n    set_nn_integral R X (\\<delta>g \\<rho>) +\n    emeasure (dens_ctxt_measure dc_False.\\<Y> \\<rho> \\<bind> h) X =\n    set_nn_integral R X (\\<delta>g \\<rho>) +\n    set_nn_integral R X (\\<delta>h \\<rho>)", "apply (subst emeasure_has_parametrized_subprob_density[OF densh], simp_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X\n                     \\<partial>M +\n  \\<integral>\\<^sup>+ x. (if P' x then 1 else 0) * emeasure (h x) X\n                     \\<partial>M =\n  set_nn_integral R X (\\<delta>g \\<rho>) +\n  set_nn_integral R X (\\<delta>h \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. (if P x then 1 else 0) * emeasure (g x) X\n                     \\<partial>M +\n  \\<integral>\\<^sup>+ x. (if P' x then 1 else 0) * emeasure (h x) X\n                     \\<partial>M =\n  set_nn_integral R X (\\<delta>g \\<rho>) +\n  set_nn_integral R X (\\<delta>h \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "have \"... = emeasure (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_nn_integral R X (\\<delta>g \\<rho>) +\n    set_nn_integral R X (\\<delta>h \\<rho>) =\n    emeasure\n     (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) X", "using X \\<rho>"], ["proof (prove)\nusing this:\n  X \\<in> sets R\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. set_nn_integral R X (\\<delta>g \\<rho>) +\n    set_nn_integral R X (\\<delta>h \\<rho>) =\n    emeasure\n     (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) X", "using has_parametrized_subprob_densityD(2,3)[OF densg]"], ["proof (prove)\nusing this:\n  X \\<in> sets R\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  ?x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  subprob_space (dens_ctxt_measure dc_True.\\<Y> ?x \\<bind> g)\n  (\\<lambda>(x, y). \\<delta>g x y)\n  \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M R)\n\ngoal (1 subgoal):\n 1. set_nn_integral R X (\\<delta>g \\<rho>) +\n    set_nn_integral R X (\\<delta>h \\<rho>) =\n    emeasure\n     (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) X", "using has_parametrized_subprob_densityD(2,3)[OF densh]"], ["proof (prove)\nusing this:\n  X \\<in> sets R\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  ?x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  subprob_space (dens_ctxt_measure dc_True.\\<Y> ?x \\<bind> g)\n  (\\<lambda>(x, y). \\<delta>g x y)\n  \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M R)\n  ?x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  subprob_space (dens_ctxt_measure dc_False.\\<Y> ?x \\<bind> h)\n  (\\<lambda>(x, y). \\<delta>h x y)\n  \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M R)\n\ngoal (1 subgoal):\n 1. set_nn_integral R X (\\<delta>g \\<rho>) +\n    set_nn_integral R X (\\<delta>h \\<rho>) =\n    emeasure\n     (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) X", "apply (subst (1 2) emeasure_density[symmetric], simp_all) []"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<rho> \\<in> space (state_measure V' \\<Gamma>);\n     \\<And>x.\n        x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n        subprob_space (dens_ctxt_measure dc_True.\\<Y> x \\<bind> g);\n     (\\<lambda>(x, y). \\<delta>g x y)\n     \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M R);\n     \\<And>x.\n        x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n        subprob_space (dens_ctxt_measure dc_False.\\<Y> x \\<bind> h);\n     (\\<lambda>(x, y). \\<delta>h x y)\n     \\<in> borel_measurable\n            (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M R)\\<rbrakk>\n    \\<Longrightarrow> emeasure (density R (\\<delta>g \\<rho>)) X +\n                      emeasure (density R (\\<delta>h \\<rho>)) X =\n                      emeasure\n                       (density R\n                         (\\<lambda>x.\n                             \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))\n                       X", "apply (intro emeasure_density_add, simp_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  set_nn_integral R X (\\<delta>g \\<rho>) +\n  set_nn_integral R X (\\<delta>h \\<rho>) =\n  emeasure (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))\n   X\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets\n                (M \\<bind>\n                 (\\<lambda>x. if P x then g x else h x)) \\<Longrightarrow>\n       emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) A =\n       emeasure\n        (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) A", "finally"], ["proof (chain)\npicking this:\n  emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) X =\n  emeasure (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))\n   X", "show \"emeasure ?lhs X = emeasure ?rhs X\""], ["proof (prove)\nusing this:\n  emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) X =\n  emeasure (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))\n   X\n\ngoal (1 subgoal):\n 1. emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) X =\n    emeasure\n     (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x)) X", "."], ["proof (state)\nthis:\n  emeasure (M \\<bind> (\\<lambda>x. if P x then g x else h x)) X =\n  emeasure (density R (\\<lambda>x. \\<delta>g \\<rho> x + \\<delta>h \\<rho> x))\n   X\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Soundness proof\\<close>"], ["", "lemma restrict_state_measure[measurable]:\n  \"(\\<lambda>x. restrict x V') \\<in> measurable (state_measure (V \\<union> V') \\<Gamma>) (state_measure V' \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. restrict x V')\n    \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n          state_measure V' \\<Gamma>", "by (simp add: state_measure_def)"], ["", "lemma expr_has_density_sound_op:\n  assumes dens_ctxt: \"density_context V V' \\<Gamma> \\<delta>\"\n  assumes dens: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n                   (\\<lambda>\\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t) f\"\n  assumes Mg: \"case_prod g \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')\"\n  assumes dens': \"\\<And>M \\<rho>. has_subprob_density M (stock_measure t) (f \\<rho>) \\<Longrightarrow>\n                            has_density (distr M (stock_measure t') (op_sem oper))\n                                        (stock_measure t') (g \\<rho>)\"\n  assumes t1: \"\\<Gamma> \\<turnstile> e : t\" and t2 : \"op_type oper t = Some t'\"\n  assumes free_vars: \"free_vars (oper $$ e) \\<subseteq> V \\<union> V'\"\n  shows \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n           (\\<lambda>\\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e))) (stock_measure t') g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n     (stock_measure t') g", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n     (stock_measure t') g", "interpret density_context V V' \\<Gamma> \\<delta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n     (stock_measure t') g", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n     (stock_measure t') g", "unfolding has_parametrized_subprob_density_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>space (state_measure V' \\<Gamma>).\n        has_subprob_density\n         (dens_ctxt_measure \\<Y> x \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n         (stock_measure t') (g x)) \\<and>\n    (\\<lambda>(x, y). g x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')", "proof (intro conjI ballI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n        (stock_measure t') (g x)\n 2. (\\<lambda>(x, y). g x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')", "show \"case_prod g \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). g x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')", "by fact"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). g x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n        (stock_measure t') (g x)", "fix \\<rho>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n        (stock_measure t') (g x)", "assume \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\""], ["proof (state)\nthis:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n        (stock_measure t') (g x)", "let ?M = \"dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n        (stock_measure t') (g x)", "have Me: \"(\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<in> measurable ?M (subprob_algebra (stock_measure t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n    \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n          subprob_algebra (stock_measure t)", "by (subst measurable_dens_ctxt_measure_eq)\n         (insert assms t1, auto intro!: measurable_expr_sem)"], ["proof (state)\nthis:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure t)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n        (stock_measure t') (g x)", "from dens and \\<rho>"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)", "have dens: \"has_subprob_density (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t) (f \\<rho>)\""], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (f \\<rho>)", "unfolding has_parametrized_subprob_density_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>space (state_measure V' \\<Gamma>).\n      has_subprob_density\n       (dens_ctxt_measure \\<Y> x \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t) (f x)) \\<and>\n  (\\<lambda>(x, y). f x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (f \\<rho>)", "by auto"], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n        (stock_measure t') (g x)", "have \"has_subprob_density (distr (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t') (op_sem oper))\n                           (stock_measure t') (g \\<rho>)\" (is \"has_subprob_density ?N _ _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_subprob_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t') (op_sem oper))\n     (stock_measure t') (g \\<rho>)", "proof (unfold has_subprob_density_def, intro conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t') (op_sem oper))\n     (stock_measure t') (g \\<rho>)\n 2. subprob_space\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t') (op_sem oper))", "show \"subprob_space ?N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subprob_space\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t') (op_sem oper))", "apply (intro subprob_space.subprob_space_distr has_subprob_densityD[OF dens])"], ["proof (prove)\ngoal (2 subgoals):\n 1. op_sem oper\n    \\<in> (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) \\<rightarrow>\\<^sub>M\n          stock_measure t'\n 2. space (stock_measure t') \\<noteq> {}", "apply (subst measurable_cong_sets[OF sets_bind_measurable refl])"], ["proof (prove)\ngoal (4 subgoals):\n 1. (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n    \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n          subprob_algebra ?M'3\n 2. space (dens_ctxt_measure \\<Y> \\<rho>) \\<noteq> {}\n 3. op_sem oper \\<in> ?M'3 \\<rightarrow>\\<^sub>M stock_measure t'\n 4. space (stock_measure t') \\<noteq> {}", "apply (rule Me)"], ["proof (prove)\ngoal (3 subgoals):\n 1. space (dens_ctxt_measure \\<Y> \\<rho>) \\<noteq> {}\n 2. op_sem oper \\<in> stock_measure t \\<rightarrow>\\<^sub>M stock_measure t'\n 3. space (stock_measure t') \\<noteq> {}", "apply (simp_all add: measurable_op_sem t2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  subprob_space\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t') (op_sem oper))\n\ngoal (1 subgoal):\n 1. has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t') (op_sem oper))\n     (stock_measure t') (g \\<rho>)", "from dens"], ["proof (chain)\npicking this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)", "show \"has_density ?N (stock_measure t') (g \\<rho>)\""], ["proof (prove)\nusing this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t') (op_sem oper))\n     (stock_measure t') (g \\<rho>)", "by (intro dens') (simp add: has_subprob_density_def)"], ["proof (state)\nthis:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t') (op_sem oper))\n   (stock_measure t') (g \\<rho>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_subprob_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t') (op_sem oper))\n   (stock_measure t') (g \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n        (stock_measure t') (g x)", "also"], ["proof (state)\nthis:\n  has_subprob_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t') (op_sem oper))\n   (stock_measure t') (g \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n        (stock_measure t') (g x)", "from assms and \\<rho>"], ["proof (chain)\npicking this:\n  density_context V V' \\<Gamma> \\<delta>\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n  (\\<lambda>(x, y). g x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')\n  has_subprob_density ?M (stock_measure t) (f ?\\<rho>) \\<Longrightarrow>\n  has_density (distr ?M (stock_measure t') (op_sem oper)) (stock_measure t')\n   (g ?\\<rho>)\n  \\<Gamma> \\<turnstile> e : t\n  op_type oper t = Some t'\n  free_vars (oper $$ e) \\<subseteq> V \\<union> V'\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)", "have \"?N = ?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e))\""], ["proof (prove)\nusing this:\n  density_context V V' \\<Gamma> \\<delta>\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n  (\\<lambda>(x, y). g x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')\n  has_subprob_density ?M (stock_measure t) (f ?\\<rho>) \\<Longrightarrow>\n  has_density (distr ?M (stock_measure t') (op_sem oper)) (stock_measure t')\n   (g ?\\<rho>)\n  \\<Gamma> \\<turnstile> e : t\n  op_type oper t = Some t'\n  free_vars (oper $$ e) \\<subseteq> V \\<union> V'\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t') (op_sem oper) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e))", "by (intro expr_sem_op_eq_distr[symmetric] expr_typing.intros) simp_all"], ["proof (state)\nthis:\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t') (op_sem oper) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n        (stock_measure t') (g x)", "finally"], ["proof (chain)\npicking this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n   (stock_measure t') (g \\<rho>)", "show \"has_subprob_density ... (stock_measure t') (g \\<rho>)\""], ["proof (prove)\nusing this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n   (stock_measure t') (g \\<rho>)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n     (stock_measure t') (g \\<rho>)", "."], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n   (stock_measure t') (g \\<rho>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n   (stock_measure t') g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma expr_has_density_sound_aux:\n  assumes \"(V,V',\\<Gamma>,\\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\" \"\\<Gamma> \\<turnstile> e : t\"\n          \"density_context V V' \\<Gamma> \\<delta>\" \"free_vars e \\<subseteq> V \\<union> V'\"\n  shows \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n             (\\<lambda>\\<rho>. do {\\<sigma> \\<leftarrow> dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho>; expr_sem \\<sigma> e}) (stock_measure t)\n             (\\<lambda>\\<rho> x. f \\<rho> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) f", "using assms"], ["proof (prove)\nusing this:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<Gamma> \\<turnstile> e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars e \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) f", "proof (induction arbitrary: t rule: expr_has_density.induct[split_format (complete)])"], ["proof (state)\ngoal (20 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t f' ta.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> e : t;\n        \\<And>\\<rho>.\n           \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n           AE x in stock_measure t. f \\<rho> x = f' \\<rho> x;\n        (\\<lambda>(x, y). f' x y)\n        \\<in> borel_measurable\n               (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                stock_measure t);\n        \\<Gamma> \\<turnstile> e : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure ta) f'\n 2. \\<And>V V' \\<Gamma> \\<delta> e f \\<delta>' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<And>\\<sigma>.\n           \\<sigma>\n           \\<in> space\n                  (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n           \\<delta> \\<sigma> = \\<delta>' \\<sigma>;\n        \\<Gamma> \\<turnstile> e : t;\n        density_context V V' \\<Gamma> \\<delta>';\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>')\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure t) f\n 3. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 4. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 5. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 7. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 8. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 9. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 10. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n        \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                  \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                  b \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n             density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n             free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure (V \\<union> V') \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    ({}, V \\<union> V', \\<Gamma>,\n                                     \\<lambda>a. 1)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                               (stock_measure t) f;\n         (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n          e1 \\<Rightarrow> g1;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n             density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n             free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens \\<delta> f True)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e1))\n                               (stock_measure t) g1;\n         (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n          e2 \\<Rightarrow> g2;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n             density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n             free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens \\<delta> f False)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e2))\n                               (stock_measure t) g2;\n         \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (IF b THEN e1 ELSE e2)))\n                           (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\nA total of 20 subgoals...", "case (hd_AE V V' \\<Gamma> \\<delta> e f t f' t')"], ["proof (state)\nthis:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<Gamma> \\<turnstile> e : t\n  ?\\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  AE x in stock_measure t. f ?\\<rho> x = f' ?\\<rho> x\n  (\\<lambda>(x, y). f' x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars e \\<subseteq> V \\<union> V'\n\ngoal (20 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t f' ta.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> e : t;\n        \\<And>\\<rho>.\n           \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n           AE x in stock_measure t. f \\<rho> x = f' \\<rho> x;\n        (\\<lambda>(x, y). f' x y)\n        \\<in> borel_measurable\n               (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                stock_measure t);\n        \\<Gamma> \\<turnstile> e : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure ta) f'\n 2. \\<And>V V' \\<Gamma> \\<delta> e f \\<delta>' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<And>\\<sigma>.\n           \\<sigma>\n           \\<in> space\n                  (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n           \\<delta> \\<sigma> = \\<delta>' \\<sigma>;\n        \\<Gamma> \\<turnstile> e : t;\n        density_context V V' \\<Gamma> \\<delta>';\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>')\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure t) f\n 3. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 4. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 5. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 7. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 8. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 9. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 10. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n        \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                  \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                  b \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n             density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n             free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure (V \\<union> V') \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    ({}, V \\<union> V', \\<Gamma>,\n                                     \\<lambda>a. 1)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                               (stock_measure t) f;\n         (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n          e1 \\<Rightarrow> g1;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n             density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n             free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens \\<delta> f True)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e1))\n                               (stock_measure t) g1;\n         (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n          e2 \\<Rightarrow> g2;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n             density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n             free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens \\<delta> f False)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e2))\n                               (stock_measure t) g2;\n         \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (IF b THEN e1 ELSE e2)))\n                           (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\nA total of 20 subgoals...", "from \\<open>\\<Gamma> \\<turnstile> e : t'\\<close> and \\<open>\\<Gamma> \\<turnstile> e : t\\<close>"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> e : t'\n  \\<Gamma> \\<turnstile> e : t", "have t[simp]: \"t' = t\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> e : t'\n  \\<Gamma> \\<turnstile> e : t\n\ngoal (1 subgoal):\n 1. t' = t", "by (rule expr_typing_unique)"], ["proof (state)\nthis:\n  t' = t\n\ngoal (20 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t f' ta.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> e : t;\n        \\<And>\\<rho>.\n           \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n           AE x in stock_measure t. f \\<rho> x = f' \\<rho> x;\n        (\\<lambda>(x, y). f' x y)\n        \\<in> borel_measurable\n               (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                stock_measure t);\n        \\<Gamma> \\<turnstile> e : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure ta) f'\n 2. \\<And>V V' \\<Gamma> \\<delta> e f \\<delta>' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<And>\\<sigma>.\n           \\<sigma>\n           \\<in> space\n                  (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n           \\<delta> \\<sigma> = \\<delta>' \\<sigma>;\n        \\<Gamma> \\<turnstile> e : t;\n        density_context V V' \\<Gamma> \\<delta>';\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>')\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure t) f\n 3. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 4. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 5. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 7. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 8. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 9. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 10. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n        \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                  \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                  b \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n             density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n             free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure (V \\<union> V') \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    ({}, V \\<union> V', \\<Gamma>,\n                                     \\<lambda>a. 1)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                               (stock_measure t) f;\n         (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n          e1 \\<Rightarrow> g1;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n             density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n             free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens \\<delta> f True)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e1))\n                               (stock_measure t) g1;\n         (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n          e2 \\<Rightarrow> g2;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n             density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n             free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens \\<delta> f False)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e2))\n                               (stock_measure t) g2;\n         \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (IF b THEN e1 ELSE e2)))\n                           (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\nA total of 20 subgoals...", "have \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n          (\\<lambda>\\<rho>. dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t) f\" (is ?P)"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) f", "by (intro hd_AE.IH) fact+"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n\ngoal (20 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t f' ta.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> e : t;\n        \\<And>\\<rho>.\n           \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n           AE x in stock_measure t. f \\<rho> x = f' \\<rho> x;\n        (\\<lambda>(x, y). f' x y)\n        \\<in> borel_measurable\n               (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                stock_measure t);\n        \\<Gamma> \\<turnstile> e : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure ta) f'\n 2. \\<And>V V' \\<Gamma> \\<delta> e f \\<delta>' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<And>\\<sigma>.\n           \\<sigma>\n           \\<in> space\n                  (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n           \\<delta> \\<sigma> = \\<delta>' \\<sigma>;\n        \\<Gamma> \\<turnstile> e : t;\n        density_context V V' \\<Gamma> \\<delta>';\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>')\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure t) f\n 3. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 4. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 5. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 7. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 8. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 9. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 10. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n        \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                  \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                  b \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n             density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n             free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure (V \\<union> V') \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    ({}, V \\<union> V', \\<Gamma>,\n                                     \\<lambda>a. 1)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                               (stock_measure t) f;\n         (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n          e1 \\<Rightarrow> g1;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n             density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n             free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens \\<delta> f True)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e1))\n                               (stock_measure t) g1;\n         (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n          e2 \\<Rightarrow> g2;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n             density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n             free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens \\<delta> f False)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e2))\n                               (stock_measure t) g2;\n         \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (IF b THEN e1 ELSE e2)))\n                           (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\nA total of 20 subgoals...", "from has_parametrized_subprob_density_dens_AE[OF hd_AE.hyps(3,4) this]"], ["proof (chain)\npicking this:\n  (\\<And>x.\n      x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n      x \\<in> space (state_measure V' \\<Gamma>)) \\<Longrightarrow>\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f'", "show ?case"], ["proof (prove)\nusing this:\n  (\\<And>x.\n      x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n      x \\<in> space (state_measure V' \\<Gamma>)) \\<Longrightarrow>\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f'\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t') f'", "by simp"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t') f'\n\ngoal (19 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f \\<delta>' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<And>\\<sigma>.\n           \\<sigma>\n           \\<in> space\n                  (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n           \\<delta> \\<sigma> = \\<delta>' \\<sigma>;\n        \\<Gamma> \\<turnstile> e : t;\n        density_context V V' \\<Gamma> \\<delta>';\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>')\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure t) f\n 2. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 3. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 4. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 6. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 7. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 8. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 9. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 10. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n        \\<lbrakk>randomfree b;\n         (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n          e1 \\<Rightarrow> g1;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n             free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b True)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e1))\n                               (stock_measure t) g1;\n         (V, V', \\<Gamma>,\n          if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n          e2 \\<Rightarrow> g2;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n             free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b False)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e2))\n                               (stock_measure t) g2;\n         \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (IF b THEN e1 ELSE e2)))\n                           (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\nA total of 19 subgoals...", "next"], ["proof (state)\ngoal (19 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f \\<delta>' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<And>\\<sigma>.\n           \\<sigma>\n           \\<in> space\n                  (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n           \\<delta> \\<sigma> = \\<delta>' \\<sigma>;\n        \\<Gamma> \\<turnstile> e : t;\n        density_context V V' \\<Gamma> \\<delta>';\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>')\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure t) f\n 2. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 3. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 4. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 6. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 7. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 8. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 9. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 10. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n        \\<lbrakk>randomfree b;\n         (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n          e1 \\<Rightarrow> g1;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n             free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b True)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e1))\n                               (stock_measure t) g1;\n         (V, V', \\<Gamma>,\n          if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n          e2 \\<Rightarrow> g2;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n             free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b False)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e2))\n                               (stock_measure t) g2;\n         \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (IF b THEN e1 ELSE e2)))\n                           (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\nA total of 19 subgoals...", "case (hd_dens_ctxt_cong V V' \\<Gamma> \\<delta> e f \\<delta>' t)"], ["proof (state)\nthis:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  ?\\<sigma>\n  \\<in> space (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n  \\<delta> ?\\<sigma> = \\<delta>' ?\\<sigma>\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> e : t\n  density_context V V' \\<Gamma> \\<delta>'\n  free_vars e \\<subseteq> V \\<union> V'\n\ngoal (19 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f \\<delta>' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<And>\\<sigma>.\n           \\<sigma>\n           \\<in> space\n                  (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n           \\<delta> \\<sigma> = \\<delta>' \\<sigma>;\n        \\<Gamma> \\<turnstile> e : t;\n        density_context V V' \\<Gamma> \\<delta>';\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>')\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure t) f\n 2. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 3. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 4. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 6. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 7. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 8. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 9. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 10. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n        \\<lbrakk>randomfree b;\n         (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n          e1 \\<Rightarrow> g1;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n             free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b True)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e1))\n                               (stock_measure t) g1;\n         (V, V', \\<Gamma>,\n          if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n          e2 \\<Rightarrow> g2;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n             free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b False)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e2))\n                               (stock_measure t) g2;\n         \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (IF b THEN e1 ELSE e2)))\n                           (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\nA total of 19 subgoals...", "interpret dc': density_context V V' \\<Gamma> \\<delta>'"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>'", "by fact"], ["proof (state)\ngoal (19 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f \\<delta>' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<And>\\<sigma>.\n           \\<sigma>\n           \\<in> space\n                  (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n           \\<delta> \\<sigma> = \\<delta>' \\<sigma>;\n        \\<Gamma> \\<turnstile> e : t;\n        density_context V V' \\<Gamma> \\<delta>';\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>')\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure t) f\n 2. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 3. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 4. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 6. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 7. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 8. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 9. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 10. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n        \\<lbrakk>randomfree b;\n         (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n          e1 \\<Rightarrow> g1;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n             free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b True)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e1))\n                               (stock_measure t) g1;\n         (V, V', \\<Gamma>,\n          if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n          e2 \\<Rightarrow> g2;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n             free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b False)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e2))\n                               (stock_measure t) g2;\n         \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (IF b THEN e1 ELSE e2)))\n                           (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\nA total of 19 subgoals...", "from hd_dens_ctxt_cong.hyps and dc'.measurable_dens"], ["proof (chain)\npicking this:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  ?\\<sigma>\n  \\<in> space (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n  \\<delta> ?\\<sigma> = \\<delta>' ?\\<sigma>\n  \\<delta>' \\<in> borel_measurable (state_measure (V \\<union> V') \\<Gamma>)", "have [simp]: \"\\<delta> \\<in> borel_measurable (state_measure (V \\<union> V') \\<Gamma>)\""], ["proof (prove)\nusing this:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  ?\\<sigma>\n  \\<in> space (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n  \\<delta> ?\\<sigma> = \\<delta>' ?\\<sigma>\n  \\<delta>' \\<in> borel_measurable (state_measure (V \\<union> V') \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<delta> \\<in> borel_measurable (state_measure (V \\<union> V') \\<Gamma>)", "by (erule_tac subst[OF measurable_cong, rotated]) simp"], ["proof (state)\nthis:\n  \\<delta> \\<in> borel_measurable (state_measure (V \\<union> V') \\<Gamma>)\n\ngoal (19 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f \\<delta>' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<And>\\<sigma>.\n           \\<sigma>\n           \\<in> space\n                  (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n           \\<delta> \\<sigma> = \\<delta>' \\<sigma>;\n        \\<Gamma> \\<turnstile> e : t;\n        density_context V V' \\<Gamma> \\<delta>';\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>')\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure t) f\n 2. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 3. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 4. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 6. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 7. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 8. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 9. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 10. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n        \\<lbrakk>randomfree b;\n         (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n          e1 \\<Rightarrow> g1;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n             free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b True)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e1))\n                               (stock_measure t) g1;\n         (V, V', \\<Gamma>,\n          if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n          e2 \\<Rightarrow> g2;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n             free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b False)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e2))\n                               (stock_measure t) g2;\n         \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (IF b THEN e1 ELSE e2)))\n                           (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\nA total of 19 subgoals...", "hence \"density_context V V' \\<Gamma> \\<delta>\""], ["proof (prove)\nusing this:\n  \\<delta> \\<in> borel_measurable (state_measure (V \\<union> V') \\<Gamma>)\n\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>", "by (intro density_context_equiv[OF hd_dens_ctxt_cong.hyps(2)[symmetric]])\n       (insert hd_dens_ctxt_cong.prems hd_dens_ctxt_cong.hyps, simp_all)"], ["proof (state)\nthis:\n  density_context V V' \\<Gamma> \\<delta>\n\ngoal (19 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f \\<delta>' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<And>\\<sigma>.\n           \\<sigma>\n           \\<in> space\n                  (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n           \\<delta> \\<sigma> = \\<delta>' \\<sigma>;\n        \\<Gamma> \\<turnstile> e : t;\n        density_context V V' \\<Gamma> \\<delta>';\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>')\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure t) f\n 2. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 3. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 4. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 6. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 7. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 8. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 9. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 10. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n        \\<lbrakk>randomfree b;\n         (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n          e1 \\<Rightarrow> g1;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n             free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b True)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e1))\n                               (stock_measure t) g1;\n         (V, V', \\<Gamma>,\n          if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n          e2 \\<Rightarrow> g2;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n             free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b False)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e2))\n                               (stock_measure t) g2;\n         \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (IF b THEN e1 ELSE e2)))\n                           (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\nA total of 19 subgoals...", "hence \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n          (\\<lambda>\\<rho>. dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t) f\" (is ?P)"], ["proof (prove)\nusing this:\n  density_context V V' \\<Gamma> \\<delta>\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) f", "using hd_dens_ctxt_cong.prems hd_dens_ctxt_cong.hyps"], ["proof (prove)\nusing this:\n  density_context V V' \\<Gamma> \\<delta>\n  \\<Gamma> \\<turnstile> e : t\n  density_context V V' \\<Gamma> \\<delta>'\n  free_vars e \\<subseteq> V \\<union> V'\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  ?\\<sigma>\n  \\<in> space (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n  \\<delta> ?\\<sigma> = \\<delta>' ?\\<sigma>\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) f", "by (intro hd_dens_ctxt_cong.IH) simp_all"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n\ngoal (19 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f \\<delta>' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<And>\\<sigma>.\n           \\<sigma>\n           \\<in> space\n                  (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n           \\<delta> \\<sigma> = \\<delta>' \\<sigma>;\n        \\<Gamma> \\<turnstile> e : t;\n        density_context V V' \\<Gamma> \\<delta>';\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>')\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure t) f\n 2. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 3. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 4. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 6. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 7. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 8. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 9. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 10. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n        \\<lbrakk>randomfree b;\n         (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n          e1 \\<Rightarrow> g1;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n             free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b True)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e1))\n                               (stock_measure t) g1;\n         (V, V', \\<Gamma>,\n          if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n          e2 \\<Rightarrow> g2;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n             free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b False)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e2))\n                               (stock_measure t) g2;\n         \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (IF b THEN e1 ELSE e2)))\n                           (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\nA total of 19 subgoals...", "also"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n\ngoal (19 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f \\<delta>' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<And>\\<sigma>.\n           \\<sigma>\n           \\<in> space\n                  (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n           \\<delta> \\<sigma> = \\<delta>' \\<sigma>;\n        \\<Gamma> \\<turnstile> e : t;\n        density_context V V' \\<Gamma> \\<delta>';\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>')\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure t) f\n 2. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 3. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 4. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 6. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 7. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 8. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 9. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 10. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n        \\<lbrakk>randomfree b;\n         (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n          e1 \\<Rightarrow> g1;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n             free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b True)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e1))\n                               (stock_measure t) g1;\n         (V, V', \\<Gamma>,\n          if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n          e2 \\<Rightarrow> g2;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n             free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b False)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e2))\n                               (stock_measure t) g2;\n         \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (IF b THEN e1 ELSE e2)))\n                           (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\nA total of 19 subgoals...", "have \"\\<And>\\<sigma>. \\<sigma> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n                dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>') \\<sigma> = dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       \\<sigma> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure dc'.\\<Y> \\<sigma> =\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<sigma>", "by (auto simp: dens_ctxt_measure_def state_measure'_def AE_distr_iff hd_dens_ctxt_cong.hyps\n             intro!: density_cong)"], ["proof (state)\nthis:\n  ?\\<sigma> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  dens_ctxt_measure dc'.\\<Y> ?\\<sigma> =\n  dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) ?\\<sigma>\n\ngoal (19 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f \\<delta>' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<And>\\<sigma>.\n           \\<sigma>\n           \\<in> space\n                  (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n           \\<delta> \\<sigma> = \\<delta>' \\<sigma>;\n        \\<Gamma> \\<turnstile> e : t;\n        density_context V V' \\<Gamma> \\<delta>';\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>')\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure t) f\n 2. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 3. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 4. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 6. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 7. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 8. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 9. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 10. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n        \\<lbrakk>randomfree b;\n         (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n          e1 \\<Rightarrow> g1;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n             free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b True)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e1))\n                               (stock_measure t) g1;\n         (V, V', \\<Gamma>,\n          if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n          e2 \\<Rightarrow> g2;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n             free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b False)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e2))\n                               (stock_measure t) g2;\n         \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (IF b THEN e1 ELSE e2)))\n                           (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\nA total of 19 subgoals...", "hence \"?P \\<longleftrightarrow> ?case\""], ["proof (prove)\nusing this:\n  ?\\<sigma> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  dens_ctxt_measure dc'.\\<Y> ?\\<sigma> =\n  dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) ?\\<sigma>\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) f =\n    has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure dc'.\\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) f", "by (intro has_parametrized_subprob_density_cong) simp"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f =\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure dc'.\\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n\ngoal (19 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f \\<delta>' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<And>\\<sigma>.\n           \\<sigma>\n           \\<in> space\n                  (state_measure (V \\<union> V') \\<Gamma>) \\<Longrightarrow>\n           \\<delta> \\<sigma> = \\<delta>' \\<sigma>;\n        \\<Gamma> \\<turnstile> e : t;\n        density_context V V' \\<Gamma> \\<delta>';\n        free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>')\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                          (stock_measure t) f\n 2. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 3. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 4. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 6. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 7. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 8. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 9. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 10. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n        \\<lbrakk>randomfree b;\n         (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n          e1 \\<Rightarrow> g1;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n             free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b True)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e1))\n                               (stock_measure t) g1;\n         (V, V', \\<Gamma>,\n          if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n          e2 \\<Rightarrow> g2;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n             density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n             free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>,\n                                     if_dens_det \\<delta> b False)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>.\n expr_sem \\<sigma> e2))\n                               (stock_measure t) g2;\n         \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (IF b THEN e1 ELSE e2)))\n                           (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\nA total of 19 subgoals...", "finally"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure dc'.\\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f", "show ?case"], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure dc'.\\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure dc'.\\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) f", "."], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure dc'.\\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n\ngoal (18 subgoals):\n 1. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 2. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 3. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 5. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 6. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 7. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 8. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 9. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Fst $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Fst $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ y. f a <|b, y|>\n            \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\nA total of 18 subgoals...", "next"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 2. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 3. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 5. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 6. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 7. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 8. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 9. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Fst $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Fst $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ y. f a <|b, y|>\n            \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\nA total of 18 subgoals...", "case (hd_val v V V' \\<Gamma> \\<delta> t)"], ["proof (state)\nthis:\n  countable_type (val_type v)\n  \\<Gamma> \\<turnstile> Val v : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Val v) \\<subseteq> V \\<union> V'\n\ngoal (18 subgoals):\n 1. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 2. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 3. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 5. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 6. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 7. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 8. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 9. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Fst $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Fst $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ y. f a <|b, y|>\n            \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\nA total of 18 subgoals...", "hence [simp]: \"t = val_type v\""], ["proof (prove)\nusing this:\n  countable_type (val_type v)\n  \\<Gamma> \\<turnstile> Val v : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Val v) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. t = val_type v", "by auto"], ["proof (state)\nthis:\n  t = val_type v\n\ngoal (18 subgoals):\n 1. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 2. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 3. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 5. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 6. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 7. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 8. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 9. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Fst $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Fst $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ y. f a <|b, y|>\n            \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\nA total of 18 subgoals...", "interpret density_context V V' \\<Gamma> \\<delta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>", "by fact"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>v V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>countable_type (val_type v);\n        \\<Gamma> \\<turnstile> Val v : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Val v) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Val v)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              indicator {v} b)\n 2. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 3. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 5. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 6. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 7. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 8. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 9. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Fst $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Fst $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ y. f a <|b, y|>\n            \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\nA total of 18 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)))\n     (stock_measure t) (\\<lambda>a b. branch_prob \\<Y> a * indicator {v} b)", "proof (rule has_parametrized_subprob_densityI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> x \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)) =\n       density (stock_measure t)\n        (\\<lambda>a. branch_prob \\<Y> x * indicator {v} a)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)))\n 3. (\\<lambda>(b, a). branch_prob \\<Y> b * indicator {v} a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "show \"(\\<lambda>(\\<rho>, y). branch_prob (V,V',\\<Gamma>,\\<delta>) \\<rho> * indicator {v} y) \\<in>\n              borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<rho>, y). branch_prob \\<Y> \\<rho> * indicator {v} y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "by (subst measurable_split_conv)\n         (auto intro!: measurable_compose[OF measurable_snd borel_measurable_indicator]\n                       borel_measurable_times_ennreal)"], ["proof (state)\nthis:\n  (\\<lambda>(\\<rho>, y). branch_prob \\<Y> \\<rho> * indicator {v} y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> x \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)) =\n       density (stock_measure t)\n        (\\<lambda>a. branch_prob \\<Y> x * indicator {v} a)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)))", "fix \\<rho>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> x \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)) =\n       density (stock_measure t)\n        (\\<lambda>a. branch_prob \\<Y> x * indicator {v} a)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)))", "assume \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\""], ["proof (state)\nthis:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> x \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)) =\n       density (stock_measure t)\n        (\\<lambda>a. branch_prob \\<Y> x * indicator {v} a)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)))", "have return_probspace: \"prob_space (return_val v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space (return_val v)", "unfolding return_val_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space (return (stock_measure (val_type v)) v)", "by (simp add: prob_space_return)"], ["proof (state)\nthis:\n  prob_space (return_val v)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> x \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)) =\n       density (stock_measure t)\n        (\\<lambda>a. branch_prob \\<Y> x * indicator {v} a)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)))", "thus \"subprob_space (dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)))\""], ["proof (prove)\nusing this:\n  prob_space (return_val v)\n\ngoal (1 subgoal):\n 1. subprob_space\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)))", "using \\<rho>"], ["proof (prove)\nusing this:\n  prob_space (return_val v)\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. subprob_space\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)))", "by (auto simp: return_val_def\n              intro!: measurable_compose[OF measurable_const return_measurable] subprob_space_bind\n                      subprob_space_dens hd_val.prems)"], ["proof (state)\nthis:\n  subprob_space\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> x \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)) =\n       density (stock_measure t)\n        (\\<lambda>a. branch_prob \\<Y> x * indicator {v} a)", "from hd_val.hyps"], ["proof (chain)\npicking this:\n  countable_type (val_type v)", "have \"stock_measure (val_type v) = count_space (type_universe t)\""], ["proof (prove)\nusing this:\n  countable_type (val_type v)\n\ngoal (1 subgoal):\n 1. stock_measure (val_type v) = count_space (type_universe t)", "by (simp add: countable_type_imp_count_space)"], ["proof (state)\nthis:\n  stock_measure (val_type v) = count_space (type_universe t)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> x \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)) =\n       density (stock_measure t)\n        (\\<lambda>a. branch_prob \\<Y> x * indicator {v} a)", "thus \"dens_ctxt_measure \\<Y> \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)) =\n            density (stock_measure t) (\\<lambda>x. branch_prob \\<Y> \\<rho> * indicator {v} x)\""], ["proof (prove)\nusing this:\n  stock_measure (val_type v) = count_space (type_universe t)\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)) =\n    density (stock_measure t)\n     (\\<lambda>x. branch_prob \\<Y> \\<rho> * indicator {v} x)", "by (subst expr_sem.simps, subst dens_ctxt_measure_bind_const, insert return_probspace)\n         (auto simp: return_val_def return_count_space_eq_density \\<rho>\n                     density_density_eq field_simps intro!: prob_space_imp_subprob_space)"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)) =\n  density (stock_measure t)\n   (\\<lambda>x. branch_prob \\<Y> \\<rho> * indicator {v} x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Val v)))\n   (stock_measure t) (\\<lambda>a b. branch_prob \\<Y> a * indicator {v} b)\n\ngoal (17 subgoals):\n 1. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 2. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 4. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 5. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 6. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 7. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 8. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Snd $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Snd $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x. f a <|x, b|>\n            \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 2. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 4. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 5. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 6. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 7. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 8. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Snd $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Snd $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x. f a <|x, b|>\n            \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\nA total of 17 subgoals...", "case (hd_var x V V' \\<Gamma> \\<delta> t)"], ["proof (state)\nthis:\n  x \\<in> V\n  \\<Gamma> \\<turnstile> Var x : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Var x) \\<subseteq> V \\<union> V'\n\ngoal (17 subgoals):\n 1. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 2. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 4. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 5. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 6. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 7. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 8. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Snd $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Snd $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x. f a <|x, b|>\n            \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\nA total of 17 subgoals...", "hence t: \"t = \\<Gamma> x\""], ["proof (prove)\nusing this:\n  x \\<in> V\n  \\<Gamma> \\<turnstile> Var x : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Var x) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. t = \\<Gamma> x", "by auto"], ["proof (state)\nthis:\n  t = \\<Gamma> x\n\ngoal (17 subgoals):\n 1. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 2. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 4. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 5. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 6. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 7. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 8. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Snd $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Snd $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x. f a <|x, b|>\n            \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\nA total of 17 subgoals...", "interpret density_context V V' \\<Gamma> \\<delta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>", "by fact"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 2. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 4. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 5. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 6. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 7. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 8. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Snd $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Snd $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x. f a <|x, b|>\n            \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\nA total of 17 subgoals...", "from hd_var"], ["proof (chain)\npicking this:\n  x \\<in> V\n  \\<Gamma> \\<turnstile> Var x : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Var x) \\<subseteq> V \\<union> V'", "have \"x \\<in> V\""], ["proof (prove)\nusing this:\n  x \\<in> V\n  \\<Gamma> \\<turnstile> Var x : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Var x) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. x \\<in> V", "by simp"], ["proof (state)\nthis:\n  x \\<in> V\n\ngoal (17 subgoals):\n 1. \\<And>x V V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; \\<Gamma> \\<turnstile> Var x : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Var x) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Var x)))\n                          (stock_measure t)\n                          (marg_dens (V, V', \\<Gamma>, \\<delta>) x)\n 2. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 4. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 5. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 6. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 7. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 8. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Snd $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Snd $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x. f a <|x, b|>\n            \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\nA total of 17 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)))\n     (stock_measure t) (marg_dens \\<Y> x)", "proof (rule has_parametrized_subprob_densityI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> xa \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n       density (stock_measure t) (marg_dens \\<Y> x xa)\n 2. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> xa \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)))\n 3. (\\<lambda>(b, a). marg_dens \\<Y> x b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "fix \\<rho>"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> xa \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n       density (stock_measure t) (marg_dens \\<Y> x xa)\n 2. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> xa \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)))\n 3. (\\<lambda>(b, a). marg_dens \\<Y> x b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "assume \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\""], ["proof (state)\nthis:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> xa \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n       density (stock_measure t) (marg_dens \\<Y> x xa)\n 2. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> xa \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)))\n 3. (\\<lambda>(b, a). marg_dens \\<Y> x b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "have \"subprob_space (dens_ctxt_measure \\<Y> \\<rho> \\<bind> (\\<lambda>\\<sigma>. return (stock_measure t) (\\<sigma> x)))\"\n      (is \"subprob_space (?M \\<bind> ?f)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. subprob_space\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. return (stock_measure t) (\\<sigma> x)))", "using hd_var \\<rho>"], ["proof (prove)\nusing this:\n  x \\<in> V\n  \\<Gamma> \\<turnstile> Var x : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Var x) \\<subseteq> V \\<union> V'\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. subprob_space\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. return (stock_measure t) (\\<sigma> x)))", "by (intro subprob_space_bind)\n         (auto simp: return_val_def t intro!: subprob_space_bind subprob_space_dens\n                 measurable_compose[OF measurable_dens_ctxt_measure_component return_measurable])"], ["proof (state)\nthis:\n  subprob_space\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. return (stock_measure t) (\\<sigma> x)))\n\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> xa \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n       density (stock_measure t) (marg_dens \\<Y> x xa)\n 2. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> xa \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)))\n 3. (\\<lambda>(b, a). marg_dens \\<Y> x b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "also"], ["proof (state)\nthis:\n  subprob_space\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. return (stock_measure t) (\\<sigma> x)))\n\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> xa \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n       density (stock_measure t) (marg_dens \\<Y> x xa)\n 2. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> xa \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)))\n 3. (\\<lambda>(b, a). marg_dens \\<Y> x b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "from hd_var.hyps"], ["proof (chain)\npicking this:\n  x \\<in> V", "have \"?M \\<bind> ?f = ?M \\<bind> (\\<lambda>\\<sigma>. return_val (\\<sigma> x))\""], ["proof (prove)\nusing this:\n  x \\<in> V\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. return (stock_measure t) (\\<sigma> x)) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. return_val (\\<sigma> x))", "by (intro bind_cong) (auto simp: return_val_def t space_dens_ctxt_measure\n                                 state_measure_def space_PiM dest!: PiE_mem)"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. return (stock_measure t) (\\<sigma> x)) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. return_val (\\<sigma> x))\n\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> xa \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n       density (stock_measure t) (marg_dens \\<Y> x xa)\n 2. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> xa \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)))\n 3. (\\<lambda>(b, a). marg_dens \\<Y> x b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "finally"], ["proof (chain)\npicking this:\n  subprob_space\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. return_val (\\<sigma> x)))", "show \"subprob_space (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)))\""], ["proof (prove)\nusing this:\n  subprob_space\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. return_val (\\<sigma> x)))\n\ngoal (1 subgoal):\n 1. subprob_space\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)))", "by simp"], ["proof (state)\nthis:\n  subprob_space\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)))\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> xa \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n       density (stock_measure t) (marg_dens \\<Y> x xa)\n 2. (\\<lambda>(b, a). marg_dens \\<Y> x b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "from hd_var"], ["proof (chain)\npicking this:\n  x \\<in> V\n  \\<Gamma> \\<turnstile> Var x : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Var x) \\<subseteq> V \\<union> V'", "interpret dcm: subprob_space \"dens_ctxt_measure \\<Y> \\<rho>\""], ["proof (prove)\nusing this:\n  x \\<in> V\n  \\<Gamma> \\<turnstile> Var x : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Var x) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. subprob_space (dens_ctxt_measure \\<Y> \\<rho>)", "by (intro subprob_space_dens \\<rho>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> xa \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n       density (stock_measure t) (marg_dens \\<Y> x xa)\n 2. (\\<lambda>(b, a). marg_dens \\<Y> x b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "let ?M1 = \"dens_ctxt_measure \\<Y> \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x))\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> xa \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n       density (stock_measure t) (marg_dens \\<Y> x xa)\n 2. (\\<lambda>(b, a). marg_dens \\<Y> x b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "let ?M2 = \"density (stock_measure t) (\\<lambda>v. marg_dens \\<Y> x \\<rho> v)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> xa \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n       density (stock_measure t) (marg_dens \\<Y> x xa)\n 2. (\\<lambda>(b, a). marg_dens \\<Y> x b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "have \"\\<forall>\\<sigma>\\<in>space (dens_ctxt_measure \\<Y> \\<rho>). val_type (\\<sigma> x) = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>\\<in>space (dens_ctxt_measure \\<Y> \\<rho>).\n       val_type (\\<sigma> x) = t", "using hd_var"], ["proof (prove)\nusing this:\n  x \\<in> V\n  \\<Gamma> \\<turnstile> Var x : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Var x) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>\\<in>space (dens_ctxt_measure \\<Y> \\<rho>).\n       val_type (\\<sigma> x) = t", "by (auto simp: space_dens_ctxt_measure space_PiM  PiE_iff\n                     state_measure_def intro: type_universe_type)"], ["proof (state)\nthis:\n  \\<forall>\\<sigma>\\<in>space (dens_ctxt_measure \\<Y> \\<rho>).\n     val_type (\\<sigma> x) = t\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> xa \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n       density (stock_measure t) (marg_dens \\<Y> x xa)\n 2. (\\<lambda>(b, a). marg_dens \\<Y> x b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "hence \"?M1 = dens_ctxt_measure \\<Y> \\<rho> \\<bind> (return (stock_measure t) \\<circ> (\\<lambda>\\<sigma>. \\<sigma> x))\""], ["proof (prove)\nusing this:\n  \\<forall>\\<sigma>\\<in>space (dens_ctxt_measure \\<Y> \\<rho>).\n     val_type (\\<sigma> x) = t\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    return (stock_measure t) \\<circ> (\\<lambda>\\<sigma>. \\<sigma> x)", "by (intro bind_cong_All) (simp add: return_val_def)"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  return (stock_measure t) \\<circ> (\\<lambda>\\<sigma>. \\<sigma> x)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> xa \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n       density (stock_measure t) (marg_dens \\<Y> x xa)\n 2. (\\<lambda>(b, a). marg_dens \\<Y> x b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "also"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  return (stock_measure t) \\<circ> (\\<lambda>\\<sigma>. \\<sigma> x)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> xa \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n       density (stock_measure t) (marg_dens \\<Y> x xa)\n 2. (\\<lambda>(b, a). marg_dens \\<Y> x b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "have \"... = distr (dens_ctxt_measure \\<Y> \\<rho>) (stock_measure t) (\\<lambda>\\<sigma>. \\<sigma> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    return (stock_measure t) \\<circ> (\\<lambda>\\<sigma>. \\<sigma> x) =\n    distr (dens_ctxt_measure \\<Y> \\<rho>) (stock_measure t)\n     (\\<lambda>\\<sigma>. \\<sigma> x)", "using dcm.subprob_not_empty hd_var"], ["proof (prove)\nusing this:\n  space (dens_ctxt_measure \\<Y> \\<rho>) \\<noteq> {}\n  x \\<in> V\n  \\<Gamma> \\<turnstile> Var x : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Var x) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    return (stock_measure t) \\<circ> (\\<lambda>\\<sigma>. \\<sigma> x) =\n    distr (dens_ctxt_measure \\<Y> \\<rho>) (stock_measure t)\n     (\\<lambda>\\<sigma>. \\<sigma> x)", "by (subst bind_return_distr) (auto intro!: measurable_dens_ctxt_measure_component)"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  return (stock_measure t) \\<circ> (\\<lambda>\\<sigma>. \\<sigma> x) =\n  distr (dens_ctxt_measure \\<Y> \\<rho>) (stock_measure t)\n   (\\<lambda>\\<sigma>. \\<sigma> x)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> xa \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n       density (stock_measure t) (marg_dens \\<Y> x xa)\n 2. (\\<lambda>(b, a). marg_dens \\<Y> x b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "also"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  return (stock_measure t) \\<circ> (\\<lambda>\\<sigma>. \\<sigma> x) =\n  distr (dens_ctxt_measure \\<Y> \\<rho>) (stock_measure t)\n   (\\<lambda>\\<sigma>. \\<sigma> x)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> xa \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n       density (stock_measure t) (marg_dens \\<Y> x xa)\n 2. (\\<lambda>(b, a). marg_dens \\<Y> x b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "have \"... = ?M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distr (dens_ctxt_measure \\<Y> \\<rho>) (stock_measure t)\n     (\\<lambda>\\<sigma>. \\<sigma> x) =\n    density (stock_measure t) (marg_dens \\<Y> x \\<rho>)", "using density_marg_dens_eq[OF \\<open>x \\<in> V\\<close>]"], ["proof (prove)\nusing this:\n  ?\\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  density (stock_measure (\\<Gamma> x)) (marg_dens \\<Y> x ?\\<rho>) =\n  distr (dens_ctxt_measure \\<Y> ?\\<rho>) (stock_measure (\\<Gamma> x))\n   (\\<lambda>\\<sigma>. \\<sigma> x)\n\ngoal (1 subgoal):\n 1. distr (dens_ctxt_measure \\<Y> \\<rho>) (stock_measure t)\n     (\\<lambda>\\<sigma>. \\<sigma> x) =\n    density (stock_measure t) (marg_dens \\<Y> x \\<rho>)", "by (simp add: t hd_var.prems \\<rho>)"], ["proof (state)\nthis:\n  distr (dens_ctxt_measure \\<Y> \\<rho>) (stock_measure t)\n   (\\<lambda>\\<sigma>. \\<sigma> x) =\n  density (stock_measure t) (marg_dens \\<Y> x \\<rho>)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure \\<Y> xa \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n       density (stock_measure t) (marg_dens \\<Y> x xa)\n 2. (\\<lambda>(b, a). marg_dens \\<Y> x b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "finally"], ["proof (chain)\npicking this:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n  density (stock_measure t) (marg_dens \\<Y> x \\<rho>)", "show \"?M1 = ?M2\""], ["proof (prove)\nusing this:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n  density (stock_measure t) (marg_dens \\<Y> x \\<rho>)\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n    density (stock_measure t) (marg_dens \\<Y> x \\<rho>)", "."], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)) =\n  density (stock_measure t) (marg_dens \\<Y> x \\<rho>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>(b, a). marg_dens \\<Y> x b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "qed (auto intro!: measurable_marg_dens' simp: hd_var t)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Var x)))\n   (stock_measure t) (marg_dens \\<Y> x)\n\ngoal (16 subgoals):\n 1. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 3. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 4. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 5. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 6. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 10. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n        \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n         (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> oper $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (oper $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              (if op_sem oper x = b then 1 else 0) * f a x\n            \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 3. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 4. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 5. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 6. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 10. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n        \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n         (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> oper $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (oper $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              (if op_sem oper x = b then 1 else 0) * f a x\n            \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\nA total of 16 subgoals...", "case (hd_let V V' \\<Gamma> e1 f \\<delta> e2 g t)"], ["proof (state)\nthis:\n  ({}, V \\<union> V', \\<Gamma>, \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n   e1 \\<Rightarrow> f\n  (shift_var_set V, Suc ` V',\n   case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n   insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n   e2 \\<Rightarrow> g\n  \\<lbrakk>\\<Gamma> \\<turnstile> e1 : ?t;\n   density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n   free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure (V \\<union> V') \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure\n                          ({}, V \\<union> V', \\<Gamma>, \\<lambda>a. 1)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                     (stock_measure ?t) f\n  \\<lbrakk>(\\<lambda>a.\n               case a of 0 \\<Rightarrow> the (expr_type \\<Gamma> e1)\n               | Suc x \\<Rightarrow> \\<Gamma> x)\n            \\<turnstile> e2 : ?t;\n   density_context (shift_var_set V) (Suc ` V')\n    (\\<lambda>a.\n        case a of 0 \\<Rightarrow> the (expr_type \\<Gamma> e1)\n        | Suc x \\<Rightarrow> \\<Gamma> x)\n    (insert_dens V V' f \\<delta>);\n   free_vars e2 \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure (Suc ` V')\n                       (\\<lambda>a.\n                           case a of\n                           0 \\<Rightarrow> the (expr_type \\<Gamma> e1)\n                           | Suc x \\<Rightarrow> \\<Gamma> x))\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure\n                          (shift_var_set V, Suc ` V',\n                           \\<lambda>a.\n                              case a of\n                              0 \\<Rightarrow> the (expr_type \\<Gamma> e1)\n                              | Suc x \\<Rightarrow> \\<Gamma> x,\n                           insert_dens V V' f \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                     (stock_measure ?t) g\n  \\<Gamma> \\<turnstile> LET e1 IN e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\n\ngoal (16 subgoals):\n 1. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 3. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 4. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 5. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 6. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 10. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n        \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n         (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> oper $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (oper $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              (if op_sem oper x = b then 1 else 0) * f a x\n            \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\nA total of 16 subgoals...", "let ?t = \"the (expr_type \\<Gamma> e1)\""], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 3. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 4. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 5. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 6. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 10. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n        \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n         (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> oper $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (oper $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              (if op_sem oper x = b then 1 else 0) * f a x\n            \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\nA total of 16 subgoals...", "let ?\\<Gamma>' = \"case_nat ?t \\<Gamma>\" and ?\\<delta>' = \"insert_dens V V' f \\<delta>\""], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 3. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 4. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 5. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 6. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 10. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n        \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n         (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> oper $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (oper $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              (if op_sem oper x = b then 1 else 0) * f a x\n            \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\nA total of 16 subgoals...", "let ?\\<Y>' = \"(shift_var_set V, Suc`V', ?\\<Gamma>', ?\\<delta>')\""], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 3. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 4. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 5. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 6. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 10. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n        \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n         (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> oper $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (oper $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              (if op_sem oper x = b then 1 else 0) * f a x\n            \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\nA total of 16 subgoals...", "from hd_let.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> LET e1 IN e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'", "have t1: \"\\<Gamma> \\<turnstile> e1 : ?t\" and t2: \"?\\<Gamma>' \\<turnstile> e2 : t\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> LET e1 IN e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> e1 : the (expr_type \\<Gamma> e1) &&&\n    case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma> \\<turnstile> e2 : t", "by (auto simp: expr_type_Some_iff[symmetric] split: option.split_asm)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> e1 : the (expr_type \\<Gamma> e1)\n  case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma> \\<turnstile> e2 : t\n\ngoal (16 subgoals):\n 1. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 3. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 4. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 5. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 6. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 10. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n        \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n         (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> oper $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (oper $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              (if op_sem oper x = b then 1 else 0) * f a x\n            \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\nA total of 16 subgoals...", "interpret dc: density_context V V' \\<Gamma> \\<delta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>", "by fact"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>V V' \\<Gamma> e1 f \\<delta> e2 g t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 e1 \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars e1 \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) f;\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g;\n        \\<And>t.\n           \\<lbrakk>case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>\n                     \\<turnstile> e2 : t;\n            density_context (shift_var_set V) (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)\n             (insert_dens V V' f \\<delta>);\n            free_vars e2\n            \\<subseteq> shift_var_set V \\<union> Suc ` V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (Suc ` V')\n                                (case_nat (the (expr_type \\<Gamma> e1))\n                                  \\<Gamma>))\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (shift_var_set V, Suc ` V',\n                                    case_nat (the (expr_type \\<Gamma> e1))\n                                     \\<Gamma>,\n                                    insert_dens V V' f \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g;\n        \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (LET e1 IN e2)))\n                          (stock_measure t)\n                          (\\<lambda>a. g (case_nat undefined a))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 3. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 4. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 5. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 6. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 10. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n        \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n         (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> oper $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (oper $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              (if op_sem oper x = b then 1 else 0) * f a x\n            \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\nA total of 16 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n     (stock_measure t) (\\<lambda>a. g (case_nat undefined a))", "unfolding has_parametrized_subprob_density_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>space (state_measure V' \\<Gamma>).\n        has_subprob_density\n         (dens_ctxt_measure dc.\\<Y> x \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n         (stock_measure t) (g (case_nat undefined x))) \\<and>\n    (\\<lambda>(a, y). g (case_nat undefined a) y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "proof (intro ballI conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))\n 2. (\\<lambda>(a, y). g (case_nat undefined a) y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "have \"density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1)", "by (rule dc.density_context_empty)"], ["proof (state)\nthis:\n  density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))\n 2. (\\<lambda>(a, y). g (case_nat undefined a) y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "moreover"], ["proof (state)\nthis:\n  density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))\n 2. (\\<lambda>(a, y). g (case_nat undefined a) y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "note hd_let.prems"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> LET e1 IN e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))\n 2. (\\<lambda>(a, y). g (case_nat undefined a) y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "ultimately"], ["proof (chain)\npicking this:\n  density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1)\n  \\<Gamma> \\<turnstile> LET e1 IN e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'", "have \"has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n                         (\\<lambda>\\<rho>. dens_ctxt_measure ({},V\\<union>V',\\<Gamma>,\\<lambda>a. 1) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                         (stock_measure ?t) f\" (is \"?P\")"], ["proof (prove)\nusing this:\n  density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1)\n  \\<Gamma> \\<turnstile> LET e1 IN e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density\n     (state_measure (V \\<union> V') \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure ({}, V \\<union> V', \\<Gamma>, \\<lambda>a. 1)\n          \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n     (stock_measure (the (expr_type \\<Gamma> e1))) f", "by (intro hd_let.IH(1)) (auto intro!: t1)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure ({}, V \\<union> V', \\<Gamma>, \\<lambda>a. 1)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n   (stock_measure (the (expr_type \\<Gamma> e1))) f\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))\n 2. (\\<lambda>(a, y). g (case_nat undefined a) y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "also"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure ({}, V \\<union> V', \\<Gamma>, \\<lambda>a. 1)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n   (stock_measure (the (expr_type \\<Gamma> e1))) f\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))\n 2. (\\<lambda>(a, y). g (case_nat undefined a) y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "have \"?P \\<longleftrightarrow> has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1) (stock_measure ?t) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density\n     (state_measure (V \\<union> V') \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure ({}, V \\<union> V', \\<Gamma>, \\<lambda>a. 1)\n          \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n     (stock_measure (the (expr_type \\<Gamma> e1))) f =\n    has_parametrized_subprob_density\n     (state_measure (V \\<union> V') \\<Gamma>)\n     (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1)\n     (stock_measure (the (expr_type \\<Gamma> e1))) f", "using hd_let.prems"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> LET e1 IN e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density\n     (state_measure (V \\<union> V') \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure ({}, V \\<union> V', \\<Gamma>, \\<lambda>a. 1)\n          \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n     (stock_measure (the (expr_type \\<Gamma> e1))) f =\n    has_parametrized_subprob_density\n     (state_measure (V \\<union> V') \\<Gamma>)\n     (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1)\n     (stock_measure (the (expr_type \\<Gamma> e1))) f", "by (intro has_parametrized_subprob_density_cong dens_ctxt_measure_empty_bind)\n         (auto simp: dens_ctxt_measure_def state_measure'_def\n               intro!: measurable_expr_sem[OF t1])"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure ({}, V \\<union> V', \\<Gamma>, \\<lambda>a. 1)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n   (stock_measure (the (expr_type \\<Gamma> e1))) f =\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1)\n   (stock_measure (the (expr_type \\<Gamma> e1))) f\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))\n 2. (\\<lambda>(a, y). g (case_nat undefined a) y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "finally"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1)\n   (stock_measure (the (expr_type \\<Gamma> e1))) f", "have f: \"has_parametrized_subprob_density (state_measure (V\\<union>V') \\<Gamma>)\n                         (\\<lambda>\\<rho>. expr_sem \\<rho> e1) (stock_measure ?t) f\""], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1)\n   (stock_measure (the (expr_type \\<Gamma> e1))) f\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density\n     (state_measure (V \\<union> V') \\<Gamma>)\n     (\\<lambda>\\<rho>. expr_sem \\<rho> e1)\n     (stock_measure (the (expr_type \\<Gamma> e1))) f", "."], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<rho>. expr_sem \\<rho> e1)\n   (stock_measure (the (expr_type \\<Gamma> e1))) f\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))\n 2. (\\<lambda>(a, y). g (case_nat undefined a) y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "have g: \"has_parametrized_subprob_density (state_measure (Suc`V') ?\\<Gamma>')\n                 (\\<lambda>\\<rho>. dens_ctxt_measure ?\\<Y>' \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2)) (stock_measure t) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density\n     (state_measure (Suc ` V')\n       (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure\n          (shift_var_set V, Suc ` V',\n           case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n           insert_dens V V' f \\<delta>)\n          \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n     (stock_measure t) g", "using hd_let.prems hd_let.hyps f subset_shift_var_set"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> LET e1 IN e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\n  ({}, V \\<union> V', \\<Gamma>, \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n   e1 \\<Rightarrow> f\n  (shift_var_set V, Suc ` V',\n   case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n   insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n   e2 \\<Rightarrow> g\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<rho>. expr_sem \\<rho> e1)\n   (stock_measure (the (expr_type \\<Gamma> e1))) f\n  Suc -` ?A \\<subseteq> ?V \\<Longrightarrow> ?A \\<subseteq> shift_var_set ?V\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density\n     (state_measure (Suc ` V')\n       (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure\n          (shift_var_set V, Suc ` V',\n           case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n           insert_dens V V' f \\<delta>)\n          \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n     (stock_measure t) g", "by (intro hd_let.IH(2) t2 dc.density_context_insert)\n         (auto dest: has_parametrized_subprob_densityD)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density\n   (state_measure (Suc ` V')\n     (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n   (stock_measure t) g\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))\n 2. (\\<lambda>(a, y). g (case_nat undefined a) y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "note g[measurable]"], ["proof (state)\nthis:\n  has_parametrized_subprob_density\n   (state_measure (Suc ` V')\n     (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n   (stock_measure t) g\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))\n 2. (\\<lambda>(a, y). g (case_nat undefined a) y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "thus \"(\\<lambda>(\\<rho>, x). g (case_nat undefined \\<rho>) x) \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density\n   (state_measure (Suc ` V')\n     (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n   (stock_measure t) g\n\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<rho>, x). g (case_nat undefined \\<rho>) x)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>(\\<rho>, x). g (case_nat undefined \\<rho>) x)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))", "fix \\<rho>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))", "assume \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\""], ["proof (state)\nthis:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))", "let ?M = \"dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho>\" and\n        ?N = \"state_measure (shift_var_set (V\\<union>V')) ?\\<Gamma>'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))", "have M_dcm: \"measurable ?M = measurable (state_measure (V\\<union>V') \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<rightarrow>\\<^sub>M) (dens_ctxt_measure dc.\\<Y> \\<rho>) =\n    (\\<rightarrow>\\<^sub>M) (state_measure (V \\<union> V') \\<Gamma>)", "by (intro ext measurable_cong_sets)\n         (auto simp: dens_ctxt_measure_def state_measure_def state_measure'_def)"], ["proof (state)\nthis:\n  (\\<rightarrow>\\<^sub>M) (dens_ctxt_measure dc.\\<Y> \\<rho>) =\n  (\\<rightarrow>\\<^sub>M) (state_measure (V \\<union> V') \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))", "have M_dcm': \"\\<And>N. measurable (?M \\<Otimes>\\<^sub>M N) = measurable (state_measure (V\\<union>V') \\<Gamma> \\<Otimes>\\<^sub>M N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N.\n       (\\<rightarrow>\\<^sub>M)\n        (dens_ctxt_measure dc.\\<Y> \\<rho> \\<Otimes>\\<^sub>M N) =\n       (\\<rightarrow>\\<^sub>M)\n        (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M N)", "by (intro ext measurable_cong_sets)\n         (auto simp: dens_ctxt_measure_def state_measure_def state_measure'_def)"], ["proof (state)\nthis:\n  (\\<rightarrow>\\<^sub>M)\n   (dens_ctxt_measure dc.\\<Y> \\<rho> \\<Otimes>\\<^sub>M ?N1) =\n  (\\<rightarrow>\\<^sub>M)\n   (state_measure (V \\<union> V') \\<Gamma> \\<Otimes>\\<^sub>M ?N1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))", "have \"?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LetVar e1 e2)) =\n            do {\\<sigma> \\<leftarrow> ?M; y \\<leftarrow> expr_sem \\<sigma> e1; return ?N (case_nat y \\<sigma>)} \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2)\"\n            (is \"_ = bind ?R _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)) =\n    dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        expr_sem \\<sigma> e1 \\<bind>\n        (\\<lambda>y.\n            return\n             (state_measure (shift_var_set (V \\<union> V'))\n               (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n             (case_nat y \\<sigma>))) \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2)", "using hd_let.prems subset_shift_var_set"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> LET e1 IN e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\n  Suc -` ?A \\<subseteq> ?V \\<Longrightarrow> ?A \\<subseteq> shift_var_set ?V\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)) =\n    dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        expr_sem \\<sigma> e1 \\<bind>\n        (\\<lambda>y.\n            return\n             (state_measure (shift_var_set (V \\<union> V'))\n               (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n             (case_nat y \\<sigma>))) \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2)", "apply (simp only: expr_sem.simps, intro double_bind_assoc)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V';\n     \\<And>A V.\n        Suc -` A \\<subseteq> V \\<Longrightarrow>\n        A \\<subseteq> shift_var_set V;\n     \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V';\n     \\<And>A V.\n        Suc -` A \\<subseteq> V \\<Longrightarrow>\n        A \\<subseteq> shift_var_set V\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2)\n                      \\<in> state_measure (shift_var_set (V \\<union> V'))\n                             (\\<lambda>a.\n                                 case a of\n                                 0 \\<Rightarrow> the (expr_type \\<Gamma> e1)\n                                 | Suc a \\<Rightarrow>\n                                     \\<Gamma> a) \\<rightarrow>\\<^sub>M\n                            subprob_algebra ?N'10\n 2. \\<lbrakk>\\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V';\n     \\<And>A V.\n        Suc -` A \\<subseteq> V \\<Longrightarrow>\n        A \\<subseteq> shift_var_set V;\n     \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V';\n     \\<And>A V.\n        Suc -` A \\<subseteq> V \\<Longrightarrow>\n        A \\<subseteq> shift_var_set V\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. expr_sem x e1)\n                      \\<in> dens_ctxt_measure dc.\\<Y>\n                             \\<rho> \\<rightarrow>\\<^sub>M\n                            subprob_algebra ?M'10\n 3. \\<lbrakk>\\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V';\n     \\<And>A V.\n        Suc -` A \\<subseteq> V \\<Longrightarrow>\n        A \\<subseteq> shift_var_set V;\n     \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V';\n     \\<And>A V.\n        Suc -` A \\<subseteq> V \\<Longrightarrow>\n        A \\<subseteq> shift_var_set V\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(x, y) a.\n                          case a of 0 \\<Rightarrow> y\n                          | Suc xa \\<Rightarrow> x xa)\n                      \\<in> dens_ctxt_measure dc.\\<Y>\n                             \\<rho> \\<Otimes>\\<^sub>M\n                            ?M'10 \\<rightarrow>\\<^sub>M\n                            state_measure (shift_var_set (V \\<union> V'))\n                             (\\<lambda>a.\n                                 case a of\n                                 0 \\<Rightarrow> the (expr_type \\<Gamma> e1)\n                                 | Suc a \\<Rightarrow> \\<Gamma> a)", "apply (rule measurable_expr_sem[OF t2], simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V';\n     \\<And>A V.\n        Suc -` A \\<subseteq> V \\<Longrightarrow>\n        A \\<subseteq> shift_var_set V;\n     \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V';\n     \\<And>A V.\n        Suc -` A \\<subseteq> V \\<Longrightarrow>\n        A \\<subseteq> shift_var_set V\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. expr_sem x e1)\n                      \\<in> dens_ctxt_measure dc.\\<Y>\n                             \\<rho> \\<rightarrow>\\<^sub>M\n                            subprob_algebra ?M'10\n 2. \\<lbrakk>\\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V';\n     \\<And>A V.\n        Suc -` A \\<subseteq> V \\<Longrightarrow>\n        A \\<subseteq> shift_var_set V;\n     \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V';\n     \\<And>A V.\n        Suc -` A \\<subseteq> V \\<Longrightarrow>\n        A \\<subseteq> shift_var_set V\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(x, y) a.\n                          case a of 0 \\<Rightarrow> y\n                          | Suc xa \\<Rightarrow> x xa)\n                      \\<in> dens_ctxt_measure dc.\\<Y>\n                             \\<rho> \\<Otimes>\\<^sub>M\n                            ?M'10 \\<rightarrow>\\<^sub>M\n                            state_measure (shift_var_set (V \\<union> V'))\n                             (\\<lambda>a.\n                                 case a of\n                                 0 \\<Rightarrow> the (expr_type \\<Gamma> e1)\n                                 | Suc a \\<Rightarrow> \\<Gamma> a)", "apply (subst M_dcm, rule measurable_expr_sem[OF t1], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V';\n     \\<And>A V.\n        Suc -` A \\<subseteq> V \\<Longrightarrow>\n        A \\<subseteq> shift_var_set V;\n     \\<Gamma> \\<turnstile> LET e1 IN e2 : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V';\n     \\<And>A V.\n        Suc -` A \\<subseteq> V \\<Longrightarrow>\n        A \\<subseteq> shift_var_set V\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(x, y) a.\n                          case a of 0 \\<Rightarrow> y\n                          | Suc xa \\<Rightarrow> x xa)\n                      \\<in> dens_ctxt_measure dc.\\<Y>\n                             \\<rho> \\<Otimes>\\<^sub>M\n                            stock_measure\n                             (the (expr_type \\<Gamma>\n                                    e1)) \\<rightarrow>\\<^sub>M\n                            state_measure (shift_var_set (V \\<union> V'))\n                             (\\<lambda>a.\n                                 case a of\n                                 0 \\<Rightarrow> the (expr_type \\<Gamma> e1)\n                                 | Suc a \\<Rightarrow> \\<Gamma> a)", "apply (subst M_dcm', simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)) =\n  dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      expr_sem \\<sigma> e1 \\<bind>\n      (\\<lambda>y.\n          return\n           (state_measure (shift_var_set (V \\<union> V'))\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n           (case_nat y \\<sigma>))) \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))", "also"], ["proof (state)\nthis:\n  dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)) =\n  dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      expr_sem \\<sigma> e1 \\<bind>\n      (\\<lambda>y.\n          return\n           (state_measure (shift_var_set (V \\<union> V'))\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n           (case_nat y \\<sigma>))) \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))", "from t1 and hd_let.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> e1 : the (expr_type \\<Gamma> e1)\n  \\<Gamma> \\<turnstile> LET e1 IN e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'", "have \"(\\<lambda>\\<sigma>. expr_sem \\<sigma> e1) \\<in>\n                measurable (state_measure (V \\<union> V') \\<Gamma>) (subprob_algebra (stock_measure ?t))\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> e1 : the (expr_type \\<Gamma> e1)\n  \\<Gamma> \\<turnstile> LET e1 IN e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1)\n    \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n          subprob_algebra (stock_measure (the (expr_type \\<Gamma> e1)))", "by (intro measurable_expr_sem) auto"], ["proof (state)\nthis:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1)\n  \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure (the (expr_type \\<Gamma> e1)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))", "hence \"?R = dens_ctxt_measure ?\\<Y>' (case_nat undefined \\<rho>)\""], ["proof (prove)\nusing this:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1)\n  \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure (the (expr_type \\<Gamma> e1)))\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        expr_sem \\<sigma> e1 \\<bind>\n        (\\<lambda>y.\n            return\n             (state_measure (shift_var_set (V \\<union> V'))\n               (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n             (case_nat y \\<sigma>))) =\n    dens_ctxt_measure\n     (shift_var_set V, Suc ` V',\n      case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n      insert_dens V V' f \\<delta>)\n     (case_nat undefined \\<rho>)", "using hd_let.prems hd_let.hyps f \\<rho>"], ["proof (prove)\nusing this:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1)\n  \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure (the (expr_type \\<Gamma> e1)))\n  \\<Gamma> \\<turnstile> LET e1 IN e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (LET e1 IN e2) \\<subseteq> V \\<union> V'\n  ({}, V \\<union> V', \\<Gamma>, \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n   e1 \\<Rightarrow> f\n  (shift_var_set V, Suc ` V',\n   case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n   insert_dens V V' f \\<delta>) \\<turnstile>\\<^sub>d\n   e2 \\<Rightarrow> g\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<rho>. expr_sem \\<rho> e1)\n   (stock_measure (the (expr_type \\<Gamma> e1))) f\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        expr_sem \\<sigma> e1 \\<bind>\n        (\\<lambda>y.\n            return\n             (state_measure (shift_var_set (V \\<union> V'))\n               (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n             (case_nat y \\<sigma>))) =\n    dens_ctxt_measure\n     (shift_var_set V, Suc ` V',\n      case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n      insert_dens V V' f \\<delta>)\n     (case_nat undefined \\<rho>)", "by (intro dc.dens_ctxt_measure_insert) (auto simp: has_parametrized_subprob_density_def)"], ["proof (state)\nthis:\n  dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      expr_sem \\<sigma> e1 \\<bind>\n      (\\<lambda>y.\n          return\n           (state_measure (shift_var_set (V \\<union> V'))\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n           (case_nat y \\<sigma>))) =\n  dens_ctxt_measure\n   (shift_var_set V, Suc ` V',\n    case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n    insert_dens V V' f \\<delta>)\n   (case_nat undefined \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))", "also"], ["proof (state)\nthis:\n  dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      expr_sem \\<sigma> e1 \\<bind>\n      (\\<lambda>y.\n          return\n           (state_measure (shift_var_set (V \\<union> V'))\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n           (case_nat y \\<sigma>))) =\n  dens_ctxt_measure\n   (shift_var_set V, Suc ` V',\n    case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n    insert_dens V V' f \\<delta>)\n   (case_nat undefined \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))", "have \"case_nat undefined \\<rho> \\<in> space (state_measure (Suc`V') ?\\<Gamma>')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. case_nat undefined \\<rho>\n    \\<in> space\n           (state_measure (Suc ` V')\n             (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))", "by (rule measurable_space[OF measurable_case_nat_undefined \\<rho>])"], ["proof (state)\nthis:\n  case_nat undefined \\<rho>\n  \\<in> space\n         (state_measure (Suc ` V')\n           (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))", "with g"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density\n   (state_measure (Suc ` V')\n     (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n   (stock_measure t) g\n  case_nat undefined \\<rho>\n  \\<in> space\n         (state_measure (Suc ` V')\n           (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))", "have \"has_subprob_density (dens_ctxt_measure ?\\<Y>' (case_nat undefined \\<rho>) \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2)) (stock_measure t) (g (case_nat undefined \\<rho>))\""], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density\n   (state_measure (Suc ` V')\n     (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n   (stock_measure t) g\n  case_nat undefined \\<rho>\n  \\<in> space\n         (state_measure (Suc ` V')\n           (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure\n       (shift_var_set V, Suc ` V',\n        case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n        insert_dens V V' f \\<delta>)\n       (case_nat undefined \\<rho>) \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n     (stock_measure t) (g (case_nat undefined \\<rho>))", "using \\<rho>"], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density\n   (state_measure (Suc ` V')\n     (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure\n        (shift_var_set V, Suc ` V',\n         case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n         insert_dens V V' f \\<delta>)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n   (stock_measure t) g\n  case_nat undefined \\<rho>\n  \\<in> space\n         (state_measure (Suc ` V')\n           (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure\n       (shift_var_set V, Suc ` V',\n        case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n        insert_dens V V' f \\<delta>)\n       (case_nat undefined \\<rho>) \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n     (stock_measure t) (g (case_nat undefined \\<rho>))", "unfolding has_parametrized_subprob_density_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>space\n                   (state_measure (Suc ` V')\n                     (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>)).\n      has_subprob_density\n       (dens_ctxt_measure\n         (shift_var_set V, Suc ` V',\n          case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n          insert_dens V V' f \\<delta>)\n         x \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n       (stock_measure t) (g x)) \\<and>\n  (\\<lambda>(x, y). g x y)\n  \\<in> borel_measurable\n         (state_measure (Suc ` V')\n           (case_nat (the (expr_type \\<Gamma> e1))\n             \\<Gamma>) \\<Otimes>\\<^sub>M\n          stock_measure t)\n  case_nat undefined \\<rho>\n  \\<in> space\n         (state_measure (Suc ` V')\n           (case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>))\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure\n       (shift_var_set V, Suc ` V',\n        case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n        insert_dens V V' f \\<delta>)\n       (case_nat undefined \\<rho>) \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n     (stock_measure t) (g (case_nat undefined \\<rho>))", "by auto"], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure\n     (shift_var_set V, Suc ` V',\n      case_nat (the (expr_type \\<Gamma> e1)) \\<Gamma>,\n      insert_dens V V' f \\<delta>)\n     (case_nat undefined \\<rho>) \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n   (stock_measure t) (g (case_nat undefined \\<rho>))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n        (stock_measure t) (g (case_nat undefined x))", "finally"], ["proof (chain)\npicking this:\n  has_subprob_density\n   (dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n   (stock_measure t)\n   (g (\\<lambda>a. case a of Suc a \\<Rightarrow> \\<rho> a))", "show \"has_subprob_density (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LetVar e1 e2))) (stock_measure t)\n                                      (g (case_nat undefined \\<rho>))\""], ["proof (prove)\nusing this:\n  has_subprob_density\n   (dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n   (stock_measure t)\n   (g (\\<lambda>a. case a of Suc a \\<Rightarrow> \\<rho> a))\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n     (stock_measure t) (g (case_nat undefined \\<rho>))", "."], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n   (stock_measure t) (g (case_nat undefined \\<rho>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (LET e1 IN e2)))\n   (stock_measure t) (\\<lambda>a. g (case_nat undefined a))\n\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "case (hd_rand_det e V' V \\<Gamma> \\<delta> dst t)"], ["proof (state)\nthis:\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "then"], ["proof (chain)\npicking this:\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'", "have [measurable]: \"\\<Gamma>  \\<turnstile> e : dist_param_type dst\" \"randomfree e\" \"free_vars e \\<subseteq> V'\""], ["proof (prove)\nusing this:\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> e : dist_param_type dst &&&\n    randomfree e &&& free_vars e \\<subseteq> V'", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> e : dist_param_type dst\n  randomfree e\n  free_vars e \\<subseteq> V'\n\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "interpret density_context V V' \\<Gamma> \\<delta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>", "by fact"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "from hd_rand_det"], ["proof (chain)\npicking this:\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'", "have t: \"t = dist_result_type dst\""], ["proof (prove)\nusing this:\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. t = dist_result_type dst", "by auto"], ["proof (state)\nthis:\n  t = dist_result_type dst\n\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "{"], ["proof (state)\nthis:\n  t = dist_result_type dst\n\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "fix \\<rho>"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "assume \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\""], ["proof (state)\nthis:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "let ?M = \"dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho>\" and ?t = \"dist_param_type dst\""], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "have \"?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n              ?M \\<bind> (\\<lambda>\\<sigma>. return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst)\" (is \"_ = ?N\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst)", "using hd_rand_det"], ["proof (prove)\nusing this:\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst)", "by (subst expr_sem.simps, intro bind_cong refl, subst expr_sem_rf_sound)\n                           (auto simp: dens_ctxt_measure_def state_measure'_def)"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst)\n\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "also"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst)\n\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "from hd_rand_det"], ["proof (chain)\npicking this:\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'", "have A: \"\\<And>\\<sigma>. \\<sigma> \\<in> space ?M \\<Longrightarrow> val_type (expr_sem_rf \\<sigma> e) = ?t\""], ["proof (prove)\nusing this:\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       \\<sigma>\n       \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n       val_type (expr_sem_rf \\<sigma> e) = dist_param_type dst", "by (intro val_type_expr_sem_rf) (auto simp: dens_ctxt_measure_def state_measure'_def)"], ["proof (state)\nthis:\n  ?\\<sigma> \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n  val_type (expr_sem_rf ?\\<sigma> e) = dist_param_type dst\n\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "hence \"?N = ?M \\<bind> (\\<lambda>\\<sigma>. return (stock_measure ?t) (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst)\""], ["proof (prove)\nusing this:\n  ?\\<sigma> \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n  val_type (expr_sem_rf ?\\<sigma> e) = dist_param_type dst\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return (stock_measure (dist_param_type dst))\n         (expr_sem_rf \\<sigma> e) \\<bind>\n        dist_measure dst)", "using hd_rand_det"], ["proof (prove)\nusing this:\n  ?\\<sigma> \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n  val_type (expr_sem_rf ?\\<sigma> e) = dist_param_type dst\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return (stock_measure (dist_param_type dst))\n         (expr_sem_rf \\<sigma> e) \\<bind>\n        dist_measure dst)", "unfolding return_val_def"], ["proof (prove)\nusing this:\n  ?\\<sigma> \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n  val_type (expr_sem_rf ?\\<sigma> e) = dist_param_type dst\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return (stock_measure (val_type (expr_sem_rf \\<sigma> e)))\n         (expr_sem_rf \\<sigma> e) \\<bind>\n        dist_measure dst) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return (stock_measure (dist_param_type dst))\n         (expr_sem_rf \\<sigma> e) \\<bind>\n        dist_measure dst)", "by (intro bind_cong) (auto simp: dens_ctxt_measure_def state_measure'_def)"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      return (stock_measure (dist_param_type dst))\n       (expr_sem_rf \\<sigma> e) \\<bind>\n      dist_measure dst)\n\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "also"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      return (stock_measure (dist_param_type dst))\n       (expr_sem_rf \\<sigma> e) \\<bind>\n      dist_measure dst)\n\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "have \"... = ?M \\<bind> (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return (stock_measure (dist_param_type dst))\n         (expr_sem_rf \\<sigma> e) \\<bind>\n        dist_measure dst) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))", "unfolding return_val_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return (stock_measure (dist_param_type dst))\n         (expr_sem_rf \\<sigma> e) \\<bind>\n        dist_measure dst) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))", "by (intro bind_cong refl bind_return, rule measurable_dist_measure)\n         (auto simp: type_universe_def A simp del: type_universe_type)"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      return (stock_measure (dist_param_type dst))\n       (expr_sem_rf \\<sigma> e) \\<bind>\n      dist_measure dst) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\n\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "finally"], ["proof (chain)\npicking this:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))", "have \"?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n                      ?M \\<bind> (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\""], ["proof (prove)\nusing this:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))", "."], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\n\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "}"], ["proof (state)\nthis:\n  ?\\<rho>2 \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  dens_ctxt_measure \\<Y> ?\\<rho>2 \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n  dens_ctxt_measure \\<Y> ?\\<rho>2 \\<bind>\n  (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\n\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "note A = this"], ["proof (state)\nthis:\n  ?\\<rho>2 \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  dens_ctxt_measure \\<Y> ?\\<rho>2 \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n  dens_ctxt_measure \\<Y> ?\\<rho>2 \\<bind>\n  (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\n\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "have \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n            (\\<lambda>\\<rho>. dens_ctxt_measure \\<Y> \\<rho> \\<bind> (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n            (stock_measure t) (\\<lambda>\\<rho> x. branch_prob \\<Y> \\<rho> * dist_dens dst (expr_sem_rf \\<rho> e) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n     (stock_measure t)\n     (\\<lambda>\\<rho> x.\n         branch_prob \\<Y> \\<rho> * dist_dens dst (expr_sem_rf \\<rho> e) x)", "proof (unfold has_parametrized_subprob_density_def, intro conjI ballI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            branch_prob \\<Y> x * dist_dens dst (expr_sem_rf x e) xa)\n 2. (\\<lambda>(\\<rho>, x).\n        branch_prob \\<Y> \\<rho> * dist_dens dst (expr_sem_rf \\<rho> e) x)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "show M: \"(\\<lambda>(\\<rho>, v). branch_prob \\<Y> \\<rho> * dist_dens dst (expr_sem_rf \\<rho> e) v)\n                \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<rho>, v).\n        branch_prob \\<Y> \\<rho> * dist_dens dst (expr_sem_rf \\<rho> e) v)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "by (subst t) measurable"], ["proof (state)\nthis:\n  (\\<lambda>(\\<rho>, v).\n      branch_prob \\<Y> \\<rho> * dist_dens dst (expr_sem_rf \\<rho> e) v)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            branch_prob \\<Y> x * dist_dens dst (expr_sem_rf x e) xa)", "fix \\<rho>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            branch_prob \\<Y> x * dist_dens dst (expr_sem_rf x e) xa)", "assume \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\""], ["proof (state)\nthis:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            branch_prob \\<Y> x * dist_dens dst (expr_sem_rf x e) xa)", "let ?M = \"dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho>\" and ?t = \"dist_param_type dst\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            branch_prob \\<Y> x * dist_dens dst (expr_sem_rf x e) xa)", "have \"?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n              ?M \\<bind> (\\<lambda>\\<sigma>. return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst)\" (is \"_ = ?N\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst)", "using hd_rand_det"], ["proof (prove)\nusing this:\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst)", "by (subst expr_sem.simps, intro bind_cong refl, subst expr_sem_rf_sound)\n                           (auto simp: dens_ctxt_measure_def state_measure'_def)"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            branch_prob \\<Y> x * dist_dens dst (expr_sem_rf x e) xa)", "also"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            branch_prob \\<Y> x * dist_dens dst (expr_sem_rf x e) xa)", "from hd_rand_det"], ["proof (chain)\npicking this:\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'", "have A: \"\\<And>\\<sigma>. \\<sigma> \\<in> space ?M \\<Longrightarrow> val_type (expr_sem_rf \\<sigma> e) = ?t\""], ["proof (prove)\nusing this:\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       \\<sigma>\n       \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n       val_type (expr_sem_rf \\<sigma> e) = dist_param_type dst", "by (intro val_type_expr_sem_rf) (auto simp: dens_ctxt_measure_def state_measure'_def)"], ["proof (state)\nthis:\n  ?\\<sigma> \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n  val_type (expr_sem_rf ?\\<sigma> e) = dist_param_type dst\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            branch_prob \\<Y> x * dist_dens dst (expr_sem_rf x e) xa)", "hence \"?N = ?M \\<bind> (\\<lambda>\\<sigma>. return (stock_measure ?t) (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst)\""], ["proof (prove)\nusing this:\n  ?\\<sigma> \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n  val_type (expr_sem_rf ?\\<sigma> e) = dist_param_type dst\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return (stock_measure (dist_param_type dst))\n         (expr_sem_rf \\<sigma> e) \\<bind>\n        dist_measure dst)", "using hd_rand_det"], ["proof (prove)\nusing this:\n  ?\\<sigma> \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n  val_type (expr_sem_rf ?\\<sigma> e) = dist_param_type dst\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return (stock_measure (dist_param_type dst))\n         (expr_sem_rf \\<sigma> e) \\<bind>\n        dist_measure dst)", "unfolding return_val_def"], ["proof (prove)\nusing this:\n  ?\\<sigma> \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n  val_type (expr_sem_rf ?\\<sigma> e) = dist_param_type dst\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return (stock_measure (val_type (expr_sem_rf \\<sigma> e)))\n         (expr_sem_rf \\<sigma> e) \\<bind>\n        dist_measure dst) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return (stock_measure (dist_param_type dst))\n         (expr_sem_rf \\<sigma> e) \\<bind>\n        dist_measure dst)", "by (intro bind_cong) (auto simp: dens_ctxt_measure_def state_measure'_def)"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      return (stock_measure (dist_param_type dst))\n       (expr_sem_rf \\<sigma> e) \\<bind>\n      dist_measure dst)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            branch_prob \\<Y> x * dist_dens dst (expr_sem_rf x e) xa)", "also"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      return_val (expr_sem_rf \\<sigma> e) \\<bind> dist_measure dst) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      return (stock_measure (dist_param_type dst))\n       (expr_sem_rf \\<sigma> e) \\<bind>\n      dist_measure dst)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            branch_prob \\<Y> x * dist_dens dst (expr_sem_rf x e) xa)", "have \"... = ?M \\<bind> (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return (stock_measure (dist_param_type dst))\n         (expr_sem_rf \\<sigma> e) \\<bind>\n        dist_measure dst) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))", "unfolding return_val_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        return (stock_measure (dist_param_type dst))\n         (expr_sem_rf \\<sigma> e) \\<bind>\n        dist_measure dst) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))", "by (intro bind_cong refl bind_return, rule measurable_dist_measure)\n         (auto simp: type_universe_def A simp del: type_universe_type)"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      return (stock_measure (dist_param_type dst))\n       (expr_sem_rf \\<sigma> e) \\<bind>\n      dist_measure dst) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            branch_prob \\<Y> x * dist_dens dst (expr_sem_rf x e) xa)", "also"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      return (stock_measure (dist_param_type dst))\n       (expr_sem_rf \\<sigma> e) \\<bind>\n      dist_measure dst) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            branch_prob \\<Y> x * dist_dens dst (expr_sem_rf x e) xa)", "have \"has_subprob_density (?M \\<bind> (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))) (stock_measure t)\n              (\\<lambda>v. \\<integral>\\<^sup>+\\<sigma>. dist_dens dst (expr_sem_rf (restrict \\<sigma> V') e) v \\<partial>?M)\"\n              (is \"has_subprob_density ?N ?R ?f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n     (stock_measure t)\n     (\\<lambda>v.\n         \\<integral>\\<^sup>+ \\<sigma>.\n                              dist_dens dst\n                               (expr_sem_rf (restrict \\<sigma> V') e) v\n                            \\<partial>dens_ctxt_measure \\<Y> \\<rho>)", "proof (rule bind_has_subprob_density)"], ["proof (state)\ngoal (6 subgoals):\n 1. subprob_space (dens_ctxt_measure \\<Y> \\<rho>)\n 2. sigma_finite_measure (stock_measure t)\n 3. space (dens_ctxt_measure \\<Y> \\<rho>) \\<noteq> {}\n 4. \\<And>\\<sigma>.\n       \\<sigma>\n       \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n       has_density (dist_measure dst (expr_sem_rf \\<sigma> e))\n        (stock_measure t)\n        (dist_dens dst (expr_sem_rf (restrict \\<sigma> V') e))\n 5. (\\<lambda>(x, y). dist_dens dst (expr_sem_rf (restrict x V') e) y)\n    \\<in> borel_measurable\n           (dens_ctxt_measure \\<Y> \\<rho> \\<Otimes>\\<^sub>M stock_measure t)\n 6. (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\n    \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n          subprob_algebra (stock_measure t)", "show \"space ?M \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space (dens_ctxt_measure \\<Y> \\<rho>) \\<noteq> {}", "unfolding dens_ctxt_measure_def state_measure'_def state_measure_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. space\n     ((case \\<Y> of\n       (V, V', \\<Gamma>, \\<delta>) \\<Rightarrow>\n         \\<lambda>\\<rho>.\n            density\n             (distr (Pi\\<^sub>M V (\\<lambda>x. stock_measure (\\<Gamma> x)))\n               (Pi\\<^sub>M (V \\<union> V')\n                 (\\<lambda>x. stock_measure (\\<Gamma> x)))\n               (\\<lambda>\\<sigma>. merge V V' (\\<sigma>, \\<rho>)))\n             \\<delta>)\n       \\<rho>) \\<noteq>\n    {}", "by (auto simp: space_PiM PiE_eq_empty_iff)"], ["proof (state)\nthis:\n  space (dens_ctxt_measure \\<Y> \\<rho>) \\<noteq> {}\n\ngoal (5 subgoals):\n 1. subprob_space (dens_ctxt_measure \\<Y> \\<rho>)\n 2. sigma_finite_measure (stock_measure t)\n 3. \\<And>\\<sigma>.\n       \\<sigma>\n       \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n       has_density (dist_measure dst (expr_sem_rf \\<sigma> e))\n        (stock_measure t)\n        (dist_dens dst (expr_sem_rf (restrict \\<sigma> V') e))\n 4. (\\<lambda>(x, y). dist_dens dst (expr_sem_rf (restrict x V') e) y)\n    \\<in> borel_measurable\n           (dens_ctxt_measure \\<Y> \\<rho> \\<Otimes>\\<^sub>M stock_measure t)\n 5. (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\n    \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n          subprob_algebra (stock_measure t)", "show \"(\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)) \\<in> measurable ?M (subprob_algebra (stock_measure t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\n    \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n          subprob_algebra (stock_measure t)", "unfolding dens_ctxt_measure_def state_measure'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\n    \\<in> (case \\<Y> of\n           (V, V', \\<Gamma>, \\<delta>) \\<Rightarrow>\n             \\<lambda>\\<rho>.\n                density\n                 (distr (state_measure V \\<Gamma>)\n                   (state_measure (V \\<union> V') \\<Gamma>)\n                   (\\<lambda>\\<sigma>. merge V V' (\\<sigma>, \\<rho>)))\n                 \\<delta>)\n           \\<rho> \\<rightarrow>\\<^sub>M\n          subprob_algebra (stock_measure t)", "by (subst t, rule measurable_compose[OF _ measurable_dist_measure], simp)\n           (insert hd_rand_det, auto intro!: measurable_expr_sem_rf)"], ["proof (state)\nthis:\n  (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\n  \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure t)\n\ngoal (4 subgoals):\n 1. subprob_space (dens_ctxt_measure \\<Y> \\<rho>)\n 2. sigma_finite_measure (stock_measure t)\n 3. \\<And>\\<sigma>.\n       \\<sigma>\n       \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n       has_density (dist_measure dst (expr_sem_rf \\<sigma> e))\n        (stock_measure t)\n        (dist_dens dst (expr_sem_rf (restrict \\<sigma> V') e))\n 4. (\\<lambda>(x, y). dist_dens dst (expr_sem_rf (restrict x V') e) y)\n    \\<in> borel_measurable\n           (dens_ctxt_measure \\<Y> \\<rho> \\<Otimes>\\<^sub>M stock_measure t)", "show \"(\\<lambda>(x, y). dist_dens dst (expr_sem_rf (restrict x V') e) y)\n               \\<in> borel_measurable (?M \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). dist_dens dst (expr_sem_rf (restrict x V') e) y)\n    \\<in> borel_measurable\n           (dens_ctxt_measure \\<Y> \\<rho> \\<Otimes>\\<^sub>M stock_measure t)", "unfolding t"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). dist_dens dst (expr_sem_rf (restrict x V') e) y)\n    \\<in> borel_measurable\n           (dens_ctxt_measure \\<Y> \\<rho> \\<Otimes>\\<^sub>M\n            stock_measure (dist_result_type dst))", "by measurable"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). dist_dens dst (expr_sem_rf (restrict x V') e) y)\n  \\<in> borel_measurable\n         (dens_ctxt_measure \\<Y> \\<rho> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (3 subgoals):\n 1. subprob_space (dens_ctxt_measure \\<Y> \\<rho>)\n 2. sigma_finite_measure (stock_measure t)\n 3. \\<And>\\<sigma>.\n       \\<sigma>\n       \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n       has_density (dist_measure dst (expr_sem_rf \\<sigma> e))\n        (stock_measure t)\n        (dist_dens dst (expr_sem_rf (restrict \\<sigma> V') e))", "fix \\<sigma>"], ["proof (state)\ngoal (3 subgoals):\n 1. subprob_space (dens_ctxt_measure \\<Y> \\<rho>)\n 2. sigma_finite_measure (stock_measure t)\n 3. \\<And>\\<sigma>.\n       \\<sigma>\n       \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n       has_density (dist_measure dst (expr_sem_rf \\<sigma> e))\n        (stock_measure t)\n        (dist_dens dst (expr_sem_rf (restrict \\<sigma> V') e))", "assume \\<sigma>: \"\\<sigma> \\<in> space ?M\""], ["proof (state)\nthis:\n  \\<sigma> \\<in> space (dens_ctxt_measure \\<Y> \\<rho>)\n\ngoal (3 subgoals):\n 1. subprob_space (dens_ctxt_measure \\<Y> \\<rho>)\n 2. sigma_finite_measure (stock_measure t)\n 3. \\<And>\\<sigma>.\n       \\<sigma>\n       \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n       has_density (dist_measure dst (expr_sem_rf \\<sigma> e))\n        (stock_measure t)\n        (dist_dens dst (expr_sem_rf (restrict \\<sigma> V') e))", "hence \\<sigma>': \"restrict \\<sigma> V' \\<in> space (state_measure V' \\<Gamma>)\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<in> space (dens_ctxt_measure \\<Y> \\<rho>)\n\ngoal (1 subgoal):\n 1. restrict \\<sigma> V' \\<in> space (state_measure V' \\<Gamma>)", "unfolding dens_ctxt_measure_def state_measure'_def state_measure_def restrict_def"], ["proof (prove)\nusing this:\n  \\<sigma>\n  \\<in> space\n         ((case \\<Y> of\n           (V, V', \\<Gamma>, \\<delta>) \\<Rightarrow>\n             \\<lambda>\\<rho>.\n                density\n                 (distr\n                   (Pi\\<^sub>M V (\\<lambda>x. stock_measure (\\<Gamma> x)))\n                   (Pi\\<^sub>M (V \\<union> V')\n                     (\\<lambda>x. stock_measure (\\<Gamma> x)))\n                   (\\<lambda>\\<sigma>. merge V V' (\\<sigma>, \\<rho>)))\n                 \\<delta>)\n           \\<rho>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. if x \\<in> V' then \\<sigma> x else undefined)\n    \\<in> space (Pi\\<^sub>M V' (\\<lambda>x. stock_measure (\\<Gamma> x)))", "by (auto simp: space_PiM)"], ["proof (state)\nthis:\n  restrict \\<sigma> V' \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (3 subgoals):\n 1. subprob_space (dens_ctxt_measure \\<Y> \\<rho>)\n 2. sigma_finite_measure (stock_measure t)\n 3. \\<And>\\<sigma>.\n       \\<sigma>\n       \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n       has_density (dist_measure dst (expr_sem_rf \\<sigma> e))\n        (stock_measure t)\n        (dist_dens dst (expr_sem_rf (restrict \\<sigma> V') e))", "from hd_rand_det"], ["proof (chain)\npicking this:\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'", "have restr: \"expr_sem_rf (restrict \\<sigma> V') e = expr_sem_rf \\<sigma> e\""], ["proof (prove)\nusing this:\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. expr_sem_rf (restrict \\<sigma> V') e = expr_sem_rf \\<sigma> e", "by (intro expr_sem_rf_eq_on_vars) auto"], ["proof (state)\nthis:\n  expr_sem_rf (restrict \\<sigma> V') e = expr_sem_rf \\<sigma> e\n\ngoal (3 subgoals):\n 1. subprob_space (dens_ctxt_measure \\<Y> \\<rho>)\n 2. sigma_finite_measure (stock_measure t)\n 3. \\<And>\\<sigma>.\n       \\<sigma>\n       \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n       has_density (dist_measure dst (expr_sem_rf \\<sigma> e))\n        (stock_measure t)\n        (dist_dens dst (expr_sem_rf (restrict \\<sigma> V') e))", "from hd_rand_det"], ["proof (chain)\npicking this:\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'", "have \"val_type (expr_sem_rf (restrict \\<sigma> V') e) = dist_param_type dst\""], ["proof (prove)\nusing this:\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. val_type (expr_sem_rf (restrict \\<sigma> V') e) = dist_param_type dst", "by (auto intro!: val_type_expr_sem_rf[OF _ _ _ \\<sigma>'])"], ["proof (state)\nthis:\n  val_type (expr_sem_rf (restrict \\<sigma> V') e) = dist_param_type dst\n\ngoal (3 subgoals):\n 1. subprob_space (dens_ctxt_measure \\<Y> \\<rho>)\n 2. sigma_finite_measure (stock_measure t)\n 3. \\<And>\\<sigma>.\n       \\<sigma>\n       \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n       has_density (dist_measure dst (expr_sem_rf \\<sigma> e))\n        (stock_measure t)\n        (dist_dens dst (expr_sem_rf (restrict \\<sigma> V') e))", "also"], ["proof (state)\nthis:\n  val_type (expr_sem_rf (restrict \\<sigma> V') e) = dist_param_type dst\n\ngoal (3 subgoals):\n 1. subprob_space (dens_ctxt_measure \\<Y> \\<rho>)\n 2. sigma_finite_measure (stock_measure t)\n 3. \\<And>\\<sigma>.\n       \\<sigma>\n       \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n       has_density (dist_measure dst (expr_sem_rf \\<sigma> e))\n        (stock_measure t)\n        (dist_dens dst (expr_sem_rf (restrict \\<sigma> V') e))", "note restr"], ["proof (state)\nthis:\n  expr_sem_rf (restrict \\<sigma> V') e = expr_sem_rf \\<sigma> e\n\ngoal (3 subgoals):\n 1. subprob_space (dens_ctxt_measure \\<Y> \\<rho>)\n 2. sigma_finite_measure (stock_measure t)\n 3. \\<And>\\<sigma>.\n       \\<sigma>\n       \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n       has_density (dist_measure dst (expr_sem_rf \\<sigma> e))\n        (stock_measure t)\n        (dist_dens dst (expr_sem_rf (restrict \\<sigma> V') e))", "finally"], ["proof (chain)\npicking this:\n  val_type (expr_sem_rf \\<sigma> e) = dist_param_type dst", "have \"has_density (dist_measure dst (expr_sem_rf \\<sigma> e)) (stock_measure t)\n               (dist_dens dst (expr_sem_rf \\<sigma> e))\""], ["proof (prove)\nusing this:\n  val_type (expr_sem_rf \\<sigma> e) = dist_param_type dst\n\ngoal (1 subgoal):\n 1. has_density (dist_measure dst (expr_sem_rf \\<sigma> e))\n     (stock_measure t) (dist_dens dst (expr_sem_rf \\<sigma> e))", "using hd_rand_det"], ["proof (prove)\nusing this:\n  val_type (expr_sem_rf \\<sigma> e) = dist_param_type dst\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. has_density (dist_measure dst (expr_sem_rf \\<sigma> e))\n     (stock_measure t) (dist_dens dst (expr_sem_rf \\<sigma> e))", "by (subst t, intro dist_measure_has_density)\n           (auto intro!: val_type_expr_sem_rf simp: type_universe_def dens_ctxt_measure_def\n                 state_measure'_def simp del: type_universe_type)"], ["proof (state)\nthis:\n  has_density (dist_measure dst (expr_sem_rf \\<sigma> e)) (stock_measure t)\n   (dist_dens dst (expr_sem_rf \\<sigma> e))\n\ngoal (3 subgoals):\n 1. subprob_space (dens_ctxt_measure \\<Y> \\<rho>)\n 2. sigma_finite_measure (stock_measure t)\n 3. \\<And>\\<sigma>.\n       \\<sigma>\n       \\<in> space (dens_ctxt_measure \\<Y> \\<rho>) \\<Longrightarrow>\n       has_density (dist_measure dst (expr_sem_rf \\<sigma> e))\n        (stock_measure t)\n        (dist_dens dst (expr_sem_rf (restrict \\<sigma> V') e))", "thus \"has_density (dist_measure dst (expr_sem_rf \\<sigma> e)) (stock_measure t)\n                (dist_dens dst (expr_sem_rf (restrict \\<sigma> V') e))\""], ["proof (prove)\nusing this:\n  has_density (dist_measure dst (expr_sem_rf \\<sigma> e)) (stock_measure t)\n   (dist_dens dst (expr_sem_rf \\<sigma> e))\n\ngoal (1 subgoal):\n 1. has_density (dist_measure dst (expr_sem_rf \\<sigma> e))\n     (stock_measure t)\n     (dist_dens dst (expr_sem_rf (restrict \\<sigma> V') e))", "by (simp add: restr)"], ["proof (state)\nthis:\n  has_density (dist_measure dst (expr_sem_rf \\<sigma> e)) (stock_measure t)\n   (dist_dens dst (expr_sem_rf (restrict \\<sigma> V') e))\n\ngoal (2 subgoals):\n 1. subprob_space (dens_ctxt_measure \\<Y> \\<rho>)\n 2. sigma_finite_measure (stock_measure t)", "qed (insert \\<rho>, auto intro!: subprob_space_dens)"], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n   (stock_measure t)\n   (\\<lambda>v.\n       \\<integral>\\<^sup>+ \\<sigma>.\n                            dist_dens dst\n                             (expr_sem_rf (restrict \\<sigma> V') e) v\n                          \\<partial>dens_ctxt_measure \\<Y> \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            branch_prob \\<Y> x * dist_dens dst (expr_sem_rf x e) xa)", "moreover"], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n   (stock_measure t)\n   (\\<lambda>v.\n       \\<integral>\\<^sup>+ \\<sigma>.\n                            dist_dens dst\n                             (expr_sem_rf (restrict \\<sigma> V') e) v\n                          \\<partial>dens_ctxt_measure \\<Y> \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            branch_prob \\<Y> x * dist_dens dst (expr_sem_rf x e) xa)", "have \"val_type (expr_sem_rf \\<rho> e) = dist_param_type dst\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_type (expr_sem_rf \\<rho> e) = dist_param_type dst", "using hd_rand_det \\<rho>"], ["proof (prove)\nusing this:\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. val_type (expr_sem_rf \\<rho> e) = dist_param_type dst", "by (intro val_type_expr_sem_rf) auto"], ["proof (state)\nthis:\n  val_type (expr_sem_rf \\<rho> e) = dist_param_type dst\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            branch_prob \\<Y> x * dist_dens dst (expr_sem_rf x e) xa)", "hence \"expr_sem_rf \\<rho> e \\<in> type_universe (dist_param_type dst)\""], ["proof (prove)\nusing this:\n  val_type (expr_sem_rf \\<rho> e) = dist_param_type dst\n\ngoal (1 subgoal):\n 1. expr_sem_rf \\<rho> e \\<in> type_universe (dist_param_type dst)", "by (simp add: type_universe_def del: type_universe_type)"], ["proof (state)\nthis:\n  expr_sem_rf \\<rho> e \\<in> type_universe (dist_param_type dst)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            branch_prob \\<Y> x * dist_dens dst (expr_sem_rf x e) xa)", "ultimately"], ["proof (chain)\npicking this:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n   (stock_measure t)\n   (\\<lambda>v.\n       \\<integral>\\<^sup>+ \\<sigma>.\n                            dist_dens dst\n                             (expr_sem_rf (restrict \\<sigma> V') e) v\n                          \\<partial>dens_ctxt_measure \\<Y> \\<rho>)\n  expr_sem_rf \\<rho> e \\<in> type_universe (dist_param_type dst)", "show \"has_subprob_density (?M \\<bind> (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n                       (stock_measure t) (\\<lambda>v. branch_prob \\<Y> \\<rho> * dist_dens dst (expr_sem_rf \\<rho> e) v)\""], ["proof (prove)\nusing this:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n   (stock_measure t)\n   (\\<lambda>v.\n       \\<integral>\\<^sup>+ \\<sigma>.\n                            dist_dens dst\n                             (expr_sem_rf (restrict \\<sigma> V') e) v\n                          \\<partial>dens_ctxt_measure \\<Y> \\<rho>)\n  expr_sem_rf \\<rho> e \\<in> type_universe (dist_param_type dst)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n     (stock_measure t)\n     (\\<lambda>v.\n         branch_prob \\<Y> \\<rho> * dist_dens dst (expr_sem_rf \\<rho> e) v)", "using hd_rand_det"], ["proof (prove)\nusing this:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n   (stock_measure t)\n   (\\<lambda>v.\n       \\<integral>\\<^sup>+ \\<sigma>.\n                            dist_dens dst\n                             (expr_sem_rf (restrict \\<sigma> V') e) v\n                          \\<partial>dens_ctxt_measure \\<Y> \\<rho>)\n  expr_sem_rf \\<rho> e \\<in> type_universe (dist_param_type dst)\n  randomfree e\n  free_vars e \\<subseteq> V'\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n     (stock_measure t)\n     (\\<lambda>v.\n         branch_prob \\<Y> \\<rho> * dist_dens dst (expr_sem_rf \\<rho> e) v)", "apply (rule_tac has_subprob_density_equal_on_space, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n                (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n                dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n                (\\<lambda>\\<sigma>.\n                    dist_measure dst (expr_sem_rf \\<sigma> e));\n        has_subprob_density\n         (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n         (stock_measure t)\n         (\\<lambda>v.\n             \\<integral>\\<^sup>+ \\<sigma>.\n                                  dist_dens dst\n                                   (expr_sem_rf (restrict \\<sigma> V') e) v\n                                \\<partial>dens_ctxt_measure \\<Y> \\<rho>);\n        expr_sem_rf \\<rho> e \\<in> type_universe (dist_param_type dst);\n        randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V';\n        x \\<in> space (stock_measure t)\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ \\<sigma>.\n        dist_dens dst (expr_sem_rf (restrict \\<sigma> V') e) x\n      \\<partial>dens_ctxt_measure \\<Y> \\<rho> =\n                         branch_prob \\<Y> \\<rho> *\n                         dist_dens dst (expr_sem_rf \\<rho> e) x", "apply (intro nn_integral_dens_ctxt_measure_restrict)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n                (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n                dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n                (\\<lambda>\\<sigma>.\n                    dist_measure dst (expr_sem_rf \\<sigma> e));\n        has_subprob_density\n         (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n         (stock_measure t)\n         (\\<lambda>v.\n             \\<integral>\\<^sup>+ \\<sigma>.\n                                  dist_dens dst\n                                   (expr_sem_rf (restrict \\<sigma> V') e) v\n                                \\<partial>dens_ctxt_measure \\<Y> \\<rho>);\n        expr_sem_rf \\<rho> e \\<in> type_universe (dist_param_type dst);\n        randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V';\n        x \\<in> space (stock_measure t)\\<rbrakk>\n       \\<Longrightarrow> \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n 2. \\<And>x.\n       \\<lbrakk>dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n                (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n                dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n                (\\<lambda>\\<sigma>.\n                    dist_measure dst (expr_sem_rf \\<sigma> e));\n        has_subprob_density\n         (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n         (stock_measure t)\n         (\\<lambda>v.\n             \\<integral>\\<^sup>+ \\<sigma>.\n                                  dist_dens dst\n                                   (expr_sem_rf (restrict \\<sigma> V') e) v\n                                \\<partial>dens_ctxt_measure \\<Y> \\<rho>);\n        expr_sem_rf \\<rho> e \\<in> type_universe (dist_param_type dst);\n        randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V';\n        x \\<in> space (stock_measure t)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> dist_dens dst (expr_sem_rf \\<rho> e) x\n 3. \\<And>x.\n       \\<lbrakk>dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n                (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n                dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n                (\\<lambda>\\<sigma>.\n                    dist_measure dst (expr_sem_rf \\<sigma> e));\n        has_subprob_density\n         (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n         (stock_measure t)\n         (\\<lambda>v.\n             \\<integral>\\<^sup>+ \\<sigma>.\n                                  dist_dens dst\n                                   (expr_sem_rf (restrict \\<sigma> V') e) v\n                                \\<partial>dens_ctxt_measure \\<Y> \\<rho>);\n        expr_sem_rf \\<rho> e \\<in> type_universe (dist_param_type dst);\n        randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V';\n        x \\<in> space (stock_measure t)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. dist_dens dst (expr_sem_rf a e) x)\n                         \\<in> borel_measurable (state_measure V' \\<Gamma>)", "apply (simp_all add: t \\<rho>)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n   (stock_measure t)\n   (\\<lambda>v.\n       branch_prob \\<Y> \\<rho> * dist_dens dst (expr_sem_rf \\<rho> e) v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n   (stock_measure t)\n   (\\<lambda>\\<rho> x.\n       branch_prob \\<Y> \\<rho> * dist_dens dst (expr_sem_rf \\<rho> e) x)\n\ngoal (15 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>e V' V \\<Gamma> \\<delta> dst t.\n       \\<lbrakk>randomfree e; free_vars e \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              branch_prob (V, V', \\<Gamma>, \\<delta>) a *\n                              dist_dens dst (expr_sem_rf a e) b)\n 3. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 4. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 5. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 9. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Minus $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Minus $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b. f a (op_sem Minus b))\nA total of 15 subgoals...", "with A"], ["proof (chain)\npicking this:\n  ?\\<rho>2 \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  dens_ctxt_measure \\<Y> ?\\<rho>2 \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n  dens_ctxt_measure \\<Y> ?\\<rho>2 \\<bind>\n  (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n   (stock_measure t)\n   (\\<lambda>\\<rho> x.\n       branch_prob \\<Y> \\<rho> * dist_dens dst (expr_sem_rf \\<rho> e) x)", "show ?case"], ["proof (prove)\nusing this:\n  ?\\<rho>2 \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  dens_ctxt_measure \\<Y> ?\\<rho>2 \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n  dens_ctxt_measure \\<Y> ?\\<rho>2 \\<bind>\n  (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e))\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. dist_measure dst (expr_sem_rf \\<sigma> e)))\n   (stock_measure t)\n   (\\<lambda>\\<rho> x.\n       branch_prob \\<Y> \\<rho> * dist_dens dst (expr_sem_rf \\<rho> e) x)\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n     (stock_measure t)\n     (\\<lambda>a b. branch_prob \\<Y> a * dist_dens dst (expr_sem_rf a e) b)", "by (subst has_parametrized_subprob_density_cong) (simp_all add: A)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n   (stock_measure t)\n   (\\<lambda>a b. branch_prob \\<Y> a * dist_dens dst (expr_sem_rf a e) b)\n\ngoal (14 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 3. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 4. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 5. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 8. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         randomfree e'; free_vars e' \\<subseteq> V';\n         \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Add\n                                     <|b, expr_sem_rf a (Minus $$ e')|>))\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 3. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 4. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 5. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 8. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         randomfree e'; free_vars e' \\<subseteq> V';\n         \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Add\n                                     <|b, expr_sem_rf a (Minus $$ e')|>))\nA total of 14 subgoals...", "case (hd_rand V V' \\<Gamma> \\<delta> e f dst t)"], ["proof (state)\nthis:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (14 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 3. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 4. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 5. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 8. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         randomfree e'; free_vars e' \\<subseteq> V';\n         \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Add\n                                     <|b, expr_sem_rf a (Minus $$ e')|>))\nA total of 14 subgoals...", "let ?t = \"dist_param_type dst\""], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 3. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 4. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 5. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 8. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         randomfree e'; free_vars e' \\<subseteq> V';\n         \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Add\n                                     <|b, expr_sem_rf a (Minus $$ e')|>))\nA total of 14 subgoals...", "from hd_rand.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'", "have t1: \"\\<Gamma> \\<turnstile> e : ?t\" and t2: \"t = dist_result_type dst\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> e : dist_param_type dst &&&\n    t = dist_result_type dst", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> e : dist_param_type dst\n  t = dist_result_type dst\n\ngoal (14 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 3. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 4. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 5. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 8. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         randomfree e'; free_vars e' \\<subseteq> V';\n         \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Add\n                                     <|b, expr_sem_rf a (Minus $$ e')|>))\nA total of 14 subgoals...", "interpret density_context V V' \\<Gamma> \\<delta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>", "by fact"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 3. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 4. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 5. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 8. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         randomfree e'; free_vars e' \\<subseteq> V';\n         \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Add\n                                     <|b, expr_sem_rf a (Minus $$ e')|>))\nA total of 14 subgoals...", "have dens[measurable]: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>. dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure ?t) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure (dist_param_type dst)) f", "using hd_rand.prems"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure (dist_param_type dst)) f", "by (intro hd_rand.IH) auto"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure (dist_param_type dst)) f\n\ngoal (14 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f dst t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Random dst e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Random dst e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Random dst e)))\n                          (stock_measure t) (apply_dist_to_dens dst f)\n 2. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 3. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 4. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 5. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 8. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         randomfree e'; free_vars e' \\<subseteq> V';\n         \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Add\n                                     <|b, expr_sem_rf a (Minus $$ e')|>))\nA total of 14 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n     (stock_measure t) (apply_dist_to_dens dst f)", "proof (unfold has_parametrized_subprob_density_def, intro ballI conjI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n        (stock_measure t) (apply_dist_to_dens dst f x)\n 2. (\\<lambda>(x, y). apply_dist_to_dens dst f x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "interpret sigma_finite_measure \"stock_measure (dist_param_type dst)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_measure (stock_measure (dist_param_type dst))", "by simp"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n        (stock_measure t) (apply_dist_to_dens dst f x)\n 2. (\\<lambda>(x, y). apply_dist_to_dens dst f x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "show \"case_prod (apply_dist_to_dens dst f) \\<in>\n              borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). apply_dist_to_dens dst f x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "unfolding apply_dist_to_dens_def t2"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<rho>, y).\n        \\<integral>\\<^sup>+ x. f \\<rho> x * dist_dens dst x y\n                           \\<partial>stock_measure (dist_param_type dst))\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n            stock_measure (dist_result_type dst))", "by measurable"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). apply_dist_to_dens dst f x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n        (stock_measure t) (apply_dist_to_dens dst f x)", "fix \\<rho>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n        (stock_measure t) (apply_dist_to_dens dst f x)", "assume \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\""], ["proof (state)\nthis:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n        (stock_measure t) (apply_dist_to_dens dst f x)", "let ?M = \"dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n        (stock_measure t) (apply_dist_to_dens dst f x)", "have meas_M: \"measurable ?M = measurable (state_measure (V \\<union> V') \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<rightarrow>\\<^sub>M) (dens_ctxt_measure \\<Y> \\<rho>) =\n    (\\<rightarrow>\\<^sub>M) (state_measure (V \\<union> V') \\<Gamma>)", "by (intro ext measurable_cong_sets) (auto simp: dens_ctxt_measure_def state_measure'_def)"], ["proof (state)\nthis:\n  (\\<rightarrow>\\<^sub>M) (dens_ctxt_measure \\<Y> \\<rho>) =\n  (\\<rightarrow>\\<^sub>M) (state_measure (V \\<union> V') \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n        (stock_measure t) (apply_dist_to_dens dst f x)", "from hd_rand"], ["proof (chain)\npicking this:\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'", "have Me: \"(\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<in> measurable ?M (subprob_algebra (stock_measure ?t))\""], ["proof (prove)\nusing this:\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> Random dst e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Random dst e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n    \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n          subprob_algebra (stock_measure (dist_param_type dst))", "by (subst meas_M, intro measurable_expr_sem[OF t1]) auto"], ["proof (state)\nthis:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure (dist_param_type dst))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n        (stock_measure t) (apply_dist_to_dens dst f x)", "hence \"?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) = (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) \\<bind> dist_measure dst\"\n      (is \"_ = ?N\")"], ["proof (prove)\nusing this:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure (dist_param_type dst))\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<bind>\n    dist_measure dst", "by (subst expr_sem.simps, intro bind_assoc[OF Me, symmetric])\n         (insert hd_rand, auto intro!: measurable_dist_measure)"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<bind>\n  dist_measure dst\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n        (stock_measure t) (apply_dist_to_dens dst f x)", "also"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<bind>\n  dist_measure dst\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n        (stock_measure t) (apply_dist_to_dens dst f x)", "have \"space ?M \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space (dens_ctxt_measure \\<Y> \\<rho>) \\<noteq> {}", "by (auto simp: dens_ctxt_measure_def state_measure'_def state_measure_def\n                     space_PiM PiE_eq_empty_iff)"], ["proof (state)\nthis:\n  space (dens_ctxt_measure \\<Y> \\<rho>) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n        (stock_measure t) (apply_dist_to_dens dst f x)", "with dens \\<rho> Me"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure (dist_param_type dst)) f\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure (dist_param_type dst))\n  space (dens_ctxt_measure \\<Y> \\<rho>) \\<noteq> {}", "have \"has_subprob_density ?N (stock_measure t) (apply_dist_to_dens dst f \\<rho>)\""], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure (dist_param_type dst)) f\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure (dist_param_type dst))\n  space (dens_ctxt_measure \\<Y> \\<rho>) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<bind>\n      dist_measure dst)\n     (stock_measure t) (apply_dist_to_dens dst f \\<rho>)", "unfolding apply_dist_to_dens_def has_parametrized_subprob_density_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>space (state_measure V' \\<Gamma>).\n      has_subprob_density\n       (dens_ctxt_measure \\<Y> x \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure (dist_param_type dst)) (f x)) \\<and>\n  (\\<lambda>(x, y). f x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n          stock_measure (dist_param_type dst))\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure (dist_param_type dst))\n  space (dens_ctxt_measure \\<Y> \\<rho>) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<bind>\n      dist_measure dst)\n     (stock_measure t)\n     (\\<lambda>y.\n         \\<integral>\\<^sup>+ x. f \\<rho> x * dist_dens dst x y\n                            \\<partial>stock_measure (dist_param_type dst))", "by (subst t2, intro bind_has_subprob_density')\n         (auto simp: hd_rand.IH space_bind_measurable\n               intro!: measurable_dist_dens dist_measure_has_subprob_density)"], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<bind>\n    dist_measure dst)\n   (stock_measure t) (apply_dist_to_dens dst f \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n        (stock_measure t) (apply_dist_to_dens dst f x)", "finally"], ["proof (chain)\npicking this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n   (stock_measure t) (apply_dist_to_dens dst f \\<rho>)", "show \"has_subprob_density (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e))) (stock_measure t)\n                      (apply_dist_to_dens dst f \\<rho>)\""], ["proof (prove)\nusing this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n   (stock_measure t) (apply_dist_to_dens dst f \\<rho>)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n     (stock_measure t) (apply_dist_to_dens dst f \\<rho>)", "."], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n   (stock_measure t) (apply_dist_to_dens dst f \\<rho>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Random dst e)))\n   (stock_measure t) (apply_dist_to_dens dst f)\n\ngoal (13 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 2. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 3. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 4. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 7. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         val_type c = REAL; c \\<noteq> RealVal 0;\n         \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (Mult $$ <e ,  Val c>)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                               ennreal (inverse \\<bar>extract_real c\\<bar>))\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 2. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 3. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 4. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 7. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         val_type c = REAL; c \\<noteq> RealVal 0;\n         \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (Mult $$ <e ,  Val c>)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                               ennreal (inverse \\<bar>extract_real c\\<bar>))\nA total of 13 subgoals...", "case (hd_fail V V' \\<Gamma> \\<delta> t t')"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Fail t : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Fail t) \\<subseteq> V \\<union> V'\n\ngoal (13 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 2. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 3. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 4. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 7. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         val_type c = REAL; c \\<noteq> RealVal 0;\n         \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (Mult $$ <e ,  Val c>)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                               ennreal (inverse \\<bar>extract_real c\\<bar>))\nA total of 13 subgoals...", "interpret density_context V V' \\<Gamma> \\<delta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>", "by fact"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 2. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 3. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 4. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 7. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         val_type c = REAL; c \\<noteq> RealVal 0;\n         \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (Mult $$ <e ,  Val c>)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                               ennreal (inverse \\<bar>extract_real c\\<bar>))\nA total of 13 subgoals...", "have \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n            (\\<lambda>_. null_measure (stock_measure t)) (stock_measure t') (\\<lambda>_ _. 0)\" (is \"?P\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>_. null_measure (stock_measure t)) (stock_measure t')\n     (\\<lambda>_ _. 0)", "using hd_fail"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Fail t : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Fail t) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>_. null_measure (stock_measure t)) (stock_measure t')\n     (\\<lambda>_ _. 0)", "by (auto simp: has_parametrized_subprob_density_def\n                           intro!: null_measure_has_subprob_density)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>_. null_measure (stock_measure t)) (stock_measure t')\n   (\\<lambda>_ _. 0)\n\ngoal (13 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 2. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 3. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 4. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 7. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         val_type c = REAL; c \\<noteq> RealVal 0;\n         \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (Mult $$ <e ,  Val c>)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                               ennreal (inverse \\<bar>extract_real c\\<bar>))\nA total of 13 subgoals...", "also"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>_. null_measure (stock_measure t)) (stock_measure t')\n   (\\<lambda>_ _. 0)\n\ngoal (13 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 2. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 3. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 4. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 7. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         val_type c = REAL; c \\<noteq> RealVal 0;\n         \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (Mult $$ <e ,  Val c>)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                               ennreal (inverse \\<bar>extract_real c\\<bar>))\nA total of 13 subgoals...", "have \"?P \\<longleftrightarrow> ?case\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>_. null_measure (stock_measure t)) (stock_measure t')\n     (\\<lambda>_ _. 0) =\n    has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fail t)))\n     (stock_measure t') (\\<lambda>a b. 0)", "by (intro has_parametrized_subprob_density_cong)\n       (auto simp: dens_ctxt_measure_bind_const subprob_space_null_measure_iff)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>_. null_measure (stock_measure t)) (stock_measure t')\n   (\\<lambda>_ _. 0) =\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fail t)))\n   (stock_measure t') (\\<lambda>a b. 0)\n\ngoal (13 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> t ta.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Fail t : ta;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fail t) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fail t)))\n                          (stock_measure ta) (\\<lambda>a b. 0)\n 2. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 3. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 4. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 7. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         val_type c = REAL; c \\<noteq> RealVal 0;\n         \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma>\n                                    (Mult $$ <e ,  Val c>)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                               ennreal (inverse \\<bar>extract_real c\\<bar>))\nA total of 13 subgoals...", "finally"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fail t)))\n   (stock_measure t') (\\<lambda>a b. 0)", "show ?case"], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fail t)))\n   (stock_measure t') (\\<lambda>a b. 0)\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fail t)))\n     (stock_measure t') (\\<lambda>a b. 0)", "."], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fail t)))\n   (stock_measure t') (\\<lambda>a b. 0)\n\ngoal (12 subgoals):\n 1. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 2. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 6. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Exp $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Exp $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               if 0 < extract_real b\n                               then f a (lift_RealVal safe_ln b) *\n                                    ennreal (inverse (extract_real b))\n                               else 0)\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 2. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 6. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Exp $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Exp $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               if 0 < extract_real b\n                               then f a (lift_RealVal safe_ln b) *\n                                    ennreal (inverse (extract_real b))\n                               else 0)\nA total of 12 subgoals...", "case (hd_pair x V y V' \\<Gamma> \\<delta> t)"], ["proof (state)\nthis:\n  x \\<in> V\n  y \\<in> V\n  x \\<noteq> y\n  \\<Gamma> \\<turnstile> <Var x ,  Var y> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\n\ngoal (12 subgoals):\n 1. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 2. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 6. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Exp $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Exp $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               if 0 < extract_real b\n                               then f a (lift_RealVal safe_ln b) *\n                                    ennreal (inverse (extract_real b))\n                               else 0)\nA total of 12 subgoals...", "interpret density_context V V' \\<Gamma> \\<delta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>", "by fact"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 2. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 6. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Exp $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Exp $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               if 0 < extract_real b\n                               then f a (lift_RealVal safe_ln b) *\n                                    ennreal (inverse (extract_real b))\n                               else 0)\nA total of 12 subgoals...", "let ?R = \"stock_measure t\""], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 2. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 6. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Exp $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Exp $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               if 0 < extract_real b\n                               then f a (lift_RealVal safe_ln b) *\n                                    ennreal (inverse (extract_real b))\n                               else 0)\nA total of 12 subgoals...", "from hd_pair.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> <Var x ,  Var y> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'", "have t: \"t = PRODUCT (\\<Gamma> x) (\\<Gamma> y)\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> <Var x ,  Var y> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. t = PRODUCT (\\<Gamma> x) (\\<Gamma> y)", "by auto"], ["proof (state)\nthis:\n  t = PRODUCT (\\<Gamma> x) (\\<Gamma> y)\n\ngoal (12 subgoals):\n 1. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 2. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 6. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Exp $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Exp $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               if 0 < extract_real b\n                               then f a (lift_RealVal safe_ln b) *\n                                    ennreal (inverse (extract_real b))\n                               else 0)\nA total of 12 subgoals...", "have meas: \"(\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>) \\<in> measurable (state_measure (V\\<union>V') \\<Gamma>) ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>)\n    \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n          stock_measure t", "using hd_pair"], ["proof (prove)\nusing this:\n  x \\<in> V\n  y \\<in> V\n  x \\<noteq> y\n  \\<Gamma> \\<turnstile> <Var x ,  Var y> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>)\n    \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n          stock_measure t", "unfolding t state_measure_def"], ["proof (prove)\nusing this:\n  x \\<in> V\n  y \\<in> V\n  x \\<noteq> y\n  \\<Gamma> \\<turnstile> <Var x ,  Var y> : PRODUCT (\\<Gamma> x) (\\<Gamma> y)\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>)\n    \\<in> Pi\\<^sub>M (V \\<union> V')\n           (\\<lambda>x. stock_measure (\\<Gamma> x)) \\<rightarrow>\\<^sub>M\n          stock_measure (PRODUCT (\\<Gamma> x) (\\<Gamma> y))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>)\n  \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n        stock_measure t\n\ngoal (12 subgoals):\n 1. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 2. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 6. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Exp $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Exp $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               if 0 < extract_real b\n                               then f a (lift_RealVal safe_ln b) *\n                                    ennreal (inverse (extract_real b))\n                               else 0)\nA total of 12 subgoals...", "have \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n            (\\<lambda>\\<rho>. distr (dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho>) ?R (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>))\n            (stock_measure t) (marg_dens2 \\<Y> x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         distr (dens_ctxt_measure \\<Y> \\<rho>) (stock_measure t)\n          (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>))\n     (stock_measure t) (marg_dens2 \\<Y> x y)", "proof (rule has_parametrized_subprob_densityI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr (dens_ctxt_measure \\<Y> xa) (stock_measure t)\n        (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>) =\n       density (stock_measure t) (marg_dens2 \\<Y> x y xa)\n 2. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (distr (dens_ctxt_measure \\<Y> xa) (stock_measure t)\n          (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>))\n 3. (\\<lambda>(xa, ya). marg_dens2 \\<Y> x y xa ya)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "fix \\<rho>"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr (dens_ctxt_measure \\<Y> xa) (stock_measure t)\n        (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>) =\n       density (stock_measure t) (marg_dens2 \\<Y> x y xa)\n 2. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (distr (dens_ctxt_measure \\<Y> xa) (stock_measure t)\n          (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>))\n 3. (\\<lambda>(xa, ya). marg_dens2 \\<Y> x y xa ya)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "assume \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\""], ["proof (state)\nthis:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr (dens_ctxt_measure \\<Y> xa) (stock_measure t)\n        (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>) =\n       density (stock_measure t) (marg_dens2 \\<Y> x y xa)\n 2. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (distr (dens_ctxt_measure \\<Y> xa) (stock_measure t)\n          (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>))\n 3. (\\<lambda>(xa, ya). marg_dens2 \\<Y> x y xa ya)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "let ?M = \"dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho>\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr (dens_ctxt_measure \\<Y> xa) (stock_measure t)\n        (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>) =\n       density (stock_measure t) (marg_dens2 \\<Y> x y xa)\n 2. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (distr (dens_ctxt_measure \\<Y> xa) (stock_measure t)\n          (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>))\n 3. (\\<lambda>(xa, ya). marg_dens2 \\<Y> x y xa ya)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "from hd_pair.hyps \\<rho>"], ["proof (chain)\npicking this:\n  x \\<in> V\n  y \\<in> V\n  x \\<noteq> y\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)", "show \"distr ?M ?R (\\<lambda>\\<sigma>. <|\\<sigma> x , \\<sigma> y |>) = density ?R  (marg_dens2 \\<Y> x y \\<rho>)\""], ["proof (prove)\nusing this:\n  x \\<in> V\n  y \\<in> V\n  x \\<noteq> y\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. distr (dens_ctxt_measure \\<Y> \\<rho>) (stock_measure t)\n     (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>) =\n    density (stock_measure t) (marg_dens2 \\<Y> x y \\<rho>)", "by (subst (1 2) t, rule density_marg_dens2_eq[symmetric])"], ["proof (state)\nthis:\n  distr (dens_ctxt_measure \\<Y> \\<rho>) (stock_measure t)\n   (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>) =\n  density (stock_measure t) (marg_dens2 \\<Y> x y \\<rho>)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (distr (dens_ctxt_measure \\<Y> xa) (stock_measure t)\n          (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>))\n 2. (\\<lambda>(xa, ya). marg_dens2 \\<Y> x y xa ya)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "from \\<rho>"], ["proof (chain)\npicking this:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)", "interpret subprob_space ?M"], ["proof (prove)\nusing this:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. subprob_space (dens_ctxt_measure \\<Y> \\<rho>)", "by (rule subprob_space_dens)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (distr (dens_ctxt_measure \\<Y> xa) (stock_measure t)\n          (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>))\n 2. (\\<lambda>(xa, ya). marg_dens2 \\<Y> x y xa ya)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "show \"subprob_space (distr (dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho>) ?R (\\<lambda>\\<sigma>. <|\\<sigma> x ,\\<sigma> y|>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subprob_space\n     (distr (dens_ctxt_measure \\<Y> \\<rho>) (stock_measure t)\n       (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>))", "by (rule subprob_space_distr)\n         (simp_all add: meas measurable_dens_ctxt_measure_eq)"], ["proof (state)\nthis:\n  subprob_space\n   (distr (dens_ctxt_measure \\<Y> \\<rho>) (stock_measure t)\n     (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>))\n\ngoal (1 subgoal):\n 1. (\\<lambda>(xa, ya). marg_dens2 \\<Y> x y xa ya)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "qed (auto simp: t intro!: measurable_marg_dens2' hd_pair.hyps simp del: stock_measure.simps)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       distr (dens_ctxt_measure \\<Y> \\<rho>) (stock_measure t)\n        (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>))\n   (stock_measure t) (marg_dens2 \\<Y> x y)\n\ngoal (12 subgoals):\n 1. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 2. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 6. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Exp $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Exp $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               if 0 < extract_real b\n                               then f a (lift_RealVal safe_ln b) *\n                                    ennreal (inverse (extract_real b))\n                               else 0)\nA total of 12 subgoals...", "also"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       distr (dens_ctxt_measure \\<Y> \\<rho>) (stock_measure t)\n        (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>))\n   (stock_measure t) (marg_dens2 \\<Y> x y)\n\ngoal (12 subgoals):\n 1. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 2. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 6. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Exp $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Exp $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               if 0 < extract_real b\n                               then f a (lift_RealVal safe_ln b) *\n                                    ennreal (inverse (extract_real b))\n                               else 0)\nA total of 12 subgoals...", "from hd_pair.hyps"], ["proof (chain)\npicking this:\n  x \\<in> V\n  y \\<in> V\n  x \\<noteq> y", "have \"(\\<lambda>\\<rho>. distr (dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho>) ?R (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>)) =\n              (\\<lambda>\\<rho>. dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. return_val <|\\<sigma> x, \\<sigma> y|>))\""], ["proof (prove)\nusing this:\n  x \\<in> V\n  y \\<in> V\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<rho>.\n        distr (dens_ctxt_measure \\<Y> \\<rho>) (stock_measure t)\n         (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>)) =\n    (\\<lambda>\\<rho>.\n        dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. return_val <|\\<sigma> x, \\<sigma> y|>))", "by (intro ext bind_return_val[symmetric]) (simp_all add: meas measurable_dens_ctxt_measure_eq)"], ["proof (state)\nthis:\n  (\\<lambda>\\<rho>.\n      distr (dens_ctxt_measure \\<Y> \\<rho>) (stock_measure t)\n       (\\<lambda>\\<sigma>. <|\\<sigma> x, \\<sigma> y|>)) =\n  (\\<lambda>\\<rho>.\n      dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. return_val <|\\<sigma> x, \\<sigma> y|>))\n\ngoal (12 subgoals):\n 1. \\<And>x V y V' \\<Gamma> \\<delta> t.\n       \\<lbrakk>x \\<in> V; y \\<in> V; x \\<noteq> y;\n        \\<Gamma> \\<turnstile> <Var x ,  Var y> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars <Var x ,  Var y> \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> <Var x ,  Var y>))\n                          (stock_measure t)\n                          (marg_dens2 (V, V', \\<Gamma>, \\<delta>) x y)\n 2. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 6. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Exp $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Exp $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               if 0 < extract_real b\n                               then f a (lift_RealVal safe_ln b) *\n                                    ennreal (inverse (extract_real b))\n                               else 0)\nA total of 12 subgoals...", "finally"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. return_val <|\\<sigma> x, \\<sigma> y|>))\n   (stock_measure t) (marg_dens2 \\<Y> x y)", "show ?case"], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. return_val <|\\<sigma> x, \\<sigma> y|>))\n   (stock_measure t) (marg_dens2 \\<Y> x y)\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> <Var x ,  Var y>))\n     (stock_measure t) (marg_dens2 \\<Y> x y)", "by (simp only: expr_sem_pair_vars)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> <Var x ,  Var y>))\n   (stock_measure t) (marg_dens2 \\<Y> x y)\n\ngoal (11 subgoals):\n 1. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 5. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Inverse $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Inverse $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Inverse b) *\n                               ennreal ((inverse (extract_real b))\\<^sup>2))\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 5. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Inverse $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Inverse $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Inverse b) *\n                               ennreal ((inverse (extract_real b))\\<^sup>2))\nA total of 11 subgoals...", "case (hd_if V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t)"], ["proof (state)\nthis:\n  ({}, V \\<union> V', \\<Gamma>, \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n   b \\<Rightarrow> f\n  (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n   e1 \\<Rightarrow> g1\n  (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n   e2 \\<Rightarrow> g2\n  \\<lbrakk>\\<Gamma> \\<turnstile> b : ?t;\n   density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n   free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure (V \\<union> V') \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure\n                          ({}, V \\<union> V', \\<Gamma>, \\<lambda>a. 1)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                     (stock_measure ?t) f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e1 : ?t;\n   density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n   free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure\n                          (V, V', \\<Gamma>, if_dens \\<delta> f True)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                     (stock_measure ?t) g1\n  \\<lbrakk>\\<Gamma> \\<turnstile> e2 : ?t;\n   density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n   free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure\n                          (V, V', \\<Gamma>, if_dens \\<delta> f False)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                     (stock_measure ?t) g2\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n\ngoal (11 subgoals):\n 1. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 5. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Inverse $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Inverse $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Inverse b) *\n                               ennreal ((inverse (extract_real b))\\<^sup>2))\nA total of 11 subgoals...", "interpret dc: density_context V V' \\<Gamma> \\<delta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>", "by fact"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 5. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Inverse $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Inverse $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Inverse b) *\n                               ennreal ((inverse (extract_real b))\\<^sup>2))\nA total of 11 subgoals...", "from hd_if.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'", "have tb: \"\\<Gamma> \\<turnstile> b : BOOL\" and t1: \"\\<Gamma> \\<turnstile> e1 : t\" and t2: \"\\<Gamma> \\<turnstile> e2 : t\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> b : BOOL &&&\n    \\<Gamma> \\<turnstile> e1 : t &&& \\<Gamma> \\<turnstile> e2 : t", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> b : BOOL\n  \\<Gamma> \\<turnstile> e1 : t\n  \\<Gamma> \\<turnstile> e2 : t\n\ngoal (11 subgoals):\n 1. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 5. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Inverse $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Inverse $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Inverse b) *\n                               ennreal ((inverse (extract_real b))\\<^sup>2))\nA total of 11 subgoals...", "have \"has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n          (\\<lambda>\\<rho>. dens_ctxt_measure ({},V\\<union>V',\\<Gamma>,\\<lambda>a. 1) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> b)) (stock_measure BOOL) f\"\n    (is \"?P\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density\n     (state_measure (V \\<union> V') \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure ({}, V \\<union> V', \\<Gamma>, \\<lambda>a. 1)\n          \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n     (stock_measure BOOL) f", "using hd_if.prems tb"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n  \\<Gamma> \\<turnstile> b : BOOL\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density\n     (state_measure (V \\<union> V') \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure ({}, V \\<union> V', \\<Gamma>, \\<lambda>a. 1)\n          \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n     (stock_measure BOOL) f", "by (intro hd_if.IH(1)) auto"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure ({}, V \\<union> V', \\<Gamma>, \\<lambda>a. 1)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n   (stock_measure BOOL) f\n\ngoal (11 subgoals):\n 1. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 5. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Inverse $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Inverse $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Inverse b) *\n                               ennreal ((inverse (extract_real b))\\<^sup>2))\nA total of 11 subgoals...", "also"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure ({}, V \\<union> V', \\<Gamma>, \\<lambda>a. 1)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n   (stock_measure BOOL) f\n\ngoal (11 subgoals):\n 1. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 5. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Inverse $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Inverse $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Inverse b) *\n                               ennreal ((inverse (extract_real b))\\<^sup>2))\nA total of 11 subgoals...", "have \"?P \\<longleftrightarrow> has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n                       (\\<lambda>\\<sigma>. expr_sem \\<sigma> b) (stock_measure BOOL) f\" (is \"_ = ?P\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density\n     (state_measure (V \\<union> V') \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure ({}, V \\<union> V', \\<Gamma>, \\<lambda>a. 1)\n          \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n     (stock_measure BOOL) f =\n    has_parametrized_subprob_density\n     (state_measure (V \\<union> V') \\<Gamma>)\n     (\\<lambda>\\<sigma>. expr_sem \\<sigma> b) (stock_measure BOOL) f", "using hd_if.prems"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density\n     (state_measure (V \\<union> V') \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure ({}, V \\<union> V', \\<Gamma>, \\<lambda>a. 1)\n          \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n     (stock_measure BOOL) f =\n    has_parametrized_subprob_density\n     (state_measure (V \\<union> V') \\<Gamma>)\n     (\\<lambda>\\<sigma>. expr_sem \\<sigma> b) (stock_measure BOOL) f", "by (intro has_parametrized_subprob_density_cong dens_ctxt_measure_empty_bind)\n         (auto simp: dens_ctxt_measure_def state_measure'_def\n               intro!: measurable_expr_sem[OF tb])"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure ({}, V \\<union> V', \\<Gamma>, \\<lambda>a. 1)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n   (stock_measure BOOL) f =\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<sigma>. expr_sem \\<sigma> b) (stock_measure BOOL) f\n\ngoal (11 subgoals):\n 1. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 5. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Inverse $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Inverse $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Inverse b) *\n                               ennreal ((inverse (extract_real b))\\<^sup>2))\nA total of 11 subgoals...", "finally"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<sigma>. expr_sem \\<sigma> b) (stock_measure BOOL) f", "have f: ?P"], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<sigma>. expr_sem \\<sigma> b) (stock_measure BOOL) f\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density\n     (state_measure (V \\<union> V') \\<Gamma>)\n     (\\<lambda>\\<sigma>. expr_sem \\<sigma> b) (stock_measure BOOL) f", "."], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<sigma>. expr_sem \\<sigma> b) (stock_measure BOOL) f\n\ngoal (11 subgoals):\n 1. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 5. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Inverse $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Inverse $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Inverse b) *\n                               ennreal ((inverse (extract_real b))\\<^sup>2))\nA total of 11 subgoals...", "let ?M = \"\\<lambda>\\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho>\""], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 5. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Inverse $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Inverse $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Inverse b) *\n                               ennreal ((inverse (extract_real b))\\<^sup>2))\nA total of 11 subgoals...", "let ?M' = \"\\<lambda>b \\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,if_dens \\<delta> f b) \\<rho>\""], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 5. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Inverse $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Inverse $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Inverse b) *\n                               ennreal ((inverse (extract_real b))\\<^sup>2))\nA total of 11 subgoals...", "from f"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<sigma>. expr_sem \\<sigma> b) (stock_measure BOOL) f", "have dc': \"\\<And>b. density_context V V' \\<Gamma> (if_dens \\<delta> f b)\""], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<sigma>. expr_sem \\<sigma> b) (stock_measure BOOL) f\n\ngoal (1 subgoal):\n 1. \\<And>b. density_context V V' \\<Gamma> (if_dens \\<delta> f b)", "by (intro dc.density_context_if_dens) (simp add: stock_measure.simps)"], ["proof (state)\nthis:\n  density_context V V' \\<Gamma> (if_dens \\<delta> f ?b)\n\ngoal (11 subgoals):\n 1. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 5. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Inverse $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Inverse $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Inverse b) *\n                               ennreal ((inverse (extract_real b))\\<^sup>2))\nA total of 11 subgoals...", "have g1[measurable]: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n              (\\<lambda>\\<rho>. ?M' True \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1)) (stock_measure t) g1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, if_dens \\<delta> f True)\n          \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n     (stock_measure t) g1", "using hd_if.prems"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, if_dens \\<delta> f True)\n          \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n     (stock_measure t) g1", "by (intro hd_if.IH(2)[OF t1 dc']) simp"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, if_dens \\<delta> f True)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n   (stock_measure t) g1\n\ngoal (11 subgoals):\n 1. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 5. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Inverse $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Inverse $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Inverse b) *\n                               ennreal ((inverse (extract_real b))\\<^sup>2))\nA total of 11 subgoals...", "have g2[measurable]: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n              (\\<lambda>\\<rho>. ?M' False \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2)) (stock_measure t) g2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, if_dens \\<delta> f False)\n          \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n     (stock_measure t) g2", "using hd_if.prems"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, if_dens \\<delta> f False)\n          \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n     (stock_measure t) g2", "by (intro hd_if.IH(3)[OF t2 dc']) simp"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, if_dens \\<delta> f False)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n   (stock_measure t) g2\n\ngoal (11 subgoals):\n 1. \\<And>V V' \\<Gamma> b f \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>({}, V \\<union> V', \\<Gamma>,\n                 \\<lambda>_. 1) \\<turnstile>\\<^sub>d\n                 b \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> b : t;\n            density_context {} (V \\<union> V') \\<Gamma> (\\<lambda>a. 1);\n            free_vars b \\<subseteq> {} \\<union> (V \\<union> V')\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure (V \\<union> V') \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   ({}, V \\<union> V', \\<Gamma>,\n                                    \\<lambda>a. 1)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> b))\n                              (stock_measure t) f;\n        (V, V', \\<Gamma>, if_dens \\<delta> f True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens \\<delta> f False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens \\<delta> f False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens \\<delta> f False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 5. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Inverse $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Inverse $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               f a (op_sem Inverse b) *\n                               ennreal ((inverse (extract_real b))\\<^sup>2))\nA total of 11 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n     (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)", "proof (rule has_parametrized_subprob_densityI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure dc.\\<Y> x \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)) =\n       density (stock_measure t) (\\<lambda>a. g1 x a + g2 x a)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n 3. (\\<lambda>(b, a). g1 b a + g2 b a)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "show \"(\\<lambda>(\\<rho>, x). g1 \\<rho> x + g2 \\<rho> x) \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<rho>, x). g1 \\<rho> x + g2 \\<rho> x)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "by measurable"], ["proof (state)\nthis:\n  (\\<lambda>(\\<rho>, x). g1 \\<rho> x + g2 \\<rho> x)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure dc.\\<Y> x \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)) =\n       density (stock_measure t) (\\<lambda>a. g1 x a + g2 x a)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))", "fix \\<rho>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure dc.\\<Y> x \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)) =\n       density (stock_measure t) (\\<lambda>a. g1 x a + g2 x a)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))", "assume \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\""], ["proof (state)\nthis:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure dc.\\<Y> x \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)) =\n       density (stock_measure t) (\\<lambda>a. g1 x a + g2 x a)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))", "show \"subprob_space (?M \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subprob_space\n     (dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))", "using \\<rho> hd_if.prems"], ["proof (prove)\nusing this:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. subprob_space\n     (dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))", "by (intro subprob_space_bind[of _ _ \"stock_measure t\"], simp add: dc.subprob_space_dens)\n         (auto intro!: measurable_expr_sem simp: measurable_dens_ctxt_measure_eq\n               simp del: expr_sem.simps)"], ["proof (state)\nthis:\n  subprob_space\n   (dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure dc.\\<Y> x \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)) =\n       density (stock_measure t) (\\<lambda>a. g1 x a + g2 x a)", "show \"?M \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)) =\n              density (stock_measure t) (\\<lambda>x. g1 \\<rho> x + g2 \\<rho> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)) =\n    density (stock_measure t) (\\<lambda>x. g1 \\<rho> x + g2 \\<rho> x)", "using \\<rho> hd_if.prems f g1 g2"], ["proof (prove)\nusing this:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n  has_parametrized_subprob_density (state_measure (V \\<union> V') \\<Gamma>)\n   (\\<lambda>\\<sigma>. expr_sem \\<sigma> b) (stock_measure BOOL) f\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, if_dens \\<delta> f True)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n   (stock_measure t) g1\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, if_dens \\<delta> f False)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n   (stock_measure t) g2\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)) =\n    density (stock_measure t) (\\<lambda>x. g1 \\<rho> x + g2 \\<rho> x)", "by (subst expr_sem.simps, intro dc.emeasure_bind_if_dens_ctxt_measure)\n       (auto simp: measurable_dens_ctxt_measure_eq if_dens_def\n             simp del: stock_measure.simps intro!: measurable_expr_sem)"], ["proof (state)\nthis:\n  dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)) =\n  density (stock_measure t) (\\<lambda>x. g1 \\<rho> x + g2 \\<rho> x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n   (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n\ngoal (10 subgoals):\n 1. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 4. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Add $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n            \\<partial>stock_measure (val_type b))", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 4. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Add $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n            \\<partial>stock_measure (val_type b))", "case (hd_if_det b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t)"], ["proof (state)\nthis:\n  randomfree b\n  (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n   e1 \\<Rightarrow> g1\n  (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n   e2 \\<Rightarrow> g2\n  \\<lbrakk>\\<Gamma> \\<turnstile> e1 : ?t;\n   density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n   free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure\n                          (V, V', \\<Gamma>, if_dens_det \\<delta> b True)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                     (stock_measure ?t) g1\n  \\<lbrakk>\\<Gamma> \\<turnstile> e2 : ?t;\n   density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n   free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure\n                          (V, V', \\<Gamma>, if_dens_det \\<delta> b False)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                     (stock_measure ?t) g2\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n\ngoal (10 subgoals):\n 1. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 4. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Add $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n            \\<partial>stock_measure (val_type b))", "interpret dc: density_context V V' \\<Gamma> \\<delta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>", "by fact"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 4. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Add $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n            \\<partial>stock_measure (val_type b))", "from hd_if_det.prems \\<open>randomfree b\\<close>"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n  randomfree b", "have tb[measurable (raw)]: \"\\<Gamma> \\<turnstile> b : BOOL\" and [measurable (raw)]: \"randomfree b\"\n    and t1[measurable (raw)]: \"\\<Gamma> \\<turnstile> e1 : t\"\n    and t2[measurable (raw)]: \"\\<Gamma> \\<turnstile> e2 : t\"\n    and fv_b[measurable (raw)]: \"free_vars b \\<subseteq> V \\<union> V'\"\n    and fv_e1[measurable (raw)]: \"free_vars e1 \\<subseteq> V \\<union> V'\"\n    and fv_e2[measurable (raw)]: \"free_vars e2 \\<subseteq> V \\<union> V'\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n  randomfree b\n\ngoal (1 subgoal):\n 1. (\\<Gamma> \\<turnstile> b : BOOL &&&\n     randomfree b &&& \\<Gamma> \\<turnstile> e1 : t) &&&\n    (\\<Gamma> \\<turnstile> e2 : t &&&\n     free_vars b \\<subseteq> V \\<union> V') &&&\n    free_vars e1 \\<subseteq> V \\<union> V' &&&\n    free_vars e2 \\<subseteq> V \\<union> V'", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> b : BOOL\n  randomfree b\n  \\<Gamma> \\<turnstile> e1 : t\n  \\<Gamma> \\<turnstile> e2 : t\n  free_vars b \\<subseteq> V \\<union> V'\n  free_vars e1 \\<subseteq> V \\<union> V'\n  free_vars e2 \\<subseteq> V \\<union> V'\n\ngoal (10 subgoals):\n 1. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 4. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Add $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n            \\<partial>stock_measure (val_type b))", "let ?M = \"\\<lambda>\\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho>\""], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 4. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Add $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n            \\<partial>stock_measure (val_type b))", "let ?M' = \"\\<lambda>x \\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,if_dens_det \\<delta> b x) \\<rho>\""], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 4. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Add $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n            \\<partial>stock_measure (val_type b))", "let ?N = \"\\<lambda>\\<rho>. ?M \\<rho>\\<bind> (\\<lambda>\\<sigma>. if expr_sem_rf \\<sigma> b = BoolVal True then expr_sem \\<sigma> e1 else expr_sem \\<sigma> e2)\""], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 4. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Add $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n            \\<partial>stock_measure (val_type b))", "from hd_if_det.hyps hd_if_det.prems tb"], ["proof (chain)\npicking this:\n  randomfree b\n  (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n   e1 \\<Rightarrow> g1\n  (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n   e2 \\<Rightarrow> g2\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n  \\<Gamma> \\<turnstile> b : BOOL", "have dc': \"\\<And>x. density_context V V' \\<Gamma> (if_dens_det \\<delta> b x)\""], ["proof (prove)\nusing this:\n  randomfree b\n  (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n   e1 \\<Rightarrow> g1\n  (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n   e2 \\<Rightarrow> g2\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n  \\<Gamma> \\<turnstile> b : BOOL\n\ngoal (1 subgoal):\n 1. \\<And>x. density_context V V' \\<Gamma> (if_dens_det \\<delta> b x)", "by (intro dc.density_context_if_dens_det) simp_all"], ["proof (state)\nthis:\n  density_context V V' \\<Gamma> (if_dens_det \\<delta> b ?x)\n\ngoal (10 subgoals):\n 1. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 4. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Add $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n            \\<partial>stock_measure (val_type b))", "have g1[measurable]: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n              (\\<lambda>\\<rho>. ?M' True \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1)) (stock_measure t) g1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, if_dens_det \\<delta> b True)\n          \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n     (stock_measure t) g1", "using hd_if_det.prems"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, if_dens_det \\<delta> b True)\n          \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n     (stock_measure t) g1", "by (intro hd_if_det.IH(1)[OF]) (simp_all add: dc' t1)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, if_dens_det \\<delta> b True)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n   (stock_measure t) g1\n\ngoal (10 subgoals):\n 1. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 4. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Add $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n            \\<partial>stock_measure (val_type b))", "have g2[measurable]: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n              (\\<lambda>\\<rho>. ?M' False \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2)) (stock_measure t) g2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, if_dens_det \\<delta> b False)\n          \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n     (stock_measure t) g2", "using hd_if_det.prems"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, if_dens_det \\<delta> b False)\n          \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n     (stock_measure t) g2", "by (intro hd_if_det.IH(2)[OF]) (simp_all add: dc' t2)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, if_dens_det \\<delta> b False)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n   (stock_measure t) g2\n\ngoal (10 subgoals):\n 1. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 4. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Add $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n            \\<partial>stock_measure (val_type b))", "note val_type_expr_sem_rf[OF tb, of \"V \\<union> V'\", simp]"], ["proof (state)\nthis:\n  \\<lbrakk>randomfree b; free_vars b \\<subseteq> V \\<union> V';\n   ?\\<sigma> \\<in> space (state_measure (V \\<union> V') \\<Gamma>)\\<rbrakk>\n  \\<Longrightarrow> val_type (expr_sem_rf ?\\<sigma> b) = BOOL\n\ngoal (10 subgoals):\n 1. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 4. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Add $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n            \\<partial>stock_measure (val_type b))", "have \"has_parametrized_subprob_density (state_measure V' \\<Gamma>) ?N\n            (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\" (is \"?P\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>.\n             if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n             else expr_sem \\<sigma> e2))\n     (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)", "proof (rule has_parametrized_subprob_densityI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure dc.\\<Y> x \\<bind>\n       (\\<lambda>\\<sigma>.\n           if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n           else expr_sem \\<sigma> e2) =\n       density (stock_measure t) (\\<lambda>b. g1 x b + g2 x b)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>.\n             if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n             else expr_sem \\<sigma> e2))\n 3. (\\<lambda>(a, b). g1 a b + g2 a b)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "show \"(\\<lambda>(\\<rho>, x). g1 \\<rho> x + g2 \\<rho> x) \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<rho>, x). g1 \\<rho> x + g2 \\<rho> x)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "by measurable"], ["proof (state)\nthis:\n  (\\<lambda>(\\<rho>, x). g1 \\<rho> x + g2 \\<rho> x)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure dc.\\<Y> x \\<bind>\n       (\\<lambda>\\<sigma>.\n           if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n           else expr_sem \\<sigma> e2) =\n       density (stock_measure t) (\\<lambda>b. g1 x b + g2 x b)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>.\n             if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n             else expr_sem \\<sigma> e2))", "fix \\<rho>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure dc.\\<Y> x \\<bind>\n       (\\<lambda>\\<sigma>.\n           if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n           else expr_sem \\<sigma> e2) =\n       density (stock_measure t) (\\<lambda>b. g1 x b + g2 x b)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>.\n             if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n             else expr_sem \\<sigma> e2))", "assume \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\""], ["proof (state)\nthis:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure dc.\\<Y> x \\<bind>\n       (\\<lambda>\\<sigma>.\n           if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n           else expr_sem \\<sigma> e2) =\n       density (stock_measure t) (\\<lambda>b. g1 x b + g2 x b)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure dc.\\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>.\n             if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n             else expr_sem \\<sigma> e2))", "show \"subprob_space (?N \\<rho>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subprob_space\n     (dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>.\n          if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n          else expr_sem \\<sigma> e2))", "using \\<rho> hd_if_det.prems hd_if_det.hyps t1 t2"], ["proof (prove)\nusing this:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n  randomfree b\n  (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n   e1 \\<Rightarrow> g1\n  (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n   e2 \\<Rightarrow> g2\n  \\<Gamma> \\<turnstile> e1 : t\n  \\<Gamma> \\<turnstile> e2 : t\n\ngoal (1 subgoal):\n 1. subprob_space\n     (dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>.\n          if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n          else expr_sem \\<sigma> e2))", "by (intro subprob_space_bind[of _ _ \"stock_measure t\"]) (auto simp add: dc.subprob_space_dens)"], ["proof (state)\nthis:\n  subprob_space\n   (dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n        else expr_sem \\<sigma> e2))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       dens_ctxt_measure dc.\\<Y> x \\<bind>\n       (\\<lambda>\\<sigma>.\n           if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n           else expr_sem \\<sigma> e2) =\n       density (stock_measure t) (\\<lambda>b. g1 x b + g2 x b)", "show \"?N \\<rho> = density (stock_measure t) (\\<lambda>x. g1 \\<rho> x + g2 \\<rho> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n        else expr_sem \\<sigma> e2) =\n    density (stock_measure t) (\\<lambda>x. g1 \\<rho> x + g2 \\<rho> x)", "using \\<rho> hd_if_det.prems g1 g2 dc' hd_if_det.prems"], ["proof (prove)\nusing this:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, if_dens_det \\<delta> b True)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n   (stock_measure t) g1\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, if_dens_det \\<delta> b False)\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n   (stock_measure t) g2\n  density_context V V' \\<Gamma> (if_dens_det \\<delta> b ?x)\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n        else expr_sem \\<sigma> e2) =\n    density (stock_measure t) (\\<lambda>x. g1 \\<rho> x + g2 \\<rho> x)", "unfolding if_dens_det_def"], ["proof (prove)\nusing this:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure\n        (V, V', \\<Gamma>,\n         \\<lambda>\\<sigma>.\n            \\<delta> \\<sigma> *\n            (if expr_sem_rf \\<sigma> b = TRUE then 1 else 0))\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n   (stock_measure t) g1\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure\n        (V, V', \\<Gamma>,\n         \\<lambda>\\<sigma>.\n            \\<delta> \\<sigma> *\n            (if expr_sem_rf \\<sigma> b = FALSE then 1 else 0))\n        \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n   (stock_measure t) g2\n  density_context V V' \\<Gamma>\n   (\\<lambda>\\<sigma>.\n       \\<delta> \\<sigma> *\n       (if expr_sem_rf \\<sigma> b = BoolVal ?x then 1 else 0))\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>.\n        if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n        else expr_sem \\<sigma> e2) =\n    density (stock_measure t) (\\<lambda>x. g1 \\<rho> x + g2 \\<rho> x)", "by (intro dc.emeasure_bind_if_det_dens_ctxt_measure)\n         (simp_all add: space_dens_ctxt_measure)"], ["proof (state)\nthis:\n  dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>.\n      if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n      else expr_sem \\<sigma> e2) =\n  density (stock_measure t) (\\<lambda>x. g1 \\<rho> x + g2 \\<rho> x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>.\n           if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n           else expr_sem \\<sigma> e2))\n   (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n\ngoal (10 subgoals):\n 1. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 4. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Add $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n            \\<partial>stock_measure (val_type b))", "also"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>.\n           if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n           else expr_sem \\<sigma> e2))\n   (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n\ngoal (10 subgoals):\n 1. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 4. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Add $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n            \\<partial>stock_measure (val_type b))", "from hd_if_det.prems hd_if_det.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n  randomfree b\n  (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n   e1 \\<Rightarrow> g1\n  (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n   e2 \\<Rightarrow> g2", "have \"?P \\<longleftrightarrow> ?case\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\n  randomfree b\n  (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n   e1 \\<Rightarrow> g1\n  (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n   e2 \\<Rightarrow> g2\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>.\n             if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n             else expr_sem \\<sigma> e2))\n     (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b) =\n    has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n     (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)", "apply (intro has_parametrized_subprob_density_cong bind_cong refl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>\\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V';\n        randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        x \\<in> space (state_measure V' \\<Gamma>);\n        xa \\<in> space (dens_ctxt_measure dc.\\<Y> x)\\<rbrakk>\n       \\<Longrightarrow> (if expr_sem_rf xa b = TRUE then expr_sem xa e1\n                          else expr_sem xa e2) =\n                         expr_sem xa (IF b THEN e1 ELSE e2)", "apply (subst expr_sem.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>\\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V';\n        randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        x \\<in> space (state_measure V' \\<Gamma>);\n        xa \\<in> space (dens_ctxt_measure dc.\\<Y> x)\\<rbrakk>\n       \\<Longrightarrow> (if expr_sem_rf xa b = TRUE then expr_sem xa e1\n                          else expr_sem xa e2) =\n                         expr_sem xa b \\<bind>\n                         (\\<lambda>b'.\n                             if b' = TRUE then expr_sem xa e1\n                             else expr_sem xa e2)", "apply (subst expr_sem_rf_sound[OF tb, of \"V \\<union> V'\", symmetric]) []"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>\\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V';\n        randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        x \\<in> space (state_measure V' \\<Gamma>);\n        xa \\<in> space (dens_ctxt_measure dc.\\<Y> x)\\<rbrakk>\n       \\<Longrightarrow> randomfree b\n 2. \\<And>x xa.\n       \\<lbrakk>\\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V';\n        randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        x \\<in> space (state_measure V' \\<Gamma>);\n        xa \\<in> space (dens_ctxt_measure dc.\\<Y> x)\\<rbrakk>\n       \\<Longrightarrow> free_vars b \\<subseteq> V \\<union> V'\n 3. \\<And>x xa.\n       \\<lbrakk>\\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V';\n        randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        x \\<in> space (state_measure V' \\<Gamma>);\n        xa \\<in> space (dens_ctxt_measure dc.\\<Y> x)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> space\n                                   (state_measure (V \\<union> V') \\<Gamma>)\n 4. \\<And>x xa.\n       \\<lbrakk>\\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V';\n        randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        x \\<in> space (state_measure V' \\<Gamma>);\n        xa \\<in> space (dens_ctxt_measure dc.\\<Y> x)\\<rbrakk>\n       \\<Longrightarrow> (if expr_sem_rf xa b = TRUE then expr_sem xa e1\n                          else expr_sem xa e2) =\n                         return_val (expr_sem_rf xa b) \\<bind>\n                         (\\<lambda>b'.\n                             if b' = TRUE then expr_sem xa e1\n                             else expr_sem xa e2)", "apply (simp_all add: space_dens_ctxt_measure bind_return_val''[where M=\"stock_measure t\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>.\n           if expr_sem_rf \\<sigma> b = TRUE then expr_sem \\<sigma> e1\n           else expr_sem \\<sigma> e2))\n   (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b) =\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n   (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n\ngoal (10 subgoals):\n 1. \\<And>b V V' \\<Gamma> \\<delta> e1 g1 e2 g2 t.\n       \\<lbrakk>randomfree b;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b True) \\<turnstile>\\<^sub>d\n         e1 \\<Rightarrow> g1;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e1 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b True);\n            free_vars e1 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b True)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e1))\n                              (stock_measure t) g1;\n        (V, V', \\<Gamma>, if_dens_det \\<delta> b False) \\<turnstile>\\<^sub>d\n         e2 \\<Rightarrow> g2;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e2 : t;\n            density_context V V' \\<Gamma> (if_dens_det \\<delta> b False);\n            free_vars e2 \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>,\n                                    if_dens_det \\<delta> b False)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e2))\n                              (stock_measure t) g2;\n        \\<Gamma> \\<turnstile> IF b THEN e1 ELSE e2 : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (IF b THEN e1 ELSE e2) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n                          (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 4. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 10. \\<And>V V' \\<Gamma> \\<delta> e f t.\n        \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                  e \\<Rightarrow> f;\n         \\<And>t.\n            \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n             density_context V V' \\<Gamma> \\<delta>;\n             free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n            \\<Longrightarrow> has_parametrized_subprob_density\n                               (state_measure V' \\<Gamma>)\n                               (\\<lambda>\\<rho>.\n                                   dens_ctxt_measure\n                                    (V, V', \\<Gamma>, \\<delta>)\n                                    \\<rho> \\<bind>\n                                   (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                               (stock_measure t) f;\n         \\<Gamma> \\<turnstile> Add $$ e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>.\n                                   expr_sem \\<sigma> (Add $$ e)))\n                           (stock_measure t)\n                           (\\<lambda>a b.\n                               \\<integral>\\<^sup>+ x.\n              f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n            \\<partial>stock_measure (val_type b))", "finally"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n   (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)", "show ?case"], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n   (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n     (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)", "."], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure dc.\\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (IF b THEN e1 ELSE e2)))\n   (stock_measure t) (\\<lambda>a b. g1 a b + g2 a b)\n\ngoal (9 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 3. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 3. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "case (hd_fst V V' \\<Gamma> \\<delta> e f t)"], ["proof (state)\nthis:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> Fst $$ e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\n\ngoal (9 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 3. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "interpret density_context V V' \\<Gamma> \\<delta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>", "by fact"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 3. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "from hd_fst.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> Fst $$ e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Fst $$ e) \\<subseteq> V \\<union> V'", "obtain t' where t: \"\\<Gamma> \\<turnstile> e : PRODUCT t t'\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Fst $$ e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<Gamma> \\<turnstile> e : PRODUCT t t' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (elim expr_typing_opE) (auto split: pdf_type.split_asm)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> e : PRODUCT t t'\n\ngoal (9 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 3. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "hence \"\\<Gamma> \\<turnstile> Snd $$ e : t'\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> e : PRODUCT t t'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Snd $$ e : t'", "by (intro expr_typing.intros) auto"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Snd $$ e : t'\n\ngoal (9 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 3. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "hence t2: \"the (expr_type \\<Gamma> (Snd $$ e)) = t'\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Snd $$ e : t'\n\ngoal (1 subgoal):\n 1. the (expr_type \\<Gamma> (Snd $$ e)) = t'", "by (simp add: expr_type_Some_iff[symmetric])"], ["proof (state)\nthis:\n  the (expr_type \\<Gamma> (Snd $$ e)) = t'\n\ngoal (9 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 3. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "let ?N = \"stock_measure (PRODUCT t t')\""], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 3. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "have dens[measurable]: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n                (\\<lambda>\\<rho>. dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) ?N f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure (PRODUCT t t')) f", "by (intro hd_fst.IH) (insert hd_fst.prems hd_fst.hyps t, auto)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure (PRODUCT t t')) f\n\ngoal (9 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 3. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "let ?f = \"\\<lambda>\\<rho> x. \\<integral>\\<^sup>+ y. f \\<rho> <|x,y|> \\<partial>stock_measure t'\""], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 3. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "have \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n          (\\<lambda>\\<rho>. dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e))) (stock_measure t) ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n     (stock_measure t)\n     (\\<lambda>\\<rho> x.\n         \\<integral>\\<^sup>+ y. f \\<rho> <|x, y|>\n                            \\<partial>stock_measure t')", "unfolding has_parametrized_subprob_density_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>space (state_measure V' \\<Gamma>).\n        has_subprob_density\n         (dens_ctxt_measure \\<Y> x \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n         (stock_measure t)\n         (\\<lambda>xa.\n             \\<integral>\\<^sup>+ y. f x <|xa, y|>\n                                \\<partial>stock_measure t')) \\<and>\n    (\\<lambda>(\\<rho>, x).\n        \\<integral>\\<^sup>+ y. f \\<rho> <|x, y|> \\<partial>stock_measure t')\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "proof (intro conjI ballI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            \\<integral>\\<^sup>+ y. f x <|xa, y|> \\<partial>stock_measure t')\n 2. (\\<lambda>(\\<rho>, x).\n        \\<integral>\\<^sup>+ y. f \\<rho> <|x, y|> \\<partial>stock_measure t')\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "interpret sigma_finite_measure \"stock_measure t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_measure (stock_measure t')", "by simp"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            \\<integral>\\<^sup>+ y. f x <|xa, y|> \\<partial>stock_measure t')\n 2. (\\<lambda>(\\<rho>, x).\n        \\<integral>\\<^sup>+ y. f \\<rho> <|x, y|> \\<partial>stock_measure t')\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "show \"case_prod ?f \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<rho>, x).\n        \\<integral>\\<^sup>+ y. f \\<rho> <|x, y|> \\<partial>stock_measure t')\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "by measurable"], ["proof (state)\nthis:\n  (\\<lambda>(\\<rho>, x).\n      \\<integral>\\<^sup>+ y. f \\<rho> <|x, y|> \\<partial>stock_measure t')\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            \\<integral>\\<^sup>+ y. f x <|xa, y|> \\<partial>stock_measure t')", "fix \\<rho>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            \\<integral>\\<^sup>+ y. f x <|xa, y|> \\<partial>stock_measure t')", "assume \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\""], ["proof (state)\nthis:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            \\<integral>\\<^sup>+ y. f x <|xa, y|> \\<partial>stock_measure t')", "let ?M = \"dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            \\<integral>\\<^sup>+ y. f x <|xa, y|> \\<partial>stock_measure t')", "from dens and \\<rho>"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure (PRODUCT t t')) f\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)", "have \"has_subprob_density (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) ?N (f \\<rho>)\""], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure (PRODUCT t t')) f\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure (PRODUCT t t')) (f \\<rho>)", "unfolding has_parametrized_subprob_density_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>space (state_measure V' \\<Gamma>).\n      has_subprob_density\n       (dens_ctxt_measure \\<Y> x \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure (PRODUCT t t')) (f x)) \\<and>\n  (\\<lambda>(x, y). f x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n          stock_measure (PRODUCT t t'))\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure (PRODUCT t t')) (f \\<rho>)", "by auto"], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure (PRODUCT t t')) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            \\<integral>\\<^sup>+ y. f x <|xa, y|> \\<partial>stock_measure t')", "hence \"has_subprob_density (distr (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t) (op_sem Fst))\n               (stock_measure t) (?f \\<rho>)\" (is \"has_subprob_density ?R _ _\")"], ["proof (prove)\nusing this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure (PRODUCT t t')) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t) (op_sem Fst))\n     (stock_measure t)\n     (\\<lambda>x.\n         \\<integral>\\<^sup>+ y. f \\<rho> <|x, y|>\n                            \\<partial>stock_measure t')", "by (intro has_subprob_density_distr_Fst)  simp"], ["proof (state)\nthis:\n  has_subprob_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (op_sem Fst))\n   (stock_measure t)\n   (\\<lambda>x.\n       \\<integral>\\<^sup>+ y. f \\<rho> <|x, y|> \\<partial>stock_measure t')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            \\<integral>\\<^sup>+ y. f x <|xa, y|> \\<partial>stock_measure t')", "also"], ["proof (state)\nthis:\n  has_subprob_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (op_sem Fst))\n   (stock_measure t)\n   (\\<lambda>x.\n       \\<integral>\\<^sup>+ y. f \\<rho> <|x, y|> \\<partial>stock_measure t')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            \\<integral>\\<^sup>+ y. f x <|xa, y|> \\<partial>stock_measure t')", "from hd_fst.prems and \\<rho>"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> Fst $$ e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)", "have \"?R = ?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e))\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Fst $$ e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (op_sem Fst) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e))", "by (intro expr_sem_op_eq_distr[symmetric]) simp_all"], ["proof (state)\nthis:\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (op_sem Fst) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n        (stock_measure t)\n        (\\<lambda>xa.\n            \\<integral>\\<^sup>+ y. f x <|xa, y|> \\<partial>stock_measure t')", "finally"], ["proof (chain)\npicking this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n   (stock_measure t)\n   (\\<lambda>x.\n       \\<integral>\\<^sup>+ y. f \\<rho> <|x, y|> \\<partial>stock_measure t')", "show \"has_subprob_density ... (stock_measure t) (?f \\<rho>)\""], ["proof (prove)\nusing this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n   (stock_measure t)\n   (\\<lambda>x.\n       \\<integral>\\<^sup>+ y. f \\<rho> <|x, y|> \\<partial>stock_measure t')\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n     (stock_measure t)\n     (\\<lambda>x.\n         \\<integral>\\<^sup>+ y. f \\<rho> <|x, y|>\n                            \\<partial>stock_measure t')", "."], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n   (stock_measure t)\n   (\\<lambda>x.\n       \\<integral>\\<^sup>+ y. f \\<rho> <|x, y|> \\<partial>stock_measure t')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n   (stock_measure t)\n   (\\<lambda>\\<rho> x.\n       \\<integral>\\<^sup>+ y. f \\<rho> <|x, y|> \\<partial>stock_measure t')\n\ngoal (9 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Fst $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Fst $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Fst $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ y. f a <|b, y|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Snd $$ e))))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 3. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 9. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "thus ?case"], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n   (stock_measure t)\n   (\\<lambda>\\<rho> x.\n       \\<integral>\\<^sup>+ y. f \\<rho> <|x, y|> \\<partial>stock_measure t')\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n     (stock_measure t)\n     (\\<lambda>a b.\n         \\<integral>\\<^sup>+ y. f a <|b, y|>\n                            \\<partial>stock_measure\n (the (expr_type \\<Gamma> (Snd $$ e))))", "by (subst t2)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Fst $$ e)))\n   (stock_measure t)\n   (\\<lambda>a b.\n       \\<integral>\\<^sup>+ y. f a <|b, y|>\n                          \\<partial>stock_measure\n                                     (the (expr_type \\<Gamma> (Snd $$ e))))\n\ngoal (8 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 2. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 2. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "case (hd_snd V V' \\<Gamma> \\<delta> e f t')"], ["proof (state)\nthis:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> Snd $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\n\ngoal (8 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 2. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "interpret density_context V V' \\<Gamma> \\<delta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>", "by fact"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 2. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "from hd_snd.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> Snd $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Snd $$ e) \\<subseteq> V \\<union> V'", "obtain t where t: \"\\<Gamma> \\<turnstile> e : PRODUCT t t'\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Snd $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<Gamma> \\<turnstile> e : PRODUCT t t' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (elim expr_typing_opE) (auto split: pdf_type.split_asm)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> e : PRODUCT t t'\n\ngoal (8 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 2. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "hence \"\\<Gamma> \\<turnstile> Fst $$ e : t\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> e : PRODUCT t t'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Fst $$ e : t", "by (intro expr_typing.intros) auto"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Fst $$ e : t\n\ngoal (8 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 2. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "hence t2: \"the (expr_type \\<Gamma> (Fst $$ e)) = t\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Fst $$ e : t\n\ngoal (1 subgoal):\n 1. the (expr_type \\<Gamma> (Fst $$ e)) = t", "by (simp add: expr_type_Some_iff[symmetric])"], ["proof (state)\nthis:\n  the (expr_type \\<Gamma> (Fst $$ e)) = t\n\ngoal (8 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 2. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "let ?N = \"stock_measure (PRODUCT t t')\""], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 2. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "have dens[measurable]: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n                (\\<lambda>\\<rho>. dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) ?N f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure (PRODUCT t t')) f", "by (intro hd_snd.IH) (insert hd_snd.prems hd_snd.hyps t, auto)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure (PRODUCT t t')) f\n\ngoal (8 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 2. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "let ?f = \"\\<lambda>\\<rho> y. \\<integral>\\<^sup>+ x. f \\<rho> <|x,y|> \\<partial>stock_measure t\""], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 2. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "have \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n          (\\<lambda>\\<rho>. dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e))) (stock_measure t') ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n     (stock_measure t')\n     (\\<lambda>\\<rho> y.\n         \\<integral>\\<^sup>+ x. f \\<rho> <|x, y|> \\<partial>stock_measure t)", "unfolding has_parametrized_subprob_density_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>space (state_measure V' \\<Gamma>).\n        has_subprob_density\n         (dens_ctxt_measure \\<Y> x \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n         (stock_measure t')\n         (\\<lambda>y.\n             \\<integral>\\<^sup>+ xa. f x <|xa, y|>\n                                \\<partial>stock_measure t)) \\<and>\n    (\\<lambda>(\\<rho>, y).\n        \\<integral>\\<^sup>+ x. f \\<rho> <|x, y|> \\<partial>stock_measure t)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')", "proof (intro conjI ballI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n        (stock_measure t')\n        (\\<lambda>y.\n            \\<integral>\\<^sup>+ xa. f x <|xa, y|> \\<partial>stock_measure t)\n 2. (\\<lambda>(\\<rho>, y).\n        \\<integral>\\<^sup>+ x. f \\<rho> <|x, y|> \\<partial>stock_measure t)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')", "interpret sigma_finite_measure \"stock_measure t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_measure (stock_measure t)", "by simp"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n        (stock_measure t')\n        (\\<lambda>y.\n            \\<integral>\\<^sup>+ xa. f x <|xa, y|> \\<partial>stock_measure t)\n 2. (\\<lambda>(\\<rho>, y).\n        \\<integral>\\<^sup>+ x. f \\<rho> <|x, y|> \\<partial>stock_measure t)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')", "show \"case_prod ?f \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<rho>, y).\n        \\<integral>\\<^sup>+ x. f \\<rho> <|x, y|> \\<partial>stock_measure t)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')", "by measurable"], ["proof (state)\nthis:\n  (\\<lambda>(\\<rho>, y).\n      \\<integral>\\<^sup>+ x. f \\<rho> <|x, y|> \\<partial>stock_measure t)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n        (stock_measure t')\n        (\\<lambda>y.\n            \\<integral>\\<^sup>+ xa. f x <|xa, y|> \\<partial>stock_measure t)", "fix \\<rho>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n        (stock_measure t')\n        (\\<lambda>y.\n            \\<integral>\\<^sup>+ xa. f x <|xa, y|> \\<partial>stock_measure t)", "assume \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\""], ["proof (state)\nthis:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n        (stock_measure t')\n        (\\<lambda>y.\n            \\<integral>\\<^sup>+ xa. f x <|xa, y|> \\<partial>stock_measure t)", "let ?M = \"dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n        (stock_measure t')\n        (\\<lambda>y.\n            \\<integral>\\<^sup>+ xa. f x <|xa, y|> \\<partial>stock_measure t)", "from dens and \\<rho>"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure (PRODUCT t t')) f\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)", "have \"has_subprob_density (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) ?N (f \\<rho>)\""], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure (PRODUCT t t')) f\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure (PRODUCT t t')) (f \\<rho>)", "unfolding has_parametrized_subprob_density_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>space (state_measure V' \\<Gamma>).\n      has_subprob_density\n       (dens_ctxt_measure \\<Y> x \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure (PRODUCT t t')) (f x)) \\<and>\n  (\\<lambda>(x, y). f x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n          stock_measure (PRODUCT t t'))\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure (PRODUCT t t')) (f \\<rho>)", "by auto"], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure (PRODUCT t t')) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n        (stock_measure t')\n        (\\<lambda>y.\n            \\<integral>\\<^sup>+ xa. f x <|xa, y|> \\<partial>stock_measure t)", "hence \"has_subprob_density (distr (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t') (op_sem Snd))\n               (stock_measure t') (?f \\<rho>)\" (is \"has_subprob_density ?R _ _\")"], ["proof (prove)\nusing this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure (PRODUCT t t')) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t') (op_sem Snd))\n     (stock_measure t')\n     (\\<lambda>y.\n         \\<integral>\\<^sup>+ x. f \\<rho> <|x, y|> \\<partial>stock_measure t)", "by (intro has_subprob_density_distr_Snd)  simp"], ["proof (state)\nthis:\n  has_subprob_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t') (op_sem Snd))\n   (stock_measure t')\n   (\\<lambda>y.\n       \\<integral>\\<^sup>+ x. f \\<rho> <|x, y|> \\<partial>stock_measure t)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n        (stock_measure t')\n        (\\<lambda>y.\n            \\<integral>\\<^sup>+ xa. f x <|xa, y|> \\<partial>stock_measure t)", "also"], ["proof (state)\nthis:\n  has_subprob_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t') (op_sem Snd))\n   (stock_measure t')\n   (\\<lambda>y.\n       \\<integral>\\<^sup>+ x. f \\<rho> <|x, y|> \\<partial>stock_measure t)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n        (stock_measure t')\n        (\\<lambda>y.\n            \\<integral>\\<^sup>+ xa. f x <|xa, y|> \\<partial>stock_measure t)", "from hd_snd.prems and \\<rho>"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> Snd $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)", "have \"?R = ?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e))\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Snd $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t') (op_sem Snd) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e))", "by (intro expr_sem_op_eq_distr[symmetric]) simp_all"], ["proof (state)\nthis:\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t') (op_sem Snd) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_subprob_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n        (stock_measure t')\n        (\\<lambda>y.\n            \\<integral>\\<^sup>+ xa. f x <|xa, y|> \\<partial>stock_measure t)", "finally"], ["proof (chain)\npicking this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n   (stock_measure t')\n   (\\<lambda>y.\n       \\<integral>\\<^sup>+ x. f \\<rho> <|x, y|> \\<partial>stock_measure t)", "show \"has_subprob_density ... (stock_measure t') (?f \\<rho>)\""], ["proof (prove)\nusing this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n   (stock_measure t')\n   (\\<lambda>y.\n       \\<integral>\\<^sup>+ x. f \\<rho> <|x, y|> \\<partial>stock_measure t)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n     (stock_measure t')\n     (\\<lambda>y.\n         \\<integral>\\<^sup>+ x. f \\<rho> <|x, y|> \\<partial>stock_measure t)", "."], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n   (stock_measure t')\n   (\\<lambda>y.\n       \\<integral>\\<^sup>+ x. f \\<rho> <|x, y|> \\<partial>stock_measure t)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n   (stock_measure t')\n   (\\<lambda>\\<rho> y.\n       \\<integral>\\<^sup>+ x. f \\<rho> <|x, y|> \\<partial>stock_measure t)\n\ngoal (8 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Snd $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Snd $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Snd $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x. f a <|x, b|>\n           \\<partial>stock_measure (the (expr_type \\<Gamma> (Fst $$ e))))\n 2. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 8. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "thus ?case"], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n   (stock_measure t')\n   (\\<lambda>\\<rho> y.\n       \\<integral>\\<^sup>+ x. f \\<rho> <|x, y|> \\<partial>stock_measure t)\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n     (stock_measure t')\n     (\\<lambda>a b.\n         \\<integral>\\<^sup>+ x. f a <|x, b|>\n                            \\<partial>stock_measure\n (the (expr_type \\<Gamma> (Fst $$ e))))", "by (subst t2)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Snd $$ e)))\n   (stock_measure t')\n   (\\<lambda>a b.\n       \\<integral>\\<^sup>+ x. f a <|x, b|>\n                          \\<partial>stock_measure\n                                     (the (expr_type \\<Gamma> (Fst $$ e))))\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "case (hd_op_discr \\<Gamma> oper e V V' \\<delta> f t')"], ["proof (state)\nthis:\n  countable_type (the (expr_type \\<Gamma> (oper $$ e)))\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> oper $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (oper $$ e) \\<subseteq> V \\<union> V'\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "interpret density_context V V' \\<Gamma> \\<delta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>", "by fact"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "from hd_op_discr.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> oper $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (oper $$ e) \\<subseteq> V \\<union> V'", "obtain t where t1: \"\\<Gamma> \\<turnstile> e : t\" and t2: \"op_type oper t = Some t'\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> oper $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (oper $$ e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         op_type oper t = Some t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> e : t\n  op_type oper t = Some t'\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "have dens[measurable]: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n                (\\<lambda>\\<rho>. dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) f", "by (intro hd_op_discr.IH) (insert hd_op_discr.prems hd_op_discr.hyps t1, auto)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "from hd_op_discr t1"], ["proof (chain)\npicking this:\n  countable_type (the (expr_type \\<Gamma> (oper $$ e)))\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> oper $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (oper $$ e) \\<subseteq> V \\<union> V'\n  \\<Gamma> \\<turnstile> e : t", "have \"expr_type \\<Gamma> e = Some t\" and \"expr_type \\<Gamma> (oper $$ e) = Some t'\""], ["proof (prove)\nusing this:\n  countable_type (the (expr_type \\<Gamma> (oper $$ e)))\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> oper $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (oper $$ e) \\<subseteq> V \\<union> V'\n  \\<Gamma> \\<turnstile> e : t\n\ngoal (1 subgoal):\n 1. expr_type \\<Gamma> e = Some t &&&\n    expr_type \\<Gamma> (oper $$ e) = Some t'", "by (simp_all add: expr_type_Some_iff[symmetric])"], ["proof (state)\nthis:\n  expr_type \\<Gamma> e = Some t\n  expr_type \\<Gamma> (oper $$ e) = Some t'\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "hence t1': \"the (expr_type \\<Gamma> e) = t\" and t2': \"the (expr_type \\<Gamma> (oper $$ e)) = t'\""], ["proof (prove)\nusing this:\n  expr_type \\<Gamma> e = Some t\n  expr_type \\<Gamma> (oper $$ e) = Some t'\n\ngoal (1 subgoal):\n 1. the (expr_type \\<Gamma> e) = t &&&\n    the (expr_type \\<Gamma> (oper $$ e)) = t'", "by auto"], ["proof (state)\nthis:\n  the (expr_type \\<Gamma> e) = t\n  the (expr_type \\<Gamma> (oper $$ e)) = t'\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "with hd_op_discr"], ["proof (chain)\npicking this:\n  countable_type (the (expr_type \\<Gamma> (oper $$ e)))\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> oper $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (oper $$ e) \\<subseteq> V \\<union> V'\n  the (expr_type \\<Gamma> e) = t\n  the (expr_type \\<Gamma> (oper $$ e)) = t'", "have countable: \"countable_type t'\""], ["proof (prove)\nusing this:\n  countable_type (the (expr_type \\<Gamma> (oper $$ e)))\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> oper $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (oper $$ e) \\<subseteq> V \\<union> V'\n  the (expr_type \\<Gamma> e) = t\n  the (expr_type \\<Gamma> (oper $$ e)) = t'\n\ngoal (1 subgoal):\n 1. countable_type t'", "by simp"], ["proof (state)\nthis:\n  countable_type t'\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "have A: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n              (\\<lambda>\\<rho>. distr (dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                         (stock_measure t') (op_sem oper))\n              (stock_measure t')\n              (\\<lambda>a b. \\<integral>\\<^sup>+x. (if op_sem oper x = b then 1 else 0) * f a x \\<partial>stock_measure t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         distr\n          (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n          (stock_measure t') (op_sem oper))\n     (stock_measure t')\n     (\\<lambda>a b.\n         \\<integral>\\<^sup>+ x. (if op_sem oper x = b then 1 else 0) * f a x\n                            \\<partial>stock_measure t)", "proof (intro has_parametrized_subprob_densityI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (distr\n          (dens_ctxt_measure \\<Y> x \\<bind>\n           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n          (stock_measure t') (op_sem oper))\n 3. (\\<lambda>(a, b).\n        \\<integral>\\<^sup>+ x. (if op_sem oper x = b then 1 else 0) * f a x\n                           \\<partial>stock_measure t)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')", "let ?f = \"\\<lambda>\\<rho> y. \\<integral>\\<^sup>+x. (if op_sem oper x = y then 1 else 0) * f \\<rho> x \\<partial>stock_measure t\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (distr\n          (dens_ctxt_measure \\<Y> x \\<bind>\n           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n          (stock_measure t') (op_sem oper))\n 3. (\\<lambda>(a, b).\n        \\<integral>\\<^sup>+ x. (if op_sem oper x = b then 1 else 0) * f a x\n                           \\<partial>stock_measure t)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')", "note sigma_finite_measure.borel_measurable_nn_integral[OF sigma_finite_stock_measure, measurable]"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). ?f x y)\n  \\<in> borel_measurable\n         (?N \\<Otimes>\\<^sub>M stock_measure ?t1) \\<Longrightarrow>\n  (\\<lambda>x. integral\\<^sup>N (stock_measure ?t1) (?f x))\n  \\<in> borel_measurable ?N\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (distr\n          (dens_ctxt_measure \\<Y> x \\<bind>\n           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n          (stock_measure t') (op_sem oper))\n 3. (\\<lambda>(a, b).\n        \\<integral>\\<^sup>+ x. (if op_sem oper x = b then 1 else 0) * f a x\n                           \\<partial>stock_measure t)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')", "show \"case_prod ?f \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<rho>, y).\n        \\<integral>\\<^sup>+ x. (if op_sem oper x = y then 1 else 0) *\n                               f \\<rho> x\n                           \\<partial>stock_measure t)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')", "using measurable_op_sem[OF t2]"], ["proof (prove)\nusing this:\n  op_sem oper \\<in> stock_measure t \\<rightarrow>\\<^sub>M stock_measure t'\n\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<rho>, y).\n        \\<integral>\\<^sup>+ x. (if op_sem oper x = y then 1 else 0) *\n                               f \\<rho> x\n                           \\<partial>stock_measure t)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')", "by measurable"], ["proof (state)\nthis:\n  (\\<lambda>(\\<rho>, y).\n      \\<integral>\\<^sup>+ x. (if op_sem oper x = y then 1 else 0) *\n                             f \\<rho> x\n                         \\<partial>stock_measure t)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (distr\n          (dens_ctxt_measure \\<Y> x \\<bind>\n           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n          (stock_measure t') (op_sem oper))", "fix \\<rho>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (distr\n          (dens_ctxt_measure \\<Y> x \\<bind>\n           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n          (stock_measure t') (op_sem oper))", "assume \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\""], ["proof (state)\nthis:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (distr\n          (dens_ctxt_measure \\<Y> x \\<bind>\n           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n          (stock_measure t') (op_sem oper))", "let ?M = \"dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho>\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (distr\n          (dens_ctxt_measure \\<Y> x \\<bind>\n           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n          (stock_measure t') (op_sem oper))", "let ?N = \"?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (distr\n          (dens_ctxt_measure \\<Y> x \\<bind>\n           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n          (stock_measure t') (op_sem oper))", "from dens and \\<rho>"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)", "have dens': \"has_subprob_density ?N (stock_measure t) (f \\<rho>)\""], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (f \\<rho>)", "unfolding has_parametrized_subprob_density_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>space (state_measure V' \\<Gamma>).\n      has_subprob_density\n       (dens_ctxt_measure \\<Y> x \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t) (f x)) \\<and>\n  (\\<lambda>(x, y). f x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (f \\<rho>)", "by auto"], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (distr\n          (dens_ctxt_measure \\<Y> x \\<bind>\n           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n          (stock_measure t') (op_sem oper))", "from hd_op_discr.prems t1"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> oper $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (oper $$ e) \\<subseteq> V \\<union> V'\n  \\<Gamma> \\<turnstile> e : t", "have M_e: \"(\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<in>  measurable ?M (subprob_algebra (stock_measure t))\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> oper $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (oper $$ e) \\<subseteq> V \\<union> V'\n  \\<Gamma> \\<turnstile> e : t\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n    \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n          subprob_algebra (stock_measure t)", "by (auto simp: measurable_dens_ctxt_measure_eq intro!: measurable_expr_sem)"], ["proof (state)\nthis:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure t)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (distr\n          (dens_ctxt_measure \\<Y> x \\<bind>\n           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n          (stock_measure t') (op_sem oper))", "from M_e"], ["proof (chain)\npicking this:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure t)", "have meas_N: \"measurable ?N = measurable (stock_measure t)\""], ["proof (prove)\nusing this:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure t)\n\ngoal (1 subgoal):\n 1. (\\<rightarrow>\\<^sub>M)\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) =\n    (\\<rightarrow>\\<^sub>M) (stock_measure t)", "by (intro ext measurable_cong_sets) (simp_all add: sets_bind_measurable)"], ["proof (state)\nthis:\n  (\\<rightarrow>\\<^sub>M)\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) =\n  (\\<rightarrow>\\<^sub>M) (stock_measure t)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (distr\n          (dens_ctxt_measure \\<Y> x \\<bind>\n           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n          (stock_measure t') (op_sem oper))", "from dens' and t2"], ["proof (chain)\npicking this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)\n  op_type oper t = Some t'", "show \"subprob_space (distr ?N (stock_measure t') (op_sem oper))\""], ["proof (prove)\nusing this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)\n  op_type oper t = Some t'\n\ngoal (1 subgoal):\n 1. subprob_space\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t') (op_sem oper))", "by (intro subprob_space.subprob_space_distr)\n         (auto dest: has_subprob_densityD intro!: measurable_op_sem simp: meas_N)"], ["proof (state)\nthis:\n  subprob_space\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t') (op_sem oper))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)", "from countable"], ["proof (chain)\npicking this:\n  countable_type t'", "have count_space: \"stock_measure t' = count_space (type_universe t')\""], ["proof (prove)\nusing this:\n  countable_type t'\n\ngoal (1 subgoal):\n 1. stock_measure t' = count_space (type_universe t')", "by (rule countable_type_imp_count_space)"], ["proof (state)\nthis:\n  stock_measure t' = count_space (type_universe t')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)", "from dens'"], ["proof (chain)\npicking this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)", "have \"?N = density (stock_measure t) (f \\<rho>)\""], ["proof (prove)\nusing this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) =\n    density (stock_measure t) (f \\<rho>)", "by (rule has_subprob_densityD)"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) =\n  density (stock_measure t) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)", "also"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) =\n  density (stock_measure t) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)", "{"], ["proof (state)\nthis:\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) =\n  density (stock_measure t) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)", "assume \"x \\<in> type_universe t\""], ["proof (state)\nthis:\n  x \\<in> type_universe t\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)", "with M_e"], ["proof (chain)\npicking this:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure t)\n  x \\<in> type_universe t", "have \"val_type x = t\""], ["proof (prove)\nusing this:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> dens_ctxt_measure \\<Y> \\<rho> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure t)\n  x \\<in> type_universe t\n\ngoal (1 subgoal):\n 1. val_type x = t", "by (auto simp:)"], ["proof (state)\nthis:\n  val_type x = t\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)", "hence \"val_type (op_sem oper x) = t'\""], ["proof (prove)\nusing this:\n  val_type x = t\n\ngoal (1 subgoal):\n 1. val_type (op_sem oper x) = t'", "by (intro op_sem_val_type) (simp add: t2)"], ["proof (state)\nthis:\n  val_type (op_sem oper x) = t'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)", "}"], ["proof (state)\nthis:\n  ?x3 \\<in> type_universe t \\<Longrightarrow>\n  val_type (op_sem oper ?x3) = t'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)", "note op_sem_type_universe = this"], ["proof (state)\nthis:\n  ?x3 \\<in> type_universe t \\<Longrightarrow>\n  val_type (op_sem oper ?x3) = t'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)", "from countable countable_type_countable measurable_op_sem[OF t2] dens'"], ["proof (chain)\npicking this:\n  countable_type t'\n  countable_type ?t \\<Longrightarrow> countable (space (stock_measure ?t))\n  op_sem oper \\<in> stock_measure t \\<rightarrow>\\<^sub>M stock_measure t'\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)", "have \"distr ... (stock_measure t') (op_sem oper) = density (stock_measure t') (?f \\<rho>)\""], ["proof (prove)\nusing this:\n  countable_type t'\n  countable_type ?t \\<Longrightarrow> countable (space (stock_measure ?t))\n  op_sem oper \\<in> stock_measure t \\<rightarrow>\\<^sub>M stock_measure t'\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. distr (density (stock_measure t) (f \\<rho>)) (stock_measure t')\n     (op_sem oper) =\n    density (stock_measure t')\n     (\\<lambda>y.\n         \\<integral>\\<^sup>+ x. (if op_sem oper x = y then 1 else 0) *\n                                f \\<rho> x\n                            \\<partial>stock_measure t)", "by (subst count_space, subst distr_density_discrete)\n         (auto simp: meas_N count_space intro!: op_sem_type_universe dest: has_subprob_densityD)"], ["proof (state)\nthis:\n  distr (density (stock_measure t) (f \\<rho>)) (stock_measure t')\n   (op_sem oper) =\n  density (stock_measure t')\n   (\\<lambda>y.\n       \\<integral>\\<^sup>+ x. (if op_sem oper x = y then 1 else 0) *\n                              f \\<rho> x\n                          \\<partial>stock_measure t)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       density (stock_measure t')\n        (\\<lambda>b.\n            \\<integral>\\<^sup>+ xa. (if op_sem oper xa = b then 1 else 0) *\n                                    f x xa\n                               \\<partial>stock_measure t)", "finally"], ["proof (chain)\npicking this:\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t') (op_sem oper) =\n  density (stock_measure t')\n   (\\<lambda>y.\n       \\<integral>\\<^sup>+ x. (if op_sem oper x = y then 1 else 0) *\n                              f \\<rho> x\n                          \\<partial>stock_measure t)", "show \"distr ?N (stock_measure t') (op_sem oper) =  density (stock_measure t') (?f \\<rho>)\""], ["proof (prove)\nusing this:\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t') (op_sem oper) =\n  density (stock_measure t')\n   (\\<lambda>y.\n       \\<integral>\\<^sup>+ x. (if op_sem oper x = y then 1 else 0) *\n                              f \\<rho> x\n                          \\<partial>stock_measure t)\n\ngoal (1 subgoal):\n 1. distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t') (op_sem oper) =\n    density (stock_measure t')\n     (\\<lambda>y.\n         \\<integral>\\<^sup>+ x. (if op_sem oper x = y then 1 else 0) *\n                                f \\<rho> x\n                            \\<partial>stock_measure t)", "."], ["proof (state)\nthis:\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t') (op_sem oper) =\n  density (stock_measure t')\n   (\\<lambda>y.\n       \\<integral>\\<^sup>+ x. (if op_sem oper x = y then 1 else 0) *\n                              f \\<rho> x\n                          \\<partial>stock_measure t)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       distr\n        (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper))\n   (stock_measure t')\n   (\\<lambda>a b.\n       \\<integral>\\<^sup>+ x. (if op_sem oper x = b then 1 else 0) * f a x\n                          \\<partial>stock_measure t)\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "from hd_op_discr.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> oper $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (oper $$ e) \\<subseteq> V \\<union> V'", "have B: \"\\<And>\\<rho>. \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n              distr (dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure t') (op_sem oper) =\n                 dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e))\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> oper $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (oper $$ e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho>.\n       \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       distr\n        (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n        (stock_measure t') (op_sem oper) =\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e))", "by (intro expr_sem_op_eq_distr[symmetric]) simp_all"], ["proof (state)\nthis:\n  ?\\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  distr\n   (dens_ctxt_measure \\<Y> ?\\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t') (op_sem oper) =\n  dens_ctxt_measure \\<Y> ?\\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e))\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> oper e V V' \\<delta> f t.\n       \\<lbrakk>countable_type (the (expr_type \\<Gamma> (oper $$ e)));\n        (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> oper $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (oper $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (oper $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             (if op_sem oper x = b then 1 else 0) * f a x\n           \\<partial>stock_measure (the (expr_type \\<Gamma> e)))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 7. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n     (stock_measure t')\n     (\\<lambda>a b.\n         \\<integral>\\<^sup>+ x. (if op_sem oper x = b then 1 else 0) * f a x\n                            \\<partial>stock_measure\n (the (expr_type \\<Gamma> e)))", "by (simp only: has_parametrized_subprob_density_cong[OF B[symmetric]] t1' A)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (oper $$ e)))\n   (stock_measure t')\n   (\\<lambda>a b.\n       \\<integral>\\<^sup>+ x. (if op_sem oper x = b then 1 else 0) * f a x\n                          \\<partial>stock_measure\n                                     (the (expr_type \\<Gamma> e)))\n\ngoal (6 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "case (hd_neg V V' \\<Gamma> \\<delta> e f t')"], ["proof (state)\nthis:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> Minus $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\n\ngoal (6 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "from hd_neg.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> Minus $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Minus $$ e) \\<subseteq> V \\<union> V'", "obtain t where t1: \"\\<Gamma> \\<turnstile> e : t\" and t2: \"op_type Minus t = Some t'\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Minus $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         op_type Minus t = Some t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> e : t\n  op_type Minus t = Some t'\n\ngoal (6 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "have dens: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n              (\\<lambda>\\<rho>. dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) f", "by (intro hd_neg.IH) (insert hd_neg.prems hd_neg.hyps t1, auto)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n\ngoal (6 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Minus $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b. f a (op_sem Minus b))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 6. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "with hd_neg and t1 and t2"], ["proof (chain)\npicking this:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> Minus $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\n  \\<Gamma> \\<turnstile> e : t\n  op_type Minus t = Some t'\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f", "show ?case"], ["proof (prove)\nusing this:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> Minus $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Minus $$ e) \\<subseteq> V \\<union> V'\n  \\<Gamma> \\<turnstile> e : t\n  op_type Minus t = Some t'\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Minus $$ e)))\n     (stock_measure t') (\\<lambda>a b. f a (op_sem Minus b))", "proof (intro expr_has_density_sound_op[where t = t])"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure t) ?f9\n 3. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a). f b (op_sem Minus a))\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t')\n 4. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure t) f;\n        has_subprob_density M (stock_measure t) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Minus))\n                          (stock_measure t')\n                          (\\<lambda>a. f \\<rho> (op_sem Minus a))\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : t\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> op_type Minus t = Some t'\n 7. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Minus $$ e) \\<subseteq> V \\<union> V'", "from t2"], ["proof (chain)\npicking this:\n  op_type Minus t = Some t'", "have [measurable]: \"lift_RealIntVal uminus uminus \\<in> measurable (stock_measure t') (stock_measure t)\""], ["proof (prove)\nusing this:\n  op_type Minus t = Some t'\n\ngoal (1 subgoal):\n 1. lift_RealIntVal uminus uminus\n    \\<in> stock_measure t' \\<rightarrow>\\<^sub>M stock_measure t", "by (simp split: pdf_type.split_asm)"], ["proof (state)\nthis:\n  lift_RealIntVal uminus uminus\n  \\<in> stock_measure t' \\<rightarrow>\\<^sub>M stock_measure t\n\ngoal (7 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure t) ?f9\n 3. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a). f b (op_sem Minus a))\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t')\n 4. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure t) f;\n        has_subprob_density M (stock_measure t) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Minus))\n                          (stock_measure t')\n                          (\\<lambda>a. f \\<rho> (op_sem Minus a))\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : t\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> op_type Minus t = Some t'\n 7. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Minus $$ e) \\<subseteq> V \\<union> V'", "from dens"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f", "have Mf[measurable]: \"case_prod f \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). f x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "by (blast dest: has_parametrized_subprob_densityD)"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). f x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (7 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure t) ?f9\n 3. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a). f b (op_sem Minus a))\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t')\n 4. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure t) f;\n        has_subprob_density M (stock_measure t) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Minus))\n                          (stock_measure t')\n                          (\\<lambda>a. f \\<rho> (op_sem Minus a))\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : t\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> op_type Minus t = Some t'\n 7. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Minus $$ e) \\<subseteq> V \\<union> V'", "show \"(\\<lambda>(\\<rho>, x). f \\<rho> (op_sem Minus x))\n              \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<rho>, x). f \\<rho> (op_sem Minus x))\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>(\\<rho>, x). f \\<rho> (op_sem Minus x))\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')\n\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure t) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure t) f;\n        has_subprob_density M (stock_measure t) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Minus))\n                          (stock_measure t')\n                          (\\<lambda>a. f \\<rho> (op_sem Minus a))\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : t\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> op_type Minus t = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Minus $$ e) \\<subseteq> V \\<union> V'", "fix M \\<rho>"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure t) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure t) f;\n        has_subprob_density M (stock_measure t) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Minus))\n                          (stock_measure t')\n                          (\\<lambda>a. f \\<rho> (op_sem Minus a))\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : t\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> op_type Minus t = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Minus $$ e) \\<subseteq> V \\<union> V'", "assume dens': \"has_subprob_density M (stock_measure t) (f \\<rho>)\""], ["proof (state)\nthis:\n  has_subprob_density M (stock_measure t) (f \\<rho>)\n\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure t) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure t) f;\n        has_subprob_density M (stock_measure t) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Minus))\n                          (stock_measure t')\n                          (\\<lambda>a. f \\<rho> (op_sem Minus a))\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : t\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> op_type Minus t = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Minus $$ e) \\<subseteq> V \\<union> V'", "hence space_M: \"space M = space (stock_measure t)\""], ["proof (prove)\nusing this:\n  has_subprob_density M (stock_measure t) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. space M = space (stock_measure t)", "by (auto dest: has_subprob_densityD)"], ["proof (state)\nthis:\n  space M = space (stock_measure t)\n\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure t) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure t) f;\n        has_subprob_density M (stock_measure t) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Minus))\n                          (stock_measure t')\n                          (\\<lambda>a. f \\<rho> (op_sem Minus a))\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : t\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> op_type Minus t = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Minus $$ e) \\<subseteq> V \\<union> V'", "from t2"], ["proof (chain)\npicking this:\n  op_type Minus t = Some t'", "have t_disj: \"(t = REAL \\<and> t' = REAL) \\<or> (t = INTEG \\<and> t' = INTEG)\""], ["proof (prove)\nusing this:\n  op_type Minus t = Some t'\n\ngoal (1 subgoal):\n 1. t = REAL \\<and> t' = REAL \\<or> t = INTEG \\<and> t' = INTEG", "by (auto split: pdf_type.split_asm)"], ["proof (state)\nthis:\n  t = REAL \\<and> t' = REAL \\<or> t = INTEG \\<and> t' = INTEG\n\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure t) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Minus $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure t) f;\n        has_subprob_density M (stock_measure t) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Minus))\n                          (stock_measure t')\n                          (\\<lambda>a. f \\<rho> (op_sem Minus a))\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : t\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> op_type Minus t = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Minus $$ e) \\<subseteq> V \\<union> V'", "thus \"has_density (distr M (stock_measure t') (op_sem Minus))\n                      (stock_measure t') (\\<lambda>x. f \\<rho> (op_sem Minus x))\" (is \"?thesis\")"], ["proof (prove)\nusing this:\n  t = REAL \\<and> t' = REAL \\<or> t = INTEG \\<and> t' = INTEG\n\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t') (op_sem Minus))\n     (stock_measure t') (\\<lambda>x. f \\<rho> (op_sem Minus x))", "proof (elim disjE conjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>t = REAL; t' = REAL\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))\n 2. \\<lbrakk>t = INTEG; t' = INTEG\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))", "assume A: \"t = REAL\" \"t' = REAL\""], ["proof (state)\nthis:\n  t = REAL\n  t' = REAL\n\ngoal (2 subgoals):\n 1. \\<lbrakk>t = REAL; t' = REAL\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))\n 2. \\<lbrakk>t = INTEG; t' = INTEG\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))", "have \"has_density (distr M (stock_measure t') (lift_RealVal uminus)) (stock_measure t')\n                        ((\\<lambda>x. f \\<rho> (RealVal (-x))) \\<circ> extract_real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t') (lift_RealVal uminus))\n     (stock_measure t')\n     ((\\<lambda>x. f \\<rho> (RealVal (- x))) \\<circ> extract_real)", "using dens'"], ["proof (prove)\nusing this:\n  has_subprob_density M (stock_measure t) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t') (lift_RealVal uminus))\n     (stock_measure t')\n     ((\\<lambda>x. f \\<rho> (RealVal (- x))) \\<circ> extract_real)", "by (simp only: A, intro distr_lift_RealVal)\n           (auto intro!: distr_uminus_real dest: has_subprob_density_imp_has_density)"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t') (lift_RealVal uminus))\n   (stock_measure t')\n   ((\\<lambda>x. f \\<rho> (RealVal (- x))) \\<circ> extract_real)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>t = REAL; t' = REAL\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))\n 2. \\<lbrakk>t = INTEG; t' = INTEG\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))", "also"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t') (lift_RealVal uminus))\n   (stock_measure t')\n   ((\\<lambda>x. f \\<rho> (RealVal (- x))) \\<circ> extract_real)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>t = REAL; t' = REAL\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))\n 2. \\<lbrakk>t = INTEG; t' = INTEG\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))", "have \"distr M (stock_measure t') (lift_RealVal uminus) =\n                     distr M (stock_measure t') (lift_RealIntVal uminus uminus)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distr M (stock_measure t') (lift_RealVal uminus) =\n    distr M (stock_measure t') (lift_RealIntVal uminus uminus)", "using dens'"], ["proof (prove)\nusing this:\n  has_subprob_density M (stock_measure t) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. distr M (stock_measure t') (lift_RealVal uminus) =\n    distr M (stock_measure t') (lift_RealIntVal uminus uminus)", "by (intro distr_cong) (auto intro!: lift_RealIntVal_Real[symmetric] simp: space_M A)"], ["proof (state)\nthis:\n  distr M (stock_measure t') (lift_RealVal uminus) =\n  distr M (stock_measure t') (lift_RealIntVal uminus uminus)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>t = REAL; t' = REAL\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))\n 2. \\<lbrakk>t = INTEG; t' = INTEG\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))", "also"], ["proof (state)\nthis:\n  distr M (stock_measure t') (lift_RealVal uminus) =\n  distr M (stock_measure t') (lift_RealIntVal uminus uminus)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>t = REAL; t' = REAL\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))\n 2. \\<lbrakk>t = INTEG; t' = INTEG\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))", "have \"has_density ... (stock_measure t') ((\\<lambda>x. f \\<rho> (RealVal (-x))) \\<circ> extract_real) \\<longleftrightarrow>\n                   has_density ... (stock_measure t') (\\<lambda>x. f \\<rho> (lift_RealIntVal uminus uminus x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t') (lift_RealIntVal uminus uminus))\n     (stock_measure t')\n     ((\\<lambda>x. f \\<rho> (RealVal (- x))) \\<circ> extract_real) =\n    has_density (distr M (stock_measure t') (lift_RealIntVal uminus uminus))\n     (stock_measure t')\n     (\\<lambda>x. f \\<rho> (lift_RealIntVal uminus uminus x))", "by (intro has_density_cong)\n           (auto simp: lift_RealIntVal_def extract_real_def A space_embed_measure split: val.split)"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t') (lift_RealIntVal uminus uminus))\n   (stock_measure t')\n   ((\\<lambda>x. f \\<rho> (RealVal (- x))) \\<circ> extract_real) =\n  has_density (distr M (stock_measure t') (lift_RealIntVal uminus uminus))\n   (stock_measure t')\n   (\\<lambda>x. f \\<rho> (lift_RealIntVal uminus uminus x))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>t = REAL; t' = REAL\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))\n 2. \\<lbrakk>t = INTEG; t' = INTEG\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))", "finally"], ["proof (chain)\npicking this:\n  has_density (distr M (stock_measure t') (lift_RealIntVal uminus uminus))\n   (stock_measure t')\n   (\\<lambda>x. f \\<rho> (lift_RealIntVal uminus uminus x))", "show ?thesis"], ["proof (prove)\nusing this:\n  has_density (distr M (stock_measure t') (lift_RealIntVal uminus uminus))\n   (stock_measure t')\n   (\\<lambda>x. f \\<rho> (lift_RealIntVal uminus uminus x))\n\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t') (op_sem Minus))\n     (stock_measure t') (\\<lambda>x. f \\<rho> (op_sem Minus x))", "by simp"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t') (op_sem Minus)) (stock_measure t')\n   (\\<lambda>x. f \\<rho> (op_sem Minus x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t = INTEG; t' = INTEG\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>t = INTEG; t' = INTEG\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))", "assume A: \"t = INTEG\" \"t' = INTEG\""], ["proof (state)\nthis:\n  t = INTEG\n  t' = INTEG\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t = INTEG; t' = INTEG\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))", "have \"has_density (distr M (stock_measure t') (lift_IntVal uminus)) (stock_measure t')\n                        ((\\<lambda>x. f \\<rho> (IntVal (-x))) \\<circ> extract_int)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t') (lift_IntVal uminus))\n     (stock_measure t')\n     ((\\<lambda>x. f \\<rho> (IntVal (- x))) \\<circ> extract_int)", "using dens'"], ["proof (prove)\nusing this:\n  has_subprob_density M (stock_measure t) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t') (lift_IntVal uminus))\n     (stock_measure t')\n     ((\\<lambda>x. f \\<rho> (IntVal (- x))) \\<circ> extract_int)", "by (simp only: A, intro distr_lift_IntVal)\n           (auto intro!: distr_uminus_ring_count_space simp: has_subprob_density_def)"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t') (lift_IntVal uminus))\n   (stock_measure t')\n   ((\\<lambda>x. f \\<rho> (IntVal (- x))) \\<circ> extract_int)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t = INTEG; t' = INTEG\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))", "also"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t') (lift_IntVal uminus))\n   (stock_measure t')\n   ((\\<lambda>x. f \\<rho> (IntVal (- x))) \\<circ> extract_int)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t = INTEG; t' = INTEG\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))", "have \"distr M (stock_measure t') (lift_IntVal uminus) =\n                     distr M (stock_measure t') (lift_RealIntVal uminus uminus)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distr M (stock_measure t') (lift_IntVal uminus) =\n    distr M (stock_measure t') (lift_RealIntVal uminus uminus)", "using dens'"], ["proof (prove)\nusing this:\n  has_subprob_density M (stock_measure t) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. distr M (stock_measure t') (lift_IntVal uminus) =\n    distr M (stock_measure t') (lift_RealIntVal uminus uminus)", "by (intro distr_cong) (auto intro!: lift_RealIntVal_Int[symmetric] simp: space_M A)"], ["proof (state)\nthis:\n  distr M (stock_measure t') (lift_IntVal uminus) =\n  distr M (stock_measure t') (lift_RealIntVal uminus uminus)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t = INTEG; t' = INTEG\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))", "also"], ["proof (state)\nthis:\n  distr M (stock_measure t') (lift_IntVal uminus) =\n  distr M (stock_measure t') (lift_RealIntVal uminus uminus)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t = INTEG; t' = INTEG\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))", "have \"has_density ... (stock_measure t') ((\\<lambda>x. f \\<rho> (IntVal (-x))) \\<circ> extract_int) \\<longleftrightarrow>\n                   has_density ... (stock_measure t') (\\<lambda>x. f \\<rho> (lift_RealIntVal uminus uminus x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t') (lift_RealIntVal uminus uminus))\n     (stock_measure t')\n     ((\\<lambda>x. f \\<rho> (IntVal (- x))) \\<circ> extract_int) =\n    has_density (distr M (stock_measure t') (lift_RealIntVal uminus uminus))\n     (stock_measure t')\n     (\\<lambda>x. f \\<rho> (lift_RealIntVal uminus uminus x))", "by (intro has_density_cong)\n           (auto simp: lift_RealIntVal_def extract_int_def A space_embed_measure split: val.split)"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t') (lift_RealIntVal uminus uminus))\n   (stock_measure t')\n   ((\\<lambda>x. f \\<rho> (IntVal (- x))) \\<circ> extract_int) =\n  has_density (distr M (stock_measure t') (lift_RealIntVal uminus uminus))\n   (stock_measure t')\n   (\\<lambda>x. f \\<rho> (lift_RealIntVal uminus uminus x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t = INTEG; t' = INTEG\\<rbrakk>\n    \\<Longrightarrow> has_density\n                       (distr M (stock_measure t') (op_sem Minus))\n                       (stock_measure t')\n                       (\\<lambda>x. f \\<rho> (op_sem Minus x))", "finally"], ["proof (chain)\npicking this:\n  has_density (distr M (stock_measure t') (lift_RealIntVal uminus uminus))\n   (stock_measure t')\n   (\\<lambda>x. f \\<rho> (lift_RealIntVal uminus uminus x))", "show ?thesis"], ["proof (prove)\nusing this:\n  has_density (distr M (stock_measure t') (lift_RealIntVal uminus uminus))\n   (stock_measure t')\n   (\\<lambda>x. f \\<rho> (lift_RealIntVal uminus uminus x))\n\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t') (op_sem Minus))\n     (stock_measure t') (\\<lambda>x. f \\<rho> (op_sem Minus x))", "by simp"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t') (op_sem Minus)) (stock_measure t')\n   (\\<lambda>x. f \\<rho> (op_sem Minus x))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t') (op_sem Minus)) (stock_measure t')\n   (\\<lambda>x. f \\<rho> (op_sem Minus x))\n\ngoal (5 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure t) f\n 3. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : t\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> op_type Minus t = Some t'\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Minus $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Minus $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : t; op_type Minus t = Some t';\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure t) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Minus $$ e) \\<subseteq> V \\<union> V'", "qed auto"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Minus $$ e)))\n   (stock_measure t') (\\<lambda>a b. f a (op_sem Minus b))\n\ngoal (5 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "case (hd_exp V V' \\<Gamma> \\<delta> e f t')"], ["proof (state)\nthis:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> Exp $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\n\ngoal (5 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "from hd_exp.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> Exp $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Exp $$ e) \\<subseteq> V \\<union> V'", "have t1: \"\\<Gamma> \\<turnstile> e : REAL\" and t2: \"t' = REAL\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Exp $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> e : REAL &&& t' = REAL", "by (auto split: pdf_type.split_asm)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> e : REAL\n  t' = REAL\n\ngoal (5 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "have dens[measurable]: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n              (\\<lambda>\\<rho>. dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure REAL) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure REAL) f", "by (intro hd_exp.IH) (insert hd_exp.prems hd_exp.hyps t1, auto)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure REAL) f\n\ngoal (5 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Exp $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              if 0 < extract_real b\n                              then f a (lift_RealVal safe_ln b) *\n                                   ennreal (inverse (extract_real b))\n                              else 0)\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 5. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "with hd_exp and t1 and t2"], ["proof (chain)\npicking this:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> Exp $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\n  \\<Gamma> \\<turnstile> e : REAL\n  t' = REAL\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure REAL) f", "show ?case"], ["proof (prove)\nusing this:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> Exp $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Exp $$ e) \\<subseteq> V \\<union> V'\n  \\<Gamma> \\<turnstile> e : REAL\n  t' = REAL\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure REAL) f\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Exp $$ e)))\n     (stock_measure t')\n     (\\<lambda>a b.\n         if 0 < extract_real b\n         then f a (lift_RealVal safe_ln b) *\n              ennreal (inverse (extract_real b))\n         else 0)", "proof (intro expr_has_density_sound_op[where t = REAL])"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a).\n                          if 0 < extract_real a\n                          then f b (lift_RealVal safe_ln a) *\n                               ennreal (inverse (extract_real a))\n                          else 0)\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t')\n 4. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Exp))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              if 0 < extract_real a\n                              then f \\<rho> (lift_RealVal safe_ln a) *\n                                   ennreal (inverse (extract_real a))\n                              else 0)\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Exp REAL = Some t'\n 7. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Exp $$ e) \\<subseteq> V \\<union> V'", "from t2"], ["proof (chain)\npicking this:\n  t' = REAL", "have [measurable]: \"lift_RealVal safe_ln \\<in> measurable (stock_measure REAL) (stock_measure REAL)\""], ["proof (prove)\nusing this:\n  t' = REAL\n\ngoal (1 subgoal):\n 1. lift_RealVal safe_ln\n    \\<in> stock_measure REAL \\<rightarrow>\\<^sub>M stock_measure REAL", "by (simp split: pdf_type.split_asm)"], ["proof (state)\nthis:\n  lift_RealVal safe_ln\n  \\<in> stock_measure REAL \\<rightarrow>\\<^sub>M stock_measure REAL\n\ngoal (7 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a).\n                          if 0 < extract_real a\n                          then f b (lift_RealVal safe_ln a) *\n                               ennreal (inverse (extract_real a))\n                          else 0)\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t')\n 4. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Exp))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              if 0 < extract_real a\n                              then f \\<rho> (lift_RealVal safe_ln a) *\n                                   ennreal (inverse (extract_real a))\n                              else 0)\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Exp REAL = Some t'\n 7. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Exp $$ e) \\<subseteq> V \\<union> V'", "from dens"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure REAL) f", "have Mf[measurable]: \"case_prod f \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure REAL)\""], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure REAL) f\n\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). f x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure REAL)", "by (blast dest: has_parametrized_subprob_densityD)"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). f x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure REAL)\n\ngoal (7 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a).\n                          if 0 < extract_real a\n                          then f b (lift_RealVal safe_ln a) *\n                               ennreal (inverse (extract_real a))\n                          else 0)\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t')\n 4. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Exp))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              if 0 < extract_real a\n                              then f \\<rho> (lift_RealVal safe_ln a) *\n                                   ennreal (inverse (extract_real a))\n                              else 0)\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Exp REAL = Some t'\n 7. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Exp $$ e) \\<subseteq> V \\<union> V'", "let ?f = \"\\<lambda>\\<rho> x. if extract_real x > 0 then\n                         f \\<rho> (lift_RealVal safe_ln x) * inverse (extract_real x) else 0\""], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a).\n                          if 0 < extract_real a\n                          then f b (lift_RealVal safe_ln a) *\n                               ennreal (inverse (extract_real a))\n                          else 0)\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t')\n 4. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Exp))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              if 0 < extract_real a\n                              then f \\<rho> (lift_RealVal safe_ln a) *\n                                   ennreal (inverse (extract_real a))\n                              else 0)\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Exp REAL = Some t'\n 7. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Exp $$ e) \\<subseteq> V \\<union> V'", "show \"case_prod ?f \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<rho>, x).\n        if 0 < extract_real x\n        then f \\<rho> (lift_RealVal safe_ln x) *\n             ennreal (inverse (extract_real x))\n        else 0)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')", "unfolding t2"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<rho>, x).\n        if 0 < extract_real x\n        then f \\<rho> (lift_RealVal safe_ln x) *\n             ennreal (inverse (extract_real x))\n        else 0)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure REAL)", "by measurable"], ["proof (state)\nthis:\n  (\\<lambda>(\\<rho>, x).\n      if 0 < extract_real x\n      then f \\<rho> (lift_RealVal safe_ln x) *\n           ennreal (inverse (extract_real x))\n      else 0)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')\n\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Exp))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              if 0 < extract_real a\n                              then f \\<rho> (lift_RealVal safe_ln a) *\n                                   ennreal (inverse (extract_real a))\n                              else 0)\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Exp REAL = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Exp $$ e) \\<subseteq> V \\<union> V'", "fix M \\<rho>"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Exp))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              if 0 < extract_real a\n                              then f \\<rho> (lift_RealVal safe_ln a) *\n                                   ennreal (inverse (extract_real a))\n                              else 0)\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Exp REAL = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Exp $$ e) \\<subseteq> V \\<union> V'", "assume dens': \"has_subprob_density M (stock_measure REAL) (f \\<rho>)\""], ["proof (state)\nthis:\n  has_subprob_density M (stock_measure REAL) (f \\<rho>)\n\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Exp))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              if 0 < extract_real a\n                              then f \\<rho> (lift_RealVal safe_ln a) *\n                                   ennreal (inverse (extract_real a))\n                              else 0)\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Exp REAL = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Exp $$ e) \\<subseteq> V \\<union> V'", "hence space_M: \"space M = space (stock_measure REAL)\""], ["proof (prove)\nusing this:\n  has_subprob_density M (stock_measure REAL) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. space M = space (stock_measure REAL)", "by (auto dest: has_subprob_densityD)"], ["proof (state)\nthis:\n  space M = space (stock_measure REAL)\n\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Exp))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              if 0 < extract_real a\n                              then f \\<rho> (lift_RealVal safe_ln a) *\n                                   ennreal (inverse (extract_real a))\n                              else 0)\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Exp REAL = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Exp $$ e) \\<subseteq> V \\<union> V'", "have \"has_density (distr M (stock_measure t') (lift_RealVal exp)) (stock_measure t')\n            ((\\<lambda>x. if 0 < x then f \\<rho> (RealVal (ln x)) * ennreal (inverse x) else 0)\n               \\<circ> extract_real)\" (is \"has_density _ _ ?f'\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t') (lift_RealVal exp))\n     (stock_measure t')\n     ((\\<lambda>x.\n          if 0 < x then f \\<rho> (RealVal (ln x)) * ennreal (inverse x)\n          else 0) \\<circ>\n      extract_real)", "using dens'"], ["proof (prove)\nusing this:\n  has_subprob_density M (stock_measure REAL) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t') (lift_RealVal exp))\n     (stock_measure t')\n     ((\\<lambda>x.\n          if 0 < x then f \\<rho> (RealVal (ln x)) * ennreal (inverse x)\n          else 0) \\<circ>\n      extract_real)", "apply (simp only: t2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_subprob_density M (stock_measure REAL) (f \\<rho>) \\<Longrightarrow>\n    has_density (distr M (stock_measure REAL) (lift_RealVal exp))\n     (stock_measure REAL)\n     ((\\<lambda>x.\n          if 0 < x then f \\<rho> (RealVal (ln x)) * ennreal (inverse x)\n          else 0) \\<circ>\n      extract_real)", "apply (rule distr_lift_RealVal[where g = \"\\<lambda>f x. if x > 0 then f (ln x) * ennreal (inverse x) else 0\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. has_subprob_density M (stock_measure REAL) (f \\<rho>) \\<Longrightarrow>\n    exp \\<in> borel_measurable borel\n 2. has_subprob_density M (stock_measure REAL) (f \\<rho>) \\<Longrightarrow>\n    has_subprob_density M (stock_measure REAL) (f \\<rho>)\n 3. \\<And>Ma \\<delta>.\n       \\<lbrakk>has_subprob_density M (stock_measure REAL) (f \\<rho>);\n        has_subprob_density Ma lborel \\<delta>\\<rbrakk>\n       \\<Longrightarrow> has_density (distr Ma borel exp) lborel\n                          (\\<lambda>x.\n                              if 0 < x\n                              then \\<delta> (ln x) * ennreal (inverse x)\n                              else 0)", "apply (auto intro!: subprob_density_distr_real_exp intro: has_subprob_density_imp_has_density)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t') (lift_RealVal exp))\n   (stock_measure t')\n   ((\\<lambda>x.\n        if 0 < x then f \\<rho> (RealVal (ln x)) * ennreal (inverse x)\n        else 0) \\<circ>\n    extract_real)\n\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Exp))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              if 0 < extract_real a\n                              then f \\<rho> (lift_RealVal safe_ln a) *\n                                   ennreal (inverse (extract_real a))\n                              else 0)\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Exp REAL = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Exp $$ e) \\<subseteq> V \\<union> V'", "also"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t') (lift_RealVal exp))\n   (stock_measure t')\n   ((\\<lambda>x.\n        if 0 < x then f \\<rho> (RealVal (ln x)) * ennreal (inverse x)\n        else 0) \\<circ>\n    extract_real)\n\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Exp))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              if 0 < extract_real a\n                              then f \\<rho> (lift_RealVal safe_ln a) *\n                                   ennreal (inverse (extract_real a))\n                              else 0)\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Exp REAL = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Exp $$ e) \\<subseteq> V \\<union> V'", "have \"?f' = ?f \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        if 0 < x then f \\<rho> (RealVal (ln x)) * ennreal (inverse x)\n        else 0) \\<circ>\n    extract_real =\n    (\\<lambda>x.\n        if 0 < extract_real x\n        then f \\<rho> (lift_RealVal safe_ln x) *\n             ennreal (inverse (extract_real x))\n        else 0)", "by (intro ext) (simp add: o_def lift_RealVal_def extract_real_def split: val.split)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      if 0 < x then f \\<rho> (RealVal (ln x)) * ennreal (inverse x)\n      else 0) \\<circ>\n  extract_real =\n  (\\<lambda>x.\n      if 0 < extract_real x\n      then f \\<rho> (lift_RealVal safe_ln x) *\n           ennreal (inverse (extract_real x))\n      else 0)\n\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Exp $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Exp))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              if 0 < extract_real a\n                              then f \\<rho> (lift_RealVal safe_ln a) *\n                                   ennreal (inverse (extract_real a))\n                              else 0)\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Exp REAL = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Exp $$ e) \\<subseteq> V \\<union> V'", "finally"], ["proof (chain)\npicking this:\n  has_density (distr M (stock_measure t') (lift_RealVal exp))\n   (stock_measure t')\n   (\\<lambda>a.\n       if 0 < extract_real a\n       then f \\<rho> (lift_RealVal safe_ln a) *\n            ennreal (inverse (extract_real a))\n       else 0)", "show \"has_density (distr M (stock_measure t') (op_sem Exp)) (stock_measure t') ...\""], ["proof (prove)\nusing this:\n  has_density (distr M (stock_measure t') (lift_RealVal exp))\n   (stock_measure t')\n   (\\<lambda>a.\n       if 0 < extract_real a\n       then f \\<rho> (lift_RealVal safe_ln a) *\n            ennreal (inverse (extract_real a))\n       else 0)\n\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t') (op_sem Exp)) (stock_measure t')\n     (\\<lambda>x.\n         if 0 < extract_real x\n         then f \\<rho> (lift_RealVal safe_ln x) *\n              ennreal (inverse (extract_real x))\n         else 0)", "by simp"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t') (op_sem Exp)) (stock_measure t')\n   (\\<lambda>x.\n       if 0 < extract_real x\n       then f \\<rho> (lift_RealVal safe_ln x) *\n            ennreal (inverse (extract_real x))\n       else 0)\n\ngoal (5 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) f\n 3. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Exp REAL = Some t'\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Exp $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Exp $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Exp $$ e) \\<subseteq> V \\<union> V'", "qed auto"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Exp $$ e)))\n   (stock_measure t')\n   (\\<lambda>a b.\n       if 0 < extract_real b\n       then f a (lift_RealVal safe_ln b) *\n            ennreal (inverse (extract_real b))\n       else 0)\n\ngoal (4 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "case (hd_inv V V' \\<Gamma> \\<delta> e f t')"], ["proof (state)\nthis:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> Inverse $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\n\ngoal (4 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "from hd_inv.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> Inverse $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'", "have t1: \"\\<Gamma> \\<turnstile> e : REAL\" and t2: \"t' = REAL\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Inverse $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> e : REAL &&& t' = REAL", "by (auto split: pdf_type.split_asm)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> e : REAL\n  t' = REAL\n\ngoal (4 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "have dens: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n              (\\<lambda>\\<rho>. dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure REAL) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure REAL) f", "by (intro hd_inv.IH) (insert hd_inv.prems hd_inv.hyps t1, auto)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure REAL) f\n\ngoal (4 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Inverse $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Inverse b) *\n                              ennreal ((inverse (extract_real b))\\<^sup>2))\n 4. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "with hd_inv and t1 and t2"], ["proof (chain)\npicking this:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> Inverse $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\n  \\<Gamma> \\<turnstile> e : REAL\n  t' = REAL\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure REAL) f", "show ?case"], ["proof (prove)\nusing this:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> Inverse $$ e : t'\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'\n  \\<Gamma> \\<turnstile> e : REAL\n  t' = REAL\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure REAL) f\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Inverse $$ e)))\n     (stock_measure t')\n     (\\<lambda>a b.\n         f a (op_sem Inverse b) *\n         ennreal ((inverse (extract_real b))\\<^sup>2))", "proof (intro expr_has_density_sound_op[where t = REAL])"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a).\n                          f b (op_sem Inverse a) *\n                          ennreal ((inverse (extract_real a))\\<^sup>2))\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t')\n 4. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Inverse))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              f \\<rho> (op_sem Inverse a) *\n                              ennreal ((inverse (extract_real a))\\<^sup>2))\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Inverse REAL = Some t'\n 7. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'", "from t2"], ["proof (chain)\npicking this:\n  t' = REAL", "have [measurable]: \"lift_RealVal inverse \\<in> measurable (stock_measure REAL) (stock_measure REAL)\""], ["proof (prove)\nusing this:\n  t' = REAL\n\ngoal (1 subgoal):\n 1. lift_RealVal inverse\n    \\<in> stock_measure REAL \\<rightarrow>\\<^sub>M stock_measure REAL", "by (simp split: pdf_type.split_asm)"], ["proof (state)\nthis:\n  lift_RealVal inverse\n  \\<in> stock_measure REAL \\<rightarrow>\\<^sub>M stock_measure REAL\n\ngoal (7 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a).\n                          f b (op_sem Inverse a) *\n                          ennreal ((inverse (extract_real a))\\<^sup>2))\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t')\n 4. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Inverse))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              f \\<rho> (op_sem Inverse a) *\n                              ennreal ((inverse (extract_real a))\\<^sup>2))\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Inverse REAL = Some t'\n 7. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'", "from dens"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure REAL) f", "have Mf[measurable]: \"case_prod f \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure REAL)\""], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure REAL) f\n\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). f x y)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure REAL)", "by (blast dest: has_parametrized_subprob_densityD)"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). f x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure REAL)\n\ngoal (7 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a).\n                          f b (op_sem Inverse a) *\n                          ennreal ((inverse (extract_real a))\\<^sup>2))\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t')\n 4. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Inverse))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              f \\<rho> (op_sem Inverse a) *\n                              ennreal ((inverse (extract_real a))\\<^sup>2))\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Inverse REAL = Some t'\n 7. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'", "let ?f = \"\\<lambda>\\<rho> x. f \\<rho> (op_sem Inverse x) * inverse (extract_real x) ^ 2\""], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a).\n                          f b (op_sem Inverse a) *\n                          ennreal ((inverse (extract_real a))\\<^sup>2))\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t')\n 4. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Inverse))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              f \\<rho> (op_sem Inverse a) *\n                              ennreal ((inverse (extract_real a))\\<^sup>2))\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Inverse REAL = Some t'\n 7. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'", "have [measurable]: \"extract_real \\<in> borel_measurable (stock_measure REAL)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extract_real \\<in> borel_measurable (stock_measure REAL)", "by simp"], ["proof (state)\nthis:\n  extract_real \\<in> borel_measurable (stock_measure REAL)\n\ngoal (7 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a).\n                          f b (op_sem Inverse a) *\n                          ennreal ((inverse (extract_real a))\\<^sup>2))\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t')\n 4. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Inverse))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              f \\<rho> (op_sem Inverse a) *\n                              ennreal ((inverse (extract_real a))\\<^sup>2))\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Inverse REAL = Some t'\n 7. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'", "show \"case_prod ?f \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<rho>, x).\n        f \\<rho> (op_sem Inverse x) *\n        ennreal ((inverse (extract_real x))\\<^sup>2))\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')", "by (simp add: t2)"], ["proof (state)\nthis:\n  (\\<lambda>(\\<rho>, x).\n      f \\<rho> (op_sem Inverse x) *\n      ennreal ((inverse (extract_real x))\\<^sup>2))\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t')\n\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Inverse))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              f \\<rho> (op_sem Inverse a) *\n                              ennreal ((inverse (extract_real a))\\<^sup>2))\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Inverse REAL = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'", "fix M \\<rho>"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Inverse))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              f \\<rho> (op_sem Inverse a) *\n                              ennreal ((inverse (extract_real a))\\<^sup>2))\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Inverse REAL = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'", "assume dens': \"has_subprob_density M (stock_measure REAL) (f \\<rho>)\""], ["proof (state)\nthis:\n  has_subprob_density M (stock_measure REAL) (f \\<rho>)\n\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Inverse))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              f \\<rho> (op_sem Inverse a) *\n                              ennreal ((inverse (extract_real a))\\<^sup>2))\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Inverse REAL = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'", "hence space_M: \"space M = space (stock_measure REAL)\""], ["proof (prove)\nusing this:\n  has_subprob_density M (stock_measure REAL) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. space M = space (stock_measure REAL)", "by (auto dest: has_subprob_densityD)"], ["proof (state)\nthis:\n  space M = space (stock_measure REAL)\n\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Inverse))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              f \\<rho> (op_sem Inverse a) *\n                              ennreal ((inverse (extract_real a))\\<^sup>2))\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Inverse REAL = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'", "have \"has_density (distr M (stock_measure t') (lift_RealVal inverse)) (stock_measure t')\n            ((\\<lambda>x. f \\<rho> (RealVal (inverse x)) * ennreal (inverse (x * x)))\n               \\<circ> extract_real)\" (is \"has_density _ _ ?f'\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t') (lift_RealVal inverse))\n     (stock_measure t')\n     ((\\<lambda>x.\n          f \\<rho> (RealVal (inverse x)) *\n          ennreal (inverse (x * x))) \\<circ>\n      extract_real)", "using dens'"], ["proof (prove)\nusing this:\n  has_subprob_density M (stock_measure REAL) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t') (lift_RealVal inverse))\n     (stock_measure t')\n     ((\\<lambda>x.\n          f \\<rho> (RealVal (inverse x)) *\n          ennreal (inverse (x * x))) \\<circ>\n      extract_real)", "apply (simp only: t2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_subprob_density M (stock_measure REAL) (f \\<rho>) \\<Longrightarrow>\n    has_density (distr M (stock_measure REAL) (lift_RealVal inverse))\n     (stock_measure REAL)\n     ((\\<lambda>x.\n          f \\<rho> (RealVal (inverse x)) *\n          ennreal (inverse (x * x))) \\<circ>\n      extract_real)", "apply (rule distr_lift_RealVal)"], ["proof (prove)\ngoal (3 subgoals):\n 1. has_subprob_density M (stock_measure REAL) (f \\<rho>) \\<Longrightarrow>\n    inverse \\<in> borel_measurable borel\n 2. has_subprob_density M (stock_measure REAL) (f \\<rho>) \\<Longrightarrow>\n    has_subprob_density M (stock_measure REAL) (f \\<rho>)\n 3. \\<And>Ma \\<delta>.\n       \\<lbrakk>has_subprob_density M (stock_measure REAL) (f \\<rho>);\n        has_subprob_density Ma lborel \\<delta>\\<rbrakk>\n       \\<Longrightarrow> has_density (distr Ma borel inverse) lborel\n                          (\\<lambda>a.\n                              \\<delta> (inverse a) *\n                              ennreal (inverse (a * a)))", "apply (auto intro!: subprob_density_distr_real_inverse intro: has_subprob_density_imp_has_density\n             simp del: inverse_mult_distrib)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t') (lift_RealVal inverse))\n   (stock_measure t')\n   ((\\<lambda>x.\n        f \\<rho> (RealVal (inverse x)) * ennreal (inverse (x * x))) \\<circ>\n    extract_real)\n\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Inverse))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              f \\<rho> (op_sem Inverse a) *\n                              ennreal ((inverse (extract_real a))\\<^sup>2))\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Inverse REAL = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'", "also"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t') (lift_RealVal inverse))\n   (stock_measure t')\n   ((\\<lambda>x.\n        f \\<rho> (RealVal (inverse x)) * ennreal (inverse (x * x))) \\<circ>\n    extract_real)\n\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Inverse))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              f \\<rho> (op_sem Inverse a) *\n                              ennreal ((inverse (extract_real a))\\<^sup>2))\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Inverse REAL = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'", "have \"?f' = ?f \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        f \\<rho> (RealVal (inverse x)) * ennreal (inverse (x * x))) \\<circ>\n    extract_real =\n    (\\<lambda>x.\n        f \\<rho> (op_sem Inverse x) *\n        ennreal ((inverse (extract_real x))\\<^sup>2))", "by (intro ext) (simp add: o_def lift_RealVal_def extract_real_def power2_eq_square split: val.split)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      f \\<rho> (RealVal (inverse x)) * ennreal (inverse (x * x))) \\<circ>\n  extract_real =\n  (\\<lambda>x.\n      f \\<rho> (op_sem Inverse x) *\n      ennreal ((inverse (extract_real x))\\<^sup>2))\n\ngoal (6 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) ?f9\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Inverse $$ e : t';\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n        \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n        has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n         (\\<lambda>\\<rho>.\n             dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n             (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n         (stock_measure REAL) f;\n        has_subprob_density M (stock_measure REAL) (?f9 \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t') (op_sem Inverse))\n                          (stock_measure t')\n                          (\\<lambda>a.\n                              f \\<rho> (op_sem Inverse a) *\n                              ennreal ((inverse (extract_real a))\\<^sup>2))\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Inverse REAL = Some t'\n 6. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'", "finally"], ["proof (chain)\npicking this:\n  has_density (distr M (stock_measure t') (lift_RealVal inverse))\n   (stock_measure t')\n   (\\<lambda>a.\n       f \\<rho> (op_sem Inverse a) *\n       ennreal ((inverse (extract_real a))\\<^sup>2))", "show \"has_density (distr M (stock_measure t') (op_sem Inverse)) (stock_measure t') ...\""], ["proof (prove)\nusing this:\n  has_density (distr M (stock_measure t') (lift_RealVal inverse))\n   (stock_measure t')\n   (\\<lambda>a.\n       f \\<rho> (op_sem Inverse a) *\n       ennreal ((inverse (extract_real a))\\<^sup>2))\n\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t') (op_sem Inverse))\n     (stock_measure t')\n     (\\<lambda>x.\n         f \\<rho> (op_sem Inverse x) *\n         ennreal ((inverse (extract_real x))\\<^sup>2))", "by simp"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t') (op_sem Inverse))\n   (stock_measure t')\n   (\\<lambda>x.\n       f \\<rho> (op_sem Inverse x) *\n       ennreal ((inverse (extract_real x))\\<^sup>2))\n\ngoal (5 subgoals):\n 1. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> has_parametrized_subprob_density\n                       (state_measure V' \\<Gamma>)\n                       (\\<lambda>\\<rho>.\n                           dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                            \\<rho> \\<bind>\n                           (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                       (stock_measure REAL) f\n 3. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : REAL\n 4. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> op_type Inverse REAL = Some t'\n 5. \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n              e \\<Rightarrow> f;\n     \\<And>t.\n        \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n         density_context V V' \\<Gamma> \\<delta>;\n         free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n        \\<Longrightarrow> has_parametrized_subprob_density\n                           (state_measure V' \\<Gamma>)\n                           (\\<lambda>\\<rho>.\n                               dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                                \\<rho> \\<bind>\n                               (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                           (stock_measure t) f;\n     \\<Gamma> \\<turnstile> Inverse $$ e : t';\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Inverse $$ e) \\<subseteq> V \\<union> V';\n     \\<Gamma> \\<turnstile> e : REAL; t' = REAL;\n     has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n      (\\<lambda>\\<rho>.\n          dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n          (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n      (stock_measure REAL) f\\<rbrakk>\n    \\<Longrightarrow> free_vars (Inverse $$ e) \\<subseteq> V \\<union> V'", "qed auto"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Inverse $$ e)))\n   (stock_measure t')\n   (\\<lambda>a b.\n       f a (op_sem Inverse b) *\n       ennreal ((inverse (extract_real b))\\<^sup>2))\n\ngoal (3 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "case (hd_addc V V' \\<Gamma> \\<delta> e f e' t)"], ["proof (state)\nthis:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  randomfree e'\n  free_vars e' \\<subseteq> V'\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\n\ngoal (3 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "interpret density_context V V' \\<Gamma> \\<delta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>", "by fact"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "from hd_addc.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'", "have t1: \"\\<Gamma> \\<turnstile> e : t\" and t2: \"\\<Gamma> \\<turnstile> e' : t\" and t_disj: \"t = REAL \\<or> t = INTEG\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> e : t &&&\n    \\<Gamma> \\<turnstile> e' : t &&& t = REAL \\<or> t = INTEG", "by (elim expr_typing_opE, (auto split: pdf_type.split_asm)[])+"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> e : t\n  \\<Gamma> \\<turnstile> e' : t\n  t = REAL \\<or> t = INTEG\n\ngoal (3 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "hence t4: \"op_type Add (PRODUCT t t) = Some t\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> e : t\n  \\<Gamma> \\<turnstile> e' : t\n  t = REAL \\<or> t = INTEG\n\ngoal (1 subgoal):\n 1. op_type Add (PRODUCT t t) = Some t", "by auto"], ["proof (state)\nthis:\n  op_type Add (PRODUCT t t) = Some t\n\ngoal (3 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "have dens: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n                  (\\<lambda>\\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) f", "by (rule hd_addc.IH) (insert hd_addc.prems t1, auto)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n\ngoal (3 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f e' t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        randomfree e'; free_vars e' \\<subseteq> V';\n        \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Add\n                                    <|b, expr_sem_rf a (Minus $$ e')|>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 3. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "show ?case (is \"has_parametrized_subprob_density _ ?N _ ?f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n     (stock_measure t)\n     (\\<lambda>a b. f a (op_sem Add <|b, expr_sem_rf a (Minus $$ e')|>))", "proof (unfold has_parametrized_subprob_density_def has_subprob_density_def, intro conjI ballI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n        (stock_measure t)\n        (\\<lambda>a. f x (op_sem Add <|a, expr_sem_rf x (Minus $$ e')|>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n 3. (\\<lambda>(b, a). f b (op_sem Add <|a, expr_sem_rf b (Minus $$ e')|>))\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "from t2 t_disj hd_addc.prems hd_addc.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> e' : t\n  t = REAL \\<or> t = INTEG\n  \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  randomfree e'\n  free_vars e' \\<subseteq> V'", "show \"case_prod ?f \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> e' : t\n  t = REAL \\<or> t = INTEG\n  \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  randomfree e'\n  free_vars e' \\<subseteq> V'\n\ngoal (1 subgoal):\n 1. (\\<lambda>(b, a). f b (op_sem Add <|a, expr_sem_rf b (Minus $$ e')|>))\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "by (intro addc_density_measurable has_parametrized_subprob_densityD[OF dens]) auto"], ["proof (state)\nthis:\n  (\\<lambda>(b, a). f b (op_sem Add <|a, expr_sem_rf b (Minus $$ e')|>))\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n        (stock_measure t)\n        (\\<lambda>a. f x (op_sem Add <|a, expr_sem_rf x (Minus $$ e')|>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))", "fix \\<rho>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n        (stock_measure t)\n        (\\<lambda>a. f x (op_sem Add <|a, expr_sem_rf x (Minus $$ e')|>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))", "assume \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\""], ["proof (state)\nthis:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n        (stock_measure t)\n        (\\<lambda>a. f x (op_sem Add <|a, expr_sem_rf x (Minus $$ e')|>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))", "let ?M = \"dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho>\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n        (stock_measure t)\n        (\\<lambda>a. f x (op_sem Add <|a, expr_sem_rf x (Minus $$ e')|>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))", "let ?v1 = \"extract_int (expr_sem_rf \\<rho> e')\" and ?v2 = \"extract_real (expr_sem_rf \\<rho> e')\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n        (stock_measure t)\n        (\\<lambda>a. f x (op_sem Add <|a, expr_sem_rf x (Minus $$ e')|>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))", "from dens and \\<rho>"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)", "have dens': \"has_subprob_density (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t) (f \\<rho>)\""], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (f \\<rho>)", "unfolding has_parametrized_subprob_density_def has_subprob_density_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>space (state_measure V' \\<Gamma>).\n      has_density\n       (dens_ctxt_measure \\<Y> x \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t) (f x) \\<and>\n      subprob_space\n       (dens_ctxt_measure \\<Y> x \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))) \\<and>\n  (\\<lambda>(x, y). f x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. has_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (f \\<rho>) \\<and>\n    subprob_space\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))", "by auto"], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n        (stock_measure t)\n        (\\<lambda>a. f x (op_sem Add <|a, expr_sem_rf x (Minus $$ e')|>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))", "have Me: \"(\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<in>\n                   measurable (state_measure (V \\<union> V') \\<Gamma>) (subprob_algebra (stock_measure t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n    \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n          subprob_algebra (stock_measure t)", "using t1 hd_addc.prems"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> e : t\n  \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n    \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n          subprob_algebra (stock_measure t)", "by (intro measurable_expr_sem) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure t)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n        (stock_measure t)\n        (\\<lambda>a. f x (op_sem Add <|a, expr_sem_rf x (Minus $$ e')|>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))", "from hd_addc.prems hd_addc.hyps \\<rho>"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  randomfree e'\n  free_vars e' \\<subseteq> V'\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)", "have vt_e': \"val_type (expr_sem_rf \\<rho> e') = t\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  randomfree e'\n  free_vars e' \\<subseteq> V'\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. val_type (expr_sem_rf \\<rho> e') = t", "by (intro val_type_expr_sem_rf[OF t2]) auto"], ["proof (state)\nthis:\n  val_type (expr_sem_rf \\<rho> e') = t\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n        (stock_measure t)\n        (\\<lambda>a. f x (op_sem Add <|a, expr_sem_rf x (Minus $$ e')|>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))", "have space_e: \"space (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) = type_universe t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) =\n    type_universe t", "by (subst space_bind_measurable, subst measurable_dens_ctxt_measure_eq)\n         (rule Me, simp, simp add:)"], ["proof (state)\nthis:\n  space\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) =\n  type_universe t\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n        (stock_measure t)\n        (\\<lambda>a. f x (op_sem Add <|a, expr_sem_rf x (Minus $$ e')|>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))", "from hd_addc.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'", "show \"subprob_space (?N \\<rho>)\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. subprob_space\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))", "by (intro subprob_space_bind subprob_space_dens[OF \\<rho>],\n          subst measurable_dens_ctxt_measure_eq)\n         (rule measurable_expr_sem, auto)"], ["proof (state)\nthis:\n  subprob_space\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n        (stock_measure t)\n        (\\<lambda>a. f x (op_sem Add <|a, expr_sem_rf x (Minus $$ e')|>))", "let ?N' = \"distr (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t)\n                          (lift_RealIntVal ((+) ?v1) ((+) ?v2))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n        (stock_measure t)\n        (\\<lambda>a. f x (op_sem Add <|a, expr_sem_rf x (Minus $$ e')|>))", "have \"has_density ?N' (stock_measure t) (?f \\<rho>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "using t_disj"], ["proof (prove)\nusing this:\n  t = REAL \\<or> t = INTEG\n\ngoal (1 subgoal):\n 1. has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "proof (elim disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n 2. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "assume t: \"t = REAL\""], ["proof (state)\nthis:\n  t = REAL\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n 2. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "let ?N'' = \"distr (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t) (lift_RealVal ((+) ?v2))\""], ["proof (state)\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n 2. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "let ?f' = \"(\\<lambda>x. f \\<rho> (RealVal (x - ?v2))) \\<circ> extract_real\""], ["proof (state)\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n 2. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "from dens'"], ["proof (chain)\npicking this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)", "have \"has_density ?N'' (stock_measure t) ?f'\""], ["proof (prove)\nusing this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealVal ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     ((\\<lambda>x.\n          f \\<rho>\n           (RealVal (x - extract_real (expr_sem_rf \\<rho> e')))) \\<circ>\n      extract_real)", "by (subst (1 2) t, intro distr_lift_RealVal)\n           (auto simp: t intro!: distr_plus_real dest: has_subprob_density_imp_has_density)"], ["proof (state)\nthis:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealVal ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n   (stock_measure t)\n   ((\\<lambda>x.\n        f \\<rho>\n         (RealVal (x - extract_real (expr_sem_rf \\<rho> e')))) \\<circ>\n    extract_real)\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n 2. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "also"], ["proof (state)\nthis:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealVal ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n   (stock_measure t)\n   ((\\<lambda>x.\n        f \\<rho>\n         (RealVal (x - extract_real (expr_sem_rf \\<rho> e')))) \\<circ>\n    extract_real)\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n 2. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "have \"?N'' = ?N'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealVal ((+) (extract_real (expr_sem_rf \\<rho> e')))) =\n    distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n       ((+) (extract_real (expr_sem_rf \\<rho> e'))))", "by (intro distr_cong)\n           (auto simp: lift_RealVal_def lift_RealIntVal_def extract_real_def vt_e' space_e t\n                 dest: split: val.split)"], ["proof (state)\nthis:\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t)\n   (lift_RealVal ((+) (extract_real (expr_sem_rf \\<rho> e')))) =\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t)\n   (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n     ((+) (extract_real (expr_sem_rf \\<rho> e'))))\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n 2. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "also"], ["proof (state)\nthis:\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t)\n   (lift_RealVal ((+) (extract_real (expr_sem_rf \\<rho> e')))) =\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t)\n   (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n     ((+) (extract_real (expr_sem_rf \\<rho> e'))))\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n 2. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "have \"has_density ?N' (stock_measure t) ?f' = has_density ?N' (stock_measure t) (?f \\<rho>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     ((\\<lambda>x.\n          f \\<rho>\n           (RealVal (x - extract_real (expr_sem_rf \\<rho> e')))) \\<circ>\n      extract_real) =\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "using vt_e'"], ["proof (prove)\nusing this:\n  val_type (expr_sem_rf \\<rho> e') = t\n\ngoal (1 subgoal):\n 1. has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     ((\\<lambda>x.\n          f \\<rho>\n           (RealVal (x - extract_real (expr_sem_rf \\<rho> e')))) \\<circ>\n      extract_real) =\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "by (intro has_density_cong)\n                        (auto simp: lift_RealIntVal_def t extract_real_def space_embed_measure\n                          lift_RealIntVal2_def split: val.split)"], ["proof (state)\nthis:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n       ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n   (stock_measure t)\n   ((\\<lambda>x.\n        f \\<rho>\n         (RealVal (x - extract_real (expr_sem_rf \\<rho> e')))) \\<circ>\n    extract_real) =\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n       ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n   (stock_measure t)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n 2. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "finally"], ["proof (chain)\npicking this:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n       ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n   (stock_measure t)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "show \"has_density ?N' (stock_measure t) (?f \\<rho>)\""], ["proof (prove)\nusing this:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n       ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n   (stock_measure t)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n\ngoal (1 subgoal):\n 1. has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "."], ["proof (state)\nthis:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n       ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n   (stock_measure t)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "assume t: \"t = INTEG\""], ["proof (state)\nthis:\n  t = INTEG\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "let ?N'' = \"distr (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t) (lift_IntVal ((+) ?v1))\""], ["proof (state)\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "let ?f' = \"(\\<lambda>x. f \\<rho> (IntVal (x - ?v1))) \\<circ> extract_int\""], ["proof (state)\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "from dens'"], ["proof (chain)\npicking this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)", "have \"has_density ?N'' (stock_measure t) ?f'\""], ["proof (prove)\nusing this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_IntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     ((\\<lambda>x.\n          f \\<rho>\n           (IntVal (x - extract_int (expr_sem_rf \\<rho> e')))) \\<circ>\n      extract_int)", "by (subst (1 2) t, intro distr_lift_IntVal)\n           (auto simp: t intro!: distr_plus_ring_count_space dest: has_subprob_density_imp_has_density)"], ["proof (state)\nthis:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_IntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))))\n   (stock_measure t)\n   ((\\<lambda>x.\n        f \\<rho> (IntVal (x - extract_int (expr_sem_rf \\<rho> e')))) \\<circ>\n    extract_int)\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "also"], ["proof (state)\nthis:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_IntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))))\n   (stock_measure t)\n   ((\\<lambda>x.\n        f \\<rho> (IntVal (x - extract_int (expr_sem_rf \\<rho> e')))) \\<circ>\n    extract_int)\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "have \"?N'' = ?N'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_IntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))) =\n    distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n       ((+) (extract_real (expr_sem_rf \\<rho> e'))))", "by (intro distr_cong)\n           (auto simp: lift_IntVal_def lift_RealIntVal_def extract_real_def vt_e' space_e t\n                 split: val.split)"], ["proof (state)\nthis:\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t)\n   (lift_IntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))) =\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t)\n   (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n     ((+) (extract_real (expr_sem_rf \\<rho> e'))))\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "also"], ["proof (state)\nthis:\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t)\n   (lift_IntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))) =\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t)\n   (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n     ((+) (extract_real (expr_sem_rf \\<rho> e'))))\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "have \"has_density ?N' (stock_measure t) ?f' = has_density ?N' (stock_measure t) (?f \\<rho>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     ((\\<lambda>x.\n          f \\<rho>\n           (IntVal (x - extract_int (expr_sem_rf \\<rho> e')))) \\<circ>\n      extract_int) =\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "using vt_e'"], ["proof (prove)\nusing this:\n  val_type (expr_sem_rf \\<rho> e') = t\n\ngoal (1 subgoal):\n 1. has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     ((\\<lambda>x.\n          f \\<rho>\n           (IntVal (x - extract_int (expr_sem_rf \\<rho> e')))) \\<circ>\n      extract_int) =\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "by (intro has_density_cong)\n                        (auto simp: lift_RealIntVal_def t extract_int_def space_embed_measure\n                          lift_RealIntVal2_def split: val.split)"], ["proof (state)\nthis:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n       ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n   (stock_measure t)\n   ((\\<lambda>x.\n        f \\<rho> (IntVal (x - extract_int (expr_sem_rf \\<rho> e')))) \\<circ>\n    extract_int) =\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n       ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n   (stock_measure t)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "finally"], ["proof (chain)\npicking this:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n       ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n   (stock_measure t)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "show \"has_density ?N' (stock_measure t) (?f \\<rho>)\""], ["proof (prove)\nusing this:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n       ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n   (stock_measure t)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n\ngoal (1 subgoal):\n 1. has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t)\n       (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n         ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "."], ["proof (state)\nthis:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n       ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n   (stock_measure t)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n       ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n   (stock_measure t)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n        (stock_measure t)\n        (\\<lambda>a. f x (op_sem Add <|a, expr_sem_rf x (Minus $$ e')|>))", "also"], ["proof (state)\nthis:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n       ((+) (extract_real (expr_sem_rf \\<rho> e')))))\n   (stock_measure t)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n        (stock_measure t)\n        (\\<lambda>a. f x (op_sem Add <|a, expr_sem_rf x (Minus $$ e')|>))", "have \"?N' = distr (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t)\n                          (\\<lambda>w. op_sem Add <|w, expr_sem_rf \\<rho> e'|>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n       ((+) (extract_real (expr_sem_rf \\<rho> e')))) =\n    distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (\\<lambda>w. op_sem Add <|w, expr_sem_rf \\<rho> e'|>)", "using t_disj vt_e'"], ["proof (prove)\nusing this:\n  t = REAL \\<or> t = INTEG\n  val_type (expr_sem_rf \\<rho> e') = t\n\ngoal (1 subgoal):\n 1. distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n       ((+) (extract_real (expr_sem_rf \\<rho> e')))) =\n    distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (\\<lambda>w. op_sem Add <|w, expr_sem_rf \\<rho> e'|>)", "by (intro distr_cong, simp, simp)\n         (auto split: val.split simp: lift_RealIntVal_def\n            lift_RealIntVal2_def space_e extract_real_def extract_int_def)"], ["proof (state)\nthis:\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t)\n   (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n     ((+) (extract_real (expr_sem_rf \\<rho> e')))) =\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (\\<lambda>w. op_sem Add <|w, expr_sem_rf \\<rho> e'|>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n        (stock_measure t)\n        (\\<lambda>a. f x (op_sem Add <|a, expr_sem_rf x (Minus $$ e')|>))", "also"], ["proof (state)\nthis:\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t)\n   (lift_RealIntVal ((+) (extract_int (expr_sem_rf \\<rho> e')))\n     ((+) (extract_real (expr_sem_rf \\<rho> e')))) =\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (\\<lambda>w. op_sem Add <|w, expr_sem_rf \\<rho> e'|>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n        (stock_measure t)\n        (\\<lambda>a. f x (op_sem Add <|a, expr_sem_rf x (Minus $$ e')|>))", "have \"... = ?N \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (\\<lambda>w. op_sem Add <|w, expr_sem_rf \\<rho> e'|>) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>))", "using hd_addc.prems hd_addc.hyps t_disj \\<rho>"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Add $$ <e ,  e'> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Add $$ <e ,  e'>) \\<subseteq> V \\<union> V'\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  randomfree e'\n  free_vars e' \\<subseteq> V'\n  t = REAL \\<or> t = INTEG\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (\\<lambda>w. op_sem Add <|w, expr_sem_rf \\<rho> e'|>) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>))", "by (intro bin_op_randomfree_restructure[OF t1 t2, symmetric]) auto"], ["proof (state)\nthis:\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (\\<lambda>w. op_sem Add <|w, expr_sem_rf \\<rho> e'|>) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n        (stock_measure t)\n        (\\<lambda>a. f x (op_sem Add <|a, expr_sem_rf x (Minus $$ e')|>))", "finally"], ["proof (chain)\npicking this:\n  has_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n   (stock_measure t)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "show \"has_density (?N \\<rho>) (stock_measure t) (?f \\<rho>)\""], ["proof (prove)\nusing this:\n  has_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n   (stock_measure t)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n\ngoal (1 subgoal):\n 1. has_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))", "."], ["proof (state)\nthis:\n  has_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n   (stock_measure t)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Add <|a, expr_sem_rf \\<rho> (Minus $$ e')|>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ <e ,  e'>)))\n   (stock_measure t)\n   (\\<lambda>a b. f a (op_sem Add <|b, expr_sem_rf a (Minus $$ e')|>))\n\ngoal (2 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "case (hd_multc V V' \\<Gamma> \\<delta> e f c t)"], ["proof (state)\nthis:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  val_type c = REAL\n  c \\<noteq> RealVal 0\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\n\ngoal (2 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "interpret density_context V V' \\<Gamma> \\<delta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>", "by fact"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "from hd_multc.prems hd_multc.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  val_type c = REAL\n  c \\<noteq> RealVal 0", "have t1: \"\\<Gamma> \\<turnstile> e : REAL\" and t2: \"val_type c = REAL\" and t: \"t = REAL\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  val_type c = REAL\n  c \\<noteq> RealVal 0\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> e : REAL &&& val_type c = REAL &&& t = REAL", "by (elim expr_typing_opE expr_typing_valE expr_typing_pairE,\n          (auto split: pdf_type.split_asm) [])+"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> e : REAL\n  val_type c = REAL\n  t = REAL\n\ngoal (2 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "have t4: \"op_type Mult (PRODUCT REAL REAL) = Some REAL\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_type Mult (PRODUCT REAL REAL) = Some REAL", "by simp"], ["proof (state)\nthis:\n  op_type Mult (PRODUCT REAL REAL) = Some REAL\n\ngoal (2 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "have dens[measurable]: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n                  (\\<lambda>\\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) f", "by (rule hd_multc.IH) (insert hd_multc.prems t1 t, auto)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n\ngoal (2 subgoals):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f c t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        val_type c = REAL; c \\<noteq> RealVal 0;\n        \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              f a (op_sem Mult <|b, op_sem Inverse c|>) *\n                              ennreal (inverse \\<bar>extract_real c\\<bar>))\n 2. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "show ?case (is \"has_parametrized_subprob_density _ ?N _ ?f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n     (stock_measure t)\n     (\\<lambda>a b.\n         f a (op_sem Mult <|b, op_sem Inverse c|>) *\n         ennreal (inverse \\<bar>extract_real c\\<bar>))", "proof (unfold has_parametrized_subprob_density_def has_subprob_density_def, intro conjI ballI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n 3. (\\<lambda>(b, a).\n        f b (op_sem Mult <|a, op_sem Inverse c|>) *\n        ennreal (inverse \\<bar>extract_real c\\<bar>))\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "let ?MR = \"stock_measure t\" and ?MP = \"stock_measure (PRODUCT t t)\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n 3. (\\<lambda>(b, a).\n        f b (op_sem Mult <|a, op_sem Inverse c|>) *\n        ennreal (inverse \\<bar>extract_real c\\<bar>))\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "have M_mult[measurable]: \"(op_sem Mult) \\<in> measurable ?MP ?MR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_sem Mult\n    \\<in> stock_measure (PRODUCT t t) \\<rightarrow>\\<^sub>M stock_measure t", "by (simp add: measurable_op_sem t)"], ["proof (state)\nthis:\n  op_sem Mult\n  \\<in> stock_measure (PRODUCT t t) \\<rightarrow>\\<^sub>M stock_measure t\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n 3. (\\<lambda>(b, a).\n        f b (op_sem Mult <|a, op_sem Inverse c|>) *\n        ennreal (inverse \\<bar>extract_real c\\<bar>))\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "show \"case_prod ?f \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(b, a).\n        f b (op_sem Mult <|a, op_sem Inverse c|>) *\n        ennreal (inverse \\<bar>extract_real c\\<bar>))\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "by measurable (insert t2, auto simp: t val_type_eq_REAL lift_RealVal_def)"], ["proof (state)\nthis:\n  (\\<lambda>(b, a).\n      f b (op_sem Mult <|a, op_sem Inverse c|>) *\n      ennreal (inverse \\<bar>extract_real c\\<bar>))\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))", "fix \\<rho>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))", "assume \\<rho>: \"\\<rho> \\<in> space (state_measure V' \\<Gamma>)\""], ["proof (state)\nthis:\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))", "let ?M = \"dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho>\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))", "from dens and \\<rho>"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)", "have dens': \"has_subprob_density (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t) (f \\<rho>)\""], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (f \\<rho>)", "unfolding has_parametrized_subprob_density_def has_subprob_density_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>space (state_measure V' \\<Gamma>).\n      has_density\n       (dens_ctxt_measure \\<Y> x \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t) (f x) \\<and>\n      subprob_space\n       (dens_ctxt_measure \\<Y> x \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))) \\<and>\n  (\\<lambda>(x, y). f x y)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. has_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (f \\<rho>) \\<and>\n    subprob_space\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))", "by auto"], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))", "have Me: \"(\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<in>\n                   measurable (state_measure (V \\<union> V') \\<Gamma>) (subprob_algebra (stock_measure REAL))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n    \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n          subprob_algebra (stock_measure REAL)", "using t1 hd_multc.prems"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> e : REAL\n  \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n    \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n          subprob_algebra (stock_measure REAL)", "by (intro measurable_expr_sem) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> state_measure (V \\<union> V') \\<Gamma> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure REAL)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))", "have space_e: \"space (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) = range RealVal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) =\n    range RealVal", "by (subst space_bind_measurable, subst measurable_dens_ctxt_measure_eq)\n         (rule Me, simp, simp add: t space_embed_measure type_universe_REAL)"], ["proof (state)\nthis:\n  space\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) =\n  range RealVal\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))\n 2. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       subprob_space\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))", "from hd_multc.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'", "show \"subprob_space (?N \\<rho>)\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. subprob_space\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))", "by (intro subprob_space_bind subprob_space_dens[OF \\<rho>],\n          subst measurable_dens_ctxt_measure_eq)\n         (rule measurable_expr_sem, auto)"], ["proof (state)\nthis:\n  subprob_space\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))", "let ?N' = \"distr (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t)\n                          (lift_RealVal ((*) (extract_real c)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))", "let ?g = \"\\<lambda>f x. f (x / extract_real c) * ennreal (inverse (abs (extract_real c)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))", "let ?f' = \"(\\<lambda>x. f \\<rho> (RealVal (x / extract_real c)) *\n                    inverse (abs (extract_real c))) \\<circ> extract_real\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))", "from hd_multc.hyps"], ["proof (chain)\npicking this:\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  val_type c = REAL\n  c \\<noteq> RealVal 0", "have \"extract_real c \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  val_type c = REAL\n  c \\<noteq> RealVal 0\n\ngoal (1 subgoal):\n 1. extract_real c \\<noteq> 0", "by (auto simp: extract_real_def split: val.split)"], ["proof (state)\nthis:\n  extract_real c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))", "with dens'"], ["proof (chain)\npicking this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)\n  extract_real c \\<noteq> 0", "have \"has_density ?N' (stock_measure REAL) ?f'\""], ["proof (prove)\nusing this:\n  has_subprob_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f \\<rho>)\n  extract_real c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t) (lift_RealVal ((*) (extract_real c))))\n     (stock_measure REAL)\n     ((\\<lambda>x.\n          f \\<rho> (RealVal (x / extract_real c)) *\n          ennreal (inverse \\<bar>extract_real c\\<bar>)) \\<circ>\n      extract_real)", "by (subst t, intro distr_lift_RealVal[where g = ?g])\n         (auto simp: t intro!: distr_mult_real dest: has_subprob_density_imp_has_density)"], ["proof (state)\nthis:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (lift_RealVal ((*) (extract_real c))))\n   (stock_measure REAL)\n   ((\\<lambda>x.\n        f \\<rho> (RealVal (x / extract_real c)) *\n        ennreal (inverse \\<bar>extract_real c\\<bar>)) \\<circ>\n    extract_real)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))", "also"], ["proof (state)\nthis:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (lift_RealVal ((*) (extract_real c))))\n   (stock_measure REAL)\n   ((\\<lambda>x.\n        f \\<rho> (RealVal (x / extract_real c)) *\n        ennreal (inverse \\<bar>extract_real c\\<bar>)) \\<circ>\n    extract_real)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))", "have \"has_density ?N' (stock_measure REAL) ?f' =\n                    has_density ?N' (stock_measure REAL) (?f \\<rho>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t) (lift_RealVal ((*) (extract_real c))))\n     (stock_measure REAL)\n     ((\\<lambda>x.\n          f \\<rho> (RealVal (x / extract_real c)) *\n          ennreal (inverse \\<bar>extract_real c\\<bar>)) \\<circ>\n      extract_real) =\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t) (lift_RealVal ((*) (extract_real c))))\n     (stock_measure REAL)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Mult <|a, op_sem Inverse c|>) *\n         ennreal (inverse \\<bar>extract_real c\\<bar>))", "using hd_multc.hyps"], ["proof (prove)\nusing this:\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  val_type c = REAL\n  c \\<noteq> RealVal 0\n\ngoal (1 subgoal):\n 1. has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t) (lift_RealVal ((*) (extract_real c))))\n     (stock_measure REAL)\n     ((\\<lambda>x.\n          f \\<rho> (RealVal (x / extract_real c)) *\n          ennreal (inverse \\<bar>extract_real c\\<bar>)) \\<circ>\n      extract_real) =\n    has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t) (lift_RealVal ((*) (extract_real c))))\n     (stock_measure REAL)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Mult <|a, op_sem Inverse c|>) *\n         ennreal (inverse \\<bar>extract_real c\\<bar>))", "by (intro has_density_cong)\n          (auto simp: lift_RealVal_def t extract_real_def space_embed_measure\n                      lift_RealIntVal2_def field_simps split: val.split)"], ["proof (state)\nthis:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (lift_RealVal ((*) (extract_real c))))\n   (stock_measure REAL)\n   ((\\<lambda>x.\n        f \\<rho> (RealVal (x / extract_real c)) *\n        ennreal (inverse \\<bar>extract_real c\\<bar>)) \\<circ>\n    extract_real) =\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (lift_RealVal ((*) (extract_real c))))\n   (stock_measure REAL)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Mult <|a, op_sem Inverse c|>) *\n       ennreal (inverse \\<bar>extract_real c\\<bar>))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))", "finally"], ["proof (chain)\npicking this:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (lift_RealVal ((*) (extract_real c))))\n   (stock_measure REAL)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Mult <|a, op_sem Inverse c|>) *\n       ennreal (inverse \\<bar>extract_real c\\<bar>))", "have \"has_density ?N' (stock_measure REAL) (?f \\<rho>)\""], ["proof (prove)\nusing this:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (lift_RealVal ((*) (extract_real c))))\n   (stock_measure REAL)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Mult <|a, op_sem Inverse c|>) *\n       ennreal (inverse \\<bar>extract_real c\\<bar>))\n\ngoal (1 subgoal):\n 1. has_density\n     (distr\n       (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t) (lift_RealVal ((*) (extract_real c))))\n     (stock_measure REAL)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Mult <|a, op_sem Inverse c|>) *\n         ennreal (inverse \\<bar>extract_real c\\<bar>))", "."], ["proof (state)\nthis:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (lift_RealVal ((*) (extract_real c))))\n   (stock_measure REAL)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Mult <|a, op_sem Inverse c|>) *\n       ennreal (inverse \\<bar>extract_real c\\<bar>))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))", "also"], ["proof (state)\nthis:\n  has_density\n   (distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (lift_RealVal ((*) (extract_real c))))\n   (stock_measure REAL)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Mult <|a, op_sem Inverse c|>) *\n       ennreal (inverse \\<bar>extract_real c\\<bar>))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))", "have \"?N' = distr (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t)\n                          (\\<lambda>w. op_sem Mult <|w, expr_sem_rf \\<rho> (Val c)|>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (lift_RealVal ((*) (extract_real c))) =\n    distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (\\<lambda>w. op_sem Mult <|w, expr_sem_rf \\<rho> (Val c)|>)", "using hd_multc.hyps"], ["proof (prove)\nusing this:\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  val_type c = REAL\n  c \\<noteq> RealVal 0\n\ngoal (1 subgoal):\n 1. distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (lift_RealVal ((*) (extract_real c))) =\n    distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (\\<lambda>w. op_sem Mult <|w, expr_sem_rf \\<rho> (Val c)|>)", "by (intro distr_cong, simp, simp)\n         (auto simp: lift_RealVal_def lift_RealIntVal2_def space_e extract_real_def\n               split: val.split)"], ["proof (state)\nthis:\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (lift_RealVal ((*) (extract_real c))) =\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t)\n   (\\<lambda>w. op_sem Mult <|w, expr_sem_rf \\<rho> (Val c)|>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))", "also"], ["proof (state)\nthis:\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (lift_RealVal ((*) (extract_real c))) =\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t)\n   (\\<lambda>w. op_sem Mult <|w, expr_sem_rf \\<rho> (Val c)|>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))", "have \"... = ?N \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (\\<lambda>w. op_sem Mult <|w, expr_sem_rf \\<rho> (Val c)|>) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>))", "using hd_multc.prems hd_multc.hyps \\<rho>"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Mult $$ <e ,  Val c> : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Mult $$ <e ,  Val c>) \\<subseteq> V \\<union> V'\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  val_type c = REAL\n  c \\<noteq> RealVal 0\n  \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n\ngoal (1 subgoal):\n 1. distr\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t)\n     (\\<lambda>w. op_sem Mult <|w, expr_sem_rf \\<rho> (Val c)|>) =\n    dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>))", "by (intro bin_op_randomfree_restructure[OF t1, symmetric])\n           (auto simp: t intro!: expr_typing.intros)"], ["proof (state)\nthis:\n  distr\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t)\n   (\\<lambda>w. op_sem Mult <|w, expr_sem_rf \\<rho> (Val c)|>) =\n  dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n       has_density\n        (dens_ctxt_measure \\<Y> x \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n        (stock_measure t)\n        (\\<lambda>a.\n            f x (op_sem Mult <|a, op_sem Inverse c|>) *\n            ennreal (inverse \\<bar>extract_real c\\<bar>))", "finally"], ["proof (chain)\npicking this:\n  has_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n   (stock_measure REAL)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Mult <|a, op_sem Inverse c|>) *\n       ennreal (inverse \\<bar>extract_real c\\<bar>))", "show \"has_density (?N \\<rho>) (stock_measure t) (?f \\<rho>)\""], ["proof (prove)\nusing this:\n  has_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n   (stock_measure REAL)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Mult <|a, op_sem Inverse c|>) *\n       ennreal (inverse \\<bar>extract_real c\\<bar>))\n\ngoal (1 subgoal):\n 1. has_density\n     (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n     (stock_measure t)\n     (\\<lambda>a.\n         f \\<rho> (op_sem Mult <|a, op_sem Inverse c|>) *\n         ennreal (inverse \\<bar>extract_real c\\<bar>))", "by (simp only: t)"], ["proof (state)\nthis:\n  has_density\n   (dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n   (stock_measure t)\n   (\\<lambda>a.\n       f \\<rho> (op_sem Mult <|a, op_sem Inverse c|>) *\n       ennreal (inverse \\<bar>extract_real c\\<bar>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Mult $$ <e ,  Val c>)))\n   (stock_measure t)\n   (\\<lambda>a b.\n       f a (op_sem Mult <|b, op_sem Inverse c|>) *\n       ennreal (inverse \\<bar>extract_real c\\<bar>))\n\ngoal (1 subgoal):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "case (hd_add V V' \\<Gamma> \\<delta> e f t)"], ["proof (state)\nthis:\n  (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<lbrakk>\\<Gamma> \\<turnstile> e : ?t;\n   density_context V V' \\<Gamma> \\<delta>;\n   free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n  \\<Longrightarrow> has_parametrized_subprob_density\n                     (state_measure V' \\<Gamma>)\n                     (\\<lambda>\\<rho>.\n                         dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                          \\<rho> \\<bind>\n                         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                     (stock_measure ?t) f\n  \\<Gamma> \\<turnstile> Add $$ e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Add $$ e) \\<subseteq> V \\<union> V'\n\ngoal (1 subgoal):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "interpret density_context V V' \\<Gamma> \\<delta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context V V' \\<Gamma> \\<delta>", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "from hd_add.prems hd_add.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> Add $$ e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Add $$ e) \\<subseteq> V \\<union> V'\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f", "have t1: \"\\<Gamma> \\<turnstile> e : PRODUCT t t\" and t2: \"op_type Add (PRODUCT t t) = Some t\" and\n          t_disj: \"t = REAL \\<or> t = INTEG\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Add $$ e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Add $$ e) \\<subseteq> V \\<union> V'\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> e : PRODUCT t t &&&\n    op_type Add (PRODUCT t t) = Some t &&& t = REAL \\<or> t = INTEG", "by (elim expr_typing_opE expr_typing_valE expr_typing_pairE,\n          (auto split: pdf_type.split_asm) [])+"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> e : PRODUCT t t\n  op_type Add (PRODUCT t t) = Some t\n  t = REAL \\<or> t = INTEG\n\ngoal (1 subgoal):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "let ?tp = \"PRODUCT t t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "have dens[measurable]: \"has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n                  (\\<lambda>\\<rho>. dens_ctxt_measure (V,V',\\<Gamma>,\\<delta>) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure ?tp) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure (PRODUCT t t)) f", "by (rule hd_add.IH) (insert hd_add.prems t1 t2 t_disj, auto)"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure (PRODUCT t t)) f\n\ngoal (1 subgoal):\n 1. \\<And>V V' \\<Gamma> \\<delta> e f t.\n       \\<lbrakk>(V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d\n                 e \\<Rightarrow> f;\n        \\<And>t.\n           \\<lbrakk>\\<Gamma> \\<turnstile> e : t;\n            density_context V V' \\<Gamma> \\<delta>;\n            free_vars e \\<subseteq> V \\<union> V'\\<rbrakk>\n           \\<Longrightarrow> has_parametrized_subprob_density\n                              (state_measure V' \\<Gamma>)\n                              (\\<lambda>\\<rho>.\n                                  dens_ctxt_measure\n                                   (V, V', \\<Gamma>, \\<delta>)\n                                   \\<rho> \\<bind>\n                                  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                              (stock_measure t) f;\n        \\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V'\\<rbrakk>\n       \\<Longrightarrow> has_parametrized_subprob_density\n                          (state_measure V' \\<Gamma>)\n                          (\\<lambda>\\<rho>.\n                              dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>)\n                               \\<rho> \\<bind>\n                              (\\<lambda>\\<sigma>.\n                                  expr_sem \\<sigma> (Add $$ e)))\n                          (stock_measure t)\n                          (\\<lambda>a b.\n                              \\<integral>\\<^sup>+ x.\n             f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type b))", "from hd_add.prems hd_add.hyps t1 t2 t_disj"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> Add $$ e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Add $$ e) \\<subseteq> V \\<union> V'\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<Gamma> \\<turnstile> e : PRODUCT t t\n  op_type Add (PRODUCT t t) = Some t\n  t = REAL \\<or> t = INTEG", "show ?case (is \"has_parametrized_subprob_density _ ?N _ ?f\")"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Add $$ e : t\n  density_context V V' \\<Gamma> \\<delta>\n  free_vars (Add $$ e) \\<subseteq> V \\<union> V'\n  \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<Gamma> \\<turnstile> e : PRODUCT t t\n  op_type Add (PRODUCT t t) = Some t\n  t = REAL \\<or> t = INTEG\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ e)))\n     (stock_measure t)\n     (\\<lambda>a b.\n         \\<integral>\\<^sup>+ x. f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type b))", "proof (intro expr_has_density_sound_op[OF _ dens])"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a).\n                          \\<integral>\\<^sup>+ x.\n         f b <|x, op_sem Add <|a, op_sem Minus x|>|>\n       \\<partial>stock_measure (val_type a))\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t)\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n        \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<Gamma> \\<turnstile> e : PRODUCT t t;\n        op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG;\n        has_subprob_density M (stock_measure (PRODUCT t t))\n         (f \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t) (op_sem Add))\n                          (stock_measure t)\n                          (\\<lambda>a.\n                              \\<integral>\\<^sup>+ x.\n             f \\<rho> <|x, op_sem Add <|a, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type a))\n 4. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : PRODUCT t t\n 5. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> op_type Add (PRODUCT t t) = Some t\n 6. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> free_vars (Add $$ e) \\<subseteq> V \\<union> V'", "note sigma_finite_measure.borel_measurable_nn_integral[OF sigma_finite_stock_measure, measurable]"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). ?f x y)\n  \\<in> borel_measurable\n         (?N \\<Otimes>\\<^sub>M stock_measure ?t1) \\<Longrightarrow>\n  (\\<lambda>x. integral\\<^sup>N (stock_measure ?t1) (?f x))\n  \\<in> borel_measurable ?N\n\ngoal (6 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a).\n                          \\<integral>\\<^sup>+ x.\n         f b <|x, op_sem Add <|a, op_sem Minus x|>|>\n       \\<partial>stock_measure (val_type a))\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t)\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n        \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<Gamma> \\<turnstile> e : PRODUCT t t;\n        op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG;\n        has_subprob_density M (stock_measure (PRODUCT t t))\n         (f \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t) (op_sem Add))\n                          (stock_measure t)\n                          (\\<lambda>a.\n                              \\<integral>\\<^sup>+ x.\n             f \\<rho> <|x, op_sem Add <|a, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type a))\n 4. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : PRODUCT t t\n 5. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> op_type Add (PRODUCT t t) = Some t\n 6. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> free_vars (Add $$ e) \\<subseteq> V \\<union> V'", "have [measurable]: \"op_type Minus t = Some t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_type Minus t = Some t", "using t_disj"], ["proof (prove)\nusing this:\n  t = REAL \\<or> t = INTEG\n\ngoal (1 subgoal):\n 1. op_type Minus t = Some t", "by auto"], ["proof (state)\nthis:\n  op_type Minus t = Some t\n\ngoal (6 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a).\n                          \\<integral>\\<^sup>+ x.\n         f b <|x, op_sem Add <|a, op_sem Minus x|>|>\n       \\<partial>stock_measure (val_type a))\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t)\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n        \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<Gamma> \\<turnstile> e : PRODUCT t t;\n        op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG;\n        has_subprob_density M (stock_measure (PRODUCT t t))\n         (f \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t) (op_sem Add))\n                          (stock_measure t)\n                          (\\<lambda>a.\n                              \\<integral>\\<^sup>+ x.\n             f \\<rho> <|x, op_sem Add <|a, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type a))\n 4. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : PRODUCT t t\n 5. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> op_type Add (PRODUCT t t) = Some t\n 6. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> free_vars (Add $$ e) \\<subseteq> V \\<union> V'", "note measurable_op_sem[measurable] t2[measurable]"], ["proof (state)\nthis:\n  op_type ?oper ?t = Some ?t' \\<Longrightarrow>\n  op_sem ?oper\n  \\<in> stock_measure ?t \\<rightarrow>\\<^sub>M stock_measure ?t'\n  op_type Add (PRODUCT t t) = Some t\n\ngoal (6 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a).\n                          \\<integral>\\<^sup>+ x.\n         f b <|x, op_sem Add <|a, op_sem Minus x|>|>\n       \\<partial>stock_measure (val_type a))\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t)\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n        \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<Gamma> \\<turnstile> e : PRODUCT t t;\n        op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG;\n        has_subprob_density M (stock_measure (PRODUCT t t))\n         (f \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t) (op_sem Add))\n                          (stock_measure t)\n                          (\\<lambda>a.\n                              \\<integral>\\<^sup>+ x.\n             f \\<rho> <|x, op_sem Add <|a, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type a))\n 4. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : PRODUCT t t\n 5. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> op_type Add (PRODUCT t t) = Some t\n 6. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> free_vars (Add $$ e) \\<subseteq> V \\<union> V'", "let ?f' = \"\\<lambda>\\<rho> z. \\<integral>\\<^sup>+ x. f \\<rho>  <|x , op_sem Add <|z, op_sem Minus x|>|> \\<partial>stock_measure t\""], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a).\n                          \\<integral>\\<^sup>+ x.\n         f b <|x, op_sem Add <|a, op_sem Minus x|>|>\n       \\<partial>stock_measure (val_type a))\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t)\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n        \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<Gamma> \\<turnstile> e : PRODUCT t t;\n        op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG;\n        has_subprob_density M (stock_measure (PRODUCT t t))\n         (f \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t) (op_sem Add))\n                          (stock_measure t)\n                          (\\<lambda>a.\n                              \\<integral>\\<^sup>+ x.\n             f \\<rho> <|x, op_sem Add <|a, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type a))\n 4. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : PRODUCT t t\n 5. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> op_type Add (PRODUCT t t) = Some t\n 6. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> free_vars (Add $$ e) \\<subseteq> V \\<union> V'", "have \"case_prod ?f' \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<rho>, z).\n        \\<integral>\\<^sup>+ x. f \\<rho>\n                                <|x, op_sem Add <|z, op_sem Minus x|>|>\n                           \\<partial>stock_measure t)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "by measurable"], ["proof (state)\nthis:\n  (\\<lambda>(\\<rho>, z).\n      \\<integral>\\<^sup>+ x. f \\<rho>\n                              <|x, op_sem Add <|z, op_sem Minus x|>|>\n                         \\<partial>stock_measure t)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (6 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a).\n                          \\<integral>\\<^sup>+ x.\n         f b <|x, op_sem Add <|a, op_sem Minus x|>|>\n       \\<partial>stock_measure (val_type a))\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t)\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n        \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<Gamma> \\<turnstile> e : PRODUCT t t;\n        op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG;\n        has_subprob_density M (stock_measure (PRODUCT t t))\n         (f \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t) (op_sem Add))\n                          (stock_measure t)\n                          (\\<lambda>a.\n                              \\<integral>\\<^sup>+ x.\n             f \\<rho> <|x, op_sem Add <|a, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type a))\n 4. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : PRODUCT t t\n 5. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> op_type Add (PRODUCT t t) = Some t\n 6. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> free_vars (Add $$ e) \\<subseteq> V \\<union> V'", "also"], ["proof (state)\nthis:\n  (\\<lambda>(\\<rho>, z).\n      \\<integral>\\<^sup>+ x. f \\<rho>\n                              <|x, op_sem Add <|z, op_sem Minus x|>|>\n                         \\<partial>stock_measure t)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (6 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a).\n                          \\<integral>\\<^sup>+ x.\n         f b <|x, op_sem Add <|a, op_sem Minus x|>|>\n       \\<partial>stock_measure (val_type a))\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t)\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n        \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<Gamma> \\<turnstile> e : PRODUCT t t;\n        op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG;\n        has_subprob_density M (stock_measure (PRODUCT t t))\n         (f \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t) (op_sem Add))\n                          (stock_measure t)\n                          (\\<lambda>a.\n                              \\<integral>\\<^sup>+ x.\n             f \\<rho> <|x, op_sem Add <|a, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type a))\n 4. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : PRODUCT t t\n 5. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> op_type Add (PRODUCT t t) = Some t\n 6. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> free_vars (Add $$ e) \\<subseteq> V \\<union> V'", "have \"case_prod ?f' \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t) \\<longleftrightarrow>\n                    case_prod ?f \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>(\\<rho>, z).\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|z, op_sem Minus x|>|>\n                            \\<partial>stock_measure t)\n     \\<in> borel_measurable\n            (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)) =\n    ((\\<lambda>(b, a).\n         \\<integral>\\<^sup>+ x. f b <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))\n     \\<in> borel_measurable\n            (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t))", "by (intro measurable_cong) (auto simp: space_pair_measure)"], ["proof (state)\nthis:\n  ((\\<lambda>(\\<rho>, z).\n       \\<integral>\\<^sup>+ x. f \\<rho>\n                               <|x, op_sem Add <|z, op_sem Minus x|>|>\n                          \\<partial>stock_measure t)\n   \\<in> borel_measurable\n          (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)) =\n  ((\\<lambda>(b, a).\n       \\<integral>\\<^sup>+ x. f b <|x, op_sem Add <|a, op_sem Minus x|>|>\n                          \\<partial>stock_measure (val_type a))\n   \\<in> borel_measurable\n          (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t))\n\ngoal (6 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(b, a).\n                          \\<integral>\\<^sup>+ x.\n         f b <|x, op_sem Add <|a, op_sem Minus x|>|>\n       \\<partial>stock_measure (val_type a))\n                      \\<in> borel_measurable\n                             (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M\n                              stock_measure t)\n 3. \\<And>M \\<rho>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n        \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<Gamma> \\<turnstile> e : PRODUCT t t;\n        op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG;\n        has_subprob_density M (stock_measure (PRODUCT t t))\n         (f \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t) (op_sem Add))\n                          (stock_measure t)\n                          (\\<lambda>a.\n                              \\<integral>\\<^sup>+ x.\n             f \\<rho> <|x, op_sem Add <|a, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type a))\n 4. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : PRODUCT t t\n 5. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> op_type Add (PRODUCT t t) = Some t\n 6. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> free_vars (Add $$ e) \\<subseteq> V \\<union> V'", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>(b, a).\n      \\<integral>\\<^sup>+ x. f b <|x, op_sem Add <|a, op_sem Minus x|>|>\n                         \\<partial>stock_measure (val_type a))\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "show \"case_prod ?f \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\nusing this:\n  (\\<lambda>(b, a).\n      \\<integral>\\<^sup>+ x. f b <|x, op_sem Add <|a, op_sem Minus x|>|>\n                         \\<partial>stock_measure (val_type a))\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (1 subgoal):\n 1. (\\<lambda>(b, a).\n        \\<integral>\\<^sup>+ x. f b <|x, op_sem Add <|a, op_sem Minus x|>|>\n                           \\<partial>stock_measure (val_type a))\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "."], ["proof (state)\nthis:\n  (\\<lambda>(b, a).\n      \\<integral>\\<^sup>+ x. f b <|x, op_sem Add <|a, op_sem Minus x|>|>\n                         \\<partial>stock_measure (val_type a))\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<And>M \\<rho>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n        \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<Gamma> \\<turnstile> e : PRODUCT t t;\n        op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG;\n        has_subprob_density M (stock_measure (PRODUCT t t))\n         (f \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t) (op_sem Add))\n                          (stock_measure t)\n                          (\\<lambda>a.\n                              \\<integral>\\<^sup>+ x.\n             f \\<rho> <|x, op_sem Add <|a, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type a))\n 3. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : PRODUCT t t\n 4. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> op_type Add (PRODUCT t t) = Some t\n 5. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> free_vars (Add $$ e) \\<subseteq> V \\<union> V'", "fix M \\<rho>"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<And>M \\<rho>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n        \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<Gamma> \\<turnstile> e : PRODUCT t t;\n        op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG;\n        has_subprob_density M (stock_measure (PRODUCT t t))\n         (f \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t) (op_sem Add))\n                          (stock_measure t)\n                          (\\<lambda>a.\n                              \\<integral>\\<^sup>+ x.\n             f \\<rho> <|x, op_sem Add <|a, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type a))\n 3. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : PRODUCT t t\n 4. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> op_type Add (PRODUCT t t) = Some t\n 5. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> free_vars (Add $$ e) \\<subseteq> V \\<union> V'", "assume dens': \"has_subprob_density M (stock_measure (PRODUCT t t)) (f \\<rho>)\""], ["proof (state)\nthis:\n  has_subprob_density M (stock_measure (PRODUCT t t)) (f \\<rho>)\n\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<And>M \\<rho>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n        \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<Gamma> \\<turnstile> e : PRODUCT t t;\n        op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG;\n        has_subprob_density M (stock_measure (PRODUCT t t))\n         (f \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t) (op_sem Add))\n                          (stock_measure t)\n                          (\\<lambda>a.\n                              \\<integral>\\<^sup>+ x.\n             f \\<rho> <|x, op_sem Add <|a, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type a))\n 3. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : PRODUCT t t\n 4. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> op_type Add (PRODUCT t t) = Some t\n 5. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> free_vars (Add $$ e) \\<subseteq> V \\<union> V'", "hence Mf[measurable]: \"f \\<rho> \\<in> borel_measurable (stock_measure (PRODUCT t t))\""], ["proof (prove)\nusing this:\n  has_subprob_density M (stock_measure (PRODUCT t t)) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. f \\<rho> \\<in> borel_measurable (stock_measure (PRODUCT t t))", "by (rule has_subprob_densityD)"], ["proof (state)\nthis:\n  f \\<rho> \\<in> borel_measurable (stock_measure (PRODUCT t t))\n\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<And>M \\<rho>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n        \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<Gamma> \\<turnstile> e : PRODUCT t t;\n        op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG;\n        has_subprob_density M (stock_measure (PRODUCT t t))\n         (f \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t) (op_sem Add))\n                          (stock_measure t)\n                          (\\<lambda>a.\n                              \\<integral>\\<^sup>+ x.\n             f \\<rho> <|x, op_sem Add <|a, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type a))\n 3. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : PRODUCT t t\n 4. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> op_type Add (PRODUCT t t) = Some t\n 5. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> free_vars (Add $$ e) \\<subseteq> V \\<union> V'", "let ?M = \"dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho>\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<And>M \\<rho>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n        density_context V V' \\<Gamma> \\<delta>;\n        free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n        \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n        \\<Gamma> \\<turnstile> e : PRODUCT t t;\n        op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG;\n        has_subprob_density M (stock_measure (PRODUCT t t))\n         (f \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> has_density\n                          (distr M (stock_measure t) (op_sem Add))\n                          (stock_measure t)\n                          (\\<lambda>a.\n                              \\<integral>\\<^sup>+ x.\n             f \\<rho> <|x, op_sem Add <|a, op_sem Minus x|>|>\n           \\<partial>stock_measure (val_type a))\n 3. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : PRODUCT t t\n 4. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> op_type Add (PRODUCT t t) = Some t\n 5. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> free_vars (Add $$ e) \\<subseteq> V \\<union> V'", "show \"has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t) (?f \\<rho>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "proof (insert t_disj, elim disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))\n 2. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "assume t: \"t = REAL\""], ["proof (state)\nthis:\n  t = REAL\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))\n 2. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "let ?f'' = \"(\\<lambda>z. \\<integral>\\<^sup>+x. f \\<rho> (RealPairVal (x, z - x)) \\<partial>lborel) \\<circ> extract_real\""], ["proof (state)\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))\n 2. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "have \"has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t) ?f''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     ((\\<lambda>z.\n          \\<integral>\\<^sup>+ x. f \\<rho> (RealPairVal (x, z - x))\n                             \\<partial>lborel) \\<circ>\n      extract_real)", "using dens'"], ["proof (prove)\nusing this:\n  has_subprob_density M (stock_measure (PRODUCT t t)) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     ((\\<lambda>z.\n          \\<integral>\\<^sup>+ x. f \\<rho> (RealPairVal (x, z - x))\n                             \\<partial>lborel) \\<circ>\n      extract_real)", "by (simp only: t op_sem.simps, intro distr_lift_RealPairVal)\n            (simp_all add: borel_prod[symmetric] has_subprob_density_imp_has_density\n                           distr_convolution_real)"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n   ((\\<lambda>z.\n        \\<integral>\\<^sup>+ x. f \\<rho> (RealPairVal (x, z - x))\n                           \\<partial>lborel) \\<circ>\n    extract_real)\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))\n 2. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "also"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n   ((\\<lambda>z.\n        \\<integral>\\<^sup>+ x. f \\<rho> (RealPairVal (x, z - x))\n                           \\<partial>lborel) \\<circ>\n    extract_real)\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))\n 2. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "have \"?f'' = (\\<lambda>z. \\<integral>\\<^sup>+ x. f \\<rho> (RealPairVal (x, extract_real z - x)) \\<partial>lborel)\"\n        (is \"_ = ?f''\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        \\<integral>\\<^sup>+ x. f \\<rho> (RealPairVal (x, z - x))\n                           \\<partial>lborel) \\<circ>\n    extract_real =\n    (\\<lambda>z.\n        \\<integral>\\<^sup>+ x. f \\<rho>\n                                (RealPairVal (x, extract_real z - x))\n                           \\<partial>lborel)", "by (auto simp add: t space_embed_measure extract_real_def)"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      \\<integral>\\<^sup>+ x. f \\<rho> (RealPairVal (x, z - x))\n                         \\<partial>lborel) \\<circ>\n  extract_real =\n  (\\<lambda>z.\n      \\<integral>\\<^sup>+ x. f \\<rho> (RealPairVal (x, extract_real z - x))\n                         \\<partial>lborel)\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))\n 2. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "also"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      \\<integral>\\<^sup>+ x. f \\<rho> (RealPairVal (x, z - x))\n                         \\<partial>lborel) \\<circ>\n  extract_real =\n  (\\<lambda>z.\n      \\<integral>\\<^sup>+ x. f \\<rho> (RealPairVal (x, extract_real z - x))\n                         \\<partial>lborel)\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))\n 2. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "have \"\\<And>z. val_type z = REAL \\<Longrightarrow>\n          (\\<lambda>x. f \\<rho>  <|x, op_sem Add <|z, op_sem Minus x|>|>) \\<in> borel_measurable (stock_measure REAL)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       val_type z = REAL \\<Longrightarrow>\n       (\\<lambda>x. f \\<rho> <|x, op_sem Add <|z, op_sem Minus x|>|>)\n       \\<in> borel_measurable (stock_measure REAL)", "by (rule Mf[THEN measurable_compose_rev]) (simp add: t)"], ["proof (state)\nthis:\n  val_type ?z = REAL \\<Longrightarrow>\n  (\\<lambda>x. f \\<rho> <|x, op_sem Add <|?z, op_sem Minus x|>|>)\n  \\<in> borel_measurable (stock_measure REAL)\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))\n 2. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "hence \"has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t) ?f'' \\<longleftrightarrow>\n              has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t) (?f \\<rho>)\""], ["proof (prove)\nusing this:\n  val_type ?z = REAL \\<Longrightarrow>\n  (\\<lambda>x. f \\<rho> <|x, op_sem Add <|?z, op_sem Minus x|>|>)\n  \\<in> borel_measurable (stock_measure REAL)\n\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>z.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 (RealPairVal (x, extract_real z - x))\n                            \\<partial>lborel) =\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "by (intro has_density_cong, simp add: t space_embed_measure del: op_sem.simps)\n           (auto simp add: nn_integral_RealVal RealPairVal_def lift_RealIntVal2_def lift_RealIntVal_def val_type_eq_REAL)"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n   (\\<lambda>z.\n       \\<integral>\\<^sup>+ x. f \\<rho> (RealPairVal (x, extract_real z - x))\n                          \\<partial>lborel) =\n  has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n   (\\<lambda>a.\n       \\<integral>\\<^sup>+ x. f \\<rho>\n                               <|x, op_sem Add <|a, op_sem Minus x|>|>\n                          \\<partial>stock_measure (val_type a))\n\ngoal (2 subgoals):\n 1. t = REAL \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))\n 2. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "finally"], ["proof (chain)\npicking this:\n  has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n   (\\<lambda>a.\n       \\<integral>\\<^sup>+ x. f \\<rho>\n                               <|x, op_sem Add <|a, op_sem Minus x|>|>\n                          \\<partial>stock_measure (val_type a))", "show \"...\""], ["proof (prove)\nusing this:\n  has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n   (\\<lambda>a.\n       \\<integral>\\<^sup>+ x. f \\<rho>\n                               <|x, op_sem Add <|a, op_sem Minus x|>|>\n                          \\<partial>stock_measure (val_type a))\n\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "."], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n   (\\<lambda>a.\n       \\<integral>\\<^sup>+ x. f \\<rho>\n                               <|x, op_sem Add <|a, op_sem Minus x|>|>\n                          \\<partial>stock_measure (val_type a))\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "assume t: \"t = INTEG\""], ["proof (state)\nthis:\n  t = INTEG\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "let ?f'' = \"(\\<lambda>z. \\<integral>\\<^sup>+x. f \\<rho> (IntPairVal (x, z - x)) \\<partial>count_space UNIV) \\<circ> extract_int\""], ["proof (state)\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "have \"has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t) ?f''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     ((\\<lambda>z.\n          \\<integral>\\<^sup>+ x. f \\<rho> (IntPairVal (x, z - x))\n                             \\<partial>count_space UNIV) \\<circ>\n      extract_int)", "using dens'"], ["proof (prove)\nusing this:\n  has_subprob_density M (stock_measure (PRODUCT t t)) (f \\<rho>)\n\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     ((\\<lambda>z.\n          \\<integral>\\<^sup>+ x. f \\<rho> (IntPairVal (x, z - x))\n                             \\<partial>count_space UNIV) \\<circ>\n      extract_int)", "by (simp only: t op_sem.simps, intro distr_lift_IntPairVal)\n            (simp_all add: has_subprob_density_imp_has_density\n                           distr_convolution_ring_count_space)"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n   ((\\<lambda>z.\n        \\<integral>\\<^sup>+ x. f \\<rho> (IntPairVal (x, z - x))\n                           \\<partial>count_space UNIV) \\<circ>\n    extract_int)\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "also"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n   ((\\<lambda>z.\n        \\<integral>\\<^sup>+ x. f \\<rho> (IntPairVal (x, z - x))\n                           \\<partial>count_space UNIV) \\<circ>\n    extract_int)\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "have \"?f'' = (\\<lambda>z. \\<integral>\\<^sup>+ x. f \\<rho> (IntPairVal (x, extract_int z - x)) \\<partial>count_space UNIV)\"\n        (is \"_ = ?f''\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        \\<integral>\\<^sup>+ x. f \\<rho> (IntPairVal (x, z - x))\n                           \\<partial>count_space UNIV) \\<circ>\n    extract_int =\n    (\\<lambda>z.\n        \\<integral>\\<^sup>+ x. f \\<rho> (IntPairVal (x, extract_int z - x))\n                           \\<partial>count_space UNIV)", "by (auto simp add: t space_embed_measure extract_int_def)"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      \\<integral>\\<^sup>+ x. f \\<rho> (IntPairVal (x, z - x))\n                         \\<partial>count_space UNIV) \\<circ>\n  extract_int =\n  (\\<lambda>z.\n      \\<integral>\\<^sup>+ x. f \\<rho> (IntPairVal (x, extract_int z - x))\n                         \\<partial>count_space UNIV)\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "also"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      \\<integral>\\<^sup>+ x. f \\<rho> (IntPairVal (x, z - x))\n                         \\<partial>count_space UNIV) \\<circ>\n  extract_int =\n  (\\<lambda>z.\n      \\<integral>\\<^sup>+ x. f \\<rho> (IntPairVal (x, extract_int z - x))\n                         \\<partial>count_space UNIV)\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "have \"has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t) ?f'' \\<longleftrightarrow>\n              has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t) (?f \\<rho>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>z.\n         \\<integral>\\<^sup>+ x. f \\<rho> (IntPairVal (x, extract_int z - x))\n                            \\<partial>count_space UNIV) =\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "by (intro has_density_cong, simp add: t space_embed_measure del: op_sem.simps)\n            (auto simp:  nn_integral_IntVal IntPairVal_def val_type_eq_INTEG\n                          lift_RealIntVal2_def lift_RealIntVal_def)"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n   (\\<lambda>z.\n       \\<integral>\\<^sup>+ x. f \\<rho> (IntPairVal (x, extract_int z - x))\n                          \\<partial>count_space UNIV) =\n  has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n   (\\<lambda>a.\n       \\<integral>\\<^sup>+ x. f \\<rho>\n                               <|x, op_sem Add <|a, op_sem Minus x|>|>\n                          \\<partial>stock_measure (val_type a))\n\ngoal (1 subgoal):\n 1. t = INTEG \\<Longrightarrow>\n    has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "finally"], ["proof (chain)\npicking this:\n  has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n   (\\<lambda>a.\n       \\<integral>\\<^sup>+ x. f \\<rho>\n                               <|x, op_sem Add <|a, op_sem Minus x|>|>\n                          \\<partial>stock_measure (val_type a))", "show \"...\""], ["proof (prove)\nusing this:\n  has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n   (\\<lambda>a.\n       \\<integral>\\<^sup>+ x. f \\<rho>\n                               <|x, op_sem Add <|a, op_sem Minus x|>|>\n                          \\<partial>stock_measure (val_type a))\n\ngoal (1 subgoal):\n 1. has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n     (\\<lambda>a.\n         \\<integral>\\<^sup>+ x. f \\<rho>\n                                 <|x, op_sem Add <|a, op_sem Minus x|>|>\n                            \\<partial>stock_measure (val_type a))", "."], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n   (\\<lambda>a.\n       \\<integral>\\<^sup>+ x. f \\<rho>\n                               <|x, op_sem Add <|a, op_sem Minus x|>|>\n                          \\<partial>stock_measure (val_type a))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_density (distr M (stock_measure t) (op_sem Add)) (stock_measure t)\n   (\\<lambda>a.\n       \\<integral>\\<^sup>+ x. f \\<rho>\n                               <|x, op_sem Add <|a, op_sem Minus x|>|>\n                          \\<partial>stock_measure (val_type a))\n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> density_context V V' \\<Gamma> \\<delta>\n 2. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<turnstile> e : PRODUCT t t\n 3. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> op_type Add (PRODUCT t t) = Some t\n 4. \\<lbrakk>\\<Gamma> \\<turnstile> Add $$ e : t;\n     density_context V V' \\<Gamma> \\<delta>;\n     free_vars (Add $$ e) \\<subseteq> V \\<union> V';\n     \\<Y> \\<turnstile>\\<^sub>d e \\<Rightarrow> f;\n     \\<Gamma> \\<turnstile> e : PRODUCT t t;\n     op_type Add (PRODUCT t t) = Some t; t = REAL \\<or> t = INTEG\\<rbrakk>\n    \\<Longrightarrow> free_vars (Add $$ e) \\<subseteq> V \\<union> V'", "qed"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure \\<Y> \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> (Add $$ e)))\n   (stock_measure t)\n   (\\<lambda>a b.\n       \\<integral>\\<^sup>+ x. f a <|x, op_sem Add <|b, op_sem Minus x|>|>\n                          \\<partial>stock_measure (val_type b))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hd_cong:\n  assumes \"(V,V',\\<Gamma>,\\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\" \"density_context V V' \\<Gamma> \\<delta>\" \"\\<Gamma> \\<turnstile> e : t\" \"free_vars e \\<subseteq> V \\<union> V'\"\n  assumes \"\\<And>\\<rho> x. \\<rho> \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow> x \\<in> space (stock_measure t) \\<Longrightarrow> f \\<rho> x = f' \\<rho> x\"\n  shows \"(V,V',\\<Gamma>,\\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (V, V', \\<Gamma>, \\<delta>) \\<turnstile>\\<^sub>d e \\<Rightarrow> f'", "proof (rule hd_AE[OF assms(1,3) AE_I2[OF assms(5)]])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<rho> x.\n       \\<lbrakk>\\<rho> \\<in> space (state_measure V' \\<Gamma>);\n        x \\<in> space (stock_measure t)\\<rbrakk>\n       \\<Longrightarrow> \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n 2. \\<And>\\<rho> x.\n       \\<lbrakk>\\<rho> \\<in> space (state_measure V' \\<Gamma>);\n        x \\<in> space (stock_measure t)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> space (stock_measure t)\n 3. (\\<lambda>(\\<rho>, x). f' \\<rho> x)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "note dens = expr_has_density_sound_aux[OF assms(1,3,2,4)]"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure V' \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n\ngoal (3 subgoals):\n 1. \\<And>\\<rho> x.\n       \\<lbrakk>\\<rho> \\<in> space (state_measure V' \\<Gamma>);\n        x \\<in> space (stock_measure t)\\<rbrakk>\n       \\<Longrightarrow> \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n 2. \\<And>\\<rho> x.\n       \\<lbrakk>\\<rho> \\<in> space (state_measure V' \\<Gamma>);\n        x \\<in> space (stock_measure t)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> space (stock_measure t)\n 3. (\\<lambda>(\\<rho>, x). f' \\<rho> x)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "note dens' = has_parametrized_subprob_densityD[OF this]"], ["proof (state)\nthis:\n  ?x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) ?x \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) =\n  density (stock_measure t) (f ?x)\n  ?x \\<in> space (state_measure V' \\<Gamma>) \\<Longrightarrow>\n  subprob_space\n   (dens_ctxt_measure (V, V', \\<Gamma>, \\<delta>) ?x \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n  (\\<lambda>(\\<rho>, x). f \\<rho> x)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (3 subgoals):\n 1. \\<And>\\<rho> x.\n       \\<lbrakk>\\<rho> \\<in> space (state_measure V' \\<Gamma>);\n        x \\<in> space (stock_measure t)\\<rbrakk>\n       \\<Longrightarrow> \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n 2. \\<And>\\<rho> x.\n       \\<lbrakk>\\<rho> \\<in> space (state_measure V' \\<Gamma>);\n        x \\<in> space (stock_measure t)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> space (stock_measure t)\n 3. (\\<lambda>(\\<rho>, x). f' \\<rho> x)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "show \"(\\<lambda>(\\<rho>, x). f' \\<rho> x) \\<in> borel_measurable (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<rho>, x). f' \\<rho> x)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "using assms(5) dens'(3)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<rho> \\<in> space (state_measure V' \\<Gamma>);\n   ?x \\<in> space (stock_measure t)\\<rbrakk>\n  \\<Longrightarrow> f ?\\<rho> ?x = f' ?\\<rho> ?x\n  (\\<lambda>(\\<rho>, x). f \\<rho> x)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<rho>, x). f' \\<rho> x)\n    \\<in> borel_measurable\n           (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)", "by (subst measurable_cong[of _ _ \"case_prod f\"]) (auto simp: space_pair_measure)"], ["proof (state)\nthis:\n  (\\<lambda>(\\<rho>, x). f' \\<rho> x)\n  \\<in> borel_measurable\n         (state_measure V' \\<Gamma> \\<Otimes>\\<^sub>M stock_measure t)\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho> x.\n       \\<lbrakk>\\<rho> \\<in> space (state_measure V' \\<Gamma>);\n        x \\<in> space (stock_measure t)\\<rbrakk>\n       \\<Longrightarrow> \\<rho> \\<in> space (state_measure V' \\<Gamma>)\n 2. \\<And>\\<rho> x.\n       \\<lbrakk>\\<rho> \\<in> space (state_measure V' \\<Gamma>);\n        x \\<in> space (stock_measure t)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> space (stock_measure t)", "qed auto"], ["", "lemma prob_space_empty_dens_ctxt[simp]:\n  \"prob_space (dens_ctxt_measure ({},{},\\<Gamma>,(\\<lambda>_. 1)) (\\<lambda>_. undefined))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space\n     (dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1)\n       (\\<lambda>_. undefined))", "unfolding density_context_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space\n     (dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1)\n       (\\<lambda>_. undefined))", "by (auto simp: dens_ctxt_measure_def state_measure'_def state_measure_def\n                   emeasure_distr emeasure_density PiM_empty intro!: prob_spaceI)"], ["", "lemma branch_prob_empty_ctxt[simp]: \"branch_prob ({},{},\\<Gamma>,(\\<lambda>_. 1)) (\\<lambda>_. undefined) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. branch_prob ({}, {}, \\<Gamma>, \\<lambda>_. 1) (\\<lambda>_. undefined) =\n    1", "unfolding branch_prob_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure\n     (dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1)\n       (\\<lambda>_. undefined))\n     (space\n       (dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1)\n         (\\<lambda>_. undefined))) =\n    1", "by (subst prob_space.emeasure_space_1) simp_all"], ["", "lemma expr_has_density_sound:\n  assumes \"({},{},\\<Gamma>,(\\<lambda>_. 1)) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\" \"\\<Gamma> \\<turnstile> e : t\" \"free_vars e = {}\"\n  shows \"has_subprob_density (expr_sem \\<sigma> e) (stock_measure t) (f (\\<lambda>_. undefined))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_subprob_density (expr_sem \\<sigma> e) (stock_measure t)\n     (f (\\<lambda>_. undefined))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. has_subprob_density (expr_sem \\<sigma> e) (stock_measure t)\n     (f (\\<lambda>_. undefined))", "let ?M = \"dens_ctxt_measure ({},{},\\<Gamma>,\\<lambda>_. 1) (\\<lambda>_. undefined)\""], ["proof (state)\ngoal (1 subgoal):\n 1. has_subprob_density (expr_sem \\<sigma> e) (stock_measure t)\n     (f (\\<lambda>_. undefined))", "have \"density_context {} {} \\<Gamma> (\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. density_context {} {} \\<Gamma> (\\<lambda>_. 1)", "unfolding density_context_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<forall>\\<rho>.\n         \\<rho> \\<in> space (state_measure {} \\<Gamma>) \\<longrightarrow>\n         subprob_space\n          (dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1)\n            \\<rho>)) \\<and>\n     finite {}) \\<and>\n    finite {} \\<and>\n    (\\<lambda>_. 1)\n    \\<in> borel_measurable (state_measure ({} \\<union> {}) \\<Gamma>) \\<and>\n    {} \\<inter> {} = {}", "by (auto simp: dens_ctxt_measure_def state_measure'_def state_measure_def\n                   emeasure_distr emeasure_density PiM_empty intro!: subprob_spaceI)"], ["proof (state)\nthis:\n  density_context {} {} \\<Gamma> (\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. has_subprob_density (expr_sem \\<sigma> e) (stock_measure t)\n     (f (\\<lambda>_. undefined))", "from expr_has_density_sound_aux[OF assms(1,2) this] assms(3)"], ["proof (chain)\npicking this:\n  free_vars e \\<subseteq> {} \\<union> {} \\<Longrightarrow>\n  has_parametrized_subprob_density (state_measure {} \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n  free_vars e = {}", "have \"has_parametrized_subprob_density (state_measure {} \\<Gamma>)\n              (\\<lambda>\\<rho>. dens_ctxt_measure ({},{},\\<Gamma>,\\<lambda>_. 1) \\<rho> \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)) (stock_measure t) f\""], ["proof (prove)\nusing this:\n  free_vars e \\<subseteq> {} \\<union> {} \\<Longrightarrow>\n  has_parametrized_subprob_density (state_measure {} \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n  free_vars e = {}\n\ngoal (1 subgoal):\n 1. has_parametrized_subprob_density (state_measure {} \\<Gamma>)\n     (\\<lambda>\\<rho>.\n         dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n         (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) f", "by blast"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure {} \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n\ngoal (1 subgoal):\n 1. has_subprob_density (expr_sem \\<sigma> e) (stock_measure t)\n     (f (\\<lambda>_. undefined))", "also"], ["proof (state)\nthis:\n  has_parametrized_subprob_density (state_measure {} \\<Gamma>)\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n\ngoal (1 subgoal):\n 1. has_subprob_density (expr_sem \\<sigma> e) (stock_measure t)\n     (f (\\<lambda>_. undefined))", "have \"state_measure {} \\<Gamma> = count_space {\\<lambda>_. undefined}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state_measure {} \\<Gamma> = count_space {\\<lambda>_. undefined}", "by (rule measure_eqI) (simp_all add: state_measure_def PiM_empty emeasure_density)"], ["proof (state)\nthis:\n  state_measure {} \\<Gamma> = count_space {\\<lambda>_. undefined}\n\ngoal (1 subgoal):\n 1. has_subprob_density (expr_sem \\<sigma> e) (stock_measure t)\n     (f (\\<lambda>_. undefined))", "finally"], ["proof (chain)\npicking this:\n  has_parametrized_subprob_density (count_space {\\<lambda>_. undefined})\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f", "have \"has_subprob_density (?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n                                 (stock_measure t) (f (\\<lambda>_. undefined))\""], ["proof (prove)\nusing this:\n  has_parametrized_subprob_density (count_space {\\<lambda>_. undefined})\n   (\\<lambda>\\<rho>.\n       dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1) \\<rho> \\<bind>\n       (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) f\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1)\n       (\\<lambda>_. undefined) \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (f (\\<lambda>_. undefined))", "unfolding has_parametrized_subprob_density_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>space (count_space {\\<lambda>_. undefined}).\n      has_subprob_density\n       (dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1) x \\<bind>\n        (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n       (stock_measure t) (f x)) \\<and>\n  (\\<lambda>(x, y). f x y)\n  \\<in> borel_measurable\n         (count_space {\\<lambda>_. undefined} \\<Otimes>\\<^sub>M\n          stock_measure t)\n\ngoal (1 subgoal):\n 1. has_subprob_density\n     (dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1)\n       (\\<lambda>_. undefined) \\<bind>\n      (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n     (stock_measure t) (f (\\<lambda>_. undefined))", "by simp"], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1)\n     (\\<lambda>_. undefined) \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f (\\<lambda>_. undefined))\n\ngoal (1 subgoal):\n 1. has_subprob_density (expr_sem \\<sigma> e) (stock_measure t)\n     (f (\\<lambda>_. undefined))", "also"], ["proof (state)\nthis:\n  has_subprob_density\n   (dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1)\n     (\\<lambda>_. undefined) \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e))\n   (stock_measure t) (f (\\<lambda>_. undefined))\n\ngoal (1 subgoal):\n 1. has_subprob_density (expr_sem \\<sigma> e) (stock_measure t)\n     (f (\\<lambda>_. undefined))", "from assms"], ["proof (chain)\npicking this:\n  ({}, {}, \\<Gamma>, \\<lambda>_. 1) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<Gamma> \\<turnstile> e : t\n  free_vars e = {}", "have \"(\\<lambda>\\<sigma>. expr_sem \\<sigma> e) \\<in> measurable (state_measure {} \\<Gamma>)\n                                                        (subprob_algebra (stock_measure t))\""], ["proof (prove)\nusing this:\n  ({}, {}, \\<Gamma>, \\<lambda>_. 1) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<Gamma> \\<turnstile> e : t\n  free_vars e = {}\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n    \\<in> state_measure {} \\<Gamma> \\<rightarrow>\\<^sub>M\n          subprob_algebra (stock_measure t)", "by (intro measurable_expr_sem) auto"], ["proof (state)\nthis:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> state_measure {} \\<Gamma> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure t)\n\ngoal (1 subgoal):\n 1. has_subprob_density (expr_sem \\<sigma> e) (stock_measure t)\n     (f (\\<lambda>_. undefined))", "hence \"?M \\<bind> (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) = expr_sem (\\<lambda>_. undefined) e\""], ["proof (prove)\nusing this:\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e)\n  \\<in> state_measure {} \\<Gamma> \\<rightarrow>\\<^sub>M\n        subprob_algebra (stock_measure t)\n\ngoal (1 subgoal):\n 1. dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1)\n     (\\<lambda>_. undefined) \\<bind>\n    (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) =\n    expr_sem (\\<lambda>_. undefined) e", "by (intro dens_ctxt_measure_empty_bind) (auto simp: state_measure_def PiM_empty)"], ["proof (state)\nthis:\n  dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1)\n   (\\<lambda>_. undefined) \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) =\n  expr_sem (\\<lambda>_. undefined) e\n\ngoal (1 subgoal):\n 1. has_subprob_density (expr_sem \\<sigma> e) (stock_measure t)\n     (f (\\<lambda>_. undefined))", "also"], ["proof (state)\nthis:\n  dens_ctxt_measure ({}, {}, \\<Gamma>, \\<lambda>_. 1)\n   (\\<lambda>_. undefined) \\<bind>\n  (\\<lambda>\\<sigma>. expr_sem \\<sigma> e) =\n  expr_sem (\\<lambda>_. undefined) e\n\ngoal (1 subgoal):\n 1. has_subprob_density (expr_sem \\<sigma> e) (stock_measure t)\n     (f (\\<lambda>_. undefined))", "from assms"], ["proof (chain)\npicking this:\n  ({}, {}, \\<Gamma>, \\<lambda>_. 1) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<Gamma> \\<turnstile> e : t\n  free_vars e = {}", "have \"... = expr_sem \\<sigma> e\""], ["proof (prove)\nusing this:\n  ({}, {}, \\<Gamma>, \\<lambda>_. 1) \\<turnstile>\\<^sub>d e \\<Rightarrow> f\n  \\<Gamma> \\<turnstile> e : t\n  free_vars e = {}\n\ngoal (1 subgoal):\n 1. expr_sem (\\<lambda>_. undefined) e = expr_sem \\<sigma> e", "by (intro expr_sem_eq_on_vars) auto"], ["proof (state)\nthis:\n  expr_sem (\\<lambda>_. undefined) e = expr_sem \\<sigma> e\n\ngoal (1 subgoal):\n 1. has_subprob_density (expr_sem \\<sigma> e) (stock_measure t)\n     (f (\\<lambda>_. undefined))", "finally"], ["proof (chain)\npicking this:\n  has_subprob_density (expr_sem \\<sigma> e) (stock_measure t)\n   (f (\\<lambda>_. undefined))", "show ?thesis"], ["proof (prove)\nusing this:\n  has_subprob_density (expr_sem \\<sigma> e) (stock_measure t)\n   (f (\\<lambda>_. undefined))\n\ngoal (1 subgoal):\n 1. has_subprob_density (expr_sem \\<sigma> e) (stock_measure t)\n     (f (\\<lambda>_. undefined))", "."], ["proof (state)\nthis:\n  has_subprob_density (expr_sem \\<sigma> e) (stock_measure t)\n   (f (\\<lambda>_. undefined))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}