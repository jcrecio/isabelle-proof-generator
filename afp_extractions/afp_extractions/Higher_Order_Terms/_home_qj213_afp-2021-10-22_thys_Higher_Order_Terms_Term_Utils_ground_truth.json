{"file_name": "/home/qj213/afp-2021-10-22/thys/Higher_Order_Terms/Term_Utils.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Higher_Order_Terms", "problem_names": ["lemma map2_elemE:\n  assumes \"z \\<in> set (map2 f xs ys)\"\n  obtains x y where \"x \\<in> set xs\" \"y \\<in> set ys\" \"z = f x y\"", "lemma map2_elemE1:\n  assumes \"length xs = length ys\" \"x \\<in> set xs\"\n  obtains y where \"y \\<in> set ys\" \"f x y \\<in> set (map2 f xs ys)\"", "lemma map2_elemE2:\n  assumes \"length xs = length ys\" \"y \\<in> set ys\"\n  obtains x where \"x \\<in> set xs\" \"f x y \\<in> set (map2 f xs ys)\"", "lemma map2_cong[fundef_cong]:\n  assumes \"xs1 = xs2\" \"ys1 = ys2\"\n  assumes fg: \"\\<And>x y. x \\<in> set xs1 \\<Longrightarrow> y \\<in> set ys1 \\<Longrightarrow> f x y = g x y\"\n  shows \"map2 f xs1 ys1 = map2 g xs2 ys2\"", "lemma option_bindE:\n  assumes \"x \\<bind> f = Some a\"\n  obtains x' where \"x = Some x'\"  \"f x' = Some a\"", "lemma rel_option_bind[intro]:\n  assumes \"rel_option R x y\" \"\\<And>a b. R a b \\<Longrightarrow> rel_option R (f a) (g b)\"\n  shows \"rel_option R (x \\<bind> f) (y \\<bind> g)\"", "lemma list_split:\n  assumes \"n < length xs\"\n  obtains xs\\<^sub>1 xs\\<^sub>2 where \"xs = xs\\<^sub>1 @ xs\\<^sub>2\" \"n = length xs\\<^sub>2\" \"0 < length xs\\<^sub>1\"", "lemma ffUnion_alt_def: \"x |\\<in>| ffUnion A \\<longleftrightarrow> fBex A (\\<lambda>X. x |\\<in>| X)\"", "lemma funion_image_bind_eq: \"ffUnion (f |`| M) = fbind M f\"", "lemma fbind_funion: \"fbind (M |\\<union>| N) f = fbind M f |\\<union>| fbind N f\"", "lemma ffUnion_least: \"fBall A (\\<lambda>X. X |\\<subseteq>| C) \\<Longrightarrow> ffUnion A |\\<subseteq>| C\"", "lemma fbind_iff: \"x |\\<in>| fbind S f \\<longleftrightarrow> (\\<exists>s. x |\\<in>| f s \\<and> s |\\<in>| S)\"", "lemma fBall_pred_weaken: \"(\\<And>x. x |\\<in>| M \\<Longrightarrow> P x \\<Longrightarrow> Q x) \\<Longrightarrow> fBall M P \\<Longrightarrow> fBall M Q\"", "lemma fmmap_fmupd[simp]:\n  \"fmmap f (fmupd k v m) = fmupd k (f v) (fmmap f m)\""], "translations": [["", "lemma map2_elemE:\n  assumes \"z \\<in> set (map2 f xs ys)\"\n  obtains x y where \"x \\<in> set xs\" \"y \\<in> set ys\" \"z = f x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<in> set xs; y \\<in> set ys; z = f x y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  z \\<in> set (Term_Utils.map2 f xs ys)\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<in> set xs; y \\<in> set ys; z = f x y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (induct f xs ys rule: map2.induct) auto"], ["", "lemma map2_elemE1:\n  assumes \"length xs = length ys\" \"x \\<in> set xs\"\n  obtains y where \"y \\<in> set ys\" \"f x y \\<in> set (map2 f xs ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> set ys;\n         f x y \\<in> set (Term_Utils.map2 f xs ys)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  length xs = length ys\n  x \\<in> set xs\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> set ys;\n         f x y \\<in> set (Term_Utils.map2 f xs ys)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (induct xs ys rule: list_induct2) auto"], ["", "lemma map2_elemE2:\n  assumes \"length xs = length ys\" \"y \\<in> set ys\"\n  obtains x where \"x \\<in> set xs\" \"f x y \\<in> set (map2 f xs ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> set xs;\n         f x y \\<in> set (Term_Utils.map2 f xs ys)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  length xs = length ys\n  y \\<in> set ys\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> set xs;\n         f x y \\<in> set (Term_Utils.map2 f xs ys)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (induct xs ys rule: list_induct2) auto"], ["", "lemma map2_cong[fundef_cong]:\n  assumes \"xs1 = xs2\" \"ys1 = ys2\"\n  assumes fg: \"\\<And>x y. x \\<in> set xs1 \\<Longrightarrow> y \\<in> set ys1 \\<Longrightarrow> f x y = g x y\"\n  shows \"map2 f xs1 ys1 = map2 g xs2 ys2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Term_Utils.map2 f xs1 ys1 = Term_Utils.map2 g xs2 ys2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Term_Utils.map2 f xs1 ys1 = Term_Utils.map2 g xs2 ys2", "have \"map2 f xs1 ys1 = map2 g xs1 ys1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Term_Utils.map2 f xs1 ys1 = Term_Utils.map2 g xs1 ys1", "using fg"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> set xs1; ?y \\<in> set ys1\\<rbrakk>\n  \\<Longrightarrow> f ?x ?y = g ?x ?y\n\ngoal (1 subgoal):\n 1. Term_Utils.map2 f xs1 ys1 = Term_Utils.map2 g xs1 ys1", "by (induction f xs1 ys1 rule: map2.induct) auto"], ["proof (state)\nthis:\n  Term_Utils.map2 f xs1 ys1 = Term_Utils.map2 g xs1 ys1\n\ngoal (1 subgoal):\n 1. Term_Utils.map2 f xs1 ys1 = Term_Utils.map2 g xs2 ys2", "with assms"], ["proof (chain)\npicking this:\n  xs1 = xs2\n  ys1 = ys2\n  \\<lbrakk>?x \\<in> set xs1; ?y \\<in> set ys1\\<rbrakk>\n  \\<Longrightarrow> f ?x ?y = g ?x ?y\n  Term_Utils.map2 f xs1 ys1 = Term_Utils.map2 g xs1 ys1", "show ?thesis"], ["proof (prove)\nusing this:\n  xs1 = xs2\n  ys1 = ys2\n  \\<lbrakk>?x \\<in> set xs1; ?y \\<in> set ys1\\<rbrakk>\n  \\<Longrightarrow> f ?x ?y = g ?x ?y\n  Term_Utils.map2 f xs1 ys1 = Term_Utils.map2 g xs1 ys1\n\ngoal (1 subgoal):\n 1. Term_Utils.map2 f xs1 ys1 = Term_Utils.map2 g xs2 ys2", "by simp"], ["proof (state)\nthis:\n  Term_Utils.map2 f xs1 ys1 = Term_Utils.map2 g xs2 ys2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma option_bindE:\n  assumes \"x \\<bind> f = Some a\"\n  obtains x' where \"x = Some x'\"  \"f x' = Some a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x = Some x'; f x' = Some a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  x \\<bind> f = Some a\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x = Some x'; f x' = Some a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases x) auto"], ["", "lemma rel_option_bind[intro]:\n  assumes \"rel_option R x y\" \"\\<And>a b. R a b \\<Longrightarrow> rel_option R (f a) (g b)\"\n  shows \"rel_option R (x \\<bind> f) (y \\<bind> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_option R (x \\<bind> f) (y \\<bind> g)", "using assms(1)"], ["proof (prove)\nusing this:\n  rel_option R x y\n\ngoal (1 subgoal):\n 1. rel_option R (x \\<bind> f) (y \\<bind> g)", "proof (cases rule: option.rel_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x = None; y = None\\<rbrakk>\n    \\<Longrightarrow> rel_option R (x \\<bind> f) (y \\<bind> g)\n 2. \\<And>xa ya.\n       \\<lbrakk>x = Some xa; y = Some ya; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_option R (x \\<bind> f) (y \\<bind> g)", "case None"], ["proof (state)\nthis:\n  x = None\n  y = None\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x = None; y = None\\<rbrakk>\n    \\<Longrightarrow> rel_option R (x \\<bind> f) (y \\<bind> g)\n 2. \\<And>xa ya.\n       \\<lbrakk>x = Some xa; y = Some ya; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_option R (x \\<bind> f) (y \\<bind> g)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = None\n  y = None\n\ngoal (1 subgoal):\n 1. rel_option R (x \\<bind> f) (y \\<bind> g)", "by simp"], ["proof (state)\nthis:\n  rel_option R (x \\<bind> f) (y \\<bind> g)\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>x = Some xa; y = Some ya; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_option R (x \\<bind> f) (y \\<bind> g)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>x = Some xa; y = Some ya; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_option R (x \\<bind> f) (y \\<bind> g)", "case (Some a b)"], ["proof (state)\nthis:\n  x = Some a\n  y = Some b\n  R a b\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>x = Some xa; y = Some ya; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_option R (x \\<bind> f) (y \\<bind> g)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = Some a\n  y = Some b\n  R a b\n\ngoal (1 subgoal):\n 1. rel_option R (x \\<bind> f) (y \\<bind> g)", "using assms(2)"], ["proof (prove)\nusing this:\n  x = Some a\n  y = Some b\n  R a b\n  R ?a ?b \\<Longrightarrow> rel_option R (f ?a) (g ?b)\n\ngoal (1 subgoal):\n 1. rel_option R (x \\<bind> f) (y \\<bind> g)", "by simp"], ["proof (state)\nthis:\n  rel_option R (x \\<bind> f) (y \\<bind> g)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma list_split:\n  assumes \"n < length xs\"\n  obtains xs\\<^sub>1 xs\\<^sub>2 where \"xs = xs\\<^sub>1 @ xs\\<^sub>2\" \"n = length xs\\<^sub>2\" \"0 < length xs\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xs\\<^sub>1 xs\\<^sub>2.\n        \\<lbrakk>xs = xs\\<^sub>1 @ xs\\<^sub>2; n = length xs\\<^sub>2;\n         0 < length xs\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<And>xs\\<^sub>1 xs\\<^sub>2.\n        \\<lbrakk>xs = xs\\<^sub>1 @ xs\\<^sub>2; n = length xs\\<^sub>2;\n         0 < length xs\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    xs = ?xs\\<^sub>12 @ ?xs\\<^sub>22\n 2. (\\<And>xs\\<^sub>1 xs\\<^sub>2.\n        \\<lbrakk>xs = xs\\<^sub>1 @ xs\\<^sub>2; n = length xs\\<^sub>2;\n         0 < length xs\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    n = length ?xs\\<^sub>22\n 3. (\\<And>xs\\<^sub>1 xs\\<^sub>2.\n        \\<lbrakk>xs = xs\\<^sub>1 @ xs\\<^sub>2; n = length xs\\<^sub>2;\n         0 < length xs\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    0 < length ?xs\\<^sub>12", "let ?xs\\<^sub>1 = \"take (length xs - n) xs\""], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<And>xs\\<^sub>1 xs\\<^sub>2.\n        \\<lbrakk>xs = xs\\<^sub>1 @ xs\\<^sub>2; n = length xs\\<^sub>2;\n         0 < length xs\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    xs = ?xs\\<^sub>12 @ ?xs\\<^sub>22\n 2. (\\<And>xs\\<^sub>1 xs\\<^sub>2.\n        \\<lbrakk>xs = xs\\<^sub>1 @ xs\\<^sub>2; n = length xs\\<^sub>2;\n         0 < length xs\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    n = length ?xs\\<^sub>22\n 3. (\\<And>xs\\<^sub>1 xs\\<^sub>2.\n        \\<lbrakk>xs = xs\\<^sub>1 @ xs\\<^sub>2; n = length xs\\<^sub>2;\n         0 < length xs\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    0 < length ?xs\\<^sub>12", "let ?xs\\<^sub>2 = \"drop (length xs - n) xs\""], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<And>xs\\<^sub>1 xs\\<^sub>2.\n        \\<lbrakk>xs = xs\\<^sub>1 @ xs\\<^sub>2; n = length xs\\<^sub>2;\n         0 < length xs\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    xs = ?xs\\<^sub>12 @ ?xs\\<^sub>22\n 2. (\\<And>xs\\<^sub>1 xs\\<^sub>2.\n        \\<lbrakk>xs = xs\\<^sub>1 @ xs\\<^sub>2; n = length xs\\<^sub>2;\n         0 < length xs\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    n = length ?xs\\<^sub>22\n 3. (\\<And>xs\\<^sub>1 xs\\<^sub>2.\n        \\<lbrakk>xs = xs\\<^sub>1 @ xs\\<^sub>2; n = length xs\\<^sub>2;\n         0 < length xs\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    0 < length ?xs\\<^sub>12", "show \"xs = ?xs\\<^sub>1 @ ?xs\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs = take (length xs - n) xs @ drop (length xs - n) xs", "by simp"], ["proof (state)\nthis:\n  xs = take (length xs - n) xs @ drop (length xs - n) xs\n\ngoal (2 subgoals):\n 1. (\\<And>xs\\<^sub>1 xs\\<^sub>2.\n        \\<lbrakk>xs = xs\\<^sub>1 @ xs\\<^sub>2; n = length xs\\<^sub>2;\n         0 < length xs\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    n = length (drop (length xs - n) xs)\n 2. (\\<And>xs\\<^sub>1 xs\\<^sub>2.\n        \\<lbrakk>xs = xs\\<^sub>1 @ xs\\<^sub>2; n = length xs\\<^sub>2;\n         0 < length xs\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    0 < length (take (length xs - n) xs)", "show \"n = length ?xs\\<^sub>2\" \"0 < length ?xs\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = length (drop (length xs - n) xs) &&&\n    0 < length (take (length xs - n) xs)", "using assms"], ["proof (prove)\nusing this:\n  n < length xs\n\ngoal (1 subgoal):\n 1. n = length (drop (length xs - n) xs) &&&\n    0 < length (take (length xs - n) xs)", "by auto"], ["proof (state)\nthis:\n  n = length (drop (length xs - n) xs)\n  0 < length (take (length xs - n) xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "context\n  includes fset.lifting\nbegin"], ["", "lemma ffUnion_alt_def: \"x |\\<in>| ffUnion A \\<longleftrightarrow> fBex A (\\<lambda>X. x |\\<in>| X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x |\\<in>| ffUnion A) = fBex A ((|\\<in>|) x)", "by transfer blast"], ["", "lemma funion_image_bind_eq: \"ffUnion (f |`| M) = fbind M f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ffUnion (f |`| M) = fbind M f", "by transfer auto"], ["", "lemma fbind_funion: \"fbind (M |\\<union>| N) f = fbind M f |\\<union>| fbind N f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fbind (M |\\<union>| N) f = fbind M f |\\<union>| fbind N f", "by transfer' auto"], ["", "lemma ffUnion_least: \"fBall A (\\<lambda>X. X |\\<subseteq>| C) \\<Longrightarrow> ffUnion A |\\<subseteq>| C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fBall A (\\<lambda>X. X |\\<subseteq>| C) \\<Longrightarrow>\n    ffUnion A |\\<subseteq>| C", "by transfer blast"], ["", "lemma fbind_iff: \"x |\\<in>| fbind S f \\<longleftrightarrow> (\\<exists>s. x |\\<in>| f s \\<and> s |\\<in>| S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x |\\<in>| fbind S f) = (\\<exists>s. x |\\<in>| f s \\<and> s |\\<in>| S)", "by transfer' auto"], ["", "lemma fBall_pred_weaken: \"(\\<And>x. x |\\<in>| M \\<Longrightarrow> P x \\<Longrightarrow> Q x) \\<Longrightarrow> fBall M P \\<Longrightarrow> fBall M Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>x |\\<in>| M; P x\\<rbrakk> \\<Longrightarrow> Q x;\n     fBall M P\\<rbrakk>\n    \\<Longrightarrow> fBall M Q", "by auto"], ["", "end"], ["", "lemma fmmap_fmupd[simp]:\n  \"fmmap f (fmupd k v m) = fmupd k (f v) (fmmap f m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmmap f (fmupd k v m) = fmupd k (f v) (fmmap f m)", "apply (rule fmap_ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       fmlookup (fmmap f (fmupd k v m)) x =\n       fmlookup (fmupd k (f v) (fmmap f m)) x", "by auto"], ["", "definition fmlookup_default :: \"('a, 'b) fmap \\<Rightarrow> ('a \\<Rightarrow> 'b) \\<Rightarrow> 'a \\<Rightarrow> 'b\" where\n\"fmlookup_default m f x = (case fmlookup m x of None \\<Rightarrow> f x | Some b \\<Rightarrow> b)\""], ["", "end"]]}