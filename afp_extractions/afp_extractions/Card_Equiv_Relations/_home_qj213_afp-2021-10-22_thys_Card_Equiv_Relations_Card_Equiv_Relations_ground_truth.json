{"file_name": "/home/qj213/afp-2021-10-22/thys/Card_Equiv_Relations/Card_Equiv_Relations.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Card_Equiv_Relations", "problem_names": ["lemma equiv_quotient_eq_quotient_on_UNIV:\n  assumes \"equiv A R\"\n  shows \"A // R = (UNIV // R) - {{}}\"", "lemma equiv_relation_of_partition_of:\n  assumes \"equiv A R\"\n  shows \"{(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X} = R\"", "lemma bij_betw_partition_of:\n  \"bij_betw (\\<lambda>R. A // R) {R. equiv A R} {P. partition_on A P}\"", "lemma bij_betw_partition_of_equiv_with_k_classes:\n  \"bij_betw (\\<lambda>R. A // R) {R. equiv A R \\<and> card (A // R) = k} {P. partition_on A P \\<and> card P = k}\"", "lemma finite_equiv:\n  assumes \"finite A\"\n  shows \"finite {R. equiv A R}\"", "theorem card_equiv_rel_eq_card_partitions:\n  \"card {R. equiv A R} = card {P. partition_on A P}\"", "theorem card_equiv_k_classes_eq_card_partitions_k_parts:\n  \"card {R. equiv A R \\<and> card (A // R) = k} = card {P. partition_on A P \\<and> card P = k}\""], "translations": [["", "lemma equiv_quotient_eq_quotient_on_UNIV:\n  assumes \"equiv A R\"\n  shows \"A // R = (UNIV // R) - {{}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A // R = UNIV // R - {{}}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. A // R \\<subseteq> UNIV // R - {{}}\n 2. UNIV // R - {{}} \\<subseteq> A // R", "show \"UNIV // R - {{}} \\<subseteq> A // R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV // R - {{}} \\<subseteq> A // R", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV // R - {{}} \\<Longrightarrow> x \\<in> A // R", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV // R - {{}} \\<Longrightarrow> x \\<in> A // R", "assume \"X \\<in> UNIV // R - {{}}\""], ["proof (state)\nthis:\n  X \\<in> UNIV // R - {{}}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV // R - {{}} \\<Longrightarrow> x \\<in> A // R", "from this"], ["proof (chain)\npicking this:\n  X \\<in> UNIV // R - {{}}", "obtain x where \"X = R `` {x}\" and \"X \\<noteq> {}\""], ["proof (prove)\nusing this:\n  X \\<in> UNIV // R - {{}}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>X = R `` {x}; X \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim!: quotientE)"], ["proof (state)\nthis:\n  X = R `` {x}\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV // R - {{}} \\<Longrightarrow> x \\<in> A // R", "from this"], ["proof (chain)\npicking this:\n  X = R `` {x}\n  X \\<noteq> {}", "have \"x \\<in> A\""], ["proof (prove)\nusing this:\n  X = R `` {x}\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. x \\<in> A", "using \\<open>equiv A R\\<close> equiv_class_eq_iff"], ["proof (prove)\nusing this:\n  X = R `` {x}\n  X \\<noteq> {}\n  equiv A R\n  equiv ?A ?r \\<Longrightarrow>\n  ((?x, ?y) \\<in> ?r) =\n  (?r `` {?x} = ?r `` {?y} \\<and> ?x \\<in> ?A \\<and> ?y \\<in> ?A)\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by fastforce"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV // R - {{}} \\<Longrightarrow> x \\<in> A // R", "from this \\<open>X = R `` {x}\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> A\n  X = R `` {x}", "show \"X \\<in> A // R\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  X = R `` {x}\n\ngoal (1 subgoal):\n 1. X \\<in> A // R", "by (auto intro!: quotientI)"], ["proof (state)\nthis:\n  X \\<in> A // R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  UNIV // R - {{}} \\<subseteq> A // R\n\ngoal (1 subgoal):\n 1. A // R \\<subseteq> UNIV // R - {{}}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. A // R \\<subseteq> UNIV // R - {{}}", "show \"A // R \\<subseteq> UNIV // R - {{}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A // R \\<subseteq> UNIV // R - {{}}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A // R \\<Longrightarrow> x \\<in> UNIV // R - {{}}", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A // R \\<Longrightarrow> x \\<in> UNIV // R - {{}}", "assume \"X \\<in> A // R\""], ["proof (state)\nthis:\n  X \\<in> A // R\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A // R \\<Longrightarrow> x \\<in> UNIV // R - {{}}", "from this"], ["proof (chain)\npicking this:\n  X \\<in> A // R", "have \"X \\<noteq> {}\""], ["proof (prove)\nusing this:\n  X \\<in> A // R\n\ngoal (1 subgoal):\n 1. X \\<noteq> {}", "using \\<open>equiv A R\\<close> in_quotient_imp_non_empty"], ["proof (prove)\nusing this:\n  X \\<in> A // R\n  equiv A R\n  \\<lbrakk>equiv ?A ?r; ?X \\<in> ?A // ?r\\<rbrakk>\n  \\<Longrightarrow> ?X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. X \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A // R \\<Longrightarrow> x \\<in> UNIV // R - {{}}", "moreover"], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A // R \\<Longrightarrow> x \\<in> UNIV // R - {{}}", "from \\<open>X \\<in> A // R\\<close>"], ["proof (chain)\npicking this:\n  X \\<in> A // R", "have \"X \\<in> UNIV // R\""], ["proof (prove)\nusing this:\n  X \\<in> A // R\n\ngoal (1 subgoal):\n 1. X \\<in> UNIV // R", "by (metis UNIV_I assms proj_Eps proj_preserves)"], ["proof (state)\nthis:\n  X \\<in> UNIV // R\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A // R \\<Longrightarrow> x \\<in> UNIV // R - {{}}", "ultimately"], ["proof (chain)\npicking this:\n  X \\<noteq> {}\n  X \\<in> UNIV // R", "show \"X \\<in> UNIV // R - {{}}\""], ["proof (prove)\nusing this:\n  X \\<noteq> {}\n  X \\<in> UNIV // R\n\ngoal (1 subgoal):\n 1. X \\<in> UNIV // R - {{}}", "by simp"], ["proof (state)\nthis:\n  X \\<in> UNIV // R - {{}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A // R \\<subseteq> UNIV // R - {{}}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Dedicated Facts for Bijection Proof\\<close>"], ["", "(* TODO: rename to fit Disjoint_Sets' naming scheme and move to Disjoint_Sets *)"], ["", "lemma equiv_relation_of_partition_of:\n  assumes \"equiv A R\"\n  shows \"{(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X} = R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X} = R", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}\n    \\<subseteq> R\n 2. R \\<subseteq> {(x, y).\n                   \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "show \"{(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X} \\<subseteq> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}\n    \\<subseteq> R", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {(x, y).\n                \\<exists>X\\<in>A // R.\n                   x \\<in> X \\<and> y \\<in> X} \\<Longrightarrow>\n       x \\<in> R", "fix xy"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {(x, y).\n                \\<exists>X\\<in>A // R.\n                   x \\<in> X \\<and> y \\<in> X} \\<Longrightarrow>\n       x \\<in> R", "assume \"xy \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}\""], ["proof (state)\nthis:\n  xy \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {(x, y).\n                \\<exists>X\\<in>A // R.\n                   x \\<in> X \\<and> y \\<in> X} \\<Longrightarrow>\n       x \\<in> R", "from this"], ["proof (chain)\npicking this:\n  xy \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "obtain x y and X where \"xy = (x, y)\"\n      and \"X \\<in> A // R\" and \"x \\<in> X\" \"y \\<in> X\""], ["proof (prove)\nusing this:\n  xy \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}\n\ngoal (1 subgoal):\n 1. (\\<And>x y X.\n        \\<lbrakk>xy = (x, y); X \\<in> A // R; x \\<in> X; y \\<in> X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xy = (x, y)\n  X \\<in> A // R\n  x \\<in> X\n  y \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {(x, y).\n                \\<exists>X\\<in>A // R.\n                   x \\<in> X \\<and> y \\<in> X} \\<Longrightarrow>\n       x \\<in> R", "from \\<open>X \\<in> A // R\\<close>"], ["proof (chain)\npicking this:\n  X \\<in> A // R", "obtain z where \"X = R `` {z}\""], ["proof (prove)\nusing this:\n  X \\<in> A // R\n\ngoal (1 subgoal):\n 1. (\\<And>z. X = R `` {z} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: quotientE)"], ["proof (state)\nthis:\n  X = R `` {z}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {(x, y).\n                \\<exists>X\\<in>A // R.\n                   x \\<in> X \\<and> y \\<in> X} \\<Longrightarrow>\n       x \\<in> R", "show \"xy \\<in> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xy \\<in> R", "using \\<open>xy = (x, y)\\<close> \\<open>X = R `` {z}\\<close> \\<open>x \\<in> X\\<close> \\<open>y \\<in> X\\<close> \\<open>equiv A R\\<close>"], ["proof (prove)\nusing this:\n  xy = (x, y)\n  X = R `` {z}\n  x \\<in> X\n  y \\<in> X\n  equiv A R\n\ngoal (1 subgoal):\n 1. xy \\<in> R", "by (simp add: equiv_class_eq_iff)"], ["proof (state)\nthis:\n  xy \\<in> R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X} \\<subseteq> R\n\ngoal (1 subgoal):\n 1. R \\<subseteq> {(x, y).\n                   \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. R \\<subseteq> {(x, y).\n                   \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "show \"R \\<subseteq> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<subseteq> {(x, y).\n                   \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> R \\<Longrightarrow>\n       x \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "fix xy"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> R \\<Longrightarrow>\n       x \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "assume \"xy \\<in> R\""], ["proof (state)\nthis:\n  xy \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> R \\<Longrightarrow>\n       x \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "obtain x y where \"xy = (x, y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y. xy = (x, y) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  xy = (x, y)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> R \\<Longrightarrow>\n       x \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "from \\<open>xy \\<in> R\\<close>"], ["proof (chain)\npicking this:\n  xy \\<in> R", "have \"(x, y) \\<in> R\""], ["proof (prove)\nusing this:\n  xy \\<in> R\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> R", "using \\<open>xy = (x, y)\\<close>"], ["proof (prove)\nusing this:\n  xy \\<in> R\n  xy = (x, y)\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> R", "by simp"], ["proof (state)\nthis:\n  (x, y) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> R \\<Longrightarrow>\n       x \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "have \"R `` {x} \\<in> A // R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R `` {x} \\<in> A // R", "using \\<open>equiv A R\\<close> \\<open>(x, y) \\<in> R\\<close>"], ["proof (prove)\nusing this:\n  equiv A R\n  (x, y) \\<in> R\n\ngoal (1 subgoal):\n 1. R `` {x} \\<in> A // R", "by (simp add: equiv_class_eq_iff quotientI)"], ["proof (state)\nthis:\n  R `` {x} \\<in> A // R\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> R \\<Longrightarrow>\n       x \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "moreover"], ["proof (state)\nthis:\n  R `` {x} \\<in> A // R\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> R \\<Longrightarrow>\n       x \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "have \"x \\<in> R `` {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> R `` {x}", "using \\<open>(x, y) \\<in> R\\<close> \\<open>equiv A R\\<close>"], ["proof (prove)\nusing this:\n  (x, y) \\<in> R\n  equiv A R\n\ngoal (1 subgoal):\n 1. x \\<in> R `` {x}", "by (meson equiv_class_eq_iff equiv_class_self)"], ["proof (state)\nthis:\n  x \\<in> R `` {x}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> R \\<Longrightarrow>\n       x \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "moreover"], ["proof (state)\nthis:\n  x \\<in> R `` {x}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> R \\<Longrightarrow>\n       x \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "have \"y \\<in> R `` {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> R `` {x}", "using \\<open>(x, y) \\<in> R\\<close> \\<open>equiv A R\\<close>"], ["proof (prove)\nusing this:\n  (x, y) \\<in> R\n  equiv A R\n\ngoal (1 subgoal):\n 1. y \\<in> R `` {x}", "by simp"], ["proof (state)\nthis:\n  y \\<in> R `` {x}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> R \\<Longrightarrow>\n       x \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "ultimately"], ["proof (chain)\npicking this:\n  R `` {x} \\<in> A // R\n  x \\<in> R `` {x}\n  y \\<in> R `` {x}", "have \"(x, y) \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}\""], ["proof (prove)\nusing this:\n  R `` {x} \\<in> A // R\n  x \\<in> R `` {x}\n  y \\<in> R `` {x}\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "by auto"], ["proof (state)\nthis:\n  (x, y) \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> R \\<Longrightarrow>\n       x \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "from this"], ["proof (chain)\npicking this:\n  (x, y) \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "show \"xy \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}\n\ngoal (1 subgoal):\n 1. xy \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "using \\<open>xy = (x, y)\\<close>"], ["proof (prove)\nusing this:\n  (x, y) \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}\n  xy = (x, y)\n\ngoal (1 subgoal):\n 1. xy \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}", "by simp"], ["proof (state)\nthis:\n  xy \\<in> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  R \\<subseteq> {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Bijection Proof\\<close>"], ["", "lemma bij_betw_partition_of:\n  \"bij_betw (\\<lambda>R. A // R) {R. equiv A R} {P. partition_on A P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw ((//) A) {R. equiv A R} {P. partition_on A P}", "proof (rule bij_betw_byWitness[where f'=\"\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{R. equiv A R}.\n       {(x, y). \\<exists>X\\<in>A // a. x \\<in> X \\<and> y \\<in> X} = a\n 2. \\<forall>a'\\<in>{P. partition_on A P}.\n       A // {(x, y). \\<exists>X\\<in>a'. x \\<in> X \\<and> y \\<in> X} = a'\n 3. (//) A ` {R. equiv A R} \\<subseteq> {P. partition_on A P}\n 4. (\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}) `\n    {P. partition_on A P}\n    \\<subseteq> {R. equiv A R}", "show \"\\<forall>R\\<in>{R. equiv A R}. {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X} = R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>R\\<in>{R. equiv A R}.\n       {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X} = R", "by (simp add: equiv_relation_of_partition_of)"], ["proof (state)\nthis:\n  \\<forall>R\\<in>{R. equiv A R}.\n     {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X} = R\n\ngoal (3 subgoals):\n 1. \\<forall>a'\\<in>{P. partition_on A P}.\n       A // {(x, y). \\<exists>X\\<in>a'. x \\<in> X \\<and> y \\<in> X} = a'\n 2. (//) A ` {R. equiv A R} \\<subseteq> {P. partition_on A P}\n 3. (\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}) `\n    {P. partition_on A P}\n    \\<subseteq> {R. equiv A R}", "show \"\\<forall>P\\<in>{P. partition_on A P}. A // {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X} = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P\\<in>{P. partition_on A P}.\n       A // {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X} = P", "by (simp add: partition_on_eq_quotient)"], ["proof (state)\nthis:\n  \\<forall>P\\<in>{P. partition_on A P}.\n     A // {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X} = P\n\ngoal (2 subgoals):\n 1. (//) A ` {R. equiv A R} \\<subseteq> {P. partition_on A P}\n 2. (\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}) `\n    {P. partition_on A P}\n    \\<subseteq> {R. equiv A R}", "show \"(\\<lambda>R. A // R) ` {R. equiv A R} \\<subseteq> {P. partition_on A P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (//) A ` {R. equiv A R} \\<subseteq> {P. partition_on A P}", "using partition_on_quotient"], ["proof (prove)\nusing this:\n  equiv ?A ?r \\<Longrightarrow> partition_on ?A (?A // ?r)\n\ngoal (1 subgoal):\n 1. (//) A ` {R. equiv A R} \\<subseteq> {P. partition_on A P}", "by auto"], ["proof (state)\nthis:\n  (//) A ` {R. equiv A R} \\<subseteq> {P. partition_on A P}\n\ngoal (1 subgoal):\n 1. (\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}) `\n    {P. partition_on A P}\n    \\<subseteq> {R. equiv A R}", "show \"(\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}) ` {P. partition_on A P} \\<subseteq> {R. equiv A R}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}) `\n    {P. partition_on A P}\n    \\<subseteq> {R. equiv A R}", "using equiv_partition_on"], ["proof (prove)\nusing this:\n  partition_on ?A ?P \\<Longrightarrow>\n  equiv ?A {(x, y). \\<exists>p\\<in>?P. x \\<in> p \\<and> y \\<in> p}\n\ngoal (1 subgoal):\n 1. (\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}) `\n    {P. partition_on A P}\n    \\<subseteq> {R. equiv A R}", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}) `\n  {P. partition_on A P}\n  \\<subseteq> {R. equiv A R}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bij_betw_partition_of_equiv_with_k_classes:\n  \"bij_betw (\\<lambda>R. A // R) {R. equiv A R \\<and> card (A // R) = k} {P. partition_on A P \\<and> card P = k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw ((//) A) {R. equiv A R \\<and> card (A // R) = k}\n     {P. partition_on A P \\<and> card P = k}", "proof (rule bij_betw_byWitness[where f'=\"\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{R. equiv A R \\<and> card (A // R) = k}.\n       {(x, y). \\<exists>X\\<in>A // a. x \\<in> X \\<and> y \\<in> X} = a\n 2. \\<forall>a'\\<in>{P. partition_on A P \\<and> card P = k}.\n       A // {(x, y). \\<exists>X\\<in>a'. x \\<in> X \\<and> y \\<in> X} = a'\n 3. (//) A ` {R. equiv A R \\<and> card (A // R) = k}\n    \\<subseteq> {P. partition_on A P \\<and> card P = k}\n 4. (\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}) `\n    {P. partition_on A P \\<and> card P = k}\n    \\<subseteq> {R. equiv A R \\<and> card (A // R) = k}", "show \"\\<forall>R\\<in>{R. equiv A R \\<and> card (A // R) = k}. {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X} = R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>R\\<in>{R. equiv A R \\<and> card (A // R) = k}.\n       {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X} = R", "by (auto simp add: equiv_relation_of_partition_of)"], ["proof (state)\nthis:\n  \\<forall>R\\<in>{R. equiv A R \\<and> card (A // R) = k}.\n     {(x, y). \\<exists>X\\<in>A // R. x \\<in> X \\<and> y \\<in> X} = R\n\ngoal (3 subgoals):\n 1. \\<forall>a'\\<in>{P. partition_on A P \\<and> card P = k}.\n       A // {(x, y). \\<exists>X\\<in>a'. x \\<in> X \\<and> y \\<in> X} = a'\n 2. (//) A ` {R. equiv A R \\<and> card (A // R) = k}\n    \\<subseteq> {P. partition_on A P \\<and> card P = k}\n 3. (\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}) `\n    {P. partition_on A P \\<and> card P = k}\n    \\<subseteq> {R. equiv A R \\<and> card (A // R) = k}", "show \"\\<forall>P\\<in>{P. partition_on A P \\<and> card P = k}. A // {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X} = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P\\<in>{P. partition_on A P \\<and> card P = k}.\n       A // {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X} = P", "by (auto simp add: partition_on_eq_quotient)"], ["proof (state)\nthis:\n  \\<forall>P\\<in>{P. partition_on A P \\<and> card P = k}.\n     A // {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X} = P\n\ngoal (2 subgoals):\n 1. (//) A ` {R. equiv A R \\<and> card (A // R) = k}\n    \\<subseteq> {P. partition_on A P \\<and> card P = k}\n 2. (\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}) `\n    {P. partition_on A P \\<and> card P = k}\n    \\<subseteq> {R. equiv A R \\<and> card (A // R) = k}", "show \"(\\<lambda>R. A // R) ` {R. equiv A R \\<and> card (A // R) = k} \\<subseteq> {P. partition_on A P \\<and> card P = k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (//) A ` {R. equiv A R \\<and> card (A // R) = k}\n    \\<subseteq> {P. partition_on A P \\<and> card P = k}", "using partition_on_quotient"], ["proof (prove)\nusing this:\n  equiv ?A ?r \\<Longrightarrow> partition_on ?A (?A // ?r)\n\ngoal (1 subgoal):\n 1. (//) A ` {R. equiv A R \\<and> card (A // R) = k}\n    \\<subseteq> {P. partition_on A P \\<and> card P = k}", "by auto"], ["proof (state)\nthis:\n  (//) A ` {R. equiv A R \\<and> card (A // R) = k}\n  \\<subseteq> {P. partition_on A P \\<and> card P = k}\n\ngoal (1 subgoal):\n 1. (\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}) `\n    {P. partition_on A P \\<and> card P = k}\n    \\<subseteq> {R. equiv A R \\<and> card (A // R) = k}", "show \"(\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}) ` {P. partition_on A P \\<and> card P = k} \\<subseteq> {R. equiv A R \\<and> card (A // R) = k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}) `\n    {P. partition_on A P \\<and> card P = k}\n    \\<subseteq> {R. equiv A R \\<and> card (A // R) = k}", "using equiv_partition_on"], ["proof (prove)\nusing this:\n  partition_on ?A ?P \\<Longrightarrow>\n  equiv ?A {(x, y). \\<exists>p\\<in>?P. x \\<in> p \\<and> y \\<in> p}\n\ngoal (1 subgoal):\n 1. (\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}) `\n    {P. partition_on A P \\<and> card P = k}\n    \\<subseteq> {R. equiv A R \\<and> card (A // R) = k}", "by (auto simp add: partition_on_eq_quotient)"], ["proof (state)\nthis:\n  (\\<lambda>P. {(x, y). \\<exists>X\\<in>P. x \\<in> X \\<and> y \\<in> X}) `\n  {P. partition_on A P \\<and> card P = k}\n  \\<subseteq> {R. equiv A R \\<and> card (A // R) = k}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Finiteness of Equivalence Relations\\<close>"], ["", "lemma finite_equiv:\n  assumes \"finite A\"\n  shows \"finite {R. equiv A R}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {R. equiv A R}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite {R. equiv A R}", "have \"bij_betw (\\<lambda>R. A // R) {R. equiv A R} {P. partition_on A P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw ((//) A) {R. equiv A R} {P. partition_on A P}", "by (rule bij_betw_partition_of)"], ["proof (state)\nthis:\n  bij_betw ((//) A) {R. equiv A R} {P. partition_on A P}\n\ngoal (1 subgoal):\n 1. finite {R. equiv A R}", "from this"], ["proof (chain)\npicking this:\n  bij_betw ((//) A) {R. equiv A R} {P. partition_on A P}", "show \"finite {R. equiv A R}\""], ["proof (prove)\nusing this:\n  bij_betw ((//) A) {R. equiv A R} {P. partition_on A P}\n\ngoal (1 subgoal):\n 1. finite {R. equiv A R}", "using \\<open>finite A\\<close> finitely_many_partition_on"], ["proof (prove)\nusing this:\n  bij_betw ((//) A) {R. equiv A R} {P. partition_on A P}\n  finite A\n  finite ?A \\<Longrightarrow> finite {P. partition_on ?A P}\n\ngoal (1 subgoal):\n 1. finite {R. equiv A R}", "by (simp add: bij_betw_finite)"], ["proof (state)\nthis:\n  finite {R. equiv A R}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Cardinality of Equivalence Relations\\<close>"], ["", "theorem card_equiv_rel_eq_card_partitions:\n  \"card {R. equiv A R} = card {P. partition_on A P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {R. equiv A R} = card {P. partition_on A P}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {R. equiv A R} = card {P. partition_on A P}", "have \"bij_betw (\\<lambda>R. A // R) {R. equiv A R} {P. partition_on A P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw ((//) A) {R. equiv A R} {P. partition_on A P}", "by (rule bij_betw_partition_of)"], ["proof (state)\nthis:\n  bij_betw ((//) A) {R. equiv A R} {P. partition_on A P}\n\ngoal (1 subgoal):\n 1. card {R. equiv A R} = card {P. partition_on A P}", "from this"], ["proof (chain)\npicking this:\n  bij_betw ((//) A) {R. equiv A R} {P. partition_on A P}", "show \"card {R. equiv A R} = card {P. partition_on A P}\""], ["proof (prove)\nusing this:\n  bij_betw ((//) A) {R. equiv A R} {P. partition_on A P}\n\ngoal (1 subgoal):\n 1. card {R. equiv A R} = card {P. partition_on A P}", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card {R. equiv A R} = card {P. partition_on A P}\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary card_equiv_rel_eq_Bell:\n  assumes \"finite A\"\n  shows \"card {R. equiv A R} = Bell (card A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {R. equiv A R} = Bell (card A)", "using assms Bell_altdef card_equiv_rel_eq_card_partitions"], ["proof (prove)\nusing this:\n  finite A\n  finite ?A \\<Longrightarrow> Bell (card ?A) = card {P. partition_on ?A P}\n  card {R. equiv ?A R} = card {P. partition_on ?A P}\n\ngoal (1 subgoal):\n 1. card {R. equiv A R} = Bell (card A)", "by force"], ["", "corollary card_equiv_rel_eq_sum_Stirling:\n  assumes \"finite A\"\n  shows \"card {R. equiv A R} = sum (Stirling (card A)) {..card A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {R. equiv A R} = sum (Stirling (card A)) {..card A}", "using assms card_equiv_rel_eq_Bell Bell_Stirling_eq"], ["proof (prove)\nusing this:\n  finite A\n  finite ?A \\<Longrightarrow> card {R. equiv ?A R} = Bell (card ?A)\n  Bell ?m = sum (Stirling ?m) {..?m}\n\ngoal (1 subgoal):\n 1. card {R. equiv A R} = sum (Stirling (card A)) {..card A}", "by simp"], ["", "theorem card_equiv_k_classes_eq_card_partitions_k_parts:\n  \"card {R. equiv A R \\<and> card (A // R) = k} = card {P. partition_on A P \\<and> card P = k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {R. equiv A R \\<and> card (A // R) = k} =\n    card {P. partition_on A P \\<and> card P = k}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {R. equiv A R \\<and> card (A // R) = k} =\n    card {P. partition_on A P \\<and> card P = k}", "have \"bij_betw (\\<lambda>R. A // R) {R. equiv A R \\<and> card (A // R) = k} {P. partition_on A P \\<and> card P = k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw ((//) A) {R. equiv A R \\<and> card (A // R) = k}\n     {P. partition_on A P \\<and> card P = k}", "by (rule bij_betw_partition_of_equiv_with_k_classes)"], ["proof (state)\nthis:\n  bij_betw ((//) A) {R. equiv A R \\<and> card (A // R) = k}\n   {P. partition_on A P \\<and> card P = k}\n\ngoal (1 subgoal):\n 1. card {R. equiv A R \\<and> card (A // R) = k} =\n    card {P. partition_on A P \\<and> card P = k}", "from this"], ["proof (chain)\npicking this:\n  bij_betw ((//) A) {R. equiv A R \\<and> card (A // R) = k}\n   {P. partition_on A P \\<and> card P = k}", "show \"card {R. equiv A R \\<and> card (A // R) = k} = card {P. partition_on A P \\<and> card P = k}\""], ["proof (prove)\nusing this:\n  bij_betw ((//) A) {R. equiv A R \\<and> card (A // R) = k}\n   {P. partition_on A P \\<and> card P = k}\n\ngoal (1 subgoal):\n 1. card {R. equiv A R \\<and> card (A // R) = k} =\n    card {P. partition_on A P \\<and> card P = k}", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card {R. equiv A R \\<and> card (A // R) = k} =\n  card {P. partition_on A P \\<and> card P = k}\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary\n  assumes \"finite A\"\n  shows \"card {R. equiv A R \\<and> card (A // R) = k} = Stirling (card A) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {R. equiv A R \\<and> card (A // R) = k} = Stirling (card A) k", "using card_equiv_k_classes_eq_card_partitions_k_parts\n  card_partition_on[OF \\<open>finite A\\<close>]"], ["proof (prove)\nusing this:\n  card {R. equiv ?A R \\<and> card (?A // R) = ?k} =\n  card {P. partition_on ?A P \\<and> card P = ?k}\n  card {P. partition_on A P \\<and> card P = ?k} = Stirling (card A) ?k\n\ngoal (1 subgoal):\n 1. card {R. equiv A R \\<and> card (A // R) = k} = Stirling (card A) k", "by metis"], ["", "end"]]}