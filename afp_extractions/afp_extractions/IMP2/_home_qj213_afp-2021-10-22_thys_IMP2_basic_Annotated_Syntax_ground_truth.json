{"file_name": "/home/qj213/afp-2021-10-22/thys/IMP2/basic/Annotated_Syntax.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/IMP2", "problem_names": ["lemmas annotate_whileI = WHILE_annotI_def[symmetric]", "lemmas annotate_whileRVI = WHILE_annotRVI_def[symmetric]", "lemmas annotate_whileVI = WHILE_annotVI_def[symmetric]", "lemma HT'_eq_HT: \"HT' \\<pi> P (\\<lambda>_. c) Q = HT \\<pi> P c Q\"", "lemma HT'_partial_eq_HT: \"HT'_partial \\<pi> P (\\<lambda>_. c) Q = HT_partial \\<pi> P c Q\"", "lemmas HT'_unfolds = HT'_eq_HT HT'_partial_eq_HT", "lemma HT'setI:    \n    assumes \"wf R\"\n    assumes RL: \"\\<And>f P c Q s\\<^sub>0. \\<lbrakk> HT'set_r (\\<lambda>f' s'. ((f' s'),(f s\\<^sub>0))\\<in>R ) \\<pi> \\<Theta>; (f,(P,c,Q))\\<in>\\<Theta>; P s\\<^sub>0 \\<rbrakk> \\<Longrightarrow> wp \\<pi> (c s\\<^sub>0) (Q s\\<^sub>0) s\\<^sub>0\"\n    shows \"HT'set \\<pi> \\<Theta>\"", "lemma HT'setD:\n    assumes \"HT'set \\<pi> (insert (f,(P,c,Q)) \\<Theta>)\"\n    shows \"HT' \\<pi> P c Q\" and \"HT'set \\<pi> \\<Theta>\""], "translations": [["", "lemmas annotate_whileI = WHILE_annotI_def[symmetric]"], ["", "definition WHILE_annotRVI :: \"'a rel \\<Rightarrow> (state \\<Rightarrow> 'a) \\<Rightarrow> (state \\<Rightarrow> bool) \\<Rightarrow> bexp \\<Rightarrow> com \\<Rightarrow> com\" \n      (\"(WHILE {_} {_} {_} _/ DO _)\"  [0, 0, 0, 0, 61] 61)\n    where [vcg_annotation_defs]: \"WHILE_annotRVI R V I \\<equiv> While\" for R V I"], ["", "lemmas annotate_whileRVI = WHILE_annotRVI_def[symmetric]"], ["", "definition WHILE_annotVI :: \"(state \\<Rightarrow> int) \\<Rightarrow> (state \\<Rightarrow> bool) \\<Rightarrow> bexp \\<Rightarrow> com \\<Rightarrow> com\" \n    (\"(WHILE {_} {_} _/ DO _)\"  [0, 0, 0, 61] 61)\n  where [vcg_annotation_defs]: \"WHILE_annotVI V I \\<equiv> While\" for V I"], ["", "lemmas annotate_whileVI = WHILE_annotVI_def[symmetric]"], ["", "subsection \\<open>Hoare-Triples for Annotated Commands\\<close>"], ["", "text \\<open>The command is a function from pre-state to command, as the annotations that are \n    contained in the command may depend on the pre-state!\\<close>"], ["", "type_synonym HT'_type = \"program \\<Rightarrow> (state \\<Rightarrow> bool) \\<Rightarrow> (state \\<Rightarrow> com) \\<Rightarrow> (state \\<Rightarrow> state\\<Rightarrow>bool) \\<Rightarrow> bool\""], ["", "definition HT'_partial :: HT'_type\n    where \"HT'_partial \\<pi> P c Q \\<equiv> (\\<forall>s\\<^sub>0. P s\\<^sub>0 \\<longrightarrow> wlp \\<pi> (c s\\<^sub>0) (Q s\\<^sub>0) s\\<^sub>0)\""], ["", "definition HT' :: HT'_type\n    where \"HT' \\<pi> P c Q \\<equiv> (\\<forall>s\\<^sub>0. P s\\<^sub>0 \\<longrightarrow> wp \\<pi> (c s\\<^sub>0) (Q s\\<^sub>0) s\\<^sub>0)\""], ["", "lemma HT'_eq_HT: \"HT' \\<pi> P (\\<lambda>_. c) Q = HT \\<pi> P c Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HT' \\<pi> P (\\<lambda>_. c) Q = HT \\<pi> P c Q", "unfolding HT_def HT'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s\\<^sub>0.\n        P s\\<^sub>0 \\<longrightarrow> wp \\<pi> c (Q s\\<^sub>0) s\\<^sub>0) =\n    (\\<forall>s\\<^sub>0.\n        P s\\<^sub>0 \\<longrightarrow> wp \\<pi> c (Q s\\<^sub>0) s\\<^sub>0)", ".."], ["", "lemma HT'_partial_eq_HT: \"HT'_partial \\<pi> P (\\<lambda>_. c) Q = HT_partial \\<pi> P c Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HT'_partial \\<pi> P (\\<lambda>_. c) Q = HT_partial \\<pi> P c Q", "unfolding HT_partial_def HT'_partial_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s\\<^sub>0.\n        P s\\<^sub>0 \\<longrightarrow> wlp \\<pi> c (Q s\\<^sub>0) s\\<^sub>0) =\n    (\\<forall>s\\<^sub>0.\n        P s\\<^sub>0 \\<longrightarrow> wlp \\<pi> c (Q s\\<^sub>0) s\\<^sub>0)", ".."], ["", "lemmas HT'_unfolds = HT'_eq_HT HT'_partial_eq_HT"], ["", "type_synonym 'a \\<Theta>elem_t = \"(state\\<Rightarrow>'a) \\<times> ((state \\<Rightarrow> bool) \\<times> (state \\<Rightarrow> com) \\<times> (state \\<Rightarrow> state\\<Rightarrow>bool))\""], ["", "definition HT'set :: \"program \\<Rightarrow> 'a \\<Theta>elem_t set \\<Rightarrow> bool\" where \"HT'set \\<pi> \\<Theta> \\<equiv> \\<forall>(n,(P,c,Q))\\<in>\\<Theta>. HT' \\<pi> P c Q\""], ["", "definition HT'set_r :: \"_ \\<Rightarrow> program \\<Rightarrow> 'a \\<Theta>elem_t set \\<Rightarrow> bool\" where \"HT'set_r r \\<pi> \\<Theta> \\<equiv> \\<forall>(n,(P,c,Q))\\<in>\\<Theta>. HT' \\<pi> (\\<lambda>s. r n s \\<and> P s) c Q\""], ["", "lemma HT'setI:    \n    assumes \"wf R\"\n    assumes RL: \"\\<And>f P c Q s\\<^sub>0. \\<lbrakk> HT'set_r (\\<lambda>f' s'. ((f' s'),(f s\\<^sub>0))\\<in>R ) \\<pi> \\<Theta>; (f,(P,c,Q))\\<in>\\<Theta>; P s\\<^sub>0 \\<rbrakk> \\<Longrightarrow> wp \\<pi> (c s\\<^sub>0) (Q s\\<^sub>0) s\\<^sub>0\"\n    shows \"HT'set \\<pi> \\<Theta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HT'set \\<pi> \\<Theta>", "unfolding HT'set_def HT'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>(n, P, c, Q)\\<in>\\<Theta>.\n       \\<forall>s\\<^sub>0.\n          P s\\<^sub>0 \\<longrightarrow>\n          wp \\<pi> (c s\\<^sub>0) (Q s\\<^sub>0) s\\<^sub>0", "proof clarsimp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa ab b s\\<^sub>0.\n       \\<lbrakk>(a, aa, ab, b) \\<in> \\<Theta>; aa s\\<^sub>0\\<rbrakk>\n       \\<Longrightarrow> wp \\<pi> (ab s\\<^sub>0) (b s\\<^sub>0) s\\<^sub>0", "fix f\\<^sub>0 P c Q s\\<^sub>0"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa ab b s\\<^sub>0.\n       \\<lbrakk>(a, aa, ab, b) \\<in> \\<Theta>; aa s\\<^sub>0\\<rbrakk>\n       \\<Longrightarrow> wp \\<pi> (ab s\\<^sub>0) (b s\\<^sub>0) s\\<^sub>0", "assume \"(f\\<^sub>0,(P,c,Q))\\<in>\\<Theta>\" \"P s\\<^sub>0\""], ["proof (state)\nthis:\n  (f\\<^sub>0, P, c, Q) \\<in> \\<Theta>\n  P s\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<And>a aa ab b s\\<^sub>0.\n       \\<lbrakk>(a, aa, ab, b) \\<in> \\<Theta>; aa s\\<^sub>0\\<rbrakk>\n       \\<Longrightarrow> wp \\<pi> (ab s\\<^sub>0) (b s\\<^sub>0) s\\<^sub>0", "with \\<open>wf R\\<close>"], ["proof (chain)\npicking this:\n  wf R\n  (f\\<^sub>0, P, c, Q) \\<in> \\<Theta>\n  P s\\<^sub>0", "show \"wp \\<pi> (c s\\<^sub>0) (Q s\\<^sub>0) s\\<^sub>0\""], ["proof (prove)\nusing this:\n  wf R\n  (f\\<^sub>0, P, c, Q) \\<in> \\<Theta>\n  P s\\<^sub>0\n\ngoal (1 subgoal):\n 1. wp \\<pi> (c s\\<^sub>0) (Q s\\<^sub>0) s\\<^sub>0", "proof (induction \"f\\<^sub>0 s\\<^sub>0\" arbitrary: f\\<^sub>0 c s\\<^sub>0 P Q)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f\\<^sub>0 s\\<^sub>0 c P Q.\n       \\<lbrakk>\\<And>f\\<^sub>0' s\\<^sub>0' c P Q.\n                   \\<lbrakk>(f\\<^sub>0' s\\<^sub>0', f\\<^sub>0 s\\<^sub>0)\n                            \\<in> R;\n                    (f\\<^sub>0', P, c, Q) \\<in> \\<Theta>;\n                    P s\\<^sub>0'\\<rbrakk>\n                   \\<Longrightarrow> wp \\<pi> (c s\\<^sub>0') (Q s\\<^sub>0')\ns\\<^sub>0';\n        (f\\<^sub>0, P, c, Q) \\<in> \\<Theta>; P s\\<^sub>0\\<rbrakk>\n       \\<Longrightarrow> wp \\<pi> (c s\\<^sub>0) (Q s\\<^sub>0) s\\<^sub>0", "case less"], ["proof (state)\nthis:\n  \\<lbrakk>(?f\\<^sub>0 ?s\\<^sub>0, f\\<^sub>0 s\\<^sub>0) \\<in> R;\n   (?f\\<^sub>0, ?P, ?c, ?Q) \\<in> \\<Theta>; ?P ?s\\<^sub>0\\<rbrakk>\n  \\<Longrightarrow> wp \\<pi> (?c ?s\\<^sub>0) (?Q ?s\\<^sub>0) ?s\\<^sub>0\n  (f\\<^sub>0, P, c, Q) \\<in> \\<Theta>\n  P s\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<And>f\\<^sub>0 s\\<^sub>0 c P Q.\n       \\<lbrakk>\\<And>f\\<^sub>0' s\\<^sub>0' c P Q.\n                   \\<lbrakk>(f\\<^sub>0' s\\<^sub>0', f\\<^sub>0 s\\<^sub>0)\n                            \\<in> R;\n                    (f\\<^sub>0', P, c, Q) \\<in> \\<Theta>;\n                    P s\\<^sub>0'\\<rbrakk>\n                   \\<Longrightarrow> wp \\<pi> (c s\\<^sub>0') (Q s\\<^sub>0')\ns\\<^sub>0';\n        (f\\<^sub>0, P, c, Q) \\<in> \\<Theta>; P s\\<^sub>0\\<rbrakk>\n       \\<Longrightarrow> wp \\<pi> (c s\\<^sub>0) (Q s\\<^sub>0) s\\<^sub>0", "note RL' = RL[of f\\<^sub>0 s\\<^sub>0 P, OF _ less.prems]"], ["proof (state)\nthis:\n  HT'set_r (\\<lambda>f' s'. (f' s', f\\<^sub>0 s\\<^sub>0) \\<in> R) \\<pi>\n   \\<Theta> \\<Longrightarrow>\n  wp \\<pi> (c s\\<^sub>0) (Q s\\<^sub>0) s\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<And>f\\<^sub>0 s\\<^sub>0 c P Q.\n       \\<lbrakk>\\<And>f\\<^sub>0' s\\<^sub>0' c P Q.\n                   \\<lbrakk>(f\\<^sub>0' s\\<^sub>0', f\\<^sub>0 s\\<^sub>0)\n                            \\<in> R;\n                    (f\\<^sub>0', P, c, Q) \\<in> \\<Theta>;\n                    P s\\<^sub>0'\\<rbrakk>\n                   \\<Longrightarrow> wp \\<pi> (c s\\<^sub>0') (Q s\\<^sub>0')\ns\\<^sub>0';\n        (f\\<^sub>0, P, c, Q) \\<in> \\<Theta>; P s\\<^sub>0\\<rbrakk>\n       \\<Longrightarrow> wp \\<pi> (c s\\<^sub>0) (Q s\\<^sub>0) s\\<^sub>0", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. wp \\<pi> (c s\\<^sub>0) (Q s\\<^sub>0) s\\<^sub>0", "apply (rule RL')"], ["proof (prove)\ngoal (1 subgoal):\n 1. HT'set_r (\\<lambda>f' s'. (f' s', f\\<^sub>0 s\\<^sub>0) \\<in> R) \\<pi>\n     \\<Theta>", "unfolding HT'set_r_def HT'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>(n, P, c, Q)\\<in>\\<Theta>.\n       \\<forall>s\\<^sub>0.\n          (n s\\<^sub>0, f\\<^sub>0 s\\<^sub>0) \\<in> R \\<and>\n          P s\\<^sub>0 \\<longrightarrow>\n          wp \\<pi> (c s\\<^sub>0) (Q s\\<^sub>0) s\\<^sub>0", "using less.hyps"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?f\\<^sub>0 ?s\\<^sub>0, f\\<^sub>0 s\\<^sub>0) \\<in> R;\n   (?f\\<^sub>0, ?P, ?c, ?Q) \\<in> \\<Theta>; ?P ?s\\<^sub>0\\<rbrakk>\n  \\<Longrightarrow> wp \\<pi> (?c ?s\\<^sub>0) (?Q ?s\\<^sub>0) ?s\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<forall>(n, P, c, Q)\\<in>\\<Theta>.\n       \\<forall>s\\<^sub>0.\n          (n s\\<^sub>0, f\\<^sub>0 s\\<^sub>0) \\<in> R \\<and>\n          P s\\<^sub>0 \\<longrightarrow>\n          wp \\<pi> (c s\\<^sub>0) (Q s\\<^sub>0) s\\<^sub>0", "by auto"], ["proof (state)\nthis:\n  wp \\<pi> (c s\\<^sub>0) (Q s\\<^sub>0) s\\<^sub>0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wp \\<pi> (c s\\<^sub>0) (Q s\\<^sub>0) s\\<^sub>0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HT'setD:\n    assumes \"HT'set \\<pi> (insert (f,(P,c,Q)) \\<Theta>)\"\n    shows \"HT' \\<pi> P c Q\" and \"HT'set \\<pi> \\<Theta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HT' \\<pi> P c Q &&& HT'set \\<pi> \\<Theta>", "using assms"], ["proof (prove)\nusing this:\n  HT'set \\<pi> (insert (f, P, c, Q) \\<Theta>)\n\ngoal (1 subgoal):\n 1. HT' \\<pi> P c Q &&& HT'set \\<pi> \\<Theta>", "unfolding HT'set_def"], ["proof (prove)\nusing this:\n  \\<forall>(n, P, c, Q)\\<in>insert (f, P, c, Q) \\<Theta>. HT' \\<pi> P c Q\n\ngoal (1 subgoal):\n 1. HT' \\<pi> P c Q &&& \\<forall>(n, P, c, Q)\\<in>\\<Theta>. HT' \\<pi> P c Q", "by auto"], ["", "end"]]}