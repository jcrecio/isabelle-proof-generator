{"file_name": "/home/qj213/afp-2021-10-22/thys/UpDown_Scheme/Down.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/UpDown_Scheme", "problem_names": ["lemma sparsegrid'_parents:\n  assumes b: \"b \\<in> sparsegrid' dm\" and p': \"p' \\<in> parents d b p\"\n  shows \"p' \\<in> sparsegrid' dm\"", "lemma down'_\\<beta>: \"\\<lbrakk> d < length b ; l + level b = lm ; b \\<in> sparsegrid' dm ; p \\<in> sparsegrid' dm \\<rbrakk> \\<Longrightarrow>\n  down' d l b fl fr \\<alpha> p = (if p \\<in> lgrid b {d} lm\n  then\n    (fl + (fr - fl) / 2 * (real_of_int (ix p d) / 2^(lv p d - lv b d) - real_of_int (ix b d) + 1)) / 2 ^ (lv p d + 1) +\n    (\\<Sum> p' \\<in> parents d b p. (\\<alpha> p') * l2_\\<phi> (p ! d) (p' ! d))\n  else \\<alpha> p)\"", "lemma down: assumes \"d < dm\" and p: \"p \\<in> sparsegrid dm lm\"\n  shows \"(down dm lm d \\<alpha>) p = (\\<Sum> p' \\<in> parents d (base {d} p) p. (\\<alpha> p') * l2_\\<phi> (p ! d) (p' ! d))\""], "translations": [["", "lemma sparsegrid'_parents:\n  assumes b: \"b \\<in> sparsegrid' dm\" and p': \"p' \\<in> parents d b p\"\n  shows \"p' \\<in> sparsegrid' dm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p' \\<in> sparsegrid' dm", "using assms parents_def sparsegrid'I"], ["proof (prove)\nusing this:\n  b \\<in> sparsegrid' dm\n  p' \\<in> parents d b p\n  parents ?d ?b ?p = {x \\<in> grid ?b {?d}. ?p \\<in> grid x {?d}}\n  \\<lbrakk>?b \\<in> sparsegrid' ?dm; ?p \\<in> grid ?b ?ds\\<rbrakk>\n  \\<Longrightarrow> ?p \\<in> sparsegrid' ?dm\n\ngoal (1 subgoal):\n 1. p' \\<in> sparsegrid' dm", "by auto"], ["", "lemma down'_\\<beta>: \"\\<lbrakk> d < length b ; l + level b = lm ; b \\<in> sparsegrid' dm ; p \\<in> sparsegrid' dm \\<rbrakk> \\<Longrightarrow>\n  down' d l b fl fr \\<alpha> p = (if p \\<in> lgrid b {d} lm\n  then\n    (fl + (fr - fl) / 2 * (real_of_int (ix p d) / 2^(lv p d - lv b d) - real_of_int (ix b d) + 1)) / 2 ^ (lv p d + 1) +\n    (\\<Sum> p' \\<in> parents d b p. (\\<alpha> p') * l2_\\<phi> (p ! d) (p' ! d))\n  else \\<alpha> p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d < length b; l + level b = lm; b \\<in> sparsegrid' dm;\n     p \\<in> sparsegrid' dm\\<rbrakk>\n    \\<Longrightarrow> down' d l b fl fr \\<alpha> p =\n                      (if p \\<in> lgrid b {d} lm\n                       then (fl +\n                             (fr - fl) / 2 *\n                             (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n                              real_of_int (ix b d) +\n                              1)) /\n                            2 ^ (lv p d + 1) +\n                            (\\<Sum>p'\\<in>parents d b p.\n                               \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                       else \\<alpha> p)", "proof (induct l arbitrary: b \\<alpha> fl fr p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b \\<alpha> fl fr p.\n       \\<lbrakk>d < length b; 0 + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d 0 b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)\n 2. \\<And>l b \\<alpha> fl fr p.\n       \\<lbrakk>\\<And>b \\<alpha> fl fr p.\n                   \\<lbrakk>d < length b; l + level b = lm;\n                    b \\<in> sparsegrid' dm; p \\<in> sparsegrid' dm\\<rbrakk>\n                   \\<Longrightarrow> down' d l b fl fr \\<alpha> p =\n                                     (if p \\<in> lgrid b {d} lm\nthen (fl +\n      (fr - fl) / 2 *\n      (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) - real_of_int (ix b d) +\n       1)) /\n     2 ^ (lv p d + 1) +\n     (\\<Sum>p'\\<in>parents d b p. \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\nelse \\<alpha> p);\n        d < length b; Suc l + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d (Suc l) b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)", "case (Suc l)"], ["proof (state)\nthis:\n  \\<lbrakk>d < length ?b; l + level ?b = lm; ?b \\<in> sparsegrid' dm;\n   ?p \\<in> sparsegrid' dm\\<rbrakk>\n  \\<Longrightarrow> down' d l ?b ?fl ?fr ?\\<alpha> ?p =\n                    (if ?p \\<in> lgrid ?b {d} lm\n                     then (?fl +\n                           (?fr - ?fl) / 2 *\n                           (real_of_int (ix ?p d) /\n                            2 ^ (lv ?p d - lv ?b d) -\n                            real_of_int (ix ?b d) +\n                            1)) /\n                          2 ^ (lv ?p d + 1) +\n                          (\\<Sum>p'\\<in>parents d ?b ?p.\n                             ?\\<alpha> p' * l2_\\<phi> (?p ! d) (p' ! d))\n                     else ?\\<alpha> ?p)\n  d < length b\n  Suc l + level b = lm\n  b \\<in> sparsegrid' dm\n  p \\<in> sparsegrid' dm\n\ngoal (2 subgoals):\n 1. \\<And>b \\<alpha> fl fr p.\n       \\<lbrakk>d < length b; 0 + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d 0 b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)\n 2. \\<And>l b \\<alpha> fl fr p.\n       \\<lbrakk>\\<And>b \\<alpha> fl fr p.\n                   \\<lbrakk>d < length b; l + level b = lm;\n                    b \\<in> sparsegrid' dm; p \\<in> sparsegrid' dm\\<rbrakk>\n                   \\<Longrightarrow> down' d l b fl fr \\<alpha> p =\n                                     (if p \\<in> lgrid b {d} lm\nthen (fl +\n      (fr - fl) / 2 *\n      (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) - real_of_int (ix b d) +\n       1)) /\n     2 ^ (lv p d + 1) +\n     (\\<Sum>p'\\<in>parents d b p. \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\nelse \\<alpha> p);\n        d < length b; Suc l + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d (Suc l) b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)", "let ?l = \"child b left d\" and ?r = \"child b right d\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b \\<alpha> fl fr p.\n       \\<lbrakk>d < length b; 0 + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d 0 b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)\n 2. \\<And>l b \\<alpha> fl fr p.\n       \\<lbrakk>\\<And>b \\<alpha> fl fr p.\n                   \\<lbrakk>d < length b; l + level b = lm;\n                    b \\<in> sparsegrid' dm; p \\<in> sparsegrid' dm\\<rbrakk>\n                   \\<Longrightarrow> down' d l b fl fr \\<alpha> p =\n                                     (if p \\<in> lgrid b {d} lm\nthen (fl +\n      (fr - fl) / 2 *\n      (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) - real_of_int (ix b d) +\n       1)) /\n     2 ^ (lv p d + 1) +\n     (\\<Sum>p'\\<in>parents d b p. \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\nelse \\<alpha> p);\n        d < length b; Suc l + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d (Suc l) b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)", "let ?result = \"((fl + fr) / 4 + (1 / 3) * (\\<alpha> b)) / 2 ^ (lv b d)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b \\<alpha> fl fr p.\n       \\<lbrakk>d < length b; 0 + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d 0 b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)\n 2. \\<And>l b \\<alpha> fl fr p.\n       \\<lbrakk>\\<And>b \\<alpha> fl fr p.\n                   \\<lbrakk>d < length b; l + level b = lm;\n                    b \\<in> sparsegrid' dm; p \\<in> sparsegrid' dm\\<rbrakk>\n                   \\<Longrightarrow> down' d l b fl fr \\<alpha> p =\n                                     (if p \\<in> lgrid b {d} lm\nthen (fl +\n      (fr - fl) / 2 *\n      (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) - real_of_int (ix b d) +\n       1)) /\n     2 ^ (lv p d + 1) +\n     (\\<Sum>p'\\<in>parents d b p. \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\nelse \\<alpha> p);\n        d < length b; Suc l + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d (Suc l) b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)", "let ?fm = \"(fl + fr) / 2 + (\\<alpha> b)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b \\<alpha> fl fr p.\n       \\<lbrakk>d < length b; 0 + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d 0 b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)\n 2. \\<And>l b \\<alpha> fl fr p.\n       \\<lbrakk>\\<And>b \\<alpha> fl fr p.\n                   \\<lbrakk>d < length b; l + level b = lm;\n                    b \\<in> sparsegrid' dm; p \\<in> sparsegrid' dm\\<rbrakk>\n                   \\<Longrightarrow> down' d l b fl fr \\<alpha> p =\n                                     (if p \\<in> lgrid b {d} lm\nthen (fl +\n      (fr - fl) / 2 *\n      (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) - real_of_int (ix b d) +\n       1)) /\n     2 ^ (lv p d + 1) +\n     (\\<Sum>p'\\<in>parents d b p. \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\nelse \\<alpha> p);\n        d < length b; Suc l + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d (Suc l) b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)", "let ?down_l = \"down' d l (child b left d) fl ?fm (\\<alpha>(b := ?result))\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b \\<alpha> fl fr p.\n       \\<lbrakk>d < length b; 0 + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d 0 b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)\n 2. \\<And>l b \\<alpha> fl fr p.\n       \\<lbrakk>\\<And>b \\<alpha> fl fr p.\n                   \\<lbrakk>d < length b; l + level b = lm;\n                    b \\<in> sparsegrid' dm; p \\<in> sparsegrid' dm\\<rbrakk>\n                   \\<Longrightarrow> down' d l b fl fr \\<alpha> p =\n                                     (if p \\<in> lgrid b {d} lm\nthen (fl +\n      (fr - fl) / 2 *\n      (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) - real_of_int (ix b d) +\n       1)) /\n     2 ^ (lv p d + 1) +\n     (\\<Sum>p'\\<in>parents d b p. \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\nelse \\<alpha> p);\n        d < length b; Suc l + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d (Suc l) b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)", "have \"length b = dm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length b = dm", "using \\<open>b \\<in> sparsegrid' dm\\<close>"], ["proof (prove)\nusing this:\n  b \\<in> sparsegrid' dm\n\ngoal (1 subgoal):\n 1. length b = dm", "unfolding sparsegrid'_def start_def"], ["proof (prove)\nusing this:\n  b \\<in> grid (replicate dm (0, 1)) {0..<dm}\n\ngoal (1 subgoal):\n 1. length b = dm", "by auto"], ["proof (state)\nthis:\n  length b = dm\n\ngoal (2 subgoals):\n 1. \\<And>b \\<alpha> fl fr p.\n       \\<lbrakk>d < length b; 0 + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d 0 b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)\n 2. \\<And>l b \\<alpha> fl fr p.\n       \\<lbrakk>\\<And>b \\<alpha> fl fr p.\n                   \\<lbrakk>d < length b; l + level b = lm;\n                    b \\<in> sparsegrid' dm; p \\<in> sparsegrid' dm\\<rbrakk>\n                   \\<Longrightarrow> down' d l b fl fr \\<alpha> p =\n                                     (if p \\<in> lgrid b {d} lm\nthen (fl +\n      (fr - fl) / 2 *\n      (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) - real_of_int (ix b d) +\n       1)) /\n     2 ^ (lv p d + 1) +\n     (\\<Sum>p'\\<in>parents d b p. \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\nelse \\<alpha> p);\n        d < length b; Suc l + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d (Suc l) b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)", "hence \"d < dm\""], ["proof (prove)\nusing this:\n  length b = dm\n\ngoal (1 subgoal):\n 1. d < dm", "using \\<open>d < length b\\<close>"], ["proof (prove)\nusing this:\n  length b = dm\n  d < length b\n\ngoal (1 subgoal):\n 1. d < dm", "by auto"], ["proof (state)\nthis:\n  d < dm\n\ngoal (2 subgoals):\n 1. \\<And>b \\<alpha> fl fr p.\n       \\<lbrakk>d < length b; 0 + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d 0 b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)\n 2. \\<And>l b \\<alpha> fl fr p.\n       \\<lbrakk>\\<And>b \\<alpha> fl fr p.\n                   \\<lbrakk>d < length b; l + level b = lm;\n                    b \\<in> sparsegrid' dm; p \\<in> sparsegrid' dm\\<rbrakk>\n                   \\<Longrightarrow> down' d l b fl fr \\<alpha> p =\n                                     (if p \\<in> lgrid b {d} lm\nthen (fl +\n      (fr - fl) / 2 *\n      (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) - real_of_int (ix b d) +\n       1)) /\n     2 ^ (lv p d + 1) +\n     (\\<Sum>p'\\<in>parents d b p. \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\nelse \\<alpha> p);\n        d < length b; Suc l + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d (Suc l) b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)", "have \"!!dir. d < length (child b dir d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>dir. d < length (child b dir d)", "using \\<open>d < length b\\<close>"], ["proof (prove)\nusing this:\n  d < length b\n\ngoal (1 subgoal):\n 1. \\<And>dir. d < length (child b dir d)", "by auto"], ["proof (state)\nthis:\n  d < length (child b ?dir d)\n\ngoal (2 subgoals):\n 1. \\<And>b \\<alpha> fl fr p.\n       \\<lbrakk>d < length b; 0 + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d 0 b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)\n 2. \\<And>l b \\<alpha> fl fr p.\n       \\<lbrakk>\\<And>b \\<alpha> fl fr p.\n                   \\<lbrakk>d < length b; l + level b = lm;\n                    b \\<in> sparsegrid' dm; p \\<in> sparsegrid' dm\\<rbrakk>\n                   \\<Longrightarrow> down' d l b fl fr \\<alpha> p =\n                                     (if p \\<in> lgrid b {d} lm\nthen (fl +\n      (fr - fl) / 2 *\n      (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) - real_of_int (ix b d) +\n       1)) /\n     2 ^ (lv p d + 1) +\n     (\\<Sum>p'\\<in>parents d b p. \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\nelse \\<alpha> p);\n        d < length b; Suc l + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d (Suc l) b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)", "have \"!!dir. l + level (child b dir d) = lm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>dir. l + level (child b dir d) = lm", "using \\<open>d < length b\\<close> and \\<open>Suc l + level b = lm\\<close> and child_level"], ["proof (prove)\nusing this:\n  d < length b\n  Suc l + level b = lm\n  ?d < length ?p \\<Longrightarrow> level (child ?p ?dir ?d) = level ?p + 1\n\ngoal (1 subgoal):\n 1. \\<And>dir. l + level (child b dir d) = lm", "by auto"], ["proof (state)\nthis:\n  l + level (child b ?dir d) = lm\n\ngoal (2 subgoals):\n 1. \\<And>b \\<alpha> fl fr p.\n       \\<lbrakk>d < length b; 0 + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d 0 b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)\n 2. \\<And>l b \\<alpha> fl fr p.\n       \\<lbrakk>\\<And>b \\<alpha> fl fr p.\n                   \\<lbrakk>d < length b; l + level b = lm;\n                    b \\<in> sparsegrid' dm; p \\<in> sparsegrid' dm\\<rbrakk>\n                   \\<Longrightarrow> down' d l b fl fr \\<alpha> p =\n                                     (if p \\<in> lgrid b {d} lm\nthen (fl +\n      (fr - fl) / 2 *\n      (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) - real_of_int (ix b d) +\n       1)) /\n     2 ^ (lv p d + 1) +\n     (\\<Sum>p'\\<in>parents d b p. \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\nelse \\<alpha> p);\n        d < length b; Suc l + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d (Suc l) b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)", "have \"!!dir. (child b dir d) \\<in> sparsegrid' dm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>dir. child b dir d \\<in> sparsegrid' dm", "using \\<open>b \\<in> sparsegrid' dm\\<close> and \\<open>d < dm\\<close> and sparsegrid'_def"], ["proof (prove)\nusing this:\n  b \\<in> sparsegrid' dm\n  d < dm\n  sparsegrid' ?dm = grid (start ?dm) {0..<?dm}\n\ngoal (1 subgoal):\n 1. \\<And>dir. child b dir d \\<in> sparsegrid' dm", "by auto"], ["proof (state)\nthis:\n  child b ?dir d \\<in> sparsegrid' dm\n\ngoal (2 subgoals):\n 1. \\<And>b \\<alpha> fl fr p.\n       \\<lbrakk>d < length b; 0 + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d 0 b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)\n 2. \\<And>l b \\<alpha> fl fr p.\n       \\<lbrakk>\\<And>b \\<alpha> fl fr p.\n                   \\<lbrakk>d < length b; l + level b = lm;\n                    b \\<in> sparsegrid' dm; p \\<in> sparsegrid' dm\\<rbrakk>\n                   \\<Longrightarrow> down' d l b fl fr \\<alpha> p =\n                                     (if p \\<in> lgrid b {d} lm\nthen (fl +\n      (fr - fl) / 2 *\n      (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) - real_of_int (ix b d) +\n       1)) /\n     2 ^ (lv p d + 1) +\n     (\\<Sum>p'\\<in>parents d b p. \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\nelse \\<alpha> p);\n        d < length b; Suc l + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d (Suc l) b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)", "note hyps = Suc.hyps[OF \\<open>!! dir. d < length (child b dir d)\\<close>\n    \\<open>!!dir. l + level (child b dir d) = lm\\<close>\n    \\<open>!!dir. (child b dir d) \\<in> sparsegrid' dm\\<close>]"], ["proof (state)\nthis:\n  ?p \\<in> sparsegrid' dm \\<Longrightarrow>\n  down' d l (child b ?dir1 d) ?fl ?fr ?\\<alpha> ?p =\n  (if ?p \\<in> lgrid (child b ?dir1 d) {d} lm\n   then (?fl +\n         (?fr - ?fl) / 2 *\n         (real_of_int (ix ?p d) / 2 ^ (lv ?p d - lv (child b ?dir1 d) d) -\n          real_of_int (ix (child b ?dir1 d) d) +\n          1)) /\n        2 ^ (lv ?p d + 1) +\n        (\\<Sum>p'\\<in>parents d (child b ?dir1 d) ?p.\n           ?\\<alpha> p' * l2_\\<phi> (?p ! d) (p' ! d))\n   else ?\\<alpha> ?p)\n\ngoal (2 subgoals):\n 1. \\<And>b \\<alpha> fl fr p.\n       \\<lbrakk>d < length b; 0 + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d 0 b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)\n 2. \\<And>l b \\<alpha> fl fr p.\n       \\<lbrakk>\\<And>b \\<alpha> fl fr p.\n                   \\<lbrakk>d < length b; l + level b = lm;\n                    b \\<in> sparsegrid' dm; p \\<in> sparsegrid' dm\\<rbrakk>\n                   \\<Longrightarrow> down' d l b fl fr \\<alpha> p =\n                                     (if p \\<in> lgrid b {d} lm\nthen (fl +\n      (fr - fl) / 2 *\n      (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) - real_of_int (ix b d) +\n       1)) /\n     2 ^ (lv p d + 1) +\n     (\\<Sum>p'\\<in>parents d b p. \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\nelse \\<alpha> p);\n        d < length b; Suc l + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d (Suc l) b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "proof (cases \"p \\<in> lgrid b {d} lm\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p \\<in> lgrid b {d} lm \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. p \\<notin> lgrid b {d} lm \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "case False"], ["proof (state)\nthis:\n  p \\<notin> lgrid b {d} lm\n\ngoal (2 subgoals):\n 1. p \\<in> lgrid b {d} lm \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. p \\<notin> lgrid b {d} lm \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "moreover"], ["proof (state)\nthis:\n  p \\<notin> lgrid b {d} lm\n\ngoal (2 subgoals):\n 1. p \\<in> lgrid b {d} lm \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. p \\<notin> lgrid b {d} lm \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "hence \"p \\<noteq> b\" and \"p \\<notin> lgrid ?l {d} lm\"\n       and \"p \\<notin> lgrid ?r {d} lm\""], ["proof (prove)\nusing this:\n  p \\<notin> lgrid b {d} lm\n\ngoal (1 subgoal):\n 1. p \\<noteq> b &&&\n    p \\<notin> lgrid (child b left d) {d} lm &&&\n    p \\<notin> lgrid (child b right d) {d} lm", "unfolding lgrid_def"], ["proof (prove)\nusing this:\n  p \\<notin> {p \\<in> grid b {d}. level p < lm}\n\ngoal (1 subgoal):\n 1. p \\<noteq> b &&&\n    p \\<notin> {p \\<in> grid (child b left d) {d}. level p < lm} &&&\n    p \\<notin> {p \\<in> grid (child b right d) {d}. level p < lm}", "unfolding grid_partition[where p=b]"], ["proof (prove)\nusing this:\n  p \\<notin> {p \\<in> {b} \\<union> grid (child b left d) {d} \\<union>\n                      grid (child b right d) {d}.\n              level p < lm}\n\ngoal (1 subgoal):\n 1. p \\<noteq> b &&&\n    p \\<notin> {p \\<in> grid (child b left d) {d}. level p < lm} &&&\n    p \\<notin> {p \\<in> grid (child b right d) {d}. level p < lm}", "using \\<open>Suc l + level b = lm\\<close>"], ["proof (prove)\nusing this:\n  p \\<notin> {p \\<in> {b} \\<union> grid (child b left d) {d} \\<union>\n                      grid (child b right d) {d}.\n              level p < lm}\n  Suc l + level b = lm\n\ngoal (1 subgoal):\n 1. p \\<noteq> b &&&\n    p \\<notin> {p \\<in> grid (child b left d) {d}. level p < lm} &&&\n    p \\<notin> {p \\<in> grid (child b right d) {d}. level p < lm}", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> b\n  p \\<notin> lgrid (child b left d) {d} lm\n  p \\<notin> lgrid (child b right d) {d} lm\n\ngoal (2 subgoals):\n 1. p \\<in> lgrid b {d} lm \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. p \\<notin> lgrid b {d} lm \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "ultimately"], ["proof (chain)\npicking this:\n  p \\<notin> lgrid b {d} lm\n  p \\<noteq> b\n  p \\<notin> lgrid (child b left d) {d} lm\n  p \\<notin> lgrid (child b right d) {d} lm", "show ?thesis"], ["proof (prove)\nusing this:\n  p \\<notin> lgrid b {d} lm\n  p \\<noteq> b\n  p \\<notin> lgrid (child b left d) {d} lm\n  p \\<notin> lgrid (child b right d) {d} lm\n\ngoal (1 subgoal):\n 1. down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "unfolding down'.simps Let_def fun_upd_def hyps[OF \\<open>p \\<in> sparsegrid' dm\\<close>]"], ["proof (prove)\nusing this:\n  p \\<notin> lgrid b {d} lm\n  p \\<noteq> b\n  p \\<notin> lgrid (child b left d) {d} lm\n  p \\<notin> lgrid (child b right d) {d} lm\n\ngoal (1 subgoal):\n 1. (if p \\<in> lgrid (child b right d) {d} lm\n     then ((fl + fr) / 2 + \\<alpha> b +\n           (fr - ((fl + fr) / 2 + \\<alpha> b)) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv (child b right d) d) -\n            real_of_int (ix (child b right d) d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d (child b right d) p.\n             down' d l (child b left d) fl ((fl + fr) / 2 + \\<alpha> b)\n              (\\<lambda>x.\n                  if x = b\n                  then ((fl + fr) / 4 + 1 / 3 * \\<alpha> b) / 2 ^ lv b d\n                  else \\<alpha> x)\n              p' *\n             l2_\\<phi> (p ! d) (p' ! d))\n     else if p \\<in> lgrid (child b left d) {d} lm\n          then (fl +\n                ((fl + fr) / 2 + \\<alpha> b - fl) / 2 *\n                (real_of_int (ix p d) /\n                 2 ^ (lv p d - lv (child b left d) d) -\n                 real_of_int (ix (child b left d) d) +\n                 1)) /\n               2 ^ (lv p d + 1) +\n               (\\<Sum>p'\\<in>parents d (child b left d) p.\n                  (if p' = b\n                   then ((fl + fr) / 4 + 1 / 3 * \\<alpha> b) / 2 ^ lv b d\n                   else \\<alpha> p') *\n                  l2_\\<phi> (p ! d) (p' ! d))\n          else if p = b\n               then ((fl + fr) / 4 + 1 / 3 * \\<alpha> b) / 2 ^ lv b d\n               else \\<alpha> p) =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "by auto"], ["proof (state)\nthis:\n  down' d (Suc l) b fl fr \\<alpha> p =\n  (if p \\<in> lgrid b {d} lm\n   then (fl +\n         (fr - fl) / 2 *\n         (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n          real_of_int (ix b d) +\n          1)) /\n        2 ^ (lv p d + 1) +\n        (\\<Sum>p'\\<in>parents d b p.\n           \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n   else \\<alpha> p)\n\ngoal (1 subgoal):\n 1. p \\<in> lgrid b {d} lm \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<in> lgrid b {d} lm \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "case True"], ["proof (state)\nthis:\n  p \\<in> lgrid b {d} lm\n\ngoal (1 subgoal):\n 1. p \\<in> lgrid b {d} lm \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "hence \"level p < lm\" and \"p \\<in> grid b {d}\""], ["proof (prove)\nusing this:\n  p \\<in> lgrid b {d} lm\n\ngoal (1 subgoal):\n 1. level p < lm &&& p \\<in> grid b {d}", "unfolding lgrid_def"], ["proof (prove)\nusing this:\n  p \\<in> {p \\<in> grid b {d}. level p < lm}\n\ngoal (1 subgoal):\n 1. level p < lm &&& p \\<in> grid b {d}", "by auto"], ["proof (state)\nthis:\n  level p < lm\n  p \\<in> grid b {d}\n\ngoal (1 subgoal):\n 1. p \\<in> lgrid b {d} lm \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "let ?lb = \"lv b d\"   and ?ib = \"real_of_int (ix b d)\""], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<in> lgrid b {d} lm \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "let ?lp   = \"lv p d\"  and ?ip   = \"real_of_int (ix p d)\""], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<in> lgrid b {d} lm \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "proof (cases \"\\<exists> dir. p \\<in> grid (child b dir d){d}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. \\<nexists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "case True"], ["proof (state)\nthis:\n  \\<exists>dir. p \\<in> grid (child b dir d) {d}\n\ngoal (2 subgoals):\n 1. \\<exists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. \\<nexists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "obtain dir where p_grid: \"p \\<in> grid (child b dir d) {d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>dir.\n        p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using True"], ["proof (prove)\nusing this:\n  \\<exists>dir. p \\<in> grid (child b dir d) {d}\n\ngoal (1 subgoal):\n 1. (\\<And>dir.\n        p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p \\<in> grid (child b dir d) {d}\n\ngoal (2 subgoals):\n 1. \\<exists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. \\<nexists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "hence \"p \\<in> lgrid (child b dir d) {d} lm\""], ["proof (prove)\nusing this:\n  p \\<in> grid (child b dir d) {d}\n\ngoal (1 subgoal):\n 1. p \\<in> lgrid (child b dir d) {d} lm", "using \\<open>level p < lm\\<close>"], ["proof (prove)\nusing this:\n  p \\<in> grid (child b dir d) {d}\n  level p < lm\n\ngoal (1 subgoal):\n 1. p \\<in> lgrid (child b dir d) {d} lm", "unfolding lgrid_def"], ["proof (prove)\nusing this:\n  p \\<in> grid (child b dir d) {d}\n  level p < lm\n\ngoal (1 subgoal):\n 1. p \\<in> {p \\<in> grid (child b dir d) {d}. level p < lm}", "by auto"], ["proof (state)\nthis:\n  p \\<in> lgrid (child b dir d) {d} lm\n\ngoal (2 subgoals):\n 1. \\<exists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. \\<nexists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "have \"lv b d < lv p d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lv b d < lv p d", "using child_lv[OF \\<open>d < length b\\<close>] and grid_single_level[OF p_grid \\<open>d < length (child b dir d)\\<close>]"], ["proof (prove)\nusing this:\n  lv (child b ?dir d) d = lv b d + 1\n  lv (child b dir d) d \\<le> lv p d\n\ngoal (1 subgoal):\n 1. lv b d < lv p d", "by auto"], ["proof (state)\nthis:\n  lv b d < lv p d\n\ngoal (2 subgoals):\n 1. \\<exists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. \\<nexists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "let ?ch = \"child b dir d\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. \\<nexists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "let ?ich = \"child b (inv dir) d\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. \\<nexists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "proof (cases dir)"], ["proof (state)\ngoal (2 subgoals):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. dir = right \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "case right"], ["proof (state)\nthis:\n  dir = right\n\ngoal (2 subgoals):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. dir = right \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "hence \"p \\<in> lgrid ?r {d} lm\" and \"p \\<in> grid ?r {d}\""], ["proof (prove)\nusing this:\n  dir = right\n\ngoal (1 subgoal):\n 1. p \\<in> lgrid (child b right d) {d} lm &&&\n    p \\<in> grid (child b right d) {d}", "using \\<open>p \\<in> grid ?ch {d}\\<close> and \\<open>level p < lm\\<close>"], ["proof (prove)\nusing this:\n  dir = right\n  p \\<in> grid (child b dir d) {d}\n  level p < lm\n\ngoal (1 subgoal):\n 1. p \\<in> lgrid (child b right d) {d} lm &&&\n    p \\<in> grid (child b right d) {d}", "unfolding lgrid_def"], ["proof (prove)\nusing this:\n  dir = right\n  p \\<in> grid (child b dir d) {d}\n  level p < lm\n\ngoal (1 subgoal):\n 1. p \\<in> {p \\<in> grid (child b right d) {d}. level p < lm} &&&\n    p \\<in> grid (child b right d) {d}", "by auto"], ["proof (state)\nthis:\n  p \\<in> lgrid (child b right d) {d} lm\n  p \\<in> grid (child b right d) {d}\n\ngoal (2 subgoals):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. dir = right \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "{"], ["proof (state)\nthis:\n  p \\<in> lgrid (child b right d) {d} lm\n  p \\<in> grid (child b right d) {d}\n\ngoal (2 subgoals):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. dir = right \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "fix p'"], ["proof (state)\ngoal (2 subgoals):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. dir = right \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "fix fl fr x"], ["proof (state)\ngoal (2 subgoals):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fla__ fra__ \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fla__ +\n           (fra__ - fla__) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. dir = right \\<Longrightarrow>\n    down' d (Suc l) b fla__ fra__ \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fla__ +\n           (fra__ - fla__) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "assume p': \"p' \\<in> parents d (child b right d) p\""], ["proof (state)\nthis:\n  p' \\<in> parents d (child b right d) p\n\ngoal (2 subgoals):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fla__ fra__ \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fla__ +\n           (fra__ - fla__) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. dir = right \\<Longrightarrow>\n    down' d (Suc l) b fla__ fra__ \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fla__ +\n           (fra__ - fla__) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "hence \"p' \\<in> grid (child b right d) {d}\""], ["proof (prove)\nusing this:\n  p' \\<in> parents d (child b right d) p\n\ngoal (1 subgoal):\n 1. p' \\<in> grid (child b right d) {d}", "unfolding parents_def"], ["proof (prove)\nusing this:\n  p' \\<in> {x \\<in> grid (child b right d) {d}. p \\<in> grid x {d}}\n\ngoal (1 subgoal):\n 1. p' \\<in> grid (child b right d) {d}", "by simp"], ["proof (state)\nthis:\n  p' \\<in> grid (child b right d) {d}\n\ngoal (2 subgoals):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fla__ fra__ \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fla__ +\n           (fra__ - fla__) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. dir = right \\<Longrightarrow>\n    down' d (Suc l) b fla__ fra__ \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fla__ +\n           (fra__ - fla__) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "hence \"p' \\<notin> lgrid (child b left d) {d} lm\" and \"p' \\<noteq> b\""], ["proof (prove)\nusing this:\n  p' \\<in> grid (child b right d) {d}\n\ngoal (1 subgoal):\n 1. p' \\<notin> lgrid (child b left d) {d} lm &&& p' \\<noteq> b", "unfolding lgrid_def"], ["proof (prove)\nusing this:\n  p' \\<in> grid (child b right d) {d}\n\ngoal (1 subgoal):\n 1. p' \\<notin> {p \\<in> grid (child b left d) {d}. level p < lm} &&&\n    p' \\<noteq> b", "using grid_disjunct[OF \\<open>d < length b\\<close>] grid_not_child"], ["proof (prove)\nusing this:\n  p' \\<in> grid (child b right d) {d}\n  grid (child b left d) ?ds \\<inter> grid (child b right d) ?ds = {}\n  ?d < length ?p \\<Longrightarrow> ?p \\<notin> grid (child ?p ?dir ?d) ?ds\n\ngoal (1 subgoal):\n 1. p' \\<notin> {p \\<in> grid (child b left d) {d}. level p < lm} &&&\n    p' \\<noteq> b", "by auto"], ["proof (state)\nthis:\n  p' \\<notin> lgrid (child b left d) {d} lm\n  p' \\<noteq> b\n\ngoal (2 subgoals):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fla__ fra__ \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fla__ +\n           (fra__ - fla__) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. dir = right \\<Longrightarrow>\n    down' d (Suc l) b fla__ fra__ \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fla__ +\n           (fra__ - fla__) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "from hyps[OF sparsegrid'_parents[OF \\<open>child b right d \\<in> sparsegrid' dm\\<close>\n                       p']] this"], ["proof (chain)\npicking this:\n  down' d l (child b ?dir1 d) ?fl ?fr ?\\<alpha> p' =\n  (if p' \\<in> lgrid (child b ?dir1 d) {d} lm\n   then (?fl +\n         (?fr - ?fl) / 2 *\n         (real_of_int (ix p' d) / 2 ^ (lv p' d - lv (child b ?dir1 d) d) -\n          real_of_int (ix (child b ?dir1 d) d) +\n          1)) /\n        2 ^ (lv p' d + 1) +\n        (\\<Sum>p'a\\<in>parents d (child b ?dir1 d) p'.\n           ?\\<alpha> p'a * l2_\\<phi> (p' ! d) (p'a ! d))\n   else ?\\<alpha> p')\n  p' \\<notin> lgrid (child b left d) {d} lm\n  p' \\<noteq> b", "have \"down' d l (child b left d) fl fr (\\<alpha>(b := x)) p' = \\<alpha> p'\""], ["proof (prove)\nusing this:\n  down' d l (child b ?dir1 d) ?fl ?fr ?\\<alpha> p' =\n  (if p' \\<in> lgrid (child b ?dir1 d) {d} lm\n   then (?fl +\n         (?fr - ?fl) / 2 *\n         (real_of_int (ix p' d) / 2 ^ (lv p' d - lv (child b ?dir1 d) d) -\n          real_of_int (ix (child b ?dir1 d) d) +\n          1)) /\n        2 ^ (lv p' d + 1) +\n        (\\<Sum>p'a\\<in>parents d (child b ?dir1 d) p'.\n           ?\\<alpha> p'a * l2_\\<phi> (p' ! d) (p'a ! d))\n   else ?\\<alpha> p')\n  p' \\<notin> lgrid (child b left d) {d} lm\n  p' \\<noteq> b\n\ngoal (1 subgoal):\n 1. down' d l (child b left d) fl fr (\\<alpha>(b := x)) p' = \\<alpha> p'", "by auto"], ["proof (state)\nthis:\n  down' d l (child b left d) fl fr (\\<alpha>(b := x)) p' = \\<alpha> p'\n\ngoal (2 subgoals):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fla__ fra__ \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fla__ +\n           (fra__ - fla__) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. dir = right \\<Longrightarrow>\n    down' d (Suc l) b fla__ fra__ \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fla__ +\n           (fra__ - fla__) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "}"], ["proof (state)\nthis:\n  ?p'2 \\<in> parents d (child b right d) p \\<Longrightarrow>\n  down' d l (child b left d) ?flb2 ?frb2 (\\<alpha>(b := ?x2)) ?p'2 =\n  \\<alpha> ?p'2\n\ngoal (2 subgoals):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)\n 2. dir = right \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "thus  ?thesis"], ["proof (prove)\nusing this:\n  ?p'2 \\<in> parents d (child b right d) p \\<Longrightarrow>\n  down' d l (child b left d) ?flb2 ?frb2 (\\<alpha>(b := ?x2)) ?p'2 =\n  \\<alpha> ?p'2\n\ngoal (1 subgoal):\n 1. down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "unfolding down'.simps Let_def hyps[OF \\<open>p \\<in> sparsegrid' dm\\<close>]\n            parent_sum[OF \\<open>p \\<in> grid ?r {d}\\<close> \\<open>d < length b\\<close>]\n            l2_child[OF \\<open>d < length b\\<close> \\<open>p \\<in> grid ?r {d}\\<close>]"], ["proof (prove)\nusing this:\n  ?p'2 \\<in> parents d (child b right d) p \\<Longrightarrow>\n  down' d l (child b left d) ?flb2 ?frb2 (\\<alpha>(b := ?x2)) ?p'2 =\n  \\<alpha> ?p'2\n\ngoal (1 subgoal):\n 1. (if p \\<in> lgrid (child b right d) {d} lm\n     then ((fl + fr) / 2 + \\<alpha> b +\n           (fr - ((fl + fr) / 2 + \\<alpha> b)) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv (child b right d) d) -\n            real_of_int (ix (child b right d) d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d (child b right d) p.\n             down' d l (child b left d) fl ((fl + fr) / 2 + \\<alpha> b)\n              (\\<alpha>\n               (b := ((fl + fr) / 4 + 1 / 3 * \\<alpha> b) / 2 ^ lv b d))\n              p' *\n             l2_\\<phi> (p ! d) (p' ! d))\n     else if p \\<in> lgrid (child b left d) {d} lm\n          then (fl +\n                ((fl + fr) / 2 + \\<alpha> b - fl) / 2 *\n                (real_of_int (ix p d) /\n                 2 ^ (lv p d - lv (child b left d) d) -\n                 real_of_int (ix (child b left d) d) +\n                 1)) /\n               2 ^ (lv p d + 1) +\n               (\\<Sum>p'\\<in>parents d (child b left d) p.\n                  (\\<alpha>\n                   (b := ((fl + fr) / 4 + 1 / 3 * \\<alpha> b) / 2 ^ lv b d))\n                   p' *\n                  l2_\\<phi> (p ! d) (p' ! d))\n          else (\\<alpha>\n                (b := ((fl + fr) / 4 + 1 / 3 * \\<alpha> b) / 2 ^ lv b d))\n                p) =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<alpha> b *\n           ((1 -\n             real_of_int (Grid_Point.sgn right) *\n             (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n              real_of_int (ix b d))) /\n            2 ^ (lv p d + 1)) +\n           (\\<Sum>p'\\<in>parents d (child b right d) p.\n              \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d)))\n     else \\<alpha> p)", "using child_ix child_lv \\<open>d < length b\\<close> level_shift[OF \\<open>lv b d < lv p d\\<close>]\n                sgn.simps \\<open>p \\<in> lgrid b {d} lm\\<close> \\<open>p \\<in> lgrid ?r {d} lm\\<close>"], ["proof (prove)\nusing this:\n  ?p'2 \\<in> parents d (child b right d) p \\<Longrightarrow>\n  down' d l (child b left d) ?flb2 ?frb2 (\\<alpha>(b := ?x2)) ?p'2 =\n  \\<alpha> ?p'2\n  ?d < length ?p \\<Longrightarrow>\n  ix (child ?p ?dir ?d) ?d = 2 * ix ?p ?d + Grid_Point.sgn ?dir\n  ?d < length ?p \\<Longrightarrow> lv (child ?p ?dir ?d) ?d = lv ?p ?d + 1\n  d < length b\n  ?x / 2 ^ (lv p d - Suc (lv b d)) = ?x * 2 / 2 ^ (lv p d - lv b d)\n  Grid_Point.sgn left = - 1\n  Grid_Point.sgn right = 1\n  p \\<in> lgrid b {d} lm\n  p \\<in> lgrid (child b right d) {d} lm\n\ngoal (1 subgoal):\n 1. (if p \\<in> lgrid (child b right d) {d} lm\n     then ((fl + fr) / 2 + \\<alpha> b +\n           (fr - ((fl + fr) / 2 + \\<alpha> b)) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv (child b right d) d) -\n            real_of_int (ix (child b right d) d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d (child b right d) p.\n             down' d l (child b left d) fl ((fl + fr) / 2 + \\<alpha> b)\n              (\\<alpha>\n               (b := ((fl + fr) / 4 + 1 / 3 * \\<alpha> b) / 2 ^ lv b d))\n              p' *\n             l2_\\<phi> (p ! d) (p' ! d))\n     else if p \\<in> lgrid (child b left d) {d} lm\n          then (fl +\n                ((fl + fr) / 2 + \\<alpha> b - fl) / 2 *\n                (real_of_int (ix p d) /\n                 2 ^ (lv p d - lv (child b left d) d) -\n                 real_of_int (ix (child b left d) d) +\n                 1)) /\n               2 ^ (lv p d + 1) +\n               (\\<Sum>p'\\<in>parents d (child b left d) p.\n                  (\\<alpha>\n                   (b := ((fl + fr) / 4 + 1 / 3 * \\<alpha> b) / 2 ^ lv b d))\n                   p' *\n                  l2_\\<phi> (p ! d) (p' ! d))\n          else (\\<alpha>\n                (b := ((fl + fr) / 4 + 1 / 3 * \\<alpha> b) / 2 ^ lv b d))\n                p) =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<alpha> b *\n           ((1 -\n             real_of_int (Grid_Point.sgn right) *\n             (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n              real_of_int (ix b d))) /\n            2 ^ (lv p d + 1)) +\n           (\\<Sum>p'\\<in>parents d (child b right d) p.\n              \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d)))\n     else \\<alpha> p)", "by (auto simp add: algebra_simps diff_divide_distrib add_divide_distrib)"], ["proof (state)\nthis:\n  down' d (Suc l) b fl fr \\<alpha> p =\n  (if p \\<in> lgrid b {d} lm\n   then (fl +\n         (fr - fl) / 2 *\n         (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n          real_of_int (ix b d) +\n          1)) /\n        2 ^ (lv p d + 1) +\n        (\\<Sum>p'\\<in>parents d b p.\n           \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n   else \\<alpha> p)\n\ngoal (1 subgoal):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "case left"], ["proof (state)\nthis:\n  dir = left\n\ngoal (1 subgoal):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "hence \"p \\<in> lgrid ?l {d} lm\" and \"p \\<in> grid ?l {d}\""], ["proof (prove)\nusing this:\n  dir = left\n\ngoal (1 subgoal):\n 1. p \\<in> lgrid (child b left d) {d} lm &&&\n    p \\<in> grid (child b left d) {d}", "using \\<open>p \\<in> grid ?ch {d}\\<close> and \\<open>level p < lm\\<close>"], ["proof (prove)\nusing this:\n  dir = left\n  p \\<in> grid (child b dir d) {d}\n  level p < lm\n\ngoal (1 subgoal):\n 1. p \\<in> lgrid (child b left d) {d} lm &&&\n    p \\<in> grid (child b left d) {d}", "unfolding lgrid_def"], ["proof (prove)\nusing this:\n  dir = left\n  p \\<in> grid (child b dir d) {d}\n  level p < lm\n\ngoal (1 subgoal):\n 1. p \\<in> {p \\<in> grid (child b left d) {d}. level p < lm} &&&\n    p \\<in> grid (child b left d) {d}", "by auto"], ["proof (state)\nthis:\n  p \\<in> lgrid (child b left d) {d} lm\n  p \\<in> grid (child b left d) {d}\n\ngoal (1 subgoal):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "hence \"\\<not> p \\<in> lgrid ?r {d} lm\""], ["proof (prove)\nusing this:\n  p \\<in> lgrid (child b left d) {d} lm\n  p \\<in> grid (child b left d) {d}\n\ngoal (1 subgoal):\n 1. p \\<notin> lgrid (child b right d) {d} lm", "using grid_disjunct[OF \\<open>d < length b\\<close>]"], ["proof (prove)\nusing this:\n  p \\<in> lgrid (child b left d) {d} lm\n  p \\<in> grid (child b left d) {d}\n  grid (child b left d) ?ds \\<inter> grid (child b right d) ?ds = {}\n\ngoal (1 subgoal):\n 1. p \\<notin> lgrid (child b right d) {d} lm", "unfolding lgrid_def"], ["proof (prove)\nusing this:\n  p \\<in> {p \\<in> grid (child b left d) {d}. level p < lm}\n  p \\<in> grid (child b left d) {d}\n  grid (child b left d) ?ds \\<inter> grid (child b right d) ?ds = {}\n\ngoal (1 subgoal):\n 1. p \\<notin> {p \\<in> grid (child b right d) {d}. level p < lm}", "by auto"], ["proof (state)\nthis:\n  p \\<notin> lgrid (child b right d) {d} lm\n\ngoal (1 subgoal):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "{"], ["proof (state)\nthis:\n  p \\<notin> lgrid (child b right d) {d} lm\n\ngoal (1 subgoal):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "fix p'"], ["proof (state)\ngoal (1 subgoal):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "assume p': \"p' \\<in> parents d (child b left d) p\""], ["proof (state)\nthis:\n  p' \\<in> parents d (child b left d) p\n\ngoal (1 subgoal):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "hence \"p' \\<in> grid (child b left d) {d}\""], ["proof (prove)\nusing this:\n  p' \\<in> parents d (child b left d) p\n\ngoal (1 subgoal):\n 1. p' \\<in> grid (child b left d) {d}", "unfolding parents_def"], ["proof (prove)\nusing this:\n  p' \\<in> {x \\<in> grid (child b left d) {d}. p \\<in> grid x {d}}\n\ngoal (1 subgoal):\n 1. p' \\<in> grid (child b left d) {d}", "by simp"], ["proof (state)\nthis:\n  p' \\<in> grid (child b left d) {d}\n\ngoal (1 subgoal):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "hence \"p' \\<noteq> b\""], ["proof (prove)\nusing this:\n  p' \\<in> grid (child b left d) {d}\n\ngoal (1 subgoal):\n 1. p' \\<noteq> b", "using grid_not_child[OF \\<open>d < length b\\<close>]"], ["proof (prove)\nusing this:\n  p' \\<in> grid (child b left d) {d}\n  b \\<notin> grid (child b ?dir d) ?ds\n\ngoal (1 subgoal):\n 1. p' \\<noteq> b", "by auto"], ["proof (state)\nthis:\n  p' \\<noteq> b\n\ngoal (1 subgoal):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "}"], ["proof (state)\nthis:\n  ?p'2 \\<in> parents d (child b left d) p \\<Longrightarrow> ?p'2 \\<noteq> b\n\ngoal (1 subgoal):\n 1. dir = left \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?p'2 \\<in> parents d (child b left d) p \\<Longrightarrow> ?p'2 \\<noteq> b\n\ngoal (1 subgoal):\n 1. down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "unfolding down'.simps Let_def hyps[OF \\<open>p \\<in> sparsegrid' dm\\<close>]\n                    parent_sum[OF \\<open>p \\<in> grid ?l {d}\\<close> \\<open>d < length b\\<close>]\n                    l2_child[OF \\<open>d < length b\\<close> \\<open>p \\<in> grid ?l {d}\\<close>] sgn.simps\n                    if_P[OF \\<open>p \\<in> lgrid b {d} lm\\<close>] if_P[OF \\<open>p \\<in> lgrid ?l {d} lm\\<close>]\n                    if_not_P[OF \\<open>p \\<notin> lgrid ?r {d} lm\\<close>]"], ["proof (prove)\nusing this:\n  ?p'2 \\<in> parents d (child b left d) p \\<Longrightarrow> ?p'2 \\<noteq> b\n\ngoal (1 subgoal):\n 1. (fl +\n     ((fl + fr) / 2 + \\<alpha> b - fl) / 2 *\n     (real_of_int (ix p d) / 2 ^ (lv p d - lv (child b left d) d) -\n      real_of_int (ix (child b left d) d) +\n      1)) /\n    2 ^ (lv p d + 1) +\n    (\\<Sum>p'\\<in>parents d (child b left d) p.\n       (\\<alpha>(b := ((fl + fr) / 4 + 1 / 3 * \\<alpha> b) / 2 ^ lv b d))\n        p' *\n       l2_\\<phi> (p ! d) (p' ! d)) =\n    (fl +\n     (fr - fl) / 2 *\n     (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) - real_of_int (ix b d) +\n      1)) /\n    2 ^ (lv p d + 1) +\n    (\\<alpha> b *\n     ((1 -\n       real_of_int (- 1) *\n       (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n        real_of_int (ix b d))) /\n      2 ^ (lv p d + 1)) +\n     (\\<Sum>p'\\<in>parents d (child b left d) p.\n        \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d)))", "using child_ix child_lv \\<open>d < length b\\<close> level_shift[OF \\<open>lv b d < lv p d\\<close>]"], ["proof (prove)\nusing this:\n  ?p'2 \\<in> parents d (child b left d) p \\<Longrightarrow> ?p'2 \\<noteq> b\n  ?d < length ?p \\<Longrightarrow>\n  ix (child ?p ?dir ?d) ?d = 2 * ix ?p ?d + Grid_Point.sgn ?dir\n  ?d < length ?p \\<Longrightarrow> lv (child ?p ?dir ?d) ?d = lv ?p ?d + 1\n  d < length b\n  ?x / 2 ^ (lv p d - Suc (lv b d)) = ?x * 2 / 2 ^ (lv p d - lv b d)\n\ngoal (1 subgoal):\n 1. (fl +\n     ((fl + fr) / 2 + \\<alpha> b - fl) / 2 *\n     (real_of_int (ix p d) / 2 ^ (lv p d - lv (child b left d) d) -\n      real_of_int (ix (child b left d) d) +\n      1)) /\n    2 ^ (lv p d + 1) +\n    (\\<Sum>p'\\<in>parents d (child b left d) p.\n       (\\<alpha>(b := ((fl + fr) / 4 + 1 / 3 * \\<alpha> b) / 2 ^ lv b d))\n        p' *\n       l2_\\<phi> (p ! d) (p' ! d)) =\n    (fl +\n     (fr - fl) / 2 *\n     (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) - real_of_int (ix b d) +\n      1)) /\n    2 ^ (lv p d + 1) +\n    (\\<alpha> b *\n     ((1 -\n       real_of_int (- 1) *\n       (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n        real_of_int (ix b d))) /\n      2 ^ (lv p d + 1)) +\n     (\\<Sum>p'\\<in>parents d (child b left d) p.\n        \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d)))", "by (auto simp add: algebra_simps diff_divide_distrib add_divide_distrib)"], ["proof (state)\nthis:\n  down' d (Suc l) b fl fr \\<alpha> p =\n  (if p \\<in> lgrid b {d} lm\n   then (fl +\n         (fr - fl) / 2 *\n         (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n          real_of_int (ix b d) +\n          1)) /\n        2 ^ (lv p d + 1) +\n        (\\<Sum>p'\\<in>parents d b p.\n           \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n   else \\<alpha> p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  down' d (Suc l) b fl fr \\<alpha> p =\n  (if p \\<in> lgrid b {d} lm\n   then (fl +\n         (fr - fl) / 2 *\n         (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n          real_of_int (ix b d) +\n          1)) /\n        2 ^ (lv p d + 1) +\n        (\\<Sum>p'\\<in>parents d b p.\n           \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n   else \\<alpha> p)\n\ngoal (1 subgoal):\n 1. \\<nexists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "case False"], ["proof (state)\nthis:\n  \\<nexists>dir. p \\<in> grid (child b dir d) {d}\n\ngoal (1 subgoal):\n 1. \\<nexists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "hence not_child: \"!! dir. \\<not> p \\<in> grid (child b dir d) {d}\""], ["proof (prove)\nusing this:\n  \\<nexists>dir. p \\<in> grid (child b dir d) {d}\n\ngoal (1 subgoal):\n 1. \\<And>dir. p \\<notin> grid (child b dir d) {d}", "by auto"], ["proof (state)\nthis:\n  p \\<notin> grid (child b ?dir d) {d}\n\ngoal (1 subgoal):\n 1. \\<nexists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "hence \"p = b\""], ["proof (prove)\nusing this:\n  p \\<notin> grid (child b ?dir d) {d}\n\ngoal (1 subgoal):\n 1. p = b", "using grid_onedim_split[where ds=\"{}\" and d=d and b=b] \\<open>p \\<in> grid b {d}\\<close>"], ["proof (prove)\nusing this:\n  p \\<notin> grid (child b ?dir d) {d}\n  grid b ({} \\<union> {d}) =\n  grid b {} \\<union> grid (child b left d) ({} \\<union> {d}) \\<union>\n  grid (child b right d) ({} \\<union> {d})\n  p \\<in> grid b {d}\n\ngoal (1 subgoal):\n 1. p = b", "unfolding grid_empty_ds[where b=b]"], ["proof (prove)\nusing this:\n  p \\<notin> grid (child b ?dir d) {d}\n  grid b ({} \\<union> {d}) =\n  {b} \\<union> grid (child b left d) ({} \\<union> {d}) \\<union>\n  grid (child b right d) ({} \\<union> {d})\n  p \\<in> grid b {d}\n\ngoal (1 subgoal):\n 1. p = b", "by auto"], ["proof (state)\nthis:\n  p = b\n\ngoal (1 subgoal):\n 1. \\<nexists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "from not_child"], ["proof (chain)\npicking this:\n  p \\<notin> grid (child b ?dir d) {d}", "have lnot_child: \"!! dir. \\<not> p \\<in> lgrid (child b dir d) {d} lm\""], ["proof (prove)\nusing this:\n  p \\<notin> grid (child b ?dir d) {d}\n\ngoal (1 subgoal):\n 1. \\<And>dir. p \\<notin> lgrid (child b dir d) {d} lm", "unfolding lgrid_def"], ["proof (prove)\nusing this:\n  p \\<notin> grid (child b ?dir d) {d}\n\ngoal (1 subgoal):\n 1. \\<And>dir. p \\<notin> {p \\<in> grid (child b dir d) {d}. level p < lm}", "by auto"], ["proof (state)\nthis:\n  p \\<notin> lgrid (child b ?dir d) {d} lm\n\ngoal (1 subgoal):\n 1. \\<nexists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "have result: \"((fl + fr) / 4 + 1 / 3 * \\<alpha> b) / 2 ^ lv b d = (fl + (fr - fl) / 2) / 2 ^ (lv b d + 1) + \\<alpha> b * l2_\\<phi> (b ! d) (b ! d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((fl + fr) / 4 + 1 / 3 * \\<alpha> b) / 2 ^ lv b d =\n    (fl + (fr - fl) / 2) / 2 ^ (lv b d + 1) +\n    \\<alpha> b * l2_\\<phi> (b ! d) (b ! d)", "by (auto simp: l2_same diff_divide_distrib add_divide_distrib times_divide_eq_left[symmetric] algebra_simps)"], ["proof (state)\nthis:\n  ((fl + fr) / 4 + 1 / 3 * \\<alpha> b) / 2 ^ lv b d =\n  (fl + (fr - fl) / 2) / 2 ^ (lv b d + 1) +\n  \\<alpha> b * l2_\\<phi> (b ! d) (b ! d)\n\ngoal (1 subgoal):\n 1. \\<nexists>dir. p \\<in> grid (child b dir d) {d} \\<Longrightarrow>\n    down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. down' d (Suc l) b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "unfolding down'.simps Let_def fun_upd_def hyps[OF \\<open>p \\<in> sparsegrid' dm\\<close>] if_P[OF \\<open>p \\<in> lgrid b {d} lm\\<close>] if_not_P[OF lnot_child] if_P[OF \\<open>p = b\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((fl + fr) / 4 + 1 / 3 * \\<alpha> b) / 2 ^ lv b d =\n    (fl +\n     (fr - fl) / 2 *\n     (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) - real_of_int (ix b d) +\n      1)) /\n    2 ^ (lv p d + 1) +\n    (\\<Sum>p'\\<in>parents d b p. \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "unfolding \\<open>p = b\\<close> parents_single"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((fl + fr) / 4 + 1 / 3 * \\<alpha> b) / 2 ^ lv b d =\n    (fl +\n     (fr - fl) / 2 *\n     (real_of_int (ix b d) / 2 ^ (lv b d - lv b d) - real_of_int (ix b d) +\n      1)) /\n    2 ^ (lv b d + 1) +\n    (\\<Sum>p'\\<in>{b}. \\<alpha> p' * l2_\\<phi> (b ! d) (p' ! d))", "unfolding result"], ["proof (prove)\ngoal (1 subgoal):\n 1. (fl + (fr - fl) / 2) / 2 ^ (lv b d + 1) +\n    \\<alpha> b * l2_\\<phi> (b ! d) (b ! d) =\n    (fl +\n     (fr - fl) / 2 *\n     (real_of_int (ix b d) / 2 ^ (lv b d - lv b d) - real_of_int (ix b d) +\n      1)) /\n    2 ^ (lv b d + 1) +\n    (\\<Sum>p'\\<in>{b}. \\<alpha> p' * l2_\\<phi> (b ! d) (p' ! d))", "by auto"], ["proof (state)\nthis:\n  down' d (Suc l) b fl fr \\<alpha> p =\n  (if p \\<in> lgrid b {d} lm\n   then (fl +\n         (fr - fl) / 2 *\n         (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n          real_of_int (ix b d) +\n          1)) /\n        2 ^ (lv p d + 1) +\n        (\\<Sum>p'\\<in>parents d b p.\n           \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n   else \\<alpha> p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  down' d (Suc l) b fl fr \\<alpha> p =\n  (if p \\<in> lgrid b {d} lm\n   then (fl +\n         (fr - fl) / 2 *\n         (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n          real_of_int (ix b d) +\n          1)) /\n        2 ^ (lv p d + 1) +\n        (\\<Sum>p'\\<in>parents d b p.\n           \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n   else \\<alpha> p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  down' d (Suc l) b fl fr \\<alpha> p =\n  (if p \\<in> lgrid b {d} lm\n   then (fl +\n         (fr - fl) / 2 *\n         (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n          real_of_int (ix b d) +\n          1)) /\n        2 ^ (lv p d + 1) +\n        (\\<Sum>p'\\<in>parents d b p.\n           \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n   else \\<alpha> p)\n\ngoal (1 subgoal):\n 1. \\<And>b \\<alpha> fl fr p.\n       \\<lbrakk>d < length b; 0 + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d 0 b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b \\<alpha> fl fr p.\n       \\<lbrakk>d < length b; 0 + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d 0 b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)", "case 0"], ["proof (state)\nthis:\n  d < length b\n  0 + level b = lm\n  b \\<in> sparsegrid' dm\n  p \\<in> sparsegrid' dm\n\ngoal (1 subgoal):\n 1. \\<And>b \\<alpha> fl fr p.\n       \\<lbrakk>d < length b; 0 + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d 0 b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)", "have \"p \\<notin> lgrid b {d} lm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<notin> lgrid b {d} lm", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> p \\<notin> lgrid b {d} lm \\<Longrightarrow> False", "assume \"\\<not> p \\<notin> lgrid b {d} lm\""], ["proof (state)\nthis:\n  \\<not> p \\<notin> lgrid b {d} lm\n\ngoal (1 subgoal):\n 1. \\<not> p \\<notin> lgrid b {d} lm \\<Longrightarrow> False", "hence \"p \\<in> grid b {d}\" and \"level p < lm\""], ["proof (prove)\nusing this:\n  \\<not> p \\<notin> lgrid b {d} lm\n\ngoal (1 subgoal):\n 1. p \\<in> grid b {d} &&& level p < lm", "unfolding lgrid_def"], ["proof (prove)\nusing this:\n  \\<not> p \\<notin> {p \\<in> grid b {d}. level p < lm}\n\ngoal (1 subgoal):\n 1. p \\<in> grid b {d} &&& level p < lm", "by auto"], ["proof (state)\nthis:\n  p \\<in> grid b {d}\n  level p < lm\n\ngoal (1 subgoal):\n 1. \\<not> p \\<notin> lgrid b {d} lm \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  p \\<in> grid b {d}\n  level p < lm\n\ngoal (1 subgoal):\n 1. \\<not> p \\<notin> lgrid b {d} lm \\<Longrightarrow> False", "from grid_level[OF \\<open>p \\<in> grid b {d}\\<close>] and \\<open>0 + level b = lm\\<close>"], ["proof (chain)\npicking this:\n  level b \\<le> level p\n  0 + level b = lm", "have \"lm \\<le> level p\""], ["proof (prove)\nusing this:\n  level b \\<le> level p\n  0 + level b = lm\n\ngoal (1 subgoal):\n 1. lm \\<le> level p", "by auto"], ["proof (state)\nthis:\n  lm \\<le> level p\n\ngoal (1 subgoal):\n 1. \\<not> p \\<notin> lgrid b {d} lm \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  p \\<in> grid b {d}\n  level p < lm\n  lm \\<le> level p", "show False"], ["proof (prove)\nusing this:\n  p \\<in> grid b {d}\n  level p < lm\n  lm \\<le> level p\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<notin> lgrid b {d} lm\n\ngoal (1 subgoal):\n 1. \\<And>b \\<alpha> fl fr p.\n       \\<lbrakk>d < length b; 0 + level b = lm; b \\<in> sparsegrid' dm;\n        p \\<in> sparsegrid' dm\\<rbrakk>\n       \\<Longrightarrow> down' d 0 b fl fr \\<alpha> p =\n                         (if p \\<in> lgrid b {d} lm\n                          then (fl +\n                                (fr - fl) / 2 *\n                                (real_of_int (ix p d) /\n                                 2 ^ (lv p d - lv b d) -\n                                 real_of_int (ix b d) +\n                                 1)) /\n                               2 ^ (lv p d + 1) +\n                               (\\<Sum>p'\\<in>parents d b p.\n                                  \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n                          else \\<alpha> p)", "thus ?case"], ["proof (prove)\nusing this:\n  p \\<notin> lgrid b {d} lm\n\ngoal (1 subgoal):\n 1. down' d 0 b fl fr \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "unfolding down'.simps"], ["proof (prove)\nusing this:\n  p \\<notin> lgrid b {d} lm\n\ngoal (1 subgoal):\n 1. \\<alpha> p =\n    (if p \\<in> lgrid b {d} lm\n     then (fl +\n           (fr - fl) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p)", "by auto"], ["proof (state)\nthis:\n  down' d 0 b fl fr \\<alpha> p =\n  (if p \\<in> lgrid b {d} lm\n   then (fl +\n         (fr - fl) / 2 *\n         (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n          real_of_int (ix b d) +\n          1)) /\n        2 ^ (lv p d + 1) +\n        (\\<Sum>p'\\<in>parents d b p.\n           \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n   else \\<alpha> p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma down: assumes \"d < dm\" and p: \"p \\<in> sparsegrid dm lm\"\n  shows \"(down dm lm d \\<alpha>) p = (\\<Sum> p' \\<in> parents d (base {d} p) p. (\\<alpha> p') * l2_\\<phi> (p ! d) (p' ! d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "let \"?F d l p\" = \"down' d l p 0 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "let \"?S x p p'\" = \"if p' \\<in> parents d (base {d} p) p then x * l2_\\<phi> (p ! d) (p' ! d) else 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "fix p \\<alpha>"], ["proof (state)\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "assume \"p \\<in> sparsegrid dm lm\""], ["proof (state)\nthis:\n  p \\<in> sparsegrid dm lm\n\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "from le_less_trans[OF grid_level sparsegridE(2)[OF this]]"], ["proof (chain)\npicking this:\n  p \\<in> grid ?b2 ?ds2 \\<Longrightarrow> level ?b2 < lm", "have \"parents d (base {d} p) p \\<subseteq>  lgrid (base {d} p) {d} lm\""], ["proof (prove)\nusing this:\n  p \\<in> grid ?b2 ?ds2 \\<Longrightarrow> level ?b2 < lm\n\ngoal (1 subgoal):\n 1. parents d (base {d} p) p \\<subseteq> lgrid (base {d} p) {d} lm", "unfolding lgrid_def parents_def"], ["proof (prove)\nusing this:\n  p \\<in> grid ?b2 ?ds2 \\<Longrightarrow> level ?b2 < lm\n\ngoal (1 subgoal):\n 1. {x \\<in> grid (base {d} p) {d}. p \\<in> grid x {d}}\n    \\<subseteq> {p \\<in> grid (base {d} p) {d}. level p < lm}", "by auto"], ["proof (state)\nthis:\n  parents d (base {d} p) p \\<subseteq> lgrid (base {d} p) {d} lm\n\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "hence \"(\\<Sum>p'\\<in>lgrid (base {d} p) {d} lm. ?S (\\<alpha> p') p p') =\n      (\\<Sum>p'\\<in>parents d (base {d} p) p. \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\""], ["proof (prove)\nusing this:\n  parents d (base {d} p) p \\<subseteq> lgrid (base {d} p) {d} lm\n\ngoal (1 subgoal):\n 1. (\\<Sum>p'\\<in>lgrid (base {d} p) {d} lm.\n       if p' \\<in> parents d (base {d} p) p\n       then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0) =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "using lgrid_finite"], ["proof (prove)\nusing this:\n  parents d (base {d} p) p \\<subseteq> lgrid (base {d} p) {d} lm\n  finite (lgrid ?b ?ds ?lm)\n\ngoal (1 subgoal):\n 1. (\\<Sum>p'\\<in>lgrid (base {d} p) {d} lm.\n       if p' \\<in> parents d (base {d} p) p\n       then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0) =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "by (intro sum.mono_neutral_cong_right) auto"], ["proof (state)\nthis:\n  (\\<Sum>p'\\<in>lgrid (base {d} p) {d} lm.\n     if p' \\<in> parents d (base {d} p) p\n     then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0) =\n  (\\<Sum>p'\\<in>parents d (base {d} p) p.\n     \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "}"], ["proof (state)\nthis:\n  ?pa2 \\<in> sparsegrid dm lm \\<Longrightarrow>\n  (\\<Sum>p'\\<in>lgrid (base {d} ?pa2) {d} lm.\n     if p' \\<in> parents d (base {d} ?pa2) ?pa2\n     then ?\\<alpha>'2 p' * l2_\\<phi> (?pa2 ! d) (p' ! d) else 0) =\n  (\\<Sum>p'\\<in>parents d (base {d} ?pa2) ?pa2.\n     ?\\<alpha>'2 p' * l2_\\<phi> (?pa2 ! d) (p' ! d))\n\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "note sum_eq = this"], ["proof (state)\nthis:\n  ?pa2 \\<in> sparsegrid dm lm \\<Longrightarrow>\n  (\\<Sum>p'\\<in>lgrid (base {d} ?pa2) {d} lm.\n     if p' \\<in> parents d (base {d} ?pa2) ?pa2\n     then ?\\<alpha>'2 p' * l2_\\<phi> (?pa2 ! d) (p' ! d) else 0) =\n  (\\<Sum>p'\\<in>parents d (base {d} ?pa2) ?pa2.\n     ?\\<alpha>'2 p' * l2_\\<phi> (?pa2 ! d) (p' ! d))\n\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "{"], ["proof (state)\nthis:\n  ?pa2 \\<in> sparsegrid dm lm \\<Longrightarrow>\n  (\\<Sum>p'\\<in>lgrid (base {d} ?pa2) {d} lm.\n     if p' \\<in> parents d (base {d} ?pa2) ?pa2\n     then ?\\<alpha>'2 p' * l2_\\<phi> (?pa2 ! d) (p' ! d) else 0) =\n  (\\<Sum>p'\\<in>parents d (base {d} ?pa2) ?pa2.\n     ?\\<alpha>'2 p' * l2_\\<phi> (?pa2 ! d) (p' ! d))\n\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "fix l p b \\<alpha>"], ["proof (state)\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "assume b: \"b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm\" and \"l + level b = lm\"\n      and \"p \\<in> sparsegrid dm lm\""], ["proof (state)\nthis:\n  b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm\n  l + level b = lm\n  p \\<in> sparsegrid dm lm\n\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "hence b_spg: \"b \\<in> sparsegrid' dm\" and p_spg: \"p \\<in> sparsegrid' dm\" and\n      \"d < length b\" and \"level p < lm\""], ["proof (prove)\nusing this:\n  b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm\n  l + level b = lm\n  p \\<in> sparsegrid dm lm\n\ngoal (1 subgoal):\n 1. (b \\<in> sparsegrid' dm &&& p \\<in> sparsegrid' dm) &&&\n    d < length b &&& level p < lm", "using sparsegrid'_start sparsegrid_subset \\<open>d < dm\\<close>"], ["proof (prove)\nusing this:\n  b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm\n  l + level b = lm\n  p \\<in> sparsegrid dm lm\n  ?b \\<in> grid (start ?dm) ?ds \\<Longrightarrow> ?b \\<in> sparsegrid' ?dm\n  ?p \\<in> sparsegrid ?dm ?lm \\<Longrightarrow> ?p \\<in> sparsegrid' ?dm\n  d < dm\n\ngoal (1 subgoal):\n 1. (b \\<in> sparsegrid' dm &&& p \\<in> sparsegrid' dm) &&&\n    d < length b &&& level p < lm", "by auto"], ["proof (state)\nthis:\n  b \\<in> sparsegrid' dm\n  p \\<in> sparsegrid' dm\n  d < length b\n  level p < lm\n\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "have \"?F d l b \\<alpha> p = (if b = base {d} p then \\<Sum>p'\\<in>lgrid b {d} lm. ?S (\\<alpha> p') p p' else \\<alpha> p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. down' d l b 0 0 \\<alpha> p =\n    (if b = base {d} p\n     then \\<Sum>p'\\<in>lgrid b {d} lm.\n            if p' \\<in> parents d (base {d} p) p\n            then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0\n     else \\<alpha> p)", "proof (cases \"b = base {d} p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. b = base {d} p \\<Longrightarrow>\n    down' d l b 0 0 \\<alpha> p =\n    (if b = base {d} p\n     then \\<Sum>p'\\<in>lgrid b {d} lm.\n            if p' \\<in> parents d (base {d} p) p\n            then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0\n     else \\<alpha> p)\n 2. b \\<noteq> base {d} p \\<Longrightarrow>\n    down' d l b 0 0 \\<alpha> p =\n    (if b = base {d} p\n     then \\<Sum>p'\\<in>lgrid b {d} lm.\n            if p' \\<in> parents d (base {d} p) p\n            then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0\n     else \\<alpha> p)", "case True"], ["proof (state)\nthis:\n  b = base {d} p\n\ngoal (2 subgoals):\n 1. b = base {d} p \\<Longrightarrow>\n    down' d l b 0 0 \\<alpha> p =\n    (if b = base {d} p\n     then \\<Sum>p'\\<in>lgrid b {d} lm.\n            if p' \\<in> parents d (base {d} p) p\n            then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0\n     else \\<alpha> p)\n 2. b \\<noteq> base {d} p \\<Longrightarrow>\n    down' d l b 0 0 \\<alpha> p =\n    (if b = base {d} p\n     then \\<Sum>p'\\<in>lgrid b {d} lm.\n            if p' \\<in> parents d (base {d} p) p\n            then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0\n     else \\<alpha> p)", "have \"p \\<in> lgrid (base {d} p) {d} lm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> lgrid (base {d} p) {d} lm", "using baseE(2)[OF p_spg] and \\<open>level p < lm\\<close>"], ["proof (prove)\nusing this:\n  p \\<in> grid (base ?ds p) ?ds\n  level p < lm\n\ngoal (1 subgoal):\n 1. p \\<in> lgrid (base {d} p) {d} lm", "unfolding lgrid_def"], ["proof (prove)\nusing this:\n  p \\<in> grid (base ?ds p) ?ds\n  level p < lm\n\ngoal (1 subgoal):\n 1. p \\<in> {p \\<in> grid (base {d} p) {d}. level p < lm}", "by auto"], ["proof (state)\nthis:\n  p \\<in> lgrid (base {d} p) {d} lm\n\ngoal (2 subgoals):\n 1. b = base {d} p \\<Longrightarrow>\n    down' d l b 0 0 \\<alpha> p =\n    (if b = base {d} p\n     then \\<Sum>p'\\<in>lgrid b {d} lm.\n            if p' \\<in> parents d (base {d} p) p\n            then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0\n     else \\<alpha> p)\n 2. b \\<noteq> base {d} p \\<Longrightarrow>\n    down' d l b 0 0 \\<alpha> p =\n    (if b = base {d} p\n     then \\<Sum>p'\\<in>lgrid b {d} lm.\n            if p' \\<in> parents d (base {d} p) p\n            then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0\n     else \\<alpha> p)", "thus ?thesis"], ["proof (prove)\nusing this:\n  p \\<in> lgrid (base {d} p) {d} lm\n\ngoal (1 subgoal):\n 1. down' d l b 0 0 \\<alpha> p =\n    (if b = base {d} p\n     then \\<Sum>p'\\<in>lgrid b {d} lm.\n            if p' \\<in> parents d (base {d} p) p\n            then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0\n     else \\<alpha> p)", "unfolding if_P[OF True]"], ["proof (prove)\nusing this:\n  p \\<in> lgrid (base {d} p) {d} lm\n\ngoal (1 subgoal):\n 1. down' d l b 0 0 \\<alpha> p =\n    (\\<Sum>p'\\<in>lgrid b {d} lm.\n       if p' \\<in> parents d (base {d} p) p\n       then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0)", "unfolding True sum_eq[OF \\<open>p \\<in> sparsegrid dm lm\\<close>]"], ["proof (prove)\nusing this:\n  p \\<in> lgrid (base {d} p) {d} lm\n\ngoal (1 subgoal):\n 1. down' d l (base {d} p) 0 0 \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "unfolding down'_\\<beta>[OF \\<open>d < length b\\<close> \\<open>l + level b = lm\\<close> b_spg p_spg,\n          unfolded True]"], ["proof (prove)\nusing this:\n  p \\<in> lgrid (base {d} p) {d} lm\n\ngoal (1 subgoal):\n 1. (if p \\<in> lgrid (base {d} p) {d} lm\n     then (0 +\n           (0 - 0) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv (base {d} p) d) -\n            real_of_int (ix (base {d} p) d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d (base {d} p) p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p) =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "by auto"], ["proof (state)\nthis:\n  down' d l b 0 0 \\<alpha> p =\n  (if b = base {d} p\n   then \\<Sum>p'\\<in>lgrid b {d} lm.\n          if p' \\<in> parents d (base {d} p) p\n          then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0\n   else \\<alpha> p)\n\ngoal (1 subgoal):\n 1. b \\<noteq> base {d} p \\<Longrightarrow>\n    down' d l b 0 0 \\<alpha> p =\n    (if b = base {d} p\n     then \\<Sum>p'\\<in>lgrid b {d} lm.\n            if p' \\<in> parents d (base {d} p) p\n            then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0\n     else \\<alpha> p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> base {d} p \\<Longrightarrow>\n    down' d l b 0 0 \\<alpha> p =\n    (if b = base {d} p\n     then \\<Sum>p'\\<in>lgrid b {d} lm.\n            if p' \\<in> parents d (base {d} p) p\n            then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0\n     else \\<alpha> p)", "case False"], ["proof (state)\nthis:\n  b \\<noteq> base {d} p\n\ngoal (1 subgoal):\n 1. b \\<noteq> base {d} p \\<Longrightarrow>\n    down' d l b 0 0 \\<alpha> p =\n    (if b = base {d} p\n     then \\<Sum>p'\\<in>lgrid b {d} lm.\n            if p' \\<in> parents d (base {d} p) p\n            then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0\n     else \\<alpha> p)", "have \"p \\<notin> lgrid b {d} lm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<notin> lgrid b {d} lm", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> p \\<notin> lgrid b {d} lm \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> p \\<notin> lgrid b {d} lm\n\ngoal (1 subgoal):\n 1. \\<not> p \\<notin> lgrid b {d} lm \\<Longrightarrow> False", "hence \"p \\<in> grid b {d}\""], ["proof (prove)\nusing this:\n  \\<not> p \\<notin> lgrid b {d} lm\n\ngoal (1 subgoal):\n 1. p \\<in> grid b {d}", "by auto"], ["proof (state)\nthis:\n  p \\<in> grid b {d}\n\ngoal (1 subgoal):\n 1. \\<not> p \\<notin> lgrid b {d} lm \\<Longrightarrow> False", "from b this"], ["proof (chain)\npicking this:\n  b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm\n  p \\<in> grid b {d}", "have \"b = base {d} p\""], ["proof (prove)\nusing this:\n  b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm\n  p \\<in> grid b {d}\n\ngoal (1 subgoal):\n 1. b = base {d} p", "using baseI"], ["proof (prove)\nusing this:\n  b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm\n  p \\<in> grid b {d}\n  \\<lbrakk>?x \\<in> grid (start ?dm) ({0..<?dm} - ?ds);\n   ?p \\<in> grid ?x ?ds\\<rbrakk>\n  \\<Longrightarrow> base ?ds ?p = ?x\n\ngoal (1 subgoal):\n 1. b = base {d} p", "by auto"], ["proof (state)\nthis:\n  b = base {d} p\n\ngoal (1 subgoal):\n 1. \\<not> p \\<notin> lgrid b {d} lm \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  b = base {d} p\n\ngoal (1 subgoal):\n 1. False", "using False"], ["proof (prove)\nusing this:\n  b = base {d} p\n  b \\<noteq> base {d} p\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<notin> lgrid b {d} lm\n\ngoal (1 subgoal):\n 1. b \\<noteq> base {d} p \\<Longrightarrow>\n    down' d l b 0 0 \\<alpha> p =\n    (if b = base {d} p\n     then \\<Sum>p'\\<in>lgrid b {d} lm.\n            if p' \\<in> parents d (base {d} p) p\n            then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0\n     else \\<alpha> p)", "thus ?thesis"], ["proof (prove)\nusing this:\n  p \\<notin> lgrid b {d} lm\n\ngoal (1 subgoal):\n 1. down' d l b 0 0 \\<alpha> p =\n    (if b = base {d} p\n     then \\<Sum>p'\\<in>lgrid b {d} lm.\n            if p' \\<in> parents d (base {d} p) p\n            then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0\n     else \\<alpha> p)", "unfolding if_not_P[OF False]"], ["proof (prove)\nusing this:\n  p \\<notin> lgrid b {d} lm\n\ngoal (1 subgoal):\n 1. down' d l b 0 0 \\<alpha> p = \\<alpha> p", "unfolding down'_\\<beta>[OF \\<open>d < length b\\<close> \\<open>l + level b = lm\\<close> b_spg p_spg]"], ["proof (prove)\nusing this:\n  p \\<notin> lgrid b {d} lm\n\ngoal (1 subgoal):\n 1. (if p \\<in> lgrid b {d} lm\n     then (0 +\n           (0 - 0) / 2 *\n           (real_of_int (ix p d) / 2 ^ (lv p d - lv b d) -\n            real_of_int (ix b d) +\n            1)) /\n          2 ^ (lv p d + 1) +\n          (\\<Sum>p'\\<in>parents d b p.\n             \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n     else \\<alpha> p) =\n    \\<alpha> p", "by auto"], ["proof (state)\nthis:\n  down' d l b 0 0 \\<alpha> p =\n  (if b = base {d} p\n   then \\<Sum>p'\\<in>lgrid b {d} lm.\n          if p' \\<in> parents d (base {d} p) p\n          then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0\n   else \\<alpha> p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  down' d l b 0 0 \\<alpha> p =\n  (if b = base {d} p\n   then \\<Sum>p'\\<in>lgrid b {d} lm.\n          if p' \\<in> parents d (base {d} p) p\n          then \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d) else 0\n   else \\<alpha> p)\n\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?b2 \\<in> lgrid (start dm) ({0..<dm} - {d}) lm;\n   ?l2 + level ?b2 = lm; ?pa2 \\<in> sparsegrid dm lm\\<rbrakk>\n  \\<Longrightarrow> down' d ?l2 ?b2 0 0 ?\\<alpha>'2 ?pa2 =\n                    (if ?b2 = base {d} ?pa2\n                     then \\<Sum>p'\\<in>lgrid ?b2 {d} lm.\n                            if p' \\<in> parents d (base {d} ?pa2) ?pa2\n                            then ?\\<alpha>'2 p' *\n                                 l2_\\<phi> (?pa2 ! d) (p' ! d)\n                            else 0\n                     else ?\\<alpha>'2 ?pa2)\n\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "from lift[OF \\<open>d < dm\\<close> \\<open>p \\<in> sparsegrid dm lm\\<close>, where F = ?F and S = ?S, OF this]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>l b p \\<alpha>.\n              \\<lbrakk>b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm;\n               l + level b = lm; p \\<in> sparsegrid dm lm\\<rbrakk>\n              \\<Longrightarrow> b \\<in> lgrid (start dm) ({0..<dm} - {d})\n   lm;\n   \\<And>l b p \\<alpha>.\n      \\<lbrakk>b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm;\n       l + level b = lm; p \\<in> sparsegrid dm lm\\<rbrakk>\n      \\<Longrightarrow> l + level b = lm;\n   \\<And>l b p \\<alpha>.\n      \\<lbrakk>b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm;\n       l + level b = lm; p \\<in> sparsegrid dm lm\\<rbrakk>\n      \\<Longrightarrow> p \\<in> sparsegrid dm lm\\<rbrakk>\n  \\<Longrightarrow> lift (\\<lambda>a b c. down' a b c 0 0) dm lm d ?\\<alpha>\n                     p =\n                    (\\<Sum>p'\\<in>lgrid (base {d} p) {d} lm.\n                       if p' \\<in> parents d (base {d} p) p\n                       then ?\\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d)\n                       else 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>l b p \\<alpha>.\n              \\<lbrakk>b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm;\n               l + level b = lm; p \\<in> sparsegrid dm lm\\<rbrakk>\n              \\<Longrightarrow> b \\<in> lgrid (start dm) ({0..<dm} - {d})\n   lm;\n   \\<And>l b p \\<alpha>.\n      \\<lbrakk>b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm;\n       l + level b = lm; p \\<in> sparsegrid dm lm\\<rbrakk>\n      \\<Longrightarrow> l + level b = lm;\n   \\<And>l b p \\<alpha>.\n      \\<lbrakk>b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm;\n       l + level b = lm; p \\<in> sparsegrid dm lm\\<rbrakk>\n      \\<Longrightarrow> p \\<in> sparsegrid dm lm\\<rbrakk>\n  \\<Longrightarrow> lift (\\<lambda>a b c. down' a b c 0 0) dm lm d ?\\<alpha>\n                     p =\n                    (\\<Sum>p'\\<in>lgrid (base {d} p) {d} lm.\n                       if p' \\<in> parents d (base {d} p) p\n                       then ?\\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d)\n                       else 0)\n\ngoal (1 subgoal):\n 1. down dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "unfolding down_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>l b p \\<alpha>.\n              \\<lbrakk>b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm;\n               l + level b = lm; p \\<in> sparsegrid dm lm\\<rbrakk>\n              \\<Longrightarrow> b \\<in> lgrid (start dm) ({0..<dm} - {d})\n   lm;\n   \\<And>l b p \\<alpha>.\n      \\<lbrakk>b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm;\n       l + level b = lm; p \\<in> sparsegrid dm lm\\<rbrakk>\n      \\<Longrightarrow> l + level b = lm;\n   \\<And>l b p \\<alpha>.\n      \\<lbrakk>b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm;\n       l + level b = lm; p \\<in> sparsegrid dm lm\\<rbrakk>\n      \\<Longrightarrow> p \\<in> sparsegrid dm lm\\<rbrakk>\n  \\<Longrightarrow> lift (\\<lambda>a b c. down' a b c 0 0) dm lm d ?\\<alpha>\n                     p =\n                    (\\<Sum>p'\\<in>lgrid (base {d} p) {d} lm.\n                       if p' \\<in> parents d (base {d} p) p\n                       then ?\\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d)\n                       else 0)\n\ngoal (1 subgoal):\n 1. lift (\\<lambda>d l p. down' d l p 0 0) dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "unfolding sum_eq[OF p]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>l b p \\<alpha>.\n              \\<lbrakk>b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm;\n               l + level b = lm; p \\<in> sparsegrid dm lm\\<rbrakk>\n              \\<Longrightarrow> b \\<in> lgrid (start dm) ({0..<dm} - {d})\n   lm;\n   \\<And>l b p \\<alpha>.\n      \\<lbrakk>b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm;\n       l + level b = lm; p \\<in> sparsegrid dm lm\\<rbrakk>\n      \\<Longrightarrow> l + level b = lm;\n   \\<And>l b p \\<alpha>.\n      \\<lbrakk>b \\<in> lgrid (start dm) ({0..<dm} - {d}) lm;\n       l + level b = lm; p \\<in> sparsegrid dm lm\\<rbrakk>\n      \\<Longrightarrow> p \\<in> sparsegrid dm lm\\<rbrakk>\n  \\<Longrightarrow> lift (\\<lambda>a b c. down' a b c 0 0) dm lm d ?\\<alpha>\n                     p =\n                    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n                       ?\\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n\ngoal (1 subgoal):\n 1. lift (\\<lambda>d l p. down' d l p 0 0) dm lm d \\<alpha> p =\n    (\\<Sum>p'\\<in>parents d (base {d} p) p.\n       \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))", "by simp"], ["proof (state)\nthis:\n  down dm lm d \\<alpha> p =\n  (\\<Sum>p'\\<in>parents d (base {d} p) p.\n     \\<alpha> p' * l2_\\<phi> (p ! d) (p' ! d))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}