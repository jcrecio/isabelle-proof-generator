{"file_name": "/home/qj213/afp-2021-10-22/thys/Algebraic_VCs/AVC_KAT/VC_RKAT.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Algebraic_VCs", "problem_names": ["lemma R_assign: \"(\\<forall>s. P s \\<longrightarrow> Q (s (v := e s))) \\<Longrightarrow> (v ::= e) \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_assignr: \"(\\<forall>s. Q' s \\<longrightarrow> Q (s (v := e s))) \\<Longrightarrow> (rel_R \\<lceil>P\\<rceil> \\<lceil>Q'\\<rceil>) ; (v ::= e) \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_assignl: \"(\\<forall>s. P s \\<longrightarrow> P' (s (v := e s))) \\<Longrightarrow> (v ::= e) ; (rel_R \\<lceil>P'\\<rceil> \\<lceil>Q\\<rceil>) \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_cons: \"(\\<forall>s. P s \\<longrightarrow> P' s) \\<Longrightarrow> (\\<forall>s. Q' s \\<longrightarrow> Q s) \\<Longrightarrow> rel_R \\<lceil>P'\\<rceil> \\<lceil>Q'\\<rceil> \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma if_then_else_ref: \"X \\<subseteq> X' \\<Longrightarrow> Y \\<subseteq> Y' \\<Longrightarrow> IF P THEN X ELSE Y FI \\<subseteq> IF P THEN X' ELSE Y' FI\"", "lemma while_ref: \"X \\<subseteq> X' \\<Longrightarrow> WHILE P DO X OD \\<subseteq> WHILE P DO X' OD\""], "translations": [["", "lemma R_assign: \"(\\<forall>s. P s \\<longrightarrow> Q (s (v := e s))) \\<Longrightarrow> (v ::= e) \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s. P s \\<longrightarrow> Q (s(v := e s)) \\<Longrightarrow>\n    v ::= e \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>s. P s \\<longrightarrow> Q (s(v := e s)) \\<Longrightarrow>\n    v ::= e \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "assume \"(\\<forall>s. P s \\<longrightarrow> Q (s (v := e s)))\""], ["proof (state)\nthis:\n  \\<forall>s. P s \\<longrightarrow> Q (s(v := e s))\n\ngoal (1 subgoal):\n 1. \\<forall>s. P s \\<longrightarrow> Q (s(v := e s)) \\<Longrightarrow>\n    v ::= e \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "hence \"rel_kat.H \\<lceil>P\\<rceil> (v ::= e) \\<lceil>Q\\<rceil>\""], ["proof (prove)\nusing this:\n  \\<forall>s. P s \\<longrightarrow> Q (s(v := e s))\n\ngoal (1 subgoal):\n 1. PRE P (v ::= e) POST Q", "by (rule H_assign_var)"], ["proof (state)\nthis:\n  PRE P (v ::= e) POST Q\n\ngoal (1 subgoal):\n 1. \\<forall>s. P s \\<longrightarrow> Q (s(v := e s)) \\<Longrightarrow>\n    v ::= e \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "thus ?thesis"], ["proof (prove)\nusing this:\n  PRE P (v ::= e) POST Q\n\ngoal (1 subgoal):\n 1. v ::= e \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule rel_rkat.R2)"], ["proof (state)\nthis:\n  v ::= e \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma R_assignr: \"(\\<forall>s. Q' s \\<longrightarrow> Q (s (v := e s))) \\<Longrightarrow> (rel_R \\<lceil>P\\<rceil> \\<lceil>Q'\\<rceil>) ; (v ::= e) \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s. Q' s \\<longrightarrow> Q (s(v := e s)) \\<Longrightarrow>\n    rel_R \\<lceil>P\\<rceil> \\<lceil>Q'\\<rceil> ; (v ::= e)\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (metis H_assign_var rel_kat.H_seq rel_rkat.R1 rel_rkat.R2)"], ["", "lemma R_assignl: \"(\\<forall>s. P s \\<longrightarrow> P' (s (v := e s))) \\<Longrightarrow> (v ::= e) ; (rel_R \\<lceil>P'\\<rceil> \\<lceil>Q\\<rceil>) \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s. P s \\<longrightarrow> P' (s(v := e s)) \\<Longrightarrow>\n    (v ::= e) ; rel_R \\<lceil>P'\\<rceil> \\<lceil>Q\\<rceil>\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (metis H_assign_var rel_kat.H_seq rel_rkat.R1 rel_rkat.R2)"], ["", "subsubsection \\<open>Simplified Refinement Laws\\<close>"], ["", "lemma R_cons: \"(\\<forall>s. P s \\<longrightarrow> P' s) \\<Longrightarrow> (\\<forall>s. Q' s \\<longrightarrow> Q s) \\<Longrightarrow> rel_R \\<lceil>P'\\<rceil> \\<lceil>Q'\\<rceil> \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>s. P s \\<longrightarrow> P' s;\n     \\<forall>s. Q' s \\<longrightarrow> Q s\\<rbrakk>\n    \\<Longrightarrow> rel_R \\<lceil>P'\\<rceil> \\<lceil>Q'\\<rceil>\n                      \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (simp add: rel_rkat.R1 rel_rkat.R2 sH_cons_1 sH_cons_2)"], ["", "lemma if_then_else_ref: \"X \\<subseteq> X' \\<Longrightarrow> Y \\<subseteq> Y' \\<Longrightarrow> IF P THEN X ELSE Y FI \\<subseteq> IF P THEN X' ELSE Y' FI\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<subseteq> X'; Y \\<subseteq> Y'\\<rbrakk>\n    \\<Longrightarrow> IF P THEN X ELSE Y FI\n                      \\<subseteq> IF P THEN X' ELSE Y' FI", "by (auto simp: rel_kat.ifthenelse_def)"], ["", "lemma while_ref: \"X \\<subseteq> X' \\<Longrightarrow> WHILE P DO X OD \\<subseteq> WHILE P DO X' OD\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> X' \\<Longrightarrow>\n    WHILE P DO X OD \\<subseteq> WHILE P DO X' OD", "by (simp add: rel_kat.while_def rel_dioid.mult_isol rel_dioid.mult_isor rel_kleene_algebra.star_iso)"], ["", "end"]]}