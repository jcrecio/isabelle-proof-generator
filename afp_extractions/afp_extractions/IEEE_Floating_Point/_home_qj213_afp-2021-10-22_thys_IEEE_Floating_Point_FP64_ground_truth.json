{"file_name": "/home/qj213/afp-2021-10-22/thys/IEEE_Floating_Point/FP64.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/IEEE_Floating_Point", "problem_names": ["lemma float_of_fp64_inverse[simp]: \"fp64_of_float (float_of_fp64 a) = a\"", "lemma float_of_fp64_inj_iff[simp]: \"fp64_of_float r = fp64_of_float s \\<longleftrightarrow> r = s\"", "lemma fp64_of_float_inverse[simp]: \"float_of_fp64 (fp64_of_float a) = a\"", "lemma Quotientfp: \"Quotient eq_fp64 fp64_of_float float_of_fp64 rel_fp64\"\n  \\<comment>\\<open>\\<^term>\\<open>eq_fp64\\<close> is a workaround to prevent a (failing -- TODO: why?)\n      code setup in \\<open>setup_lifting\\<close>.\\<close>"], "translations": [["", "lemma float_of_fp64_inverse[simp]: \"fp64_of_float (float_of_fp64 a) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fp64_of_float (float_of_fp64 a) = a", "by (auto\n      simp: fp64_of_float_def float_of_fp64_def Abs_float_inverse apsnd_def map_prod_def word_size\n      dest!: word_cat_split_alt[rotated]\n      split: prod.splits)"], ["", "lemma float_of_fp64_inj_iff[simp]: \"fp64_of_float r = fp64_of_float s \\<longleftrightarrow> r = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fp64_of_float r = fp64_of_float s) = (r = s)", "using Rep_float_inject"], ["proof (prove)\nusing this:\n  (Rep_float ?x = Rep_float ?y) = (?x = ?y)\n\ngoal (1 subgoal):\n 1. (fp64_of_float r = fp64_of_float s) = (r = s)", "by (force simp: fp64_of_float_def word_cat_inj word_size split: prod.splits)"], ["", "lemma fp64_of_float_inverse[simp]: \"float_of_fp64 (fp64_of_float a) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. float_of_fp64 (fp64_of_float a) = a", "using float_of_fp64_inj_iff float_of_fp64_inverse"], ["proof (prove)\nusing this:\n  (fp64_of_float ?r = fp64_of_float ?s) = (?r = ?s)\n  fp64_of_float (float_of_fp64 ?a) = ?a\n\ngoal (1 subgoal):\n 1. float_of_fp64 (fp64_of_float a) = a", "by blast"], ["", "lemma Quotientfp: \"Quotient eq_fp64 fp64_of_float float_of_fp64 rel_fp64\"\n  \\<comment>\\<open>\\<^term>\\<open>eq_fp64\\<close> is a workaround to prevent a (failing -- TODO: why?)\n      code setup in \\<open>setup_lifting\\<close>.\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. Quotient eq_fp64 fp64_of_float float_of_fp64 rel_fp64", "by (force intro!: QuotientI simp: rel_fp64_def)"], ["", "setup_lifting Quotientfp"], ["", "lift_definition fp64_lessThan::\"fp64 \\<Rightarrow> fp64 \\<Rightarrow> bool\" is\n  \"flt::float64\\<Rightarrow>float64\\<Rightarrow>bool\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>float1 float2 float3 float4.\n       \\<lbrakk>eq_fp64 float1 float2; eq_fp64 float3 float4\\<rbrakk>\n       \\<Longrightarrow> flt float1 float3 = flt float2 float4", "by simp"], ["", "lift_definition fp64_lessEqual::\"fp64 \\<Rightarrow> fp64 \\<Rightarrow> bool\" is\n  \"fle::float64\\<Rightarrow>float64\\<Rightarrow>bool\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>float1 float2 float3 float4.\n       \\<lbrakk>eq_fp64 float1 float2; eq_fp64 float3 float4\\<rbrakk>\n       \\<Longrightarrow> fle float1 float3 = fle float2 float4", "by simp"], ["", "lift_definition fp64_greaterThan::\"fp64 \\<Rightarrow> fp64 \\<Rightarrow> bool\" is\n  \"fgt::float64\\<Rightarrow>float64\\<Rightarrow>bool\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>float1 float2 float3 float4.\n       \\<lbrakk>eq_fp64 float1 float2; eq_fp64 float3 float4\\<rbrakk>\n       \\<Longrightarrow> fgt float1 float3 = fgt float2 float4", "by simp"], ["", "lift_definition fp64_greaterEqual::\"fp64 \\<Rightarrow> fp64 \\<Rightarrow> bool\" is\n  \"fge::float64\\<Rightarrow>float64\\<Rightarrow>bool\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>float1 float2 float3 float4.\n       \\<lbrakk>eq_fp64 float1 float2; eq_fp64 float3 float4\\<rbrakk>\n       \\<Longrightarrow> fge float1 float3 = fge float2 float4", "by simp"], ["", "lift_definition fp64_equal::\"fp64 \\<Rightarrow> fp64 \\<Rightarrow> bool\" is\n  \"feq::float64\\<Rightarrow>float64\\<Rightarrow>bool\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>float1 float2 float3 float4.\n       \\<lbrakk>eq_fp64 float1 float2; eq_fp64 float3 float4\\<rbrakk>\n       \\<Longrightarrow> feq float1 float3 = feq float2 float4", "by simp"], ["", "lift_definition fp64_abs::\"fp64 \\<Rightarrow> fp64\" is\n  \"abs::float64\\<Rightarrow>float64\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>float1 float2.\n       eq_fp64 float1 float2 \\<Longrightarrow>\n       eq_fp64 \\<bar>float1\\<bar> \\<bar>float2\\<bar>", "by simp"], ["", "lift_definition fp64_negate::\"fp64 \\<Rightarrow> fp64\" is\n  \"uminus::float64\\<Rightarrow>float64\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>float1 float2.\n       eq_fp64 float1 float2 \\<Longrightarrow> eq_fp64 (- float1) (- float2)", "by simp"], ["", "lift_definition fp64_sqrt::\"roundmode \\<Rightarrow> fp64 \\<Rightarrow> fp64\" is\n  \"fsqrt::roundmode\\<Rightarrow>float64\\<Rightarrow>float64\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>roundmode float1 float2.\n       eq_fp64 float1 float2 \\<Longrightarrow>\n       eq_fp64 (fsqrt roundmode float1) (fsqrt roundmode float2)", "by simp"], ["", "lift_definition fp64_add::\"roundmode \\<Rightarrow> fp64 \\<Rightarrow> fp64 \\<Rightarrow> fp64\" is\n  \"fadd::roundmode\\<Rightarrow>float64\\<Rightarrow>float64\\<Rightarrow>float64\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>roundmode float1 float2 float3 float4.\n       \\<lbrakk>eq_fp64 float1 float2; eq_fp64 float3 float4\\<rbrakk>\n       \\<Longrightarrow> eq_fp64 (fadd roundmode float1 float3)\n                          (fadd roundmode float2 float4)", "by simp"], ["", "lift_definition fp64_sub::\"roundmode \\<Rightarrow> fp64 \\<Rightarrow> fp64 \\<Rightarrow> fp64\" is\n  \"fsub::roundmode\\<Rightarrow>float64\\<Rightarrow>float64\\<Rightarrow>float64\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>roundmode float1 float2 float3 float4.\n       \\<lbrakk>eq_fp64 float1 float2; eq_fp64 float3 float4\\<rbrakk>\n       \\<Longrightarrow> eq_fp64 (fsub roundmode float1 float3)\n                          (fsub roundmode float2 float4)", "by simp"], ["", "lift_definition fp64_mul::\"roundmode \\<Rightarrow> fp64 \\<Rightarrow> fp64 \\<Rightarrow> fp64\" is\n  \"fmul::roundmode\\<Rightarrow>float64\\<Rightarrow>float64\\<Rightarrow>float64\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>roundmode float1 float2 float3 float4.\n       \\<lbrakk>eq_fp64 float1 float2; eq_fp64 float3 float4\\<rbrakk>\n       \\<Longrightarrow> eq_fp64 (fmul roundmode float1 float3)\n                          (fmul roundmode float2 float4)", "by simp"], ["", "lift_definition fp64_div::\"roundmode \\<Rightarrow> fp64 \\<Rightarrow> fp64 \\<Rightarrow> fp64\" is\n  \"fdiv::roundmode\\<Rightarrow>float64\\<Rightarrow>float64\\<Rightarrow>float64\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>roundmode float1 float2 float3 float4.\n       \\<lbrakk>eq_fp64 float1 float2; eq_fp64 float3 float4\\<rbrakk>\n       \\<Longrightarrow> eq_fp64 (fdiv roundmode float1 float3)\n                          (fdiv roundmode float2 float4)", "by simp"], ["", "lift_definition fp64_mul_add::\"roundmode \\<Rightarrow> fp64 \\<Rightarrow> fp64 \\<Rightarrow> fp64 \\<Rightarrow> fp64\" is\n  \"fmul_add::roundmode\\<Rightarrow>float64\\<Rightarrow>float64\\<Rightarrow>float64\\<Rightarrow>float64\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>roundmode float1 float2 float3 float4 float5 float6.\n       \\<lbrakk>eq_fp64 float1 float2; eq_fp64 float3 float4;\n        eq_fp64 float5 float6\\<rbrakk>\n       \\<Longrightarrow> eq_fp64 (fmul_add roundmode float1 float3 float5)\n                          (fmul_add roundmode float2 float4 float6)", "by simp"], ["", "end"]]}