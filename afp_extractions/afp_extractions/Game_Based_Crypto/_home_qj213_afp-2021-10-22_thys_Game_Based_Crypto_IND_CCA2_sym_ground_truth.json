{"file_name": "/home/qj213/afp-2021-10-22/thys/Game_Based_Crypto/IND_CCA2_sym.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Game_Based_Crypto", "problem_names": ["lemma lossless_oracle_encrypt [simp]:\n  assumes \"lossless_spmf (encrypt k m1)\" and \"lossless_spmf (encrypt k m0)\"\n  shows \"lossless_spmf (oracle_encrypt k b L (m1, m0))\"", "lemma lossless_oracle_decrypt [simp]: \"lossless_spmf (oracle_decrypt k L c)\"", "lemma advantage_nonneg: \"0 \\<le> advantage \\<A>\""], "translations": [["", "lemma lossless_oracle_encrypt [simp]:\n  assumes \"lossless_spmf (encrypt k m1)\" and \"lossless_spmf (encrypt k m0)\"\n  shows \"lossless_spmf (oracle_encrypt k b L (m1, m0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lossless_spmf (oracle_encrypt k b L (m1, m0))", "using assms"], ["proof (prove)\nusing this:\n  lossless_spmf (encrypt k m1)\n  lossless_spmf (encrypt k m0)\n\ngoal (1 subgoal):\n 1. lossless_spmf (oracle_encrypt k b L (m1, m0))", "by (simp add: oracle_encrypt_def split: bool.split)"], ["", "definition oracle_decrypt :: \"'key \\<Rightarrow> ('cipher, 'message option, 'cipher set) callee\"\nwhere \"oracle_decrypt k L c = return_spmf (if c \\<in> L then None else decrypt k c, L)\""], ["", "lemma lossless_oracle_decrypt [simp]: \"lossless_spmf (oracle_decrypt k L c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lossless_spmf (oracle_decrypt k L c)", "by(simp add: oracle_decrypt_def)"], ["", "definition game :: \"('message, 'cipher) adversary \\<Rightarrow> bool spmf\"\nwhere\n  \"game \\<A> = do {\n    key \\<leftarrow> key_gen;\n    b \\<leftarrow> coin_spmf;\n    (b', L') \\<leftarrow> exec_gpv (oracle_encrypt key b \\<oplus>\\<^sub>O oracle_decrypt key) \\<A> {};\n    return_spmf (b = b')\n  }\""], ["", "definition advantage :: \"('message, 'cipher) adversary \\<Rightarrow> real\"\nwhere \"advantage \\<A> = \\<bar>spmf (game \\<A>) True - 1 / 2\\<bar>\""], ["", "lemma advantage_nonneg: \"0 \\<le> advantage \\<A>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> advantage \\<A>", "by(simp add: advantage_def)"], ["", "end"], ["", "end"]]}