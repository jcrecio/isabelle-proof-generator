{"file_name": "/home/qj213/afp-2021-10-22/thys/Hybrid_Systems_VCs/HS_VC_KA_ndfun.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Hybrid_Systems_VCs", "problem_names": ["lemma nd_fun_ext: \"(\\<And>x. (f\\<^sub>\\<bullet>) x = (g\\<^sub>\\<bullet>) x) \\<Longrightarrow> f = g\"", "lemma nd_fun_eq_iff: \"(f = g) = (\\<forall>x. (f\\<^sub>\\<bullet>) x = (g\\<^sub>\\<bullet>) x)\"", "lemma nd_fun_plus_assoc[nd_fun_ka]: \"x + y + z = x + (y + z)\"\n  and nd_fun_plus_comm[nd_fun_ka]: \"x + y = y + x\"\n  and nd_fun_plus_idem[nd_fun_ka]: \"x + x = x\" for x::\"'a nd_fun\"", "lemma nd_fun_distr[nd_fun_ka]: \"(x + y) \\<cdot> z = x \\<cdot> z + y \\<cdot> z\"\n  and nd_fun_distl[nd_fun_ka]: \"x \\<cdot> (y + z) = x \\<cdot> y + x \\<cdot> z\" for x::\"'a nd_fun\"", "lemma nd_fun_plus_zerol[nd_fun_ka]: \"0 + x = x\" \n  and nd_fun_mult_zerol[nd_fun_ka]: \"0 \\<cdot> x = 0\"\n  and nd_fun_mult_zeror[nd_fun_ka]: \"x \\<cdot> 0 = 0\" for x::\"'a nd_fun\"", "lemma nd_fun_leq[nd_fun_ka]: \"(x \\<le> y) = (x + y = y)\"\n  and nd_fun_less[nd_fun_ka]: \"(x < y) = (x + y = y \\<and> x \\<noteq> y)\"\n  and nd_fun_leq_add[nd_fun_ka]: \"z \\<cdot> x \\<le> z \\<cdot> (x + y)\" for x::\"'a nd_fun\"", "lemma nd_star_one[nd_fun_ka]: \"1 + x \\<cdot> x\\<^sup>\\<star> \\<le> x\\<^sup>\\<star>\"\n  and nd_star_unfoldl[nd_fun_ka]: \"z + x \\<cdot> y \\<le> y \\<Longrightarrow> x\\<^sup>\\<star> \\<cdot> z \\<le> y\"\n  and nd_star_unfoldr[nd_fun_ka]: \"z + y \\<cdot> x \\<le> y \\<Longrightarrow> z \\<cdot> x\\<^sup>\\<star> \\<le> y\" for x::\"'a nd_fun\""], "translations": [["", "lemma nd_fun_ext: \"(\\<And>x. (f\\<^sub>\\<bullet>) x = (g\\<^sub>\\<bullet>) x) \\<Longrightarrow> f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        (f\\<^sub>\\<bullet>) x = (g\\<^sub>\\<bullet>) x) \\<Longrightarrow>\n    f = g", "apply(subgoal_tac \"Rep_nd_fun f = Rep_nd_fun g\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x. (f\\<^sub>\\<bullet>) x = (g\\<^sub>\\<bullet>) x;\n     f\\<^sub>\\<bullet> = g\\<^sub>\\<bullet>\\<rbrakk>\n    \\<Longrightarrow> f = g\n 2. (\\<And>x.\n        (f\\<^sub>\\<bullet>) x = (g\\<^sub>\\<bullet>) x) \\<Longrightarrow>\n    f\\<^sub>\\<bullet> = g\\<^sub>\\<bullet>", "using Rep_nd_fun_inject"], ["proof (prove)\nusing this:\n  (?x\\<^sub>\\<bullet> = ?y\\<^sub>\\<bullet>) = (?x = ?y)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x. (f\\<^sub>\\<bullet>) x = (g\\<^sub>\\<bullet>) x;\n     f\\<^sub>\\<bullet> = g\\<^sub>\\<bullet>\\<rbrakk>\n    \\<Longrightarrow> f = g\n 2. (\\<And>x.\n        (f\\<^sub>\\<bullet>) x = (g\\<^sub>\\<bullet>) x) \\<Longrightarrow>\n    f\\<^sub>\\<bullet> = g\\<^sub>\\<bullet>", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        (f\\<^sub>\\<bullet>) x = (g\\<^sub>\\<bullet>) x) \\<Longrightarrow>\n    f\\<^sub>\\<bullet> = g\\<^sub>\\<bullet>", "by(rule ext, simp)"], ["", "lemma nd_fun_eq_iff: \"(f = g) = (\\<forall>x. (f\\<^sub>\\<bullet>) x = (g\\<^sub>\\<bullet>) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f = g) = (\\<forall>x. (f\\<^sub>\\<bullet>) x = (g\\<^sub>\\<bullet>) x)", "by (auto simp: nd_fun_ext)"], ["", "instantiation nd_fun :: (type) kleene_algebra\nbegin"], ["", "definition \"0 = \\<zeta>\\<^sup>\\<bullet>\""], ["", "definition \"star_nd_fun f = qstar f\" for f::\"'a nd_fun\""], ["", "definition \"f + g = ((f\\<^sub>\\<bullet>) \\<squnion> (g\\<^sub>\\<bullet>))\\<^sup>\\<bullet>\""], ["", "thm sup_nd_fun_def sup_fun_def"], ["", "named_theorems nd_fun_ka \"kleene algebra properties for nondeterministic functions.\""], ["", "lemma nd_fun_plus_assoc[nd_fun_ka]: \"x + y + z = x + (y + z)\"\n  and nd_fun_plus_comm[nd_fun_ka]: \"x + y = y + x\"\n  and nd_fun_plus_idem[nd_fun_ka]: \"x + x = x\" for x::\"'a nd_fun\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + y + z = x + (y + z) &&& x + y = y + x &&& x + x = x", "unfolding plus_nd_fun_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((x\\<^sub>\\<bullet> \\<squnion>\n       y\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\\<^sub>\\<bullet> \\<squnion>\n     z\\<^sub>\\<bullet>)\\<^sup>\\<bullet> =\n    (x\\<^sub>\\<bullet> \\<squnion>\n     ((y\\<^sub>\\<bullet> \\<squnion>\n       z\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\\<^sup>\\<bullet> &&&\n    (x\\<^sub>\\<bullet> \\<squnion> y\\<^sub>\\<bullet>)\\<^sup>\\<bullet> =\n    (y\\<^sub>\\<bullet> \\<squnion> x\\<^sub>\\<bullet>)\\<^sup>\\<bullet> &&&\n    (x\\<^sub>\\<bullet> \\<squnion> x\\<^sub>\\<bullet>)\\<^sup>\\<bullet> = x", "by (simp add: ksup_assoc, simp_all add: ksup_comm)"], ["", "lemma nd_fun_distr[nd_fun_ka]: \"(x + y) \\<cdot> z = x \\<cdot> z + y \\<cdot> z\"\n  and nd_fun_distl[nd_fun_ka]: \"x \\<cdot> (y + z) = x \\<cdot> y + x \\<cdot> z\" for x::\"'a nd_fun\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y) \\<cdot> z = x \\<cdot> z + y \\<cdot> z &&&\n    x \\<cdot> (y + z) = x \\<cdot> y + x \\<cdot> z", "unfolding plus_nd_fun_def times_nd_fun_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. id (\\<lambda>f g.\n           (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n            g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n     ((x\\<^sub>\\<bullet> \\<squnion> y\\<^sub>\\<bullet>)\\<^sup>\\<bullet>) z =\n    (id (\\<lambda>f g.\n            (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n             g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n      x z\\<^sub>\\<bullet> \\<squnion>\n     id (\\<lambda>f g.\n            (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n             g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n      y z\\<^sub>\\<bullet>)\\<^sup>\\<bullet> &&&\n    id (\\<lambda>f g.\n           (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n            g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n     x ((y\\<^sub>\\<bullet> \\<squnion> z\\<^sub>\\<bullet>)\\<^sup>\\<bullet>) =\n    (id (\\<lambda>f g.\n            (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n             g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n      x y\\<^sub>\\<bullet> \\<squnion>\n     id (\\<lambda>f g.\n            (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n             g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n      x z\\<^sub>\\<bullet>)\\<^sup>\\<bullet>", "by (simp_all add: kcomp_distr kcomp_distl)"], ["", "lemma nd_fun_plus_zerol[nd_fun_ka]: \"0 + x = x\" \n  and nd_fun_mult_zerol[nd_fun_ka]: \"0 \\<cdot> x = 0\"\n  and nd_fun_mult_zeror[nd_fun_ka]: \"x \\<cdot> 0 = 0\" for x::\"'a nd_fun\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 + x = x &&& 0 \\<cdot> x = 0 &&& x \\<cdot> 0 = 0", "unfolding plus_nd_fun_def zero_nd_fun_def times_nd_fun_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<zeta>\\<^sup>\\<bullet>)\\<^sub>\\<bullet> \\<squnion>\n     x\\<^sub>\\<bullet>)\\<^sup>\\<bullet> =\n    x &&&\n    id (\\<lambda>f g.\n           (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n            g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n     (\\<zeta>\\<^sup>\\<bullet>) x =\n    \\<zeta>\\<^sup>\\<bullet> &&&\n    id (\\<lambda>f g.\n           (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n            g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n     x (\\<zeta>\\<^sup>\\<bullet>) =\n    \\<zeta>\\<^sup>\\<bullet>", "by auto"], ["", "lemma nd_fun_leq[nd_fun_ka]: \"(x \\<le> y) = (x + y = y)\"\n  and nd_fun_less[nd_fun_ka]: \"(x < y) = (x + y = y \\<and> x \\<noteq> y)\"\n  and nd_fun_leq_add[nd_fun_ka]: \"z \\<cdot> x \\<le> z \\<cdot> (x + y)\" for x::\"'a nd_fun\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> y) = (x + y = y) &&&\n    (x < y) = (x + y = y \\<and> x \\<noteq> y) &&&\n    z \\<cdot> x \\<le> z \\<cdot> (x + y)", "unfolding less_eq_nd_fun_def less_nd_fun_def plus_nd_fun_def times_nd_fun_def sup_fun_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. id (\\<lambda>f g. f\\<^sub>\\<bullet> \\<le> g\\<^sub>\\<bullet>) x y =\n    ((\\<lambda>xa.\n         (x\\<^sub>\\<bullet>) xa \\<union>\n         (y\\<^sub>\\<bullet>) xa)\\<^sup>\\<bullet> =\n     y) &&&\n    id (\\<lambda>f g.\n           f\\<^sub>\\<bullet> \\<le> g\\<^sub>\\<bullet> \\<and> f \\<noteq> g)\n     x y =\n    ((\\<lambda>xa.\n         (x\\<^sub>\\<bullet>) xa \\<union>\n         (y\\<^sub>\\<bullet>) xa)\\<^sup>\\<bullet> =\n     y \\<and>\n     x \\<noteq> y) &&&\n    id (\\<lambda>f g. f\\<^sub>\\<bullet> \\<le> g\\<^sub>\\<bullet>)\n     (id (\\<lambda>f g.\n             (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n              g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n       z x)\n     (id (\\<lambda>f g.\n             (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n              g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n       z ((\\<lambda>xa.\n              (x\\<^sub>\\<bullet>) xa \\<union>\n              (y\\<^sub>\\<bullet>) xa)\\<^sup>\\<bullet>))", "by (unfold nd_fun_eq_iff le_fun_def, auto simp: kcomp_def)"], ["", "lemma nd_star_one[nd_fun_ka]: \"1 + x \\<cdot> x\\<^sup>\\<star> \\<le> x\\<^sup>\\<star>\"\n  and nd_star_unfoldl[nd_fun_ka]: \"z + x \\<cdot> y \\<le> y \\<Longrightarrow> x\\<^sup>\\<star> \\<cdot> z \\<le> y\"\n  and nd_star_unfoldr[nd_fun_ka]: \"z + y \\<cdot> x \\<le> y \\<Longrightarrow> z \\<cdot> x\\<^sup>\\<star> \\<le> y\" for x::\"'a nd_fun\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + x \\<cdot> x\\<^sup>\\<star> \\<le> x\\<^sup>\\<star> &&&\n    (z + x \\<cdot> y \\<le> y \\<Longrightarrow>\n     x\\<^sup>\\<star> \\<cdot> z \\<le> y) &&&\n    (z + y \\<cdot> x \\<le> y \\<Longrightarrow>\n     z \\<cdot> x\\<^sup>\\<star> \\<le> y)", "unfolding plus_nd_fun_def star_nd_fun_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (1\\<^sub>\\<bullet> \\<squnion>\n     (x \\<cdot> qstar x)\\<^sub>\\<bullet>)\\<^sup>\\<bullet>\n    \\<le> qstar x &&&\n    ((z\\<^sub>\\<bullet> \\<squnion>\n      (x \\<cdot> y)\\<^sub>\\<bullet>)\\<^sup>\\<bullet>\n     \\<le> y \\<Longrightarrow>\n     qstar x \\<cdot> z \\<le> y) &&&\n    ((z\\<^sub>\\<bullet> \\<squnion>\n      (y \\<cdot> x)\\<^sub>\\<bullet>)\\<^sup>\\<bullet>\n     \\<le> y \\<Longrightarrow>\n     z \\<cdot> qstar x \\<le> y)", "apply(simp_all add: fun_star_inductl sup_nd_fun.rep_eq fun_star_inductr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (1\\<^sub>\\<bullet> \\<squnion>\n     (x \\<cdot> qstar x)\\<^sub>\\<bullet>)\\<^sup>\\<bullet>\n    \\<le> qstar x", "by (metis order_refl sup_nd_fun.rep_eq uwqlka.conway.dagger_unfoldl_eq)"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a nd_fun, kleene_algebra_class)", "apply intro_classes"], ["proof (prove)\ngoal (16 subgoals):\n 1. \\<And>a b c. a + b + c = a + (b + c)\n 2. \\<And>a b. a + b = b + a\n 3. \\<And>x y z. (x + y) \\<cdot> z = x \\<cdot> z + y \\<cdot> z\n 4. \\<And>x. 1 \\<cdot> x = x\n 5. \\<And>x. x \\<cdot> 1 = x\n 6. \\<And>x. 0 + x = x\n 7. \\<And>x. 0 \\<cdot> x = 0\n 8. \\<And>x. x \\<cdot> 0 = 0\n 9. \\<And>x y. (x \\<le> y) = (x + y = y)\n 10. \\<And>x y. (x < y) = (x \\<le> y \\<and> x \\<noteq> y)\nA total of 16 subgoals...", "using nd_fun_ka"], ["proof (prove)\nusing this:\n  ?x + ?y + ?z = ?x + (?y + ?z)\n  ?x + ?y = ?y + ?x\n  ?x + ?x = ?x\n  (?x + ?y) \\<cdot> ?z = ?x \\<cdot> ?z + ?y \\<cdot> ?z\n  ?x \\<cdot> (?y + ?z) = ?x \\<cdot> ?y + ?x \\<cdot> ?z\n  0 + ?x = ?x\n  0 \\<cdot> ?x = 0\n  ?x \\<cdot> 0 = 0\n  (?x \\<le> ?y) = (?x + ?y = ?y)\n  (?x < ?y) = (?x + ?y = ?y \\<and> ?x \\<noteq> ?y)\n  ?z \\<cdot> ?x \\<le> ?z \\<cdot> (?x + ?y)\n  1 + ?x \\<cdot> ?x\\<^sup>\\<star> \\<le> ?x\\<^sup>\\<star>\n  ?z + ?x \\<cdot> ?y \\<le> ?y \\<Longrightarrow>\n  ?x\\<^sup>\\<star> \\<cdot> ?z \\<le> ?y\n  ?z + ?y \\<cdot> ?x \\<le> ?y \\<Longrightarrow>\n  ?z \\<cdot> ?x\\<^sup>\\<star> \\<le> ?y\n\ngoal (16 subgoals):\n 1. \\<And>a b c. a + b + c = a + (b + c)\n 2. \\<And>a b. a + b = b + a\n 3. \\<And>x y z. (x + y) \\<cdot> z = x \\<cdot> z + y \\<cdot> z\n 4. \\<And>x. 1 \\<cdot> x = x\n 5. \\<And>x. x \\<cdot> 1 = x\n 6. \\<And>x. 0 + x = x\n 7. \\<And>x. 0 \\<cdot> x = 0\n 8. \\<And>x. x \\<cdot> 0 = 0\n 9. \\<And>x y. (x \\<le> y) = (x + y = y)\n 10. \\<And>x y. (x < y) = (x \\<le> y \\<and> x \\<noteq> y)\nA total of 16 subgoals...", "by simp_all"], ["", "end"], ["", "end"]]}