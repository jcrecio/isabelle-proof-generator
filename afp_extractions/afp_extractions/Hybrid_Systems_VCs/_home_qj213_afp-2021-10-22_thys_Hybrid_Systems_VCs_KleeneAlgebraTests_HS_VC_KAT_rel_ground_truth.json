{"file_name": "/home/qj213/afp-2021-10-22/thys/Hybrid_Systems_VCs/KleeneAlgebraTests/HS_VC_KAT_rel.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Hybrid_Systems_VCs", "problem_names": ["lemma p2r_simps[simp]: \n  \"\\<lceil>P\\<rceil> \\<le> \\<lceil>Q\\<rceil> = (\\<forall>s. P s \\<longrightarrow> Q s)\"\n  \"(\\<lceil>P\\<rceil> = \\<lceil>Q\\<rceil>) = (\\<forall>s. P s = Q s)\"\n  \"(\\<lceil>P\\<rceil> ; \\<lceil>Q\\<rceil>) = \\<lceil>\\<lambda> s. P s \\<and> Q s\\<rceil>\"\n  \"(\\<lceil>P\\<rceil> \\<union> \\<lceil>Q\\<rceil>) = \\<lceil>\\<lambda> s. P s \\<or> Q s\\<rceil>\"\n  \"rel_tests.t \\<lceil>P\\<rceil> = \\<lceil>P\\<rceil>\"\n  \"(- Id) \\<union> \\<lceil>P\\<rceil> = - \\<lceil>\\<lambda>s. \\<not> P s\\<rceil>\"\n  \"Id \\<inter> (- \\<lceil>P\\<rceil>) = \\<lceil>\\<lambda>s. \\<not> P s\\<rceil>\"", "lemma RdL_is_rRKAT: \"(\\<forall>x. {(x,x)}; R1 \\<subseteq> {(x,x)}; R2) = (R1 \\<subseteq> R2)\"", "lemma rel_kat_H: \"\\<^bold>{P\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<forall>s s'. P s \\<longrightarrow> (s,s') \\<in> X \\<longrightarrow> Q s')\"", "lemma sH_skip[simp]: \"\\<^bold>{P\\<^bold>} skip \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>Q\\<rceil>\"", "lemma H_skip: \"\\<^bold>{P\\<^bold>} skip \\<^bold>{P\\<^bold>}\"", "lemma sH_test[simp]: \"\\<^bold>{P\\<^bold>} \\<lceil>R\\<rceil> \\<^bold>{Q\\<^bold>} = (\\<forall>s. P s \\<longrightarrow> R s \\<longrightarrow> Q s)\"", "lemma sH_abort[simp]: \"\\<^bold>{P\\<^bold>} abort \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> True\"", "lemma H_abort: \"\\<^bold>{P\\<^bold>} abort \\<^bold>{Q\\<^bold>}\"", "lemma sH_assign[simp]: \"\\<^bold>{P\\<^bold>} (x ::= e) \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<forall>s. P s \\<longrightarrow> Q (\\<chi> j. ((($) s)(x := (e s))) j))\"", "lemma H_assign: \"P = (\\<lambda>s. Q (\\<chi> j. ((($) s)(x := (e s))) j)) \\<Longrightarrow> \\<^bold>{P\\<^bold>} (x ::= e) \\<^bold>{Q\\<^bold>}\"", "lemma sH_nondet_assign[simp]: \n  \"\\<^bold>{P\\<^bold>} (x ::= ?) \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<forall>s. P s \\<longrightarrow> (\\<forall>k. Q (\\<chi> j. ((($) s)(x := k)) j)))\"", "lemma H_nondet_assign: \"\\<^bold>{\\<lambda>s. \\<forall>k. P (\\<chi> j. ((($) s)(x := k)) j)\\<^bold>} (x ::= ?) \\<^bold>{P\\<^bold>}\"", "lemma H_seq: \"\\<^bold>{P\\<^bold>} X \\<^bold>{R\\<^bold>} \\<Longrightarrow> \\<^bold>{R\\<^bold>} Y \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} X;Y \\<^bold>{Q\\<^bold>}\"", "lemma sH_seq: \"\\<^bold>{P\\<^bold>} X;Y \\<^bold>{Q\\<^bold>} = \\<^bold>{P\\<^bold>} X \\<^bold>{\\<lambda>s. \\<forall>s'. (s, s') \\<in> Y \\<longrightarrow> Q s'\\<^bold>}\"", "lemma H_assignl: \n  assumes \"\\<^bold>{K\\<^bold>} X \\<^bold>{Q\\<^bold>}\" \n    and \"\\<forall>s. P s \\<longrightarrow> K (vec_lambda ((($) s)(x := e s)))\"\n  shows \"\\<^bold>{P\\<^bold>} (x ::= e);X \\<^bold>{Q\\<^bold>}\"", "lemma sH_choice: \"\\<^bold>{P\\<^bold>} X \\<union> Y \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<^bold>{P\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<and> \\<^bold>{P\\<^bold>} Y \\<^bold>{Q\\<^bold>})\"", "lemma H_choice: \"\\<^bold>{P\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} Y \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} X \\<union> Y \\<^bold>{Q\\<^bold>}\"", "lemma sH_cond[simp]: \n  \"\\<^bold>{P\\<^bold>} (IF B THEN X ELSE Y) \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<^bold>{\\<lambda>s. P s \\<and> B s\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<and> \\<^bold>{\\<lambda>s. P s \\<and> \\<not> B s\\<^bold>} Y \\<^bold>{Q\\<^bold>})\"", "lemma H_cond: \n  \"\\<^bold>{\\<lambda>s. P s \\<and> B s\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{\\<lambda>s. P s \\<and> \\<not> B s\\<^bold>} Y \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} (IF B THEN X ELSE Y) \\<^bold>{Q\\<^bold>}\"", "lemma sH_whileI: \"\\<forall>s. P s \\<longrightarrow> I s \\<Longrightarrow> \\<forall>s. I s \\<and> \\<not> B s \\<longrightarrow> Q s \\<Longrightarrow> \\<^bold>{\\<lambda>s. I s \\<and> B s\\<^bold>} X \\<^bold>{I\\<^bold>} \n  \\<Longrightarrow> \\<^bold>{P\\<^bold>} (WHILE B INV I DO X) \\<^bold>{Q\\<^bold>}\"", "lemma \"\\<^bold>{\\<lambda>s. P s \\<and> B s\\<^bold>} X \\<^bold>{\\<lambda>s. P s\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} (WHILE B INV I DO X) \\<^bold>{\\<lambda>s. P s \\<and> \\<not> B s\\<^bold>}\"", "lemma H_loop: \"\\<^bold>{P\\<^bold>} X \\<^bold>{P\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} (LOOP X INV I) \\<^bold>{P\\<^bold>}\"", "lemma H_loopI: \"\\<^bold>{I\\<^bold>} X \\<^bold>{I\\<^bold>} \\<Longrightarrow> \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>I\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil> \\<Longrightarrow> \\<^bold>{P\\<^bold>} (LOOP X INV I) \\<^bold>{Q\\<^bold>}\"", "lemma sH_g_evol[simp]:  \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"\\<^bold>{P\\<^bold>} (EVOL \\<phi> G U) \\<^bold>{Q\\<^bold>} = (\\<forall>s. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\"", "lemma H_g_evol: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  assumes \"P = (\\<lambda>s. (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\"\n  shows \"\\<^bold>{P\\<^bold>} (EVOL \\<phi> G U) \\<^bold>{Q\\<^bold>}\"", "lemma H_g_orbital: \n  \"P = (\\<lambda>s. (\\<forall>X\\<in>ivp_sols f U S t\\<^sub>0 s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (X \\<tau>)) \\<longrightarrow> Q (X t))) \\<Longrightarrow> \n  \\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\"", "lemma sH_g_orbital: \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>} = \n  (\\<forall>s. P s \\<longrightarrow> (\\<forall>X\\<in>ivp_sols f U S t\\<^sub>0 s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (X \\<tau>)) \\<longrightarrow> Q (X t)))\"", "lemma sH_g_ode_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<^bold>{Q\\<^bold>} = \n  (\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\"", "lemma H_g_ode_subset:\n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n    and \"P = (\\<lambda>s. s \\<in> S \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\" \n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<^bold>{Q\\<^bold>}\"", "lemma sH_g_ode: \"\\<^bold>{P\\<^bold>} (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) \\<^bold>{Q\\<^bold>} = \n  (\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\"", "lemma sH_g_ode_ivl: \"t \\<ge> 0 \\<Longrightarrow> t \\<in> T \\<Longrightarrow> \\<^bold>{P\\<^bold>} (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. {0..t}) S @ 0) \\<^bold>{Q\\<^bold>} = \n  (\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>{0..t}. (\\<forall>\\<tau>\\<in>{0..t}. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\"", "lemma sH_orbit: \"\\<^bold>{P\\<^bold>} ({(s,s') | s s'. s' \\<in> \\<gamma>\\<^sup>\\<phi> s}) \\<^bold>{Q\\<^bold>} = (\\<forall>s \\<in> S. P s \\<longrightarrow> (\\<forall> t \\<in> T. Q (\\<phi> t s)))\"", "lemma sH_g_orbital_guard: \n  assumes \"R = (\\<lambda>s. G s \\<and> Q s)\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>} = \\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{R\\<^bold>}\"", "lemma sH_g_orbital_inv:\n  assumes \"\\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>\" and \"\\<^bold>{I\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{I\\<^bold>}\" and \"\\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\"\n  shows \" \\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\"", "lemma sH_diff_inv[simp]: \"\\<^bold>{I\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{I\\<^bold>} = diff_invariant I f U S t\\<^sub>0 G\"", "lemma H_g_ode_inv: \"\\<^bold>{I\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{I\\<^bold>} \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow> \n  \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> \\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0 DINV I) \\<^bold>{Q\\<^bold>}\"", "lemma R_skip: \"(\\<forall>s. P s \\<longrightarrow> Q s) \\<Longrightarrow> skip \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_abort: \"abort \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_seq: \"(rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>) ; (rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_seq_law: \"X \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil> \\<Longrightarrow> Y \\<le> rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> X; Y \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemmas R_seq_mono = relcomp_mono\n\n\\<comment> \\<open> Nondeterministic Choice \\<close>", "lemma R_choice: \"(rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>) \\<union> (rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_choice_law: \"X \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> Y \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> X \\<union> Y \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_choice_mono: \"P' \\<subseteq> P \\<Longrightarrow> Q' \\<subseteq> Q \\<Longrightarrow> P' \\<union> Q' \\<subseteq> P \\<union> Q\"", "lemma R_assign: \"(x ::= e) \\<le> rel_R \\<lceil>\\<lambda>s. P (\\<chi> j. ((($) s)(x := e s)) j)\\<rceil> \\<lceil>P\\<rceil>\"", "lemma R_assign_law: \n  \"(\\<forall>s. P s \\<longrightarrow> Q (\\<chi> j. ((($) s)(x := (e s))) j)) \\<Longrightarrow> (x ::= e) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_assignl: \"P = (\\<lambda>s. R (\\<chi> j. ((($) s)(x := e s)) j)) \\<Longrightarrow> \n  (x ::= e) ; rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_assignr: \"R = (\\<lambda>s. Q (\\<chi> j. ((($) s)(x := e s)) j)) \\<Longrightarrow> \n  rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>; (x ::= e) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma \"(x ::= e) ; rel_R \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil> \\<le> rel_R \\<lceil>(\\<lambda>s. Q (\\<chi> j. ((($) s)(x := e s)) j))\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma \"rel_R \\<lceil>Q\\<rceil> \\<lceil>(\\<lambda>s. Q (\\<chi> j. ((($) s)(x := e s)) j))\\<rceil>; (x ::= e) \\<le> rel_R \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_nondet_assign: \"(x ::= ?) \\<le> rel_R \\<lceil>\\<lambda>s. \\<forall>k. P (\\<chi> j. ((($) s)(x := k)) j)\\<rceil> \\<lceil>P\\<rceil>\"", "lemma R_nondet_assign_law: \n  \"(\\<forall>s. P s \\<longrightarrow> (\\<forall>k. Q (\\<chi> j. ((($) s)(x := k)) j))) \\<Longrightarrow> (x ::= ?) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_cond: \n  \"(IF B THEN rel_R \\<lceil>\\<lambda>s. B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil> ELSE rel_R \\<lceil>\\<lambda>s. \\<not> B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil>) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_cond_mono: \"X \\<le> X' \\<Longrightarrow> Y \\<le> Y' \\<Longrightarrow> (IF P THEN X ELSE Y) \\<le> IF P THEN X' ELSE Y'\"", "lemma R_cond_law: \"X \\<le> rel_R \\<lceil>\\<lambda>s. B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> Y \\<le> rel_R \\<lceil>\\<lambda>s. \\<not> B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> \n  (IF B THEN X ELSE Y) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_while: \"K = (\\<lambda>s. P s \\<and> \\<not> B s) \\<Longrightarrow> \n  WHILE B INV I DO (rel_R \\<lceil>\\<lambda>s. P s \\<and> B s\\<rceil> \\<lceil>P\\<rceil>) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>K\\<rceil>\"", "lemma R_whileI:\n  \"X \\<le> rel_R \\<lceil>I\\<rceil> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>\\<lambda>s. I s \\<and> B s\\<rceil> \\<Longrightarrow> \\<lceil>\\<lambda>s. I s \\<and> \\<not> B s\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> \n  WHILE B INV I DO X \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_while_mono: \"X \\<le> X' \\<Longrightarrow> (WHILE P INV I DO X) \\<subseteq> WHILE P INV I DO X'\"", "lemma R_while_law: \"X \\<le> rel_R \\<lceil>\\<lambda>s. P s \\<and> B s\\<rceil> \\<lceil>P\\<rceil> \\<Longrightarrow> Q = (\\<lambda>s. P s \\<and> \\<not> B s) \\<Longrightarrow> \n  (WHILE B INV I DO X) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_loop:\"LOOP rel_R \\<lceil>P\\<rceil> \\<lceil>P\\<rceil> INV I \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>P\\<rceil>\"", "lemma R_loopI: \n  \"X \\<le> rel_R \\<lceil>I\\<rceil> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> LOOP X INV I \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_loop_mono: \"X \\<le> X' \\<Longrightarrow> LOOP X INV I \\<subseteq> LOOP X' INV I\"", "lemma R_g_evol: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"(EVOL \\<phi> G U) \\<le> rel_R \\<lceil>\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> P (\\<phi> t s)\\<rceil> \\<lceil>P\\<rceil>\"", "lemma R_g_evol_law: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"(\\<forall>s. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))) \\<Longrightarrow> (EVOL \\<phi> G U) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_evoll: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"P = (\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> R (\\<phi> t s)) \\<Longrightarrow> \n  (EVOL \\<phi> G U) ; rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_evolr: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"R = (\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)) \\<Longrightarrow> \n  rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>; (EVOL \\<phi> G U) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"EVOL \\<phi> G U ; rel_R \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil> \\<le> rel_R \\<lceil>\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"rel_R \\<lceil>Q\\<rceil> \\<lceil>\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)\\<rceil>; EVOL \\<phi> G U \\<le> rel_R \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_ode_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n  shows \"(x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<le> \n  rel_R \\<lceil>\\<lambda>s. s\\<in>S \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> P (\\<phi> t s))\\<rceil> \\<lceil>P\\<rceil>\"", "lemma R_g_ode_rule_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n  shows \"(\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))) \\<Longrightarrow> \n  (x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_odel_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n    and \"P = (\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> R (\\<phi> t s))\"\n  shows \"(x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) ; rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_oder_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n    and \"R = (\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))\"\n  shows \"rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>; (x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_ode: \"(x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) \\<le> \n  rel_R \\<lceil>\\<lambda>s. s\\<in>S \\<longrightarrow> (\\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> P (\\<phi> t s))\\<rceil> \\<lceil>P\\<rceil>\"", "lemma R_g_ode_law: \"(\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))) \\<Longrightarrow> \n  (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_odel: \"P = (\\<lambda>s. \\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> R (\\<phi> t s)) \\<Longrightarrow> \n  (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) ; rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_oder: \"R = (\\<lambda>s. \\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)) \\<Longrightarrow> \n  rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>; (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_ode_ivl: \n  \"t \\<ge> 0 \\<Longrightarrow> t \\<in> T \\<Longrightarrow> (\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>{0..t}. (\\<forall>\\<tau>\\<in>{0..t}. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))) \\<Longrightarrow> \n  (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. {0..t}) S @ 0) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_ode_inv: \"diff_invariant I f T S t\\<^sub>0 G \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> \n  (x\\<acute>=f & G on T S @ t\\<^sub>0 DINV I) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma diff_solve_rule1:\n  assumes \"local_flow f UNIV UNIV \\<phi>\"\n    and \"\\<forall>s. P s \\<longrightarrow> (\\<forall>t\\<ge>0. (\\<forall>\\<tau>\\<in>{0..t}. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G) \\<^bold>{Q\\<^bold>}\"", "lemma diff_solve_rule2: \n  fixes c::\"'a::{heine_borel, banach}\"\n  assumes \"\\<forall>s. P s \\<longrightarrow> (\\<forall>t\\<ge>0. (\\<forall>\\<tau>\\<in>{0..t}. G (s + \\<tau> *\\<^sub>R c)) \\<longrightarrow> Q (s + t *\\<^sub>R c))\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>=(\\<lambda>s. c) & G) \\<^bold>{Q\\<^bold>}\"", "lemma diff_weak_rule: \n  assumes \"\\<lceil>G\\<rceil> \\<le> \\<lceil>Q\\<rceil>\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\"", "lemma diff_cut_rule:\n  assumes wp_C:\"rel_kat.Hoare \\<lceil>P\\<rceil> (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<lceil>C\\<rceil>\"\n    and wp_Q:\"rel_kat.Hoare \\<lceil>P\\<rceil> (x\\<acute>= f & (\\<lambda> s. G s \\<and> C s) on U S @ t\\<^sub>0) \\<lceil>Q\\<rceil>\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\"", "lemma diff_inv_rule:\n  assumes \"\\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>\" and \"diff_invariant I f U S t\\<^sub>0 G\" and \"\\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\""], "translations": [["", "lemma p2r_simps[simp]: \n  \"\\<lceil>P\\<rceil> \\<le> \\<lceil>Q\\<rceil> = (\\<forall>s. P s \\<longrightarrow> Q s)\"\n  \"(\\<lceil>P\\<rceil> = \\<lceil>Q\\<rceil>) = (\\<forall>s. P s = Q s)\"\n  \"(\\<lceil>P\\<rceil> ; \\<lceil>Q\\<rceil>) = \\<lceil>\\<lambda> s. P s \\<and> Q s\\<rceil>\"\n  \"(\\<lceil>P\\<rceil> \\<union> \\<lceil>Q\\<rceil>) = \\<lceil>\\<lambda> s. P s \\<or> Q s\\<rceil>\"\n  \"rel_tests.t \\<lceil>P\\<rceil> = \\<lceil>P\\<rceil>\"\n  \"(- Id) \\<union> \\<lceil>P\\<rceil> = - \\<lceil>\\<lambda>s. \\<not> P s\\<rceil>\"\n  \"Id \\<inter> (- \\<lceil>P\\<rceil>) = \\<lceil>\\<lambda>s. \\<not> P s\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lceil>P\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil>) =\n     (\\<forall>s. P s \\<longrightarrow> Q s) &&&\n     (\\<lceil>P\\<rceil> = \\<lceil>Q\\<rceil>) = (\\<forall>s. P s = Q s) &&&\n     \\<lceil>P\\<rceil> ; \\<lceil>Q\\<rceil> =\n     \\<lceil>\\<lambda>s. P s \\<and> Q s\\<rceil>) &&&\n    (\\<lceil>P\\<rceil> \\<union> \\<lceil>Q\\<rceil> =\n     \\<lceil>\\<lambda>s. P s \\<or> Q s\\<rceil> &&&\n     rel_tests.t \\<lceil>P\\<rceil> = \\<lceil>P\\<rceil>) &&&\n    - skip \\<union> \\<lceil>P\\<rceil> =\n    - \\<lceil>\\<lambda>s. \\<not> P s\\<rceil> &&&\n    skip \\<inter> - \\<lceil>P\\<rceil> =\n    \\<lceil>\\<lambda>s. \\<not> P s\\<rceil>", "unfolding p2r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (({(s, s) |s. P s} \\<subseteq> {(s, s) |s. Q s}) =\n     (\\<forall>s. P s \\<longrightarrow> Q s) &&&\n     ({(s, s) |s. P s} = {(s, s) |s. Q s}) = (\\<forall>s. P s = Q s) &&&\n     {(s, s) |s. P s} ; {(s, s) |s. Q s} = {(s, s) |s. P s \\<and> Q s}) &&&\n    ({(s, s) |s. P s} \\<union> {(s, s) |s. Q s} =\n     {(s, s) |s. P s \\<or> Q s} &&&\n     rel_tests.t {(s, s) |s. P s} = {(s, s) |s. P s}) &&&\n    - skip \\<union> {(s, s) |s. P s} = - {(s, s) |s. \\<not> P s} &&&\n    skip \\<inter> - {(s, s) |s. P s} = {(s, s) |s. \\<not> P s}", "by auto"], ["", "text \\<open> Lemmas for verification condition generation \\<close>"], ["", "lemma RdL_is_rRKAT: \"(\\<forall>x. {(x,x)}; R1 \\<subseteq> {(x,x)}; R2) = (R1 \\<subseteq> R2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. {(x, x)} ; R1 \\<subseteq> {(x, x)} ; R2) =\n    (R1 \\<subseteq> R2)", "by auto (* Refinement in dL is that of rKAT *)\n\n\\<comment> \\<open> Hoare Triples \\<close>"], ["", "abbreviation relHoare (\"\\<^bold>{_\\<^bold>}_\\<^bold>{_\\<^bold>}\") \n  where \"\\<^bold>{P\\<^bold>}X\\<^bold>{Q\\<^bold>} \\<equiv> rel_kat.Hoare \\<lceil>P\\<rceil> X \\<lceil>Q\\<rceil>\""], ["", "lemma rel_kat_H: \"\\<^bold>{P\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<forall>s s'. P s \\<longrightarrow> (s,s') \\<in> X \\<longrightarrow> Q s')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}X\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s s'.\n        P s \\<longrightarrow> (s, s') \\<in> X \\<longrightarrow> Q s')", "by (simp add: rel_kat.Hoare_def, auto simp add: p2r_def)\n\n\\<comment> \\<open> Skip \\<close>"], ["", "lemma sH_skip[simp]: \"\\<^bold>{P\\<^bold>} skip \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}skip\\<^bold>{Q\\<^bold>} =\n    (\\<lceil>P\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil>)", "unfolding rel_kat_H"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow> (s, s') \\<in> skip \\<longrightarrow> Q s') =\n    (\\<lceil>P\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil>)", "by simp"], ["", "lemma H_skip: \"\\<^bold>{P\\<^bold>} skip \\<^bold>{P\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}skip\\<^bold>{P\\<^bold>}", "by simp\n\n\\<comment> \\<open> Tests \\<close>"], ["", "lemma sH_test[simp]: \"\\<^bold>{P\\<^bold>} \\<lceil>R\\<rceil> \\<^bold>{Q\\<^bold>} = (\\<forall>s. P s \\<longrightarrow> R s \\<longrightarrow> Q s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}\\<lceil>R\\<rceil>\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s. P s \\<longrightarrow> R s \\<longrightarrow> Q s)", "by (subst rel_kat_H, simp add: p2r_def)\n\n\\<comment> \\<open> Abort \\<close>"], ["", "lemma sH_abort[simp]: \"\\<^bold>{P\\<^bold>} abort \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}abort\\<^bold>{Q\\<^bold>} = True", "unfolding rel_kat_H"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow> (s, s') \\<in> abort \\<longrightarrow> Q s') =\n    True", "by simp"], ["", "lemma H_abort: \"\\<^bold>{P\\<^bold>} abort \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}abort\\<^bold>{Q\\<^bold>}", "by simp\n\n\\<comment> \\<open> Assignments \\<close>"], ["", "definition assign :: \"'b \\<Rightarrow> ('a^'b \\<Rightarrow> 'a) \\<Rightarrow> ('a^'b) rel\" (\"(2_ ::= _)\" [70, 65] 61) \n  where \"(x ::= e) \\<equiv> {(s, vec_upd s x (e s))| s. True}\""], ["", "lemma sH_assign[simp]: \"\\<^bold>{P\\<^bold>} (x ::= e) \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<forall>s. P s \\<longrightarrow> Q (\\<chi> j. ((($) s)(x := (e s))) j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x ::= e\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s. P s \\<longrightarrow> Q (\\<chi>j. ((($) s)(x := e s)) j))", "unfolding rel_kat_H vec_upd_def assign_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow>\n        (s, s')\n        \\<in> {(s, vec_lambda ((($) s)(x := e s))) |s.\n               True} \\<longrightarrow>\n        Q s') =\n    (\\<forall>s. P s \\<longrightarrow> Q (\\<chi>j. ((($) s)(x := e s)) j))", "by (auto simp: fun_upd_def)"], ["", "lemma H_assign: \"P = (\\<lambda>s. Q (\\<chi> j. ((($) s)(x := (e s))) j)) \\<Longrightarrow> \\<^bold>{P\\<^bold>} (x ::= e) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P = (\\<lambda>s. Q (\\<chi>j. ((($) s)(x := e s)) j)) \\<Longrightarrow>\n    \\<^bold>{P\\<^bold>}x ::= e\\<^bold>{Q\\<^bold>}", "by simp\n\n\\<comment> \\<open> Nondeterministic assignments \\<close>"], ["", "definition nondet_assign :: \"'b \\<Rightarrow> ('a^'b) rel\" (\"(2_ ::= ? )\" [70] 61)\n  where \"(x ::= ?) = {(s,vec_upd s x k)|s k. True}\""], ["", "lemma sH_nondet_assign[simp]: \n  \"\\<^bold>{P\\<^bold>} (x ::= ?) \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<forall>s. P s \\<longrightarrow> (\\<forall>k. Q (\\<chi> j. ((($) s)(x := k)) j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x ::= ? \\<^bold>{Q\\<^bold>} =\n    (\\<forall>s.\n        P s \\<longrightarrow>\n        (\\<forall>k. Q (\\<chi>j. ((($) s)(x := k)) j)))", "unfolding rel_kat_H vec_upd_def nondet_assign_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow>\n        (s, s')\n        \\<in> {(s, vec_lambda ((($) s)(x := k))) |s k.\n               True} \\<longrightarrow>\n        Q s') =\n    (\\<forall>s.\n        P s \\<longrightarrow>\n        (\\<forall>k. Q (\\<chi>j. ((($) s)(x := k)) j)))", "by (auto simp: fun_upd_def)"], ["", "lemma H_nondet_assign: \"\\<^bold>{\\<lambda>s. \\<forall>k. P (\\<chi> j. ((($) s)(x := k)) j)\\<^bold>} (x ::= ?) \\<^bold>{P\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{\\<lambda>s.\n                \\<forall>k.\n                   P (\\<chi>j.\n                         ((($) s)(x := k))\n                          j)\\<^bold>}x ::= ? \\<^bold>{P\\<^bold>}", "by simp\n\n\\<comment> \\<open> Sequential Composition \\<close>"], ["", "lemma H_seq: \"\\<^bold>{P\\<^bold>} X \\<^bold>{R\\<^bold>} \\<Longrightarrow> \\<^bold>{R\\<^bold>} Y \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} X;Y \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{P\\<^bold>}X\\<^bold>{R\\<^bold>};\n     \\<^bold>{R\\<^bold>}Y\\<^bold>{Q\\<^bold>}\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}X ; Y\\<^bold>{Q\\<^bold>}", "using rel_kat.H_seq"], ["proof (prove)\nusing this:\n  \\<lbrakk>rel_kat.Hoare ?p ?x ?r; rel_kat.Hoare ?r ?y ?q\\<rbrakk>\n  \\<Longrightarrow> rel_kat.Hoare ?p (?x ; ?y) ?q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{P\\<^bold>}X\\<^bold>{R\\<^bold>};\n     \\<^bold>{R\\<^bold>}Y\\<^bold>{Q\\<^bold>}\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}X ; Y\\<^bold>{Q\\<^bold>}", "."], ["", "lemma sH_seq: \"\\<^bold>{P\\<^bold>} X;Y \\<^bold>{Q\\<^bold>} = \\<^bold>{P\\<^bold>} X \\<^bold>{\\<lambda>s. \\<forall>s'. (s, s') \\<in> Y \\<longrightarrow> Q s'\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}X ; Y\\<^bold>{Q\\<^bold>} =\n    \\<^bold>{P\\<^bold>}X\\<^bold>{\\<lambda>s.\n                                    \\<forall>s'.\n (s, s') \\<in> Y \\<longrightarrow> Q s'\\<^bold>}", "unfolding rel_kat_H"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow> (s, s') \\<in> X ; Y \\<longrightarrow> Q s') =\n    (\\<forall>s s'.\n        P s \\<longrightarrow>\n        (s, s') \\<in> X \\<longrightarrow>\n        (\\<forall>s'a. (s', s'a) \\<in> Y \\<longrightarrow> Q s'a))", "by auto"], ["", "lemma H_assignl: \n  assumes \"\\<^bold>{K\\<^bold>} X \\<^bold>{Q\\<^bold>}\" \n    and \"\\<forall>s. P s \\<longrightarrow> K (vec_lambda ((($) s)(x := e s)))\"\n  shows \"\\<^bold>{P\\<^bold>} (x ::= e);X \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}(x ::= e) ; X\\<^bold>{Q\\<^bold>}", "apply(rule H_seq, subst sH_assign)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>s. P s \\<longrightarrow> ?R (vec_lambda ((($) s)(x := e s)))\n 2. \\<^bold>{?R\\<^bold>}X\\<^bold>{Q\\<^bold>}", "using assms"], ["proof (prove)\nusing this:\n  \\<^bold>{K\\<^bold>}X\\<^bold>{Q\\<^bold>}\n  \\<forall>s. P s \\<longrightarrow> K (vec_lambda ((($) s)(x := e s)))\n\ngoal (2 subgoals):\n 1. \\<forall>s. P s \\<longrightarrow> ?R (vec_lambda ((($) s)(x := e s)))\n 2. \\<^bold>{?R\\<^bold>}X\\<^bold>{Q\\<^bold>}", "by auto\n\n\\<comment> \\<open> Nondeterministic Choice \\<close>"], ["", "lemma sH_choice: \"\\<^bold>{P\\<^bold>} X \\<union> Y \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<^bold>{P\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<and> \\<^bold>{P\\<^bold>} Y \\<^bold>{Q\\<^bold>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}X \\<union> Y\\<^bold>{Q\\<^bold>} =\n    (\\<^bold>{P\\<^bold>}X\\<^bold>{Q\\<^bold>} \\<and>\n     \\<^bold>{P\\<^bold>}Y\\<^bold>{Q\\<^bold>})", "unfolding rel_kat_H"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow>\n        (s, s') \\<in> X \\<union> Y \\<longrightarrow> Q s') =\n    ((\\<forall>s s'.\n         P s \\<longrightarrow>\n         (s, s') \\<in> X \\<longrightarrow> Q s') \\<and>\n     (\\<forall>s s'.\n         P s \\<longrightarrow> (s, s') \\<in> Y \\<longrightarrow> Q s'))", "by auto"], ["", "lemma H_choice: \"\\<^bold>{P\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} Y \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} X \\<union> Y \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{P\\<^bold>}X\\<^bold>{Q\\<^bold>};\n     \\<^bold>{P\\<^bold>}Y\\<^bold>{Q\\<^bold>}\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}X \\<union> Y\\<^bold>{Q\\<^bold>}", "using rel_kat.H_choice"], ["proof (prove)\nusing this:\n  \\<lbrakk>rel_kat.Hoare ?p ?x ?q; rel_kat.Hoare ?p ?y ?q\\<rbrakk>\n  \\<Longrightarrow> rel_kat.Hoare ?p (?x \\<union> ?y) ?q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{P\\<^bold>}X\\<^bold>{Q\\<^bold>};\n     \\<^bold>{P\\<^bold>}Y\\<^bold>{Q\\<^bold>}\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}X \\<union> Y\\<^bold>{Q\\<^bold>}", ".\n\n\\<comment> \\<open> Conditional Statement \\<close>"], ["", "abbreviation cond_sugar :: \"'a pred \\<Rightarrow> 'a rel \\<Rightarrow> 'a rel \\<Rightarrow> 'a rel\" \n  (\"IF _ THEN _ ELSE _\" [64,64] 63) \n  where \"IF B THEN X ELSE Y \\<equiv> rel_kat.kat_cond \\<lceil>B\\<rceil> X Y\""], ["", "lemma sH_cond[simp]: \n  \"\\<^bold>{P\\<^bold>} (IF B THEN X ELSE Y) \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<^bold>{\\<lambda>s. P s \\<and> B s\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<and> \\<^bold>{\\<lambda>s. P s \\<and> \\<not> B s\\<^bold>} Y \\<^bold>{Q\\<^bold>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}IF B THEN X ELSE Y\\<^bold>{Q\\<^bold>} =\n    (\\<^bold>{\\<lambda>s. P s \\<and> B s\\<^bold>}X\\<^bold>{Q\\<^bold>} \\<and>\n     \\<^bold>{\\<lambda>s.\n                 P s \\<and> \\<not> B s\\<^bold>}Y\\<^bold>{Q\\<^bold>})", "by (auto simp: rel_kat.H_cond_iff rel_kat_H)"], ["", "lemma H_cond: \n  \"\\<^bold>{\\<lambda>s. P s \\<and> B s\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{\\<lambda>s. P s \\<and> \\<not> B s\\<^bold>} Y \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} (IF B THEN X ELSE Y) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{\\<lambda>s.\n                         P s \\<and> B s\\<^bold>}X\\<^bold>{Q\\<^bold>};\n     \\<^bold>{\\<lambda>s.\n                 P s \\<and> \\<not> B s\\<^bold>}Y\\<^bold>{Q\\<^bold>}\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}IF B THEN X ELSE Y\\<^bold>{Q\\<^bold>}", "by simp\n\n\\<comment> \\<open> While Loop \\<close>"], ["", "abbreviation while_inv_sugar :: \"'a pred \\<Rightarrow> 'a pred \\<Rightarrow> 'a rel \\<Rightarrow> 'a rel\" \n  (\"WHILE _ INV _ DO _\" [64,64,64] 63) \n  where \"WHILE B INV I DO X \\<equiv> rel_kat.kat_while_inv \\<lceil>B\\<rceil> \\<lceil>I\\<rceil> X\""], ["", "lemma sH_whileI: \"\\<forall>s. P s \\<longrightarrow> I s \\<Longrightarrow> \\<forall>s. I s \\<and> \\<not> B s \\<longrightarrow> Q s \\<Longrightarrow> \\<^bold>{\\<lambda>s. I s \\<and> B s\\<^bold>} X \\<^bold>{I\\<^bold>} \n  \\<Longrightarrow> \\<^bold>{P\\<^bold>} (WHILE B INV I DO X) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>s. P s \\<longrightarrow> I s;\n     \\<forall>s. I s \\<and> \\<not> B s \\<longrightarrow> Q s;\n     \\<^bold>{\\<lambda>s.\n                 I s \\<and> B s\\<^bold>}X\\<^bold>{I\\<^bold>}\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}WHILE B INV I DO X\\<^bold>{Q\\<^bold>}", "by (rule rel_kat.H_while_inv, auto simp: p2r_def rel_kat.Hoare_def, fastforce)"], ["", "lemma \"\\<^bold>{\\<lambda>s. P s \\<and> B s\\<^bold>} X \\<^bold>{\\<lambda>s. P s\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} (WHILE B INV I DO X) \\<^bold>{\\<lambda>s. P s \\<and> \\<not> B s\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{\\<lambda>s.\n                P s \\<and>\n                B s\\<^bold>}X\\<^bold>{P\\<^bold>} \\<Longrightarrow>\n    \\<^bold>{P\\<^bold>}WHILE B INV I DO X\\<^bold>{\\<lambda>s.\n               P s \\<and> \\<not> B s\\<^bold>}", "using rel_kat.H_while[of \"\\<lceil>P\\<rceil>\" \"\\<lceil>B\\<rceil>\" X]"], ["proof (prove)\nusing this:\n  rel_kat.Hoare\n   (rel_tests.t \\<lceil>P\\<rceil> ; rel_tests.t \\<lceil>B\\<rceil>) X\n   \\<lceil>P\\<rceil> \\<Longrightarrow>\n  rel_kat.Hoare \\<lceil>P\\<rceil> (rel_kat.kat_while \\<lceil>B\\<rceil> X)\n   (rel_tests.t \\<lceil>P\\<rceil> ; (skip \\<inter> - \\<lceil>B\\<rceil>))\n\ngoal (1 subgoal):\n 1. \\<^bold>{\\<lambda>s.\n                P s \\<and>\n                B s\\<^bold>}X\\<^bold>{P\\<^bold>} \\<Longrightarrow>\n    \\<^bold>{P\\<^bold>}WHILE B INV I DO X\\<^bold>{\\<lambda>s.\n               P s \\<and> \\<not> B s\\<^bold>}", "unfolding rel_kat.kat_while_inv_def"], ["proof (prove)\nusing this:\n  rel_kat.Hoare\n   (rel_tests.t \\<lceil>P\\<rceil> ; rel_tests.t \\<lceil>B\\<rceil>) X\n   \\<lceil>P\\<rceil> \\<Longrightarrow>\n  rel_kat.Hoare \\<lceil>P\\<rceil> (rel_kat.kat_while \\<lceil>B\\<rceil> X)\n   (rel_tests.t \\<lceil>P\\<rceil> ; (skip \\<inter> - \\<lceil>B\\<rceil>))\n\ngoal (1 subgoal):\n 1. \\<^bold>{\\<lambda>s.\n                P s \\<and>\n                B s\\<^bold>}X\\<^bold>{P\\<^bold>} \\<Longrightarrow>\n    \\<^bold>{P\\<^bold>}rel_kat.kat_while \\<lceil>B\\<rceil>\n                        X\\<^bold>{\\<lambda>s. P s \\<and> \\<not> B s\\<^bold>}", "by auto\n\n\\<comment> \\<open> Finite Iteration \\<close>"], ["", "abbreviation loopi_sugar :: \"'a rel \\<Rightarrow> 'a pred \\<Rightarrow> 'a rel\" (\"LOOP _ INV _ \" [64,64] 63)\n  where \"LOOP X INV I \\<equiv> rel_kat.kat_loop_inv X \\<lceil>I\\<rceil>\""], ["", "lemma H_loop: \"\\<^bold>{P\\<^bold>} X \\<^bold>{P\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} (LOOP X INV I) \\<^bold>{P\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}X\\<^bold>{P\\<^bold>} \\<Longrightarrow>\n    \\<^bold>{P\\<^bold>}LOOP X INV I \\<^bold>{P\\<^bold>}", "by (auto intro: rel_kat.H_loop)"], ["", "lemma H_loopI: \"\\<^bold>{I\\<^bold>} X \\<^bold>{I\\<^bold>} \\<Longrightarrow> \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>I\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil> \\<Longrightarrow> \\<^bold>{P\\<^bold>} (LOOP X INV I) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}X\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>;\n     \\<lceil>I\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}LOOP X INV I \\<^bold>{Q\\<^bold>}", "using rel_kat.H_loop_inv[of \"\\<lceil>P\\<rceil>\" \"\\<lceil>I\\<rceil>\" X \"\\<lceil>Q\\<rceil>\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>rel_tests.t \\<lceil>P\\<rceil>\n           \\<subseteq> rel_tests.t \\<lceil>I\\<rceil>;\n   \\<^bold>{I\\<^bold>}X\\<^bold>{I\\<^bold>};\n   rel_tests.t \\<lceil>I\\<rceil>\n   \\<subseteq> rel_tests.t \\<lceil>Q\\<rceil>\\<rbrakk>\n  \\<Longrightarrow> \\<^bold>{P\\<^bold>}LOOP X INV I \\<^bold>{Q\\<^bold>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}X\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>;\n     \\<lceil>I\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}LOOP X INV I \\<^bold>{Q\\<^bold>}", "by auto"], ["", "subsubsection \\<open> Evolution commands \\<close>\n\n\\<comment> \\<open>Verification by providing evolution\\<close>"], ["", "definition g_evol :: \"(('a::ord) \\<Rightarrow> 'b \\<Rightarrow> 'b) \\<Rightarrow> 'b pred \\<Rightarrow> ('b \\<Rightarrow> 'a set) \\<Rightarrow> 'b rel\" (\"EVOL\")\n  where \"EVOL \\<phi> G U = {(s,s') |s s'. s' \\<in> g_orbit (\\<lambda>t. \\<phi> t s) G (U s)}\""], ["", "lemma sH_g_evol[simp]:  \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"\\<^bold>{P\\<^bold>} (EVOL \\<phi> G U) \\<^bold>{Q\\<^bold>} = (\\<forall>s. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}EVOL \\<phi> G U\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s.\n        P s \\<longrightarrow>\n        (\\<forall>t\\<in>U s.\n            (\\<forall>\\<tau>\\<in>down (U s) t.\n                G (\\<phi> \\<tau> s)) \\<longrightarrow>\n            Q (\\<phi> t s)))", "unfolding rel_kat_H g_evol_def g_orbit_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow>\n        (s, s')\n        \\<in> {(s, s') |s s'.\n               s' \\<in> {\\<phi> t s |t.\n                         t \\<in> U s \\<and>\n                         (\\<forall>\\<tau>\\<in>down (U s) t.\n                             G (\\<phi> \\<tau> s))}} \\<longrightarrow>\n        Q s') =\n    (\\<forall>s.\n        P s \\<longrightarrow>\n        (\\<forall>t\\<in>U s.\n            (\\<forall>\\<tau>\\<in>down (U s) t.\n                G (\\<phi> \\<tau> s)) \\<longrightarrow>\n            Q (\\<phi> t s)))", "by auto"], ["", "lemma H_g_evol: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  assumes \"P = (\\<lambda>s. (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\"\n  shows \"\\<^bold>{P\\<^bold>} (EVOL \\<phi> G U) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}EVOL \\<phi> G U\\<^bold>{Q\\<^bold>}", "by (simp add: assms)\n\n\\<comment> \\<open>Verification by providing solutions\\<close>"], ["", "definition g_ode :: \"(real \\<Rightarrow> ('a::banach)\\<Rightarrow>'a) \\<Rightarrow> 'a pred \\<Rightarrow> ('a \\<Rightarrow> real set) \\<Rightarrow> 'a set \\<Rightarrow> real \\<Rightarrow> \n  'a rel\" (\"(1x\\<acute>=_ & _ on _ _ @ _)\") \n  where \"(x\\<acute>= f & G on T S @ t\\<^sub>0) = {(s,s') |s s'. s' \\<in> g_orbital f G T S t\\<^sub>0 s}\""], ["", "lemma H_g_orbital: \n  \"P = (\\<lambda>s. (\\<forall>X\\<in>ivp_sols f U S t\\<^sub>0 s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (X \\<tau>)) \\<longrightarrow> Q (X t))) \\<Longrightarrow> \n  \\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P =\n    (\\<lambda>s.\n        \\<forall>X\\<in>Sols f U S t\\<^sub>0 s.\n           \\<forall>t\\<in>U s.\n              (\\<forall>\\<tau>\\<in>down (U s) t.\n                  G (X \\<tau>)) \\<longrightarrow>\n              Q (X t)) \\<Longrightarrow>\n    \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "unfolding rel_kat_H g_ode_def g_orbital_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. P =\n    (\\<lambda>s.\n        \\<forall>X\\<in>Sols f U S t\\<^sub>0 s.\n           \\<forall>t\\<in>U s.\n              (\\<forall>\\<tau>\\<in>down (U s) t.\n                  G (X \\<tau>)) \\<longrightarrow>\n              Q (X t)) \\<Longrightarrow>\n    \\<forall>s s'.\n       P s \\<longrightarrow>\n       (s, s')\n       \\<in> {(s, s') |s s'.\n              s' \\<in> {X t |t X.\n                        t \\<in> U s \\<and>\n                        \\<P> X (down (U s) t) \\<subseteq> Collect G \\<and>\n                        X \\<in> Sols f U S t\\<^sub>0 s}} \\<longrightarrow>\n       Q s'", "by clarsimp"], ["", "lemma sH_g_orbital: \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>} = \n  (\\<forall>s. P s \\<longrightarrow> (\\<forall>X\\<in>ivp_sols f U S t\\<^sub>0 s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (X \\<tau>)) \\<longrightarrow> Q (X t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s.\n        P s \\<longrightarrow>\n        (\\<forall>X\\<in>Sols f U S t\\<^sub>0 s.\n            \\<forall>t\\<in>U s.\n               (\\<forall>\\<tau>\\<in>down (U s) t.\n                   G (X \\<tau>)) \\<longrightarrow>\n               Q (X t)))", "unfolding g_orbital_eq g_ode_def rel_kat_H"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow>\n        (s, s')\n        \\<in> {(s, s') |s s'.\n               s' \\<in> {X t |t X.\n                         t \\<in> U s \\<and>\n                         \\<P> X (down (U s) t) \\<subseteq> Collect G \\<and>\n                         X \\<in> Sols f U S t\\<^sub>0 s}} \\<longrightarrow>\n        Q s') =\n    (\\<forall>s.\n        P s \\<longrightarrow>\n        (\\<forall>X\\<in>Sols f U S t\\<^sub>0 s.\n            \\<forall>t\\<in>U s.\n               (\\<forall>\\<tau>\\<in>down (U s) t.\n                   G (X \\<tau>)) \\<longrightarrow>\n               Q (X t)))", "by auto"], ["", "context local_flow\nbegin"], ["", "lemma sH_g_ode_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<^bold>{Q\\<^bold>} = \n  (\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>=\\<lambda>t.\n                                    f & G on U S @ 0\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s\\<in>S.\n        P s \\<longrightarrow>\n        (\\<forall>t\\<in>U s.\n            (\\<forall>\\<tau>\\<in>down (U s) t.\n                G (\\<phi> \\<tau> s)) \\<longrightarrow>\n            Q (\\<phi> t s)))", "proof(unfold sH_g_orbital, clarsimp, safe)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>s.\n                   P s \\<longrightarrow>\n                   (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s.\n                       \\<forall>t\\<in>U s.\n                          (\\<forall>\\<tau>.\n                              \\<tau> \\<in> U s \\<and>\n                              \\<tau> \\<le> t \\<longrightarrow>\n                              G (X \\<tau>)) \\<longrightarrow>\n                          Q (X t));\n        s \\<in> S; P s; t \\<in> U s;\n        \\<forall>\\<tau>.\n           \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (\\<phi> \\<tau> s)\\<rbrakk>\n       \\<Longrightarrow> Q (\\<phi> t s)\n 2. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           \\<tau> \\<in> U s \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; X \\<in> Sols (\\<lambda>t. f) U S 0 s; t \\<in> U s;\n        \\<forall>\\<tau>.\n           \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "fix s t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>s.\n                   P s \\<longrightarrow>\n                   (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s.\n                       \\<forall>t\\<in>U s.\n                          (\\<forall>\\<tau>.\n                              \\<tau> \\<in> U s \\<and>\n                              \\<tau> \\<le> t \\<longrightarrow>\n                              G (X \\<tau>)) \\<longrightarrow>\n                          Q (X t));\n        s \\<in> S; P s; t \\<in> U s;\n        \\<forall>\\<tau>.\n           \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (\\<phi> \\<tau> s)\\<rbrakk>\n       \\<Longrightarrow> Q (\\<phi> t s)\n 2. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           \\<tau> \\<in> U s \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; X \\<in> Sols (\\<lambda>t. f) U S 0 s; t \\<in> U s;\n        \\<forall>\\<tau>.\n           \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "assume hyps: \"s \\<in> S\" \"P s\" \"t \\<in> U s\" \"\\<forall>\\<tau>. \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow> G (\\<phi> \\<tau> s)\"\n    and main: \"\\<forall>s. P s \\<longrightarrow> (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>. \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow> G (X \\<tau>)) \\<longrightarrow> Q (X t))\""], ["proof (state)\nthis:\n  s \\<in> S\n  P s\n  t \\<in> U s\n  \\<forall>\\<tau>.\n     \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n     G (\\<phi> \\<tau> s)\n  \\<forall>s.\n     P s \\<longrightarrow>\n     (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s.\n         \\<forall>t\\<in>U s.\n            (\\<forall>\\<tau>.\n                \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n                G (X \\<tau>)) \\<longrightarrow>\n            Q (X t))\n\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>s.\n                   P s \\<longrightarrow>\n                   (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s.\n                       \\<forall>t\\<in>U s.\n                          (\\<forall>\\<tau>.\n                              \\<tau> \\<in> U s \\<and>\n                              \\<tau> \\<le> t \\<longrightarrow>\n                              G (X \\<tau>)) \\<longrightarrow>\n                          Q (X t));\n        s \\<in> S; P s; t \\<in> U s;\n        \\<forall>\\<tau>.\n           \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (\\<phi> \\<tau> s)\\<rbrakk>\n       \\<Longrightarrow> Q (\\<phi> t s)\n 2. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           \\<tau> \\<in> U s \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; X \\<in> Sols (\\<lambda>t. f) U S 0 s; t \\<in> U s;\n        \\<forall>\\<tau>.\n           \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "hence \"(\\<lambda>t. \\<phi> t s) \\<in> Sols (\\<lambda>t. f) U S 0 s\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  P s\n  t \\<in> U s\n  \\<forall>\\<tau>.\n     \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n     G (\\<phi> \\<tau> s)\n  \\<forall>s.\n     P s \\<longrightarrow>\n     (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s.\n         \\<forall>t\\<in>U s.\n            (\\<forall>\\<tau>.\n                \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n                G (X \\<tau>)) \\<longrightarrow>\n            Q (X t))\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. \\<phi> t s) \\<in> Sols (\\<lambda>t. f) U S 0 s", "using in_ivp_sols assms"], ["proof (prove)\nusing this:\n  s \\<in> S\n  P s\n  t \\<in> U s\n  \\<forall>\\<tau>.\n     \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n     G (\\<phi> \\<tau> s)\n  \\<forall>s.\n     P s \\<longrightarrow>\n     (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s.\n         \\<forall>t\\<in>U s.\n            (\\<forall>\\<tau>.\n                \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n                G (X \\<tau>)) \\<longrightarrow>\n            Q (X t))\n  \\<lbrakk>?s \\<in> S; 0 \\<in> ?U ?s; ?U ?s \\<subseteq> T\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>t. \\<phi> t ?s)\n                    \\<in> Sols (\\<lambda>t. f) ?U S 0 ?s\n  ?s \\<in> S \\<Longrightarrow>\n  0 \\<in> U ?s \\<and> is_interval (U ?s) \\<and> U ?s \\<subseteq> T\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. \\<phi> t s) \\<in> Sols (\\<lambda>t. f) U S 0 s", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>t. \\<phi> t s) \\<in> Sols (\\<lambda>t. f) U S 0 s\n\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>s.\n                   P s \\<longrightarrow>\n                   (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s.\n                       \\<forall>t\\<in>U s.\n                          (\\<forall>\\<tau>.\n                              \\<tau> \\<in> U s \\<and>\n                              \\<tau> \\<le> t \\<longrightarrow>\n                              G (X \\<tau>)) \\<longrightarrow>\n                          Q (X t));\n        s \\<in> S; P s; t \\<in> U s;\n        \\<forall>\\<tau>.\n           \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (\\<phi> \\<tau> s)\\<rbrakk>\n       \\<Longrightarrow> Q (\\<phi> t s)\n 2. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           \\<tau> \\<in> U s \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; X \\<in> Sols (\\<lambda>t. f) U S 0 s; t \\<in> U s;\n        \\<forall>\\<tau>.\n           \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "thus \"Q (\\<phi> t s)\""], ["proof (prove)\nusing this:\n  (\\<lambda>t. \\<phi> t s) \\<in> Sols (\\<lambda>t. f) U S 0 s\n\ngoal (1 subgoal):\n 1. Q (\\<phi> t s)", "using main hyps"], ["proof (prove)\nusing this:\n  (\\<lambda>t. \\<phi> t s) \\<in> Sols (\\<lambda>t. f) U S 0 s\n  \\<forall>s.\n     P s \\<longrightarrow>\n     (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s.\n         \\<forall>t\\<in>U s.\n            (\\<forall>\\<tau>.\n                \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n                G (X \\<tau>)) \\<longrightarrow>\n            Q (X t))\n  s \\<in> S\n  P s\n  t \\<in> U s\n  \\<forall>\\<tau>.\n     \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n     G (\\<phi> \\<tau> s)\n\ngoal (1 subgoal):\n 1. Q (\\<phi> t s)", "by fastforce"], ["proof (state)\nthis:\n  Q (\\<phi> t s)\n\ngoal (1 subgoal):\n 1. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           \\<tau> \\<in> U s \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; X \\<in> Sols (\\<lambda>t. f) U S 0 s; t \\<in> U s;\n        \\<forall>\\<tau>.\n           \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           \\<tau> \\<in> U s \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; X \\<in> Sols (\\<lambda>t. f) U S 0 s; t \\<in> U s;\n        \\<forall>\\<tau>.\n           \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "fix s X t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           \\<tau> \\<in> U s \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; X \\<in> Sols (\\<lambda>t. f) U S 0 s; t \\<in> U s;\n        \\<forall>\\<tau>.\n           \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "assume hyps: \"P s\" \"X \\<in> Sols (\\<lambda>t. f) U S 0 s\" \"t \\<in> U s\"  \"\\<forall>\\<tau>. \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow> G (X \\<tau>)\"\n    and main: \"\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>. \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow> G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))\""], ["proof (state)\nthis:\n  P s\n  X \\<in> Sols (\\<lambda>t. f) U S 0 s\n  t \\<in> U s\n  \\<forall>\\<tau>.\n     \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow> G (X \\<tau>)\n  \\<forall>s\\<in>S.\n     P s \\<longrightarrow>\n     (\\<forall>t\\<in>U s.\n         (\\<forall>\\<tau>.\n             \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n             G (\\<phi> \\<tau> s)) \\<longrightarrow>\n         Q (\\<phi> t s))\n\ngoal (1 subgoal):\n 1. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           \\<tau> \\<in> U s \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; X \\<in> Sols (\\<lambda>t. f) U S 0 s; t \\<in> U s;\n        \\<forall>\\<tau>.\n           \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "hence obs: \"s \\<in> S\""], ["proof (prove)\nusing this:\n  P s\n  X \\<in> Sols (\\<lambda>t. f) U S 0 s\n  t \\<in> U s\n  \\<forall>\\<tau>.\n     \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow> G (X \\<tau>)\n  \\<forall>s\\<in>S.\n     P s \\<longrightarrow>\n     (\\<forall>t\\<in>U s.\n         (\\<forall>\\<tau>.\n             \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n             G (\\<phi> \\<tau> s)) \\<longrightarrow>\n         Q (\\<phi> t s))\n\ngoal (1 subgoal):\n 1. s \\<in> S", "using ivp_sols_def[of \"\\<lambda>t. f\"] init_time"], ["proof (prove)\nusing this:\n  P s\n  X \\<in> Sols (\\<lambda>t. f) U S 0 s\n  t \\<in> U s\n  \\<forall>\\<tau>.\n     \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow> G (X \\<tau>)\n  \\<forall>s\\<in>S.\n     P s \\<longrightarrow>\n     (\\<forall>t\\<in>U s.\n         (\\<forall>\\<tau>.\n             \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n             G (\\<phi> \\<tau> s)) \\<longrightarrow>\n         Q (\\<phi> t s))\n  Sols (\\<lambda>t. f) ?U ?S ?t\\<^sub>0 ?s =\n  {X \\<in> ?U ?s \\<rightarrow> ?S.\n    D X = (\\<lambda>t. f (X t)) on ?U ?s \\<and>\n   X ?t\\<^sub>0 = ?s \\<and> ?t\\<^sub>0 \\<in> ?U ?s}\n  0 \\<in> T\n\ngoal (1 subgoal):\n 1. s \\<in> S", "by auto"], ["proof (state)\nthis:\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           \\<tau> \\<in> U s \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; X \\<in> Sols (\\<lambda>t. f) U S 0 s; t \\<in> U s;\n        \\<forall>\\<tau>.\n           \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "hence \"\\<forall>\\<tau>\\<in>down (U s) t. X \\<tau> = \\<phi> \\<tau> s\""], ["proof (prove)\nusing this:\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<tau>\\<in>down (U s) t. X \\<tau> = \\<phi> \\<tau> s", "using eq_solution hyps assms"], ["proof (prove)\nusing this:\n  s \\<in> S\n  \\<lbrakk>?s \\<in> S; is_interval (?U ?s); ?U ?s \\<subseteq> T;\n   ?t \\<in> ?U ?s; ?X \\<in> Sols (\\<lambda>t. f) ?U S 0 ?s\\<rbrakk>\n  \\<Longrightarrow> ?X ?t = \\<phi> ?t ?s\n  P s\n  X \\<in> Sols (\\<lambda>t. f) U S 0 s\n  t \\<in> U s\n  \\<forall>\\<tau>.\n     \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow> G (X \\<tau>)\n  ?s \\<in> S \\<Longrightarrow>\n  0 \\<in> U ?s \\<and> is_interval (U ?s) \\<and> U ?s \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<forall>\\<tau>\\<in>down (U s) t. X \\<tau> = \\<phi> \\<tau> s", "by blast"], ["proof (state)\nthis:\n  \\<forall>\\<tau>\\<in>down (U s) t. X \\<tau> = \\<phi> \\<tau> s\n\ngoal (1 subgoal):\n 1. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           \\<tau> \\<in> U s \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; X \\<in> Sols (\\<lambda>t. f) U S 0 s; t \\<in> U s;\n        \\<forall>\\<tau>.\n           \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "thus \"Q (X t)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<tau>\\<in>down (U s) t. X \\<tau> = \\<phi> \\<tau> s\n\ngoal (1 subgoal):\n 1. Q (X t)", "using hyps main obs"], ["proof (prove)\nusing this:\n  \\<forall>\\<tau>\\<in>down (U s) t. X \\<tau> = \\<phi> \\<tau> s\n  P s\n  X \\<in> Sols (\\<lambda>t. f) U S 0 s\n  t \\<in> U s\n  \\<forall>\\<tau>.\n     \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow> G (X \\<tau>)\n  \\<forall>s\\<in>S.\n     P s \\<longrightarrow>\n     (\\<forall>t\\<in>U s.\n         (\\<forall>\\<tau>.\n             \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow>\n             G (\\<phi> \\<tau> s)) \\<longrightarrow>\n         Q (\\<phi> t s))\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. Q (X t)", "by auto"], ["proof (state)\nthis:\n  Q (X t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma H_g_ode_subset:\n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n    and \"P = (\\<lambda>s. s \\<in> S \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\" \n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>=\\<lambda>t.\n                                    f & G on U S @ 0\\<^bold>{Q\\<^bold>}", "using assms"], ["proof (prove)\nusing this:\n  ?s \\<in> S \\<Longrightarrow>\n  0 \\<in> U ?s \\<and> is_interval (U ?s) \\<and> U ?s \\<subseteq> T\n  P =\n  (\\<lambda>s.\n      s \\<in> S \\<longrightarrow>\n      (\\<forall>t\\<in>U s.\n          (\\<forall>\\<tau>\\<in>down (U s) t.\n              G (\\<phi> \\<tau> s)) \\<longrightarrow>\n          Q (\\<phi> t s)))\n\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>=\\<lambda>t.\n                                    f & G on U S @ 0\\<^bold>{Q\\<^bold>}", "apply(subst sH_g_ode_subset[OF assms(1)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>\\<And>s.\n                   s \\<in> S \\<Longrightarrow>\n                   0 \\<in> U s \\<and>\n                   is_interval (U s) \\<and> U s \\<subseteq> T;\n        P =\n        (\\<lambda>s.\n            s \\<in> S \\<longrightarrow>\n            (\\<forall>t\\<in>U s.\n                (\\<forall>\\<tau>\\<in>down (U s) t.\n                    G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                Q (\\<phi> t s)));\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> s \\<in> S\n 2. \\<lbrakk>\\<And>s.\n                s \\<in> S \\<Longrightarrow>\n                0 \\<in> U s \\<and>\n                is_interval (U s) \\<and> U s \\<subseteq> T;\n     P =\n     (\\<lambda>s.\n         s \\<in> S \\<longrightarrow>\n         (\\<forall>t\\<in>U s.\n             (\\<forall>\\<tau>\\<in>down (U s) t.\n                 G (\\<phi> \\<tau> s)) \\<longrightarrow>\n             Q (\\<phi> t s)))\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s\\<in>S.\n                         P s \\<longrightarrow>\n                         (\\<forall>t\\<in>U s.\n                             (\\<forall>\\<tau>\\<in>down (U s) t.\n                                 G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                             Q (\\<phi> t s))", "unfolding assms"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>\\<And>s.\n                   s \\<in> S \\<Longrightarrow>\n                   0 \\<in> U s \\<and>\n                   is_interval (U s) \\<and> U s \\<subseteq> T;\n        (\\<lambda>s.\n            s \\<in> S \\<longrightarrow>\n            (\\<forall>t\\<in>U s.\n                (\\<forall>\\<tau>\\<in>down (U s) t.\n                    G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                Q (\\<phi> t s))) =\n        (\\<lambda>s.\n            s \\<in> S \\<longrightarrow>\n            (\\<forall>t\\<in>U s.\n                (\\<forall>\\<tau>\\<in>down (U s) t.\n                    G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                Q (\\<phi> t s)));\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> s \\<in> S\n 2. \\<lbrakk>\\<And>s.\n                s \\<in> S \\<Longrightarrow>\n                0 \\<in> U s \\<and>\n                is_interval (U s) \\<and> U s \\<subseteq> T;\n     (\\<lambda>s.\n         s \\<in> S \\<longrightarrow>\n         (\\<forall>t\\<in>U s.\n             (\\<forall>\\<tau>\\<in>down (U s) t.\n                 G (\\<phi> \\<tau> s)) \\<longrightarrow>\n             Q (\\<phi> t s))) =\n     (\\<lambda>s.\n         s \\<in> S \\<longrightarrow>\n         (\\<forall>t\\<in>U s.\n             (\\<forall>\\<tau>\\<in>down (U s) t.\n                 G (\\<phi> \\<tau> s)) \\<longrightarrow>\n             Q (\\<phi> t s)))\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s\\<in>S.\n                         (s \\<in> S \\<longrightarrow>\n                          (\\<forall>t\\<in>U s.\n                              (\\<forall>\\<tau>\\<in>down (U s) t.\n                                  G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                              Q (\\<phi> t s))) \\<longrightarrow>\n                         (\\<forall>t\\<in>U s.\n                             (\\<forall>\\<tau>\\<in>down (U s) t.\n                                 G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                             Q (\\<phi> t s))", "by auto"], ["", "lemma sH_g_ode: \"\\<^bold>{P\\<^bold>} (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) \\<^bold>{Q\\<^bold>} = \n  (\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>=\\<lambda>t.\n                                    f & G on \\<lambda>s.\n          T S @ 0\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s\\<in>S.\n        P s \\<longrightarrow>\n        (\\<forall>t\\<in>T.\n            (\\<forall>\\<tau>\\<in>down T t.\n                G (\\<phi> \\<tau> s)) \\<longrightarrow>\n            Q (\\<phi> t s)))", "by (subst sH_g_ode_subset, auto simp: init_time interval_time)"], ["", "lemma sH_g_ode_ivl: \"t \\<ge> 0 \\<Longrightarrow> t \\<in> T \\<Longrightarrow> \\<^bold>{P\\<^bold>} (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. {0..t}) S @ 0) \\<^bold>{Q\\<^bold>} = \n  (\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>{0..t}. (\\<forall>\\<tau>\\<in>{0..t}. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> t; t \\<in> T\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}x\\<acute>=\\<lambda>t.\n                f & G on \\<lambda>s. {0..t} S @ 0\\<^bold>{Q\\<^bold>} =\n                      (\\<forall>s\\<in>S.\n                          P s \\<longrightarrow>\n                          (\\<forall>t\\<in>{0..t}.\n                              (\\<forall>\\<tau>\\<in>{0..t}.\n                                  G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                              Q (\\<phi> t s)))", "apply(subst sH_g_ode_subset; clarsimp, (force)?)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s x.\n       \\<lbrakk>t \\<in> T; s \\<in> S; 0 \\<le> x; x \\<le> t\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T", "using init_time interval_time mem_is_interval_1_I"], ["proof (prove)\nusing this:\n  0 \\<in> T\n  is_interval T\n  \\<lbrakk>is_interval ?S; ?a \\<in> ?S; ?c \\<in> ?S; ?a \\<le> ?b;\n   ?b \\<le> ?c\\<rbrakk>\n  \\<Longrightarrow> ?b \\<in> ?S\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       \\<lbrakk>t \\<in> T; s \\<in> S; 0 \\<le> x; x \\<le> t\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T", "by blast"], ["", "lemma sH_orbit: \"\\<^bold>{P\\<^bold>} ({(s,s') | s s'. s' \\<in> \\<gamma>\\<^sup>\\<phi> s}) \\<^bold>{Q\\<^bold>} = (\\<forall>s \\<in> S. P s \\<longrightarrow> (\\<forall> t \\<in> T. Q (\\<phi> t s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}{(s, s') |s s'.\n                        s' \\<in> \\<gamma>\\<^sup>\\<phi>\n                                  s}\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s\\<in>S.\n        P s \\<longrightarrow> (\\<forall>t\\<in>T. Q (\\<phi> t s)))", "using sH_g_ode"], ["proof (prove)\nusing this:\n  \\<^bold>{?P\\<^bold>}x\\<acute>=\\<lambda>t.\n                                   f & ?G on \\<lambda>s.\n          T S @ 0\\<^bold>{?Q\\<^bold>} =\n  (\\<forall>s\\<in>S.\n      ?P s \\<longrightarrow>\n      (\\<forall>t\\<in>T.\n          (\\<forall>\\<tau>\\<in>down T t.\n              ?G (\\<phi> \\<tau> s)) \\<longrightarrow>\n          ?Q (\\<phi> t s)))\n\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}{(s, s') |s s'.\n                        s' \\<in> \\<gamma>\\<^sup>\\<phi>\n                                  s}\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s\\<in>S.\n        P s \\<longrightarrow> (\\<forall>t\\<in>T. Q (\\<phi> t s)))", "unfolding orbit_def g_ode_def"], ["proof (prove)\nusing this:\n  \\<^bold>{?P\\<^bold>}{(s, s') |s s'.\n                       s' \\<in> g_orbital (\\<lambda>t. f) ?G (\\<lambda>s. T)\n                                 S 0 s}\\<^bold>{?Q\\<^bold>} =\n  (\\<forall>s\\<in>S.\n      ?P s \\<longrightarrow>\n      (\\<forall>t\\<in>T.\n          (\\<forall>\\<tau>\\<in>down T t.\n              ?G (\\<phi> \\<tau> s)) \\<longrightarrow>\n          ?Q (\\<phi> t s)))\n\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}{(s, s') |s s'.\n                        s' \\<in> g_orbital (\\<lambda>t. f)\n                                  (\\<lambda>s. True) (\\<lambda>s. T) S 0\n                                  s}\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s\\<in>S.\n        P s \\<longrightarrow> (\\<forall>t\\<in>T. Q (\\<phi> t s)))", "by auto"], ["", "end\n\n\\<comment> \\<open> Verification with differential invariants \\<close>"], ["", "definition g_ode_inv :: \"(real \\<Rightarrow> ('a::banach)\\<Rightarrow>'a) \\<Rightarrow> 'a pred \\<Rightarrow> ('a \\<Rightarrow> real set) \\<Rightarrow> 'a set \\<Rightarrow> \n  real \\<Rightarrow> 'a pred \\<Rightarrow> 'a rel\" (\"(1x\\<acute>=_ & _ on _ _ @ _ DINV _ )\") \n  where \"(x\\<acute>= f & G on U S @ t\\<^sub>0 DINV I) = (x\\<acute>= f & G on U S @ t\\<^sub>0)\""], ["", "lemma sH_g_orbital_guard: \n  assumes \"R = (\\<lambda>s. G s \\<and> Q s)\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>} = \\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{R\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>} =\n    \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{R\\<^bold>}", "using assms"], ["proof (prove)\nusing this:\n  R = (\\<lambda>s. G s \\<and> Q s)\n\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>} =\n    \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{R\\<^bold>}", "unfolding g_orbital_eq rel_kat_H ivp_sols_def g_ode_def"], ["proof (prove)\nusing this:\n  R = (\\<lambda>s. G s \\<and> Q s)\n\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow>\n        (s, s')\n        \\<in> {(s, s') |s s'.\n               s' \\<in> {X t |t X.\n                         t \\<in> U s \\<and>\n                         \\<P> X (down (U s) t) \\<subseteq> Collect G \\<and>\n                         X \\<in> {X \\<in> U s \\<rightarrow> S.\n                                   D X = (\\<lambda>t. f t (X t))\n                                   on U s \\<and>\n                                  X t\\<^sub>0 = s \\<and>\n                                  t\\<^sub>0 \\<in> U s}}} \\<longrightarrow>\n        Q s') =\n    (\\<forall>s s'.\n        P s \\<longrightarrow>\n        (s, s')\n        \\<in> {(s, s') |s s'.\n               s' \\<in> {X t |t X.\n                         t \\<in> U s \\<and>\n                         \\<P> X (down (U s) t) \\<subseteq> Collect G \\<and>\n                         X \\<in> {X \\<in> U s \\<rightarrow> S.\n                                   D X = (\\<lambda>t. f t (X t))\n                                   on U s \\<and>\n                                  X t\\<^sub>0 = s \\<and>\n                                  t\\<^sub>0 \\<in> U s}}} \\<longrightarrow>\n        R s')", "by auto"], ["", "lemma sH_g_orbital_inv:\n  assumes \"\\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>\" and \"\\<^bold>{I\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{I\\<^bold>}\" and \"\\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\"\n  shows \" \\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "using assms(1)"], ["proof (prove)\nusing this:\n  \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>\n\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "apply(rule_tac p'=\"\\<lceil>I\\<rceil>\" in rel_kat.H_consl, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil> \\<Longrightarrow>\n    \\<^bold>{I\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "using assms(3)"], ["proof (prove)\nusing this:\n  \\<lceil>I\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil>\n\ngoal (1 subgoal):\n 1. \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil> \\<Longrightarrow>\n    \\<^bold>{I\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "apply(rule_tac q'=\"\\<lceil>I\\<rceil>\" in rel_kat.H_consr, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>;\n     \\<lceil>I\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{I\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>}", "using assms(2)"], ["proof (prove)\nusing this:\n  \\<^bold>{I\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>;\n     \\<lceil>I\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{I\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>}", "by simp"], ["", "lemma sH_diff_inv[simp]: \"\\<^bold>{I\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{I\\<^bold>} = diff_invariant I f U S t\\<^sub>0 G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{I\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>} =\n    diff_invariant I f U S t\\<^sub>0 G", "unfolding diff_invariant_eq rel_kat_H g_orbital_eq g_ode_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        I s \\<longrightarrow>\n        (s, s')\n        \\<in> {(s, s') |s s'.\n               s' \\<in> {X t |t X.\n                         t \\<in> U s \\<and>\n                         \\<P> X (down (U s) t) \\<subseteq> Collect G \\<and>\n                         X \\<in> Sols f U S t\\<^sub>0 s}} \\<longrightarrow>\n        I s') =\n    (\\<forall>s.\n        I s \\<longrightarrow>\n        (\\<forall>X\\<in>Sols f U S t\\<^sub>0 s.\n            \\<forall>t\\<in>U s.\n               (\\<forall>\\<tau>\\<in>down (U s) t.\n                   G (X \\<tau>)) \\<longrightarrow>\n               I (X t)))", "by auto"], ["", "lemma H_g_ode_inv: \"\\<^bold>{I\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{I\\<^bold>} \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow> \n  \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> \\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0 DINV I) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>;\n     \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil>\n     \\<subseteq> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0 DINV I \\<^bold>{Q\\<^bold>}", "unfolding g_ode_inv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>;\n     \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil>\n     \\<subseteq> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "apply(rule_tac q'=\"\\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil>\" in rel_kat.H_consr, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>;\n     \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil>\n     \\<subseteq> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{\\<lambda>s.\n           I s \\<and> G s\\<^bold>}", "apply(subst sH_g_orbital_guard[symmetric], force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>;\n     \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil>\n     \\<subseteq> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>}", "by (rule_tac I=\"I\" in sH_g_orbital_inv, simp_all)"], ["", "subsection \\<open> Refinement Components \\<close>\n\n\\<comment> \\<open> Skip \\<close>"], ["", "lemma R_skip: \"(\\<forall>s. P s \\<longrightarrow> Q s) \\<Longrightarrow> skip \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s. P s \\<longrightarrow> Q s \\<Longrightarrow>\n    skip \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule rel_rkat.R2, simp)\n\n\\<comment> \\<open> Abort \\<close>"], ["", "lemma R_abort: \"abort \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abort \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule rel_rkat.R2, simp)\n\n\\<comment> \\<open> Sequential Composition \\<close>"], ["", "lemma R_seq: \"(rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>) ; (rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil> ;\n    rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "using rel_rkat.R_seq"], ["proof (prove)\nusing this:\n  rel_R ?p ?r ; rel_R ?r ?q \\<subseteq> rel_R ?p ?q\n\ngoal (1 subgoal):\n 1. rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil> ;\n    rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by blast"], ["", "lemma R_seq_law: \"X \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil> \\<Longrightarrow> Y \\<le> rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> X; Y \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>;\n     Y \\<subseteq> rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> X ; Y\n                      \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "unfolding rel_rkat.spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{P\\<^bold>}X\\<^bold>{R\\<^bold>};\n     \\<^bold>{R\\<^bold>}Y\\<^bold>{Q\\<^bold>}\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}X ; Y\\<^bold>{Q\\<^bold>}", "by (rule H_seq)"], ["", "lemmas R_seq_mono = relcomp_mono\n\n\\<comment> \\<open> Nondeterministic Choice \\<close>"], ["", "lemma R_choice: \"(rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>) \\<union> (rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil> \\<union>\n    rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "using rel_rkat.R_choice[of \"\\<lceil>P\\<rceil>\" \"\\<lceil>Q\\<rceil>\"]"], ["proof (prove)\nusing this:\n  rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil> \\<union>\n  rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\n  \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\n\ngoal (1 subgoal):\n 1. rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil> \\<union>\n    rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "."], ["", "lemma R_choice_law: \"X \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> Y \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> X \\<union> Y \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>;\n     Y \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> X \\<union> Y\n                      \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "using le_supI"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?x; ?b \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> sup ?a ?b \\<le> ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>;\n     Y \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> X \\<union> Y\n                      \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "."], ["", "lemma R_choice_mono: \"P' \\<subseteq> P \\<Longrightarrow> Q' \\<subseteq> Q \\<Longrightarrow> P' \\<union> Q' \\<subseteq> P \\<union> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P' \\<subseteq> P; Q' \\<subseteq> Q\\<rbrakk>\n    \\<Longrightarrow> P' \\<union> Q' \\<subseteq> P \\<union> Q", "using Un_mono"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> ?C; ?B \\<subseteq> ?D\\<rbrakk>\n  \\<Longrightarrow> ?A \\<union> ?B \\<subseteq> ?C \\<union> ?D\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P' \\<subseteq> P; Q' \\<subseteq> Q\\<rbrakk>\n    \\<Longrightarrow> P' \\<union> Q' \\<subseteq> P \\<union> Q", ".\n\n\\<comment> \\<open> Assignment \\<close>"], ["", "lemma R_assign: \"(x ::= e) \\<le> rel_R \\<lceil>\\<lambda>s. P (\\<chi> j. ((($) s)(x := e s)) j)\\<rceil> \\<lceil>P\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ::= e\n    \\<subseteq> rel_R\n                 \\<lceil>\\<lambda>s.\n                            P (\\<chi>j. ((($) s)(x := e s)) j)\\<rceil>\n                 \\<lceil>P\\<rceil>", "unfolding rel_rkat.spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{\\<lambda>s.\n                P (vec_lambda\n                    ((($) s)(x := e s)))\\<^bold>}x ::= e\\<^bold>{P\\<^bold>}", "by (rule H_assign, clarsimp simp: fun_upd_def)"], ["", "lemma R_assign_law: \n  \"(\\<forall>s. P s \\<longrightarrow> Q (\\<chi> j. ((($) s)(x := (e s))) j)) \\<Longrightarrow> (x ::= e) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       P s \\<longrightarrow>\n       Q (\\<chi>j. ((($) s)(x := e s)) j) \\<Longrightarrow>\n    x ::= e \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "unfolding sH_assign[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x ::= e\\<^bold>{Q\\<^bold>} \\<Longrightarrow>\n    x ::= e \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule rel_rkat.R2)"], ["", "lemma R_assignl: \"P = (\\<lambda>s. R (\\<chi> j. ((($) s)(x := e s)) j)) \\<Longrightarrow> \n  (x ::= e) ; rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P = (\\<lambda>s. R (\\<chi>j. ((($) s)(x := e s)) j)) \\<Longrightarrow>\n    (x ::= e) ; rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "apply(rule_tac R=R in R_seq_law)"], ["proof (prove)\ngoal (2 subgoals):\n 1. P = (\\<lambda>s. R (\\<chi>j. ((($) s)(x := e s)) j)) \\<Longrightarrow>\n    x ::= e \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>\n 2. P = (\\<lambda>s. R (\\<chi>j. ((($) s)(x := e s)) j)) \\<Longrightarrow>\n    rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>\n    \\<subseteq> rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>", "by (rule_tac R_assign_law, simp_all)"], ["", "lemma R_assignr: \"R = (\\<lambda>s. Q (\\<chi> j. ((($) s)(x := e s)) j)) \\<Longrightarrow> \n  rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>; (x ::= e) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R = (\\<lambda>s. Q (\\<chi>j. ((($) s)(x := e s)) j)) \\<Longrightarrow>\n    rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil> ; (x ::= e)\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "apply(rule_tac R=R in R_seq_law, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. R = (\\<lambda>s. Q (\\<chi>j. ((($) s)(x := e s)) j)) \\<Longrightarrow>\n    x ::= e \\<subseteq> rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>", "by (rule_tac R_assign_law, simp)"], ["", "lemma \"(x ::= e) ; rel_R \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil> \\<le> rel_R \\<lceil>(\\<lambda>s. Q (\\<chi> j. ((($) s)(x := e s)) j))\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ::= e) ; rel_R \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil>\n    \\<subseteq> rel_R\n                 \\<lceil>\\<lambda>s.\n                            Q (\\<chi>j. ((($) s)(x := e s)) j)\\<rceil>\n                 \\<lceil>Q\\<rceil>", "by (rule R_assignl) simp"], ["", "lemma \"rel_R \\<lceil>Q\\<rceil> \\<lceil>(\\<lambda>s. Q (\\<chi> j. ((($) s)(x := e s)) j))\\<rceil>; (x ::= e) \\<le> rel_R \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_R \\<lceil>Q\\<rceil>\n     \\<lceil>\\<lambda>s. Q (\\<chi>j. ((($) s)(x := e s)) j)\\<rceil> ;\n    (x ::= e)\n    \\<subseteq> rel_R \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil>", "by (rule R_assignr) simp\n\n\\<comment> \\<open> Nondeterministic Assignment \\<close>"], ["", "lemma R_nondet_assign: \"(x ::= ?) \\<le> rel_R \\<lceil>\\<lambda>s. \\<forall>k. P (\\<chi> j. ((($) s)(x := k)) j)\\<rceil> \\<lceil>P\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ::= ? \n    \\<subseteq> rel_R\n                 \\<lceil>\\<lambda>s.\n                            \\<forall>k.\n                               P (\\<chi>j. ((($) s)(x := k)) j)\\<rceil>\n                 \\<lceil>P\\<rceil>", "unfolding rel_rkat.spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{\\<lambda>s.\n                \\<forall>k.\n                   P (vec_lambda\n                       ((($) s)\n                        (x := k)))\\<^bold>}x ::= ? \\<^bold>{P\\<^bold>}", "by (rule H_nondet_assign)"], ["", "lemma R_nondet_assign_law: \n  \"(\\<forall>s. P s \\<longrightarrow> (\\<forall>k. Q (\\<chi> j. ((($) s)(x := k)) j))) \\<Longrightarrow> (x ::= ?) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       P s \\<longrightarrow>\n       (\\<forall>k. Q (\\<chi>j. ((($) s)(x := k)) j)) \\<Longrightarrow>\n    x ::= ?  \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "unfolding sH_nondet_assign[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x ::= ? \\<^bold>{Q\\<^bold>} \\<Longrightarrow>\n    x ::= ?  \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule rel_rkat.R2)\n\n\\<comment> \\<open> Conditional Statement \\<close>"], ["", "lemma R_cond: \n  \"(IF B THEN rel_R \\<lceil>\\<lambda>s. B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil> ELSE rel_R \\<lceil>\\<lambda>s. \\<not> B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil>) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. IF B THEN rel_R \\<lceil>\\<lambda>s. B s \\<and> P s\\<rceil>\n               \\<lceil>Q\\<rceil> ELSE rel_R\n \\<lceil>\\<lambda>s. \\<not> B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil>\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "using rel_rkat.R_cond[of \"\\<lceil>B\\<rceil>\" \"\\<lceil>P\\<rceil>\" \"\\<lceil>Q\\<rceil>\"]"], ["proof (prove)\nusing this:\n  IF B THEN rel_R\n             (rel_tests.t \\<lceil>B\\<rceil> ; rel_tests.t \\<lceil>P\\<rceil>)\n             \\<lceil>Q\\<rceil> ELSE rel_R\n                                     ((skip \\<inter> - \\<lceil>B\\<rceil>) ;\nrel_tests.t \\<lceil>P\\<rceil>)\n                                     \\<lceil>Q\\<rceil>\n  \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\n\ngoal (1 subgoal):\n 1. IF B THEN rel_R \\<lceil>\\<lambda>s. B s \\<and> P s\\<rceil>\n               \\<lceil>Q\\<rceil> ELSE rel_R\n \\<lceil>\\<lambda>s. \\<not> B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil>\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by simp"], ["", "lemma R_cond_mono: \"X \\<le> X' \\<Longrightarrow> Y \\<le> Y' \\<Longrightarrow> (IF P THEN X ELSE Y) \\<le> IF P THEN X' ELSE Y'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<subseteq> X'; Y \\<subseteq> Y'\\<rbrakk>\n    \\<Longrightarrow> IF P THEN X ELSE Y \\<subseteq> IF P THEN X' ELSE Y'", "by (auto simp: rel_kat.kat_cond_def)"], ["", "lemma R_cond_law: \"X \\<le> rel_R \\<lceil>\\<lambda>s. B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> Y \\<le> rel_R \\<lceil>\\<lambda>s. \\<not> B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> \n  (IF B THEN X ELSE Y) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<subseteq> rel_R \\<lceil>\\<lambda>s. B s \\<and> P s\\<rceil>\n                            \\<lceil>Q\\<rceil>;\n     Y \\<subseteq> rel_R \\<lceil>\\<lambda>s. \\<not> B s \\<and> P s\\<rceil>\n                    \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> IF B THEN X ELSE Y\n                      \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule order_trans; (rule R_cond_mono)?, (rule R_cond)?) auto\n\n\\<comment> \\<open> While Loop \\<close>"], ["", "lemma R_while: \"K = (\\<lambda>s. P s \\<and> \\<not> B s) \\<Longrightarrow> \n  WHILE B INV I DO (rel_R \\<lceil>\\<lambda>s. P s \\<and> B s\\<rceil> \\<lceil>P\\<rceil>) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>K\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K = (\\<lambda>s. P s \\<and> \\<not> B s) \\<Longrightarrow>\n    WHILE B INV I DO rel_R \\<lceil>\\<lambda>s. P s \\<and> B s\\<rceil>\n                      \\<lceil>P\\<rceil>\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>K\\<rceil>", "unfolding rel_kat.kat_while_inv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. K = (\\<lambda>s. P s \\<and> \\<not> B s) \\<Longrightarrow>\n    rel_kat.kat_while \\<lceil>B\\<rceil>\n     (rel_R \\<lceil>\\<lambda>s. P s \\<and> B s\\<rceil> \\<lceil>P\\<rceil>)\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>K\\<rceil>", "using rel_rkat.R_while[of \"\\<lceil>B\\<rceil>\" \"\\<lceil>P\\<rceil>\"]"], ["proof (prove)\nusing this:\n  rel_kat.kat_while \\<lceil>B\\<rceil>\n   (rel_R (rel_tests.t \\<lceil>P\\<rceil> ; rel_tests.t \\<lceil>B\\<rceil>)\n     \\<lceil>P\\<rceil>)\n  \\<subseteq> rel_R \\<lceil>P\\<rceil>\n               (rel_tests.t \\<lceil>P\\<rceil> ;\n                (skip \\<inter> - \\<lceil>B\\<rceil>))\n\ngoal (1 subgoal):\n 1. K = (\\<lambda>s. P s \\<and> \\<not> B s) \\<Longrightarrow>\n    rel_kat.kat_while \\<lceil>B\\<rceil>\n     (rel_R \\<lceil>\\<lambda>s. P s \\<and> B s\\<rceil> \\<lceil>P\\<rceil>)\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>K\\<rceil>", "by simp"], ["", "lemma R_whileI:\n  \"X \\<le> rel_R \\<lceil>I\\<rceil> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>\\<lambda>s. I s \\<and> B s\\<rceil> \\<Longrightarrow> \\<lceil>\\<lambda>s. I s \\<and> \\<not> B s\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> \n  WHILE B INV I DO X \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<subseteq> rel_R \\<lceil>I\\<rceil> \\<lceil>I\\<rceil>;\n     \\<lceil>P\\<rceil>\n     \\<subseteq> \\<lceil>\\<lambda>s. I s \\<and> B s\\<rceil>;\n     \\<lceil>\\<lambda>s. I s \\<and> \\<not> B s\\<rceil>\n     \\<subseteq> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> WHILE B INV I DO X\n                      \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule rel_rkat.R2, rule rel_kat.H_while_inv, auto simp: rel_kat_H rel_rkat.spec_def)"], ["", "lemma R_while_mono: \"X \\<le> X' \\<Longrightarrow> (WHILE P INV I DO X) \\<subseteq> WHILE P INV I DO X'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> X' \\<Longrightarrow>\n    WHILE P INV I DO X \\<subseteq> WHILE P INV I DO X'", "by (simp add: rel_dioid.mult_isol rel_dioid.mult_isor rel_ka.conway.dagger_iso \n      rel_kat.kat_while_def rel_kat.kat_while_inv_def)"], ["", "lemma R_while_law: \"X \\<le> rel_R \\<lceil>\\<lambda>s. P s \\<and> B s\\<rceil> \\<lceil>P\\<rceil> \\<Longrightarrow> Q = (\\<lambda>s. P s \\<and> \\<not> B s) \\<Longrightarrow> \n  (WHILE B INV I DO X) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<subseteq> rel_R \\<lceil>\\<lambda>s. P s \\<and> B s\\<rceil>\n                            \\<lceil>P\\<rceil>;\n     Q = (\\<lambda>s. P s \\<and> \\<not> B s)\\<rbrakk>\n    \\<Longrightarrow> WHILE B INV I DO X\n                      \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule order_trans; (rule R_while_mono)?, (rule R_while)?)\n\n\\<comment> \\<open> Finite Iteration \\<close>"], ["", "lemma R_loop:\"LOOP rel_R \\<lceil>P\\<rceil> \\<lceil>P\\<rceil> INV I \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>P\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LOOP rel_R \\<lceil>P\\<rceil> \\<lceil>P\\<rceil> INV I \n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>P\\<rceil>", "using rel_rkat.R_loop"], ["proof (prove)\nusing this:\n  rel_kat.kat_loop_inv (rel_R ?p ?p) ?i \\<subseteq> rel_R ?p ?p\n\ngoal (1 subgoal):\n 1. LOOP rel_R \\<lceil>P\\<rceil> \\<lceil>P\\<rceil> INV I \n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>P\\<rceil>", "."], ["", "lemma R_loopI: \n  \"X \\<le> rel_R \\<lceil>I\\<rceil> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> LOOP X INV I \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<subseteq> rel_R \\<lceil>I\\<rceil> \\<lceil>I\\<rceil>;\n     \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>;\n     \\<lceil>I\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> LOOP X INV I \n                      \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "unfolding rel_rkat.spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}X\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>;\n     \\<lceil>I\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}LOOP X INV I \\<^bold>{Q\\<^bold>}", "using H_loopI"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<^bold>{?I\\<^bold>}?X\\<^bold>{?I\\<^bold>};\n   \\<lceil>?P\\<rceil> \\<subseteq> \\<lceil>?I\\<rceil>;\n   \\<lceil>?I\\<rceil> \\<subseteq> \\<lceil>?Q\\<rceil>\\<rbrakk>\n  \\<Longrightarrow> \\<^bold>{?P\\<^bold>}LOOP ?X INV ?I \\<^bold>{?Q\\<^bold>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}X\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>;\n     \\<lceil>I\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}LOOP X INV I \\<^bold>{Q\\<^bold>}", "by blast"], ["", "lemma R_loop_mono: \"X \\<le> X' \\<Longrightarrow> LOOP X INV I \\<subseteq> LOOP X' INV I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> X' \\<Longrightarrow>\n    LOOP X INV I  \\<subseteq> LOOP X' INV I", "unfolding rel_kat.kat_loop_inv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> X' \\<Longrightarrow> X\\<^sup>* \\<subseteq> X'\\<^sup>*", "by (simp add: rel_ka.star_iso)\n\n\\<comment> \\<open> Evolution command (flow) \\<close>"], ["", "lemma R_g_evol: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"(EVOL \\<phi> G U) \\<le> rel_R \\<lceil>\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> P (\\<phi> t s)\\<rceil> \\<lceil>P\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EVOL \\<phi> G U\n    \\<subseteq> rel_R\n                 \\<lceil>\\<lambda>s.\n                            \\<forall>t\\<in>U s.\n                               (\\<forall>\\<tau>\\<in>down (U s) t.\n                                   G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                               P (\\<phi> t s)\\<rceil>\n                 \\<lceil>P\\<rceil>", "unfolding rel_rkat.spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{\\<lambda>s.\n                \\<forall>t\\<in>U s.\n                   (\\<forall>\\<tau>\\<in>down (U s) t.\n                       G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                   P (\\<phi> t s)\\<^bold>}EVOL \\<phi> G U\\<^bold>{P\\<^bold>}", "by (rule H_g_evol, simp)"], ["", "lemma R_g_evol_law: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"(\\<forall>s. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))) \\<Longrightarrow> (EVOL \\<phi> G U) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       P s \\<longrightarrow>\n       (\\<forall>t\\<in>U s.\n           (\\<forall>\\<tau>\\<in>down (U s) t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           Q (\\<phi> t s)) \\<Longrightarrow>\n    EVOL \\<phi> G U \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "unfolding sH_g_evol[symmetric] rel_rkat.spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}EVOL \\<phi> G U\\<^bold>{Q\\<^bold>} \\<Longrightarrow>\n    \\<^bold>{P\\<^bold>}EVOL \\<phi> G U\\<^bold>{Q\\<^bold>}", "."], ["", "lemma R_g_evoll: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"P = (\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> R (\\<phi> t s)) \\<Longrightarrow> \n  (EVOL \\<phi> G U) ; rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P =\n    (\\<lambda>s.\n        \\<forall>t\\<in>U s.\n           (\\<forall>\\<tau>\\<in>down (U s) t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           R (\\<phi> t s)) \\<Longrightarrow>\n    EVOL \\<phi> G U ; rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "apply(rule_tac R=R in R_seq_law)"], ["proof (prove)\ngoal (2 subgoals):\n 1. P =\n    (\\<lambda>s.\n        \\<forall>t\\<in>U s.\n           (\\<forall>\\<tau>\\<in>down (U s) t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           R (\\<phi> t s)) \\<Longrightarrow>\n    EVOL \\<phi> G U \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>\n 2. P =\n    (\\<lambda>s.\n        \\<forall>t\\<in>U s.\n           (\\<forall>\\<tau>\\<in>down (U s) t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           R (\\<phi> t s)) \\<Longrightarrow>\n    rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>\n    \\<subseteq> rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>", "by (rule_tac R_g_evol_law, simp_all)"], ["", "lemma R_g_evolr: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"R = (\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)) \\<Longrightarrow> \n  rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>; (EVOL \\<phi> G U) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R =\n    (\\<lambda>s.\n        \\<forall>t\\<in>U s.\n           (\\<forall>\\<tau>\\<in>down (U s) t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           Q (\\<phi> t s)) \\<Longrightarrow>\n    rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil> ; EVOL \\<phi> G U\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "apply(rule_tac R=R in R_seq_law, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. R =\n    (\\<lambda>s.\n        \\<forall>t\\<in>U s.\n           (\\<forall>\\<tau>\\<in>down (U s) t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           Q (\\<phi> t s)) \\<Longrightarrow>\n    EVOL \\<phi> G U \\<subseteq> rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>", "by (rule_tac R_g_evol_law, simp)"], ["", "lemma \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"EVOL \\<phi> G U ; rel_R \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil> \\<le> rel_R \\<lceil>\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EVOL \\<phi> G U ; rel_R \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil>\n    \\<subseteq> rel_R\n                 \\<lceil>\\<lambda>s.\n                            \\<forall>t\\<in>U s.\n                               (\\<forall>\\<tau>\\<in>down (U s) t.\n                                   G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                               Q (\\<phi> t s)\\<rceil>\n                 \\<lceil>Q\\<rceil>", "by (rule R_g_evoll) simp"], ["", "lemma \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"rel_R \\<lceil>Q\\<rceil> \\<lceil>\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)\\<rceil>; EVOL \\<phi> G U \\<le> rel_R \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_R \\<lceil>Q\\<rceil>\n     \\<lceil>\\<lambda>s.\n                \\<forall>t\\<in>U s.\n                   (\\<forall>\\<tau>\\<in>down (U s) t.\n                       G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                   Q (\\<phi> t s)\\<rceil> ;\n    EVOL \\<phi> G U\n    \\<subseteq> rel_R \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil>", "by (rule R_g_evolr) simp\n\n\\<comment> \\<open> Evolution command (ode) \\<close>"], ["", "context local_flow\nbegin"], ["", "lemma R_g_ode_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n  shows \"(x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<le> \n  rel_R \\<lceil>\\<lambda>s. s\\<in>S \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> P (\\<phi> t s))\\<rceil> \\<lceil>P\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<acute>=\\<lambda>t. f & G on U S @ 0\n    \\<subseteq> rel_R\n                 \\<lceil>\\<lambda>s.\n                            s \\<in> S \\<longrightarrow>\n                            (\\<forall>t\\<in>U s.\n                                (\\<forall>\\<tau>\\<in>down (U s) t.\n                                    G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                                P (\\<phi> t s))\\<rceil>\n                 \\<lceil>P\\<rceil>", "unfolding rel_rkat.spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{\\<lambda>s.\n                s \\<in> S \\<longrightarrow>\n                (\\<forall>t\\<in>U s.\n                    (\\<forall>\\<tau>\\<in>down (U s) t.\n                        G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                    P (\\<phi> t\n                        s))\\<^bold>}x\\<acute>=\\<lambda>t.\n           f & G on U S @ 0\\<^bold>{P\\<^bold>}", "by (rule H_g_ode_subset[OF assms], simp_all)"], ["", "lemma R_g_ode_rule_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n  shows \"(\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))) \\<Longrightarrow> \n  (x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>S.\n       P s \\<longrightarrow>\n       (\\<forall>t\\<in>U s.\n           (\\<forall>\\<tau>\\<in>down (U s) t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           Q (\\<phi> t s)) \\<Longrightarrow>\n    x\\<acute>=\\<lambda>t. f & G on U S @ 0\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule rel_rkat.R2, subst sH_g_ode_subset[OF assms], auto)"], ["", "lemma R_g_odel_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n    and \"P = (\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> R (\\<phi> t s))\"\n  shows \"(x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) ; rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<acute>=\\<lambda>t. f & G on U S @ 0 ;\n    rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "apply (rule_tac R=R in R_seq_law, rule_tac R_g_ode_rule_subset)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       s \\<in> S \\<Longrightarrow>\n       0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\n 2. \\<forall>s\\<in>S.\n       P s \\<longrightarrow>\n       (\\<forall>t\\<in>U s.\n           (\\<forall>\\<tau>\\<in>down (U s) t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           R (\\<phi> t s))\n 3. rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>\n    \\<subseteq> rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>", "by (simp_all add: assms)"], ["", "lemma R_g_oder_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n    and \"R = (\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))\"\n  shows \"rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>; (x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil> ;\n    x\\<acute>=\\<lambda>t. f & G on U S @ 0\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "apply (rule_tac R=R in R_seq_law, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<acute>=\\<lambda>t. f & G on U S @ 0\n    \\<subseteq> rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>", "by (rule_tac R_g_ode_rule_subset, simp_all add: assms)"], ["", "lemma R_g_ode: \"(x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) \\<le> \n  rel_R \\<lceil>\\<lambda>s. s\\<in>S \\<longrightarrow> (\\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> P (\\<phi> t s))\\<rceil> \\<lceil>P\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<acute>=\\<lambda>t. f & G on \\<lambda>s. T S @ 0\n    \\<subseteq> rel_R\n                 \\<lceil>\\<lambda>s.\n                            s \\<in> S \\<longrightarrow>\n                            (\\<forall>t\\<in>T.\n                                (\\<forall>\\<tau>\\<in>down T t.\n                                    G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                                P (\\<phi> t s))\\<rceil>\n                 \\<lceil>P\\<rceil>", "by (rule R_g_ode_subset, auto simp: init_time interval_time)"], ["", "lemma R_g_ode_law: \"(\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))) \\<Longrightarrow> \n  (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>S.\n       P s \\<longrightarrow>\n       (\\<forall>t\\<in>T.\n           (\\<forall>\\<tau>\\<in>down T t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           Q (\\<phi> t s)) \\<Longrightarrow>\n    x\\<acute>=\\<lambda>t. f & G on \\<lambda>s. T S @ 0\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "unfolding sH_g_ode[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>=\\<lambda>t.\n                                    f & G on \\<lambda>s.\n          T S @ 0\\<^bold>{Q\\<^bold>} \\<Longrightarrow>\n    x\\<acute>=\\<lambda>t. f & G on \\<lambda>s. T S @ 0\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule rel_rkat.R2)"], ["", "lemma R_g_odel: \"P = (\\<lambda>s. \\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> R (\\<phi> t s)) \\<Longrightarrow> \n  (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) ; rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P =\n    (\\<lambda>s.\n        \\<forall>t\\<in>T.\n           (\\<forall>\\<tau>\\<in>down T t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           R (\\<phi> t s)) \\<Longrightarrow>\n    x\\<acute>=\\<lambda>t. f & G on \\<lambda>s. T S @ 0 ;\n    rel_R \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule R_g_odel_subset, auto simp: init_time interval_time)"], ["", "lemma R_g_oder: \"R = (\\<lambda>s. \\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)) \\<Longrightarrow> \n  rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>; (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R =\n    (\\<lambda>s.\n        \\<forall>t\\<in>T.\n           (\\<forall>\\<tau>\\<in>down T t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           Q (\\<phi> t s)) \\<Longrightarrow>\n    rel_R \\<lceil>P\\<rceil> \\<lceil>R\\<rceil> ;\n    x\\<acute>=\\<lambda>t. f & G on \\<lambda>s. T S @ 0\n    \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule R_g_oder_subset, auto simp: init_time interval_time)"], ["", "lemma R_g_ode_ivl: \n  \"t \\<ge> 0 \\<Longrightarrow> t \\<in> T \\<Longrightarrow> (\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>{0..t}. (\\<forall>\\<tau>\\<in>{0..t}. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))) \\<Longrightarrow> \n  (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. {0..t}) S @ 0) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> t; t \\<in> T;\n     \\<forall>s\\<in>S.\n        P s \\<longrightarrow>\n        (\\<forall>t\\<in>{0..t}.\n            (\\<forall>\\<tau>\\<in>{0..t}.\n                G (\\<phi> \\<tau> s)) \\<longrightarrow>\n            Q (\\<phi> t s))\\<rbrakk>\n    \\<Longrightarrow> x\\<acute>=\\<lambda>t.\n                                   f & G on \\<lambda>s. {0..t} S @ 0\n                      \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "unfolding sH_g_ode_ivl[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> t; t \\<in> T;\n     \\<^bold>{P\\<^bold>}x\\<acute>=\\<lambda>t.\n                                     f & G on \\<lambda>s.\n           {0..t} S @ 0\\<^bold>{Q\\<^bold>}\\<rbrakk>\n    \\<Longrightarrow> x\\<acute>=\\<lambda>t.\n                                   f & G on \\<lambda>s. {0..t} S @ 0\n                      \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule rel_rkat.R2)"], ["", "end\n\n\\<comment> \\<open> Evolution command (invariants) \\<close>"], ["", "lemma R_g_ode_inv: \"diff_invariant I f T S t\\<^sub>0 G \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> \n  (x\\<acute>=f & G on T S @ t\\<^sub>0 DINV I) \\<le> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>diff_invariant I f T S t\\<^sub>0 G;\n     \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>;\n     \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil>\n     \\<subseteq> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> x\\<acute>=f & G on T S @ t\\<^sub>0 DINV I \n                      \\<subseteq> rel_R \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "unfolding rel_rkat.spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>diff_invariant I f T S t\\<^sub>0 G;\n     \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>;\n     \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil>\n     \\<subseteq> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}x\\<acute>=f & G on T S @ t\\<^sub>0 DINV I \\<^bold>{Q\\<^bold>}", "by (auto simp: H_g_ode_inv)"], ["", "subsection \\<open> Derivation of the rules of dL \\<close>"], ["", "text \\<open> We derive rules of differential dynamic logic (dL). This allows the components to reason \nin the style of that logic. \\<close>"], ["", "abbreviation g_dl_ode ::\"(('a::banach)\\<Rightarrow>'a) \\<Rightarrow> 'a pred \\<Rightarrow> 'a rel\" (\"(1x\\<acute>=_ & _)\") \n  where \"(x\\<acute>=f & G) \\<equiv> (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. {t. t \\<ge> 0}) UNIV @ 0)\""], ["", "abbreviation g_dl_ode_inv :: \"(('a::banach)\\<Rightarrow>'a) \\<Rightarrow> 'a pred \\<Rightarrow> 'a pred \\<Rightarrow> 'a rel\" (\"(1x\\<acute>=_ & _ DINV _)\") \n  where \"(x\\<acute>= f & G DINV I) \\<equiv> (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. {t. t \\<ge> 0}) UNIV @ 0 DINV I)\""], ["", "lemma diff_solve_rule1:\n  assumes \"local_flow f UNIV UNIV \\<phi>\"\n    and \"\\<forall>s. P s \\<longrightarrow> (\\<forall>t\\<ge>0. (\\<forall>\\<tau>\\<in>{0..t}. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>=\\<lambda>t.\n                                    f & G on \\<lambda>s.\n          {t. 0 \\<le> t} UNIV @ 0\\<^bold>{Q\\<^bold>}", "using assms"], ["proof (prove)\nusing this:\n  local_flow f UNIV UNIV \\<phi>\n  \\<forall>s.\n     P s \\<longrightarrow>\n     (\\<forall>t\\<ge>0.\n         (\\<forall>\\<tau>\\<in>{0..t}. G (\\<phi> \\<tau> s)) \\<longrightarrow>\n         Q (\\<phi> t s))\n\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>=\\<lambda>t.\n                                    f & G on \\<lambda>s.\n          {t. 0 \\<le> t} UNIV @ 0\\<^bold>{Q\\<^bold>}", "by(subst local_flow.sH_g_ode_subset, auto)"], ["", "lemma diff_solve_rule2: \n  fixes c::\"'a::{heine_borel, banach}\"\n  assumes \"\\<forall>s. P s \\<longrightarrow> (\\<forall>t\\<ge>0. (\\<forall>\\<tau>\\<in>{0..t}. G (s + \\<tau> *\\<^sub>R c)) \\<longrightarrow> Q (s + t *\\<^sub>R c))\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>=(\\<lambda>s. c) & G) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>=\\<lambda>t s.\n                                    c & G on \\<lambda>s.\n          {t. 0 \\<le> t} UNIV @ 0\\<^bold>{Q\\<^bold>}", "apply(subst local_flow.sH_g_ode_subset[where T=UNIV and \\<phi>=\"(\\<lambda> t x. x + t *\\<^sub>R c)\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. local_flow (\\<lambda>s. c) UNIV UNIV (\\<lambda>t x. x + t *\\<^sub>R c)\n 2. \\<And>s.\n       s \\<in> UNIV \\<Longrightarrow>\n       0 \\<in> Collect ((\\<le>) 0) \\<and>\n       is_interval (Collect ((\\<le>) 0)) \\<and>\n       Collect ((\\<le>) 0) \\<subseteq> UNIV\n 3. \\<forall>s\\<in>UNIV.\n       P s \\<longrightarrow>\n       (\\<forall>t\\<in>Collect ((\\<le>) 0).\n           (\\<forall>\\<tau>\\<in>down (Collect ((\\<le>) 0)) t.\n               G (s + \\<tau> *\\<^sub>R c)) \\<longrightarrow>\n           Q (s + t *\\<^sub>R c))", "using line_is_local_flow assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> ?T; is_interval ?T; open ?T\\<rbrakk>\n  \\<Longrightarrow> local_flow (\\<lambda>s. ?c) ?T UNIV\n                     (\\<lambda>t s. s + t *\\<^sub>R ?c)\n  \\<forall>s.\n     P s \\<longrightarrow>\n     (\\<forall>t\\<ge>0.\n         (\\<forall>\\<tau>\\<in>{0..t}.\n             G (s + \\<tau> *\\<^sub>R c)) \\<longrightarrow>\n         Q (s + t *\\<^sub>R c))\n\ngoal (3 subgoals):\n 1. local_flow (\\<lambda>s. c) UNIV UNIV (\\<lambda>t x. x + t *\\<^sub>R c)\n 2. \\<And>s.\n       s \\<in> UNIV \\<Longrightarrow>\n       0 \\<in> Collect ((\\<le>) 0) \\<and>\n       is_interval (Collect ((\\<le>) 0)) \\<and>\n       Collect ((\\<le>) 0) \\<subseteq> UNIV\n 3. \\<forall>s\\<in>UNIV.\n       P s \\<longrightarrow>\n       (\\<forall>t\\<in>Collect ((\\<le>) 0).\n           (\\<forall>\\<tau>\\<in>down (Collect ((\\<le>) 0)) t.\n               G (s + \\<tau> *\\<^sub>R c)) \\<longrightarrow>\n           Q (s + t *\\<^sub>R c))", "by auto"], ["", "lemma diff_weak_rule: \n  assumes \"\\<lceil>G\\<rceil> \\<le> \\<lceil>Q\\<rceil>\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "using assms"], ["proof (prove)\nusing this:\n  \\<lceil>G\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil>\n\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "unfolding g_orbital_eq rel_kat_H ivp_sols_def g_ode_def"], ["proof (prove)\nusing this:\n  \\<lceil>G\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil>\n\ngoal (1 subgoal):\n 1. \\<forall>s s'.\n       P s \\<longrightarrow>\n       (s, s')\n       \\<in> {(s, s') |s s'.\n              s' \\<in> {X t |t X.\n                        t \\<in> U s \\<and>\n                        \\<P> X (down (U s) t) \\<subseteq> Collect G \\<and>\n                        X \\<in> {X \\<in> U s \\<rightarrow> S.\n                                  D X = (\\<lambda>t. f t (X t))\n                                  on U s \\<and>\n                                 X t\\<^sub>0 = s \\<and>\n                                 t\\<^sub>0 \\<in> U s}}} \\<longrightarrow>\n       Q s'", "by auto"], ["", "lemma diff_cut_rule:\n  assumes wp_C:\"rel_kat.Hoare \\<lceil>P\\<rceil> (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<lceil>C\\<rceil>\"\n    and wp_Q:\"rel_kat.Hoare \\<lceil>P\\<rceil> (x\\<acute>= f & (\\<lambda> s. G s \\<and> C s) on U S @ t\\<^sub>0) \\<lceil>Q\\<rceil>\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "proof(subst rel_kat_H, simp add: g_orbital_eq p2r_def g_ode_def, clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t X.\n       \\<lbrakk>P s; t \\<in> U s;\n        \\<forall>x. x \\<in> U s \\<and> x \\<le> t \\<longrightarrow> G (X x);\n        X \\<in> Sols f U S t\\<^sub>0 s\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "fix t::real and X::\"real \\<Rightarrow> 'a\" and s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t X.\n       \\<lbrakk>P s; t \\<in> U s;\n        \\<forall>x. x \\<in> U s \\<and> x \\<le> t \\<longrightarrow> G (X x);\n        X \\<in> Sols f U S t\\<^sub>0 s\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "assume \"P s\" and \"t \\<in> U s\"\n    and x_ivp:\"X \\<in> ivp_sols f U S t\\<^sub>0 s\" \n    and guard_x:\"\\<forall>x. x \\<in> U s \\<and> x \\<le> t \\<longrightarrow> G (X x)\""], ["proof (state)\nthis:\n  P s\n  t \\<in> U s\n  X \\<in> Sols f U S t\\<^sub>0 s\n  \\<forall>x. x \\<in> U s \\<and> x \\<le> t \\<longrightarrow> G (X x)\n\ngoal (1 subgoal):\n 1. \\<And>s t X.\n       \\<lbrakk>P s; t \\<in> U s;\n        \\<forall>x. x \\<in> U s \\<and> x \\<le> t \\<longrightarrow> G (X x);\n        X \\<in> Sols f U S t\\<^sub>0 s\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "have \"\\<forall>t\\<in>(down (U s) t). X t \\<in> g_orbital f G U S t\\<^sub>0 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>down (U s) t. X t \\<in> g_orbital f G U S t\\<^sub>0 s", "using g_orbitalI[OF x_ivp] guard_x"], ["proof (prove)\nusing this:\n  \\<lbrakk>?t \\<in> U s;\n   \\<P> X (down (U s) ?t) \\<subseteq> {s. ?G s}\\<rbrakk>\n  \\<Longrightarrow> X ?t \\<in> g_orbital f ?G U S t\\<^sub>0 s\n  \\<forall>x. x \\<in> U s \\<and> x \\<le> t \\<longrightarrow> G (X x)\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>down (U s) t. X t \\<in> g_orbital f G U S t\\<^sub>0 s", "by auto"], ["proof (state)\nthis:\n  \\<forall>t\\<in>down (U s) t. X t \\<in> g_orbital f G U S t\\<^sub>0 s\n\ngoal (1 subgoal):\n 1. \\<And>s t X.\n       \\<lbrakk>P s; t \\<in> U s;\n        \\<forall>x. x \\<in> U s \\<and> x \\<le> t \\<longrightarrow> G (X x);\n        X \\<in> Sols f U S t\\<^sub>0 s\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "hence \"\\<forall>t\\<in>(down (U s) t). C (X t)\""], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>down (U s) t. X t \\<in> g_orbital f G U S t\\<^sub>0 s\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>down (U s) t. C (X t)", "using wp_C \\<open>P s\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>down (U s) t. X t \\<in> g_orbital f G U S t\\<^sub>0 s\n  \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{C\\<^bold>}\n  P s\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>down (U s) t. C (X t)", "by (subst (asm) rel_kat_H, auto simp: g_ode_def)"], ["proof (state)\nthis:\n  \\<forall>t\\<in>down (U s) t. C (X t)\n\ngoal (1 subgoal):\n 1. \\<And>s t X.\n       \\<lbrakk>P s; t \\<in> U s;\n        \\<forall>x. x \\<in> U s \\<and> x \\<le> t \\<longrightarrow> G (X x);\n        X \\<in> Sols f U S t\\<^sub>0 s\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "hence \"X t \\<in> g_orbital f (\\<lambda>s. G s \\<and> C s) U S t\\<^sub>0 s\""], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>down (U s) t. C (X t)\n\ngoal (1 subgoal):\n 1. X t \\<in> g_orbital f (\\<lambda>s. G s \\<and> C s) U S t\\<^sub>0 s", "using guard_x \\<open>t \\<in> U s\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>down (U s) t. C (X t)\n  \\<forall>x. x \\<in> U s \\<and> x \\<le> t \\<longrightarrow> G (X x)\n  t \\<in> U s\n\ngoal (1 subgoal):\n 1. X t \\<in> g_orbital f (\\<lambda>s. G s \\<and> C s) U S t\\<^sub>0 s", "by (auto intro!: g_orbitalI x_ivp)"], ["proof (state)\nthis:\n  X t \\<in> g_orbital f (\\<lambda>s. G s \\<and> C s) U S t\\<^sub>0 s\n\ngoal (1 subgoal):\n 1. \\<And>s t X.\n       \\<lbrakk>P s; t \\<in> U s;\n        \\<forall>x. x \\<in> U s \\<and> x \\<le> t \\<longrightarrow> G (X x);\n        X \\<in> Sols f U S t\\<^sub>0 s\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "thus \"Q (X t)\""], ["proof (prove)\nusing this:\n  X t \\<in> g_orbital f (\\<lambda>s. G s \\<and> C s) U S t\\<^sub>0 s\n\ngoal (1 subgoal):\n 1. Q (X t)", "using \\<open>P s\\<close> wp_Q"], ["proof (prove)\nusing this:\n  X t \\<in> g_orbital f (\\<lambda>s. G s \\<and> C s) U S t\\<^sub>0 s\n  P s\n  \\<^bold>{P\\<^bold>}x\\<acute>=f & \\<lambda>s.\nG s \\<and> C s on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}\n\ngoal (1 subgoal):\n 1. Q (X t)", "by (subst (asm) rel_kat_H) (auto simp: g_ode_def)"], ["proof (state)\nthis:\n  Q (X t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diff_inv_rule:\n  assumes \"\\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>\" and \"diff_invariant I f U S t\\<^sub>0 G\" and \"\\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "apply(subst g_ode_inv_def[symmetric, where I=I], rule H_g_ode_inv)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<^bold>{I\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>}\n 2. \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>\n 3. \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil>", "unfolding sH_diff_inv"], ["proof (prove)\ngoal (3 subgoals):\n 1. diff_invariant I f U S t\\<^sub>0 G\n 2. \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>\n 3. \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil>", "using assms"], ["proof (prove)\nusing this:\n  \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>\n  diff_invariant I f U S t\\<^sub>0 G\n  \\<lceil>I\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil>\n\ngoal (3 subgoals):\n 1. diff_invariant I f U S t\\<^sub>0 G\n 2. \\<lceil>P\\<rceil> \\<subseteq> \\<lceil>I\\<rceil>\n 3. \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil> \\<subseteq> \\<lceil>Q\\<rceil>", "by auto"], ["", "end"]]}