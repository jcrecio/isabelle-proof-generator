{"file_name": "/home/qj213/afp-2021-10-22/thys/Hybrid_Systems_VCs/KleeneAlgebraTests/HS_VC_KAT_ndfun.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Hybrid_Systems_VCs", "problem_names": ["lemma nd_fun_n_op_one[nd_fun_ka]: \"n (n (1::'a nd_fun)) = 1\"\n  and nd_fun_n_op_mult[nd_fun_ka]: \"n (n (n x \\<cdot> n y)) = n x \\<cdot> n y\"\n  and nd_fun_n_op_mult_comp[nd_fun_ka]: \"n x \\<cdot> n (n x) = 0\" \n  and nd_fun_n_op_de_morgan[nd_fun_ka]: \"n (n (n x) \\<cdot> n (n y)) = n x + n y\" for x::\"'a nd_fun\"", "lemma p2ndf_simps[simp]: \n  \"\\<lceil>P\\<rceil> \\<le> \\<lceil>Q\\<rceil> = (\\<forall>s. P s \\<longrightarrow> Q s)\"\n  \"(\\<lceil>P\\<rceil> = \\<lceil>Q\\<rceil>) = (\\<forall>s. P s = Q s)\"\n  \"(\\<lceil>P\\<rceil> \\<cdot> \\<lceil>Q\\<rceil>) = \\<lceil>\\<lambda>s. P s \\<and> Q s\\<rceil>\"\n  \"(\\<lceil>P\\<rceil> + \\<lceil>Q\\<rceil>) = \\<lceil>\\<lambda>s. P s \\<or> Q s\\<rceil>\"\n  \"\\<tt>\\<tt> \\<lceil>P\\<rceil> = \\<lceil>P\\<rceil>\"\n  \"n \\<lceil>P\\<rceil> = \\<lceil>\\<lambda>s. \\<not> P s\\<rceil>\"", "lemma ndfun_kat_H: \"\\<^bold>{P\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<forall>s s'. P s \\<longrightarrow> s' \\<in> (X\\<^sub>\\<bullet>) s \\<longrightarrow> Q s')\"", "lemma sH_skip[simp]: \"\\<^bold>{P\\<^bold>} skip \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>Q\\<rceil>\"", "lemma H_skip: \"\\<^bold>{P\\<^bold>} skip \\<^bold>{P\\<^bold>}\"", "lemma sH_test[simp]: \"\\<^bold>{P\\<^bold>} \\<lceil>R\\<rceil> \\<^bold>{Q\\<^bold>} = (\\<forall>s. P s \\<longrightarrow> R s \\<longrightarrow> Q s)\"", "lemma sH_abort[simp]: \"\\<^bold>{P\\<^bold>} abort \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> True\"", "lemma H_abort: \"\\<^bold>{P\\<^bold>} abort \\<^bold>{Q\\<^bold>}\"", "lemma sH_assign[simp]: \"\\<^bold>{P\\<^bold>} (x ::= e) \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<forall>s. P s \\<longrightarrow> Q (\\<chi> j. ((($) s)(x := (e s))) j))\"", "lemma H_assign: \"P = (\\<lambda>s. Q (\\<chi> j. ((($) s)(x := (e s))) j)) \\<Longrightarrow> \\<^bold>{P\\<^bold>} (x ::= e) \\<^bold>{Q\\<^bold>}\"", "lemma sH_nondet_assign[simp]: \n  \"\\<^bold>{P\\<^bold>} (x ::= ?) \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<forall>s. P s \\<longrightarrow> (\\<forall>k. Q (\\<chi> j. ((($) s)(x := k)) j)))\"", "lemma H_nondet_assign: \"\\<^bold>{\\<lambda>s. \\<forall>k. P (\\<chi> j. ((($) s)(x := k)) j)\\<^bold>} (x ::= ?) \\<^bold>{P\\<^bold>}\"", "lemma H_seq: \"\\<^bold>{P\\<^bold>} X \\<^bold>{R\\<^bold>} \\<Longrightarrow> \\<^bold>{R\\<^bold>} Y \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} X;Y \\<^bold>{Q\\<^bold>}\"", "lemma sH_seq: \"\\<^bold>{P\\<^bold>} X;Y \\<^bold>{Q\\<^bold>} = \\<^bold>{P\\<^bold>} X \\<^bold>{\\<lambda>s. \\<forall>s'. s' \\<in> (Y\\<^sub>\\<bullet>) s \\<longrightarrow> Q s'\\<^bold>}\"", "lemma H_assignl: \n  assumes \"\\<^bold>{K\\<^bold>} X \\<^bold>{Q\\<^bold>}\" \n    and \"\\<forall>s. P s \\<longrightarrow> K (vec_lambda ((($) s)(x := e s)))\"\n  shows \"\\<^bold>{P\\<^bold>} (x ::= e);X \\<^bold>{Q\\<^bold>}\"", "lemma sH_choice: \"\\<^bold>{P\\<^bold>} X + Y \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<^bold>{P\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<and> \\<^bold>{P\\<^bold>} Y \\<^bold>{Q\\<^bold>})\"", "lemma H_choice: \"\\<^bold>{P\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} Y \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} X + Y \\<^bold>{Q\\<^bold>}\"", "lemma sH_cond[simp]: \n  \"\\<^bold>{P\\<^bold>} (IF B THEN X ELSE Y) \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<^bold>{\\<lambda>s. P s \\<and> B s\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<and> \\<^bold>{\\<lambda>s. P s \\<and> \\<not> B s\\<^bold>} Y \\<^bold>{Q\\<^bold>})\"", "lemma H_cond: \n  \"\\<^bold>{\\<lambda>s. P s \\<and> B s\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{\\<lambda>s. P s \\<and> \\<not> B s\\<^bold>} Y \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} (IF B THEN X ELSE Y) \\<^bold>{Q\\<^bold>}\"", "lemma sH_whileI: \"\\<forall>s. P s \\<longrightarrow> I s \\<Longrightarrow> \\<forall>s. I s \\<and> \\<not> B s \\<longrightarrow> Q s \\<Longrightarrow> \\<^bold>{\\<lambda>s. I s \\<and> B s\\<^bold>} X \\<^bold>{I\\<^bold>} \n  \\<Longrightarrow> \\<^bold>{P\\<^bold>} (WHILE B INV I DO X) \\<^bold>{Q\\<^bold>}\"", "lemma \"\\<^bold>{\\<lambda>s. P s \\<and> B s\\<^bold>} X \\<^bold>{\\<lambda>s. P s\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} (WHILE B INV I DO X) \\<^bold>{\\<lambda>s. P s \\<and> \\<not> B s\\<^bold>}\"", "lemma H_loop: \"\\<^bold>{P\\<^bold>} X \\<^bold>{P\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} (LOOP X INV I) \\<^bold>{P\\<^bold>}\"", "lemma H_loopI: \"\\<^bold>{I\\<^bold>} X \\<^bold>{I\\<^bold>} \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> \\<^bold>{P\\<^bold>} (LOOP X INV I) \\<^bold>{Q\\<^bold>}\"", "lemma sH_g_evol[simp]:  \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"\\<^bold>{P\\<^bold>} (EVOL \\<phi> G U) \\<^bold>{Q\\<^bold>} = (\\<forall>s. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\"", "lemma H_g_evol: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  assumes \"P = (\\<lambda>s. (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\"\n  shows \"\\<^bold>{P\\<^bold>} (EVOL \\<phi> G U) \\<^bold>{Q\\<^bold>}\"", "lemma H_g_orbital: \n  \"P = (\\<lambda>s. (\\<forall>X\\<in>ivp_sols f U S t\\<^sub>0 s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (X \\<tau>)) \\<longrightarrow> Q (X t))) \\<Longrightarrow> \n  \\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\"", "lemma sH_g_orbital: \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>} = \n  (\\<forall>s. P s \\<longrightarrow> (\\<forall>X\\<in>ivp_sols f U S t\\<^sub>0 s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (X \\<tau>)) \\<longrightarrow> Q (X t)))\"", "lemma sH_g_ode_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<^bold>{Q\\<^bold>} = \n  (\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\"", "lemma H_g_ode_subset:\n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n    and \"P = (\\<lambda>s. s \\<in> S \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\" \n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<^bold>{Q\\<^bold>}\"", "lemma sH_g_ode: \"\\<^bold>{P\\<^bold>} (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) \\<^bold>{Q\\<^bold>} = \n  (\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\"", "lemma sH_g_ode_ivl: \"t \\<ge> 0 \\<Longrightarrow> t \\<in> T \\<Longrightarrow> \\<^bold>{P\\<^bold>} (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. {0..t}) S @ 0) \\<^bold>{Q\\<^bold>} = \n  (\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>{0..t}. (\\<forall>\\<tau>\\<in>{0..t}. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\"", "lemma sH_orbit: \"\\<^bold>{P\\<^bold>} \\<gamma>\\<^sup>\\<phi>\\<^sup>\\<bullet> \\<^bold>{Q\\<^bold>}  = (\\<forall>s \\<in> S. P s \\<longrightarrow> (\\<forall> t \\<in> T. Q (\\<phi> t s)))\"", "lemma sH_g_orbital_guard: \n  assumes \"R = (\\<lambda>s. G s \\<and> Q s)\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>} = \\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{R\\<^bold>}\"", "lemma sH_g_orbital_inv:\n  assumes \"\\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>\" and \"\\<^bold>{I\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{I\\<^bold>}\" and \"\\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\"\n  shows \" \\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\"", "lemma sH_diff_inv[simp]: \"\\<^bold>{I\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{I\\<^bold>} = diff_invariant I f U S t\\<^sub>0 G\"", "lemma H_g_ode_inv: \"\\<^bold>{I\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{I\\<^bold>} \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow> \n  \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> \\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0 DINV I) \\<^bold>{Q\\<^bold>}\"", "lemma R_skip: \"(\\<forall>s. P s \\<longrightarrow> Q s) \\<Longrightarrow> 1 \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_abort: \"abort \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_seq: \"(Ref \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>) ; (Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_seq_law: \"X \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>R\\<rceil> \\<Longrightarrow> Y \\<le> Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> X; Y \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemmas R_seq_mono = mult_isol_var\n\n\\<comment> \\<open> Nondeterministic Choice \\<close>", "lemma R_choice: \"(Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>) + (Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_choice_law: \"X \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> Y \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> X + Y \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_choice_mono: \"P' \\<le> P \\<Longrightarrow> Q' \\<le> Q \\<Longrightarrow> P' + Q' \\<subseteq> P + Q\"", "lemma R_assign: \"(x ::= e) \\<le> Ref \\<lceil>\\<lambda>s. P (\\<chi> j. ((($) s)(x := e s)) j)\\<rceil> \\<lceil>P\\<rceil>\"", "lemma R_assign_law: \n  \"(\\<forall>s. P s \\<longrightarrow> Q (\\<chi> j. ((($) s)(x := (e s))) j)) \\<Longrightarrow> (x ::= e) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_assignl: \n  \"P = (\\<lambda>s. R (\\<chi> j. ((($) s)(x := e s)) j)) \\<Longrightarrow> (x ::= e) ; Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_assignr: \n  \"R = (\\<lambda>s. Q (\\<chi> j. ((($) s)(x := e s)) j)) \\<Longrightarrow> Ref \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>; (x ::= e) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma \"(x ::= e) ; Ref \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil> \\<le> Ref \\<lceil>(\\<lambda>s. Q (\\<chi> j. ((($) s)(x := e s)) j))\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma \"Ref \\<lceil>Q\\<rceil> \\<lceil>(\\<lambda>s. Q (\\<chi> j. ((($) s)(x := e s)) j))\\<rceil>; (x ::= e) \\<le> Ref \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_nondet_assign: \"(x ::= ?) \\<le> Ref \\<lceil>\\<lambda>s. \\<forall>k. P (\\<chi> j. ((($) s)(x := k)) j)\\<rceil> \\<lceil>P\\<rceil>\"", "lemma R_nondet_assign_law: \n  \"(\\<forall>s. P s \\<longrightarrow> (\\<forall>k. Q (\\<chi> j. ((($) s)(x := k)) j))) \\<Longrightarrow> (x ::= ?) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_cond: \n  \"(IF B THEN Ref \\<lceil>\\<lambda>s. B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil> ELSE Ref \\<lceil>\\<lambda>s. \\<not> B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil>) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_cond_mono: \"X \\<le> X' \\<Longrightarrow> Y \\<le> Y' \\<Longrightarrow> (IF P THEN X ELSE Y) \\<le> IF P THEN X' ELSE Y'\"", "lemma R_cond_law: \"X \\<le> Ref \\<lceil>\\<lambda>s. B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> Y \\<le> Ref \\<lceil>\\<lambda>s. \\<not> B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> \n  (IF B THEN X ELSE Y) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_while: \"K = (\\<lambda>s. P s \\<and> \\<not> B s) \\<Longrightarrow>\n  WHILE B INV I DO (Ref \\<lceil>\\<lambda>s. P s \\<and> B s\\<rceil> \\<lceil>P\\<rceil>) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>K\\<rceil>\"", "lemma R_whileI:\n  \"X \\<le> Ref \\<lceil>I\\<rceil> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>\\<lambda>s. I s \\<and> B s\\<rceil> \\<Longrightarrow> \\<lceil>\\<lambda>s. I s \\<and> \\<not> B s\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> \n  WHILE B INV I DO X \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_while_mono: \"X \\<le> X' \\<Longrightarrow> (WHILE P INV I DO X) \\<le> WHILE P INV I DO X'\"", "lemma R_while_law: \"X \\<le> Ref \\<lceil>\\<lambda>s. P s \\<and> B s\\<rceil> \\<lceil>P\\<rceil> \\<Longrightarrow> Q = (\\<lambda>s. P s \\<and> \\<not> B s) \\<Longrightarrow> \n  (WHILE B INV I DO X) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_loop: \"X \\<le> Ref \\<lceil>I\\<rceil> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> LOOP X INV I \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_loopI: \"X \\<le> Ref \\<lceil>I\\<rceil> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> LOOP X INV I \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_loop_mono: \"X \\<le> X' \\<Longrightarrow> LOOP X INV I \\<le> LOOP X' INV I\"", "lemma R_g_evol: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"(EVOL \\<phi> G U) \\<le> Ref \\<lceil>\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> P (\\<phi> t s)\\<rceil> \\<lceil>P\\<rceil>\"", "lemma R_g_evol_law: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"(\\<forall>s. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))) \\<Longrightarrow> \n  (EVOL \\<phi> G U) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_evoll: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"P = (\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> R (\\<phi> t s)) \\<Longrightarrow> \n  (EVOL \\<phi> G U) ; Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_evolr: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"R = (\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)) \\<Longrightarrow> \n  Ref \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>; (EVOL \\<phi> G U) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"EVOL \\<phi> G U ; Ref \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil> \\<le> \n  Ref \\<lceil>\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"Ref \\<lceil>Q\\<rceil> \\<lceil>\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)\\<rceil>; EVOL \\<phi> G U \\<le> Ref \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_ode_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n  shows \"(x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<le> \n  Ref \\<lceil>\\<lambda>s. s\\<in>S \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> P (\\<phi> t s))\\<rceil> \\<lceil>P\\<rceil>\"", "lemma R_g_ode_rule_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n  shows \"(\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))) \\<Longrightarrow> \n  (x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_odel_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n    and \"P = (\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> R (\\<phi> t s))\"\n  shows \"(x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) ; Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_oder_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n    and \"R = (\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))\"\n  shows \"Ref \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>; (x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_ode: \"(x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) \\<le> \n  Ref \\<lceil>\\<lambda>s. s\\<in>S \\<longrightarrow> (\\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> P (\\<phi> t s))\\<rceil> \\<lceil>P\\<rceil>\"", "lemma R_g_ode_law: \"(\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))) \\<Longrightarrow> \n  (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_odel: \"P = (\\<lambda>s. \\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> R (\\<phi> t s)) \\<Longrightarrow> \n  (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) ; Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_oder: \"R = (\\<lambda>s. \\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)) \\<Longrightarrow> \n  Ref \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>; (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_ode_ivl: \n  \"t \\<ge> 0 \\<Longrightarrow> t \\<in> T \\<Longrightarrow> (\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>{0..t}. (\\<forall>\\<tau>\\<in>{0..t}. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))) \\<Longrightarrow> \n  (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. {0..t}) S @ 0) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma R_g_ode_inv: \"diff_invariant I f T S t\\<^sub>0 G \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> \n  (x\\<acute>=f & G on T S @ t\\<^sub>0 DINV I) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\"", "lemma diff_solve_rule1:\n  assumes \"local_flow f UNIV UNIV \\<phi>\"\n    and \"\\<forall>s. P s \\<longrightarrow> (\\<forall>t\\<ge>0. (\\<forall>\\<tau>\\<in>{0..t}. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G) \\<^bold>{Q\\<^bold>}\"", "lemma diff_solve_rule2: \n  fixes c::\"'a::{heine_borel, banach}\"\n  assumes \"\\<forall>s. P s \\<longrightarrow> (\\<forall>t\\<ge>0. (\\<forall>\\<tau>\\<in>{0..t}. G (s + \\<tau> *\\<^sub>R c)) \\<longrightarrow> Q (s + t *\\<^sub>R c))\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>=(\\<lambda>s. c) & G) \\<^bold>{Q\\<^bold>}\"", "lemma diff_weak_rule: \n  assumes \"\\<lceil>G\\<rceil> \\<le> \\<lceil>Q\\<rceil>\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\"", "lemma diff_cut_rule:\n  assumes wp_C:\"Hoare \\<lceil>P\\<rceil> (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<lceil>C\\<rceil>\"\n    and wp_Q:\"Hoare \\<lceil>P\\<rceil> (x\\<acute>= f & (\\<lambda> s. G s \\<and> C s) on U S @ t\\<^sub>0) \\<lceil>Q\\<rceil>\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\"", "lemma diff_inv_rule:\n  assumes \"\\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>\" and \"diff_invariant I f U S t\\<^sub>0 G\" and \"\\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\""], "translations": [["", "lemma nd_fun_n_op_one[nd_fun_ka]: \"n (n (1::'a nd_fun)) = 1\"\n  and nd_fun_n_op_mult[nd_fun_ka]: \"n (n (n x \\<cdot> n y)) = n x \\<cdot> n y\"\n  and nd_fun_n_op_mult_comp[nd_fun_ka]: \"n x \\<cdot> n (n x) = 0\" \n  and nd_fun_n_op_de_morgan[nd_fun_ka]: \"n (n (n x) \\<cdot> n (n y)) = n x + n y\" for x::\"'a nd_fun\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (!(!1) = 1 &&& !(!(!x \\<cdot> !y)) = !x \\<cdot> !y) &&&\n    !x \\<cdot> !(!x) = 0 &&& !(!(!x) \\<cdot> !(!y)) = !x + !y", "unfolding n_op_nd_fun_def one_nd_fun_def times_nd_fun_def plus_nd_fun_def zero_nd_fun_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         if (((\\<lambda>x.\n                  if (id (\\<eta>\\<^sup>\\<bullet>)\\<^sub>\\<bullet>) x = {}\n                  then \\<eta> x else {})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n             x =\n            {}\n         then \\<eta> x else {})\\<^sup>\\<bullet> =\n     id (\\<eta>\\<^sup>\\<bullet>) &&&\n     (\\<lambda>xa.\n         if (((\\<lambda>xa.\n                  if (id (\\<lambda>f g.\n                             (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n                              g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n                       ((\\<lambda>xa.\n                            if (x\\<^sub>\\<bullet>) xa = {} then \\<eta> xa\n                            else {})\\<^sup>\\<bullet>)\n                       ((\\<lambda>x.\n                            if (y\\<^sub>\\<bullet>) x = {} then \\<eta> x\n                            else {})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n                      xa =\n                     {}\n                  then \\<eta> xa else {})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n             xa =\n            {}\n         then \\<eta> xa else {})\\<^sup>\\<bullet> =\n     id (\\<lambda>f g.\n            (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n             g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n      ((\\<lambda>xa.\n           if (x\\<^sub>\\<bullet>) xa = {} then \\<eta> xa\n           else {})\\<^sup>\\<bullet>)\n      ((\\<lambda>x.\n           if (y\\<^sub>\\<bullet>) x = {} then \\<eta> x\n           else {})\\<^sup>\\<bullet>)) &&&\n    id (\\<lambda>f g.\n           (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n            g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n     ((\\<lambda>xa.\n          if (x\\<^sub>\\<bullet>) xa = {} then \\<eta> xa\n          else {})\\<^sup>\\<bullet>)\n     ((\\<lambda>xa.\n          if (((\\<lambda>xa.\n                   if (x\\<^sub>\\<bullet>) xa = {} then \\<eta> xa\n                   else {})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n              xa =\n             {}\n          then \\<eta> xa else {})\\<^sup>\\<bullet>) =\n    \\<zeta>\\<^sup>\\<bullet> &&&\n    (\\<lambda>xa.\n        if (id (\\<lambda>f g.\n                   (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n                    g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n             ((\\<lambda>xa.\n                  if (((\\<lambda>xa.\n                           if (x\\<^sub>\\<bullet>) xa = {} then \\<eta> xa\n                           else {})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n                      xa =\n                     {}\n                  then \\<eta> xa else {})\\<^sup>\\<bullet>)\n             ((\\<lambda>x.\n                  if (((\\<lambda>x.\n                           if (y\\<^sub>\\<bullet>) x = {} then \\<eta> x\n                           else {})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n                      x =\n                     {}\n                  then \\<eta> x else {})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n            xa =\n           {}\n        then \\<eta> xa else {})\\<^sup>\\<bullet> =\n    (((\\<lambda>xa.\n          if (x\\<^sub>\\<bullet>) xa = {} then \\<eta> xa\n          else {})\\<^sup>\\<bullet>)\\<^sub>\\<bullet> \\<squnion>\n     ((\\<lambda>x.\n          if (y\\<^sub>\\<bullet>) x = {} then \\<eta> x\n          else {})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\\<^sup>\\<bullet>", "by (auto simp: nd_fun_eq_iff kcomp_def)"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a nd_fun, kat_class)", "by (intro_classes, auto simp: nd_fun_ka)"], ["", "end"], ["", "instantiation nd_fun :: (type) rkat\nbegin"], ["", "definition \"Ref_nd_fun P Q \\<equiv> (\\<lambda>s. \\<Union>{(f\\<^sub>\\<bullet>) s|f. Hoare P f Q})\\<^sup>\\<bullet>\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a nd_fun, rkat_class)", "apply(intro_classes)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x p q. (x \\<le> Ref p q) = H p x q", "by (unfold Hoare_def n_op_nd_fun_def Ref_nd_fun_def times_nd_fun_def)\n    (auto simp: kcomp_def le_fun_def less_eq_nd_fun_def)"], ["", "end"], ["", "subsubsection \\<open> Regular programs\\<close>"], ["", "text \\<open> Lemmas for manipulation of predicates in the relational model \\<close>"], ["", "type_synonym 'a pred = \"'a \\<Rightarrow> bool\""], ["", "no_notation Archimedean_Field.ceiling (\"\\<lceil>_\\<rceil>\")\n        and Archimedean_Field.floor_ceiling_class.floor (\"\\<lfloor>_\\<rfloor>\")\n        and tau (\"\\<tau>\")\n        and Relation.relcomp (infixl \";\" 75)\n        and proto_near_quantale_class.bres (infixr \"\\<rightarrow>\" 60)"], ["", "definition p2ndf :: \"'a pred \\<Rightarrow> 'a nd_fun\" (\"(1\\<lceil>_\\<rceil>)\")\n  where \"\\<lceil>Q\\<rceil> \\<equiv> (\\<lambda> x::'a. {s::'a. s = x \\<and> Q s})\\<^sup>\\<bullet>\""], ["", "lemma p2ndf_simps[simp]: \n  \"\\<lceil>P\\<rceil> \\<le> \\<lceil>Q\\<rceil> = (\\<forall>s. P s \\<longrightarrow> Q s)\"\n  \"(\\<lceil>P\\<rceil> = \\<lceil>Q\\<rceil>) = (\\<forall>s. P s = Q s)\"\n  \"(\\<lceil>P\\<rceil> \\<cdot> \\<lceil>Q\\<rceil>) = \\<lceil>\\<lambda>s. P s \\<and> Q s\\<rceil>\"\n  \"(\\<lceil>P\\<rceil> + \\<lceil>Q\\<rceil>) = \\<lceil>\\<lambda>s. P s \\<or> Q s\\<rceil>\"\n  \"\\<tt>\\<tt> \\<lceil>P\\<rceil> = \\<lceil>P\\<rceil>\"\n  \"n \\<lceil>P\\<rceil> = \\<lceil>\\<lambda>s. \\<not> P s\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lceil>P\\<rceil> \\<le> \\<lceil>Q\\<rceil>) =\n     (\\<forall>s. P s \\<longrightarrow> Q s) &&&\n     (\\<lceil>P\\<rceil> = \\<lceil>Q\\<rceil>) = (\\<forall>s. P s = Q s) &&&\n     \\<lceil>P\\<rceil> \\<cdot> \\<lceil>Q\\<rceil> =\n     \\<lceil>\\<lambda>s. P s \\<and> Q s\\<rceil>) &&&\n    \\<lceil>P\\<rceil> + \\<lceil>Q\\<rceil> =\n    \\<lceil>\\<lambda>s. P s \\<or> Q s\\<rceil> &&&\n    \\<tt>\\<tt> \\<lceil>P\\<rceil> = \\<lceil>P\\<rceil> &&&\n    !\\<lceil>P\\<rceil> = \\<lceil>\\<lambda>s. \\<not> P s\\<rceil>", "unfolding p2ndf_def one_nd_fun_def less_eq_nd_fun_def times_nd_fun_def plus_nd_fun_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (id (\\<lambda>f g. f\\<^sub>\\<bullet> \\<le> g\\<^sub>\\<bullet>)\n      ((\\<lambda>x. {s. s = x \\<and> P s})\\<^sup>\\<bullet>)\n      ((\\<lambda>x. {s. s = x \\<and> Q s})\\<^sup>\\<bullet>) =\n     (\\<forall>s. P s \\<longrightarrow> Q s) &&&\n     ((\\<lambda>x. {s. s = x \\<and> P s})\\<^sup>\\<bullet> =\n      (\\<lambda>x. {s. s = x \\<and> Q s})\\<^sup>\\<bullet>) =\n     (\\<forall>s. P s = Q s) &&&\n     id (\\<lambda>f g.\n            (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n             g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n      ((\\<lambda>x. {s. s = x \\<and> P s})\\<^sup>\\<bullet>)\n      ((\\<lambda>x. {s. s = x \\<and> Q s})\\<^sup>\\<bullet>) =\n     (\\<lambda>x. {s. s = x \\<and> P s \\<and> Q s})\\<^sup>\\<bullet>) &&&\n    (((\\<lambda>x.\n          {s. s = x \\<and> P s})\\<^sup>\\<bullet>)\\<^sub>\\<bullet> \\<squnion>\n     ((\\<lambda>x.\n          {s. s = x \\<and>\n              Q s})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\\<^sup>\\<bullet> =\n    (\\<lambda>x. {s. s = x \\<and> (P s \\<or> Q s)})\\<^sup>\\<bullet> &&&\n    \\<tt>\\<tt> ((\\<lambda>x. {s. s = x \\<and> P s})\\<^sup>\\<bullet>) =\n    (\\<lambda>x. {s. s = x \\<and> P s})\\<^sup>\\<bullet> &&&\n    !((\\<lambda>x. {s. s = x \\<and> P s})\\<^sup>\\<bullet>) =\n    (\\<lambda>x. {s. s = x \\<and> \\<not> P s})\\<^sup>\\<bullet>", "by (auto simp: nd_fun_eq_iff kcomp_def le_fun_def n_op_nd_fun_def)"], ["", "text \\<open> Lemmas for verification condition generation \\<close>\n\n\\<comment> \\<open> Hoare Triples \\<close>"], ["", "abbreviation ndfunHoare (\"\\<^bold>{_\\<^bold>}_\\<^bold>{_\\<^bold>}\") \n  where \"\\<^bold>{P\\<^bold>}X\\<^bold>{Q\\<^bold>} \\<equiv> Hoare \\<lceil>P\\<rceil> X \\<lceil>Q\\<rceil>\""], ["", "lemma ndfun_kat_H: \"\\<^bold>{P\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<forall>s s'. P s \\<longrightarrow> s' \\<in> (X\\<^sub>\\<bullet>) s \\<longrightarrow> Q s')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}X\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s s'.\n        P s \\<longrightarrow>\n        s2p ((X\\<^sub>\\<bullet>) s) s' \\<longrightarrow> Q s')", "unfolding Hoare_def p2ndf_def less_eq_nd_fun_def times_nd_fun_def kcomp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. id (\\<lambda>f g. f\\<^sub>\\<bullet> \\<le> g\\<^sub>\\<bullet>)\n     (id (\\<lambda>f g.\n             (\\<mu> \\<circ> \\<P> (g\\<^sub>\\<bullet>) \\<circ>\n              f\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n       (\\<tt>\\<tt> ((\\<lambda>x. {s. s = x \\<and> P s})\\<^sup>\\<bullet>)) X)\n     (id (\\<lambda>f g.\n             (\\<mu> \\<circ> \\<P> (g\\<^sub>\\<bullet>) \\<circ>\n              f\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n       X (\\<tt>\\<tt>\n           ((\\<lambda>x. {s. s = x \\<and> Q s})\\<^sup>\\<bullet>))) =\n    (\\<forall>s s'.\n        P s \\<longrightarrow>\n        s2p ((X\\<^sub>\\<bullet>) s) s' \\<longrightarrow> Q s')", "by (auto simp add: le_fun_def n_op_nd_fun_def)\n\n\\<comment> \\<open> Skip \\<close>"], ["", "abbreviation \"skip \\<equiv> (1::'a nd_fun)\""], ["", "lemma sH_skip[simp]: \"\\<^bold>{P\\<^bold>} skip \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}skip\\<^bold>{Q\\<^bold>} =\n    (\\<lceil>P\\<rceil> \\<le> \\<lceil>Q\\<rceil>)", "unfolding ndfun_kat_H"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow>\n        s2p ((skip\\<^sub>\\<bullet>) s) s' \\<longrightarrow> Q s') =\n    (\\<lceil>P\\<rceil> \\<le> \\<lceil>Q\\<rceil>)", "by (simp add: one_nd_fun_def)"], ["", "lemma H_skip: \"\\<^bold>{P\\<^bold>} skip \\<^bold>{P\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}skip\\<^bold>{P\\<^bold>}", "by simp\n\n\\<comment> \\<open> Tests \\<close>"], ["", "lemma sH_test[simp]: \"\\<^bold>{P\\<^bold>} \\<lceil>R\\<rceil> \\<^bold>{Q\\<^bold>} = (\\<forall>s. P s \\<longrightarrow> R s \\<longrightarrow> Q s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}\\<lceil>R\\<rceil>\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s. P s \\<longrightarrow> R s \\<longrightarrow> Q s)", "by (subst ndfun_kat_H, simp add: p2ndf_def)\n\n\\<comment> \\<open> Abort \\<close>"], ["", "abbreviation \"abort \\<equiv> (0::'a nd_fun)\""], ["", "lemma sH_abort[simp]: \"\\<^bold>{P\\<^bold>} abort \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}abort\\<^bold>{Q\\<^bold>} = True", "unfolding ndfun_kat_H"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow>\n        s2p ((abort\\<^sub>\\<bullet>) s) s' \\<longrightarrow> Q s') =\n    True", "by (simp add: zero_nd_fun_def)"], ["", "lemma H_abort: \"\\<^bold>{P\\<^bold>} abort \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}abort\\<^bold>{Q\\<^bold>}", "by simp\n\n\\<comment> \\<open> Assignments \\<close>"], ["", "definition assign :: \"'b \\<Rightarrow> ('a^'b \\<Rightarrow> 'a) \\<Rightarrow> ('a^'b) nd_fun\" (\"(2_ ::= _)\" [70, 65] 61) \n  where \"(x ::= e) = (\\<lambda>s. {vec_upd s x (e s)})\\<^sup>\\<bullet>\""], ["", "lemma sH_assign[simp]: \"\\<^bold>{P\\<^bold>} (x ::= e) \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<forall>s. P s \\<longrightarrow> Q (\\<chi> j. ((($) s)(x := (e s))) j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x ::= e\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s. P s \\<longrightarrow> Q (\\<chi>j. ((($) s)(x := e s)) j))", "unfolding ndfun_kat_H vec_upd_def assign_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow>\n        s2p ((((\\<lambda>s.\n                   \\<eta>\n                    (vec_lambda\n                      ((($) s)\n                       (x := e s))))\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n              s)\n         s' \\<longrightarrow>\n        Q s') =\n    (\\<forall>s. P s \\<longrightarrow> Q (\\<chi>j. ((($) s)(x := e s)) j))", "by (auto simp: fun_upd_def)"], ["", "lemma H_assign: \"P = (\\<lambda>s. Q (\\<chi> j. ((($) s)(x := (e s))) j)) \\<Longrightarrow> \\<^bold>{P\\<^bold>} (x ::= e) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P = (\\<lambda>s. Q (\\<chi>j. ((($) s)(x := e s)) j)) \\<Longrightarrow>\n    \\<^bold>{P\\<^bold>}x ::= e\\<^bold>{Q\\<^bold>}", "by simp\n\n\\<comment> \\<open> Nondeterministic assignments \\<close>"], ["", "definition nondet_assign :: \"'b \\<Rightarrow> ('a^'b) nd_fun\" (\"(2_ ::= ? )\" [70] 61)\n    where \"(x ::= ?) = (\\<lambda>s. {vec_upd s x k|k. True})\\<^sup>\\<bullet>\""], ["", "lemma sH_nondet_assign[simp]: \n  \"\\<^bold>{P\\<^bold>} (x ::= ?) \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<forall>s. P s \\<longrightarrow> (\\<forall>k. Q (\\<chi> j. ((($) s)(x := k)) j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x ::= ? \\<^bold>{Q\\<^bold>} =\n    (\\<forall>s.\n        P s \\<longrightarrow>\n        (\\<forall>k. Q (\\<chi>j. ((($) s)(x := k)) j)))", "unfolding ndfun_kat_H vec_upd_def nondet_assign_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow>\n        s2p ((((\\<lambda>s.\n                   {vec_lambda ((($) s)(x := k)) |k.\n                    True})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n              s)\n         s' \\<longrightarrow>\n        Q s') =\n    (\\<forall>s.\n        P s \\<longrightarrow>\n        (\\<forall>k. Q (\\<chi>j. ((($) s)(x := k)) j)))", "by (auto simp: fun_upd_def)"], ["", "lemma H_nondet_assign: \"\\<^bold>{\\<lambda>s. \\<forall>k. P (\\<chi> j. ((($) s)(x := k)) j)\\<^bold>} (x ::= ?) \\<^bold>{P\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{\\<lambda>s.\n                \\<forall>k.\n                   P (\\<chi>j.\n                         ((($) s)(x := k))\n                          j)\\<^bold>}x ::= ? \\<^bold>{P\\<^bold>}", "by simp\n\n\\<comment> \\<open> Sequential Composition \\<close>"], ["", "abbreviation seq_seq :: \"'a nd_fun \\<Rightarrow> 'a nd_fun \\<Rightarrow> 'a nd_fun\" (infixl \";\" 75)\n  where \"f ; g \\<equiv> f \\<cdot> g\""], ["", "lemma H_seq: \"\\<^bold>{P\\<^bold>} X \\<^bold>{R\\<^bold>} \\<Longrightarrow> \\<^bold>{R\\<^bold>} Y \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} X;Y \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{P\\<^bold>}X\\<^bold>{R\\<^bold>};\n     \\<^bold>{R\\<^bold>}Y\\<^bold>{Q\\<^bold>}\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}X ; Y\\<^bold>{Q\\<^bold>}", "by (auto intro: H_seq)"], ["", "lemma sH_seq: \"\\<^bold>{P\\<^bold>} X;Y \\<^bold>{Q\\<^bold>} = \\<^bold>{P\\<^bold>} X \\<^bold>{\\<lambda>s. \\<forall>s'. s' \\<in> (Y\\<^sub>\\<bullet>) s \\<longrightarrow> Q s'\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}X ; Y\\<^bold>{Q\\<^bold>} =\n    \\<^bold>{P\\<^bold>}X\\<^bold>{\\<lambda>s.\n                                    \\<forall>s'.\n s2p ((Y\\<^sub>\\<bullet>) s) s' \\<longrightarrow> Q s'\\<^bold>}", "unfolding ndfun_kat_H"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow>\n        s2p (((X ; Y)\\<^sub>\\<bullet>) s) s' \\<longrightarrow> Q s') =\n    (\\<forall>s s'.\n        P s \\<longrightarrow>\n        s2p ((X\\<^sub>\\<bullet>) s) s' \\<longrightarrow>\n        (\\<forall>s'a.\n            s2p ((Y\\<^sub>\\<bullet>) s') s'a \\<longrightarrow> Q s'a))", "by (auto simp: times_nd_fun_def kcomp_def)"], ["", "lemma H_assignl: \n  assumes \"\\<^bold>{K\\<^bold>} X \\<^bold>{Q\\<^bold>}\" \n    and \"\\<forall>s. P s \\<longrightarrow> K (vec_lambda ((($) s)(x := e s)))\"\n  shows \"\\<^bold>{P\\<^bold>} (x ::= e);X \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}(x ::= e) ; X\\<^bold>{Q\\<^bold>}", "apply(rule H_seq, subst sH_assign)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>s. P s \\<longrightarrow> ?R (vec_lambda ((($) s)(x := e s)))\n 2. \\<^bold>{?R\\<^bold>}X\\<^bold>{Q\\<^bold>}", "using assms"], ["proof (prove)\nusing this:\n  \\<^bold>{K\\<^bold>}X\\<^bold>{Q\\<^bold>}\n  \\<forall>s. P s \\<longrightarrow> K (vec_lambda ((($) s)(x := e s)))\n\ngoal (2 subgoals):\n 1. \\<forall>s. P s \\<longrightarrow> ?R (vec_lambda ((($) s)(x := e s)))\n 2. \\<^bold>{?R\\<^bold>}X\\<^bold>{Q\\<^bold>}", "by auto\n\n\\<comment> \\<open> Nondeterministic Choice \\<close>"], ["", "lemma sH_choice: \"\\<^bold>{P\\<^bold>} X + Y \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<^bold>{P\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<and> \\<^bold>{P\\<^bold>} Y \\<^bold>{Q\\<^bold>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}X + Y\\<^bold>{Q\\<^bold>} =\n    (\\<^bold>{P\\<^bold>}X\\<^bold>{Q\\<^bold>} \\<and>\n     \\<^bold>{P\\<^bold>}Y\\<^bold>{Q\\<^bold>})", "unfolding ndfun_kat_H"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow>\n        s2p (((X + Y)\\<^sub>\\<bullet>) s) s' \\<longrightarrow> Q s') =\n    ((\\<forall>s s'.\n         P s \\<longrightarrow>\n         s2p ((X\\<^sub>\\<bullet>) s) s' \\<longrightarrow> Q s') \\<and>\n     (\\<forall>s s'.\n         P s \\<longrightarrow>\n         s2p ((Y\\<^sub>\\<bullet>) s) s' \\<longrightarrow> Q s'))", "by (auto simp: plus_nd_fun_def)"], ["", "lemma H_choice: \"\\<^bold>{P\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} Y \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} X + Y \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{P\\<^bold>}X\\<^bold>{Q\\<^bold>};\n     \\<^bold>{P\\<^bold>}Y\\<^bold>{Q\\<^bold>}\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}X + Y\\<^bold>{Q\\<^bold>}", "using H_choice"], ["proof (prove)\nusing this:\n  \\<lbrakk>H ?p ?x ?q; H ?p ?y ?q\\<rbrakk>\n  \\<Longrightarrow> H ?p (?x + ?y) ?q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{P\\<^bold>}X\\<^bold>{Q\\<^bold>};\n     \\<^bold>{P\\<^bold>}Y\\<^bold>{Q\\<^bold>}\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}X + Y\\<^bold>{Q\\<^bold>}", ".\n\n\\<comment> \\<open> Conditional Statement \\<close>"], ["", "abbreviation cond_sugar :: \"'a pred \\<Rightarrow> 'a nd_fun \\<Rightarrow> 'a nd_fun \\<Rightarrow> 'a nd_fun\" (\"IF _ THEN _ ELSE _\" [64,64] 63) \n  where \"IF B THEN X ELSE Y \\<equiv> kat_cond \\<lceil>B\\<rceil> X Y\""], ["", "lemma sH_cond[simp]: \n  \"\\<^bold>{P\\<^bold>} (IF B THEN X ELSE Y) \\<^bold>{Q\\<^bold>} \\<longleftrightarrow> (\\<^bold>{\\<lambda>s. P s \\<and> B s\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<and> \\<^bold>{\\<lambda>s. P s \\<and> \\<not> B s\\<^bold>} Y \\<^bold>{Q\\<^bold>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}IF B THEN X ELSE Y\\<^bold>{Q\\<^bold>} =\n    (\\<^bold>{\\<lambda>s. P s \\<and> B s\\<^bold>}X\\<^bold>{Q\\<^bold>} \\<and>\n     \\<^bold>{\\<lambda>s.\n                 P s \\<and> \\<not> B s\\<^bold>}Y\\<^bold>{Q\\<^bold>})", "by (auto simp: H_cond_iff ndfun_kat_H)"], ["", "lemma H_cond: \n  \"\\<^bold>{\\<lambda>s. P s \\<and> B s\\<^bold>} X \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{\\<lambda>s. P s \\<and> \\<not> B s\\<^bold>} Y \\<^bold>{Q\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} (IF B THEN X ELSE Y) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{\\<lambda>s.\n                         P s \\<and> B s\\<^bold>}X\\<^bold>{Q\\<^bold>};\n     \\<^bold>{\\<lambda>s.\n                 P s \\<and> \\<not> B s\\<^bold>}Y\\<^bold>{Q\\<^bold>}\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}IF B THEN X ELSE Y\\<^bold>{Q\\<^bold>}", "by simp\n\n\\<comment> \\<open> While Loop \\<close>"], ["", "abbreviation while_inv_sugar :: \"'a pred \\<Rightarrow> 'a pred \\<Rightarrow> 'a nd_fun \\<Rightarrow> 'a nd_fun\" (\"WHILE _ INV _ DO _\" [64,64,64] 63) \n  where \"WHILE B INV I DO X \\<equiv> kat_while_inv \\<lceil>B\\<rceil> \\<lceil>I\\<rceil> X\""], ["", "lemma sH_whileI: \"\\<forall>s. P s \\<longrightarrow> I s \\<Longrightarrow> \\<forall>s. I s \\<and> \\<not> B s \\<longrightarrow> Q s \\<Longrightarrow> \\<^bold>{\\<lambda>s. I s \\<and> B s\\<^bold>} X \\<^bold>{I\\<^bold>} \n  \\<Longrightarrow> \\<^bold>{P\\<^bold>} (WHILE B INV I DO X) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>s. P s \\<longrightarrow> I s;\n     \\<forall>s. I s \\<and> \\<not> B s \\<longrightarrow> Q s;\n     \\<^bold>{\\<lambda>s.\n                 I s \\<and> B s\\<^bold>}X\\<^bold>{I\\<^bold>}\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}WHILE B INV I DO X\\<^bold>{Q\\<^bold>}", "by (rule H_while_inv, simp_all add: ndfun_kat_H)"], ["", "lemma \"\\<^bold>{\\<lambda>s. P s \\<and> B s\\<^bold>} X \\<^bold>{\\<lambda>s. P s\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} (WHILE B INV I DO X) \\<^bold>{\\<lambda>s. P s \\<and> \\<not> B s\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{\\<lambda>s.\n                P s \\<and>\n                B s\\<^bold>}X\\<^bold>{P\\<^bold>} \\<Longrightarrow>\n    \\<^bold>{P\\<^bold>}WHILE B INV I DO X\\<^bold>{\\<lambda>s.\n               P s \\<and> \\<not> B s\\<^bold>}", "using H_while[of \"\\<lceil>P\\<rceil>\" \"\\<lceil>B\\<rceil>\" X]"], ["proof (prove)\nusing this:\n  H (\\<tt>\\<tt> \\<lceil>P\\<rceil> ; \\<tt>\\<tt> \\<lceil>B\\<rceil>) X\n   \\<lceil>P\\<rceil> \\<Longrightarrow>\n  H \\<lceil>P\\<rceil> (while \\<lceil>B\\<rceil> do X)\n   (\\<tt>\\<tt> \\<lceil>P\\<rceil> ; !\\<lceil>B\\<rceil>)\n\ngoal (1 subgoal):\n 1. \\<^bold>{\\<lambda>s.\n                P s \\<and>\n                B s\\<^bold>}X\\<^bold>{P\\<^bold>} \\<Longrightarrow>\n    \\<^bold>{P\\<^bold>}WHILE B INV I DO X\\<^bold>{\\<lambda>s.\n               P s \\<and> \\<not> B s\\<^bold>}", "unfolding kat_while_inv_def"], ["proof (prove)\nusing this:\n  H (\\<tt>\\<tt> \\<lceil>P\\<rceil> ; \\<tt>\\<tt> \\<lceil>B\\<rceil>) X\n   \\<lceil>P\\<rceil> \\<Longrightarrow>\n  H \\<lceil>P\\<rceil> (while \\<lceil>B\\<rceil> do X)\n   (\\<tt>\\<tt> \\<lceil>P\\<rceil> ; !\\<lceil>B\\<rceil>)\n\ngoal (1 subgoal):\n 1. \\<^bold>{\\<lambda>s.\n                P s \\<and>\n                B s\\<^bold>}X\\<^bold>{P\\<^bold>} \\<Longrightarrow>\n    \\<^bold>{P\\<^bold>}while \\<lceil>B\\<rceil> do X\\<^bold>{\\<lambda>s.\n                         P s \\<and> \\<not> B s\\<^bold>}", "by auto\n\n\\<comment> \\<open> Finite Iteration \\<close>"], ["", "abbreviation loopi_sugar :: \"'a nd_fun \\<Rightarrow> 'a pred \\<Rightarrow> 'a nd_fun\" (\"LOOP _ INV _ \" [64,64] 63)\n  where \"LOOP X INV I \\<equiv> kat_loop_inv X \\<lceil>I\\<rceil>\""], ["", "lemma H_loop: \"\\<^bold>{P\\<^bold>} X \\<^bold>{P\\<^bold>} \\<Longrightarrow> \\<^bold>{P\\<^bold>} (LOOP X INV I) \\<^bold>{P\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}X\\<^bold>{P\\<^bold>} \\<Longrightarrow>\n    \\<^bold>{P\\<^bold>}LOOP X INV I \\<^bold>{P\\<^bold>}", "by (auto intro: H_loop)"], ["", "lemma H_loopI: \"\\<^bold>{I\\<^bold>} X \\<^bold>{I\\<^bold>} \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> \\<^bold>{P\\<^bold>} (LOOP X INV I) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}X\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>;\n     \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}LOOP X INV I \\<^bold>{Q\\<^bold>}", "using H_loop_inv[of \"\\<lceil>P\\<rceil>\" \"\\<lceil>I\\<rceil>\" X \"\\<lceil>Q\\<rceil>\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<tt>\\<tt> \\<lceil>P\\<rceil> \\<le> \\<tt>\\<tt> \\<lceil>I\\<rceil>;\n   \\<^bold>{I\\<^bold>}X\\<^bold>{I\\<^bold>};\n   \\<tt>\\<tt> \\<lceil>I\\<rceil> \\<le> \\<tt>\\<tt> \\<lceil>Q\\<rceil>\\<rbrakk>\n  \\<Longrightarrow> \\<^bold>{P\\<^bold>}LOOP X INV I \\<^bold>{Q\\<^bold>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}X\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>;\n     \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}LOOP X INV I \\<^bold>{Q\\<^bold>}", "by auto"], ["", "subsubsection \\<open> Evolution commands \\<close>\n\n\\<comment> \\<open>Verification by providing evolution\\<close>"], ["", "definition g_evol :: \"(('a::ord) \\<Rightarrow> 'b \\<Rightarrow> 'b) \\<Rightarrow> 'b pred \\<Rightarrow> ('b \\<Rightarrow> 'a set) \\<Rightarrow> 'b nd_fun\" (\"EVOL\")\n  where \"EVOL \\<phi> G U = (\\<lambda>s. g_orbit (\\<lambda>t. \\<phi> t s) G (U s))\\<^sup>\\<bullet>\""], ["", "lemma sH_g_evol[simp]:  \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"\\<^bold>{P\\<^bold>} (EVOL \\<phi> G U) \\<^bold>{Q\\<^bold>} = (\\<forall>s. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}EVOL \\<phi> G U\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s.\n        P s \\<longrightarrow>\n        (\\<forall>t\\<in>U s.\n            (\\<forall>\\<tau>\\<in>down (U s) t.\n                G (\\<phi> \\<tau> s)) \\<longrightarrow>\n            Q (\\<phi> t s)))", "unfolding ndfun_kat_H g_evol_def g_orbit_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow>\n        s2p ((((\\<lambda>s.\n                   {\\<phi> t s |t.\n                    s2p (U s) t \\<and>\n                    (\\<forall>\\<tau>\\<in>down (U s) t.\n                        G (\\<phi> \\<tau>\n                            s))})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n              s)\n         s' \\<longrightarrow>\n        Q s') =\n    (\\<forall>s.\n        P s \\<longrightarrow>\n        (\\<forall>t\\<in>U s.\n            (\\<forall>\\<tau>\\<in>down (U s) t.\n                G (\\<phi> \\<tau> s)) \\<longrightarrow>\n            Q (\\<phi> t s)))", "by auto"], ["", "lemma H_g_evol: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  assumes \"P = (\\<lambda>s. (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\"\n  shows \"\\<^bold>{P\\<^bold>} (EVOL \\<phi> G U) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}EVOL \\<phi> G U\\<^bold>{Q\\<^bold>}", "by (simp add: assms)\n\n\\<comment> \\<open>Verification by providing solutions\\<close>"], ["", "definition g_ode ::\"(real \\<Rightarrow> ('a::banach)\\<Rightarrow>'a) \\<Rightarrow> 'a pred \\<Rightarrow> ('a \\<Rightarrow> real set) \\<Rightarrow> 'a set \\<Rightarrow> \n  real \\<Rightarrow> 'a nd_fun\" (\"(1x\\<acute>= _ & _ on _ _ @ _)\") \n  where \"(x\\<acute>= f & G on U S @ t\\<^sub>0) \\<equiv> (\\<lambda> s. g_orbital f G U S t\\<^sub>0 s)\\<^sup>\\<bullet>\""], ["", "lemma H_g_orbital: \n  \"P = (\\<lambda>s. (\\<forall>X\\<in>ivp_sols f U S t\\<^sub>0 s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (X \\<tau>)) \\<longrightarrow> Q (X t))) \\<Longrightarrow> \n  \\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P =\n    (\\<lambda>s.\n        \\<forall>X\\<in>Sols f U S t\\<^sub>0 s.\n           \\<forall>t\\<in>U s.\n              (\\<forall>\\<tau>\\<in>down (U s) t.\n                  G (X \\<tau>)) \\<longrightarrow>\n              Q (X t)) \\<Longrightarrow>\n    \\<^bold>{P\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "unfolding ndfun_kat_H g_ode_def g_orbital_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. P =\n    (\\<lambda>s.\n        \\<forall>X\\<in>Sols f U S t\\<^sub>0 s.\n           \\<forall>t\\<in>U s.\n              (\\<forall>\\<tau>\\<in>down (U s) t.\n                  G (X \\<tau>)) \\<longrightarrow>\n              Q (X t)) \\<Longrightarrow>\n    \\<forall>s s'.\n       P s \\<longrightarrow>\n       s2p ((((\\<lambda>s.\n                  {X t |t X.\n                   s2p (U s) t \\<and>\n                   \\<P> X (down (U s) t) \\<subseteq> Collect G \\<and>\n                   s2p (Sols f U S t\\<^sub>0 s)\n                    X})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n             s)\n        s' \\<longrightarrow>\n       Q s'", "by clarsimp"], ["", "lemma sH_g_orbital: \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>} = \n  (\\<forall>s. P s \\<longrightarrow> (\\<forall>X\\<in>ivp_sols f U S t\\<^sub>0 s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (X \\<tau>)) \\<longrightarrow> Q (X t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s.\n        P s \\<longrightarrow>\n        (\\<forall>X\\<in>Sols f U S t\\<^sub>0 s.\n            \\<forall>t\\<in>U s.\n               (\\<forall>\\<tau>\\<in>down (U s) t.\n                   G (X \\<tau>)) \\<longrightarrow>\n               Q (X t)))", "unfolding g_orbital_eq g_ode_def ndfun_kat_H"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow>\n        s2p ((((\\<lambda>s.\n                   {X t |t X.\n                    s2p (U s) t \\<and>\n                    \\<P> X (down (U s) t) \\<subseteq> Collect G \\<and>\n                    s2p (Sols f U S t\\<^sub>0 s)\n                     X})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n              s)\n         s' \\<longrightarrow>\n        Q s') =\n    (\\<forall>s.\n        P s \\<longrightarrow>\n        (\\<forall>X\\<in>Sols f U S t\\<^sub>0 s.\n            \\<forall>t\\<in>U s.\n               (\\<forall>\\<tau>\\<in>down (U s) t.\n                   G (X \\<tau>)) \\<longrightarrow>\n               Q (X t)))", "by auto"], ["", "context local_flow\nbegin"], ["", "lemma sH_g_ode_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<^bold>{Q\\<^bold>} = \n  (\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>= \\<lambda>t.\n                                     f & G on U S @ 0\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s\\<in>S.\n        P s \\<longrightarrow>\n        (\\<forall>t\\<in>U s.\n            (\\<forall>\\<tau>\\<in>down (U s) t.\n                G (\\<phi> \\<tau> s)) \\<longrightarrow>\n            Q (\\<phi> t s)))", "proof(unfold sH_g_orbital, clarsimp, safe)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>s.\n                   P s \\<longrightarrow>\n                   (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s.\n                       \\<forall>t\\<in>U s.\n                          (\\<forall>\\<tau>.\n                              s2p (U s) \\<tau> \\<and>\n                              \\<tau> \\<le> t \\<longrightarrow>\n                              G (X \\<tau>)) \\<longrightarrow>\n                          Q (X t));\n        s2p S s; P s; s2p (U s) t;\n        \\<forall>\\<tau>.\n           s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (\\<phi> \\<tau> s)\\<rbrakk>\n       \\<Longrightarrow> Q (\\<phi> t s)\n 2. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           s2p (U s) \\<tau> \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; s2p (Sols (\\<lambda>t. f) U S 0 s) X; s2p (U s) t;\n        \\<forall>\\<tau>.\n           s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "fix s t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>s.\n                   P s \\<longrightarrow>\n                   (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s.\n                       \\<forall>t\\<in>U s.\n                          (\\<forall>\\<tau>.\n                              s2p (U s) \\<tau> \\<and>\n                              \\<tau> \\<le> t \\<longrightarrow>\n                              G (X \\<tau>)) \\<longrightarrow>\n                          Q (X t));\n        s2p S s; P s; s2p (U s) t;\n        \\<forall>\\<tau>.\n           s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (\\<phi> \\<tau> s)\\<rbrakk>\n       \\<Longrightarrow> Q (\\<phi> t s)\n 2. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           s2p (U s) \\<tau> \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; s2p (Sols (\\<lambda>t. f) U S 0 s) X; s2p (U s) t;\n        \\<forall>\\<tau>.\n           s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "assume hyps: \"s \\<in> S\" \"P s\" \"t \\<in> U s\" \"\\<forall>\\<tau>. \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow> G (\\<phi> \\<tau> s)\"\n    and main: \"\\<forall>s. P s \\<longrightarrow> (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>. \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow> G (X \\<tau>)) \\<longrightarrow> Q (X t))\""], ["proof (state)\nthis:\n  s2p S s\n  P s\n  s2p (U s) t\n  \\<forall>\\<tau>.\n     s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n     G (\\<phi> \\<tau> s)\n  \\<forall>s.\n     P s \\<longrightarrow>\n     (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s.\n         \\<forall>t\\<in>U s.\n            (\\<forall>\\<tau>.\n                s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n                G (X \\<tau>)) \\<longrightarrow>\n            Q (X t))\n\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>s.\n                   P s \\<longrightarrow>\n                   (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s.\n                       \\<forall>t\\<in>U s.\n                          (\\<forall>\\<tau>.\n                              s2p (U s) \\<tau> \\<and>\n                              \\<tau> \\<le> t \\<longrightarrow>\n                              G (X \\<tau>)) \\<longrightarrow>\n                          Q (X t));\n        s2p S s; P s; s2p (U s) t;\n        \\<forall>\\<tau>.\n           s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (\\<phi> \\<tau> s)\\<rbrakk>\n       \\<Longrightarrow> Q (\\<phi> t s)\n 2. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           s2p (U s) \\<tau> \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; s2p (Sols (\\<lambda>t. f) U S 0 s) X; s2p (U s) t;\n        \\<forall>\\<tau>.\n           s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "hence \"(\\<lambda>t. \\<phi> t s) \\<in> Sols (\\<lambda>t. f) U S 0 s\""], ["proof (prove)\nusing this:\n  s2p S s\n  P s\n  s2p (U s) t\n  \\<forall>\\<tau>.\n     s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n     G (\\<phi> \\<tau> s)\n  \\<forall>s.\n     P s \\<longrightarrow>\n     (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s.\n         \\<forall>t\\<in>U s.\n            (\\<forall>\\<tau>.\n                s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n                G (X \\<tau>)) \\<longrightarrow>\n            Q (X t))\n\ngoal (1 subgoal):\n 1. s2p (Sols (\\<lambda>t. f) U S 0 s) (\\<lambda>t. \\<phi> t s)", "using in_ivp_sols assms"], ["proof (prove)\nusing this:\n  s2p S s\n  P s\n  s2p (U s) t\n  \\<forall>\\<tau>.\n     s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n     G (\\<phi> \\<tau> s)\n  \\<forall>s.\n     P s \\<longrightarrow>\n     (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s.\n         \\<forall>t\\<in>U s.\n            (\\<forall>\\<tau>.\n                s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n                G (X \\<tau>)) \\<longrightarrow>\n            Q (X t))\n  \\<lbrakk>s2p S ?s; s2p (?U ?s) 0; ?U ?s \\<subseteq> T\\<rbrakk>\n  \\<Longrightarrow> s2p (Sols (\\<lambda>t. f) ?U S 0 ?s)\n                     (\\<lambda>t. \\<phi> t ?s)\n  s2p S ?s \\<Longrightarrow>\n  s2p (U ?s) 0 \\<and> is_interval (U ?s) \\<and> U ?s \\<subseteq> T\n\ngoal (1 subgoal):\n 1. s2p (Sols (\\<lambda>t. f) U S 0 s) (\\<lambda>t. \\<phi> t s)", "by blast"], ["proof (state)\nthis:\n  s2p (Sols (\\<lambda>t. f) U S 0 s) (\\<lambda>t. \\<phi> t s)\n\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>s.\n                   P s \\<longrightarrow>\n                   (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s.\n                       \\<forall>t\\<in>U s.\n                          (\\<forall>\\<tau>.\n                              s2p (U s) \\<tau> \\<and>\n                              \\<tau> \\<le> t \\<longrightarrow>\n                              G (X \\<tau>)) \\<longrightarrow>\n                          Q (X t));\n        s2p S s; P s; s2p (U s) t;\n        \\<forall>\\<tau>.\n           s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (\\<phi> \\<tau> s)\\<rbrakk>\n       \\<Longrightarrow> Q (\\<phi> t s)\n 2. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           s2p (U s) \\<tau> \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; s2p (Sols (\\<lambda>t. f) U S 0 s) X; s2p (U s) t;\n        \\<forall>\\<tau>.\n           s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "thus \"Q (\\<phi> t s)\""], ["proof (prove)\nusing this:\n  s2p (Sols (\\<lambda>t. f) U S 0 s) (\\<lambda>t. \\<phi> t s)\n\ngoal (1 subgoal):\n 1. Q (\\<phi> t s)", "using main hyps"], ["proof (prove)\nusing this:\n  s2p (Sols (\\<lambda>t. f) U S 0 s) (\\<lambda>t. \\<phi> t s)\n  \\<forall>s.\n     P s \\<longrightarrow>\n     (\\<forall>X\\<in>Sols (\\<lambda>t. f) U S 0 s.\n         \\<forall>t\\<in>U s.\n            (\\<forall>\\<tau>.\n                s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n                G (X \\<tau>)) \\<longrightarrow>\n            Q (X t))\n  s2p S s\n  P s\n  s2p (U s) t\n  \\<forall>\\<tau>.\n     s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n     G (\\<phi> \\<tau> s)\n\ngoal (1 subgoal):\n 1. Q (\\<phi> t s)", "by fastforce"], ["proof (state)\nthis:\n  Q (\\<phi> t s)\n\ngoal (1 subgoal):\n 1. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           s2p (U s) \\<tau> \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; s2p (Sols (\\<lambda>t. f) U S 0 s) X; s2p (U s) t;\n        \\<forall>\\<tau>.\n           s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           s2p (U s) \\<tau> \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; s2p (Sols (\\<lambda>t. f) U S 0 s) X; s2p (U s) t;\n        \\<forall>\\<tau>.\n           s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "fix s X t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           s2p (U s) \\<tau> \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; s2p (Sols (\\<lambda>t. f) U S 0 s) X; s2p (U s) t;\n        \\<forall>\\<tau>.\n           s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "assume hyps: \"P s\" \"X \\<in> Sols (\\<lambda>t. f) U S 0 s\" \"t \\<in> U s\"  \"\\<forall>\\<tau>. \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow> G (X \\<tau>)\"\n    and main: \"\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>. \\<tau> \\<in> U s \\<and> \\<tau> \\<le> t \\<longrightarrow> G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))\""], ["proof (state)\nthis:\n  P s\n  s2p (Sols (\\<lambda>t. f) U S 0 s) X\n  s2p (U s) t\n  \\<forall>\\<tau>.\n     s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow> G (X \\<tau>)\n  \\<forall>s\\<in>S.\n     P s \\<longrightarrow>\n     (\\<forall>t\\<in>U s.\n         (\\<forall>\\<tau>.\n             s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n             G (\\<phi> \\<tau> s)) \\<longrightarrow>\n         Q (\\<phi> t s))\n\ngoal (1 subgoal):\n 1. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           s2p (U s) \\<tau> \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; s2p (Sols (\\<lambda>t. f) U S 0 s) X; s2p (U s) t;\n        \\<forall>\\<tau>.\n           s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "hence obs: \"s \\<in> S\""], ["proof (prove)\nusing this:\n  P s\n  s2p (Sols (\\<lambda>t. f) U S 0 s) X\n  s2p (U s) t\n  \\<forall>\\<tau>.\n     s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow> G (X \\<tau>)\n  \\<forall>s\\<in>S.\n     P s \\<longrightarrow>\n     (\\<forall>t\\<in>U s.\n         (\\<forall>\\<tau>.\n             s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n             G (\\<phi> \\<tau> s)) \\<longrightarrow>\n         Q (\\<phi> t s))\n\ngoal (1 subgoal):\n 1. s2p S s", "using ivp_sols_def[of \"\\<lambda>t. f\"] init_time"], ["proof (prove)\nusing this:\n  P s\n  s2p (Sols (\\<lambda>t. f) U S 0 s) X\n  s2p (U s) t\n  \\<forall>\\<tau>.\n     s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow> G (X \\<tau>)\n  \\<forall>s\\<in>S.\n     P s \\<longrightarrow>\n     (\\<forall>t\\<in>U s.\n         (\\<forall>\\<tau>.\n             s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n             G (\\<phi> \\<tau> s)) \\<longrightarrow>\n         Q (\\<phi> t s))\n  Sols (\\<lambda>t. f) ?U ?S ?t\\<^sub>0 ?s =\n  {X. s2p (?U ?s \\<rightarrow> ?S) X \\<and>\n       D X = (\\<lambda>t. f (X t)) on ?U ?s \\<and>\n      X ?t\\<^sub>0 = ?s \\<and> s2p (?U ?s) ?t\\<^sub>0}\n  s2p T 0\n\ngoal (1 subgoal):\n 1. s2p S s", "by auto"], ["proof (state)\nthis:\n  s2p S s\n\ngoal (1 subgoal):\n 1. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           s2p (U s) \\<tau> \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; s2p (Sols (\\<lambda>t. f) U S 0 s) X; s2p (U s) t;\n        \\<forall>\\<tau>.\n           s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "hence \"\\<forall>\\<tau>\\<in>down (U s) t. X \\<tau> = \\<phi> \\<tau> s\""], ["proof (prove)\nusing this:\n  s2p S s\n\ngoal (1 subgoal):\n 1. \\<forall>\\<tau>\\<in>down (U s) t. X \\<tau> = \\<phi> \\<tau> s", "using eq_solution hyps assms"], ["proof (prove)\nusing this:\n  s2p S s\n  \\<lbrakk>s2p S ?s; is_interval (?U ?s); ?U ?s \\<subseteq> T;\n   s2p (?U ?s) ?t; s2p (Sols (\\<lambda>t. f) ?U S 0 ?s) ?X\\<rbrakk>\n  \\<Longrightarrow> ?X ?t = \\<phi> ?t ?s\n  P s\n  s2p (Sols (\\<lambda>t. f) U S 0 s) X\n  s2p (U s) t\n  \\<forall>\\<tau>.\n     s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow> G (X \\<tau>)\n  s2p S ?s \\<Longrightarrow>\n  s2p (U ?s) 0 \\<and> is_interval (U ?s) \\<and> U ?s \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<forall>\\<tau>\\<in>down (U s) t. X \\<tau> = \\<phi> \\<tau> s", "by blast"], ["proof (state)\nthis:\n  \\<forall>\\<tau>\\<in>down (U s) t. X \\<tau> = \\<phi> \\<tau> s\n\ngoal (1 subgoal):\n 1. \\<And>s X t.\n       \\<lbrakk>\\<forall>s\\<in>S.\n                   P s \\<longrightarrow>\n                   (\\<forall>t\\<in>U s.\n                       (\\<forall>\\<tau>.\n                           s2p (U s) \\<tau> \\<and>\n                           \\<tau> \\<le> t \\<longrightarrow>\n                           G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                       Q (\\<phi> t s));\n        P s; s2p (Sols (\\<lambda>t. f) U S 0 s) X; s2p (U s) t;\n        \\<forall>\\<tau>.\n           s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (X \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "thus \"Q (X t)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<tau>\\<in>down (U s) t. X \\<tau> = \\<phi> \\<tau> s\n\ngoal (1 subgoal):\n 1. Q (X t)", "using hyps main obs"], ["proof (prove)\nusing this:\n  \\<forall>\\<tau>\\<in>down (U s) t. X \\<tau> = \\<phi> \\<tau> s\n  P s\n  s2p (Sols (\\<lambda>t. f) U S 0 s) X\n  s2p (U s) t\n  \\<forall>\\<tau>.\n     s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow> G (X \\<tau>)\n  \\<forall>s\\<in>S.\n     P s \\<longrightarrow>\n     (\\<forall>t\\<in>U s.\n         (\\<forall>\\<tau>.\n             s2p (U s) \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n             G (\\<phi> \\<tau> s)) \\<longrightarrow>\n         Q (\\<phi> t s))\n  s2p S s\n\ngoal (1 subgoal):\n 1. Q (X t)", "by auto"], ["proof (state)\nthis:\n  Q (X t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma H_g_ode_subset:\n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n    and \"P = (\\<lambda>s. s \\<in> S \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\" \n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>= \\<lambda>t.\n                                     f & G on U S @ 0\\<^bold>{Q\\<^bold>}", "using assms"], ["proof (prove)\nusing this:\n  s2p S ?s \\<Longrightarrow>\n  s2p (U ?s) 0 \\<and> is_interval (U ?s) \\<and> U ?s \\<subseteq> T\n  P =\n  (\\<lambda>s.\n      s2p S s \\<longrightarrow>\n      (\\<forall>t\\<in>U s.\n          (\\<forall>\\<tau>\\<in>down (U s) t.\n              G (\\<phi> \\<tau> s)) \\<longrightarrow>\n          Q (\\<phi> t s)))\n\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>= \\<lambda>t.\n                                     f & G on U S @ 0\\<^bold>{Q\\<^bold>}", "apply(subst sH_g_ode_subset[OF assms(1)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>\\<And>s.\n                   s2p S s \\<Longrightarrow>\n                   s2p (U s) 0 \\<and>\n                   is_interval (U s) \\<and> U s \\<subseteq> T;\n        P =\n        (\\<lambda>s.\n            s2p S s \\<longrightarrow>\n            (\\<forall>t\\<in>U s.\n                (\\<forall>\\<tau>\\<in>down (U s) t.\n                    G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                Q (\\<phi> t s)));\n        s2p S s\\<rbrakk>\n       \\<Longrightarrow> s2p S s\n 2. \\<lbrakk>\\<And>s.\n                s2p S s \\<Longrightarrow>\n                s2p (U s) 0 \\<and>\n                is_interval (U s) \\<and> U s \\<subseteq> T;\n     P =\n     (\\<lambda>s.\n         s2p S s \\<longrightarrow>\n         (\\<forall>t\\<in>U s.\n             (\\<forall>\\<tau>\\<in>down (U s) t.\n                 G (\\<phi> \\<tau> s)) \\<longrightarrow>\n             Q (\\<phi> t s)))\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s\\<in>S.\n                         P s \\<longrightarrow>\n                         (\\<forall>t\\<in>U s.\n                             (\\<forall>\\<tau>\\<in>down (U s) t.\n                                 G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                             Q (\\<phi> t s))", "unfolding assms"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>\\<And>s.\n                   s2p S s \\<Longrightarrow>\n                   s2p (U s) 0 \\<and>\n                   is_interval (U s) \\<and> U s \\<subseteq> T;\n        (\\<lambda>s.\n            s2p S s \\<longrightarrow>\n            (\\<forall>t\\<in>U s.\n                (\\<forall>\\<tau>\\<in>down (U s) t.\n                    G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                Q (\\<phi> t s))) =\n        (\\<lambda>s.\n            s2p S s \\<longrightarrow>\n            (\\<forall>t\\<in>U s.\n                (\\<forall>\\<tau>\\<in>down (U s) t.\n                    G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                Q (\\<phi> t s)));\n        s2p S s\\<rbrakk>\n       \\<Longrightarrow> s2p S s\n 2. \\<lbrakk>\\<And>s.\n                s2p S s \\<Longrightarrow>\n                s2p (U s) 0 \\<and>\n                is_interval (U s) \\<and> U s \\<subseteq> T;\n     (\\<lambda>s.\n         s2p S s \\<longrightarrow>\n         (\\<forall>t\\<in>U s.\n             (\\<forall>\\<tau>\\<in>down (U s) t.\n                 G (\\<phi> \\<tau> s)) \\<longrightarrow>\n             Q (\\<phi> t s))) =\n     (\\<lambda>s.\n         s2p S s \\<longrightarrow>\n         (\\<forall>t\\<in>U s.\n             (\\<forall>\\<tau>\\<in>down (U s) t.\n                 G (\\<phi> \\<tau> s)) \\<longrightarrow>\n             Q (\\<phi> t s)))\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s\\<in>S.\n                         (s2p S s \\<longrightarrow>\n                          (\\<forall>t\\<in>U s.\n                              (\\<forall>\\<tau>\\<in>down (U s) t.\n                                  G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                              Q (\\<phi> t s))) \\<longrightarrow>\n                         (\\<forall>t\\<in>U s.\n                             (\\<forall>\\<tau>\\<in>down (U s) t.\n                                 G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                             Q (\\<phi> t s))", "by auto"], ["", "lemma sH_g_ode: \"\\<^bold>{P\\<^bold>} (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) \\<^bold>{Q\\<^bold>} = \n  (\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>= \\<lambda>t.\n                                     f & G on \\<lambda>s.\n           T S @ 0\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s\\<in>S.\n        P s \\<longrightarrow>\n        (\\<forall>t\\<in>T.\n            (\\<forall>\\<tau>\\<in>down T t.\n                G (\\<phi> \\<tau> s)) \\<longrightarrow>\n            Q (\\<phi> t s)))", "by (subst sH_g_ode_subset, auto simp: init_time interval_time)"], ["", "lemma sH_g_ode_ivl: \"t \\<ge> 0 \\<Longrightarrow> t \\<in> T \\<Longrightarrow> \\<^bold>{P\\<^bold>} (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. {0..t}) S @ 0) \\<^bold>{Q\\<^bold>} = \n  (\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>{0..t}. (\\<forall>\\<tau>\\<in>{0..t}. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> t; s2p T t\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}x\\<acute>= \\<lambda>t.\n                 f & G on \\<lambda>s. {0..t} S @ 0\\<^bold>{Q\\<^bold>} =\n                      (\\<forall>s\\<in>S.\n                          P s \\<longrightarrow>\n                          (\\<forall>t\\<in>{0..t}.\n                              (\\<forall>\\<tau>\\<in>{0..t}.\n                                  G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                              Q (\\<phi> t s)))", "apply(subst sH_g_ode_subset; clarsimp, (force)?)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s x.\n       \\<lbrakk>s2p T t; s2p S s; 0 \\<le> x; x \\<le> t\\<rbrakk>\n       \\<Longrightarrow> s2p T x", "using init_time interval_time mem_is_interval_1_I"], ["proof (prove)\nusing this:\n  s2p T 0\n  is_interval T\n  \\<lbrakk>is_interval ?S; s2p ?S ?a; s2p ?S ?c; ?a \\<le> ?b;\n   ?b \\<le> ?c\\<rbrakk>\n  \\<Longrightarrow> s2p ?S ?b\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       \\<lbrakk>s2p T t; s2p S s; 0 \\<le> x; x \\<le> t\\<rbrakk>\n       \\<Longrightarrow> s2p T x", "by blast"], ["", "lemma sH_orbit: \"\\<^bold>{P\\<^bold>} \\<gamma>\\<^sup>\\<phi>\\<^sup>\\<bullet> \\<^bold>{Q\\<^bold>}  = (\\<forall>s \\<in> S. P s \\<longrightarrow> (\\<forall> t \\<in> T. Q (\\<phi> t s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}\\<gamma>\\<^sup>\\<phi>\\<^sup>\\<bullet>\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s\\<in>S.\n        P s \\<longrightarrow> (\\<forall>t\\<in>T. Q (\\<phi> t s)))", "using sH_g_ode"], ["proof (prove)\nusing this:\n  \\<^bold>{?P\\<^bold>}x\\<acute>= \\<lambda>t.\n                                    f & ?G on \\<lambda>s.\n           T S @ 0\\<^bold>{?Q\\<^bold>} =\n  (\\<forall>s\\<in>S.\n      ?P s \\<longrightarrow>\n      (\\<forall>t\\<in>T.\n          (\\<forall>\\<tau>\\<in>down T t.\n              ?G (\\<phi> \\<tau> s)) \\<longrightarrow>\n          ?Q (\\<phi> t s)))\n\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}\\<gamma>\\<^sup>\\<phi>\\<^sup>\\<bullet>\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s\\<in>S.\n        P s \\<longrightarrow> (\\<forall>t\\<in>T. Q (\\<phi> t s)))", "unfolding orbit_def g_ode_def"], ["proof (prove)\nusing this:\n  \\<^bold>{?P\\<^bold>}g_orbital (\\<lambda>t. f) ?G (\\<lambda>s. T) S\n                       0\\<^sup>\\<bullet>\\<^bold>{?Q\\<^bold>} =\n  (\\<forall>s\\<in>S.\n      ?P s \\<longrightarrow>\n      (\\<forall>t\\<in>T.\n          (\\<forall>\\<tau>\\<in>down T t.\n              ?G (\\<phi> \\<tau> s)) \\<longrightarrow>\n          ?Q (\\<phi> t s)))\n\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}g_orbital (\\<lambda>t. f) (\\<lambda>s. True)\n                        (\\<lambda>s. T) S\n                        0\\<^sup>\\<bullet>\\<^bold>{Q\\<^bold>} =\n    (\\<forall>s\\<in>S.\n        P s \\<longrightarrow> (\\<forall>t\\<in>T. Q (\\<phi> t s)))", "by auto"], ["", "end\n\n\\<comment> \\<open> Verification with differential invariants \\<close>"], ["", "definition g_ode_inv :: \"(real \\<Rightarrow> ('a::banach)\\<Rightarrow>'a) \\<Rightarrow> 'a pred \\<Rightarrow> ('a \\<Rightarrow> real set) \\<Rightarrow> 'a set \\<Rightarrow> \n  real \\<Rightarrow> 'a pred \\<Rightarrow> 'a nd_fun\" (\"(1x\\<acute>=_ & _ on _ _ @ _ DINV _ )\") \n  where \"(x\\<acute>= f & G on U S @ t\\<^sub>0 DINV I) = (x\\<acute>= f & G on U S @ t\\<^sub>0)\""], ["", "lemma sH_g_orbital_guard: \n  assumes \"R = (\\<lambda>s. G s \\<and> Q s)\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>} = \\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{R\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>} =\n    \\<^bold>{P\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{R\\<^bold>}", "using assms"], ["proof (prove)\nusing this:\n  R = (\\<lambda>s. G s \\<and> Q s)\n\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>} =\n    \\<^bold>{P\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{R\\<^bold>}", "unfolding g_orbital_eq ndfun_kat_H ivp_sols_def g_ode_def"], ["proof (prove)\nusing this:\n  R = (\\<lambda>s. G s \\<and> Q s)\n\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        P s \\<longrightarrow>\n        s2p ((((\\<lambda>s.\n                   {X t |t X.\n                    s2p (U s) t \\<and>\n                    \\<P> X (down (U s) t) \\<subseteq> Collect G \\<and>\n                    s2p {X. s2p (U s \\<rightarrow> S) X \\<and>\n                             D X = (\\<lambda>t. f t (X t)) on U s \\<and>\n                            X t\\<^sub>0 = s \\<and> s2p (U s) t\\<^sub>0}\n                     X})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n              s)\n         s' \\<longrightarrow>\n        Q s') =\n    (\\<forall>s s'.\n        P s \\<longrightarrow>\n        s2p ((((\\<lambda>s.\n                   {X t |t X.\n                    s2p (U s) t \\<and>\n                    \\<P> X (down (U s) t) \\<subseteq> Collect G \\<and>\n                    s2p {X. s2p (U s \\<rightarrow> S) X \\<and>\n                             D X = (\\<lambda>t. f t (X t)) on U s \\<and>\n                            X t\\<^sub>0 = s \\<and> s2p (U s) t\\<^sub>0}\n                     X})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n              s)\n         s' \\<longrightarrow>\n        R s')", "by auto"], ["", "lemma sH_g_orbital_inv:\n  assumes \"\\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>\" and \"\\<^bold>{I\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{I\\<^bold>}\" and \"\\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\"\n  shows \" \\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "using assms(1)"], ["proof (prove)\nusing this:\n  \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>\n\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "apply(rule_tac p'=\"\\<lceil>I\\<rceil>\" in H_consl, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow>\n    \\<^bold>{I\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "using assms(3)"], ["proof (prove)\nusing this:\n  \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\n\ngoal (1 subgoal):\n 1. \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow>\n    \\<^bold>{I\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "apply(rule_tac q'=\"\\<lceil>I\\<rceil>\" in H_consr, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>;\n     \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{I\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>}", "using assms(2)"], ["proof (prove)\nusing this:\n  \\<^bold>{I\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>;\n     \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{I\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>}", "by simp"], ["", "lemma sH_diff_inv[simp]: \"\\<^bold>{I\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{I\\<^bold>} = diff_invariant I f U S t\\<^sub>0 G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{I\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>} =\n    diff_invariant I f U S t\\<^sub>0 G", "unfolding diff_invariant_eq ndfun_kat_H g_orbital_eq g_ode_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s s'.\n        I s \\<longrightarrow>\n        s2p ((((\\<lambda>s.\n                   {X t |t X.\n                    s2p (U s) t \\<and>\n                    \\<P> X (down (U s) t) \\<subseteq> Collect G \\<and>\n                    s2p (Sols f U S t\\<^sub>0 s)\n                     X})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n              s)\n         s' \\<longrightarrow>\n        I s') =\n    (\\<forall>s.\n        I s \\<longrightarrow>\n        (\\<forall>X\\<in>Sols f U S t\\<^sub>0 s.\n            \\<forall>t\\<in>U s.\n               (\\<forall>\\<tau>\\<in>down (U s) t.\n                   G (X \\<tau>)) \\<longrightarrow>\n               I (X t)))", "by auto"], ["", "lemma H_g_ode_inv: \"\\<^bold>{I\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{I\\<^bold>} \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow> \n  \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> \\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0 DINV I) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>;\n     \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil>\n     \\<le> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}x\\<acute>=f & G on U S @ t\\<^sub>0 DINV I \\<^bold>{Q\\<^bold>}", "unfolding g_ode_inv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>;\n     \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil>\n     \\<le> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "apply(rule_tac q'=\"\\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil>\" in H_consr, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>;\n     \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil>\n     \\<le> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{\\<lambda>s.\n            I s \\<and> G s\\<^bold>}", "apply(subst sH_g_orbital_guard[symmetric], force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>;\n     \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil>\n     \\<le> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>}", "by (rule_tac I=\"I\" in sH_g_orbital_inv, simp_all)"], ["", "subsection \\<open> Refinement Components \\<close>\n\n\\<comment> \\<open> Skip \\<close>"], ["", "lemma R_skip: \"(\\<forall>s. P s \\<longrightarrow> Q s) \\<Longrightarrow> 1 \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s. P s \\<longrightarrow> Q s \\<Longrightarrow>\n    skip \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (auto simp: spec_def ndfun_kat_H one_nd_fun_def)\n\n\\<comment> \\<open> Abort \\<close>"], ["", "lemma R_abort: \"abort \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abort \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule R2, simp)\n\n\\<comment> \\<open> Sequential Composition \\<close>"], ["", "lemma R_seq: \"(Ref \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>) ; (Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lparr>Ref \\<lceil>P\\<rceil>\n             \\<lceil>R\\<rceil>\\<rparr>Ref \\<lceil>R\\<rceil>\n \\<lceil>Q\\<rceil>\\<lparr>Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\\<rparr>", "using R_seq"], ["proof (prove)\nusing this:\n  \\<lparr>Ref ?p ?r\\<rparr>Ref ?r ?q\\<lparr>Ref ?p ?q\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lparr>Ref \\<lceil>P\\<rceil>\n             \\<lceil>R\\<rceil>\\<rparr>Ref \\<lceil>R\\<rceil>\n \\<lceil>Q\\<rceil>\\<lparr>Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\\<rparr>", "by blast"], ["", "lemma R_seq_law: \"X \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>R\\<rceil> \\<Longrightarrow> Y \\<le> Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> X; Y \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>;\n     Y \\<le> Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<lparr>X\\<rparr>Y\\<lparr>Ref \\<lceil>P\\<rceil>\n           \\<lceil>Q\\<rceil>\\<rparr>", "unfolding spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{P\\<^bold>}X\\<^bold>{R\\<^bold>};\n     \\<^bold>{R\\<^bold>}Y\\<^bold>{Q\\<^bold>}\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}X ; Y\\<^bold>{Q\\<^bold>}", "by (rule H_seq)"], ["", "lemmas R_seq_mono = mult_isol_var\n\n\\<comment> \\<open> Nondeterministic Choice \\<close>"], ["", "lemma R_choice: \"(Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>) + (Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil> +\n    Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\n    \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "using R_choice[of \"\\<lceil>P\\<rceil>\" \"\\<lceil>Q\\<rceil>\"]"], ["proof (prove)\nusing this:\n  Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil> +\n  Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\n  \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\n\ngoal (1 subgoal):\n 1. Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil> +\n    Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\n    \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "."], ["", "lemma R_choice_law: \"X \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> Y \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> X + Y \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>;\n     Y \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> X + Y \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "using join.le_supI"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?x; ?b \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> ?a + ?b \\<le> ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>;\n     Y \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> X + Y \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "."], ["", "lemma R_choice_mono: \"P' \\<le> P \\<Longrightarrow> Q' \\<le> Q \\<Longrightarrow> P' + Q' \\<subseteq> P + Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P' \\<subseteq> P; Q' \\<subseteq> Q\\<rbrakk>\n    \\<Longrightarrow> P' + Q' \\<subseteq> P + Q", "using set_plus_mono2"], ["proof (prove)\nusing this:\n  \\<lbrakk>?C \\<subseteq> ?D; ?E \\<subseteq> ?F\\<rbrakk>\n  \\<Longrightarrow> ?C + ?E \\<subseteq> ?D + ?F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P' \\<subseteq> P; Q' \\<subseteq> Q\\<rbrakk>\n    \\<Longrightarrow> P' + Q' \\<subseteq> P + Q", ".\n\n\\<comment> \\<open> Assignment \\<close>"], ["", "lemma R_assign: \"(x ::= e) \\<le> Ref \\<lceil>\\<lambda>s. P (\\<chi> j. ((($) s)(x := e s)) j)\\<rceil> \\<lceil>P\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ::= e\n    \\<le> Ref \\<lceil>\\<lambda>s. P (\\<chi>j. ((($) s)(x := e s)) j)\\<rceil>\n           \\<lceil>P\\<rceil>", "unfolding spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{\\<lambda>s.\n                P (vec_lambda\n                    ((($) s)(x := e s)))\\<^bold>}x ::= e\\<^bold>{P\\<^bold>}", "by (rule H_assign, clarsimp simp: fun_eq_iff fun_upd_def)"], ["", "lemma R_assign_law: \n  \"(\\<forall>s. P s \\<longrightarrow> Q (\\<chi> j. ((($) s)(x := (e s))) j)) \\<Longrightarrow> (x ::= e) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       P s \\<longrightarrow>\n       Q (\\<chi>j. ((($) s)(x := e s)) j) \\<Longrightarrow>\n    x ::= e \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "unfolding sH_assign[symmetric] spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x ::= e\\<^bold>{Q\\<^bold>} \\<Longrightarrow>\n    \\<^bold>{P\\<^bold>}x ::= e\\<^bold>{Q\\<^bold>}", "."], ["", "lemma R_assignl: \n  \"P = (\\<lambda>s. R (\\<chi> j. ((($) s)(x := e s)) j)) \\<Longrightarrow> (x ::= e) ; Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P = (\\<lambda>s. R (\\<chi>j. ((($) s)(x := e s)) j)) \\<Longrightarrow>\n    \\<lparr>x ::= e\\<rparr>Ref \\<lceil>R\\<rceil>\n                            \\<lceil>Q\\<rceil>\\<lparr>Ref \\<lceil>P\\<rceil>\n                \\<lceil>Q\\<rceil>\\<rparr>", "apply(rule_tac R=R in R_seq_law)"], ["proof (prove)\ngoal (2 subgoals):\n 1. P = (\\<lambda>s. R (\\<chi>j. ((($) s)(x := e s)) j)) \\<Longrightarrow>\n    x ::= e \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>\n 2. P = (\\<lambda>s. R (\\<chi>j. ((($) s)(x := e s)) j)) \\<Longrightarrow>\n    Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>\n    \\<le> Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>", "by (rule_tac R_assign_law, simp_all)"], ["", "lemma R_assignr: \n  \"R = (\\<lambda>s. Q (\\<chi> j. ((($) s)(x := e s)) j)) \\<Longrightarrow> Ref \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>; (x ::= e) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R = (\\<lambda>s. Q (\\<chi>j. ((($) s)(x := e s)) j)) \\<Longrightarrow>\n    \\<lparr>Ref \\<lceil>P\\<rceil>\n             \\<lceil>R\\<rceil>\\<rparr>x ::= e\\<lparr>Ref \\<lceil>P\\<rceil>\n                \\<lceil>Q\\<rceil>\\<rparr>", "apply(rule_tac R=R in R_seq_law, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. R = (\\<lambda>s. Q (\\<chi>j. ((($) s)(x := e s)) j)) \\<Longrightarrow>\n    x ::= e \\<le> Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>", "by (rule_tac R_assign_law, simp)"], ["", "lemma \"(x ::= e) ; Ref \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil> \\<le> Ref \\<lceil>(\\<lambda>s. Q (\\<chi> j. ((($) s)(x := e s)) j))\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lparr>x ::= e\\<rparr>Ref \\<lceil>Q\\<rceil>\n                            \\<lceil>Q\\<rceil>\\<lparr>Ref\n                \\<lceil>\\<lambda>s.\n                           Q (\\<chi>j. ((($) s)(x := e s)) j)\\<rceil>\n                \\<lceil>Q\\<rceil>\\<rparr>", "by (rule R_assignl) simp"], ["", "lemma \"Ref \\<lceil>Q\\<rceil> \\<lceil>(\\<lambda>s. Q (\\<chi> j. ((($) s)(x := e s)) j))\\<rceil>; (x ::= e) \\<le> Ref \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lparr>Ref \\<lceil>Q\\<rceil>\n             \\<lceil>\\<lambda>s.\n                        Q (\\<chi>j.\n                              ((($) s)(x := e s))\n                               j)\\<rceil>\\<rparr>x ::= e\\<lparr>Ref\n                           \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil>\\<rparr>", "by (rule R_assignr) simp\n\n\\<comment> \\<open> Nondeterministic Assignment \\<close>"], ["", "lemma R_nondet_assign: \"(x ::= ?) \\<le> Ref \\<lceil>\\<lambda>s. \\<forall>k. P (\\<chi> j. ((($) s)(x := k)) j)\\<rceil> \\<lceil>P\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ::= ? \n    \\<le> Ref \\<lceil>\\<lambda>s.\n                         \\<forall>k.\n                            P (\\<chi>j. ((($) s)(x := k)) j)\\<rceil>\n           \\<lceil>P\\<rceil>", "unfolding spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{\\<lambda>s.\n                \\<forall>k.\n                   P (vec_lambda\n                       ((($) s)\n                        (x := k)))\\<^bold>}x ::= ? \\<^bold>{P\\<^bold>}", "by (rule H_nondet_assign)"], ["", "lemma R_nondet_assign_law: \n  \"(\\<forall>s. P s \\<longrightarrow> (\\<forall>k. Q (\\<chi> j. ((($) s)(x := k)) j))) \\<Longrightarrow> (x ::= ?) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       P s \\<longrightarrow>\n       (\\<forall>k. Q (\\<chi>j. ((($) s)(x := k)) j)) \\<Longrightarrow>\n    x ::= ?  \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "unfolding sH_nondet_assign[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x ::= ? \\<^bold>{Q\\<^bold>} \\<Longrightarrow>\n    x ::= ?  \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule R2)\n\n\\<comment> \\<open> Conditional Statement \\<close>"], ["", "lemma R_cond: \n  \"(IF B THEN Ref \\<lceil>\\<lambda>s. B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil> ELSE Ref \\<lceil>\\<lambda>s. \\<not> B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil>) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. IF B THEN Ref \\<lceil>\\<lambda>s. B s \\<and> P s\\<rceil>\n               \\<lceil>Q\\<rceil> ELSE Ref\n \\<lceil>\\<lambda>s. \\<not> B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil>\n    \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "using R_cond[of \"\\<lceil>B\\<rceil>\" \"\\<lceil>P\\<rceil>\" \"\\<lceil>Q\\<rceil>\"]"], ["proof (prove)\nusing this:\n  IF B THEN Ref (\\<tt>\\<tt> \\<lceil>B\\<rceil> ;\n                 \\<tt>\\<tt> \\<lceil>P\\<rceil>)\n             \\<lceil>Q\\<rceil> ELSE Ref (!\\<lceil>B\\<rceil> ;\n   \\<tt>\\<tt> \\<lceil>P\\<rceil>)\n                                     \\<lceil>Q\\<rceil>\n  \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\n\ngoal (1 subgoal):\n 1. IF B THEN Ref \\<lceil>\\<lambda>s. B s \\<and> P s\\<rceil>\n               \\<lceil>Q\\<rceil> ELSE Ref\n \\<lceil>\\<lambda>s. \\<not> B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil>\n    \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by simp"], ["", "lemma R_cond_mono: \"X \\<le> X' \\<Longrightarrow> Y \\<le> Y' \\<Longrightarrow> (IF P THEN X ELSE Y) \\<le> IF P THEN X' ELSE Y'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<le> X'; Y \\<le> Y'\\<rbrakk>\n    \\<Longrightarrow> IF P THEN X ELSE Y \\<le> IF P THEN X' ELSE Y'", "unfolding kat_cond_def times_nd_fun_def plus_nd_fun_def n_op_nd_fun_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<le> X'; Y \\<le> Y'\\<rbrakk>\n    \\<Longrightarrow> (id (\\<lambda>f g.\n                              (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n                               g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n                        ((\\<lambda>x.\n                             if (((\\<lambda>x.\nif (\\<lceil>P\\<rceil>\\<^sub>\\<bullet>) x = {} then \\<eta> x\nelse {})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n                                 x =\n                                {}\n                             then \\<eta> x else {})\\<^sup>\\<bullet>)\n                        X\\<^sub>\\<bullet> \\<squnion>\n                       id (\\<lambda>f g.\n                              (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n                               g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n                        ((\\<lambda>x.\n                             if (\\<lceil>P\\<rceil>\\<^sub>\\<bullet>) x = {}\n                             then \\<eta> x else {})\\<^sup>\\<bullet>)\n                        Y\\<^sub>\\<bullet>)\\<^sup>\\<bullet>\n                      \\<le> (id (\\<lambda>f g.\n                                    (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n                                     g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n                              ((\\<lambda>x.\n                                   if (((\\<lambda>x.\n      if (\\<lceil>P\\<rceil>\\<^sub>\\<bullet>) x = {} then \\<eta> x\n      else {})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n x =\n{}\n                                   then \\<eta> x else {})\\<^sup>\\<bullet>)\n                              X'\\<^sub>\\<bullet> \\<squnion>\n                             id (\\<lambda>f g.\n                                    (f\\<^sub>\\<bullet> \\<circ>\\<^sub>K\n                                     g\\<^sub>\\<bullet>)\\<^sup>\\<bullet>)\n                              ((\\<lambda>x.\n                                   if (\\<lceil>P\\<rceil>\\<^sub>\\<bullet>)\n x =\n{}\n                                   then \\<eta> x else {})\\<^sup>\\<bullet>)\n                              Y'\\<^sub>\\<bullet>)\\<^sup>\\<bullet>", "by (auto simp: kcomp_def less_eq_nd_fun_def p2ndf_def le_fun_def)"], ["", "lemma R_cond_law: \"X \\<le> Ref \\<lceil>\\<lambda>s. B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> Y \\<le> Ref \\<lceil>\\<lambda>s. \\<not> B s \\<and> P s\\<rceil> \\<lceil>Q\\<rceil> \\<Longrightarrow> \n  (IF B THEN X ELSE Y) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<le> Ref \\<lceil>\\<lambda>s. B s \\<and> P s\\<rceil>\n                      \\<lceil>Q\\<rceil>;\n     Y \\<le> Ref \\<lceil>\\<lambda>s. \\<not> B s \\<and> P s\\<rceil>\n              \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> IF B THEN X ELSE Y\n                      \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule order_trans; (rule R_cond_mono)?, (rule R_cond)?) auto\n\n\\<comment> \\<open> While loop \\<close>"], ["", "lemma R_while: \"K = (\\<lambda>s. P s \\<and> \\<not> B s) \\<Longrightarrow>\n  WHILE B INV I DO (Ref \\<lceil>\\<lambda>s. P s \\<and> B s\\<rceil> \\<lceil>P\\<rceil>) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>K\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K = (\\<lambda>s. P s \\<and> \\<not> B s) \\<Longrightarrow>\n    WHILE B INV I DO Ref \\<lceil>\\<lambda>s. P s \\<and> B s\\<rceil>\n                      \\<lceil>P\\<rceil>\n    \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>K\\<rceil>", "unfolding kat_while_inv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. K = (\\<lambda>s. P s \\<and> \\<not> B s) \\<Longrightarrow>\n    while \\<lceil>B\\<rceil> do Ref \\<lceil>\\<lambda>s.\n        P s \\<and> B s\\<rceil>\n                                \\<lceil>P\\<rceil>\n    \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>K\\<rceil>", "using R_while[of \"\\<lceil>B\\<rceil>\" \"\\<lceil>P\\<rceil>\"]"], ["proof (prove)\nusing this:\n  while \\<lceil>B\\<rceil> do Ref (\\<tt>\\<tt> \\<lceil>P\\<rceil> ;\n                                  \\<tt>\\<tt> \\<lceil>B\\<rceil>)\n                              \\<lceil>P\\<rceil>\n  \\<le> Ref \\<lceil>P\\<rceil>\n         (\\<tt>\\<tt> \\<lceil>P\\<rceil> ; !\\<lceil>B\\<rceil>)\n\ngoal (1 subgoal):\n 1. K = (\\<lambda>s. P s \\<and> \\<not> B s) \\<Longrightarrow>\n    while \\<lceil>B\\<rceil> do Ref \\<lceil>\\<lambda>s.\n        P s \\<and> B s\\<rceil>\n                                \\<lceil>P\\<rceil>\n    \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>K\\<rceil>", "by simp"], ["", "lemma R_whileI:\n  \"X \\<le> Ref \\<lceil>I\\<rceil> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>\\<lambda>s. I s \\<and> B s\\<rceil> \\<Longrightarrow> \\<lceil>\\<lambda>s. I s \\<and> \\<not> B s\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> \n  WHILE B INV I DO X \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<le> Ref \\<lceil>I\\<rceil> \\<lceil>I\\<rceil>;\n     \\<lceil>P\\<rceil> \\<le> \\<lceil>\\<lambda>s. I s \\<and> B s\\<rceil>;\n     \\<lceil>\\<lambda>s. I s \\<and> \\<not> B s\\<rceil>\n     \\<le> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> WHILE B INV I DO X\n                      \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule R2, rule H_while_inv, auto simp: ndfun_kat_H spec_def)"], ["", "lemma R_while_mono: \"X \\<le> X' \\<Longrightarrow> (WHILE P INV I DO X) \\<le> WHILE P INV I DO X'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<le> X' \\<Longrightarrow>\n    WHILE P INV I DO X \\<le> WHILE P INV I DO X'", "by (simp add: kat_while_inv_def kat_while_def mult_isol mult_isor star_iso)"], ["", "lemma R_while_law: \"X \\<le> Ref \\<lceil>\\<lambda>s. P s \\<and> B s\\<rceil> \\<lceil>P\\<rceil> \\<Longrightarrow> Q = (\\<lambda>s. P s \\<and> \\<not> B s) \\<Longrightarrow> \n  (WHILE B INV I DO X) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<le> Ref \\<lceil>\\<lambda>s. P s \\<and> B s\\<rceil>\n                      \\<lceil>P\\<rceil>;\n     Q = (\\<lambda>s. P s \\<and> \\<not> B s)\\<rbrakk>\n    \\<Longrightarrow> WHILE B INV I DO X\n                      \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule order_trans; (rule R_while_mono)?, (rule R_while)?)\n\n\\<comment> \\<open> Finite Iteration \\<close>"], ["", "lemma R_loop: \"X \\<le> Ref \\<lceil>I\\<rceil> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> LOOP X INV I \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<le> Ref \\<lceil>I\\<rceil> \\<lceil>I\\<rceil>;\n     \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>;\n     \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> LOOP X INV I \n                      \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "unfolding spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}X\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>;\n     \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}LOOP X INV I \\<^bold>{Q\\<^bold>}", "using H_loopI"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<^bold>{?I\\<^bold>}?X\\<^bold>{?I\\<^bold>};\n   \\<lceil>?P\\<rceil> \\<le> \\<lceil>?I\\<rceil>;\n   \\<lceil>?I\\<rceil> \\<le> \\<lceil>?Q\\<rceil>\\<rbrakk>\n  \\<Longrightarrow> \\<^bold>{?P\\<^bold>}LOOP ?X INV ?I \\<^bold>{?Q\\<^bold>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}X\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>;\n     \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}LOOP X INV I \\<^bold>{Q\\<^bold>}", "by blast"], ["", "lemma R_loopI: \"X \\<le> Ref \\<lceil>I\\<rceil> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> LOOP X INV I \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<le> Ref \\<lceil>I\\<rceil> \\<lceil>I\\<rceil>;\n     \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>;\n     \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> LOOP X INV I \n                      \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "unfolding spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}X\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>;\n     \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}LOOP X INV I \\<^bold>{Q\\<^bold>}", "using H_loopI"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<^bold>{?I\\<^bold>}?X\\<^bold>{?I\\<^bold>};\n   \\<lceil>?P\\<rceil> \\<le> \\<lceil>?I\\<rceil>;\n   \\<lceil>?I\\<rceil> \\<le> \\<lceil>?Q\\<rceil>\\<rbrakk>\n  \\<Longrightarrow> \\<^bold>{?P\\<^bold>}LOOP ?X INV ?I \\<^bold>{?Q\\<^bold>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>{I\\<^bold>}X\\<^bold>{I\\<^bold>};\n     \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>;\n     \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}LOOP X INV I \\<^bold>{Q\\<^bold>}", "by blast"], ["", "lemma R_loop_mono: \"X \\<le> X' \\<Longrightarrow> LOOP X INV I \\<le> LOOP X' INV I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<le> X' \\<Longrightarrow> LOOP X INV I  \\<le> LOOP X' INV I", "unfolding kat_loop_inv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<le> X' \\<Longrightarrow> X\\<^sup>\\<star> \\<le> X'\\<^sup>\\<star>", "by (simp add: star_iso)\n\n\\<comment> \\<open> Evolution command (flow) \\<close>"], ["", "lemma R_g_evol: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"(EVOL \\<phi> G U) \\<le> Ref \\<lceil>\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> P (\\<phi> t s)\\<rceil> \\<lceil>P\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EVOL \\<phi> G U\n    \\<le> Ref \\<lceil>\\<lambda>s.\n                         \\<forall>t\\<in>U s.\n                            (\\<forall>\\<tau>\\<in>down (U s) t.\n                                G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                            P (\\<phi> t s)\\<rceil>\n           \\<lceil>P\\<rceil>", "unfolding spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{\\<lambda>s.\n                \\<forall>t\\<in>U s.\n                   (\\<forall>\\<tau>\\<in>down (U s) t.\n                       G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                   P (\\<phi> t s)\\<^bold>}EVOL \\<phi> G U\\<^bold>{P\\<^bold>}", "by (rule H_g_evol, simp)"], ["", "lemma R_g_evol_law: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"(\\<forall>s. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))) \\<Longrightarrow> \n  (EVOL \\<phi> G U) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       P s \\<longrightarrow>\n       (\\<forall>t\\<in>U s.\n           (\\<forall>\\<tau>\\<in>down (U s) t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           Q (\\<phi> t s)) \\<Longrightarrow>\n    EVOL \\<phi> G U \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "unfolding sH_g_evol[symmetric] spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}EVOL \\<phi> G U\\<^bold>{Q\\<^bold>} \\<Longrightarrow>\n    \\<^bold>{P\\<^bold>}EVOL \\<phi> G U\\<^bold>{Q\\<^bold>}", "."], ["", "lemma R_g_evoll: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"P = (\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> R (\\<phi> t s)) \\<Longrightarrow> \n  (EVOL \\<phi> G U) ; Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P =\n    (\\<lambda>s.\n        \\<forall>t\\<in>U s.\n           (\\<forall>\\<tau>\\<in>down (U s) t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           R (\\<phi> t s)) \\<Longrightarrow>\n    \\<lparr>EVOL \\<phi> G\n             U\\<rparr>Ref \\<lceil>R\\<rceil>\n                       \\<lceil>Q\\<rceil>\\<lparr>Ref \\<lceil>P\\<rceil>\n           \\<lceil>Q\\<rceil>\\<rparr>", "apply(rule_tac R=R in R_seq_law)"], ["proof (prove)\ngoal (2 subgoals):\n 1. P =\n    (\\<lambda>s.\n        \\<forall>t\\<in>U s.\n           (\\<forall>\\<tau>\\<in>down (U s) t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           R (\\<phi> t s)) \\<Longrightarrow>\n    EVOL \\<phi> G U \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>\n 2. P =\n    (\\<lambda>s.\n        \\<forall>t\\<in>U s.\n           (\\<forall>\\<tau>\\<in>down (U s) t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           R (\\<phi> t s)) \\<Longrightarrow>\n    Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>\n    \\<le> Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>", "by (rule_tac R_g_evol_law, simp_all)"], ["", "lemma R_g_evolr: \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"R = (\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)) \\<Longrightarrow> \n  Ref \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>; (EVOL \\<phi> G U) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R =\n    (\\<lambda>s.\n        \\<forall>t\\<in>U s.\n           (\\<forall>\\<tau>\\<in>down (U s) t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           Q (\\<phi> t s)) \\<Longrightarrow>\n    \\<lparr>Ref \\<lceil>P\\<rceil>\n             \\<lceil>R\\<rceil>\\<rparr>EVOL \\<phi> G\n U\\<lparr>Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\\<rparr>", "apply(rule_tac R=R in R_seq_law, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. R =\n    (\\<lambda>s.\n        \\<forall>t\\<in>U s.\n           (\\<forall>\\<tau>\\<in>down (U s) t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           Q (\\<phi> t s)) \\<Longrightarrow>\n    EVOL \\<phi> G U \\<le> Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>", "by (rule_tac R_g_evol_law, simp)"], ["", "lemma \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"EVOL \\<phi> G U ; Ref \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil> \\<le> \n  Ref \\<lceil>\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lparr>EVOL \\<phi> G\n             U\\<rparr>Ref \\<lceil>Q\\<rceil>\n                       \\<lceil>Q\\<rceil>\\<lparr>Ref\n           \\<lceil>\\<lambda>s.\n                      \\<forall>t\\<in>U s.\n                         (\\<forall>\\<tau>\\<in>down (U s) t.\n                             G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                         Q (\\<phi> t s)\\<rceil>\n           \\<lceil>Q\\<rceil>\\<rparr>", "by (rule R_g_evoll) simp"], ["", "lemma \n  fixes \\<phi> :: \"('a::preorder) \\<Rightarrow> 'b \\<Rightarrow> 'b\"\n  shows \"Ref \\<lceil>Q\\<rceil> \\<lceil>\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)\\<rceil>; EVOL \\<phi> G U \\<le> Ref \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lparr>Ref \\<lceil>Q\\<rceil>\n             \\<lceil>\\<lambda>s.\n                        \\<forall>t\\<in>U s.\n                           (\\<forall>\\<tau>\\<in>down (U s) t.\n                               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                           Q (\\<phi> t\n                               s)\\<rceil>\\<rparr>EVOL \\<phi> G\n            U\\<lparr>Ref \\<lceil>Q\\<rceil> \\<lceil>Q\\<rceil>\\<rparr>", "by (rule R_g_evolr) simp\n\n\\<comment> \\<open> Evolution command (ode) \\<close>"], ["", "context local_flow\nbegin"], ["", "lemma R_g_ode_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n  shows \"(x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<le> \n  Ref \\<lceil>\\<lambda>s. s\\<in>S \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> P (\\<phi> t s))\\<rceil> \\<lceil>P\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<acute>= \\<lambda>t. f & G on U S @ 0\n    \\<le> Ref \\<lceil>\\<lambda>s.\n                         s2p S s \\<longrightarrow>\n                         (\\<forall>t\\<in>U s.\n                             (\\<forall>\\<tau>\\<in>down (U s) t.\n                                 G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                             P (\\<phi> t s))\\<rceil>\n           \\<lceil>P\\<rceil>", "unfolding spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{\\<lambda>s.\n                s2p S s \\<longrightarrow>\n                (\\<forall>t\\<in>U s.\n                    (\\<forall>\\<tau>\\<in>down (U s) t.\n                        G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                    P (\\<phi> t\n                        s))\\<^bold>}x\\<acute>= \\<lambda>t.\n            f & G on U S @ 0\\<^bold>{P\\<^bold>}", "by (rule H_g_ode_subset[OF assms], auto)"], ["", "lemma R_g_ode_rule_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n  shows \"(\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))) \\<Longrightarrow> \n  (x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>S.\n       P s \\<longrightarrow>\n       (\\<forall>t\\<in>U s.\n           (\\<forall>\\<tau>\\<in>down (U s) t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           Q (\\<phi> t s)) \\<Longrightarrow>\n    x\\<acute>= \\<lambda>t. f & G on U S @ 0\n    \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "unfolding spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>S.\n       P s \\<longrightarrow>\n       (\\<forall>t\\<in>U s.\n           (\\<forall>\\<tau>\\<in>down (U s) t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           Q (\\<phi> t s)) \\<Longrightarrow>\n    \\<^bold>{P\\<^bold>}x\\<acute>= \\<lambda>t.\n                                     f & G on U S @ 0\\<^bold>{Q\\<^bold>}", "by (subst sH_g_ode_subset[OF assms], auto)"], ["", "lemma R_g_odel_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n    and \"P = (\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> R (\\<phi> t s))\"\n  shows \"(x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) ; Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lparr>x\\<acute>= \\<lambda>t.\n                          f & G on U S @ 0\\<rparr>Ref \\<lceil>R\\<rceil>\n             \\<lceil>Q\\<rceil>\\<lparr>Ref \\<lceil>P\\<rceil>\n \\<lceil>Q\\<rceil>\\<rparr>", "apply (rule_tac R=R in R_seq_law, rule_tac R_g_ode_rule_subset)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       s2p S s \\<Longrightarrow>\n       s2p (U s) 0 \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\n 2. \\<forall>s\\<in>S.\n       P s \\<longrightarrow>\n       (\\<forall>t\\<in>U s.\n           (\\<forall>\\<tau>\\<in>down (U s) t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           R (\\<phi> t s))\n 3. Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>\n    \\<le> Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>", "by (simp_all add: assms)"], ["", "lemma R_g_oder_subset: \n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> 0 \\<in> U s \\<and> is_interval (U s) \\<and> U s \\<subseteq> T\"\n    and \"R = (\\<lambda>s. \\<forall>t\\<in>U s. (\\<forall>\\<tau>\\<in>down (U s) t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))\"\n  shows \"Ref \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>; (x\\<acute>= (\\<lambda>t. f) & G on U S @ 0) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lparr>Ref \\<lceil>P\\<rceil>\n             \\<lceil>R\\<rceil>\\<rparr>x\\<acute>= \\<lambda>t.\n              f & G on U S @ 0\\<lparr>Ref \\<lceil>P\\<rceil>\n \\<lceil>Q\\<rceil>\\<rparr>", "apply (rule_tac R=R in R_seq_law, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<acute>= \\<lambda>t. f & G on U S @ 0\n    \\<le> Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil>", "by (rule_tac R_g_ode_rule_subset, simp_all add: assms)"], ["", "lemma R_g_ode: \"(x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) \\<le> \n  Ref \\<lceil>\\<lambda>s. s\\<in>S \\<longrightarrow> (\\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> P (\\<phi> t s))\\<rceil> \\<lceil>P\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<acute>= \\<lambda>t. f & G on \\<lambda>s. T S @ 0\n    \\<le> Ref \\<lceil>\\<lambda>s.\n                         s2p S s \\<longrightarrow>\n                         (\\<forall>t\\<in>T.\n                             (\\<forall>\\<tau>\\<in>down T t.\n                                 G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                             P (\\<phi> t s))\\<rceil>\n           \\<lceil>P\\<rceil>", "by (rule R_g_ode_subset, auto simp: init_time interval_time)"], ["", "lemma R_g_ode_law: \"(\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))) \\<Longrightarrow> \n  (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>S.\n       P s \\<longrightarrow>\n       (\\<forall>t\\<in>T.\n           (\\<forall>\\<tau>\\<in>down T t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           Q (\\<phi> t s)) \\<Longrightarrow>\n    x\\<acute>= \\<lambda>t. f & G on \\<lambda>s. T S @ 0\n    \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "unfolding sH_g_ode[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>= \\<lambda>t.\n                                     f & G on \\<lambda>s.\n           T S @ 0\\<^bold>{Q\\<^bold>} \\<Longrightarrow>\n    x\\<acute>= \\<lambda>t. f & G on \\<lambda>s. T S @ 0\n    \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule R2)"], ["", "lemma R_g_odel: \"P = (\\<lambda>s. \\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> R (\\<phi> t s)) \\<Longrightarrow> \n  (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) ; Ref \\<lceil>R\\<rceil> \\<lceil>Q\\<rceil> \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P =\n    (\\<lambda>s.\n        \\<forall>t\\<in>T.\n           (\\<forall>\\<tau>\\<in>down T t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           R (\\<phi> t s)) \\<Longrightarrow>\n    \\<lparr>x\\<acute>= \\<lambda>t.\n                          f & G on \\<lambda>s.\nT S @ 0\\<rparr>Ref \\<lceil>R\\<rceil>\n                \\<lceil>Q\\<rceil>\\<lparr>Ref \\<lceil>P\\<rceil>\n    \\<lceil>Q\\<rceil>\\<rparr>", "by (rule R_g_odel_subset, auto simp: init_time interval_time)"], ["", "lemma R_g_oder: \"R = (\\<lambda>s. \\<forall>t\\<in>T. (\\<forall>\\<tau>\\<in>down T t. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s)) \\<Longrightarrow> \n  Ref \\<lceil>P\\<rceil> \\<lceil>R\\<rceil>; (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. T) S @ 0) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R =\n    (\\<lambda>s.\n        \\<forall>t\\<in>T.\n           (\\<forall>\\<tau>\\<in>down T t.\n               G (\\<phi> \\<tau> s)) \\<longrightarrow>\n           Q (\\<phi> t s)) \\<Longrightarrow>\n    \\<lparr>Ref \\<lceil>P\\<rceil>\n             \\<lceil>R\\<rceil>\\<rparr>x\\<acute>= \\<lambda>t.\n              f & G on \\<lambda>s.\n                          T S @ 0\\<lparr>Ref \\<lceil>P\\<rceil>\n    \\<lceil>Q\\<rceil>\\<rparr>", "by (rule R_g_oder_subset, auto simp: init_time interval_time)"], ["", "lemma R_g_ode_ivl: \n  \"t \\<ge> 0 \\<Longrightarrow> t \\<in> T \\<Longrightarrow> (\\<forall>s\\<in>S. P s \\<longrightarrow> (\\<forall>t\\<in>{0..t}. (\\<forall>\\<tau>\\<in>{0..t}. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))) \\<Longrightarrow> \n  (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. {0..t}) S @ 0) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> t; s2p T t;\n     \\<forall>s\\<in>S.\n        P s \\<longrightarrow>\n        (\\<forall>t\\<in>{0..t}.\n            (\\<forall>\\<tau>\\<in>{0..t}.\n                G (\\<phi> \\<tau> s)) \\<longrightarrow>\n            Q (\\<phi> t s))\\<rbrakk>\n    \\<Longrightarrow> x\\<acute>= \\<lambda>t.\n                                    f & G on \\<lambda>s. {0..t} S @ 0\n                      \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "unfolding sH_g_ode_ivl[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> t; s2p T t;\n     \\<^bold>{P\\<^bold>}x\\<acute>= \\<lambda>t.\nf & G on \\<lambda>s. {0..t} S @ 0\\<^bold>{Q\\<^bold>}\\<rbrakk>\n    \\<Longrightarrow> x\\<acute>= \\<lambda>t.\n                                    f & G on \\<lambda>s. {0..t} S @ 0\n                      \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "by (rule R2)"], ["", "end\n\n\\<comment> \\<open> Evolution command (invariants) \\<close>"], ["", "lemma R_g_ode_inv: \"diff_invariant I f T S t\\<^sub>0 G \\<Longrightarrow> \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil> \\<Longrightarrow> \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil> \\<le> \\<lceil>Q\\<rceil> \\<Longrightarrow> \n  (x\\<acute>=f & G on T S @ t\\<^sub>0 DINV I) \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>diff_invariant I f T S t\\<^sub>0 G;\n     \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>;\n     \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil>\n     \\<le> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> x\\<acute>=f & G on T S @ t\\<^sub>0 DINV I \n                      \\<le> Ref \\<lceil>P\\<rceil> \\<lceil>Q\\<rceil>", "unfolding spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>diff_invariant I f T S t\\<^sub>0 G;\n     \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>;\n     \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil>\n     \\<le> \\<lceil>Q\\<rceil>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>{P\\<^bold>}x\\<acute>=f & G on T S @ t\\<^sub>0 DINV I \\<^bold>{Q\\<^bold>}", "by (auto simp: H_g_ode_inv)"], ["", "subsection \\<open> Derivation of the rules of dL \\<close>"], ["", "text \\<open> We derive rules of differential dynamic logic (dL). This allows the components to reason \nin the style of that logic. \\<close>"], ["", "abbreviation g_dl_ode ::\"(('a::banach)\\<Rightarrow>'a) \\<Rightarrow> 'a pred \\<Rightarrow> 'a nd_fun\" (\"(1x\\<acute>=_ & _)\") \n  where \"(x\\<acute>=f & G) \\<equiv> (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. {t. t \\<ge> 0}) UNIV @ 0)\""], ["", "abbreviation g_dl_ode_inv :: \"(('a::banach)\\<Rightarrow>'a) \\<Rightarrow> 'a pred \\<Rightarrow> 'a pred \\<Rightarrow> 'a nd_fun\" (\"(1x\\<acute>=_ & _ DINV _)\") \n  where \"(x\\<acute>= f & G DINV I) \\<equiv> (x\\<acute>= (\\<lambda>t. f) & G on (\\<lambda>s. {t. t \\<ge> 0}) UNIV @ 0 DINV I)\""], ["", "lemma diff_solve_rule1:\n  assumes \"local_flow f UNIV UNIV \\<phi>\"\n    and \"\\<forall>s. P s \\<longrightarrow> (\\<forall>t\\<ge>0. (\\<forall>\\<tau>\\<in>{0..t}. G (\\<phi> \\<tau> s)) \\<longrightarrow> Q (\\<phi> t s))\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>= \\<lambda>t.\n                                     f & G on \\<lambda>s.\n           {t. 0 \\<le> t} UNIV @ 0\\<^bold>{Q\\<^bold>}", "using assms"], ["proof (prove)\nusing this:\n  local_flow f UNIV UNIV \\<phi>\n  \\<forall>s.\n     P s \\<longrightarrow>\n     (\\<forall>t\\<ge>0.\n         (\\<forall>\\<tau>\\<in>{0..t}. G (\\<phi> \\<tau> s)) \\<longrightarrow>\n         Q (\\<phi> t s))\n\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>= \\<lambda>t.\n                                     f & G on \\<lambda>s.\n           {t. 0 \\<le> t} UNIV @ 0\\<^bold>{Q\\<^bold>}", "by(subst local_flow.sH_g_ode_subset, auto)"], ["", "lemma diff_solve_rule2: \n  fixes c::\"'a::{heine_borel, banach}\"\n  assumes \"\\<forall>s. P s \\<longrightarrow> (\\<forall>t\\<ge>0. (\\<forall>\\<tau>\\<in>{0..t}. G (s + \\<tau> *\\<^sub>R c)) \\<longrightarrow> Q (s + t *\\<^sub>R c))\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>=(\\<lambda>s. c) & G) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>= \\<lambda>t s.\n                                     c & G on \\<lambda>s.\n           {t. 0 \\<le> t} UNIV @ 0\\<^bold>{Q\\<^bold>}", "apply(subst local_flow.sH_g_ode_subset[where T=UNIV and \\<phi>=\"(\\<lambda> t x. x + t *\\<^sub>R c)\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. local_flow (\\<lambda>s. c) UNIV UNIV (\\<lambda>t x. x + t *\\<^sub>R c)\n 2. \\<And>s.\n       s2p UNIV s \\<Longrightarrow>\n       s2p (Collect ((\\<le>) 0)) 0 \\<and>\n       is_interval (Collect ((\\<le>) 0)) \\<and>\n       Collect ((\\<le>) 0) \\<subseteq> UNIV\n 3. \\<forall>s\\<in>UNIV.\n       P s \\<longrightarrow>\n       (\\<forall>t\\<in>Collect ((\\<le>) 0).\n           (\\<forall>\\<tau>\\<in>down (Collect ((\\<le>) 0)) t.\n               G (s + \\<tau> *\\<^sub>R c)) \\<longrightarrow>\n           Q (s + t *\\<^sub>R c))", "using line_is_local_flow assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>s2p ?T 0; is_interval ?T; open ?T\\<rbrakk>\n  \\<Longrightarrow> local_flow (\\<lambda>s. ?c) ?T UNIV\n                     (\\<lambda>t s. s + t *\\<^sub>R ?c)\n  \\<forall>s.\n     P s \\<longrightarrow>\n     (\\<forall>t\\<ge>0.\n         (\\<forall>\\<tau>\\<in>{0..t}.\n             G (s + \\<tau> *\\<^sub>R c)) \\<longrightarrow>\n         Q (s + t *\\<^sub>R c))\n\ngoal (3 subgoals):\n 1. local_flow (\\<lambda>s. c) UNIV UNIV (\\<lambda>t x. x + t *\\<^sub>R c)\n 2. \\<And>s.\n       s2p UNIV s \\<Longrightarrow>\n       s2p (Collect ((\\<le>) 0)) 0 \\<and>\n       is_interval (Collect ((\\<le>) 0)) \\<and>\n       Collect ((\\<le>) 0) \\<subseteq> UNIV\n 3. \\<forall>s\\<in>UNIV.\n       P s \\<longrightarrow>\n       (\\<forall>t\\<in>Collect ((\\<le>) 0).\n           (\\<forall>\\<tau>\\<in>down (Collect ((\\<le>) 0)) t.\n               G (s + \\<tau> *\\<^sub>R c)) \\<longrightarrow>\n           Q (s + t *\\<^sub>R c))", "by auto"], ["", "lemma diff_weak_rule: \n  assumes \"\\<lceil>G\\<rceil> \\<le> \\<lceil>Q\\<rceil>\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "using assms"], ["proof (prove)\nusing this:\n  \\<lceil>G\\<rceil> \\<le> \\<lceil>Q\\<rceil>\n\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "unfolding g_orbital_eq ndfun_kat_H ivp_sols_def g_ode_def"], ["proof (prove)\nusing this:\n  \\<lceil>G\\<rceil> \\<le> \\<lceil>Q\\<rceil>\n\ngoal (1 subgoal):\n 1. \\<forall>s s'.\n       P s \\<longrightarrow>\n       s2p ((((\\<lambda>s.\n                  {X t |t X.\n                   s2p (U s) t \\<and>\n                   \\<P> X (down (U s) t) \\<subseteq> Collect G \\<and>\n                   s2p {X. s2p (U s \\<rightarrow> S) X \\<and>\n                            D X = (\\<lambda>t. f t (X t)) on U s \\<and>\n                           X t\\<^sub>0 = s \\<and> s2p (U s) t\\<^sub>0}\n                    X})\\<^sup>\\<bullet>)\\<^sub>\\<bullet>)\n             s)\n        s' \\<longrightarrow>\n       Q s'", "by auto"], ["", "lemma diff_cut_rule:\n  assumes wp_C:\"Hoare \\<lceil>P\\<rceil> (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<lceil>C\\<rceil>\"\n    and wp_Q:\"Hoare \\<lceil>P\\<rceil> (x\\<acute>= f & (\\<lambda> s. G s \\<and> C s) on U S @ t\\<^sub>0) \\<lceil>Q\\<rceil>\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "proof(subst ndfun_kat_H, simp add: g_orbital_eq p2ndf_def g_ode_def, clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t X.\n       \\<lbrakk>P s; s2p (U s) t;\n        \\<forall>x. s2p (U s) x \\<and> x \\<le> t \\<longrightarrow> G (X x);\n        s2p (Sols f U S t\\<^sub>0 s) X\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "fix t::real and X::\"real \\<Rightarrow> 'a\" and s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t X.\n       \\<lbrakk>P s; s2p (U s) t;\n        \\<forall>x. s2p (U s) x \\<and> x \\<le> t \\<longrightarrow> G (X x);\n        s2p (Sols f U S t\\<^sub>0 s) X\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "assume \"P s\" and \"t \\<in> U s\"\n    and x_ivp:\"X \\<in> ivp_sols f U S t\\<^sub>0 s\" \n    and guard_x:\"\\<forall>x. x \\<in> U s \\<and> x \\<le> t \\<longrightarrow> G (X x)\""], ["proof (state)\nthis:\n  P s\n  s2p (U s) t\n  s2p (Sols f U S t\\<^sub>0 s) X\n  \\<forall>x. s2p (U s) x \\<and> x \\<le> t \\<longrightarrow> G (X x)\n\ngoal (1 subgoal):\n 1. \\<And>s t X.\n       \\<lbrakk>P s; s2p (U s) t;\n        \\<forall>x. s2p (U s) x \\<and> x \\<le> t \\<longrightarrow> G (X x);\n        s2p (Sols f U S t\\<^sub>0 s) X\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "have \"\\<forall>t\\<in>(down (U s) t). X t \\<in> g_orbital f G U S t\\<^sub>0 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>down (U s) t. s2p (g_orbital f G U S t\\<^sub>0 s) (X t)", "using g_orbitalI[OF x_ivp] guard_x"], ["proof (prove)\nusing this:\n  \\<lbrakk>s2p (U s) ?t;\n   \\<P> X (down (U s) ?t) \\<subseteq> {s. ?G s}\\<rbrakk>\n  \\<Longrightarrow> s2p (g_orbital f ?G U S t\\<^sub>0 s) (X ?t)\n  \\<forall>x. s2p (U s) x \\<and> x \\<le> t \\<longrightarrow> G (X x)\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>down (U s) t. s2p (g_orbital f G U S t\\<^sub>0 s) (X t)", "by auto"], ["proof (state)\nthis:\n  \\<forall>t\\<in>down (U s) t. s2p (g_orbital f G U S t\\<^sub>0 s) (X t)\n\ngoal (1 subgoal):\n 1. \\<And>s t X.\n       \\<lbrakk>P s; s2p (U s) t;\n        \\<forall>x. s2p (U s) x \\<and> x \\<le> t \\<longrightarrow> G (X x);\n        s2p (Sols f U S t\\<^sub>0 s) X\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "hence \"\\<forall>t\\<in>(down (U s) t). C (X t)\""], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>down (U s) t. s2p (g_orbital f G U S t\\<^sub>0 s) (X t)\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>down (U s) t. C (X t)", "using wp_C \\<open>P s\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>down (U s) t. s2p (g_orbital f G U S t\\<^sub>0 s) (X t)\n  \\<^bold>{P\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{C\\<^bold>}\n  P s\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>down (U s) t. C (X t)", "by (subst (asm) ndfun_kat_H, auto simp: g_ode_def)"], ["proof (state)\nthis:\n  \\<forall>t\\<in>down (U s) t. C (X t)\n\ngoal (1 subgoal):\n 1. \\<And>s t X.\n       \\<lbrakk>P s; s2p (U s) t;\n        \\<forall>x. s2p (U s) x \\<and> x \\<le> t \\<longrightarrow> G (X x);\n        s2p (Sols f U S t\\<^sub>0 s) X\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "hence \"X t \\<in> g_orbital f (\\<lambda>s. G s \\<and> C s) U S t\\<^sub>0 s\""], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>down (U s) t. C (X t)\n\ngoal (1 subgoal):\n 1. s2p (g_orbital f (\\<lambda>s. G s \\<and> C s) U S t\\<^sub>0 s) (X t)", "using guard_x \\<open>t \\<in> U s\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>down (U s) t. C (X t)\n  \\<forall>x. s2p (U s) x \\<and> x \\<le> t \\<longrightarrow> G (X x)\n  s2p (U s) t\n\ngoal (1 subgoal):\n 1. s2p (g_orbital f (\\<lambda>s. G s \\<and> C s) U S t\\<^sub>0 s) (X t)", "by (auto intro!: g_orbitalI x_ivp)"], ["proof (state)\nthis:\n  s2p (g_orbital f (\\<lambda>s. G s \\<and> C s) U S t\\<^sub>0 s) (X t)\n\ngoal (1 subgoal):\n 1. \\<And>s t X.\n       \\<lbrakk>P s; s2p (U s) t;\n        \\<forall>x. s2p (U s) x \\<and> x \\<le> t \\<longrightarrow> G (X x);\n        s2p (Sols f U S t\\<^sub>0 s) X\\<rbrakk>\n       \\<Longrightarrow> Q (X t)", "thus \"Q (X t)\""], ["proof (prove)\nusing this:\n  s2p (g_orbital f (\\<lambda>s. G s \\<and> C s) U S t\\<^sub>0 s) (X t)\n\ngoal (1 subgoal):\n 1. Q (X t)", "using \\<open>P s\\<close> wp_Q"], ["proof (prove)\nusing this:\n  s2p (g_orbital f (\\<lambda>s. G s \\<and> C s) U S t\\<^sub>0 s) (X t)\n  P s\n  \\<^bold>{P\\<^bold>}x\\<acute>= f & \\<lambda>s.\n G s \\<and> C s on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}\n\ngoal (1 subgoal):\n 1. Q (X t)", "by (subst (asm) ndfun_kat_H) (auto simp: g_ode_def)"], ["proof (state)\nthis:\n  Q (X t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diff_inv_rule:\n  assumes \"\\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>\" and \"diff_invariant I f U S t\\<^sub>0 G\" and \"\\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\"\n  shows \"\\<^bold>{P\\<^bold>} (x\\<acute>= f & G on U S @ t\\<^sub>0) \\<^bold>{Q\\<^bold>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>{P\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{Q\\<^bold>}", "apply(subst g_ode_inv_def[symmetric, where I=I], rule H_g_ode_inv)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<^bold>{I\\<^bold>}x\\<acute>= f & G on U S @ t\\<^sub>0\\<^bold>{I\\<^bold>}\n 2. \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>\n 3. \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil> \\<le> \\<lceil>Q\\<rceil>", "unfolding sH_diff_inv"], ["proof (prove)\ngoal (3 subgoals):\n 1. diff_invariant I f U S t\\<^sub>0 G\n 2. \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>\n 3. \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil> \\<le> \\<lceil>Q\\<rceil>", "using assms"], ["proof (prove)\nusing this:\n  \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>\n  diff_invariant I f U S t\\<^sub>0 G\n  \\<lceil>I\\<rceil> \\<le> \\<lceil>Q\\<rceil>\n\ngoal (3 subgoals):\n 1. diff_invariant I f U S t\\<^sub>0 G\n 2. \\<lceil>P\\<rceil> \\<le> \\<lceil>I\\<rceil>\n 3. \\<lceil>\\<lambda>s. I s \\<and> G s\\<rceil> \\<le> \\<lceil>Q\\<rceil>", "by auto"], ["", "end"]]}