{"file_name": "/home/qj213/afp-2021-10-22/thys/Hybrid_Systems_VCs/HS_Preliminaries.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Hybrid_Systems_VCs", "problem_names": ["lemma abs_le_eq:\n  shows \"(r::real) > 0 \\<Longrightarrow> (\\<bar>x\\<bar> < r) = (-r < x \\<and> x < r)\"\n    and \"(r::real) > 0 \\<Longrightarrow> (\\<bar>x\\<bar> \\<le> r) = (-r \\<le> x \\<and> x \\<le> r)\"", "lemma real_ivl_eqs:\n  assumes \"0 < r\"\n  shows \"ball x r = {x-r<--< x+r}\"         and \"{x-r<--< x+r} = {x-r<..< x+r}\"\n    and \"ball (r / 2) (r / 2) = {0<--<r}\"  and \"{0<--<r} = {0<..<r}\"\n    and \"ball 0 r = {-r<--<r}\"             and \"{-r<--<r} = {-r<..<r}\"\n    and \"cball x r = {x-r--x+r}\"           and \"{x-r--x+r} = {x-r..x+r}\"\n    and \"cball (r / 2) (r / 2) = {0--r}\"   and \"{0--r} = {0..r}\"\n    and \"cball 0 r = {-r--r}\"              and \"{-r--r} = {-r..r}\"", "lemma is_interval_real_nonneg[simp]: \"is_interval (Collect ((\\<le>) (0::real)))\"", "lemma norm_rotate_eq[simp]:\n  fixes x :: \"'a:: {banach,real_normed_field}\"\n  shows \"(x * cos t - y * sin t)\\<^sup>2 + (x * sin t + y * cos t)\\<^sup>2 = x\\<^sup>2 + y\\<^sup>2\"\n    and \"(x * cos t + y * sin t)\\<^sup>2 + (y * cos t - x * sin t)\\<^sup>2 = x\\<^sup>2 + y\\<^sup>2\"", "lemma vderiv_on_composeI:\n  assumes \"D f = f' on g ` T\" \n    and \" D g = g' on T\"\n    and \"h = (\\<lambda>t. g' t *\\<^sub>R f' (g t))\"\n  shows \"D (\\<lambda>t. f (g t)) = h on T\"", "lemma vderiv_uminusI[poly_derivatives]:\n  \"D f = f' on T \\<Longrightarrow> g = (\\<lambda>t. - f' t) \\<Longrightarrow> D (\\<lambda>t. - f t) = g on T\"", "lemma vderiv_npowI[poly_derivatives]:\n  fixes f::\"real \\<Rightarrow> real\"\n  assumes \"n \\<ge> 1\" and \"D f = f' on T\" and \"g = (\\<lambda>t. n * (f' t) * (f t)^(n-1))\"\n  shows \"D (\\<lambda>t. (f t)^n) = g on T\"", "lemma vderiv_divI[poly_derivatives]:\n  assumes \"\\<forall>t\\<in>T. g t \\<noteq> (0::real)\" and \"D f = f' on T\"and \"D g = g' on T\" \n    and \"h = (\\<lambda>t. (f' t * g t - f t * (g' t)) / (g t)^2)\"\n  shows \"D (\\<lambda>t. (f t)/(g t)) = h on T\"", "lemma vderiv_cosI[poly_derivatives]:\n  assumes \"D (f::real \\<Rightarrow> real) = f' on T\" and \"g = (\\<lambda>t. - (f' t) * sin (f t))\"\n  shows \"D (\\<lambda>t. cos (f t)) = g on T\"", "lemma vderiv_sinI[poly_derivatives]:\n  assumes \"D (f::real \\<Rightarrow> real) = f' on T\" and \"g = (\\<lambda>t. (f' t) * cos (f t))\"\n  shows \"D (\\<lambda>t. sin (f t)) = g on T\"", "lemma vderiv_expI[poly_derivatives]:\n  assumes \"D (f::real \\<Rightarrow> real) = f' on T\" and \"g = (\\<lambda>t. (f' t) * exp (f t))\"\n  shows \"D (\\<lambda>t. exp (f t)) = g on T\"", "lemma \"D (*) a = (\\<lambda>t. a) on T\"", "lemma \"a \\<noteq> 0 \\<Longrightarrow> D (\\<lambda>t. t/a) = (\\<lambda>t. 1/a) on T\"", "lemma \"(a::real) \\<noteq> 0 \\<Longrightarrow> D f = f' on T \\<Longrightarrow> g = (\\<lambda>t. (f' t)/a) \\<Longrightarrow> D (\\<lambda>t. (f t)/a) = g on T\"", "lemma \"\\<forall>t\\<in>T. f t \\<noteq> (0::real) \\<Longrightarrow> D f = f' on T \\<Longrightarrow> g = (\\<lambda>t. - a * f' t / (f t)^2) \\<Longrightarrow> \n  D (\\<lambda>t. a/(f t)) = g on T\"", "lemma \"D (\\<lambda>t. a * t\\<^sup>2 / 2 + v * t + x) = (\\<lambda>t. a * t + v) on T\"", "lemma \"D (\\<lambda>t. v * t - a * t\\<^sup>2 / 2 + x) = (\\<lambda>x. v - a * x) on T\"", "lemma \"D x = x' on (\\<lambda>\\<tau>. \\<tau> + t) ` T \\<Longrightarrow> D (\\<lambda>\\<tau>. x (\\<tau> + t)) = (\\<lambda>\\<tau>. x' (\\<tau> + t)) on T\"", "lemma \"a \\<noteq> 0 \\<Longrightarrow> D (\\<lambda>t. t/a) = (\\<lambda>t. 1/a) on T\"", "lemma \"c \\<noteq> 0 \\<Longrightarrow> D (\\<lambda>t. a5 * t^5 + a3 * (t^3 / c) - a2 * exp (t^2) + a1 * cos t + a0) = \n  (\\<lambda>t. 5 * a5 * t^4 + 3 * a3 * (t^2 / c) - 2 * a2 * t * exp (t^2) - a1 * sin t) on T\"", "lemma \"c \\<noteq> 0 \\<Longrightarrow> D (\\<lambda>t. - a3 * exp (t^3 / c) + a1 * sin t + a2 * t^2) = \n  (\\<lambda>t. a1 * cos t + 2 * a2 * t - 3 * a3 * t^2 / c * exp (t^3 / c)) on T\"", "lemma \"c \\<noteq> 0 \\<Longrightarrow> D (\\<lambda>t. exp (a * sin (cos (t^4) / c))) = \n  (\\<lambda>t. - 4 * a * t^3 * sin (t^4) / c * cos (cos (t^4) / c) * exp (a * sin (cos (t^4) / c))) on T\"", "lemma IVT_two_functions:\n  fixes f :: \"('a::{linear_continuum_topology, real_vector}) \\<Rightarrow> \n  ('b::{linorder_topology,real_normed_vector,ordered_ab_group_add})\"\n  assumes conts: \"continuous_on {a..b} f\" \"continuous_on {a..b} g\"\n      and ahyp: \"f a < g a\" and bhyp: \"g b < f b \" and \"a \\<le> b\"\n    shows \"\\<exists>x\\<in>{a..b}. f x = g x\"", "lemma IVT_two_functions_real_ivl:\n  fixes f :: \"real \\<Rightarrow> real\"\n  assumes conts: \"continuous_on {a--b} f\" \"continuous_on {a--b} g\"\n      and ahyp: \"f a < g a\" and bhyp: \"g b < f b \"\n    shows \"\\<exists>x\\<in>{a--b}. f x = g x\"", "lemma eventually_at_within_mono:\n  assumes \"t \\<in> interior T\" and \"T \\<subseteq> S\"\n    and \"eventually P (at t within T)\"\n  shows \"eventually P (at t within S)\"", "lemma netlimit_at_within_mono:\n  fixes t::\"'a::{perfect_space,t2_space}\"\n  assumes \"t \\<in> interior T\" and \"T \\<subseteq> S\"\n  shows \"netlimit (at t within S) = t\"", "lemma has_derivative_at_within_mono:\n  assumes \"(t::real) \\<in> interior T\" and \"T \\<subseteq> S\"\n    and \"D f \\<mapsto> f' at t within T\"\n  shows \"D f \\<mapsto> f' at t within S\"", "lemma eventually_all_finite2:\n  fixes P :: \"('a::finite) \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes h:\"\\<forall>i. eventually (P i) F\"\n  shows \"eventually (\\<lambda>x. \\<forall>i. P i x) F\"", "lemma eventually_all_finite_mono:\n  fixes P :: \"('a::finite) \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes h1: \"\\<forall>i. eventually (P i) F\"\n      and h2: \"\\<forall>x. (\\<forall>i. (P i x)) \\<longrightarrow> Q x\"\n  shows \"eventually Q F\"", "lemma vec_upd_eq: \"vec_upd s i a = (\\<chi> j. if j = i then a else s$j)\"", "lemma frechet_vec_lambda:\n  fixes f::\"real \\<Rightarrow> ('a::banach)^('m::finite)\" and x::real and T::\"real set\"\n  defines \"x\\<^sub>0 \\<equiv> netlimit (at x within T)\" and \"m \\<equiv> real CARD('m)\"\n  assumes \"\\<forall>i. ((\\<lambda>y. (f y $ i - f x\\<^sub>0 $ i - (y - x\\<^sub>0) *\\<^sub>R f' x $ i) /\\<^sub>R (\\<parallel>y - x\\<^sub>0\\<parallel>)) \\<longlongrightarrow> 0) (at x within T)\"\n  shows \"((\\<lambda>y. (f y - f x\\<^sub>0 - (y - x\\<^sub>0) *\\<^sub>R f' x) /\\<^sub>R (\\<parallel>y - x\\<^sub>0\\<parallel>)) \\<longlongrightarrow> 0) (at x within T)\"", "lemma tendsto_norm_bound:\n  \"\\<forall>x. \\<parallel>G x - L\\<parallel> \\<le> \\<parallel>F x - L\\<parallel> \\<Longrightarrow> (F \\<longlongrightarrow> L) net \\<Longrightarrow> (G \\<longlongrightarrow> L) net\"", "lemma tendsto_zero_norm_bound:\n  \"\\<forall>x. \\<parallel>G x\\<parallel> \\<le> \\<parallel>F x\\<parallel> \\<Longrightarrow> (F \\<longlongrightarrow> 0) net \\<Longrightarrow> (G \\<longlongrightarrow> 0) net\"", "lemma frechet_vec_nth:\n  fixes f::\"real \\<Rightarrow> ('a::real_normed_vector)^'m\"\n  assumes \"((\\<lambda>x. (f x - f x\\<^sub>0 - (x - x\\<^sub>0) *\\<^sub>R f' t) /\\<^sub>R (\\<parallel>x - x\\<^sub>0\\<parallel>)) \\<longlongrightarrow> 0) (at t within T)\"\n  shows \"((\\<lambda>x. (f x $ i - f x\\<^sub>0 $ i - (x - x\\<^sub>0) *\\<^sub>R f' t $ i) /\\<^sub>R (\\<parallel>x - x\\<^sub>0\\<parallel>)) \\<longlongrightarrow> 0) (at t within T)\"", "lemma has_derivative_vec_lambda:\n  fixes f::\"real \\<Rightarrow> ('a::banach)^('n::finite)\"\n  assumes \"\\<forall>i. D (\\<lambda>t. f t $ i) \\<mapsto> (\\<lambda> h. h *\\<^sub>R f' x $ i) (at x within T)\"\n  shows \"D f \\<mapsto> (\\<lambda>h. h *\\<^sub>R f' x) at x within T\"", "lemma has_derivative_vec_nth:\n  assumes \"D f \\<mapsto> (\\<lambda>h. h *\\<^sub>R f' x) at x within T\"\n  shows \"D (\\<lambda>t. f t $ i) \\<mapsto> (\\<lambda>h. h *\\<^sub>R f' x $ i) at x within T\"", "lemma has_vderiv_on_vec_eq[simp]:\n  fixes x::\"real \\<Rightarrow> ('a::banach)^('n::finite)\"\n  shows \"(D x = x' on T) = (\\<forall>i. D (\\<lambda>t. x t $ i) = (\\<lambda>t. x' t $ i) on T)\""], "translations": [["", "lemma abs_le_eq:\n  shows \"(r::real) > 0 \\<Longrightarrow> (\\<bar>x\\<bar> < r) = (-r < x \\<and> x < r)\"\n    and \"(r::real) > 0 \\<Longrightarrow> (\\<bar>x\\<bar> \\<le> r) = (-r \\<le> x \\<and> x \\<le> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < r \\<Longrightarrow>\n     (\\<bar>x\\<bar> < r) = (- r < x \\<and> x < r)) &&&\n    (0 < r \\<Longrightarrow>\n     (\\<bar>x\\<bar> \\<le> r) = (- r \\<le> x \\<and> x \\<le> r))", "by linarith+"], ["", "lemma real_ivl_eqs:\n  assumes \"0 < r\"\n  shows \"ball x r = {x-r<--< x+r}\"         and \"{x-r<--< x+r} = {x-r<..< x+r}\"\n    and \"ball (r / 2) (r / 2) = {0<--<r}\"  and \"{0<--<r} = {0<..<r}\"\n    and \"ball 0 r = {-r<--<r}\"             and \"{-r<--<r} = {-r<..<r}\"\n    and \"cball x r = {x-r--x+r}\"           and \"{x-r--x+r} = {x-r..x+r}\"\n    and \"cball (r / 2) (r / 2) = {0--r}\"   and \"{0--r} = {0..r}\"\n    and \"cball 0 r = {-r--r}\"              and \"{-r--r} = {-r..r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((ball x r = {x - r<--<x + r} &&&\n      {x - r<--<x + r} = {x - r<..<x + r} &&&\n      ball (r / 2) (r / 2) = {0<--<r}) &&&\n     {0<--<r} = {0<..<r} &&&\n     ball 0 r = {- r<--<r} &&& {- r<--<r} = {- r<..<r}) &&&\n    (cball x r = {x - r--x + r} &&&\n     {x - r--x + r} = {x - r..x + r} &&& cball (r / 2) (r / 2) = {0--r}) &&&\n    {0--r} = {0..r} &&& cball 0 r = {- r--r} &&& {- r--r} = {- r..r}", "unfolding open_segment_eq_real_ivl closed_segment_eq_real_ivl"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((ball x r =\n      (if x - r \\<le> x + r then {x - r<..<x + r} else {x + r<..<x - r}) &&&\n      (if x - r \\<le> x + r then {x - r<..<x + r} else {x + r<..<x - r}) =\n      {x - r<..<x + r} &&&\n      ball (r / 2) (r / 2) = (if 0 \\<le> r then {0<..<r} else {r<..<0})) &&&\n     (if 0 \\<le> r then {0<..<r} else {r<..<0}) = {0<..<r} &&&\n     ball 0 r = (if - r \\<le> r then {- r<..<r} else {r<..<- r}) &&&\n     (if - r \\<le> r then {- r<..<r} else {r<..<- r}) = {- r<..<r}) &&&\n    (cball x r =\n     (if x - r \\<le> x + r then {x - r..x + r} else {x + r..x - r}) &&&\n     (if x - r \\<le> x + r then {x - r..x + r} else {x + r..x - r}) =\n     {x - r..x + r} &&&\n     cball (r / 2) (r / 2) = (if 0 \\<le> r then {0..r} else {r..0})) &&&\n    (if 0 \\<le> r then {0..r} else {r..0}) = {0..r} &&&\n    cball 0 r = (if - r \\<le> r then {- r..r} else {r..- r}) &&&\n    (if - r \\<le> r then {- r..r} else {r..- r}) = {- r..r}", "using assms"], ["proof (prove)\nusing this:\n  0 < r\n\ngoal (1 subgoal):\n 1. ((ball x r =\n      (if x - r \\<le> x + r then {x - r<..<x + r} else {x + r<..<x - r}) &&&\n      (if x - r \\<le> x + r then {x - r<..<x + r} else {x + r<..<x - r}) =\n      {x - r<..<x + r} &&&\n      ball (r / 2) (r / 2) = (if 0 \\<le> r then {0<..<r} else {r<..<0})) &&&\n     (if 0 \\<le> r then {0<..<r} else {r<..<0}) = {0<..<r} &&&\n     ball 0 r = (if - r \\<le> r then {- r<..<r} else {r<..<- r}) &&&\n     (if - r \\<le> r then {- r<..<r} else {r<..<- r}) = {- r<..<r}) &&&\n    (cball x r =\n     (if x - r \\<le> x + r then {x - r..x + r} else {x + r..x - r}) &&&\n     (if x - r \\<le> x + r then {x - r..x + r} else {x + r..x - r}) =\n     {x - r..x + r} &&&\n     cball (r / 2) (r / 2) = (if 0 \\<le> r then {0..r} else {r..0})) &&&\n    (if 0 \\<le> r then {0..r} else {r..0}) = {0..r} &&&\n    cball 0 r = (if - r \\<le> r then {- r..r} else {r..- r}) &&&\n    (if - r \\<le> r then {- r..r} else {r..- r}) = {- r..r}", "by (auto simp: cball_def ball_def dist_norm field_simps)"], ["", "lemma is_interval_real_nonneg[simp]: \"is_interval (Collect ((\\<le>) (0::real)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval (Collect ((\\<le>) 0))", "by (auto simp: is_interval_def)"], ["", "lemma norm_rotate_eq[simp]:\n  fixes x :: \"'a:: {banach,real_normed_field}\"\n  shows \"(x * cos t - y * sin t)\\<^sup>2 + (x * sin t + y * cos t)\\<^sup>2 = x\\<^sup>2 + y\\<^sup>2\"\n    and \"(x * cos t + y * sin t)\\<^sup>2 + (y * cos t - x * sin t)\\<^sup>2 = x\\<^sup>2 + y\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * cos t - y * sin t)\\<^sup>2 + (x * sin t + y * cos t)\\<^sup>2 =\n    x\\<^sup>2 + y\\<^sup>2 &&&\n    (x * cos t + y * sin t)\\<^sup>2 + (y * cos t - x * sin t)\\<^sup>2 =\n    x\\<^sup>2 + y\\<^sup>2", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. (x * cos t - y * sin t)\\<^sup>2 + (x * sin t + y * cos t)\\<^sup>2 =\n    x\\<^sup>2 + y\\<^sup>2\n 2. (x * cos t + y * sin t)\\<^sup>2 + (y * cos t - x * sin t)\\<^sup>2 =\n    x\\<^sup>2 + y\\<^sup>2", "have \"(x * cos t - y * sin t)\\<^sup>2 = x\\<^sup>2 * (cos t)\\<^sup>2 + y\\<^sup>2 * (sin t)\\<^sup>2 - 2 * (x * cos t) * (y * sin t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * cos t - y * sin t)\\<^sup>2 =\n    x\\<^sup>2 * (cos t)\\<^sup>2 + y\\<^sup>2 * (sin t)\\<^sup>2 -\n    (2::'a) * (x * cos t) * (y * sin t)", "by(simp add: power2_diff power_mult_distrib)"], ["proof (state)\nthis:\n  (x * cos t - y * sin t)\\<^sup>2 =\n  x\\<^sup>2 * (cos t)\\<^sup>2 + y\\<^sup>2 * (sin t)\\<^sup>2 -\n  (2::'a) * (x * cos t) * (y * sin t)\n\ngoal (2 subgoals):\n 1. (x * cos t - y * sin t)\\<^sup>2 + (x * sin t + y * cos t)\\<^sup>2 =\n    x\\<^sup>2 + y\\<^sup>2\n 2. (x * cos t + y * sin t)\\<^sup>2 + (y * cos t - x * sin t)\\<^sup>2 =\n    x\\<^sup>2 + y\\<^sup>2", "also"], ["proof (state)\nthis:\n  (x * cos t - y * sin t)\\<^sup>2 =\n  x\\<^sup>2 * (cos t)\\<^sup>2 + y\\<^sup>2 * (sin t)\\<^sup>2 -\n  (2::'a) * (x * cos t) * (y * sin t)\n\ngoal (2 subgoals):\n 1. (x * cos t - y * sin t)\\<^sup>2 + (x * sin t + y * cos t)\\<^sup>2 =\n    x\\<^sup>2 + y\\<^sup>2\n 2. (x * cos t + y * sin t)\\<^sup>2 + (y * cos t - x * sin t)\\<^sup>2 =\n    x\\<^sup>2 + y\\<^sup>2", "have \"(x * sin t + y * cos t)\\<^sup>2 = y\\<^sup>2 * (cos t)\\<^sup>2 + x\\<^sup>2 * (sin t)\\<^sup>2 + 2 * (x * cos t) * (y * sin t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * sin t + y * cos t)\\<^sup>2 =\n    y\\<^sup>2 * (cos t)\\<^sup>2 + x\\<^sup>2 * (sin t)\\<^sup>2 +\n    (2::'a) * (x * cos t) * (y * sin t)", "by(simp add: power2_sum power_mult_distrib)"], ["proof (state)\nthis:\n  (x * sin t + y * cos t)\\<^sup>2 =\n  y\\<^sup>2 * (cos t)\\<^sup>2 + x\\<^sup>2 * (sin t)\\<^sup>2 +\n  (2::'a) * (x * cos t) * (y * sin t)\n\ngoal (2 subgoals):\n 1. (x * cos t - y * sin t)\\<^sup>2 + (x * sin t + y * cos t)\\<^sup>2 =\n    x\\<^sup>2 + y\\<^sup>2\n 2. (x * cos t + y * sin t)\\<^sup>2 + (y * cos t - x * sin t)\\<^sup>2 =\n    x\\<^sup>2 + y\\<^sup>2", "ultimately"], ["proof (chain)\npicking this:\n  (x * cos t - y * sin t)\\<^sup>2 =\n  x\\<^sup>2 * (cos t)\\<^sup>2 + y\\<^sup>2 * (sin t)\\<^sup>2 -\n  (2::'a) * (x * cos t) * (y * sin t)\n  (x * sin t + y * cos t)\\<^sup>2 =\n  y\\<^sup>2 * (cos t)\\<^sup>2 + x\\<^sup>2 * (sin t)\\<^sup>2 +\n  (2::'a) * (x * cos t) * (y * sin t)", "show \"(x * cos t - y * sin t)\\<^sup>2 + (x * sin t + y * cos t)\\<^sup>2 = x\\<^sup>2 + y\\<^sup>2\""], ["proof (prove)\nusing this:\n  (x * cos t - y * sin t)\\<^sup>2 =\n  x\\<^sup>2 * (cos t)\\<^sup>2 + y\\<^sup>2 * (sin t)\\<^sup>2 -\n  (2::'a) * (x * cos t) * (y * sin t)\n  (x * sin t + y * cos t)\\<^sup>2 =\n  y\\<^sup>2 * (cos t)\\<^sup>2 + x\\<^sup>2 * (sin t)\\<^sup>2 +\n  (2::'a) * (x * cos t) * (y * sin t)\n\ngoal (1 subgoal):\n 1. (x * cos t - y * sin t)\\<^sup>2 + (x * sin t + y * cos t)\\<^sup>2 =\n    x\\<^sup>2 + y\\<^sup>2", "by (simp add: Groups.mult_ac(2) Groups.mult_ac(3) right_diff_distrib sin_squared_eq)"], ["proof (state)\nthis:\n  (x * cos t - y * sin t)\\<^sup>2 + (x * sin t + y * cos t)\\<^sup>2 =\n  x\\<^sup>2 + y\\<^sup>2\n\ngoal (1 subgoal):\n 1. (x * cos t + y * sin t)\\<^sup>2 + (y * cos t - x * sin t)\\<^sup>2 =\n    x\\<^sup>2 + y\\<^sup>2", "thus \"(x * cos t + y * sin t)\\<^sup>2 + (y * cos t - x * sin t)\\<^sup>2 = x\\<^sup>2 + y\\<^sup>2\""], ["proof (prove)\nusing this:\n  (x * cos t - y * sin t)\\<^sup>2 + (x * sin t + y * cos t)\\<^sup>2 =\n  x\\<^sup>2 + y\\<^sup>2\n\ngoal (1 subgoal):\n 1. (x * cos t + y * sin t)\\<^sup>2 + (y * cos t - x * sin t)\\<^sup>2 =\n    x\\<^sup>2 + y\\<^sup>2", "by (simp add: add.commute add.left_commute power2_diff power2_sum)"], ["proof (state)\nthis:\n  (x * cos t + y * sin t)\\<^sup>2 + (y * cos t - x * sin t)\\<^sup>2 =\n  x\\<^sup>2 + y\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open> Single variable derivatives \\<close>"], ["", "named_theorems poly_derivatives \"compilation of optimised miscellaneous derivative rules.\""], ["", "declare has_vderiv_on_const [poly_derivatives]\n    and has_vderiv_on_id [poly_derivatives]\n    and has_vderiv_on_add[THEN has_vderiv_on_eq_rhs, poly_derivatives]\n    and has_vderiv_on_diff[THEN has_vderiv_on_eq_rhs, poly_derivatives]\n    and has_vderiv_on_mult[THEN has_vderiv_on_eq_rhs, poly_derivatives]\n    and has_vderiv_on_ln[poly_derivatives]"], ["", "lemma vderiv_on_composeI:\n  assumes \"D f = f' on g ` T\" \n    and \" D g = g' on T\"\n    and \"h = (\\<lambda>t. g' t *\\<^sub>R f' (g t))\"\n  shows \"D (\\<lambda>t. f (g t)) = h on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  D (\\<lambda>t. f (g t)) = h on T", "apply(subst ssubst[of h], simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1.  D (\\<lambda>t. f (g t)) = h on T\n 2. True", "using assms has_vderiv_on_compose"], ["proof (prove)\nusing this:\n   D f = f' on g ` T\n   D g = g' on T\n  h = (\\<lambda>t. g' t *\\<^sub>R f' (g t))\n  \\<lbrakk> D ?f = ?f' on ?g ` ?T;  D ?g = ?g' on ?T\\<rbrakk>\n  \\<Longrightarrow>  D (?f \\<circ>\n                        ?g) = (\\<lambda>x. ?g' x *\\<^sub>R ?f' (?g x))\n                     on ?T\n\ngoal (2 subgoals):\n 1.  D (\\<lambda>t. f (g t)) = h on T\n 2. True", "by auto"], ["", "lemma vderiv_uminusI[poly_derivatives]:\n  \"D f = f' on T \\<Longrightarrow> g = (\\<lambda>t. - f' t) \\<Longrightarrow> D (\\<lambda>t. - f t) = g on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> D f = f' on T; g = (\\<lambda>t. - f' t)\\<rbrakk>\n    \\<Longrightarrow>  D (\\<lambda>t. - f t) = g on T", "using has_vderiv_on_uminus"], ["proof (prove)\nusing this:\n   D ?f = ?f' on ?T \\<Longrightarrow>\n   D (\\<lambda>x. - ?f x) = (\\<lambda>x. - ?f' x) on ?T\n\ngoal (1 subgoal):\n 1. \\<lbrakk> D f = f' on T; g = (\\<lambda>t. - f' t)\\<rbrakk>\n    \\<Longrightarrow>  D (\\<lambda>t. - f t) = g on T", "by auto"], ["", "lemma vderiv_npowI[poly_derivatives]:\n  fixes f::\"real \\<Rightarrow> real\"\n  assumes \"n \\<ge> 1\" and \"D f = f' on T\" and \"g = (\\<lambda>t. n * (f' t) * (f t)^(n-1))\"\n  shows \"D (\\<lambda>t. (f t)^n) = g on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  D (\\<lambda>t. f t ^ n) = g on T", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> n\n   D f = f' on T\n  g = (\\<lambda>t. real n * f' t * f t ^ (n - 1))\n\ngoal (1 subgoal):\n 1.  D (\\<lambda>t. f t ^ n) = g on T", "unfolding has_vderiv_on_def has_vector_derivative_def"], ["proof (prove)\nusing this:\n  1 \\<le> n\n  \\<forall>x\\<in>T.\n     D f \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R f' x) at x within T\n  g = (\\<lambda>t. real n * f' t * f t ^ (n - 1))\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>T.\n       D (\\<lambda>t. f t ^ n) \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R g x)\n        at x within T", "by (auto intro: derivative_eq_intros simp: field_simps)"], ["", "lemma vderiv_divI[poly_derivatives]:\n  assumes \"\\<forall>t\\<in>T. g t \\<noteq> (0::real)\" and \"D f = f' on T\"and \"D g = g' on T\" \n    and \"h = (\\<lambda>t. (f' t * g t - f t * (g' t)) / (g t)^2)\"\n  shows \"D (\\<lambda>t. (f t)/(g t)) = h on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  D (\\<lambda>t. f t / g t) = h on T", "apply(subgoal_tac \"(\\<lambda>t. (f t)/(g t)) = (\\<lambda>t. (f t) * (1/(g t)))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lambda>t. f t / g t) =\n    (\\<lambda>t. f t * (1 / g t)) \\<Longrightarrow>\n     D (\\<lambda>t. f t / g t) = h on T\n 2. (\\<lambda>t. f t / g t) = (\\<lambda>t. f t * (1 / g t))", "apply(erule ssubst, rule poly_derivatives(5)[OF assms(2)])"], ["proof (prove)\ngoal (3 subgoals):\n 1.  D (\\<lambda>x. 1 / g x) = ?g'4 on T\n 2. \\<And>t.\n       t \\<in> T \\<Longrightarrow> f t * ?g'4 t + f' t * (1 / g t) = h t\n 3. (\\<lambda>t. f t / g t) = (\\<lambda>t. f t * (1 / g t))", "apply(rule vderiv_on_composeI[where g=g and f=\"\\<lambda>t. 1/t\" and f'=\"\\<lambda>t. - 1/t^2\", OF _ assms(3)])"], ["proof (prove)\ngoal (4 subgoals):\n 1.  D (/) 1 = (\\<lambda>x. - 1 / x\\<^sup>2) on g ` T\n 2. ?g'4 = (\\<lambda>x. g' x *\\<^sub>R (- 1 / (g x)\\<^sup>2))\n 3. \\<And>t.\n       t \\<in> T \\<Longrightarrow> f t * ?g'4 t + f' t * (1 / g t) = h t\n 4. (\\<lambda>t. f t / g t) = (\\<lambda>t. f t * (1 / g t))", "apply(subst has_vderiv_on_def, subst has_vector_derivative_def, clarsimp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> T \\<Longrightarrow>\n       D (/) 1 \\<mapsto> (\\<lambda>xa. - (xa / (g x)\\<^sup>2)) at (g x)\n        within g ` T\n 2. ?g'4 = (\\<lambda>x. g' x *\\<^sub>R (- 1 / (g x)\\<^sup>2))\n 3. \\<And>t.\n       t \\<in> T \\<Longrightarrow> f t * ?g'4 t + f' t * (1 / g t) = h t\n 4. (\\<lambda>t. f t / g t) = (\\<lambda>t. f t * (1 / g t))", "using assms(1)"], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>T. g t \\<noteq> 0\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> T \\<Longrightarrow>\n       D (/) 1 \\<mapsto> (\\<lambda>xa. - (xa / (g x)\\<^sup>2)) at (g x)\n        within g ` T\n 2. ?g'4 = (\\<lambda>x. g' x *\\<^sub>R (- 1 / (g x)\\<^sup>2))\n 3. \\<And>t.\n       t \\<in> T \\<Longrightarrow> f t * ?g'4 t + f' t * (1 / g t) = h t\n 4. (\\<lambda>t. f t / g t) = (\\<lambda>t. f t * (1 / g t))", "apply(force intro!: derivative_eq_intros simp: fun_eq_iff power2_eq_square)"], ["proof (prove)\ngoal (3 subgoals):\n 1. ?g'4 = (\\<lambda>x. g' x *\\<^sub>R (- 1 / (g x)\\<^sup>2))\n 2. \\<And>t.\n       t \\<in> T \\<Longrightarrow> f t * ?g'4 t + f' t * (1 / g t) = h t\n 3. (\\<lambda>t. f t / g t) = (\\<lambda>t. f t * (1 / g t))", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>T. g t \\<noteq> 0\n   D f = f' on T\n   D g = g' on T\n  h = (\\<lambda>t. (f' t * g t - f t * g' t) / (g t)\\<^sup>2)\n\ngoal (3 subgoals):\n 1. ?g'4 = (\\<lambda>x. g' x *\\<^sub>R (- 1 / (g x)\\<^sup>2))\n 2. \\<And>t.\n       t \\<in> T \\<Longrightarrow> f t * ?g'4 t + f' t * (1 / g t) = h t\n 3. (\\<lambda>t. f t / g t) = (\\<lambda>t. f t * (1 / g t))", "by (auto simp: field_simps power2_eq_square)"], ["", "lemma vderiv_cosI[poly_derivatives]:\n  assumes \"D (f::real \\<Rightarrow> real) = f' on T\" and \"g = (\\<lambda>t. - (f' t) * sin (f t))\"\n  shows \"D (\\<lambda>t. cos (f t)) = g on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  D (\\<lambda>t. cos (f t)) = g on T", "apply(rule vderiv_on_composeI[OF _ assms(1), of \"\\<lambda>t. cos t\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1.  D cos = ?f' on f ` T\n 2. g = (\\<lambda>t. f' t *\\<^sub>R ?f' (f t))", "unfolding has_vderiv_on_def has_vector_derivative_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>f ` T.\n       D cos \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R ?f' x) at x within f ` T\n 2. g = (\\<lambda>t. f' t *\\<^sub>R ?f' (f t))", "by (auto intro!: derivative_eq_intros simp: assms)"], ["", "lemma vderiv_sinI[poly_derivatives]:\n  assumes \"D (f::real \\<Rightarrow> real) = f' on T\" and \"g = (\\<lambda>t. (f' t) * cos (f t))\"\n  shows \"D (\\<lambda>t. sin (f t)) = g on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  D (\\<lambda>t. sin (f t)) = g on T", "apply(rule vderiv_on_composeI[OF _ assms(1), of \"\\<lambda>t. sin t\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1.  D sin = ?f' on f ` T\n 2. g = (\\<lambda>t. f' t *\\<^sub>R ?f' (f t))", "unfolding has_vderiv_on_def has_vector_derivative_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>f ` T.\n       D sin \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R ?f' x) at x within f ` T\n 2. g = (\\<lambda>t. f' t *\\<^sub>R ?f' (f t))", "by (auto intro!: derivative_eq_intros simp: assms)"], ["", "lemma vderiv_expI[poly_derivatives]:\n  assumes \"D (f::real \\<Rightarrow> real) = f' on T\" and \"g = (\\<lambda>t. (f' t) * exp (f t))\"\n  shows \"D (\\<lambda>t. exp (f t)) = g on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  D (\\<lambda>t. exp (f t)) = g on T", "apply(rule vderiv_on_composeI[OF _ assms(1), of \"\\<lambda>t. exp t\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1.  D exp = ?f' on f ` T\n 2. g = (\\<lambda>t. f' t *\\<^sub>R ?f' (f t))", "unfolding has_vderiv_on_def has_vector_derivative_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>f ` T.\n       D exp \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R ?f' x) at x within f ` T\n 2. g = (\\<lambda>t. f' t *\\<^sub>R ?f' (f t))", "by (auto intro!: derivative_eq_intros simp: assms)\n\n\\<comment> \\<open>Examples for checking derivatives\\<close>"], ["", "lemma \"D (*) a = (\\<lambda>t. a) on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  D (*) a = (\\<lambda>t. a) on T", "by (auto intro!: poly_derivatives)"], ["", "lemma \"a \\<noteq> 0 \\<Longrightarrow> D (\\<lambda>t. t/a) = (\\<lambda>t. 1/a) on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow>\n     D (\\<lambda>t. t / a) = (\\<lambda>t. 1 / a) on T", "by (auto intro!: poly_derivatives simp: power2_eq_square)"], ["", "lemma \"(a::real) \\<noteq> 0 \\<Longrightarrow> D f = f' on T \\<Longrightarrow> g = (\\<lambda>t. (f' t)/a) \\<Longrightarrow> D (\\<lambda>t. (f t)/a) = g on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> 0;  D f = f' on T;\n     g = (\\<lambda>t. f' t / a)\\<rbrakk>\n    \\<Longrightarrow>  D (\\<lambda>t. f t / a) = g on T", "by (auto intro!: poly_derivatives simp: power2_eq_square)"], ["", "lemma \"\\<forall>t\\<in>T. f t \\<noteq> (0::real) \\<Longrightarrow> D f = f' on T \\<Longrightarrow> g = (\\<lambda>t. - a * f' t / (f t)^2) \\<Longrightarrow> \n  D (\\<lambda>t. a/(f t)) = g on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>t\\<in>T. f t \\<noteq> 0;  D f = f' on T;\n     g = (\\<lambda>t. - a * f' t / (f t)\\<^sup>2)\\<rbrakk>\n    \\<Longrightarrow>  D (\\<lambda>t. a / f t) = g on T", "by (auto intro!: poly_derivatives simp: power2_eq_square)"], ["", "lemma \"D (\\<lambda>t. a * t\\<^sup>2 / 2 + v * t + x) = (\\<lambda>t. a * t + v) on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  D (\\<lambda>t. a * t\\<^sup>2 / 2 + v * t + x) = (\\<lambda>t. a * t + v)\n     on T", "by(auto intro!: poly_derivatives)"], ["", "lemma \"D (\\<lambda>t. v * t - a * t\\<^sup>2 / 2 + x) = (\\<lambda>x. v - a * x) on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  D (\\<lambda>t. v * t - a * t\\<^sup>2 / 2 + x) = (\\<lambda>x. v - a * x)\n     on T", "by(auto intro!: poly_derivatives)"], ["", "lemma \"D x = x' on (\\<lambda>\\<tau>. \\<tau> + t) ` T \\<Longrightarrow> D (\\<lambda>\\<tau>. x (\\<tau> + t)) = (\\<lambda>\\<tau>. x' (\\<tau> + t)) on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  D x = x' on (\\<lambda>\\<tau>. \\<tau> + t) ` T \\<Longrightarrow>\n     D (\\<lambda>\\<tau>.\n           x (\\<tau> + t)) = (\\<lambda>\\<tau>. x' (\\<tau> + t))\n     on T", "by (rule vderiv_on_composeI, auto intro: poly_derivatives)"], ["", "lemma \"a \\<noteq> 0 \\<Longrightarrow> D (\\<lambda>t. t/a) = (\\<lambda>t. 1/a) on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow>\n     D (\\<lambda>t. t / a) = (\\<lambda>t. 1 / a) on T", "by (auto intro!: poly_derivatives simp: power2_eq_square)"], ["", "lemma \"c \\<noteq> 0 \\<Longrightarrow> D (\\<lambda>t. a5 * t^5 + a3 * (t^3 / c) - a2 * exp (t^2) + a1 * cos t + a0) = \n  (\\<lambda>t. 5 * a5 * t^4 + 3 * a3 * (t^2 / c) - 2 * a2 * t * exp (t^2) - a1 * sin t) on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n     D (\\<lambda>t.\n           a5 * t ^ 5 + a3 * (t ^ 3 / c) - a2 * exp (t\\<^sup>2) +\n           a1 * cos t +\n           a0) = (\\<lambda>t.\n                     5 * a5 * t ^ 4 + 3 * a3 * (t\\<^sup>2 / c) -\n                     2 * a2 * t * exp (t\\<^sup>2) -\n                     a1 * sin t)\n     on T", "by(auto intro!: poly_derivatives simp: power2_eq_square)"], ["", "lemma \"c \\<noteq> 0 \\<Longrightarrow> D (\\<lambda>t. - a3 * exp (t^3 / c) + a1 * sin t + a2 * t^2) = \n  (\\<lambda>t. a1 * cos t + 2 * a2 * t - 3 * a3 * t^2 / c * exp (t^3 / c)) on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n     D (\\<lambda>t.\n           - a3 * exp (t ^ 3 / c) + a1 * sin t +\n           a2 *\n           t\\<^sup>2) = (\\<lambda>t.\n                            a1 * cos t + 2 * a2 * t -\n                            3 * a3 * t\\<^sup>2 / c * exp (t ^ 3 / c))\n     on T", "by(auto intro!: poly_derivatives simp: power2_eq_square)"], ["", "lemma \"c \\<noteq> 0 \\<Longrightarrow> D (\\<lambda>t. exp (a * sin (cos (t^4) / c))) = \n  (\\<lambda>t. - 4 * a * t^3 * sin (t^4) / c * cos (cos (t^4) / c) * exp (a * sin (cos (t^4) / c))) on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n     D (\\<lambda>t.\n           exp (a *\n                sin (cos (t ^ 4) /\n                     c))) = (\\<lambda>t.\n                                - 4 * a * t ^ 3 * sin (t ^ 4) / c *\n                                cos (cos (t ^ 4) / c) *\n                                exp (a * sin (cos (t ^ 4) / c)))\n     on T", "by (intro poly_derivatives) (auto intro!: poly_derivatives simp: power2_eq_square)"], ["", "subsection \\<open> Intermediate Value Theorem \\<close>"], ["", "lemma IVT_two_functions:\n  fixes f :: \"('a::{linear_continuum_topology, real_vector}) \\<Rightarrow> \n  ('b::{linorder_topology,real_normed_vector,ordered_ab_group_add})\"\n  assumes conts: \"continuous_on {a..b} f\" \"continuous_on {a..b} g\"\n      and ahyp: \"f a < g a\" and bhyp: \"g b < f b \" and \"a \\<le> b\"\n    shows \"\\<exists>x\\<in>{a..b}. f x = g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{a..b}. f x = g x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{a..b}. f x = g x", "let \"?h x\" = \"f x - g x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{a..b}. f x = g x", "have \"?h a \\<le> 0\" and \"?h b \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a - g a \\<le> (0::'b) &&& (0::'b) \\<le> f b - g b", "using ahyp bhyp"], ["proof (prove)\nusing this:\n  f a < g a\n  g b < f b\n\ngoal (1 subgoal):\n 1. f a - g a \\<le> (0::'b) &&& (0::'b) \\<le> f b - g b", "by simp_all"], ["proof (state)\nthis:\n  f a - g a \\<le> (0::'b)\n  (0::'b) \\<le> f b - g b\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{a..b}. f x = g x", "also"], ["proof (state)\nthis:\n  f a - g a \\<le> (0::'b)\n  (0::'b) \\<le> f b - g b\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{a..b}. f x = g x", "have \"continuous_on {a..b} ?h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {a..b} (\\<lambda>a. f a - g a)", "using conts continuous_on_diff"], ["proof (prove)\nusing this:\n  continuous_on {a..b} f\n  continuous_on {a..b} g\n  \\<lbrakk>continuous_on ?s ?f; continuous_on ?s ?g\\<rbrakk>\n  \\<Longrightarrow> continuous_on ?s (\\<lambda>x. ?f x - ?g x)\n\ngoal (1 subgoal):\n 1. continuous_on {a..b} (\\<lambda>a. f a - g a)", "by blast"], ["proof (state)\nthis:\n  continuous_on {a..b} (\\<lambda>a. f a - g a)\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{a..b}. f x = g x", "ultimately"], ["proof (chain)\npicking this:\n  f a - g a \\<le> (0::'b)\n  (0::'b) \\<le> f b - g b\n  continuous_on {a..b} (\\<lambda>a. f a - g a)", "obtain x where \"a \\<le> x\" \"x \\<le> b\" and \"?h x = 0\""], ["proof (prove)\nusing this:\n  f a - g a \\<le> (0::'b)\n  (0::'b) \\<le> f b - g b\n  continuous_on {a..b} (\\<lambda>a. f a - g a)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>a \\<le> x; x \\<le> b; f x - g x = (0::'b)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using IVT'[of \"?h\"] \\<open>a \\<le> b\\<close>"], ["proof (prove)\nusing this:\n  f a - g a \\<le> (0::'b)\n  (0::'b) \\<le> f b - g b\n  continuous_on {a..b} (\\<lambda>a. f a - g a)\n  \\<lbrakk>f ?a - g ?a \\<le> ?y; ?y \\<le> f ?b - g ?b; ?a \\<le> ?b;\n   continuous_on {?a..?b} (\\<lambda>a. f a - g a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<ge>?a. x \\<le> ?b \\<and> f x - g x = ?y\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>a \\<le> x; x \\<le> b; f x - g x = (0::'b)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a \\<le> x\n  x \\<le> b\n  f x - g x = (0::'b)\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{a..b}. f x = g x", "thus ?thesis"], ["proof (prove)\nusing this:\n  a \\<le> x\n  x \\<le> b\n  f x - g x = (0::'b)\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{a..b}. f x = g x", "using \\<open>a \\<le> b\\<close>"], ["proof (prove)\nusing this:\n  a \\<le> x\n  x \\<le> b\n  f x - g x = (0::'b)\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{a..b}. f x = g x", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>{a..b}. f x = g x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma IVT_two_functions_real_ivl:\n  fixes f :: \"real \\<Rightarrow> real\"\n  assumes conts: \"continuous_on {a--b} f\" \"continuous_on {a--b} g\"\n      and ahyp: \"f a < g a\" and bhyp: \"g b < f b \"\n    shows \"\\<exists>x\\<in>{a--b}. f x = g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{a--b}. f x = g x", "proof(cases \"a \\<le> b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<le> b \\<Longrightarrow> \\<exists>x\\<in>{a--b}. f x = g x\n 2. \\<not> a \\<le> b \\<Longrightarrow> \\<exists>x\\<in>{a--b}. f x = g x", "case True"], ["proof (state)\nthis:\n  a \\<le> b\n\ngoal (2 subgoals):\n 1. a \\<le> b \\<Longrightarrow> \\<exists>x\\<in>{a--b}. f x = g x\n 2. \\<not> a \\<le> b \\<Longrightarrow> \\<exists>x\\<in>{a--b}. f x = g x", "then"], ["proof (chain)\npicking this:\n  a \\<le> b", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{a--b}. f x = g x", "using IVT_two_functions assms"], ["proof (prove)\nusing this:\n  a \\<le> b\n  \\<lbrakk>continuous_on {?a..?b} ?f; continuous_on {?a..?b} ?g;\n   ?f ?a < ?g ?a; ?g ?b < ?f ?b; ?a \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<in>{?a..?b}. ?f x = ?g x\n  continuous_on {a--b} f\n  continuous_on {a--b} g\n  f a < g a\n  g b < f b\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{a--b}. f x = g x", "unfolding closed_segment_eq_real_ivl"], ["proof (prove)\nusing this:\n  a \\<le> b\n  \\<lbrakk>continuous_on {?a..?b} ?f; continuous_on {?a..?b} ?g;\n   ?f ?a < ?g ?a; ?g ?b < ?f ?b; ?a \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<in>{?a..?b}. ?f x = ?g x\n  continuous_on (if a \\<le> b then {a..b} else {b..a}) f\n  continuous_on (if a \\<le> b then {a..b} else {b..a}) g\n  f a < g a\n  g b < f b\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>if a \\<le> b then {a..b} else {b..a}. f x = g x", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>{a--b}. f x = g x\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> b \\<Longrightarrow> \\<exists>x\\<in>{a--b}. f x = g x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> a \\<le> b \\<Longrightarrow> \\<exists>x\\<in>{a--b}. f x = g x", "case False"], ["proof (state)\nthis:\n  \\<not> a \\<le> b\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> b \\<Longrightarrow> \\<exists>x\\<in>{a--b}. f x = g x", "hence \"a \\<ge> b\""], ["proof (prove)\nusing this:\n  \\<not> a \\<le> b\n\ngoal (1 subgoal):\n 1. b \\<le> a", "by auto"], ["proof (state)\nthis:\n  b \\<le> a\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> b \\<Longrightarrow> \\<exists>x\\<in>{a--b}. f x = g x", "hence \"continuous_on {b..a} f\" \"continuous_on {b..a} g\""], ["proof (prove)\nusing this:\n  b \\<le> a\n\ngoal (1 subgoal):\n 1. continuous_on {b..a} f &&& continuous_on {b..a} g", "using conts False"], ["proof (prove)\nusing this:\n  b \\<le> a\n  continuous_on {a--b} f\n  continuous_on {a--b} g\n  \\<not> a \\<le> b\n\ngoal (1 subgoal):\n 1. continuous_on {b..a} f &&& continuous_on {b..a} g", "unfolding closed_segment_eq_real_ivl"], ["proof (prove)\nusing this:\n  b \\<le> a\n  continuous_on (if a \\<le> b then {a..b} else {b..a}) f\n  continuous_on (if a \\<le> b then {a..b} else {b..a}) g\n  \\<not> a \\<le> b\n\ngoal (1 subgoal):\n 1. continuous_on {b..a} f &&& continuous_on {b..a} g", "by auto"], ["proof (state)\nthis:\n  continuous_on {b..a} f\n  continuous_on {b..a} g\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> b \\<Longrightarrow> \\<exists>x\\<in>{a--b}. f x = g x", "hence \"\\<exists>x\\<in>{b..a}. g x = f x\""], ["proof (prove)\nusing this:\n  continuous_on {b..a} f\n  continuous_on {b..a} g\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{b..a}. g x = f x", "using IVT_two_functions[of b a g f] assms(3,4) False"], ["proof (prove)\nusing this:\n  continuous_on {b..a} f\n  continuous_on {b..a} g\n  \\<lbrakk>continuous_on {b..a} g; continuous_on {b..a} f; g b < f b;\n   f a < g a; b \\<le> a\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<in>{b..a}. g x = f x\n  f a < g a\n  g b < f b\n  \\<not> a \\<le> b\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{b..a}. g x = f x", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>{b..a}. g x = f x\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> b \\<Longrightarrow> \\<exists>x\\<in>{a--b}. f x = g x", "then"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>{b..a}. g x = f x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>{b..a}. g x = f x\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{a--b}. f x = g x", "using \\<open>a \\<ge> b\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>{b..a}. g x = f x\n  b \\<le> a\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{a--b}. f x = g x", "unfolding closed_segment_eq_real_ivl"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>{b..a}. g x = f x\n  b \\<le> a\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>if a \\<le> b then {a..b} else {b..a}. f x = g x", "by auto force"], ["proof (state)\nthis:\n  \\<exists>x\\<in>{a--b}. f x = g x\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open> Filters \\<close>"], ["", "lemma eventually_at_within_mono:\n  assumes \"t \\<in> interior T\" and \"T \\<subseteq> S\"\n    and \"eventually P (at t within T)\"\n  shows \"eventually P (at t within S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually P (at t within S)", "by (meson assms eventually_within_interior interior_mono subsetD)"], ["", "lemma netlimit_at_within_mono:\n  fixes t::\"'a::{perfect_space,t2_space}\"\n  assumes \"t \\<in> interior T\" and \"T \\<subseteq> S\"\n  shows \"netlimit (at t within S) = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. netlimit (at t within S) = t", "using assms(1) interior_mono[OF \\<open>T \\<subseteq> S\\<close>] netlimit_within_interior"], ["proof (prove)\nusing this:\n  t \\<in> interior T\n  interior T \\<subseteq> interior S\n  ?x \\<in> interior ?S \\<Longrightarrow> netlimit (at ?x within ?S) = ?x\n\ngoal (1 subgoal):\n 1. netlimit (at t within S) = t", "by auto"], ["", "lemma has_derivative_at_within_mono:\n  assumes \"(t::real) \\<in> interior T\" and \"T \\<subseteq> S\"\n    and \"D f \\<mapsto> f' at t within T\"\n  shows \"D f \\<mapsto> f' at t within S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D f \\<mapsto> f' at t within S", "using assms(3)"], ["proof (prove)\nusing this:\n  D f \\<mapsto> f' at t within T\n\ngoal (1 subgoal):\n 1. D f \\<mapsto> f' at t within S", "apply(unfold has_derivative_def tendsto_iff, safe)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>D f \\<mapsto> f' at t within T; bounded_linear f';\n        \\<forall>e>0.\n           \\<forall>\\<^sub>F x in at t within T.\n              dist\n               ((f x - f (netlimit (at t within T)) -\n                 f' (x - netlimit (at t within T))) /\\<^sub>R\n                (\\<parallel>x - netlimit (at t within T)\\<parallel>))\n               (0::'a)\n              < e;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<^sub>F x in at t within S.\n                            dist\n                             ((f x - f (netlimit (at t within S)) -\n                               f' (x - netlimit (at t within S))) /\\<^sub>R\n                              (\\<parallel>x -\n    netlimit (at t within S)\\<parallel>))\n                             (0::'a)\n                            < e", "unfolding netlimit_at_within_mono[OF assms(1,2)] netlimit_within_interior[OF assms(1)]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>D f \\<mapsto> f' at t within T; bounded_linear f';\n        \\<forall>e>0.\n           \\<forall>\\<^sub>F x in at t within T.\n              dist\n               ((f x - f t - f' (x - t)) /\\<^sub>R\n                (\\<parallel>x - t\\<parallel>))\n               (0::'a)\n              < e;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<^sub>F x in at t within S.\n                            dist\n                             ((f x - f t - f' (x - t)) /\\<^sub>R\n                              (\\<parallel>x - t\\<parallel>))\n                             (0::'a)\n                            < e", "by (rule eventually_at_within_mono[OF assms(1,2)]) simp"], ["", "lemma eventually_all_finite2:\n  fixes P :: \"('a::finite) \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes h:\"\\<forall>i. eventually (P i) F\"\n  shows \"eventually (\\<lambda>x. \\<forall>i. P i x) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. \\<forall>i. P i x", "proof(unfold eventually_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. Rep_filter F (\\<lambda>x. \\<forall>i. P i x)", "let ?F = \"Rep_filter F\""], ["proof (state)\ngoal (1 subgoal):\n 1. Rep_filter F (\\<lambda>x. \\<forall>i. P i x)", "have obs: \"\\<forall>i. ?F (P i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i. Rep_filter F (P i)", "using h"], ["proof (prove)\nusing this:\n  \\<forall>i. eventually (P i) F\n\ngoal (1 subgoal):\n 1. \\<forall>i. Rep_filter F (P i)", "by auto"], ["proof (state)\nthis:\n  \\<forall>i. Rep_filter F (P i)\n\ngoal (1 subgoal):\n 1. Rep_filter F (\\<lambda>x. \\<forall>i. P i x)", "have \"?F (\\<lambda>x. \\<forall>i \\<in> UNIV. P i x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_filter F (\\<lambda>x. \\<forall>i\\<in>UNIV. P i x)", "apply(rule finite_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. finite UNIV\n 2. Rep_filter F (\\<lambda>x. \\<forall>i\\<in>{}. P i x)\n 3. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        Rep_filter F (\\<lambda>x. \\<forall>i\\<in>Fa. P i x)\\<rbrakk>\n       \\<Longrightarrow> Rep_filter F\n                          (\\<lambda>xa. \\<forall>i\\<in>insert x Fa. P i xa)", "by(auto intro: eventually_conj simp: obs h)"], ["proof (state)\nthis:\n  Rep_filter F (\\<lambda>x. \\<forall>i\\<in>UNIV. P i x)\n\ngoal (1 subgoal):\n 1. Rep_filter F (\\<lambda>x. \\<forall>i. P i x)", "thus \"?F (\\<lambda>x. \\<forall>i. P i x)\""], ["proof (prove)\nusing this:\n  Rep_filter F (\\<lambda>x. \\<forall>i\\<in>UNIV. P i x)\n\ngoal (1 subgoal):\n 1. Rep_filter F (\\<lambda>x. \\<forall>i. P i x)", "by simp"], ["proof (state)\nthis:\n  Rep_filter F (\\<lambda>x. \\<forall>i. P i x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma eventually_all_finite_mono:\n  fixes P :: \"('a::finite) \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes h1: \"\\<forall>i. eventually (P i) F\"\n      and h2: \"\\<forall>x. (\\<forall>i. (P i x)) \\<longrightarrow> Q x\"\n  shows \"eventually Q F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually Q F", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. eventually Q F", "have \"eventually (\\<lambda>x. \\<forall>i. P i x) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. \\<forall>i. P i x", "using h1 eventually_all_finite2"], ["proof (prove)\nusing this:\n  \\<forall>i. eventually (P i) F\n  \\<forall>i. eventually (?P i) ?F \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in ?F. \\<forall>i. ?P i x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. \\<forall>i. P i x", "by blast"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in F. \\<forall>i. P i x\n\ngoal (1 subgoal):\n 1. eventually Q F", "thus \"eventually Q F\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in F. \\<forall>i. P i x\n\ngoal (1 subgoal):\n 1. eventually Q F", "unfolding eventually_def"], ["proof (prove)\nusing this:\n  Rep_filter F (\\<lambda>x. \\<forall>i. P i x)\n\ngoal (1 subgoal):\n 1. Rep_filter F Q", "using h2 eventually_mono"], ["proof (prove)\nusing this:\n  Rep_filter F (\\<lambda>x. \\<forall>i. P i x)\n  \\<forall>x. (\\<forall>i. P i x) \\<longrightarrow> Q x\n  \\<lbrakk>eventually ?P ?F; \\<And>x. ?P x \\<Longrightarrow> ?Q x\\<rbrakk>\n  \\<Longrightarrow> eventually ?Q ?F\n\ngoal (1 subgoal):\n 1. Rep_filter F Q", "by auto"], ["proof (state)\nthis:\n  eventually Q F\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open> Multivariable derivatives \\<close>"], ["", "definition vec_upd :: \"('a^'b) \\<Rightarrow> 'b \\<Rightarrow> 'a \\<Rightarrow> 'a^'b\"\n  where \"vec_upd s i a = (\\<chi> j. ((($) s)(i := a)) j)\""], ["", "lemma vec_upd_eq: \"vec_upd s i a = (\\<chi> j. if j = i then a else s$j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_upd s i a = (\\<chi>j. if j = i then a else s $ j)", "by (simp add: vec_upd_def)"], ["", "lemma frechet_vec_lambda:\n  fixes f::\"real \\<Rightarrow> ('a::banach)^('m::finite)\" and x::real and T::\"real set\"\n  defines \"x\\<^sub>0 \\<equiv> netlimit (at x within T)\" and \"m \\<equiv> real CARD('m)\"\n  assumes \"\\<forall>i. ((\\<lambda>y. (f y $ i - f x\\<^sub>0 $ i - (y - x\\<^sub>0) *\\<^sub>R f' x $ i) /\\<^sub>R (\\<parallel>y - x\\<^sub>0\\<parallel>)) \\<longlongrightarrow> 0) (at x within T)\"\n  shows \"((\\<lambda>y. (f y - f x\\<^sub>0 - (y - x\\<^sub>0) *\\<^sub>R f' x) /\\<^sub>R (\\<parallel>y - x\\<^sub>0\\<parallel>)) \\<longlongrightarrow> 0) (at x within T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (f y - f x\\<^sub>0 - (y - x\\<^sub>0) *\\<^sub>R f' x) /\\<^sub>R\n         (\\<parallel>y - x\\<^sub>0\\<parallel>)) \\<longlongrightarrow>\n     0)\n     (at x within T)", "proof(simp add: tendsto_iff, clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within T.\n          inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n          (\\<parallel>f xa - f x\\<^sub>0 -\n                      (xa - x\\<^sub>0) *\\<^sub>R f' x\\<parallel>)\n          < e", "fix \\<epsilon>::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within T.\n          inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n          (\\<parallel>f xa - f x\\<^sub>0 -\n                      (xa - x\\<^sub>0) *\\<^sub>R f' x\\<parallel>)\n          < e", "assume \"0 < \\<epsilon>\""], ["proof (state)\nthis:\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within T.\n          inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n          (\\<parallel>f xa - f x\\<^sub>0 -\n                      (xa - x\\<^sub>0) *\\<^sub>R f' x\\<parallel>)\n          < e", "let \"?\\<Delta>\" = \"\\<lambda>y. y - x\\<^sub>0\" and \"?\\<Delta>f\" = \"\\<lambda>y. f y - f x\\<^sub>0\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within T.\n          inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n          (\\<parallel>f xa - f x\\<^sub>0 -\n                      (xa - x\\<^sub>0) *\\<^sub>R f' x\\<parallel>)\n          < e", "let \"?P\" = \"\\<lambda>i e y. inverse \\<bar>?\\<Delta> y\\<bar> * (\\<parallel>f y $ i - f x\\<^sub>0 $ i - ?\\<Delta> y *\\<^sub>R f' x $ i\\<parallel>) < e\"\n    and \"?Q\" = \"\\<lambda>y. inverse \\<bar>?\\<Delta> y\\<bar> * (\\<parallel>?\\<Delta>f y - ?\\<Delta> y *\\<^sub>R f' x\\<parallel>) < \\<epsilon>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within T.\n          inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n          (\\<parallel>f xa - f x\\<^sub>0 -\n                      (xa - x\\<^sub>0) *\\<^sub>R f' x\\<parallel>)\n          < e", "have \"0 < \\<epsilon> / sqrt m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<epsilon> / sqrt m", "using \\<open>0 < \\<epsilon>\\<close>"], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. 0 < \\<epsilon> / sqrt m", "by (auto simp: assms)"], ["proof (state)\nthis:\n  0 < \\<epsilon> / sqrt m\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within T.\n          inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n          (\\<parallel>f xa - f x\\<^sub>0 -\n                      (xa - x\\<^sub>0) *\\<^sub>R f' x\\<parallel>)\n          < e", "hence \"\\<forall>i. eventually (\\<lambda>y. ?P i (\\<epsilon> / sqrt m) y) (at x within T)\""], ["proof (prove)\nusing this:\n  0 < \\<epsilon> / sqrt m\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<forall>\\<^sub>F y in at x within T.\n          inverse \\<bar>y - x\\<^sub>0\\<bar> *\n          (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                      (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n          < \\<epsilon> / sqrt m", "using assms"], ["proof (prove)\nusing this:\n  0 < \\<epsilon> / sqrt m\n  x\\<^sub>0 \\<equiv> netlimit (at x within T)\n  m \\<equiv> real CARD('m)\n  \\<forall>i.\n     ((\\<lambda>y.\n          (f y $ i - f x\\<^sub>0 $ i -\n           (y - x\\<^sub>0) *\\<^sub>R f' x $ i) /\\<^sub>R\n          (\\<parallel>y - x\\<^sub>0\\<parallel>)) \\<longlongrightarrow>\n      (0::'a))\n      (at x within T)\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<forall>\\<^sub>F y in at x within T.\n          inverse \\<bar>y - x\\<^sub>0\\<bar> *\n          (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                      (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n          < \\<epsilon> / sqrt m", "unfolding tendsto_iff"], ["proof (prove)\nusing this:\n  0 < \\<epsilon> / sqrt m\n  x\\<^sub>0 \\<equiv> netlimit (at x within T)\n  m \\<equiv> real CARD('m)\n  \\<forall>i e.\n     0 < e \\<longrightarrow>\n     (\\<forall>\\<^sub>F xa in at x within T.\n         dist\n          ((f xa $ i - f x\\<^sub>0 $ i -\n            (xa - x\\<^sub>0) *\\<^sub>R f' x $ i) /\\<^sub>R\n           (\\<parallel>xa - x\\<^sub>0\\<parallel>))\n          (0::'a)\n         < e)\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<forall>\\<^sub>F y in at x within T.\n          inverse \\<bar>y - x\\<^sub>0\\<bar> *\n          (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                      (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n          < \\<epsilon> / sqrt m", "by simp"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<forall>\\<^sub>F y in at x within T.\n        inverse \\<bar>y - x\\<^sub>0\\<bar> *\n        (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                    (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n        < \\<epsilon> / sqrt m\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within T.\n          inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n          (\\<parallel>f xa - f x\\<^sub>0 -\n                      (xa - x\\<^sub>0) *\\<^sub>R f' x\\<parallel>)\n          < e", "thus \"eventually ?Q (at x within T)\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     \\<forall>\\<^sub>F y in at x within T.\n        inverse \\<bar>y - x\\<^sub>0\\<bar> *\n        (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                    (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n        < \\<epsilon> / sqrt m\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x within T.\n       inverse \\<bar>y - x\\<^sub>0\\<bar> *\n       (\\<parallel>f y - f x\\<^sub>0 -\n                   (y - x\\<^sub>0) *\\<^sub>R f' x\\<parallel>)\n       < \\<epsilon>", "proof(rule eventually_all_finite_mono, simp add: norm_vec_def L2_set_def, clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "fix t::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "let ?c = \"inverse \\<bar>t - x\\<^sub>0\\<bar>\" and \"?u t\" = \"\\<lambda>i. f t $ i - f x\\<^sub>0 $ i - ?\\<Delta> t *\\<^sub>R f' x $ i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "assume hyp:\"\\<forall>i. ?c * (\\<parallel>?u t i\\<parallel>) < \\<epsilon> / sqrt m\""], ["proof (state)\nthis:\n  \\<forall>i.\n     inverse \\<bar>t - x\\<^sub>0\\<bar> *\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n     < \\<epsilon> / sqrt m\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "hence \"\\<forall>i. (?c *\\<^sub>R (\\<parallel>?u t i\\<parallel>))\\<^sup>2 < (\\<epsilon> / sqrt m)\\<^sup>2\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     inverse \\<bar>t - x\\<^sub>0\\<bar> *\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n     < \\<epsilon> / sqrt m\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       ((\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                    (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>) /\\<^sub>R\n        \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2\n       < (\\<epsilon> / sqrt m)\\<^sup>2", "by (simp add: power_strict_mono)"], ["proof (state)\nthis:\n  \\<forall>i.\n     ((\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                  (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>) /\\<^sub>R\n      \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2\n     < (\\<epsilon> / sqrt m)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "hence \"\\<forall>i. ?c\\<^sup>2 * ((\\<parallel>?u t i\\<parallel>))\\<^sup>2 < \\<epsilon>\\<^sup>2 / m\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     ((\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                  (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>) /\\<^sub>R\n      \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2\n     < (\\<epsilon> / sqrt m)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n       (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                   (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2\n       < \\<epsilon>\\<^sup>2 / m", "by (simp add: power_mult_distrib power_divide assms)"], ["proof (state)\nthis:\n  \\<forall>i.\n     (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2\n     < \\<epsilon>\\<^sup>2 / m\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "hence \"\\<forall>i. ?c\\<^sup>2 * ((\\<parallel>?u t i\\<parallel>))\\<^sup>2 < \\<epsilon>\\<^sup>2 / m\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2\n     < \\<epsilon>\\<^sup>2 / m\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n       (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                   (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2\n       < \\<epsilon>\\<^sup>2 / m", "by (auto simp: assms)"], ["proof (state)\nthis:\n  \\<forall>i.\n     (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2\n     < \\<epsilon>\\<^sup>2 / m\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "also"], ["proof (state)\nthis:\n  \\<forall>i.\n     (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2\n     < \\<epsilon>\\<^sup>2 / m\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "have \"({}::'m set) \\<noteq> UNIV \\<and> finite (UNIV :: 'm set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<noteq> UNIV \\<and> finite UNIV", "by simp"], ["proof (state)\nthis:\n  {} \\<noteq> UNIV \\<and> finite UNIV\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2\n     < \\<epsilon>\\<^sup>2 / m\n  {} \\<noteq> UNIV \\<and> finite UNIV", "have \"(\\<Sum>i\\<in>UNIV. ?c\\<^sup>2 * ((\\<parallel>?u t i\\<parallel>))\\<^sup>2) < (\\<Sum>(i::'m)\\<in>UNIV. \\<epsilon>\\<^sup>2 / m)\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2\n     < \\<epsilon>\\<^sup>2 / m\n  {} \\<noteq> UNIV \\<and> finite UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>UNIV.\n       (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n       (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                   (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n    < (\\<Sum>i\\<in>UNIV. \\<epsilon>\\<^sup>2 / m)", "by (metis (lifting) sum_strict_mono)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>UNIV.\n     (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n  < (\\<Sum>i\\<in>UNIV. \\<epsilon>\\<^sup>2 / m)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>UNIV.\n     (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n  < (\\<Sum>i\\<in>UNIV. \\<epsilon>\\<^sup>2 / m)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "have \"?c\\<^sup>2 * (\\<Sum>i\\<in>UNIV. (\\<parallel>?u t i\\<parallel>)\\<^sup>2) = (\\<Sum>i\\<in>UNIV. ?c\\<^sup>2 *  (\\<parallel>?u t i\\<parallel>)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n    (\\<Sum>i\\<in>UNIV.\n       (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                   (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2) =\n    (\\<Sum>i\\<in>UNIV.\n       (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n       (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                   (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)", "using sum_distrib_left"], ["proof (prove)\nusing this:\n  ?r * sum ?f ?A = (\\<Sum>n\\<in>?A. ?r * ?f n)\n\ngoal (1 subgoal):\n 1. (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n    (\\<Sum>i\\<in>UNIV.\n       (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                   (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2) =\n    (\\<Sum>i\\<in>UNIV.\n       (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n       (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                   (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)", "by blast"], ["proof (state)\nthis:\n  (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n  (\\<Sum>i\\<in>UNIV.\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2) =\n  (\\<Sum>i\\<in>UNIV.\n     (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>i\\<in>UNIV.\n     (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n  < (\\<Sum>i\\<in>UNIV. \\<epsilon>\\<^sup>2 / m)\n  (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n  (\\<Sum>i\\<in>UNIV.\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2) =\n  (\\<Sum>i\\<in>UNIV.\n     (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)", "have \"?c\\<^sup>2 * (\\<Sum>i\\<in>UNIV. (\\<parallel>?u t i\\<parallel>)\\<^sup>2) < \\<epsilon>\\<^sup>2\""], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>UNIV.\n     (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n  < (\\<Sum>i\\<in>UNIV. \\<epsilon>\\<^sup>2 / m)\n  (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n  (\\<Sum>i\\<in>UNIV.\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2) =\n  (\\<Sum>i\\<in>UNIV.\n     (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n    (\\<Sum>i\\<in>UNIV.\n       (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                   (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n    < \\<epsilon>\\<^sup>2", "by (simp add: assms)"], ["proof (state)\nthis:\n  (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n  (\\<Sum>i\\<in>UNIV.\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n  < \\<epsilon>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "hence \"sqrt (?c\\<^sup>2 * (\\<Sum>i\\<in>UNIV. (\\<parallel>?u t i\\<parallel>)\\<^sup>2)) < sqrt (\\<epsilon>\\<^sup>2)\""], ["proof (prove)\nusing this:\n  (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n  (\\<Sum>i\\<in>UNIV.\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n  < \\<epsilon>\\<^sup>2\n\ngoal (1 subgoal):\n 1. sqrt\n     ((inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n      (\\<Sum>i\\<in>UNIV.\n         (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                     (t - x\\<^sub>0) *\\<^sub>R\n                     f' x $ i\\<parallel>)\\<^sup>2))\n    < sqrt (\\<epsilon>\\<^sup>2)", "using real_sqrt_less_iff"], ["proof (prove)\nusing this:\n  (inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n  (\\<Sum>i\\<in>UNIV.\n     (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                 (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n  < \\<epsilon>\\<^sup>2\n  (sqrt ?x < sqrt ?y) = (?x < ?y)\n\ngoal (1 subgoal):\n 1. sqrt\n     ((inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n      (\\<Sum>i\\<in>UNIV.\n         (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                     (t - x\\<^sub>0) *\\<^sub>R\n                     f' x $ i\\<parallel>)\\<^sup>2))\n    < sqrt (\\<epsilon>\\<^sup>2)", "by blast"], ["proof (state)\nthis:\n  sqrt\n   ((inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n    (\\<Sum>i\\<in>UNIV.\n       (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                   (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2))\n  < sqrt (\\<epsilon>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "also"], ["proof (state)\nthis:\n  sqrt\n   ((inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n    (\\<Sum>i\\<in>UNIV.\n       (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                   (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2))\n  < sqrt (\\<epsilon>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "have \"... = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (\\<epsilon>\\<^sup>2) = \\<epsilon>", "using \\<open>0 < \\<epsilon>\\<close>"], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. sqrt (\\<epsilon>\\<^sup>2) = \\<epsilon>", "by auto"], ["proof (state)\nthis:\n  sqrt (\\<epsilon>\\<^sup>2) = \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "moreover"], ["proof (state)\nthis:\n  sqrt (\\<epsilon>\\<^sup>2) = \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "have \"?c * sqrt (\\<Sum>i\\<in>UNIV. (\\<parallel>?u t i\\<parallel>)\\<^sup>2) = sqrt (?c\\<^sup>2 * (\\<Sum>i\\<in>UNIV. (\\<parallel>?u t i\\<parallel>)\\<^sup>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse \\<bar>t - x\\<^sub>0\\<bar> *\n    sqrt\n     (\\<Sum>i\\<in>UNIV.\n        (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                    (t - x\\<^sub>0) *\\<^sub>R\n                    f' x $ i\\<parallel>)\\<^sup>2) =\n    sqrt\n     ((inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n      (\\<Sum>i\\<in>UNIV.\n         (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                     (t - x\\<^sub>0) *\\<^sub>R\n                     f' x $ i\\<parallel>)\\<^sup>2))", "by (simp add: real_sqrt_mult)"], ["proof (state)\nthis:\n  inverse \\<bar>t - x\\<^sub>0\\<bar> *\n  sqrt\n   (\\<Sum>i\\<in>UNIV.\n      (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                  (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2) =\n  sqrt\n   ((inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n    (\\<Sum>i\\<in>UNIV.\n       (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                   (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>\\<^sub>F y in at x within T.\n                      inverse \\<bar>y - x\\<^sub>0\\<bar> *\n                      (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                                  (y - x\\<^sub>0) *\\<^sub>R\n                                  f' x $ i\\<parallel>)\n                      < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           \\<forall>\\<^sub>F y in at x within T.\n              inverse \\<bar>y - x\\<^sub>0\\<bar> *\n              (\\<parallel>f y $ i - f x\\<^sub>0 $ i -\n                          (y - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n              < \\<epsilon> / sqrt m;\n        \\<forall>i.\n           inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n           (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n                       (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\n           < \\<epsilon> / sqrt m\\<rbrakk>\n       \\<Longrightarrow> inverse \\<bar>xa - x\\<^sub>0\\<bar> *\n                         sqrt\n                          (\\<Sum>i\\<in>UNIV.\n                             (\\<parallel>f xa $ i - f x\\<^sub>0 $ i -\n   (xa - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n                         < \\<epsilon>", "ultimately"], ["proof (chain)\npicking this:\n  sqrt\n   ((inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n    (\\<Sum>i\\<in>UNIV.\n       (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                   (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2))\n  < sqrt (\\<epsilon>\\<^sup>2)\n  sqrt (\\<epsilon>\\<^sup>2) = \\<epsilon>\n  inverse \\<bar>t - x\\<^sub>0\\<bar> *\n  sqrt\n   (\\<Sum>i\\<in>UNIV.\n      (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                  (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2) =\n  sqrt\n   ((inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n    (\\<Sum>i\\<in>UNIV.\n       (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                   (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2))", "show \"?c * sqrt (\\<Sum>i\\<in>UNIV. (\\<parallel>?u t i\\<parallel>)\\<^sup>2) < \\<epsilon>\""], ["proof (prove)\nusing this:\n  sqrt\n   ((inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n    (\\<Sum>i\\<in>UNIV.\n       (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                   (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2))\n  < sqrt (\\<epsilon>\\<^sup>2)\n  sqrt (\\<epsilon>\\<^sup>2) = \\<epsilon>\n  inverse \\<bar>t - x\\<^sub>0\\<bar> *\n  sqrt\n   (\\<Sum>i\\<in>UNIV.\n      (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                  (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2) =\n  sqrt\n   ((inverse \\<bar>t - x\\<^sub>0\\<bar>)\\<^sup>2 *\n    (\\<Sum>i\\<in>UNIV.\n       (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                   (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. inverse \\<bar>t - x\\<^sub>0\\<bar> *\n    sqrt\n     (\\<Sum>i\\<in>UNIV.\n        (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                    (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n    < \\<epsilon>", "by simp"], ["proof (state)\nthis:\n  inverse \\<bar>t - x\\<^sub>0\\<bar> *\n  sqrt\n   (\\<Sum>i\\<in>UNIV.\n      (\\<parallel>f t $ i - f x\\<^sub>0 $ i -\n                  (t - x\\<^sub>0) *\\<^sub>R f' x $ i\\<parallel>)\\<^sup>2)\n  < \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x within T.\n     inverse \\<bar>y - x\\<^sub>0\\<bar> *\n     (\\<parallel>f y - f x\\<^sub>0 -\n                 (y - x\\<^sub>0) *\\<^sub>R f' x\\<parallel>)\n     < \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tendsto_norm_bound:\n  \"\\<forall>x. \\<parallel>G x - L\\<parallel> \\<le> \\<parallel>F x - L\\<parallel> \\<Longrightarrow> (F \\<longlongrightarrow> L) net \\<Longrightarrow> (G \\<longlongrightarrow> L) net\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x.\n                \\<parallel>G x - L\\<parallel>\n                \\<le> \\<parallel>F x - L\\<parallel>;\n     (F \\<longlongrightarrow> L) net\\<rbrakk>\n    \\<Longrightarrow> (G \\<longlongrightarrow> L) net", "apply(unfold tendsto_iff dist_norm, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>\\<forall>x.\n                   \\<parallel>G x - L\\<parallel>\n                   \\<le> \\<parallel>F x - L\\<parallel>;\n        \\<forall>e>0.\n           \\<forall>\\<^sub>F x in net. \\<parallel>F x - L\\<parallel> < e;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<^sub>F x in net.\n                            \\<parallel>G x - L\\<parallel> < e", "apply(rule_tac P=\"\\<lambda>x. \\<parallel>F x - L\\<parallel> < e\" in eventually_mono, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e x.\n       \\<lbrakk>\\<forall>x.\n                   \\<parallel>G x - L\\<parallel>\n                   \\<le> \\<parallel>F x - L\\<parallel>;\n        \\<forall>e>0.\n           \\<forall>\\<^sub>F x in net. \\<parallel>F x - L\\<parallel> < e;\n        0 < e; \\<parallel>F x - L\\<parallel> < e\\<rbrakk>\n       \\<Longrightarrow> \\<parallel>G x - L\\<parallel> < e", "by (rename_tac e z) (erule_tac x=z in allE, simp)"], ["", "lemma tendsto_zero_norm_bound:\n  \"\\<forall>x. \\<parallel>G x\\<parallel> \\<le> \\<parallel>F x\\<parallel> \\<Longrightarrow> (F \\<longlongrightarrow> 0) net \\<Longrightarrow> (G \\<longlongrightarrow> 0) net\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x.\n                \\<parallel>G x\\<parallel> \\<le> \\<parallel>F x\\<parallel>;\n     (F \\<longlongrightarrow> (0::'c)) net\\<rbrakk>\n    \\<Longrightarrow> (G \\<longlongrightarrow> (0::'b)) net", "apply(unfold tendsto_iff dist_norm, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>\\<forall>x.\n                   \\<parallel>G x\\<parallel>\n                   \\<le> \\<parallel>F x\\<parallel>;\n        \\<forall>e>0.\n           \\<forall>\\<^sub>F x in net. \\<parallel>F x\\<parallel> < e;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<^sub>F x in net.\n                            \\<parallel>G x\\<parallel> < e", "apply(rule_tac P=\"\\<lambda>x. \\<parallel>F x\\<parallel> < e\" in eventually_mono, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e x.\n       \\<lbrakk>\\<forall>x.\n                   \\<parallel>G x\\<parallel>\n                   \\<le> \\<parallel>F x\\<parallel>;\n        \\<forall>e>0.\n           \\<forall>\\<^sub>F x in net. \\<parallel>F x\\<parallel> < e;\n        0 < e; \\<parallel>F x\\<parallel> < e\\<rbrakk>\n       \\<Longrightarrow> \\<parallel>G x\\<parallel> < e", "by (rename_tac e z) (erule_tac x=z in allE, simp)"], ["", "lemma frechet_vec_nth:\n  fixes f::\"real \\<Rightarrow> ('a::real_normed_vector)^'m\"\n  assumes \"((\\<lambda>x. (f x - f x\\<^sub>0 - (x - x\\<^sub>0) *\\<^sub>R f' t) /\\<^sub>R (\\<parallel>x - x\\<^sub>0\\<parallel>)) \\<longlongrightarrow> 0) (at t within T)\"\n  shows \"((\\<lambda>x. (f x $ i - f x\\<^sub>0 $ i - (x - x\\<^sub>0) *\\<^sub>R f' t $ i) /\\<^sub>R (\\<parallel>x - x\\<^sub>0\\<parallel>)) \\<longlongrightarrow> 0) (at t within T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         (f x $ i - f x\\<^sub>0 $ i -\n          (x - x\\<^sub>0) *\\<^sub>R f' t $ i) /\\<^sub>R\n         (\\<parallel>x - x\\<^sub>0\\<parallel>)) \\<longlongrightarrow>\n     (0::'a))\n     (at t within T)", "apply(rule_tac F=\"(\\<lambda>x. (f x - f x\\<^sub>0 - (x - x\\<^sub>0) *\\<^sub>R f' t) /\\<^sub>R (\\<parallel>x - x\\<^sub>0\\<parallel>))\" in tendsto_zero_norm_bound)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>x.\n       \\<parallel>(f x $ i - f x\\<^sub>0 $ i -\n                   (x - x\\<^sub>0) *\\<^sub>R f' t $ i) /\\<^sub>R\n                  (\\<parallel>x - x\\<^sub>0\\<parallel>)\\<parallel>\n       \\<le> \\<parallel>(f x - f x\\<^sub>0 -\n                         (x - x\\<^sub>0) *\\<^sub>R f' t) /\\<^sub>R\n                        (\\<parallel>x - x\\<^sub>0\\<parallel>)\\<parallel>\n 2. ((\\<lambda>x.\n         (f x - f x\\<^sub>0 - (x - x\\<^sub>0) *\\<^sub>R f' t) /\\<^sub>R\n         (\\<parallel>x - x\\<^sub>0\\<parallel>)) \\<longlongrightarrow>\n     0)\n     (at t within T)", "apply(clarsimp, rule mult_left_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<parallel>f x $ i - f x\\<^sub>0 $ i -\n                  (x - x\\<^sub>0) *\\<^sub>R f' t $ i\\<parallel>\n       \\<le> \\<parallel>f x - f x\\<^sub>0 -\n                        (x - x\\<^sub>0) *\\<^sub>R f' t\\<parallel>\n 2. \\<And>x. 0 \\<le> inverse \\<bar>x - x\\<^sub>0\\<bar>\n 3. ((\\<lambda>x.\n         (f x - f x\\<^sub>0 - (x - x\\<^sub>0) *\\<^sub>R f' t) /\\<^sub>R\n         (\\<parallel>x - x\\<^sub>0\\<parallel>)) \\<longlongrightarrow>\n     0)\n     (at t within T)", "apply (metis Finite_Cartesian_Product.norm_nth_le vector_minus_component vector_scaleR_component)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. 0 \\<le> inverse \\<bar>x - x\\<^sub>0\\<bar>\n 2. ((\\<lambda>x.\n         (f x - f x\\<^sub>0 - (x - x\\<^sub>0) *\\<^sub>R f' t) /\\<^sub>R\n         (\\<parallel>x - x\\<^sub>0\\<parallel>)) \\<longlongrightarrow>\n     0)\n     (at t within T)", "using assms"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       (f x - f x\\<^sub>0 - (x - x\\<^sub>0) *\\<^sub>R f' t) /\\<^sub>R\n       (\\<parallel>x - x\\<^sub>0\\<parallel>)) \\<longlongrightarrow>\n   0)\n   (at t within T)\n\ngoal (2 subgoals):\n 1. \\<And>x. 0 \\<le> inverse \\<bar>x - x\\<^sub>0\\<bar>\n 2. ((\\<lambda>x.\n         (f x - f x\\<^sub>0 - (x - x\\<^sub>0) *\\<^sub>R f' t) /\\<^sub>R\n         (\\<parallel>x - x\\<^sub>0\\<parallel>)) \\<longlongrightarrow>\n     0)\n     (at t within T)", "by simp_all"], ["", "lemma has_derivative_vec_lambda:\n  fixes f::\"real \\<Rightarrow> ('a::banach)^('n::finite)\"\n  assumes \"\\<forall>i. D (\\<lambda>t. f t $ i) \\<mapsto> (\\<lambda> h. h *\\<^sub>R f' x $ i) (at x within T)\"\n  shows \"D f \\<mapsto> (\\<lambda>h. h *\\<^sub>R f' x) at x within T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D f \\<mapsto> (\\<lambda>h. h *\\<^sub>R f' x) at x within T", "apply(unfold has_derivative_def, safe)"], ["proof (prove)\ngoal (2 subgoals):\n 1. bounded_linear (\\<lambda>h. h *\\<^sub>R f' x)\n 2. ((\\<lambda>y.\n         (f y - f (netlimit (at x within T)) -\n          (y - netlimit (at x within T)) *\\<^sub>R f' x) /\\<^sub>R\n         (\\<parallel>y -\n                     netlimit\n                      (at x within T)\\<parallel>)) \\<longlongrightarrow>\n     0)\n     (at x within T)", "apply(force simp: bounded_linear_def bounded_linear_axioms_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (f y - f (netlimit (at x within T)) -\n          (y - netlimit (at x within T)) *\\<^sub>R f' x) /\\<^sub>R\n         (\\<parallel>y -\n                     netlimit\n                      (at x within T)\\<parallel>)) \\<longlongrightarrow>\n     0)\n     (at x within T)", "using assms frechet_vec_lambda[of x T ]"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     D (\\<lambda>t. f t $ i) \\<mapsto> (\\<lambda>h. h *\\<^sub>R f' x $ i)\n      at x within T\n  \\<forall>i.\n     ((\\<lambda>y.\n          (?f y $ i - ?f (netlimit (at x within T)) $ i -\n           (y - netlimit (at x within T)) *\\<^sub>R ?f' x $ i) /\\<^sub>R\n          (\\<parallel>y -\n                      netlimit\n                       (at x within T)\\<parallel>)) \\<longlongrightarrow>\n      (0::?'a))\n      (at x within T) \\<Longrightarrow>\n  ((\\<lambda>y.\n       (?f y - ?f (netlimit (at x within T)) -\n        (y - netlimit (at x within T)) *\\<^sub>R ?f' x) /\\<^sub>R\n       (\\<parallel>y -\n                   netlimit\n                    (at x within T)\\<parallel>)) \\<longlongrightarrow>\n   0)\n   (at x within T)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (f y - f (netlimit (at x within T)) -\n          (y - netlimit (at x within T)) *\\<^sub>R f' x) /\\<^sub>R\n         (\\<parallel>y -\n                     netlimit\n                      (at x within T)\\<parallel>)) \\<longlongrightarrow>\n     0)\n     (at x within T)", "unfolding has_derivative_def"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     bounded_linear (\\<lambda>h. h *\\<^sub>R f' x $ i) \\<and>\n     ((\\<lambda>y.\n          (f y $ i - f (netlimit (at x within T)) $ i -\n           (y - netlimit (at x within T)) *\\<^sub>R f' x $ i) /\\<^sub>R\n          (\\<parallel>y -\n                      netlimit\n                       (at x within T)\\<parallel>)) \\<longlongrightarrow>\n      (0::'a))\n      (at x within T)\n  \\<forall>i.\n     ((\\<lambda>y.\n          (?f y $ i - ?f (netlimit (at x within T)) $ i -\n           (y - netlimit (at x within T)) *\\<^sub>R ?f' x $ i) /\\<^sub>R\n          (\\<parallel>y -\n                      netlimit\n                       (at x within T)\\<parallel>)) \\<longlongrightarrow>\n      (0::?'a))\n      (at x within T) \\<Longrightarrow>\n  ((\\<lambda>y.\n       (?f y - ?f (netlimit (at x within T)) -\n        (y - netlimit (at x within T)) *\\<^sub>R ?f' x) /\\<^sub>R\n       (\\<parallel>y -\n                   netlimit\n                    (at x within T)\\<parallel>)) \\<longlongrightarrow>\n   0)\n   (at x within T)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (f y - f (netlimit (at x within T)) -\n          (y - netlimit (at x within T)) *\\<^sub>R f' x) /\\<^sub>R\n         (\\<parallel>y -\n                     netlimit\n                      (at x within T)\\<parallel>)) \\<longlongrightarrow>\n     0)\n     (at x within T)", "by auto"], ["", "lemma has_derivative_vec_nth:\n  assumes \"D f \\<mapsto> (\\<lambda>h. h *\\<^sub>R f' x) at x within T\"\n  shows \"D (\\<lambda>t. f t $ i) \\<mapsto> (\\<lambda>h. h *\\<^sub>R f' x $ i) at x within T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D (\\<lambda>t. f t $ i) \\<mapsto> (\\<lambda>h. h *\\<^sub>R f' x $ i)\n     at x within T", "apply(unfold has_derivative_def, safe)"], ["proof (prove)\ngoal (2 subgoals):\n 1. bounded_linear (\\<lambda>h. h *\\<^sub>R f' x $ i)\n 2. ((\\<lambda>y.\n         (f y $ i - f (netlimit (at x within T)) $ i -\n          (y - netlimit (at x within T)) *\\<^sub>R f' x $ i) /\\<^sub>R\n         (\\<parallel>y -\n                     netlimit\n                      (at x within T)\\<parallel>)) \\<longlongrightarrow>\n     (0::'a))\n     (at x within T)", "apply(force simp: bounded_linear_def bounded_linear_axioms_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (f y $ i - f (netlimit (at x within T)) $ i -\n          (y - netlimit (at x within T)) *\\<^sub>R f' x $ i) /\\<^sub>R\n         (\\<parallel>y -\n                     netlimit\n                      (at x within T)\\<parallel>)) \\<longlongrightarrow>\n     (0::'a))\n     (at x within T)", "using frechet_vec_nth assms"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       (?f x - ?f ?x\\<^sub>0 - (x - ?x\\<^sub>0) *\\<^sub>R ?f' ?t) /\\<^sub>R\n       (\\<parallel>x - ?x\\<^sub>0\\<parallel>)) \\<longlongrightarrow>\n   0)\n   (at ?t within ?T) \\<Longrightarrow>\n  ((\\<lambda>x.\n       (?f x $ ?i - ?f ?x\\<^sub>0 $ ?i -\n        (x - ?x\\<^sub>0) *\\<^sub>R ?f' ?t $ ?i) /\\<^sub>R\n       (\\<parallel>x - ?x\\<^sub>0\\<parallel>)) \\<longlongrightarrow>\n   (0::?'a))\n   (at ?t within ?T)\n  D f \\<mapsto> (\\<lambda>h. h *\\<^sub>R f' x) at x within T\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (f y $ i - f (netlimit (at x within T)) $ i -\n          (y - netlimit (at x within T)) *\\<^sub>R f' x $ i) /\\<^sub>R\n         (\\<parallel>y -\n                     netlimit\n                      (at x within T)\\<parallel>)) \\<longlongrightarrow>\n     (0::'a))\n     (at x within T)", "unfolding has_derivative_def"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       (?f x - ?f ?x\\<^sub>0 - (x - ?x\\<^sub>0) *\\<^sub>R ?f' ?t) /\\<^sub>R\n       (\\<parallel>x - ?x\\<^sub>0\\<parallel>)) \\<longlongrightarrow>\n   0)\n   (at ?t within ?T) \\<Longrightarrow>\n  ((\\<lambda>x.\n       (?f x $ ?i - ?f ?x\\<^sub>0 $ ?i -\n        (x - ?x\\<^sub>0) *\\<^sub>R ?f' ?t $ ?i) /\\<^sub>R\n       (\\<parallel>x - ?x\\<^sub>0\\<parallel>)) \\<longlongrightarrow>\n   (0::?'a))\n   (at ?t within ?T)\n  bounded_linear (\\<lambda>h. h *\\<^sub>R f' x) \\<and>\n  ((\\<lambda>y.\n       (f y - f (netlimit (at x within T)) -\n        (y - netlimit (at x within T)) *\\<^sub>R f' x) /\\<^sub>R\n       (\\<parallel>y -\n                   netlimit\n                    (at x within T)\\<parallel>)) \\<longlongrightarrow>\n   0)\n   (at x within T)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (f y $ i - f (netlimit (at x within T)) $ i -\n          (y - netlimit (at x within T)) *\\<^sub>R f' x $ i) /\\<^sub>R\n         (\\<parallel>y -\n                     netlimit\n                      (at x within T)\\<parallel>)) \\<longlongrightarrow>\n     (0::'a))\n     (at x within T)", "by auto"], ["", "lemma has_vderiv_on_vec_eq[simp]:\n  fixes x::\"real \\<Rightarrow> ('a::banach)^('n::finite)\"\n  shows \"(D x = x' on T) = (\\<forall>i. D (\\<lambda>t. x t $ i) = (\\<lambda>t. x' t $ i) on T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  D x = x' on T =\n    (\\<forall>i.  D (\\<lambda>t. x t $ i) = (\\<lambda>t. x' t $ i) on T)", "unfolding has_vderiv_on_def has_vector_derivative_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>xa\\<in>T.\n        D x \\<mapsto> (\\<lambda>x. x *\\<^sub>R x' xa) at xa within T) =\n    (\\<forall>i.\n        \\<forall>xa\\<in>T.\n           D (\\<lambda>t.\n                 x t $ i) \\<mapsto> (\\<lambda>x. x *\\<^sub>R x' xa $ i)\n            at xa within T)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i xa.\n       \\<lbrakk>\\<forall>xa\\<in>T.\n                   D x \\<mapsto> (\\<lambda>x. x *\\<^sub>R x' xa) at xa\n                    within T;\n        xa \\<in> T\\<rbrakk>\n       \\<Longrightarrow> D (\\<lambda>t.\n                               x t $\n                               i) \\<mapsto> (\\<lambda>x.\n          x *\\<^sub>R x' xa $ i)\n                          at xa within T\n 2. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>xa\\<in>T.\n                      D (\\<lambda>t.\n                            x t $\n                            i) \\<mapsto> (\\<lambda>x. x *\\<^sub>R x' xa $ i)\n                       at xa within T;\n        xa \\<in> T\\<rbrakk>\n       \\<Longrightarrow> D x \\<mapsto> (\\<lambda>x. x *\\<^sub>R x' xa) at xa\n                          within T", "using has_derivative_vec_nth has_derivative_vec_lambda"], ["proof (prove)\nusing this:\n  D ?f \\<mapsto> (\\<lambda>h. h *\\<^sub>R ?f' ?x) at ?x\n   within ?T \\<Longrightarrow>\n  D (\\<lambda>t. ?f t $ ?i) \\<mapsto> (\\<lambda>h. h *\\<^sub>R ?f' ?x $ ?i)\n   at ?x within ?T\n  \\<forall>i.\n     D (\\<lambda>t. ?f t $ i) \\<mapsto> (\\<lambda>h. h *\\<^sub>R ?f' ?x $ i)\n      at ?x within ?T \\<Longrightarrow>\n  D ?f \\<mapsto> (\\<lambda>h. h *\\<^sub>R ?f' ?x) at ?x within ?T\n\ngoal (2 subgoals):\n 1. \\<And>i xa.\n       \\<lbrakk>\\<forall>xa\\<in>T.\n                   D x \\<mapsto> (\\<lambda>x. x *\\<^sub>R x' xa) at xa\n                    within T;\n        xa \\<in> T\\<rbrakk>\n       \\<Longrightarrow> D (\\<lambda>t.\n                               x t $\n                               i) \\<mapsto> (\\<lambda>x.\n          x *\\<^sub>R x' xa $ i)\n                          at xa within T\n 2. \\<And>xa.\n       \\<lbrakk>\\<forall>i.\n                   \\<forall>xa\\<in>T.\n                      D (\\<lambda>t.\n                            x t $\n                            i) \\<mapsto> (\\<lambda>x. x *\\<^sub>R x' xa $ i)\n                       at xa within T;\n        xa \\<in> T\\<rbrakk>\n       \\<Longrightarrow> D x \\<mapsto> (\\<lambda>x. x *\\<^sub>R x' xa) at xa\n                          within T", "by blast+"], ["", "end"]]}