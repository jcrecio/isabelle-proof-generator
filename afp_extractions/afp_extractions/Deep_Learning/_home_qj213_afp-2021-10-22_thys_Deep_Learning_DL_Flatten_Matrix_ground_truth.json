{"file_name": "/home/qj213/afp-2021-10-22/thys/Deep_Learning/DL_Flatten_Matrix.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Deep_Learning", "problem_names": ["lemma two_digit_le:\n  \"i * n + j < m * n\" if \"i < m\" \"j < n\" for i j :: nat", "lemma extract_matrix_cong:\nassumes \"\\<And>i. i < m * n \\<Longrightarrow> a i = b i\"\nshows \"extract_matrix a m n = extract_matrix b m n\"", "lemma extract_matrix_flatten_matrix:\n\"extract_matrix (flatten_matrix A) (dim_row A) (dim_col A) = A\"", "lemma extract_matrix_flatten_matrix_cong:\n  assumes \"\\<And>x. x < dim_row A * dim_col A \\<Longrightarrow> f x = flatten_matrix A x\"\n  shows \"extract_matrix f (dim_row A) (dim_col A) = A\"", "lemma flatten_matrix_extract_matrix:\n  \"flatten_matrix (extract_matrix a m n) k = a k\" if \"k < m * n\"", "lemma index_extract_matrix:\nassumes \"i<m\" \"j<n\"\nshows \"extract_matrix a m n $$ (i,j) = a (i*n + j)\"", "lemma dim_extract_matrix:\nshows \"dim_row (extract_matrix as m n) = m\"\nand \"dim_col (extract_matrix as m n) = n\""], "translations": [["", "lemma two_digit_le:\n  \"i * n + j < m * n\" if \"i < m\" \"j < n\" for i j :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. i * n + j < m * n", "using that"], ["proof (prove)\nusing this:\n  i < m\n  j < n\n\ngoal (1 subgoal):\n 1. i * n + j < m * n", "by (auto dest!: less_imp_Suc_add simp add: algebra_simps)"], ["", "lemma extract_matrix_cong:\nassumes \"\\<And>i. i < m * n \\<Longrightarrow> a i = b i\"\nshows \"extract_matrix a m n = extract_matrix b m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extract_matrix a m n = extract_matrix b m n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. extract_matrix a m n = extract_matrix b m n", "have \"\\<And>i j. i < m \\<Longrightarrow> j < n \\<Longrightarrow> a (i*n + j) = b (i*n + j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < m; j < n\\<rbrakk>\n       \\<Longrightarrow> a (i * n + j) = b (i * n + j)", "using two_digit_le assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i < ?m; ?j < ?n\\<rbrakk>\n  \\<Longrightarrow> ?i * ?n + ?j < ?m * ?n\n  ?i < m * n \\<Longrightarrow> a ?i = b ?i\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < m; j < n\\<rbrakk>\n       \\<Longrightarrow> a (i * n + j) = b (i * n + j)", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>?i < m; ?j < n\\<rbrakk>\n  \\<Longrightarrow> a (?i * n + ?j) = b (?i * n + ?j)\n\ngoal (1 subgoal):\n 1. extract_matrix a m n = extract_matrix b m n", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i < m; ?j < n\\<rbrakk>\n  \\<Longrightarrow> a (?i * n + ?j) = b (?i * n + ?j)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i < m; ?j < n\\<rbrakk>\n  \\<Longrightarrow> a (?i * n + ?j) = b (?i * n + ?j)\n\ngoal (1 subgoal):\n 1. extract_matrix a m n = extract_matrix b m n", "unfolding extract_matrix_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i < m; ?j < n\\<rbrakk>\n  \\<Longrightarrow> a (?i * n + ?j) = b (?i * n + ?j)\n\ngoal (1 subgoal):\n 1. mat m n (\\<lambda>(i, j). a (i * n + j)) =\n    mat m n (\\<lambda>(i, j). b (i * n + j))", "by auto"], ["proof (state)\nthis:\n  extract_matrix a m n = extract_matrix b m n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma extract_matrix_flatten_matrix:\n\"extract_matrix (flatten_matrix A) (dim_row A) (dim_col A) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extract_matrix (flatten_matrix A) (dim_row A) (dim_col A) = A", "unfolding extract_matrix_def flatten_matrix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat (dim_row A) (dim_col A)\n     (\\<lambda>(i, j).\n         A $$\n         ((i * dim_col A + j) div dim_col A,\n          (i * dim_col A + j) mod dim_col A)) =\n    A", "by auto"], ["", "lemma extract_matrix_flatten_matrix_cong:\n  assumes \"\\<And>x. x < dim_row A * dim_col A \\<Longrightarrow> f x = flatten_matrix A x\"\n  shows \"extract_matrix f (dim_row A) (dim_col A) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extract_matrix f (dim_row A) (dim_col A) = A", "unfolding extract_matrix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat (dim_row A) (dim_col A) (\\<lambda>(i, j). f (i * dim_col A + j)) = A", "by (metis assms extract_matrix_cong extract_matrix_def extract_matrix_flatten_matrix)"], ["", "lemma flatten_matrix_extract_matrix:\n  \"flatten_matrix (extract_matrix a m n) k = a k\" if \"k < m * n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flatten_matrix (extract_matrix a m n) k = a k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. flatten_matrix (extract_matrix a m n) k = a k", "from that"], ["proof (chain)\npicking this:\n  k < m * n", "have \"m * n > 0\""], ["proof (prove)\nusing this:\n  k < m * n\n\ngoal (1 subgoal):\n 1. 0 < m * n", "by (cases \"m * n = 0\") simp_all"], ["proof (state)\nthis:\n  0 < m * n\n\ngoal (1 subgoal):\n 1. flatten_matrix (extract_matrix a m n) k = a k", "then"], ["proof (chain)\npicking this:\n  0 < m * n", "have \"m > 0\" and \"n > 0\""], ["proof (prove)\nusing this:\n  0 < m * n\n\ngoal (1 subgoal):\n 1. 0 < m &&& 0 < n", "by simp_all"], ["proof (state)\nthis:\n  0 < m\n  0 < n\n\ngoal (1 subgoal):\n 1. flatten_matrix (extract_matrix a m n) k = a k", "with that"], ["proof (chain)\npicking this:\n  k < m * n\n  0 < m\n  0 < n", "have \"k div n < m\""], ["proof (prove)\nusing this:\n  k < m * n\n  0 < m\n  0 < n\n\ngoal (1 subgoal):\n 1. k div n < m", "by (metis div_eq_0_iff div_mult2_eq mult.commute neq0_conv)"], ["proof (state)\nthis:\n  k div n < m\n\ngoal (1 subgoal):\n 1. flatten_matrix (extract_matrix a m n) k = a k", "moreover"], ["proof (state)\nthis:\n  k div n < m\n\ngoal (1 subgoal):\n 1. flatten_matrix (extract_matrix a m n) k = a k", "have \"k mod n < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k mod n < n", "using \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. k mod n < n", "by simp"], ["proof (state)\nthis:\n  k mod n < n\n\ngoal (1 subgoal):\n 1. flatten_matrix (extract_matrix a m n) k = a k", "ultimately"], ["proof (chain)\npicking this:\n  k div n < m\n  k mod n < n", "show ?thesis"], ["proof (prove)\nusing this:\n  k div n < m\n  k mod n < n\n\ngoal (1 subgoal):\n 1. flatten_matrix (extract_matrix a m n) k = a k", "by (auto simp add: extract_matrix_def flatten_matrix_def)"], ["proof (state)\nthis:\n  flatten_matrix (extract_matrix a m n) k = a k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma index_extract_matrix:\nassumes \"i<m\" \"j<n\"\nshows \"extract_matrix a m n $$ (i,j) = a (i*n + j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extract_matrix a m n $$ (i, j) = a (i * n + j)", "unfolding extract_matrix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat m n (\\<lambda>(i, j). a (i * n + j)) $$ (i, j) = a (i * n + j)", "using assms"], ["proof (prove)\nusing this:\n  i < m\n  j < n\n\ngoal (1 subgoal):\n 1. mat m n (\\<lambda>(i, j). a (i * n + j)) $$ (i, j) = a (i * n + j)", "by simp"], ["", "lemma dim_extract_matrix:\nshows \"dim_row (extract_matrix as m n) = m\"\nand \"dim_col (extract_matrix as m n) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (extract_matrix as m n) = m &&&\n    dim_col (extract_matrix as m n) = n", "unfolding extract_matrix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (mat m n (\\<lambda>(i, j). as (i * n + j))) = m &&&\n    dim_col (mat m n (\\<lambda>(i, j). as (i * n + j))) = n", "by simp_all"], ["", "end"]]}