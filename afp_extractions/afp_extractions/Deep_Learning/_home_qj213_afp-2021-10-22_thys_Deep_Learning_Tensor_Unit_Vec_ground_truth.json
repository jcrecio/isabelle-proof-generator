{"file_name": "/home/qj213/afp-2021-10-22/thys/Deep_Learning/Tensor_Unit_Vec.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Deep_Learning", "problem_names": ["lemma dims_unit_vec: \"dims (unit_vec n i) = [n]\"", "lemma lookup_unit_vec:\nassumes \"j<n\"\nshows \"lookup (unit_vec n i) [j] = (if i=j then 1 else 0)\"", "lemma subtensor_prod_with_unit_vec:\nfixes A::\"'a::ring_1 tensor\"\nassumes \"j<n\"\nshows \"subtensor (unit_vec n i \\<otimes> A) j = (if i=j then A else (tensor0 (dims A)))\"", "lemma subtensor_decomposition:\nassumes \"dims A \\<noteq> []\"\nshows \"listsum (dims A) (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i) [0..<hd (dims A)]) = A\" (is \"?LS = A\")"], "translations": [["", "lemma dims_unit_vec: \"dims (unit_vec n i) = [n]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dims (unit_vec n i) = [n]", "unfolding unit_vec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dims\n     (tensor_from_lookup [n]\n       (\\<lambda>x. if x = [i] then 1::'a else (0::'a))) =\n    [n]", "by (simp add: tensor_from_lookup_def)"], ["", "lemma lookup_unit_vec:\nassumes \"j<n\"\nshows \"lookup (unit_vec n i) [j] = (if i=j then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup (unit_vec n i) [j] = (if i = j then 1::'a else (0::'a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lookup (unit_vec n i) [j] = (if i = j then 1::'a else (0::'a))", "have \"[j] \\<lhd> [n]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [j] \\<lhd> [n]", "by (simp add: assms valid_index.Cons valid_index.Nil)"], ["proof (state)\nthis:\n  [j] \\<lhd> [n]\n\ngoal (1 subgoal):\n 1. lookup (unit_vec n i) [j] = (if i = j then 1::'a else (0::'a))", "then"], ["proof (chain)\npicking this:\n  [j] \\<lhd> [n]", "have \"lookup (unit_vec n i) [j] = (\\<lambda>x. if x=[i] then 1 else 0) [j]\""], ["proof (prove)\nusing this:\n  [j] \\<lhd> [n]\n\ngoal (1 subgoal):\n 1. lookup (unit_vec n i) [j] = (if [j] = [i] then 1::'b else (0::'b))", "by (simp add: lookup_tensor_from_lookup unit_vec_def)"], ["proof (state)\nthis:\n  lookup (unit_vec n i) [j] = (if [j] = [i] then 1::?'b1 else (0::?'b1))\n\ngoal (1 subgoal):\n 1. lookup (unit_vec n i) [j] = (if i = j then 1::'a else (0::'a))", "then"], ["proof (chain)\npicking this:\n  lookup (unit_vec n i) [j] = (if [j] = [i] then 1::?'b1 else (0::?'b1))", "show ?thesis"], ["proof (prove)\nusing this:\n  lookup (unit_vec n i) [j] = (if [j] = [i] then 1::?'b1 else (0::?'b1))\n\ngoal (1 subgoal):\n 1. lookup (unit_vec n i) [j] = (if i = j then 1::'a else (0::'a))", "by auto"], ["proof (state)\nthis:\n  lookup (unit_vec n i) [j] = (if i = j then 1::'a else (0::'a))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subtensor_prod_with_unit_vec:\nfixes A::\"'a::ring_1 tensor\"\nassumes \"j<n\"\nshows \"subtensor (unit_vec n i \\<otimes> A) j = (if i=j then A else (tensor0 (dims A)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subtensor (unit_vec n i \\<otimes> A) j =\n    (if i = j then A else tensor0 (dims A))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subtensor (unit_vec n i \\<otimes> A) j =\n    (if i = j then A else tensor0 (dims A))", "have 0:\"lookup (unit_vec n i) [j] = (if i=j then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup (unit_vec n i) [j] = (if i = j then 1::'b else (0::'b))", "unfolding unit_vec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup\n     (tensor_from_lookup [n]\n       (\\<lambda>x. if x = [i] then 1::'b else (0::'b)))\n     [j] =\n    (if i = j then 1::'b else (0::'b))", "by (simp add: assms lookup_tensor_from_lookup valid_index.Cons valid_index.Nil)"], ["proof (state)\nthis:\n  lookup (unit_vec n i) [j] = (if i = j then 1::?'b1 else (0::?'b1))\n\ngoal (1 subgoal):\n 1. subtensor (unit_vec n i \\<otimes> A) j =\n    (if i = j then A else tensor0 (dims A))", "have 1:\"order (unit_vec n i) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order (unit_vec n i) = 1", "unfolding unit_vec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. order\n     (tensor_from_lookup [n]\n       (\\<lambda>x. if x = [i] then 1::'b else (0::'b))) =\n    1", "by (simp add: tensor_from_lookup_def)"], ["proof (state)\nthis:\n  order (unit_vec n i) = 1\n\ngoal (1 subgoal):\n 1. subtensor (unit_vec n i \\<otimes> A) j =\n    (if i = j then A else tensor0 (dims A))", "from assms"], ["proof (chain)\npicking this:\n  j < n", "have 2:\"j < hd (dims (tensor_from_lookup [n] (\\<lambda>x. if x = [i] then 1 else 0)))\""], ["proof (prove)\nusing this:\n  j < n\n\ngoal (1 subgoal):\n 1. j < hd (dims\n             (tensor_from_lookup [n]\n               (\\<lambda>x. if x = [i] then 1::'b else (0::'b))))", "by (simp add: dims_tensor_from_lookup)"], ["proof (state)\nthis:\n  j < hd (dims\n           (tensor_from_lookup [n]\n             (\\<lambda>x. if x = [i] then 1::?'b3 else (0::?'b3))))\n\ngoal (1 subgoal):\n 1. subtensor (unit_vec n i \\<otimes> A) j =\n    (if i = j then A else tensor0 (dims A))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. subtensor (unit_vec n i \\<otimes> A) j =\n    (if i = j then A else tensor0 (dims A))", "using unit_vec_def subtensor_prod_with_vec 1 2 0 smult_1 tensor_smult0"], ["proof (prove)\nusing this:\n  unit_vec ?n ?i =\n  tensor_from_lookup [?n]\n   (\\<lambda>x. if x = [?i] then 1::?'a else (0::?'a))\n  \\<lbrakk>order ?A = 1; ?i < hd (dims ?A)\\<rbrakk>\n  \\<Longrightarrow> subtensor (?A \\<otimes> ?B) ?i =\n                    lookup ?A [?i] \\<cdot> ?B\n  order (unit_vec n i) = 1\n  j < hd (dims\n           (tensor_from_lookup [n]\n             (\\<lambda>x. if x = [i] then 1::?'b3 else (0::?'b3))))\n  lookup (unit_vec n i) [j] = (if i = j then 1::?'b1 else (0::?'b1))\n  ?A = (1::?'a) \\<cdot> ?A\n  (0::?'a) \\<cdot> ?A = tensor0 (dims ?A)\n\ngoal (1 subgoal):\n 1. subtensor (unit_vec n i \\<otimes> A) j =\n    (if i = j then A else tensor0 (dims A))", "by (metis (no_types, lifting) tensor_from_lookup_eqI)"], ["proof (state)\nthis:\n  subtensor (unit_vec n i \\<otimes> A) j =\n  (if i = j then A else tensor0 (dims A))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subtensor_decomposition:\nassumes \"dims A \\<noteq> []\"\nshows \"listsum (dims A) (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i) [0..<hd (dims A)]) = A\" (is \"?LS = A\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]) =\n    A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]) =\n    A", "let ?f = \"\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i\""], ["proof (state)\ngoal (1 subgoal):\n 1. listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]) =\n    A", "have correct_dims:\"\\<And>B. B \\<in> set (map ?f [0..<hd (dims A)]) \\<Longrightarrow> dims B = dims A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> set (map (\\<lambda>i.\n                            unit_vec (hd (dims A)) i \\<otimes>\n                            subtensor A i)\n                     [0..<hd (dims A)]) \\<Longrightarrow>\n       dims B = dims A", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> set (map (\\<lambda>i.\n                            unit_vec (hd (dims A)) i \\<otimes>\n                            subtensor A i)\n                     [0..<hd (dims A)]) \\<Longrightarrow>\n       dims B = dims A", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> set (map (\\<lambda>i.\n                            unit_vec (hd (dims A)) i \\<otimes>\n                            subtensor A i)\n                     [0..<hd (dims A)]) \\<Longrightarrow>\n       dims B = dims A", "assume \"B \\<in> set (map ?f [0..<hd (dims A)])\""], ["proof (state)\nthis:\n  B \\<in> set (map (\\<lambda>i.\n                       unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n                [0..<hd (dims A)])\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> set (map (\\<lambda>i.\n                            unit_vec (hd (dims A)) i \\<otimes>\n                            subtensor A i)\n                     [0..<hd (dims A)]) \\<Longrightarrow>\n       dims B = dims A", "then"], ["proof (chain)\npicking this:\n  B \\<in> set (map (\\<lambda>i.\n                       unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n                [0..<hd (dims A)])", "obtain i where B:\"B = ?f i\" and \"i<hd (dims A)\""], ["proof (prove)\nusing this:\n  B \\<in> set (map (\\<lambda>i.\n                       unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n                [0..<hd (dims A)])\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>B = unit_vec (hd (dims A)) i \\<otimes> subtensor A i;\n         i < hd (dims A)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B = unit_vec (hd (dims A)) i \\<otimes> subtensor A i\n  i < hd (dims A)\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> set (map (\\<lambda>i.\n                            unit_vec (hd (dims A)) i \\<otimes>\n                            subtensor A i)\n                     [0..<hd (dims A)]) \\<Longrightarrow>\n       dims B = dims A", "then"], ["proof (chain)\npicking this:\n  B = unit_vec (hd (dims A)) i \\<otimes> subtensor A i\n  i < hd (dims A)", "have \"dims (subtensor A i) = tl (dims A)\""], ["proof (prove)\nusing this:\n  B = unit_vec (hd (dims A)) i \\<otimes> subtensor A i\n  i < hd (dims A)\n\ngoal (1 subgoal):\n 1. dims (subtensor A i) = tl (dims A)", "using dims_subtensor"], ["proof (prove)\nusing this:\n  B = unit_vec (hd (dims A)) i \\<otimes> subtensor A i\n  i < hd (dims A)\n  \\<lbrakk>dims ?A \\<noteq> []; ?i < hd (dims ?A)\\<rbrakk>\n  \\<Longrightarrow> dims (subtensor ?A ?i) = tl (dims ?A)\n\ngoal (1 subgoal):\n 1. dims (subtensor A i) = tl (dims A)", "using assms"], ["proof (prove)\nusing this:\n  B = unit_vec (hd (dims A)) i \\<otimes> subtensor A i\n  i < hd (dims A)\n  \\<lbrakk>dims ?A \\<noteq> []; ?i < hd (dims ?A)\\<rbrakk>\n  \\<Longrightarrow> dims (subtensor ?A ?i) = tl (dims ?A)\n  dims A \\<noteq> []\n\ngoal (1 subgoal):\n 1. dims (subtensor A i) = tl (dims A)", "by blast"], ["proof (state)\nthis:\n  dims (subtensor A i) = tl (dims A)\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> set (map (\\<lambda>i.\n                            unit_vec (hd (dims A)) i \\<otimes>\n                            subtensor A i)\n                     [0..<hd (dims A)]) \\<Longrightarrow>\n       dims B = dims A", "then"], ["proof (chain)\npicking this:\n  dims (subtensor A i) = tl (dims A)", "show \"dims B = dims A\""], ["proof (prove)\nusing this:\n  dims (subtensor A i) = tl (dims A)\n\ngoal (1 subgoal):\n 1. dims B = dims A", "unfolding B"], ["proof (prove)\nusing this:\n  dims (subtensor A i) = tl (dims A)\n\ngoal (1 subgoal):\n 1. dims (unit_vec (hd (dims A)) i \\<otimes> subtensor A i) = dims A", "by (metis append_Cons assms dims_tensor_prod dims_unit_vec list.exhaust_sel self_append_conv2)"], ["proof (state)\nthis:\n  dims B = dims A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?B \\<in> set (map (\\<lambda>i.\n                        unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n                 [0..<hd (dims A)]) \\<Longrightarrow>\n  dims ?B = dims A\n\ngoal (1 subgoal):\n 1. listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]) =\n    A", "have \"\\<And>j. j < hd (dims A) \\<Longrightarrow> subtensor ?LS j = subtensor A j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < hd (dims A) \\<Longrightarrow>\n       subtensor\n        (listsum (dims A)\n          (map (\\<lambda>i.\n                   unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n            [0..<hd (dims A)]))\n        j =\n       subtensor A j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < hd (dims A) \\<Longrightarrow>\n       subtensor\n        (listsum (dims A)\n          (map (\\<lambda>i.\n                   unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n            [0..<hd (dims A)]))\n        j =\n       subtensor A j", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < hd (dims A) \\<Longrightarrow>\n       subtensor\n        (listsum (dims A)\n          (map (\\<lambda>i.\n                   unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n            [0..<hd (dims A)]))\n        j =\n       subtensor A j", "assume \"j < hd (dims A)\""], ["proof (state)\nthis:\n  j < hd (dims A)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < hd (dims A) \\<Longrightarrow>\n       subtensor\n        (listsum (dims A)\n          (map (\\<lambda>i.\n                   unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n            [0..<hd (dims A)]))\n        j =\n       subtensor A j", "have 1:\"subtensor ?LS j = listsum (tl (dims A)) (map (\\<lambda>A. subtensor A j) (map ?f [0..<hd (dims A)]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subtensor\n     (listsum (dims A)\n       (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n         [0..<hd (dims A)]))\n     j =\n    listsum (tl (dims A))\n     (map (\\<lambda>A. subtensor A j)\n       (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n         [0..<hd (dims A)]))", "using subtensor_listsum[of \"(map (\\<lambda>i. ?f i) [0..<hd (dims A)])\" \"dims A\" j, OF correct_dims assms \\<open>j < hd (dims A)\\<close>]"], ["proof (prove)\nusing this:\n  (\\<And>Aa.\n      Aa \\<in> set (map (\\<lambda>i.\n                            unit_vec (hd (dims A)) i \\<otimes>\n                            subtensor A i)\n                     [0..<hd (dims A)]) \\<Longrightarrow>\n      Aa \\<in> set (map (\\<lambda>i.\n                            unit_vec (hd (dims A)) i \\<otimes>\n                            subtensor A i)\n                     [0..<hd (dims A)])) \\<Longrightarrow>\n  subtensor\n   (listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n   j =\n  listsum (tl (dims A))\n   (map (\\<lambda>A. subtensor A j)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n\ngoal (1 subgoal):\n 1. subtensor\n     (listsum (dims A)\n       (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n         [0..<hd (dims A)]))\n     j =\n    listsum (tl (dims A))\n     (map (\\<lambda>A. subtensor A j)\n       (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n         [0..<hd (dims A)]))", "by linarith"], ["proof (state)\nthis:\n  subtensor\n   (listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n   j =\n  listsum (tl (dims A))\n   (map (\\<lambda>A. subtensor A j)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < hd (dims A) \\<Longrightarrow>\n       subtensor\n        (listsum (dims A)\n          (map (\\<lambda>i.\n                   unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n            [0..<hd (dims A)]))\n        j =\n       subtensor A j", "also"], ["proof (state)\nthis:\n  subtensor\n   (listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n   j =\n  listsum (tl (dims A))\n   (map (\\<lambda>A. subtensor A j)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < hd (dims A) \\<Longrightarrow>\n       subtensor\n        (listsum (dims A)\n          (map (\\<lambda>i.\n                   unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n            [0..<hd (dims A)]))\n        j =\n       subtensor A j", "have \"... = listsum (tl (dims A)) (map (\\<lambda>i. subtensor (?f i) j) [0..<hd (dims A)])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. listsum (tl (dims A))\n     (map (\\<lambda>A. subtensor A j)\n       (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n         [0..<hd (dims A)])) =\n    listsum (tl (dims A))\n     (map (\\<lambda>i.\n              subtensor (unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n               j)\n       [0..<hd (dims A)])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. listsum (tl (dims A))\n     (map (\\<lambda>A. subtensor A j)\n       (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n         [0..<hd (dims A)])) =\n    listsum (tl (dims A))\n     (map (\\<lambda>i.\n              subtensor (unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n               j)\n       [0..<hd (dims A)])", "have \"map (\\<lambda>A. subtensor A j) (map ?f [0..<hd (dims A)]) = map (\\<lambda>i. subtensor (?f i) j) [0..<hd (dims A)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map (\\<lambda>A. subtensor A j)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]) =\n    map (\\<lambda>i.\n            subtensor (unit_vec (hd (dims A)) i \\<otimes> subtensor A i) j)\n     [0..<hd (dims A)]", "unfolding map_map[of \"(\\<lambda>A. subtensor A j)\" \"?f\" \"[0..<hd (dims A)]\"]"], ["proof (prove)\ngoal (1 subgoal):\n 1. map ((\\<lambda>A. subtensor A j) \\<circ>\n         (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i))\n     [0..<hd (dims A)] =\n    map (\\<lambda>i.\n            subtensor (unit_vec (hd (dims A)) i \\<otimes> subtensor A i) j)\n     [0..<hd (dims A)]", "by simp"], ["proof (state)\nthis:\n  map (\\<lambda>A. subtensor A j)\n   (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n     [0..<hd (dims A)]) =\n  map (\\<lambda>i.\n          subtensor (unit_vec (hd (dims A)) i \\<otimes> subtensor A i) j)\n   [0..<hd (dims A)]\n\ngoal (1 subgoal):\n 1. listsum (tl (dims A))\n     (map (\\<lambda>A. subtensor A j)\n       (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n         [0..<hd (dims A)])) =\n    listsum (tl (dims A))\n     (map (\\<lambda>i.\n              subtensor (unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n               j)\n       [0..<hd (dims A)])", "with 1"], ["proof (chain)\npicking this:\n  subtensor\n   (listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n   j =\n  listsum (tl (dims A))\n   (map (\\<lambda>A. subtensor A j)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n  map (\\<lambda>A. subtensor A j)\n   (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n     [0..<hd (dims A)]) =\n  map (\\<lambda>i.\n          subtensor (unit_vec (hd (dims A)) i \\<otimes> subtensor A i) j)\n   [0..<hd (dims A)]", "show ?thesis"], ["proof (prove)\nusing this:\n  subtensor\n   (listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n   j =\n  listsum (tl (dims A))\n   (map (\\<lambda>A. subtensor A j)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n  map (\\<lambda>A. subtensor A j)\n   (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n     [0..<hd (dims A)]) =\n  map (\\<lambda>i.\n          subtensor (unit_vec (hd (dims A)) i \\<otimes> subtensor A i) j)\n   [0..<hd (dims A)]\n\ngoal (1 subgoal):\n 1. listsum (tl (dims A))\n     (map (\\<lambda>A. subtensor A j)\n       (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n         [0..<hd (dims A)])) =\n    listsum (tl (dims A))\n     (map (\\<lambda>i.\n              subtensor (unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n               j)\n       [0..<hd (dims A)])", "by metis"], ["proof (state)\nthis:\n  listsum (tl (dims A))\n   (map (\\<lambda>A. subtensor A j)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)])) =\n  listsum (tl (dims A))\n   (map (\\<lambda>i.\n            subtensor (unit_vec (hd (dims A)) i \\<otimes> subtensor A i) j)\n     [0..<hd (dims A)])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  listsum (tl (dims A))\n   (map (\\<lambda>A. subtensor A j)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)])) =\n  listsum (tl (dims A))\n   (map (\\<lambda>i.\n            subtensor (unit_vec (hd (dims A)) i \\<otimes> subtensor A i) j)\n     [0..<hd (dims A)])\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < hd (dims A) \\<Longrightarrow>\n       subtensor\n        (listsum (dims A)\n          (map (\\<lambda>i.\n                   unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n            [0..<hd (dims A)]))\n        j =\n       subtensor A j", "also"], ["proof (state)\nthis:\n  listsum (tl (dims A))\n   (map (\\<lambda>A. subtensor A j)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)])) =\n  listsum (tl (dims A))\n   (map (\\<lambda>i.\n            subtensor (unit_vec (hd (dims A)) i \\<otimes> subtensor A i) j)\n     [0..<hd (dims A)])\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < hd (dims A) \\<Longrightarrow>\n       subtensor\n        (listsum (dims A)\n          (map (\\<lambda>i.\n                   unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n            [0..<hd (dims A)]))\n        j =\n       subtensor A j", "have \"... =  map (\\<lambda>i. if i = j then subtensor A i else tensor0 (dims (subtensor A i))) [0..<hd (dims A)] ! j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. listsum (tl (dims A))\n     (map (\\<lambda>i.\n              subtensor (unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n               j)\n       [0..<hd (dims A)]) =\n    map (\\<lambda>i.\n            if i = j then subtensor A i else tensor0 (dims (subtensor A i)))\n     [0..<hd (dims A)] !\n    j", "unfolding subtensor_prod_with_unit_vec[OF \\<open>j < hd (dims A)\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. listsum (tl (dims A))\n     (map (\\<lambda>i.\n              if i = j then subtensor A i\n              else tensor0 (dims (subtensor A i)))\n       [0..<hd (dims A)]) =\n    map (\\<lambda>i.\n            if i = j then subtensor A i else tensor0 (dims (subtensor A i)))\n     [0..<hd (dims A)] !\n    j", "using listsum_all_0_but_one[of j \"(map (\\<lambda>i. if i = j then subtensor A i else tensor0 (dims (subtensor A i))) [0..<hd (dims A)])\" \"tl (dims A)\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>i.\n              \\<lbrakk>i \\<noteq> j;\n               i < length\n                    (map (\\<lambda>i.\n                             if i = j then subtensor A i\n                             else tensor0 (dims (subtensor A i)))\n                      [0..<hd (dims A)])\\<rbrakk>\n              \\<Longrightarrow> map (\\<lambda>i.\n  if i = j then subtensor A i else tensor0 (dims (subtensor A i)))\n                                 [0..<hd (dims A)] !\n                                i =\n                                tensor0 (tl (dims A));\n   dims\n    (map (\\<lambda>i.\n             if i = j then subtensor A i\n             else tensor0 (dims (subtensor A i)))\n      [0..<hd (dims A)] !\n     j) =\n   tl (dims A);\n   j < length\n        (map (\\<lambda>i.\n                 if i = j then subtensor A i\n                 else tensor0 (dims (subtensor A i)))\n          [0..<hd (dims A)])\\<rbrakk>\n  \\<Longrightarrow> listsum (tl (dims A))\n                     (map (\\<lambda>i.\n                              if i = j then subtensor A i\n                              else tensor0 (dims (subtensor A i)))\n                       [0..<hd (dims A)]) =\n                    map (\\<lambda>i.\n                            if i = j then subtensor A i\n                            else tensor0 (dims (subtensor A i)))\n                     [0..<hd (dims A)] !\n                    j\n\ngoal (1 subgoal):\n 1. listsum (tl (dims A))\n     (map (\\<lambda>i.\n              if i = j then subtensor A i\n              else tensor0 (dims (subtensor A i)))\n       [0..<hd (dims A)]) =\n    map (\\<lambda>i.\n            if i = j then subtensor A i else tensor0 (dims (subtensor A i)))\n     [0..<hd (dims A)] !\n    j", "by (simp add: \\<open>j < hd (dims A)\\<close> assms)"], ["proof (state)\nthis:\n  listsum (tl (dims A))\n   (map (\\<lambda>i.\n            subtensor (unit_vec (hd (dims A)) i \\<otimes> subtensor A i) j)\n     [0..<hd (dims A)]) =\n  map (\\<lambda>i.\n          if i = j then subtensor A i else tensor0 (dims (subtensor A i)))\n   [0..<hd (dims A)] !\n  j\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < hd (dims A) \\<Longrightarrow>\n       subtensor\n        (listsum (dims A)\n          (map (\\<lambda>i.\n                   unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n            [0..<hd (dims A)]))\n        j =\n       subtensor A j", "also"], ["proof (state)\nthis:\n  listsum (tl (dims A))\n   (map (\\<lambda>i.\n            subtensor (unit_vec (hd (dims A)) i \\<otimes> subtensor A i) j)\n     [0..<hd (dims A)]) =\n  map (\\<lambda>i.\n          if i = j then subtensor A i else tensor0 (dims (subtensor A i)))\n   [0..<hd (dims A)] !\n  j\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < hd (dims A) \\<Longrightarrow>\n       subtensor\n        (listsum (dims A)\n          (map (\\<lambda>i.\n                   unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n            [0..<hd (dims A)]))\n        j =\n       subtensor A j", "have \"... = subtensor A j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map (\\<lambda>i.\n            if i = j then subtensor A i else tensor0 (dims (subtensor A i)))\n     [0..<hd (dims A)] !\n    j =\n    subtensor A j", "by (simp add: \\<open>j < hd (dims A)\\<close>)"], ["proof (state)\nthis:\n  map (\\<lambda>i.\n          if i = j then subtensor A i else tensor0 (dims (subtensor A i)))\n   [0..<hd (dims A)] !\n  j =\n  subtensor A j\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < hd (dims A) \\<Longrightarrow>\n       subtensor\n        (listsum (dims A)\n          (map (\\<lambda>i.\n                   unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n            [0..<hd (dims A)]))\n        j =\n       subtensor A j", "finally"], ["proof (chain)\npicking this:\n  subtensor\n   (listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n   j =\n  subtensor A j", "show \"subtensor ?LS j = subtensor A j\""], ["proof (prove)\nusing this:\n  subtensor\n   (listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n   j =\n  subtensor A j\n\ngoal (1 subgoal):\n 1. subtensor\n     (listsum (dims A)\n       (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n         [0..<hd (dims A)]))\n     j =\n    subtensor A j", "by auto"], ["proof (state)\nthis:\n  subtensor\n   (listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n   j =\n  subtensor A j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?j < hd (dims A) \\<Longrightarrow>\n  subtensor\n   (listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n   ?j =\n  subtensor A ?j\n\ngoal (1 subgoal):\n 1. listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]) =\n    A", "moreover"], ["proof (state)\nthis:\n  ?j < hd (dims A) \\<Longrightarrow>\n  subtensor\n   (listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n   ?j =\n  subtensor A ?j\n\ngoal (1 subgoal):\n 1. listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]) =\n    A", "have \"dims ?LS = dims A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dims\n     (listsum (dims A)\n       (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n         [0..<hd (dims A)])) =\n    dims A", "using correct_dims listsum_dims"], ["proof (prove)\nusing this:\n  ?B \\<in> set (map (\\<lambda>i.\n                        unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n                 [0..<hd (dims A)]) \\<Longrightarrow>\n  dims ?B = dims A\n  (\\<And>A.\n      A \\<in> set ?As \\<Longrightarrow> dims A = ?ds) \\<Longrightarrow>\n  dims (listsum ?ds ?As) = ?ds\n\ngoal (1 subgoal):\n 1. dims\n     (listsum (dims A)\n       (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n         [0..<hd (dims A)])) =\n    dims A", "by blast"], ["proof (state)\nthis:\n  dims\n   (listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)])) =\n  dims A\n\ngoal (1 subgoal):\n 1. listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]) =\n    A", "ultimately"], ["proof (chain)\npicking this:\n  ?j < hd (dims A) \\<Longrightarrow>\n  subtensor\n   (listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n   ?j =\n  subtensor A ?j\n  dims\n   (listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)])) =\n  dims A", "show ?thesis"], ["proof (prove)\nusing this:\n  ?j < hd (dims A) \\<Longrightarrow>\n  subtensor\n   (listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n   ?j =\n  subtensor A ?j\n  dims\n   (listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)])) =\n  dims A\n\ngoal (1 subgoal):\n 1. listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]) =\n    A", "using subtensor_eqI"], ["proof (prove)\nusing this:\n  ?j < hd (dims A) \\<Longrightarrow>\n  subtensor\n   (listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]))\n   ?j =\n  subtensor A ?j\n  dims\n   (listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)])) =\n  dims A\n  \\<lbrakk>dims ?A \\<noteq> []; dims ?A = dims ?B;\n   \\<And>i.\n      i < hd (dims ?A) \\<Longrightarrow>\n      subtensor ?A i = subtensor ?B i\\<rbrakk>\n  \\<Longrightarrow> ?A = ?B\n\ngoal (1 subgoal):\n 1. listsum (dims A)\n     (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n       [0..<hd (dims A)]) =\n    A", "by (metis (no_types, lifting) assms)"], ["proof (state)\nthis:\n  listsum (dims A)\n   (map (\\<lambda>i. unit_vec (hd (dims A)) i \\<otimes> subtensor A i)\n     [0..<hd (dims A)]) =\n  A\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}