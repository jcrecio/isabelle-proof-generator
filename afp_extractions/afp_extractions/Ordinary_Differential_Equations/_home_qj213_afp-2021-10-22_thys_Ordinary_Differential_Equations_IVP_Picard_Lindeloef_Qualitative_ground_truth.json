{"file_name": "/home/qj213/afp-2021-10-22/thys/Ordinary_Differential_Equations/IVP/Picard_Lindeloef_Qualitative.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Ordinary_Differential_Equations", "problem_names": ["lemma cball_eq_closed_segment_real:\n  fixes x e::real\n  shows \"cball x e = (if e \\<ge> 0 then {x - e -- x + e} else {})\"", "lemma cube_in_cball:\n  fixes x y :: \"'a::euclidean_space\"\n  assumes \"r > 0\"\n  assumes \"\\<And>i. i\\<in> Basis \\<Longrightarrow> dist (x \\<bullet> i) (y \\<bullet> i) \\<le> r / sqrt(DIM('a))\"\n  shows \"y \\<in> cball x r\"", "lemma cbox_in_cball':\n  fixes x::\"'a::euclidean_space\"\n  assumes \"0 < r\"\n  shows \"\\<exists>b > 0. b \\<le> r \\<and> (\\<exists>B. B = (\\<Sum>i\\<in>Basis. b *\\<^sub>R i) \\<and> (\\<forall>y \\<in> cbox (x - B) (x + B). y \\<in> cball x r))\"", "lemma Pair1_in_Basis: \"i \\<in> Basis \\<Longrightarrow> (i, 0) \\<in> Basis\"\n and Pair2_in_Basis: \"i \\<in> Basis \\<Longrightarrow> (0, i) \\<in> Basis\"", "lemma le_real_sqrt_sumsq' [simp]: \"y \\<le> sqrt (x * x + y * y)\"", "lemma cball_Pair_split_subset: \"cball (a, b) c \\<subseteq> cball a c \\<times> cball b c\"", "lemma cball_times_subset: \"cball a (c/2) \\<times> cball b (c/2) \\<subseteq> cball (a, b) c\"", "lemma eventually_bound_pairE:\n  assumes \"isCont f (t0, x0)\"\n  obtains B where\n    \"B \\<ge> 1\"\n    \"eventually (\\<lambda>e. \\<forall>x \\<in> cball t0 e \\<times> cball x0 e. norm (f x) \\<le> B) (at_right 0)\"", "lemma\n  eventually_in_cballs:\n  assumes \"d > 0\" \"c > 0\"\n  shows \"eventually (\\<lambda>e. cball t0 (c * e) \\<times> (cball x0 e) \\<subseteq> cball (t0, x0) d) (at_right 0)\"", "lemma cball_eq_sing':\n  fixes x :: \"'a::{metric_space,perfect_space}\"\n  shows \"cball x e = {y} \\<longleftrightarrow> e = 0 \\<and> x = y\"", "lemma ll_on_open_rev[intro, simp]: \"ll_on_open (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X\"", "lemma eventually_lipschitz:\n  assumes \"t0 \\<in> T\" \"x0 \\<in> X\" \"c > 0\"\n  obtains L where\n    \"eventually (\\<lambda>u. \\<forall>t' \\<in> cball t0 (c * u) \\<inter> T.\n      L-lipschitz_on (cball x0 u \\<inter> X) (\\<lambda>y. f t' y)) (at_right 0)\"", "lemmas continuous_on_Times_f = continuous", "lemmas continuous_on_f = continuous_rhs_comp", "lemma\n  lipschitz_on_compact:\n  assumes \"compact K\" \"K \\<subseteq> T\"\n  assumes \"compact Y\" \"Y \\<subseteq> X\"\n  obtains L where \"\\<And>t. t \\<in> K \\<Longrightarrow> L-lipschitz_on Y (f t)\"", "lemma csols_empty_iff: \"csols t0 x0 = {} \\<longleftrightarrow> t0 \\<notin> T \\<or> x0 \\<notin> X\"", "lemma csols_notempty: \"t0 \\<in> T \\<Longrightarrow> x0 \\<in> X \\<Longrightarrow> csols t0 x0 \\<noteq> {}\"", "lemma existence_ivl_empty_iff[simp]: \"existence_ivl t0 x0 = {} \\<longleftrightarrow> t0 \\<notin> T \\<or> x0 \\<notin> X\"", "lemma existence_ivl_empty1[simp]: \"t0 \\<notin> T \\<Longrightarrow> existence_ivl t0 x0 = {}\"\n  and existence_ivl_empty2[simp]: \"x0 \\<notin> X \\<Longrightarrow> existence_ivl t0 x0 = {}\"", "lemma flow_undefined:\n  shows \"t0 \\<notin> T \\<Longrightarrow> flow t0 x0 = (\\<lambda>_. 0)\"\n    \"x0 \\<notin> X \\<Longrightarrow> flow t0 x0 = (\\<lambda>_. 0)\"", "lemma (in ll_on_open) flow_eq_in_existence_ivlI:\n  assumes \"\\<And>u. x0 \\<in> X \\<Longrightarrow> u \\<in> existence_ivl t0 x0 \\<longleftrightarrow> g u \\<in> existence_ivl s0 x0\"\n  assumes \"\\<And>u. x0 \\<in> X \\<Longrightarrow> u \\<in> existence_ivl t0 x0 \\<Longrightarrow> flow t0 x0 u = flow s0 x0 (g u)\"\n  shows \"flow t0 x0 = (\\<lambda>t. flow s0 x0 (g t))\"", "lemma local_unique_solution:\n  assumes iv_defined: \"t0 \\<in> T\" \"x0 \\<in> X\"\n  obtains et ex B L\n  where \"et > 0\" \"0 < ex\" \"cball t0 et \\<subseteq> T\" \"cball x0 ex \\<subseteq> X\"\n    \"unique_on_cylinder t0 (cball t0 et) x0 ex f B L\"", "lemma mem_existence_ivl_iv_defined:\n  assumes \"t \\<in> existence_ivl t0 x0\"\n  shows \"t0 \\<in> T\" \"x0 \\<in> X\"", "lemma csol_mem_csols:\n  assumes \"t \\<in> existence_ivl t0 x0\"\n  shows \"(csol t0 x0 t, t) \\<in> csols t0 x0\"", "lemma csol:\n  assumes \"t \\<in> existence_ivl t0 x0\"\n  shows \"t \\<in> T\" \"{t0--t} \\<subseteq> T\" \"csol t0 x0 t t0 = x0\" \"(csol t0 x0 t solves_ode f) {t0--t} X\"", "lemma existence_ivl_initial_time_iff[simp]: \"t0 \\<in> existence_ivl t0 x0 \\<longleftrightarrow> t0 \\<in> T \\<and> x0 \\<in> X\"", "lemma existence_ivl_initial_time: \"t0 \\<in> T \\<Longrightarrow> x0 \\<in> X \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0\"", "lemmas mem_existence_ivl_subset = csol(1)", "lemma existence_ivl_subset:\n  \"existence_ivl t0 x0 \\<subseteq> T\"", "lemma is_interval_existence_ivl[intro, simp]: \"is_interval (existence_ivl t0 x0)\"", "lemma connected_existence_ivl[intro, simp]: \"connected (existence_ivl t0 x0)\"", "lemma in_existence_between_zeroI:\n  \"t \\<in> existence_ivl t0 x0 \\<Longrightarrow> s \\<in> {t0 -- t} \\<Longrightarrow> s \\<in> existence_ivl t0 x0\"", "lemma segment_subset_existence_ivl:\n  assumes \"s \\<in> existence_ivl t0 x0\" \"t \\<in> existence_ivl t0 x0\"\n  shows \"{s -- t} \\<subseteq> existence_ivl t0 x0\"", "lemma flow_initial_time_if: \"flow t0 x0 t0 = (if t0 \\<in> T \\<and> x0 \\<in> X then x0 else 0)\"", "lemma flow_initial_time[simp]: \"t0 \\<in> T \\<Longrightarrow> x0 \\<in> X \\<Longrightarrow> flow t0 x0 t0 = x0\"", "lemma open_existence_ivl[intro, simp]: \"open (existence_ivl t0 x0)\"", "lemma csols_unique:\n  assumes \"(x, t1) \\<in> csols t0 x0\"\n  assumes \"(y, t2) \\<in> csols t0 x0\"\n  shows \"\\<forall>t \\<in> {t0 -- t1} \\<inter> {t0 -- t2}. x t = y t\"", "lemma csol_unique:\n  assumes t1: \"t1 \\<in> existence_ivl t0 x0\"\n  assumes t2: \"t2 \\<in> existence_ivl t0 x0\"\n  assumes t: \"t \\<in> {t0 -- t1}\" \"t \\<in> {t0 -- t2}\"\n  shows \"csol t0 x0 t1 t = csol t0 x0 t2 t\"", "lemma flow_vderiv_on_left:\n  \"(flow t0 x0 has_vderiv_on (\\<lambda>x. f x (flow t0 x0 x))) (existence_ivl t0 x0 \\<inter> {..t0})\"", "lemma flow_vderiv_on_right:\n  \"(flow t0 x0 has_vderiv_on (\\<lambda>x. f x (flow t0 x0 x))) (existence_ivl t0 x0 \\<inter> {t0..})\"", "lemma flow_usolves_ode:\n  assumes iv_defined: \"t0 \\<in> T\" \"x0 \\<in> X\"\n  shows \"(flow t0 x0 usolves_ode f from t0) (existence_ivl t0 x0) X\"", "lemma flow_solves_ode: \"t0 \\<in> T \\<Longrightarrow> x0 \\<in> X \\<Longrightarrow> (flow t0 x0 solves_ode f) (existence_ivl t0 x0) X\"", "lemma equals_flowI:\n  assumes \"t0 \\<in> T'\"\n    \"is_interval T'\"\n    \"T' \\<subseteq> existence_ivl t0 x0\"\n    \"(z solves_ode f) T' X\"\n    \"z t0 = flow t0 x0 t0\" \"t \\<in> T'\"\n  shows \"z t = flow t0 x0 t\"", "lemma existence_ivl_maximal_segment:\n  assumes \"(x solves_ode f) {t0 -- t} X\" \"x t0 = x0\"\n  assumes \"{t0 -- t} \\<subseteq> T\"\n  shows \"t \\<in> existence_ivl t0 x0\"", "lemma existence_ivl_maximal_interval:\n  assumes \"(x solves_ode f) S X\" \"x t0 = x0\"\n  assumes \"t0 \\<in> S\" \"is_interval S\" \"S \\<subseteq> T\"\n  shows \"S \\<subseteq> existence_ivl t0 x0\"", "lemma maximal_existence_flow:\n  assumes sol: \"(x solves_ode f) K X\" and iv: \"x t0 = x0\"\n  assumes \"is_interval K\"\n  assumes \"t0 \\<in> K\"\n  assumes \"K \\<subseteq> T\"\n  shows \"K \\<subseteq> existence_ivl t0 x0\" \"\\<And>t. t \\<in> K \\<Longrightarrow> flow t0 x0 t = x t\"", "lemma maximal_existence_flowI:\n  assumes \"(x has_vderiv_on (\\<lambda>t. f t (x t))) K\"\n  assumes \"\\<And>t. t \\<in> K \\<Longrightarrow> x t \\<in> X\"\n  assumes \"x t0 = x0\"\n  assumes K: \"is_interval K\" \"t0 \\<in> K\" \"K \\<subseteq> T\"\n  shows \"K \\<subseteq> existence_ivl t0 x0\" \"\\<And>t. t \\<in> K \\<Longrightarrow> flow t0 x0 t = x t\"", "lemma flow_in_domain: \"t \\<in> existence_ivl t0 x0 \\<Longrightarrow> flow t0 x0 t \\<in> X\"", "lemma (in ll_on_open)\n  assumes \"t \\<in> existence_ivl s x\"\n  assumes \"x \\<in> X\"\n  assumes auto: \"\\<And>s t x. x \\<in> X \\<Longrightarrow> f s x = f t x\"\n  assumes \"T = UNIV\"\n  shows mem_existence_ivl_shift_autonomous1: \"t - s \\<in> existence_ivl 0 x\"\n    and flow_shift_autonomous1: \"flow s x t = flow 0 x (t - s)\"", "lemma (in ll_on_open)\n  assumes \"t - s \\<in> existence_ivl 0 x\"\n  assumes \"x \\<in> X\"\n  assumes auto: \"\\<And>s t x. x \\<in> X \\<Longrightarrow> f s x = f t x\"\n  assumes \"T = UNIV\"\n  shows mem_existence_ivl_shift_autonomous2: \"t \\<in> existence_ivl s x\"\n    and flow_shift_autonomous2: \"flow s x t = flow 0 x (t - s)\"", "lemma\n  flow_eq_rev:\n  assumes \"t \\<in> existence_ivl t0 x0\"\n  shows \"preflect t0 t \\<in> ll_on_open.existence_ivl (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0 x0\"\n    \"flow t0 x0 t = ll_on_open.flow (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0 x0 (preflect t0 t)\"", "lemma (in ll_on_open)\n  shows rev_flow_eq: \"t \\<in> ll_on_open.existence_ivl (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0 x0 \\<Longrightarrow>\n    ll_on_open.flow (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0 x0 t = flow t0 x0 (preflect t0 t)\"\n  and mem_rev_existence_ivl_eq:\n  \"t \\<in> ll_on_open.existence_ivl (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0 x0 \\<longleftrightarrow> preflect t0 t \\<in> existence_ivl t0 x0\"", "lemma\n  shows rev_existence_ivl_eq: \"ll_on_open.existence_ivl (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0 x0 = preflect t0 ` existence_ivl t0 x0\"\n    and existence_ivl_eq_rev: \"existence_ivl t0 x0 = preflect t0 ` ll_on_open.existence_ivl (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0 x0\""], "translations": [["", "lemma cball_eq_closed_segment_real:\n  fixes x e::real\n  shows \"cball x e = (if e \\<ge> 0 then {x - e -- x + e} else {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cball x e = (if 0 \\<le> e then {x - e--x + e} else {})", "by (auto simp: closed_segment_eq_real_ivl dist_real_def mem_cball)"], ["", "lemma cube_in_cball:\n  fixes x y :: \"'a::euclidean_space\"\n  assumes \"r > 0\"\n  assumes \"\\<And>i. i\\<in> Basis \\<Longrightarrow> dist (x \\<bullet> i) (y \\<bullet> i) \\<le> r / sqrt(DIM('a))\"\n  shows \"y \\<in> cball x r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> cball x r", "unfolding mem_cball euclidean_dist_l2[of x y] L2_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>i\\<in>Basis. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2)\n    \\<le> r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>i\\<in>Basis. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2)\n    \\<le> r", "have \"(\\<Sum>i\\<in>Basis. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2) \\<le> (\\<Sum>(i::'a)\\<in>Basis. (r / sqrt(DIM('a)))\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>Basis. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2)\n    \\<le> (\\<Sum>i\\<in>Basis. (r / sqrt (real DIM('a)))\\<^sup>2)", "proof (intro sum_mono)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> Basis \\<Longrightarrow>\n       (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2\n       \\<le> (r / sqrt (real DIM('a)))\\<^sup>2", "fix i :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> Basis \\<Longrightarrow>\n       (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2\n       \\<le> (r / sqrt (real DIM('a)))\\<^sup>2", "assume \"i \\<in> Basis\""], ["proof (state)\nthis:\n  i \\<in> Basis\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> Basis \\<Longrightarrow>\n       (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2\n       \\<le> (r / sqrt (real DIM('a)))\\<^sup>2", "thus \"(dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2 \\<le> (r / sqrt(DIM('a)))\\<^sup>2\""], ["proof (prove)\nusing this:\n  i \\<in> Basis\n\ngoal (1 subgoal):\n 1. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2\n    \\<le> (r / sqrt (real DIM('a)))\\<^sup>2", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> Basis\n  0 < r\n  ?i \\<in> Basis \\<Longrightarrow>\n  dist (x \\<bullet> ?i) (y \\<bullet> ?i) \\<le> r / sqrt (real DIM('a))\n\ngoal (1 subgoal):\n 1. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2\n    \\<le> (r / sqrt (real DIM('a)))\\<^sup>2", "by (auto intro: sqrt_le_D)"], ["proof (state)\nthis:\n  (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2\n  \\<le> (r / sqrt (real DIM('a)))\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>Basis. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2)\n  \\<le> (\\<Sum>i\\<in>Basis. (r / sqrt (real DIM('a)))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>i\\<in>Basis. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2)\n    \\<le> r", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>Basis. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2)\n  \\<le> (\\<Sum>i\\<in>Basis. (r / sqrt (real DIM('a)))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>i\\<in>Basis. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2)\n    \\<le> r", "have \"... \\<le> r\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>Basis. (r / sqrt (real DIM('a)))\\<^sup>2) \\<le> r\\<^sup>2", "using assms"], ["proof (prove)\nusing this:\n  0 < r\n  ?i \\<in> Basis \\<Longrightarrow>\n  dist (x \\<bullet> ?i) (y \\<bullet> ?i) \\<le> r / sqrt (real DIM('a))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>Basis. (r / sqrt (real DIM('a)))\\<^sup>2) \\<le> r\\<^sup>2", "by (simp add: power_divide)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>Basis. (r / sqrt (real DIM('a)))\\<^sup>2) \\<le> r\\<^sup>2\n\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>i\\<in>Basis. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2)\n    \\<le> r", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>i\\<in>Basis. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2)\n  \\<le> (\\<Sum>i\\<in>Basis. (r / sqrt (real DIM('a)))\\<^sup>2)\n  (\\<Sum>i\\<in>Basis. (r / sqrt (real DIM('a)))\\<^sup>2) \\<le> r\\<^sup>2", "show \"sqrt (\\<Sum>i\\<in>Basis. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2) \\<le> r\""], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>Basis. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2)\n  \\<le> (\\<Sum>i\\<in>Basis. (r / sqrt (real DIM('a)))\\<^sup>2)\n  (\\<Sum>i\\<in>Basis. (r / sqrt (real DIM('a)))\\<^sup>2) \\<le> r\\<^sup>2\n\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>i\\<in>Basis. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2)\n    \\<le> r", "using assms"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>Basis. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2)\n  \\<le> (\\<Sum>i\\<in>Basis. (r / sqrt (real DIM('a)))\\<^sup>2)\n  (\\<Sum>i\\<in>Basis. (r / sqrt (real DIM('a)))\\<^sup>2) \\<le> r\\<^sup>2\n  0 < r\n  ?i \\<in> Basis \\<Longrightarrow>\n  dist (x \\<bullet> ?i) (y \\<bullet> ?i) \\<le> r / sqrt (real DIM('a))\n\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>i\\<in>Basis. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2)\n    \\<le> r", "by (auto intro!: real_le_lsqrt sum_nonneg)"], ["proof (state)\nthis:\n  sqrt (\\<Sum>i\\<in>Basis. (dist (x \\<bullet> i) (y \\<bullet> i))\\<^sup>2)\n  \\<le> r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cbox_in_cball':\n  fixes x::\"'a::euclidean_space\"\n  assumes \"0 < r\"\n  shows \"\\<exists>b > 0. b \\<le> r \\<and> (\\<exists>B. B = (\\<Sum>i\\<in>Basis. b *\\<^sub>R i) \\<and> (\\<forall>y \\<in> cbox (x - B) (x + B). y \\<in> cball x r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b>0.\n       b \\<le> r \\<and>\n       (\\<exists>B.\n           B = sum ((*\\<^sub>R) b) Basis \\<and>\n           (\\<forall>y\\<in>cbox (x - B) (x + B). y \\<in> cball x r))", "proof (rule, safe)"], ["proof (state)\ngoal (3 subgoals):\n 1. 0 < ?b\n 2. ?b \\<le> r\n 3. \\<exists>B.\n       B = sum ((*\\<^sub>R) ?b) Basis \\<and>\n       (\\<forall>y\\<in>cbox (x - B) (x + B). y \\<in> cball x r)", "have \"r / sqrt (real DIM('a)) \\<le> r / 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r / sqrt (real DIM('a)) \\<le> r / 1", "using assms"], ["proof (prove)\nusing this:\n  0 < r\n\ngoal (1 subgoal):\n 1. r / sqrt (real DIM('a)) \\<le> r / 1", "by (auto simp: divide_simps real_of_nat_ge_one_iff)"], ["proof (state)\nthis:\n  r / sqrt (real DIM('a)) \\<le> r / 1\n\ngoal (3 subgoals):\n 1. 0 < ?b\n 2. ?b \\<le> r\n 3. \\<exists>B.\n       B = sum ((*\\<^sub>R) ?b) Basis \\<and>\n       (\\<forall>y\\<in>cbox (x - B) (x + B). y \\<in> cball x r)", "thus \"r / sqrt (real DIM('a)) \\<le> r\""], ["proof (prove)\nusing this:\n  r / sqrt (real DIM('a)) \\<le> r / 1\n\ngoal (1 subgoal):\n 1. r / sqrt (real DIM('a)) \\<le> r", "by simp"], ["proof (state)\nthis:\n  r / sqrt (real DIM('a)) \\<le> r\n\ngoal (2 subgoals):\n 1. 0 < r / sqrt (real DIM('a))\n 2. \\<exists>B.\n       B = sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis \\<and>\n       (\\<forall>y\\<in>cbox (x - B) (x + B). y \\<in> cball x r)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < r / sqrt (real DIM('a))\n 2. \\<exists>B.\n       B = sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis \\<and>\n       (\\<forall>y\\<in>cbox (x - B) (x + B). y \\<in> cball x r)", "let ?B = \"\\<Sum>i\\<in>Basis. (r / sqrt (real DIM('a))) *\\<^sub>R i\""], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < r / sqrt (real DIM('a))\n 2. \\<exists>B.\n       B = sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis \\<and>\n       (\\<forall>y\\<in>cbox (x - B) (x + B). y \\<in> cball x r)", "show \"\\<exists>B. B = ?B \\<and> (\\<forall>y \\<in> cbox (x - B) (x + B). y \\<in> cball x r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B.\n       B = sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis \\<and>\n       (\\<forall>y\\<in>cbox (x - B) (x + B). y \\<in> cball x r)", "proof (rule, safe)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?B = sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis\n 2. \\<And>y.\n       y \\<in> cbox (x - ?B) (x + ?B) \\<Longrightarrow> y \\<in> cball x r", "fix y::'a"], ["proof (state)\ngoal (2 subgoals):\n 1. ?B = sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis\n 2. \\<And>y.\n       y \\<in> cbox (x - ?B) (x + ?B) \\<Longrightarrow> y \\<in> cball x r", "assume \"y \\<in> cbox (x - ?B) (x + ?B)\""], ["proof (state)\nthis:\n  y \\<in> cbox (x - sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis)\n           (x + sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis)\n\ngoal (2 subgoals):\n 1. ?B = sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis\n 2. \\<And>y.\n       y \\<in> cbox (x - ?B) (x + ?B) \\<Longrightarrow> y \\<in> cball x r", "hence bounds:\n      \"\\<And>i. i \\<in> Basis \\<Longrightarrow> (x - ?B) \\<bullet> i \\<le> y \\<bullet> i\"\n      \"\\<And>i. i \\<in> Basis \\<Longrightarrow> y \\<bullet> i \\<le> (x + ?B) \\<bullet> i\""], ["proof (prove)\nusing this:\n  y \\<in> cbox (x - sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis)\n           (x + sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i \\<in> Basis \\<Longrightarrow>\n        (x - sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis) \\<bullet> i\n        \\<le> y \\<bullet> i) &&&\n    (\\<And>i.\n        i \\<in> Basis \\<Longrightarrow>\n        y \\<bullet> i\n        \\<le> (x +\n               sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis) \\<bullet>\n              i)", "by (auto simp: mem_box)"], ["proof (state)\nthis:\n  ?i1 \\<in> Basis \\<Longrightarrow>\n  (x - sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis) \\<bullet> ?i1\n  \\<le> y \\<bullet> ?i1\n  ?i1 \\<in> Basis \\<Longrightarrow>\n  y \\<bullet> ?i1\n  \\<le> (x + sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis) \\<bullet>\n        ?i1\n\ngoal (2 subgoals):\n 1. ?B = sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis\n 2. \\<And>y.\n       y \\<in> cbox (x - ?B) (x + ?B) \\<Longrightarrow> y \\<in> cball x r", "show \"y \\<in> cball x r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> cball x r", "proof (intro cube_in_cball)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < r\n 2. \\<And>i.\n       i \\<in> Basis \\<Longrightarrow>\n       dist (x \\<bullet> i) (y \\<bullet> i) \\<le> r / sqrt (real DIM('a))", "fix i :: 'a"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < r\n 2. \\<And>i.\n       i \\<in> Basis \\<Longrightarrow>\n       dist (x \\<bullet> i) (y \\<bullet> i) \\<le> r / sqrt (real DIM('a))", "assume \"i\\<in> Basis\""], ["proof (state)\nthis:\n  i \\<in> Basis\n\ngoal (2 subgoals):\n 1. 0 < r\n 2. \\<And>i.\n       i \\<in> Basis \\<Longrightarrow>\n       dist (x \\<bullet> i) (y \\<bullet> i) \\<le> r / sqrt (real DIM('a))", "with bounds"], ["proof (chain)\npicking this:\n  ?i1 \\<in> Basis \\<Longrightarrow>\n  (x - sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis) \\<bullet> ?i1\n  \\<le> y \\<bullet> ?i1\n  ?i1 \\<in> Basis \\<Longrightarrow>\n  y \\<bullet> ?i1\n  \\<le> (x + sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis) \\<bullet>\n        ?i1\n  i \\<in> Basis", "have bounds_comp:\n        \"x \\<bullet> i - r / sqrt (real DIM('a)) \\<le> y \\<bullet> i\"\n        \"y \\<bullet> i \\<le> x \\<bullet> i + r / sqrt (real DIM('a))\""], ["proof (prove)\nusing this:\n  ?i1 \\<in> Basis \\<Longrightarrow>\n  (x - sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis) \\<bullet> ?i1\n  \\<le> y \\<bullet> ?i1\n  ?i1 \\<in> Basis \\<Longrightarrow>\n  y \\<bullet> ?i1\n  \\<le> (x + sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis) \\<bullet>\n        ?i1\n  i \\<in> Basis\n\ngoal (1 subgoal):\n 1. x \\<bullet> i - r / sqrt (real DIM('a)) \\<le> y \\<bullet> i &&&\n    y \\<bullet> i \\<le> x \\<bullet> i + r / sqrt (real DIM('a))", "by (auto simp: algebra_simps)"], ["proof (state)\nthis:\n  x \\<bullet> i - r / sqrt (real DIM('a)) \\<le> y \\<bullet> i\n  y \\<bullet> i \\<le> x \\<bullet> i + r / sqrt (real DIM('a))\n\ngoal (2 subgoals):\n 1. 0 < r\n 2. \\<And>i.\n       i \\<in> Basis \\<Longrightarrow>\n       dist (x \\<bullet> i) (y \\<bullet> i) \\<le> r / sqrt (real DIM('a))", "thus \"dist (x \\<bullet> i) (y \\<bullet> i) \\<le> r / sqrt (real DIM('a))\""], ["proof (prove)\nusing this:\n  x \\<bullet> i - r / sqrt (real DIM('a)) \\<le> y \\<bullet> i\n  y \\<bullet> i \\<le> x \\<bullet> i + r / sqrt (real DIM('a))\n\ngoal (1 subgoal):\n 1. dist (x \\<bullet> i) (y \\<bullet> i) \\<le> r / sqrt (real DIM('a))", "unfolding dist_real_def"], ["proof (prove)\nusing this:\n  x \\<bullet> i - r / sqrt (real DIM('a)) \\<le> y \\<bullet> i\n  y \\<bullet> i \\<le> x \\<bullet> i + r / sqrt (real DIM('a))\n\ngoal (1 subgoal):\n 1. \\<bar>x \\<bullet> i - y \\<bullet> i\\<bar> \\<le> r / sqrt (real DIM('a))", "by simp"], ["proof (state)\nthis:\n  dist (x \\<bullet> i) (y \\<bullet> i) \\<le> r / sqrt (real DIM('a))\n\ngoal (1 subgoal):\n 1. 0 < r", "qed (auto simp add: assms)"], ["proof (state)\nthis:\n  y \\<in> cball x r\n\ngoal (1 subgoal):\n 1. sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis =\n    sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis", "qed (rule)"], ["proof (state)\nthis:\n  \\<exists>B.\n     B = sum ((*\\<^sub>R) (r / sqrt (real DIM('a)))) Basis \\<and>\n     (\\<forall>y\\<in>cbox (x - B) (x + B). y \\<in> cball x r)\n\ngoal (1 subgoal):\n 1. 0 < r / sqrt (real DIM('a))", "qed (auto simp: assms)"], ["", "lemma Pair1_in_Basis: \"i \\<in> Basis \\<Longrightarrow> (i, 0) \\<in> Basis\"\n and Pair2_in_Basis: \"i \\<in> Basis \\<Longrightarrow> (0, i) \\<in> Basis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (i \\<in> Basis \\<Longrightarrow> (i, 0::'b) \\<in> Basis) &&&\n    (i \\<in> Basis \\<Longrightarrow> (0::'c, i) \\<in> Basis)", "by (auto simp: Basis_prod_def)"], ["", "lemma le_real_sqrt_sumsq' [simp]: \"y \\<le> sqrt (x * x + y * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<le> sqrt (x * x + y * y)", "by (simp add: power2_eq_square [symmetric])"], ["", "lemma cball_Pair_split_subset: \"cball (a, b) c \\<subseteq> cball a c \\<times> cball b c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cball (a, b) c \\<subseteq> cball a c \\<times> cball b c", "by (auto simp: dist_prod_def mem_cball power2_eq_square\n      intro: order_trans[OF le_real_sqrt_sumsq] order_trans[OF le_real_sqrt_sumsq'])"], ["", "lemma cball_times_subset: \"cball a (c/2) \\<times> cball b (c/2) \\<subseteq> cball (a, b) c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cball a (c / 2) \\<times> cball b (c / 2) \\<subseteq> cball (a, b) c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cball a (c / 2) \\<times> cball b (c / 2) \\<subseteq> cball (a, b) c", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. cball a (c / 2) \\<times> cball b (c / 2) \\<subseteq> cball (a, b) c", "fix a' b'"], ["proof (state)\ngoal (1 subgoal):\n 1. cball a (c / 2) \\<times> cball b (c / 2) \\<subseteq> cball (a, b) c", "have \"sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2) \\<le> dist a a' + dist b b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2)\n    \\<le> dist a a' + dist b b'", "by (rule real_le_lsqrt) (auto simp: power2_eq_square algebra_simps)"], ["proof (state)\nthis:\n  sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2)\n  \\<le> dist a a' + dist b b'\n\ngoal (1 subgoal):\n 1. cball a (c / 2) \\<times> cball b (c / 2) \\<subseteq> cball (a, b) c", "also"], ["proof (state)\nthis:\n  sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2)\n  \\<le> dist a a' + dist b b'\n\ngoal (1 subgoal):\n 1. cball a (c / 2) \\<times> cball b (c / 2) \\<subseteq> cball (a, b) c", "assume \"a' \\<in> cball a (c / 2)\""], ["proof (state)\nthis:\n  a' \\<in> cball a (c / 2)\n\ngoal (1 subgoal):\n 1. cball a (c / 2) \\<times> cball b (c / 2) \\<subseteq> cball (a, b) c", "then"], ["proof (chain)\npicking this:\n  a' \\<in> cball a (c / 2)", "have \"dist a a' \\<le> c / 2\""], ["proof (prove)\nusing this:\n  a' \\<in> cball a (c / 2)\n\ngoal (1 subgoal):\n 1. dist a a' \\<le> c / 2", "by (simp add: mem_cball)"], ["proof (state)\nthis:\n  dist a a' \\<le> c / 2\n\ngoal (1 subgoal):\n 1. cball a (c / 2) \\<times> cball b (c / 2) \\<subseteq> cball (a, b) c", "also"], ["proof (state)\nthis:\n  dist a a' \\<le> c / 2\n\ngoal (1 subgoal):\n 1. cball a (c / 2) \\<times> cball b (c / 2) \\<subseteq> cball (a, b) c", "assume \"b' \\<in> cball b (c / 2)\""], ["proof (state)\nthis:\n  b' \\<in> cball b (c / 2)\n\ngoal (1 subgoal):\n 1. cball a (c / 2) \\<times> cball b (c / 2) \\<subseteq> cball (a, b) c", "then"], ["proof (chain)\npicking this:\n  b' \\<in> cball b (c / 2)", "have \"dist b b' \\<le> c / 2\""], ["proof (prove)\nusing this:\n  b' \\<in> cball b (c / 2)\n\ngoal (1 subgoal):\n 1. dist b b' \\<le> c / 2", "by (simp add: mem_cball)"], ["proof (state)\nthis:\n  dist b b' \\<le> c / 2\n\ngoal (1 subgoal):\n 1. cball a (c / 2) \\<times> cball b (c / 2) \\<subseteq> cball (a, b) c", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x y.\n              x \\<le> y \\<Longrightarrow> x + dist b b' \\<le> y + dist b b';\n   \\<And>x y. x \\<le> y \\<Longrightarrow> c / 2 + x \\<le> c / 2 + y\\<rbrakk>\n  \\<Longrightarrow> sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2)\n                    \\<le> c / 2 + c / 2", "have \"sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2) \\<le> c\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y.\n              x \\<le> y \\<Longrightarrow> x + dist b b' \\<le> y + dist b b';\n   \\<And>x y. x \\<le> y \\<Longrightarrow> c / 2 + x \\<le> c / 2 + y\\<rbrakk>\n  \\<Longrightarrow> sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2)\n                    \\<le> c / 2 + c / 2\n\ngoal (1 subgoal):\n 1. sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2) \\<le> c", "by simp"], ["proof (state)\nthis:\n  sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2) \\<le> c\n\ngoal (1 subgoal):\n 1. cball a (c / 2) \\<times> cball b (c / 2) \\<subseteq> cball (a, b) c", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?a'2 \\<in> cball a (c / 2); ?b'2 \\<in> cball b (c / 2)\\<rbrakk>\n  \\<Longrightarrow> sqrt ((dist a ?a'2)\\<^sup>2 + (dist b ?b'2)\\<^sup>2)\n                    \\<le> c\n\ngoal (1 subgoal):\n 1. cball a (c / 2) \\<times> cball b (c / 2) \\<subseteq> cball (a, b) c", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a'2 \\<in> cball a (c / 2); ?b'2 \\<in> cball b (c / 2)\\<rbrakk>\n  \\<Longrightarrow> sqrt ((dist a ?a'2)\\<^sup>2 + (dist b ?b'2)\\<^sup>2)\n                    \\<le> c\n\ngoal (1 subgoal):\n 1. cball a (c / 2) \\<times> cball b (c / 2) \\<subseteq> cball (a, b) c", "by (auto simp: dist_prod_def mem_cball)"], ["proof (state)\nthis:\n  cball a (c / 2) \\<times> cball b (c / 2) \\<subseteq> cball (a, b) c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma eventually_bound_pairE:\n  assumes \"isCont f (t0, x0)\"\n  obtains B where\n    \"B \\<ge> 1\"\n    \"eventually (\\<lambda>e. \\<forall>x \\<in> cball t0 e \\<times> cball x0 e. norm (f x) \\<le> B) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>1 \\<le> B;\n         \\<forall>\\<^sub>F e in at_right 0.\n            \\<forall>x\\<in>cball t0 e \\<times> cball x0 e.\n               norm (f x) \\<le> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>1 \\<le> B;\n         \\<forall>\\<^sub>F e in at_right 0.\n            \\<forall>x\\<in>cball t0 e \\<times> cball x0 e.\n               norm (f x) \\<le> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms[simplified isCont_def, THEN tendstoD, OF zero_less_one]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at (t0, x0). dist (f x) (f (t0, x0)) < 1", "obtain d::real where d: \"d > 0\"\n    \"\\<And>x. x \\<noteq> (t0, x0) \\<Longrightarrow> dist x (t0, x0) < d \\<Longrightarrow> dist (f x) (f (t0, x0)) < 1\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at (t0, x0). dist (f x) (f (t0, x0)) < 1\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>0 < d;\n         \\<And>x.\n            \\<lbrakk>x \\<noteq> (t0, x0); dist x (t0, x0) < d\\<rbrakk>\n            \\<Longrightarrow> dist (f x) (f (t0, x0)) < 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at)"], ["proof (state)\nthis:\n  0 < d\n  \\<lbrakk>?x \\<noteq> (t0, x0); dist ?x (t0, x0) < d\\<rbrakk>\n  \\<Longrightarrow> dist (f ?x) (f (t0, x0)) < 1\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>1 \\<le> B;\n         \\<forall>\\<^sub>F e in at_right 0.\n            \\<forall>x\\<in>cball t0 e \\<times> cball x0 e.\n               norm (f x) \\<le> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have bound: \"norm (f (t, x)) \\<le> norm (f (t0, x0)) + 1\"\n    if \"t \\<in> cball t0 (d/3)\" \"x \\<in> cball x0 (d/3)\" for t x"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f (t, x)) \\<le> norm (f (t0, x0)) + 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. norm (f (t, x)) \\<le> norm (f (t0, x0)) + 1", "from that"], ["proof (chain)\npicking this:\n  t \\<in> cball t0 (d / 3)\n  x \\<in> cball x0 (d / 3)", "have \"norm (f (t, x) - f (t0, x0)) < 1\""], ["proof (prove)\nusing this:\n  t \\<in> cball t0 (d / 3)\n  x \\<in> cball x0 (d / 3)\n\ngoal (1 subgoal):\n 1. norm (f (t, x) - f (t0, x0)) < 1", "using \\<open>0 < d\\<close>"], ["proof (prove)\nusing this:\n  t \\<in> cball t0 (d / 3)\n  x \\<in> cball x0 (d / 3)\n  0 < d\n\ngoal (1 subgoal):\n 1. norm (f (t, x) - f (t0, x0)) < 1", "unfolding dist_norm[symmetric]"], ["proof (prove)\nusing this:\n  t \\<in> cball t0 (d / 3)\n  x \\<in> cball x0 (d / 3)\n  0 < d\n\ngoal (1 subgoal):\n 1. dist (f (t, x)) (f (t0, x0)) < 1", "apply (cases \"(t, x) = (t0, x0)\", force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<in> cball t0 (d / 3); x \\<in> cball x0 (d / 3); 0 < d;\n     (t, x) \\<noteq> (t0, x0)\\<rbrakk>\n    \\<Longrightarrow> dist (f (t, x)) (f (t0, x0)) < 1", "by (rule d) (auto simp: dist_commute dist_prod_def mem_cball\n        intro!: le_less_trans[OF sqrt_sum_squares_le_sum_abs])"], ["proof (state)\nthis:\n  norm (f (t, x) - f (t0, x0)) < 1\n\ngoal (1 subgoal):\n 1. norm (f (t, x)) \\<le> norm (f (t0, x0)) + 1", "then"], ["proof (chain)\npicking this:\n  norm (f (t, x) - f (t0, x0)) < 1", "show ?thesis"], ["proof (prove)\nusing this:\n  norm (f (t, x) - f (t0, x0)) < 1\n\ngoal (1 subgoal):\n 1. norm (f (t, x)) \\<le> norm (f (t0, x0)) + 1", "by norm"], ["proof (state)\nthis:\n  norm (f (t, x)) \\<le> norm (f (t0, x0)) + 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?t \\<in> cball t0 (d / 3); ?x \\<in> cball x0 (d / 3)\\<rbrakk>\n  \\<Longrightarrow> norm (f (?t, ?x)) \\<le> norm (f (t0, x0)) + 1\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>1 \\<le> B;\n         \\<forall>\\<^sub>F e in at_right 0.\n            \\<forall>x\\<in>cball t0 e \\<times> cball x0 e.\n               norm (f x) \\<le> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"norm (f (t0, x0)) + 1 \\<ge> 1\"\n    \"eventually (\\<lambda>e. \\<forall>x \\<in> cball t0 e \\<times> cball x0 e.\n      norm (f x) \\<le> norm (f (t0, x0)) + 1) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> norm (f (t0, x0)) + 1 &&&\n    \\<forall>\\<^sub>F e in at_right 0.\n       \\<forall>x\\<in>cball t0 e \\<times> cball x0 e.\n          norm (f x) \\<le> norm (f (t0, x0)) + 1", "using d(1) bound"], ["proof (prove)\nusing this:\n  0 < d\n  \\<lbrakk>?t \\<in> cball t0 (d / 3); ?x \\<in> cball x0 (d / 3)\\<rbrakk>\n  \\<Longrightarrow> norm (f (?t, ?x)) \\<le> norm (f (t0, x0)) + 1\n\ngoal (1 subgoal):\n 1. 1 \\<le> norm (f (t0, x0)) + 1 &&&\n    \\<forall>\\<^sub>F e in at_right 0.\n       \\<forall>x\\<in>cball t0 e \\<times> cball x0 e.\n          norm (f x) \\<le> norm (f (t0, x0)) + 1", "by (auto simp: eventually_at dist_real_def mem_cball intro!: exI[where x=\"d/3\"])"], ["proof (state)\nthis:\n  1 \\<le> norm (f (t0, x0)) + 1\n  \\<forall>\\<^sub>F e in at_right 0.\n     \\<forall>x\\<in>cball t0 e \\<times> cball x0 e.\n        norm (f x) \\<le> norm (f (t0, x0)) + 1\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>1 \\<le> B;\n         \\<forall>\\<^sub>F e in at_right 0.\n            \\<forall>x\\<in>cball t0 e \\<times> cball x0 e.\n               norm (f x) \\<le> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> norm (f (t0, x0)) + 1\n  \\<forall>\\<^sub>F e in at_right 0.\n     \\<forall>x\\<in>cball t0 e \\<times> cball x0 e.\n        norm (f x) \\<le> norm (f (t0, x0)) + 1\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  eventually_in_cballs:\n  assumes \"d > 0\" \"c > 0\"\n  shows \"eventually (\\<lambda>e. cball t0 (c * e) \\<times> (cball x0 e) \\<subseteq> cball (t0, x0) d) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F e in at_right 0.\n       cball t0 (c * e) \\<times> cball x0 e \\<subseteq> cball (t0, x0) d", "using assms"], ["proof (prove)\nusing this:\n  0 < d\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F e in at_right 0.\n       cball t0 (c * e) \\<times> cball x0 e \\<subseteq> cball (t0, x0) d", "by (auto simp: eventually_at dist_real_def field_simps dist_prod_def mem_cball\n    intro!: exI[where x=\"min d (d / c) / 3\"]\n    order_trans[OF sqrt_sum_squares_le_sum_abs])"], ["", "lemma cball_eq_sing':\n  fixes x :: \"'a::{metric_space,perfect_space}\"\n  shows \"cball x e = {y} \\<longleftrightarrow> e = 0 \\<and> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cball x e = {y}) = (e = 0 \\<and> x = y)", "using cball_eq_sing[of x e]"], ["proof (prove)\nusing this:\n  (cball x e = {x}) = (e = 0)\n\ngoal (1 subgoal):\n 1. (cball x e = {y}) = (e = 0 \\<and> x = y)", "apply (cases \"x = y\", force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(cball x e = {x}) = (e = 0); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> (cball x e = {y}) = (e = 0 \\<and> x = y)", "by (metis cball_empty centre_in_cball insert_not_empty not_le singletonD)"], ["", "locale ll_on_open = interval T for T +\n  fixes f::\"real \\<Rightarrow> 'a::{banach, heine_borel} \\<Rightarrow> 'a\" and X\n  assumes local_lipschitz: \"local_lipschitz T X f\"\n  assumes cont: \"\\<And>x. x \\<in> X \\<Longrightarrow> continuous_on T (\\<lambda>t. f t x)\"\n  assumes open_domain[intro!, simp]: \"open T\" \"open X\"\nbegin"], ["", "text \\<open>all flows on closed segments\\<close>"], ["", "definition csols where\n  \"csols t0 x0 = {(x, t1). {t0--t1} \\<subseteq> T \\<and> x t0 = x0 \\<and> (x solves_ode f) {t0--t1} X}\""], ["", "text \\<open>the maximal existence interval\\<close>"], ["", "definition \"existence_ivl t0 x0 = (\\<Union>(x, t1)\\<in>csols t0 x0 . {t0--t1})\""], ["", "text \\<open>witness flow\\<close>"], ["", "definition \"csol t0 x0 = (SOME csol. \\<forall>t \\<in> existence_ivl t0 x0. (csol t, t) \\<in> csols t0 x0)\""], ["", "text \\<open>unique flow\\<close>"], ["", "definition flow where \"flow t0 x0 = (\\<lambda>t. if t \\<in> existence_ivl t0 x0 then csol t0 x0 t t else 0)\""], ["", "end"], ["", "locale ll_on_open_it =\n  general?:\\<comment> \\<open>TODO: why is this qualification necessary? It seems only because of @{thm ll_on_open_it_axioms}\\<close>\n  ll_on_open + fixes t0::real\n  \\<comment> \\<open>if possible, all development should be done with \\<open>t0\\<close> as explicit parameter for initial time:\n    then it can be instantiated with \\<open>0\\<close> for autonomous ODEs\\<close>"], ["", "context ll_on_open begin"], ["", "sublocale ll_on_open_it where t0 = t0  for t0"], ["proof (prove)\ngoal (1 subgoal):\n 1. ll_on_open_it T f X", ".."], ["", "sublocale continuous_rhs T X f"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_rhs T X f", "by unfold_locales (rule continuous_on_TimesI[OF local_lipschitz cont])"], ["", "end"], ["", "context ll_on_open_it begin"], ["", "lemma ll_on_open_rev[intro, simp]: \"ll_on_open (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ll_on_open (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X", "using local_lipschitz interval"], ["proof (prove)\nusing this:\n  local_lipschitz T X f\n  is_interval T\n\ngoal (1 subgoal):\n 1. ll_on_open (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X", "by unfold_locales\n    (auto intro!: continuous_intros cont intro: local_lipschitz_compose1\n      simp: fun_Compl_def local_lipschitz_minus local_lipschitz_subset open_neg_translation\n        image_image preflect_def)"], ["", "lemma eventually_lipschitz:\n  assumes \"t0 \\<in> T\" \"x0 \\<in> X\" \"c > 0\"\n  obtains L where\n    \"eventually (\\<lambda>u. \\<forall>t' \\<in> cball t0 (c * u) \\<inter> T.\n      L-lipschitz_on (cball x0 u \\<inter> X) (\\<lambda>y. f t' y)) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<forall>\\<^sub>F u in at_right 0.\n           \\<forall>t'\\<in>cball t0 (c * u) \\<inter> T.\n              L-lipschitz_on (cball x0 u \\<inter> X)\n               (f t') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<forall>\\<^sub>F u in at_right 0.\n           \\<forall>t'\\<in>cball t0 (c * u) \\<inter> T.\n              L-lipschitz_on (cball x0 u \\<inter> X)\n               (f t') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from local_lipschitzE[OF local_lipschitz, OF \\<open>t0 \\<in> T\\<close> \\<open>x0 \\<in> X\\<close>]"], ["proof (chain)\npicking this:\n  (\\<And>u L.\n      \\<lbrakk>0 < u;\n       \\<And>s.\n          s \\<in> cball t0 u \\<inter> T \\<Longrightarrow>\n          L-lipschitz_on (cball x0 u \\<inter> X) (f s)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain u L where\n    \"u > 0\"\n    \"\\<And>t'. t' \\<in> cball t0 u \\<inter> T \\<Longrightarrow> L-lipschitz_on (cball x0 u \\<inter> X) (\\<lambda>y. f t' y)\""], ["proof (prove)\nusing this:\n  (\\<And>u L.\n      \\<lbrakk>0 < u;\n       \\<And>s.\n          s \\<in> cball t0 u \\<inter> T \\<Longrightarrow>\n          L-lipschitz_on (cball x0 u \\<inter> X) (f s)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>u L.\n        \\<lbrakk>0 < u;\n         \\<And>t'.\n            t' \\<in> cball t0 u \\<inter> T \\<Longrightarrow>\n            L-lipschitz_on (cball x0 u \\<inter> X) (f t')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < u\n  ?t' \\<in> cball t0 u \\<inter> T \\<Longrightarrow>\n  L-lipschitz_on (cball x0 u \\<inter> X) (f ?t')\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<forall>\\<^sub>F u in at_right 0.\n           \\<forall>t'\\<in>cball t0 (c * u) \\<inter> T.\n              L-lipschitz_on (cball x0 u \\<inter> X)\n               (f t') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "hence \"eventually (\\<lambda>u. \\<forall>t' \\<in> cball t0 (c * u) \\<inter> T.\n      L-lipschitz_on (cball x0 u \\<inter> X) (\\<lambda>y. f t' y)) (at_right 0)\""], ["proof (prove)\nusing this:\n  0 < u\n  ?t' \\<in> cball t0 u \\<inter> T \\<Longrightarrow>\n  L-lipschitz_on (cball x0 u \\<inter> X) (f ?t')\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F u in at_right 0.\n       \\<forall>t'\\<in>cball t0 (c * u) \\<inter> T.\n          L-lipschitz_on (cball x0 u \\<inter> X) (f t')", "using \\<open>u > 0\\<close> \\<open>c > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < u\n  ?t' \\<in> cball t0 u \\<inter> T \\<Longrightarrow>\n  L-lipschitz_on (cball x0 u \\<inter> X) (f ?t')\n  0 < u\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F u in at_right 0.\n       \\<forall>t'\\<in>cball t0 (c * u) \\<inter> T.\n          L-lipschitz_on (cball x0 u \\<inter> X) (f t')", "by (auto simp: dist_real_def eventually_at divide_simps algebra_simps\n      intro!: exI[where x=\"min u (u / c)\"]\n      intro: lipschitz_on_subset[where E=\"cball x0 u \\<inter> X\"])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F u in at_right 0.\n     \\<forall>t'\\<in>cball t0 (c * u) \\<inter> T.\n        L-lipschitz_on (cball x0 u \\<inter> X) (f t')\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<forall>\\<^sub>F u in at_right 0.\n           \\<forall>t'\\<in>cball t0 (c * u) \\<inter> T.\n              L-lipschitz_on (cball x0 u \\<inter> X)\n               (f t') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F u in at_right 0.\n     \\<forall>t'\\<in>cball t0 (c * u) \\<inter> T.\n        L-lipschitz_on (cball x0 u \\<inter> X) (f t')\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas continuous_on_Times_f = continuous"], ["", "lemmas continuous_on_f = continuous_rhs_comp"], ["", "lemma\n  lipschitz_on_compact:\n  assumes \"compact K\" \"K \\<subseteq> T\"\n  assumes \"compact Y\" \"Y \\<subseteq> X\"\n  obtains L where \"\\<And>t. t \\<in> K \\<Longrightarrow> L-lipschitz_on Y (f t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>L.\n        (\\<And>t.\n            t \\<in> K \\<Longrightarrow>\n            L-lipschitz_on Y (f t)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>L.\n        (\\<And>t.\n            t \\<in> K \\<Longrightarrow>\n            L-lipschitz_on Y (f t)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have cont: \"\\<And>x. x \\<in> Y \\<Longrightarrow> continuous_on K (\\<lambda>t. f t x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Y \\<Longrightarrow> continuous_on K (\\<lambda>t. f t x)", "using \\<open>Y \\<subseteq> X\\<close> \\<open>K \\<subseteq> T\\<close>"], ["proof (prove)\nusing this:\n  Y \\<subseteq> X\n  K \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Y \\<Longrightarrow> continuous_on K (\\<lambda>t. f t x)", "by (auto intro!: continuous_on_f continuous_intros)"], ["proof (state)\nthis:\n  ?x \\<in> Y \\<Longrightarrow> continuous_on K (\\<lambda>t. f t ?x)\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        (\\<And>t.\n            t \\<in> K \\<Longrightarrow>\n            L-lipschitz_on Y (f t)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from local_lipschitz"], ["proof (chain)\npicking this:\n  local_lipschitz T X f", "have \"local_lipschitz K Y f\""], ["proof (prove)\nusing this:\n  local_lipschitz T X f\n\ngoal (1 subgoal):\n 1. local_lipschitz K Y f", "by (rule local_lipschitz_subset[OF _ \\<open>K \\<subseteq> T\\<close> \\<open>Y \\<subseteq> X\\<close>])"], ["proof (state)\nthis:\n  local_lipschitz K Y f\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        (\\<And>t.\n            t \\<in> K \\<Longrightarrow>\n            L-lipschitz_on Y (f t)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from local_lipschitz_compact_implies_lipschitz[OF this \\<open>compact Y\\<close> \\<open>compact K\\<close> cont] that"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x. x \\<in> Y \\<Longrightarrow> x \\<in> Y;\n   \\<And>L.\n      (\\<And>t.\n          t \\<in> K \\<Longrightarrow>\n          L-lipschitz_on Y (f t)) \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  (\\<And>t.\n      t \\<in> K \\<Longrightarrow> ?L-lipschitz_on Y (f t)) \\<Longrightarrow>\n  thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x. x \\<in> Y \\<Longrightarrow> x \\<in> Y;\n   \\<And>L.\n      (\\<And>t.\n          t \\<in> K \\<Longrightarrow>\n          L-lipschitz_on Y (f t)) \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  (\\<And>t.\n      t \\<in> K \\<Longrightarrow> ?L-lipschitz_on Y (f t)) \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "by metis"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma csols_empty_iff: \"csols t0 x0 = {} \\<longleftrightarrow> t0 \\<notin> T \\<or> x0 \\<notin> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (csols t0 x0 = {}) = (t0 \\<notin> T \\<or> x0 \\<notin> X)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (csols t0 x0 = {}) = (t0 \\<notin> T \\<or> x0 \\<notin> X)\n 2. \\<not> ?P \\<Longrightarrow>\n    (csols t0 x0 = {}) = (t0 \\<notin> T \\<or> x0 \\<notin> X)", "assume iv_defined: \"t0 \\<in> T \\<and> x0 \\<in> X\""], ["proof (state)\nthis:\n  t0 \\<in> T \\<and> x0 \\<in> X\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (csols t0 x0 = {}) = (t0 \\<notin> T \\<or> x0 \\<notin> X)\n 2. \\<not> ?P \\<Longrightarrow>\n    (csols t0 x0 = {}) = (t0 \\<notin> T \\<or> x0 \\<notin> X)", "then"], ["proof (chain)\npicking this:\n  t0 \\<in> T \\<and> x0 \\<in> X", "have \"(\\<lambda>_. x0, t0) \\<in> csols t0 x0\""], ["proof (prove)\nusing this:\n  t0 \\<in> T \\<and> x0 \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. x0, t0) \\<in> csols t0 x0", "by (auto simp: csols_def intro!: solves_ode_singleton)"], ["proof (state)\nthis:\n  (\\<lambda>_. x0, t0) \\<in> csols t0 x0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (csols t0 x0 = {}) = (t0 \\<notin> T \\<or> x0 \\<notin> X)\n 2. \\<not> ?P \\<Longrightarrow>\n    (csols t0 x0 = {}) = (t0 \\<notin> T \\<or> x0 \\<notin> X)", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>_. x0, t0) \\<in> csols t0 x0", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>_. x0, t0) \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. (csols t0 x0 = {}) = (t0 \\<notin> T \\<or> x0 \\<notin> X)", "using \\<open>t0 \\<in> T \\<and> x0 \\<in> X\\<close>"], ["proof (prove)\nusing this:\n  (\\<lambda>_. x0, t0) \\<in> csols t0 x0\n  t0 \\<in> T \\<and> x0 \\<in> X\n\ngoal (1 subgoal):\n 1. (csols t0 x0 = {}) = (t0 \\<notin> T \\<or> x0 \\<notin> X)", "by auto"], ["proof (state)\nthis:\n  (csols t0 x0 = {}) = (t0 \\<notin> T \\<or> x0 \\<notin> X)\n\ngoal (1 subgoal):\n 1. \\<not> (t0 \\<in> T \\<and> x0 \\<in> X) \\<Longrightarrow>\n    (csols t0 x0 = {}) = (t0 \\<notin> T \\<or> x0 \\<notin> X)", "qed (auto simp: solves_ode_domainD csols_def)"], ["", "lemma csols_notempty: \"t0 \\<in> T \\<Longrightarrow> x0 \\<in> X \\<Longrightarrow> csols t0 x0 \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n    \\<Longrightarrow> csols t0 x0 \\<noteq> {}", "by (simp add: csols_empty_iff)"], ["", "lemma existence_ivl_empty_iff[simp]: \"existence_ivl t0 x0 = {} \\<longleftrightarrow> t0 \\<notin> T \\<or> x0 \\<notin> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (existence_ivl t0 x0 = {}) = (t0 \\<notin> T \\<or> x0 \\<notin> X)", "using csols_empty_iff"], ["proof (prove)\nusing this:\n  (csols t0 ?x0.0 = {}) = (t0 \\<notin> T \\<or> ?x0.0 \\<notin> X)\n\ngoal (1 subgoal):\n 1. (existence_ivl t0 x0 = {}) = (t0 \\<notin> T \\<or> x0 \\<notin> X)", "by (auto simp: existence_ivl_def)"], ["", "lemma existence_ivl_empty1[simp]: \"t0 \\<notin> T \\<Longrightarrow> existence_ivl t0 x0 = {}\"\n  and existence_ivl_empty2[simp]: \"x0 \\<notin> X \\<Longrightarrow> existence_ivl t0 x0 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t0 \\<notin> T \\<Longrightarrow> existence_ivl t0 x0 = {}) &&&\n    (x0 \\<notin> X \\<Longrightarrow> existence_ivl t0 x0 = {})", "using csols_empty_iff"], ["proof (prove)\nusing this:\n  (csols t0 ?x0.0 = {}) = (t0 \\<notin> T \\<or> ?x0.0 \\<notin> X)\n\ngoal (1 subgoal):\n 1. (t0 \\<notin> T \\<Longrightarrow> existence_ivl t0 x0 = {}) &&&\n    (x0 \\<notin> X \\<Longrightarrow> existence_ivl t0 x0 = {})", "by (auto simp: existence_ivl_def)"], ["", "lemma flow_undefined:\n  shows \"t0 \\<notin> T \\<Longrightarrow> flow t0 x0 = (\\<lambda>_. 0)\"\n    \"x0 \\<notin> X \\<Longrightarrow> flow t0 x0 = (\\<lambda>_. 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t0 \\<notin> T \\<Longrightarrow> flow t0 x0 = (\\<lambda>_. 0::'a)) &&&\n    (x0 \\<notin> X \\<Longrightarrow> flow t0 x0 = (\\<lambda>_. 0::'a))", "using existence_ivl_empty_iff"], ["proof (prove)\nusing this:\n  (existence_ivl t0 ?x0.0 = {}) = (t0 \\<notin> T \\<or> ?x0.0 \\<notin> X)\n\ngoal (1 subgoal):\n 1. (t0 \\<notin> T \\<Longrightarrow> flow t0 x0 = (\\<lambda>_. 0::'a)) &&&\n    (x0 \\<notin> X \\<Longrightarrow> flow t0 x0 = (\\<lambda>_. 0::'a))", "by (auto simp: flow_def)"], ["", "lemma (in ll_on_open) flow_eq_in_existence_ivlI:\n  assumes \"\\<And>u. x0 \\<in> X \\<Longrightarrow> u \\<in> existence_ivl t0 x0 \\<longleftrightarrow> g u \\<in> existence_ivl s0 x0\"\n  assumes \"\\<And>u. x0 \\<in> X \\<Longrightarrow> u \\<in> existence_ivl t0 x0 \\<Longrightarrow> flow t0 x0 u = flow s0 x0 (g u)\"\n  shows \"flow t0 x0 = (\\<lambda>t. flow s0 x0 (g t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow t0 x0 = (\\<lambda>t. flow s0 x0 (g t))", "apply (cases \"x0 \\<in> X\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. x0 \\<in> X \\<Longrightarrow> flow t0 x0 = (\\<lambda>t. flow s0 x0 (g t))\n 2. x0 \\<notin> X \\<Longrightarrow>\n    flow t0 x0 = (\\<lambda>t. flow s0 x0 (g t))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x0 \\<in> X \\<Longrightarrow> flow t0 x0 = (\\<lambda>t. flow s0 x0 (g t))", "using assms"], ["proof (prove)\nusing this:\n  x0 \\<in> X \\<Longrightarrow>\n  (?u \\<in> existence_ivl t0 x0) = (g ?u \\<in> existence_ivl s0 x0)\n  \\<lbrakk>x0 \\<in> X; ?u \\<in> existence_ivl t0 x0\\<rbrakk>\n  \\<Longrightarrow> flow t0 x0 ?u = flow s0 x0 (g ?u)\n\ngoal (1 subgoal):\n 1. x0 \\<in> X \\<Longrightarrow> flow t0 x0 = (\\<lambda>t. flow s0 x0 (g t))", "by (auto intro!: ext simp: flow_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x0 \\<notin> X \\<Longrightarrow>\n    flow t0 x0 = (\\<lambda>t. flow s0 x0 (g t))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x0 \\<notin> X \\<Longrightarrow>\n    flow t0 x0 = (\\<lambda>t. flow s0 x0 (g t))", "by (simp add: flow_undefined)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>Global maximal flow with local Lipschitz\\<close>"], ["", "text\\<open>\\label{sec:qpl-global-flow}\\<close>"], ["", "lemma local_unique_solution:\n  assumes iv_defined: \"t0 \\<in> T\" \"x0 \\<in> X\"\n  obtains et ex B L\n  where \"et > 0\" \"0 < ex\" \"cball t0 et \\<subseteq> T\" \"cball x0 ex \\<subseteq> X\"\n    \"unique_on_cylinder t0 (cball t0 et) x0 ex f B L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<forall>\\<^sub>F e::real in at_right 0. 0 < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually ((<) 0) (at_right 0)", "by (auto simp: eventually_at_filter)"], ["proof (state)\nthis:\n  eventually ((<) 0) (at_right 0)\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  eventually ((<) 0) (at_right 0)\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from open_Times[OF open_domain]"], ["proof (chain)\npicking this:\n  open (T \\<times> X)", "have \"open (T \\<times> X)\""], ["proof (prove)\nusing this:\n  open (T \\<times> X)\n\ngoal (1 subgoal):\n 1. open (T \\<times> X)", "."], ["proof (state)\nthis:\n  open (T \\<times> X)\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from at_within_open[OF _ this] iv_defined"], ["proof (chain)\npicking this:\n  ?a \\<in> T \\<times> X \\<Longrightarrow> at ?a within T \\<times> X = at ?a\n  t0 \\<in> T\n  x0 \\<in> X", "have \"isCont (\\<lambda>(t, x). f t x) (t0, x0)\""], ["proof (prove)\nusing this:\n  ?a \\<in> T \\<times> X \\<Longrightarrow> at ?a within T \\<times> X = at ?a\n  t0 \\<in> T\n  x0 \\<in> X\n\ngoal (1 subgoal):\n 1. isCont (\\<lambda>(t, x). f t x) (t0, x0)", "using continuous"], ["proof (prove)\nusing this:\n  ?a \\<in> T \\<times> X \\<Longrightarrow> at ?a within T \\<times> X = at ?a\n  t0 \\<in> T\n  x0 \\<in> X\n  continuous_on (T \\<times> X) (\\<lambda>(t, x). f t x)\n\ngoal (1 subgoal):\n 1. isCont (\\<lambda>(t, x). f t x) (t0, x0)", "by (auto simp: continuous_on_eq_continuous_within)"], ["proof (state)\nthis:\n  isCont (\\<lambda>(t, x). f t x) (t0, x0)\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from eventually_bound_pairE[OF this]"], ["proof (chain)\npicking this:\n  (\\<And>B.\n      \\<lbrakk>1 \\<le> B;\n       \\<forall>\\<^sub>F e in at_right 0.\n          \\<forall>x\\<in>cball t0 e \\<times> cball x0 e.\n             norm (case x of (t, x) \\<Rightarrow> f t x) \\<le> B\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain B where B:\n    \"1 \\<le> B\" \"\\<forall>\\<^sub>F e in at_right 0. \\<forall>t\\<in>cball t0 e. \\<forall>x\\<in>cball x0 e. norm (f t x) \\<le> B\""], ["proof (prove)\nusing this:\n  (\\<And>B.\n      \\<lbrakk>1 \\<le> B;\n       \\<forall>\\<^sub>F e in at_right 0.\n          \\<forall>x\\<in>cball t0 e \\<times> cball x0 e.\n             norm (case x of (t, x) \\<Rightarrow> f t x) \\<le> B\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>1 \\<le> B;\n         \\<forall>\\<^sub>F e in at_right 0.\n            \\<forall>t\\<in>cball t0 e.\n               \\<forall>x\\<in>cball x0 e. norm (f t x) \\<le> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force simp: )"], ["proof (state)\nthis:\n  1 \\<le> B\n  \\<forall>\\<^sub>F e in at_right 0.\n     \\<forall>t\\<in>cball t0 e.\n        \\<forall>x\\<in>cball x0 e. norm (f t x) \\<le> B\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note B(2)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F e in at_right 0.\n     \\<forall>t\\<in>cball t0 e.\n        \\<forall>x\\<in>cball x0 e. norm (f t x) \\<le> B\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F e in at_right 0.\n     \\<forall>t\\<in>cball t0 e.\n        \\<forall>x\\<in>cball x0 e. norm (f t x) \\<le> B\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define t where \"t \\<equiv> inverse B\""], ["proof (state)\nthis:\n  t \\<equiv> inverse B\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have te: \"\\<And>e. e > 0 \\<Longrightarrow> t * e > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e. 0 < e \\<Longrightarrow> 0 < t * e", "using \\<open>1 \\<le> B\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> B\n\ngoal (1 subgoal):\n 1. \\<And>e. 0 < e \\<Longrightarrow> 0 < t * e", "by (auto simp: t_def field_simps)"], ["proof (state)\nthis:\n  0 < ?e \\<Longrightarrow> 0 < t * ?e\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have t_pos: \"t > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < t", "using \\<open>1 \\<le> B\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> B\n\ngoal (1 subgoal):\n 1. 0 < t", "by (auto simp: t_def)"], ["proof (state)\nthis:\n  0 < t\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from B(2)"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F e in at_right 0.\n     \\<forall>t\\<in>cball t0 e.\n        \\<forall>x\\<in>cball x0 e. norm (f t x) \\<le> B", "obtain dB where \"0 < dB\" \"0 < dB / 2\"\n    and dB: \"\\<And>d t x. 0 < d \\<Longrightarrow> d < dB \\<Longrightarrow> t\\<in>cball t0 d \\<Longrightarrow> x\\<in>cball x0 d \\<Longrightarrow>\n      norm (f t x) \\<le> B\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F e in at_right 0.\n     \\<forall>t\\<in>cball t0 e.\n        \\<forall>x\\<in>cball x0 e. norm (f t x) \\<le> B\n\ngoal (1 subgoal):\n 1. (\\<And>dB.\n        \\<lbrakk>0 < dB; 0 < dB / 2;\n         \\<And>d t x.\n            \\<lbrakk>0 < d; d < dB; t \\<in> cball t0 d;\n             x \\<in> cball x0 d\\<rbrakk>\n            \\<Longrightarrow> norm (f t x) \\<le> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at dist_real_def Ball_def)"], ["proof (state)\nthis:\n  0 < dB\n  0 < dB / 2\n  \\<lbrakk>0 < ?d; ?d < dB; ?t \\<in> cball t0 ?d;\n   ?x \\<in> cball x0 ?d\\<rbrakk>\n  \\<Longrightarrow> norm (f ?t ?x) \\<le> B\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence dB': \"\\<And>t x. (t, x) \\<in> cball (t0, x0) (dB / 2) \\<Longrightarrow> norm (f t x) \\<le> B\""], ["proof (prove)\nusing this:\n  0 < dB\n  0 < dB / 2\n  \\<lbrakk>0 < ?d; ?d < dB; ?t \\<in> cball t0 ?d;\n   ?x \\<in> cball x0 ?d\\<rbrakk>\n  \\<Longrightarrow> norm (f ?t ?x) \\<le> B\n\ngoal (1 subgoal):\n 1. \\<And>t x.\n       (t, x) \\<in> cball (t0, x0) (dB / 2) \\<Longrightarrow>\n       norm (f t x) \\<le> B", "using cball_Pair_split_subset[of t0 x0 \"dB / 2\"]"], ["proof (prove)\nusing this:\n  0 < dB\n  0 < dB / 2\n  \\<lbrakk>0 < ?d; ?d < dB; ?t \\<in> cball t0 ?d;\n   ?x \\<in> cball x0 ?d\\<rbrakk>\n  \\<Longrightarrow> norm (f ?t ?x) \\<le> B\n  cball (t0, x0) (dB / 2)\n  \\<subseteq> cball t0 (dB / 2) \\<times> cball x0 (dB / 2)\n\ngoal (1 subgoal):\n 1. \\<And>t x.\n       (t, x) \\<in> cball (t0, x0) (dB / 2) \\<Longrightarrow>\n       norm (f t x) \\<le> B", "by (auto simp: eventually_at dist_real_def\n      simp del: mem_cball\n      intro!: dB[where d=\"dB/2\"])"], ["proof (state)\nthis:\n  (?t, ?x) \\<in> cball (t0, x0) (dB / 2) \\<Longrightarrow>\n  norm (f ?t ?x) \\<le> B\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from eventually_in_cballs[OF \\<open>0 < dB/2\\<close> t_pos, of t0 x0]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F e in at_right 0.\n     cball t0 (t * e) \\<times> cball x0 e\n     \\<subseteq> cball (t0, x0) (dB / 2)", "have \"\\<forall>\\<^sub>F e in at_right 0. \\<forall>t\\<in>cball t0 (t * e). \\<forall>x\\<in>cball x0 e. norm (f t x) \\<le> B\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F e in at_right 0.\n     cball t0 (t * e) \\<times> cball x0 e\n     \\<subseteq> cball (t0, x0) (dB / 2)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F e in at_right 0.\n       \\<forall>t\\<in>cball t0 (t * e).\n          \\<forall>x\\<in>cball x0 e. norm (f t x) \\<le> B", "unfolding eventually_at_filter"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in nhds 0.\n     x \\<noteq> 0 \\<longrightarrow>\n     x \\<in> {0<..} \\<longrightarrow>\n     cball t0 (t * x) \\<times> cball x0 x\n     \\<subseteq> cball (t0, x0) (dB / 2)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in nhds 0.\n       x \\<noteq> 0 \\<longrightarrow>\n       x \\<in> {0<..} \\<longrightarrow>\n       (\\<forall>t\\<in>cball t0 (t * x).\n           \\<forall>x\\<in>cball x0 x. norm (f t x) \\<le> B)", "by eventually_elim (auto intro!: dB')"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F e in at_right 0.\n     \\<forall>t\\<in>cball t0 (t * e).\n        \\<forall>x\\<in>cball x0 e. norm (f t x) \\<le> B\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F e in at_right 0.\n     \\<forall>t\\<in>cball t0 (t * e).\n        \\<forall>x\\<in>cball x0 e. norm (f t x) \\<le> B\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from eventually_lipschitz[OF iv_defined t_pos]"], ["proof (chain)\npicking this:\n  (\\<And>L.\n      \\<forall>\\<^sub>F u in at_right 0.\n         \\<forall>t'\\<in>cball t0 (t * u) \\<inter> T.\n            L-lipschitz_on (cball x0 u \\<inter> X) (f t') \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain L where\n    \"\\<forall>\\<^sub>F u in at_right 0. \\<forall>t'\\<in>cball t0 (t * u) \\<inter> T. L-lipschitz_on (cball x0 u \\<inter> X) (f t')\""], ["proof (prove)\nusing this:\n  (\\<And>L.\n      \\<forall>\\<^sub>F u in at_right 0.\n         \\<forall>t'\\<in>cball t0 (t * u) \\<inter> T.\n            L-lipschitz_on (cball x0 u \\<inter> X) (f t') \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<forall>\\<^sub>F u in at_right 0.\n           \\<forall>t'\\<in>cball t0 (t * u) \\<inter> T.\n              L-lipschitz_on (cball x0 u \\<inter> X)\n               (f t') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F u in at_right 0.\n     \\<forall>t'\\<in>cball t0 (t * u) \\<inter> T.\n        L-lipschitz_on (cball x0 u \\<inter> X) (f t')\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F u in at_right 0.\n     \\<forall>t'\\<in>cball t0 (t * u) \\<inter> T.\n        L-lipschitz_on (cball x0 u \\<inter> X) (f t')\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<forall>\\<^sub>F e in at_right 0. cball t0 (t * e) \\<subseteq> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F e in at_right 0. cball t0 (t * e) \\<subseteq> T", "using eventually_open_cball[OF open_domain(1) iv_defined(1)]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F e in at_right 0. cball t0 e \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F e in at_right 0. cball t0 (t * e) \\<subseteq> T", "by (subst eventually_filtermap[symmetric, where f=\"\\<lambda>x. t * x\"])\n      (simp add: filtermap_times_pos_at_right t_pos)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F e in at_right 0. cball t0 (t * e) \\<subseteq> T\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F e in at_right 0. cball t0 (t * e) \\<subseteq> T\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"eventually (\\<lambda>e. cball x0 e \\<subseteq> X) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F e in at_right 0. cball x0 e \\<subseteq> X", "using open_domain(2) iv_defined(2)"], ["proof (prove)\nusing this:\n  open X\n  x0 \\<in> X\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F e in at_right 0. cball x0 e \\<subseteq> X", "by (rule eventually_open_cball)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F e in at_right 0. cball x0 e \\<subseteq> X\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  eventually ((<) 0) (at_right 0)\n  \\<forall>\\<^sub>F e in at_right 0.\n     \\<forall>t\\<in>cball t0 e.\n        \\<forall>x\\<in>cball x0 e. norm (f t x) \\<le> B\n  \\<forall>\\<^sub>F e in at_right 0.\n     \\<forall>t\\<in>cball t0 (t * e).\n        \\<forall>x\\<in>cball x0 e. norm (f t x) \\<le> B\n  \\<forall>\\<^sub>F u in at_right 0.\n     \\<forall>t'\\<in>cball t0 (t * u) \\<inter> T.\n        L-lipschitz_on (cball x0 u \\<inter> X) (f t')\n  \\<forall>\\<^sub>F e in at_right 0. cball t0 (t * e) \\<subseteq> T\n  \\<forall>\\<^sub>F e in at_right 0. cball x0 e \\<subseteq> X", "have \"\\<forall>\\<^sub>F e in at_right 0. 0 < e \\<and> cball t0 (t * e) \\<subseteq> T \\<and> cball x0 e \\<subseteq> X \\<and>\n    unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L\""], ["proof (prove)\nusing this:\n  eventually ((<) 0) (at_right 0)\n  \\<forall>\\<^sub>F e in at_right 0.\n     \\<forall>t\\<in>cball t0 e.\n        \\<forall>x\\<in>cball x0 e. norm (f t x) \\<le> B\n  \\<forall>\\<^sub>F e in at_right 0.\n     \\<forall>t\\<in>cball t0 (t * e).\n        \\<forall>x\\<in>cball x0 e. norm (f t x) \\<le> B\n  \\<forall>\\<^sub>F u in at_right 0.\n     \\<forall>t'\\<in>cball t0 (t * u) \\<inter> T.\n        L-lipschitz_on (cball x0 u \\<inter> X) (f t')\n  \\<forall>\\<^sub>F e in at_right 0. cball t0 (t * e) \\<subseteq> T\n  \\<forall>\\<^sub>F e in at_right 0. cball x0 e \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F e in at_right 0.\n       0 < e \\<and>\n       cball t0 (t * e) \\<subseteq> T \\<and>\n       cball x0 e \\<subseteq> X \\<and>\n       unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>0 < e;\n        \\<forall>t\\<in>cball t0 e.\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t\\<in>cball t0 (t * e).\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n           L-lipschitz_on (cball x0 e \\<inter> X) (f t');\n        cball t0 (t * e) \\<subseteq> T; cball x0 e \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> 0 < e \\<and>\n                         cball t0 (t * e) \\<subseteq> T \\<and>\n                         cball x0 e \\<subseteq> X \\<and>\n                         unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "case (elim e)"], ["proof (state)\nthis:\n  0 < e\n  \\<forall>t\\<in>cball t0 e. \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B\n  \\<forall>t\\<in>cball t0 (t * e).\n     \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B\n  \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n     L-lipschitz_on (cball x0 e \\<inter> X) (f t')\n  cball t0 (t * e) \\<subseteq> T\n  cball x0 e \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>0 < e;\n        \\<forall>t\\<in>cball t0 e.\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t\\<in>cball t0 (t * e).\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n           L-lipschitz_on (cball x0 e \\<inter> X) (f t');\n        cball t0 (t * e) \\<subseteq> T; cball x0 e \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> 0 < e \\<and>\n                         cball t0 (t * e) \\<subseteq> T \\<and>\n                         cball x0 e \\<subseteq> X \\<and>\n                         unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "note \\<open>0 < e\\<close>"], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>0 < e;\n        \\<forall>t\\<in>cball t0 e.\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t\\<in>cball t0 (t * e).\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n           L-lipschitz_on (cball x0 e \\<inter> X) (f t');\n        cball t0 (t * e) \\<subseteq> T; cball x0 e \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> 0 < e \\<and>\n                         cball t0 (t * e) \\<subseteq> T \\<and>\n                         cball x0 e \\<subseteq> X \\<and>\n                         unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "moreover"], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>0 < e;\n        \\<forall>t\\<in>cball t0 e.\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t\\<in>cball t0 (t * e).\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n           L-lipschitz_on (cball x0 e \\<inter> X) (f t');\n        cball t0 (t * e) \\<subseteq> T; cball x0 e \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> 0 < e \\<and>\n                         cball t0 (t * e) \\<subseteq> T \\<and>\n                         cball x0 e \\<subseteq> X \\<and>\n                         unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "note T = \\<open>cball t0 (t * e) \\<subseteq> T\\<close>"], ["proof (state)\nthis:\n  cball t0 (t * e) \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>0 < e;\n        \\<forall>t\\<in>cball t0 e.\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t\\<in>cball t0 (t * e).\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n           L-lipschitz_on (cball x0 e \\<inter> X) (f t');\n        cball t0 (t * e) \\<subseteq> T; cball x0 e \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> 0 < e \\<and>\n                         cball t0 (t * e) \\<subseteq> T \\<and>\n                         cball x0 e \\<subseteq> X \\<and>\n                         unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "moreover"], ["proof (state)\nthis:\n  cball t0 (t * e) \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>0 < e;\n        \\<forall>t\\<in>cball t0 e.\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t\\<in>cball t0 (t * e).\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n           L-lipschitz_on (cball x0 e \\<inter> X) (f t');\n        cball t0 (t * e) \\<subseteq> T; cball x0 e \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> 0 < e \\<and>\n                         cball t0 (t * e) \\<subseteq> T \\<and>\n                         cball x0 e \\<subseteq> X \\<and>\n                         unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "note X = \\<open>cball x0 e \\<subseteq> X\\<close>"], ["proof (state)\nthis:\n  cball x0 e \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>0 < e;\n        \\<forall>t\\<in>cball t0 e.\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t\\<in>cball t0 (t * e).\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n           L-lipschitz_on (cball x0 e \\<inter> X) (f t');\n        cball t0 (t * e) \\<subseteq> T; cball x0 e \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> 0 < e \\<and>\n                         cball t0 (t * e) \\<subseteq> T \\<and>\n                         cball x0 e \\<subseteq> X \\<and>\n                         unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "moreover"], ["proof (state)\nthis:\n  cball x0 e \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>0 < e;\n        \\<forall>t\\<in>cball t0 e.\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t\\<in>cball t0 (t * e).\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n           L-lipschitz_on (cball x0 e \\<inter> X) (f t');\n        cball t0 (t * e) \\<subseteq> T; cball x0 e \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> 0 < e \\<and>\n                         cball t0 (t * e) \\<subseteq> T \\<and>\n                         cball x0 e \\<subseteq> X \\<and>\n                         unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "from elim Int_absorb2[OF \\<open>cball x0 e \\<subseteq> X\\<close>]"], ["proof (chain)\npicking this:\n  0 < e\n  \\<forall>t\\<in>cball t0 e. \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B\n  \\<forall>t\\<in>cball t0 (t * e).\n     \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B\n  \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n     L-lipschitz_on (cball x0 e \\<inter> X) (f t')\n  cball t0 (t * e) \\<subseteq> T\n  cball x0 e \\<subseteq> X\n  cball x0 e \\<inter> X = cball x0 e", "have L: \"t' \\<in> cball t0 (t * e) \\<inter> T \\<Longrightarrow> L-lipschitz_on (cball x0 e) (f t')\" for t'"], ["proof (prove)\nusing this:\n  0 < e\n  \\<forall>t\\<in>cball t0 e. \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B\n  \\<forall>t\\<in>cball t0 (t * e).\n     \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B\n  \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n     L-lipschitz_on (cball x0 e \\<inter> X) (f t')\n  cball t0 (t * e) \\<subseteq> T\n  cball x0 e \\<subseteq> X\n  cball x0 e \\<inter> X = cball x0 e\n\ngoal (1 subgoal):\n 1. t' \\<in> cball t0 (t * e) \\<inter> T \\<Longrightarrow>\n    L-lipschitz_on (cball x0 e) (f t')", "by auto"], ["proof (state)\nthis:\n  ?t' \\<in> cball t0 (t * e) \\<inter> T \\<Longrightarrow>\n  L-lipschitz_on (cball x0 e) (f ?t')\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>0 < e;\n        \\<forall>t\\<in>cball t0 e.\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t\\<in>cball t0 (t * e).\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n           L-lipschitz_on (cball x0 e \\<inter> X) (f t');\n        cball t0 (t * e) \\<subseteq> T; cball x0 e \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> 0 < e \\<and>\n                         cball t0 (t * e) \\<subseteq> T \\<and>\n                         cball x0 e \\<subseteq> X \\<and>\n                         unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "from elim"], ["proof (chain)\npicking this:\n  0 < e\n  \\<forall>t\\<in>cball t0 e. \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B\n  \\<forall>t\\<in>cball t0 (t * e).\n     \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B\n  \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n     L-lipschitz_on (cball x0 e \\<inter> X) (f t')\n  cball t0 (t * e) \\<subseteq> T\n  cball x0 e \\<subseteq> X", "have B: \"\\<And>t' x. t' \\<in> cball t0 (t * e) \\<Longrightarrow> x \\<in> cball x0 e \\<Longrightarrow> norm (f t' x) \\<le> B\""], ["proof (prove)\nusing this:\n  0 < e\n  \\<forall>t\\<in>cball t0 e. \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B\n  \\<forall>t\\<in>cball t0 (t * e).\n     \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B\n  \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n     L-lipschitz_on (cball x0 e \\<inter> X) (f t')\n  cball t0 (t * e) \\<subseteq> T\n  cball x0 e \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>t' x.\n       \\<lbrakk>t' \\<in> cball t0 (t * e); x \\<in> cball x0 e\\<rbrakk>\n       \\<Longrightarrow> norm (f t' x) \\<le> B", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?t' \\<in> cball t0 (t * e); ?x \\<in> cball x0 e\\<rbrakk>\n  \\<Longrightarrow> norm (f ?t' ?x) \\<le> B\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>0 < e;\n        \\<forall>t\\<in>cball t0 e.\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t\\<in>cball t0 (t * e).\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n           L-lipschitz_on (cball x0 e \\<inter> X) (f t');\n        cball t0 (t * e) \\<subseteq> T; cball x0 e \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> 0 < e \\<and>\n                         cball t0 (t * e) \\<subseteq> T \\<and>\n                         cball x0 e \\<subseteq> X \\<and>\n                         unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "have \"t * e \\<le> e / B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t * e \\<le> e / B", "by (auto simp: t_def cball_def dist_real_def inverse_eq_divide)"], ["proof (state)\nthis:\n  t * e \\<le> e / B\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>0 < e;\n        \\<forall>t\\<in>cball t0 e.\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t\\<in>cball t0 (t * e).\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n           L-lipschitz_on (cball x0 e \\<inter> X) (f t');\n        cball t0 (t * e) \\<subseteq> T; cball x0 e \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> 0 < e \\<and>\n                         cball t0 (t * e) \\<subseteq> T \\<and>\n                         cball x0 e \\<subseteq> X \\<and>\n                         unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "have \"{t0 -- t0 + t * e} \\<subseteq> cball t0 (t * e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0--t0 + t * e} \\<subseteq> cball t0 (t * e)", "using \\<open>t > 0\\<close> \\<open>e > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < t\n  0 < e\n\ngoal (1 subgoal):\n 1. {t0--t0 + t * e} \\<subseteq> cball t0 (t * e)", "by (auto simp: cball_eq_closed_segment_real closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  {t0--t0 + t * e} \\<subseteq> cball t0 (t * e)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>0 < e;\n        \\<forall>t\\<in>cball t0 e.\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t\\<in>cball t0 (t * e).\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n           L-lipschitz_on (cball x0 e \\<inter> X) (f t');\n        cball t0 (t * e) \\<subseteq> T; cball x0 e \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> 0 < e \\<and>\n                         cball t0 (t * e) \\<subseteq> T \\<and>\n                         cball x0 e \\<subseteq> X \\<and>\n                         unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "then"], ["proof (chain)\npicking this:\n  {t0--t0 + t * e} \\<subseteq> cball t0 (t * e)", "have \"unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L\""], ["proof (prove)\nusing this:\n  {t0--t0 + t * e} \\<subseteq> cball t0 (t * e)\n\ngoal (1 subgoal):\n 1. unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "using T X \\<open>t > 0\\<close> \\<open>e > 0\\<close> \\<open>t * e \\<le> e / B\\<close>"], ["proof (prove)\nusing this:\n  {t0--t0 + t * e} \\<subseteq> cball t0 (t * e)\n  cball t0 (t * e) \\<subseteq> T\n  cball x0 e \\<subseteq> X\n  0 < t\n  0 < e\n  t * e \\<le> e / B\n\ngoal (1 subgoal):\n 1. unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "by unfold_locales\n        (auto intro!: continuous_rhs_comp continuous_on_fst continuous_on_snd B L\n          continuous_on_id\n          simp: split_beta' dist_commute mem_cball)"], ["proof (state)\nthis:\n  unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>0 < e;\n        \\<forall>t\\<in>cball t0 e.\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t\\<in>cball t0 (t * e).\n           \\<forall>e\\<in>cball x0 e. norm (f t e) \\<le> B;\n        \\<forall>t'\\<in>cball t0 (t * e) \\<inter> T.\n           L-lipschitz_on (cball x0 e \\<inter> X) (f t');\n        cball t0 (t * e) \\<subseteq> T; cball x0 e \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> 0 < e \\<and>\n                         cball t0 (t * e) \\<subseteq> T \\<and>\n                         cball x0 e \\<subseteq> X \\<and>\n                         unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "ultimately"], ["proof (chain)\npicking this:\n  0 < e\n  cball t0 (t * e) \\<subseteq> T\n  cball x0 e \\<subseteq> X\n  unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "show ?case"], ["proof (prove)\nusing this:\n  0 < e\n  cball t0 (t * e) \\<subseteq> T\n  cball x0 e \\<subseteq> X\n  unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L\n\ngoal (1 subgoal):\n 1. 0 < e \\<and>\n    cball t0 (t * e) \\<subseteq> T \\<and>\n    cball x0 e \\<subseteq> X \\<and>\n    unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "by auto"], ["proof (state)\nthis:\n  0 < e \\<and>\n  cball t0 (t * e) \\<subseteq> T \\<and>\n  cball x0 e \\<subseteq> X \\<and>\n  unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F e in at_right 0.\n     0 < e \\<and>\n     cball t0 (t * e) \\<subseteq> T \\<and>\n     cball x0 e \\<subseteq> X \\<and>\n     unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from eventually_happens[OF this]"], ["proof (chain)\npicking this:\n  at_right 0 = bot \\<or>\n  (\\<exists>x>0.\n      cball t0 (t * x) \\<subseteq> T \\<and>\n      cball x0 x \\<subseteq> X \\<and>\n      unique_on_cylinder t0 (cball t0 (t * x)) x0 x f B L)", "obtain e where \"0 < e\" \"cball t0 (t * e) \\<subseteq> T\" \"cball x0 e \\<subseteq> X\"\n    \"unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L\""], ["proof (prove)\nusing this:\n  at_right 0 = bot \\<or>\n  (\\<exists>x>0.\n      cball t0 (t * x) \\<subseteq> T \\<and>\n      cball x0 x \\<subseteq> X \\<and>\n      unique_on_cylinder t0 (cball t0 (t * x)) x0 x f B L)\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; cball t0 (t * e) \\<subseteq> T;\n         cball x0 e \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis trivial_limit_at_right_real)"], ["proof (state)\nthis:\n  0 < e\n  cball t0 (t * e) \\<subseteq> T\n  cball x0 e \\<subseteq> X\n  unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t0 et \\<subseteq> T;\n         cball x0 ex \\<subseteq> X;\n         unique_on_cylinder t0 (cball t0 et) x0 ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with mult_pos_pos[OF \\<open>0 < t\\<close> \\<open>0 < e\\<close>]"], ["proof (chain)\npicking this:\n  0 < t * e\n  0 < e\n  cball t0 (t * e) \\<subseteq> T\n  cball x0 e \\<subseteq> X\n  unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < t * e\n  0 < e\n  cball t0 (t * e) \\<subseteq> T\n  cball x0 e \\<subseteq> X\n  unique_on_cylinder t0 (cball t0 (t * e)) x0 e f B L\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mem_existence_ivl_iv_defined:\n  assumes \"t \\<in> existence_ivl t0 x0\"\n  shows \"t0 \\<in> T\" \"x0 \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> T &&& x0 \\<in> X", "using assms existence_ivl_empty_iff"], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl t0 x0\n  (existence_ivl t0 ?x0.0 = {}) = (t0 \\<notin> T \\<or> ?x0.0 \\<notin> X)\n\ngoal (1 subgoal):\n 1. t0 \\<in> T &&& x0 \\<in> X", "unfolding atomize_conj"], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl t0 x0\n  (existence_ivl t0 ?x0.0 = {}) = (t0 \\<notin> T \\<or> ?x0.0 \\<notin> X)\n\ngoal (1 subgoal):\n 1. t0 \\<in> T \\<and> x0 \\<in> X", "by blast"], ["", "lemma csol_mem_csols:\n  assumes \"t \\<in> existence_ivl t0 x0\"\n  shows \"(csol t0 x0 t, t) \\<in> csols t0 x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (csol t0 x0 t, t) \\<in> csols t0 x0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (csol t0 x0 t, t) \\<in> csols t0 x0", "have \"\\<exists>csol. \\<forall>t \\<in> existence_ivl t0 x0. (csol t, t) \\<in> csols t0 x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>csol.\n       \\<forall>t\\<in>existence_ivl t0 x0. (csol t, t) \\<in> csols t0 x0", "proof (safe intro!: bchoice)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       \\<exists>y. (y, t) \\<in> csols t0 x0", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       \\<exists>y. (y, t) \\<in> csols t0 x0", "assume \"t \\<in> existence_ivl t0 x0\""], ["proof (state)\nthis:\n  t \\<in> existence_ivl t0 x0\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       \\<exists>y. (y, t) \\<in> csols t0 x0", "then"], ["proof (chain)\npicking this:\n  t \\<in> existence_ivl t0 x0", "obtain csol t1 where csol: \"(csol t, t1) \\<in> csols t0 x0\" \"t \\<in> {t0 -- t1}\""], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl t0 x0\n\ngoal (1 subgoal):\n 1. (\\<And>csol t1.\n        \\<lbrakk>(csol t, t1) \\<in> csols t0 x0; t \\<in> {t0--t1}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: existence_ivl_def)"], ["proof (state)\nthis:\n  (csol t, t1) \\<in> csols t0 x0\n  t \\<in> {t0--t1}\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       \\<exists>y. (y, t) \\<in> csols t0 x0", "then"], ["proof (chain)\npicking this:\n  (csol t, t1) \\<in> csols t0 x0\n  t \\<in> {t0--t1}", "have \"{t0--t} \\<subseteq> {t0 -- t1}\""], ["proof (prove)\nusing this:\n  (csol t, t1) \\<in> csols t0 x0\n  t \\<in> {t0--t1}\n\ngoal (1 subgoal):\n 1. {t0--t} \\<subseteq> {t0--t1}", "by (auto simp: closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  {t0--t} \\<subseteq> {t0--t1}\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       \\<exists>y. (y, t) \\<in> csols t0 x0", "then"], ["proof (chain)\npicking this:\n  {t0--t} \\<subseteq> {t0--t1}", "have \"(csol t, t) \\<in> csols t0 x0\""], ["proof (prove)\nusing this:\n  {t0--t} \\<subseteq> {t0--t1}\n\ngoal (1 subgoal):\n 1. (csol t, t) \\<in> csols t0 x0", "using csol"], ["proof (prove)\nusing this:\n  {t0--t} \\<subseteq> {t0--t1}\n  (csol t, t1) \\<in> csols t0 x0\n  t \\<in> {t0--t1}\n\ngoal (1 subgoal):\n 1. (csol t, t) \\<in> csols t0 x0", "by (auto simp: csols_def intro: solves_ode_on_subset)"], ["proof (state)\nthis:\n  (csol t, t) \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       \\<exists>y. (y, t) \\<in> csols t0 x0", "then"], ["proof (chain)\npicking this:\n  (csol t, t) \\<in> csols t0 x0", "show \"\\<exists>y. (y, t) \\<in> csols t0 x0\""], ["proof (prove)\nusing this:\n  (csol t, t) \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. \\<exists>y. (y, t) \\<in> csols t0 x0", "by force"], ["proof (state)\nthis:\n  \\<exists>y. (y, t) \\<in> csols t0 x0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>csol.\n     \\<forall>t\\<in>existence_ivl t0 x0. (csol t, t) \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. (csol t0 x0 t, t) \\<in> csols t0 x0", "then"], ["proof (chain)\npicking this:\n  \\<exists>csol.\n     \\<forall>t\\<in>existence_ivl t0 x0. (csol t, t) \\<in> csols t0 x0", "have \"\\<forall>t \\<in> existence_ivl t0 x0. (csol t0 x0 t, t) \\<in> csols t0 x0\""], ["proof (prove)\nusing this:\n  \\<exists>csol.\n     \\<forall>t\\<in>existence_ivl t0 x0. (csol t, t) \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>existence_ivl t0 x0. (csol t0 x0 t, t) \\<in> csols t0 x0", "unfolding csol_def"], ["proof (prove)\nusing this:\n  \\<exists>csol.\n     \\<forall>t\\<in>existence_ivl t0 x0. (csol t, t) \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>existence_ivl t0 x0.\n       ((SOME csol.\n            \\<forall>t\\<in>existence_ivl t0 x0.\n               (csol t, t) \\<in> csols t0 x0)\n         t,\n        t)\n       \\<in> csols t0 x0", "by (rule someI_ex)"], ["proof (state)\nthis:\n  \\<forall>t\\<in>existence_ivl t0 x0. (csol t0 x0 t, t) \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. (csol t0 x0 t, t) \\<in> csols t0 x0", "with assms"], ["proof (chain)\npicking this:\n  t \\<in> existence_ivl t0 x0\n  \\<forall>t\\<in>existence_ivl t0 x0. (csol t0 x0 t, t) \\<in> csols t0 x0", "show \"?thesis\""], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl t0 x0\n  \\<forall>t\\<in>existence_ivl t0 x0. (csol t0 x0 t, t) \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. (csol t0 x0 t, t) \\<in> csols t0 x0", "by auto"], ["proof (state)\nthis:\n  (csol t0 x0 t, t) \\<in> csols t0 x0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma csol:\n  assumes \"t \\<in> existence_ivl t0 x0\"\n  shows \"t \\<in> T\" \"{t0--t} \\<subseteq> T\" \"csol t0 x0 t t0 = x0\" \"(csol t0 x0 t solves_ode f) {t0--t} X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<in> T &&& {t0--t} \\<subseteq> T) &&&\n    csol t0 x0 t t0 = x0 &&& (csol t0 x0 t solves_ode f) {t0--t} X", "using csol_mem_csols[OF assms]"], ["proof (prove)\nusing this:\n  (csol t0 x0 t, t) \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. (t \\<in> T &&& {t0--t} \\<subseteq> T) &&&\n    csol t0 x0 t t0 = x0 &&& (csol t0 x0 t solves_ode f) {t0--t} X", "by (auto simp: csols_def)"], ["", "lemma existence_ivl_initial_time_iff[simp]: \"t0 \\<in> existence_ivl t0 x0 \\<longleftrightarrow> t0 \\<in> T \\<and> x0 \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t0 \\<in> existence_ivl t0 x0) = (t0 \\<in> T \\<and> x0 \\<in> X)", "using csols_empty_iff"], ["proof (prove)\nusing this:\n  (csols t0 ?x0.0 = {}) = (t0 \\<notin> T \\<or> ?x0.0 \\<notin> X)\n\ngoal (1 subgoal):\n 1. (t0 \\<in> existence_ivl t0 x0) = (t0 \\<in> T \\<and> x0 \\<in> X)", "by (auto simp: existence_ivl_def)"], ["", "lemma existence_ivl_initial_time: \"t0 \\<in> T \\<Longrightarrow> x0 \\<in> X \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n    \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0", "by simp"], ["", "lemmas mem_existence_ivl_subset = csol(1)"], ["", "lemma existence_ivl_subset:\n  \"existence_ivl t0 x0 \\<subseteq> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. existence_ivl t0 x0 \\<subseteq> T", "using mem_existence_ivl_subset"], ["proof (prove)\nusing this:\n  ?t \\<in> existence_ivl t0 ?x0.0 \\<Longrightarrow> ?t \\<in> T\n\ngoal (1 subgoal):\n 1. existence_ivl t0 x0 \\<subseteq> T", "by blast"], ["", "lemma is_interval_existence_ivl[intro, simp]: \"is_interval (existence_ivl t0 x0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval (existence_ivl t0 x0)", "unfolding is_interval_connected_1"], ["proof (prove)\ngoal (1 subgoal):\n 1. connected (existence_ivl t0 x0)", "by (auto simp: existence_ivl_def intro!: connected_Union)"], ["", "lemma connected_existence_ivl[intro, simp]: \"connected (existence_ivl t0 x0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected (existence_ivl t0 x0)", "using is_interval_connected"], ["proof (prove)\nusing this:\n  is_interval ?S \\<Longrightarrow> connected ?S\n\ngoal (1 subgoal):\n 1. connected (existence_ivl t0 x0)", "by blast"], ["", "lemma in_existence_between_zeroI:\n  \"t \\<in> existence_ivl t0 x0 \\<Longrightarrow> s \\<in> {t0 -- t} \\<Longrightarrow> s \\<in> existence_ivl t0 x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<in> existence_ivl t0 x0; s \\<in> {t0--t}\\<rbrakk>\n    \\<Longrightarrow> s \\<in> existence_ivl t0 x0", "by (meson existence_ivl_initial_time interval.closed_segment_subset_domainI interval.intro\n    is_interval_existence_ivl mem_existence_ivl_iv_defined(1) mem_existence_ivl_iv_defined(2))"], ["", "lemma segment_subset_existence_ivl:\n  assumes \"s \\<in> existence_ivl t0 x0\" \"t \\<in> existence_ivl t0 x0\"\n  shows \"{s -- t} \\<subseteq> existence_ivl t0 x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {s--t} \\<subseteq> existence_ivl t0 x0", "using assms is_interval_existence_ivl"], ["proof (prove)\nusing this:\n  s \\<in> existence_ivl t0 x0\n  t \\<in> existence_ivl t0 x0\n  is_interval (existence_ivl t0 ?x0.0)\n\ngoal (1 subgoal):\n 1. {s--t} \\<subseteq> existence_ivl t0 x0", "unfolding is_interval_convex_1"], ["proof (prove)\nusing this:\n  s \\<in> existence_ivl t0 x0\n  t \\<in> existence_ivl t0 x0\n  convex (existence_ivl t0 ?x0.0)\n\ngoal (1 subgoal):\n 1. {s--t} \\<subseteq> existence_ivl t0 x0", "by (rule closed_segment_subset)"], ["", "lemma flow_initial_time_if: \"flow t0 x0 t0 = (if t0 \\<in> T \\<and> x0 \\<in> X then x0 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow t0 x0 t0 = (if t0 \\<in> T \\<and> x0 \\<in> X then x0 else (0::'a))", "by (simp add: flow_def csol(3))"], ["", "lemma flow_initial_time[simp]: \"t0 \\<in> T \\<Longrightarrow> x0 \\<in> X \\<Longrightarrow> flow t0 x0 t0 = x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n    \\<Longrightarrow> flow t0 x0 t0 = x0", "by (auto simp: flow_initial_time_if)"], ["", "lemma open_existence_ivl[intro, simp]: \"open (existence_ivl t0 x0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open (existence_ivl t0 x0)", "proof (rule openI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       \\<exists>e>0. ball x e \\<subseteq> existence_ivl t0 x0", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       \\<exists>e>0. ball x e \\<subseteq> existence_ivl t0 x0", "assume t: \"t \\<in> existence_ivl t0 x0\""], ["proof (state)\nthis:\n  t \\<in> existence_ivl t0 x0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       \\<exists>e>0. ball x e \\<subseteq> existence_ivl t0 x0", "note csol = csol[OF this]"], ["proof (state)\nthis:\n  t \\<in> T\n  {t0--t} \\<subseteq> T\n  csol t0 x0 t t0 = x0\n  (csol t0 x0 t solves_ode f) {t0--t} X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       \\<exists>e>0. ball x e \\<subseteq> existence_ivl t0 x0", "note mem_existence_ivl_iv_defined[OF t]"], ["proof (state)\nthis:\n  t0 \\<in> T\n  x0 \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       \\<exists>e>0. ball x e \\<subseteq> existence_ivl t0 x0", "have \"flow t0 x0 t \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow t0 x0 t \\<in> X", "using \\<open>t \\<in> existence_ivl t0 x0\\<close>"], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl t0 x0\n\ngoal (1 subgoal):\n 1. flow t0 x0 t \\<in> X", "using csol(4) solves_ode_domainD"], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl t0 x0\n  (csol t0 x0 t solves_ode f) {t0--t} X\n  \\<lbrakk>(?y solves_ode ?f) ?T ?X; ?t \\<in> ?T\\<rbrakk>\n  \\<Longrightarrow> ?y ?t \\<in> ?X\n\ngoal (1 subgoal):\n 1. flow t0 x0 t \\<in> X", "by (force simp add: flow_def)"], ["proof (state)\nthis:\n  flow t0 x0 t \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       \\<exists>e>0. ball x e \\<subseteq> existence_ivl t0 x0", "from ll_on_open_it.local_unique_solution[OF ll_on_open_it_axioms \\<open>t \\<in> T\\<close> this]"], ["proof (chain)\npicking this:\n  (\\<And>et ex B L.\n      \\<lbrakk>0 < et; 0 < ex; cball t et \\<subseteq> T;\n       cball (flow t0 x0 t) ex \\<subseteq> X;\n       unique_on_cylinder t (cball t et) (flow t0 x0 t) ex f B L\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain et ex B L where lsol:\n    \"0 < et\"\n    \"0 < ex\"\n    \"cball t et \\<subseteq> T\"\n    \"cball (flow t0 x0 t) ex \\<subseteq> X\"\n    \"unique_on_cylinder t (cball t et) (flow t0 x0 t) ex f B L\""], ["proof (prove)\nusing this:\n  (\\<And>et ex B L.\n      \\<lbrakk>0 < et; 0 < ex; cball t et \\<subseteq> T;\n       cball (flow t0 x0 t) ex \\<subseteq> X;\n       unique_on_cylinder t (cball t et) (flow t0 x0 t) ex f B L\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t et \\<subseteq> T;\n         cball (flow t0 x0 t) ex \\<subseteq> X;\n         unique_on_cylinder t (cball t et) (flow t0 x0 t) ex f B L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  0 < et\n  0 < ex\n  cball t et \\<subseteq> T\n  cball (flow t0 x0 t) ex \\<subseteq> X\n  unique_on_cylinder t (cball t et) (flow t0 x0 t) ex f B L\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       \\<exists>e>0. ball x e \\<subseteq> existence_ivl t0 x0", "then"], ["proof (chain)\npicking this:\n  0 < et\n  0 < ex\n  cball t et \\<subseteq> T\n  cball (flow t0 x0 t) ex \\<subseteq> X\n  unique_on_cylinder t (cball t et) (flow t0 x0 t) ex f B L", "interpret unique_on_cylinder t \"cball t et\" \"flow t0 x0 t\" ex \"cball (flow t0 x0 t) ex\" f B L"], ["proof (prove)\nusing this:\n  0 < et\n  0 < ex\n  cball t et \\<subseteq> T\n  cball (flow t0 x0 t) ex \\<subseteq> X\n  unique_on_cylinder t (cball t et) (flow t0 x0 t) ex f B L\n\ngoal (1 subgoal):\n 1. unique_on_cylinder t (cball t et) (flow t0 x0 t) ex f B L &&&\n    cball (flow t0 x0 t) ex \\<equiv> cball (flow t0 x0 t) ex", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       \\<exists>e>0. ball x e \\<subseteq> existence_ivl t0 x0", "from solution_usolves_ode"], ["proof (chain)\npicking this:\n  (solution usolves_ode f from t) (cball t et) (cball (flow t0 x0 t) ex)", "have lsol_ode: \"(solution solves_ode f) (cball t et) (cball (flow t0 x0 t) ex)\""], ["proof (prove)\nusing this:\n  (solution usolves_ode f from t) (cball t et) (cball (flow t0 x0 t) ex)\n\ngoal (1 subgoal):\n 1. (solution solves_ode f) (cball t et) (cball (flow t0 x0 t) ex)", "by (intro usolves_odeD)"], ["proof (state)\nthis:\n  (solution solves_ode f) (cball t et) (cball (flow t0 x0 t) ex)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       \\<exists>e>0. ball x e \\<subseteq> existence_ivl t0 x0", "show \"\\<exists>e>0. ball t e \\<subseteq> existence_ivl t0 x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e>0. ball t e \\<subseteq> existence_ivl t0 x0", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>e>0. ball t e \\<subseteq> existence_ivl t0 x0\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>e>0. ball t e \\<subseteq> existence_ivl t0 x0", "assume \"t = t0\""], ["proof (state)\nthis:\n  t = t0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>e>0. ball t e \\<subseteq> existence_ivl t0 x0\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>e>0. ball t e \\<subseteq> existence_ivl t0 x0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e>0. ball t e \\<subseteq> existence_ivl t0 x0", "proof (safe intro!: exI[where x=\"et\"] mult_pos_pos \\<open>0 < et\\<close> \\<open>0 < ex\\<close>)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> ball t et \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "fix t'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> ball t et \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "assume \"t' \\<in> ball t et\""], ["proof (state)\nthis:\n  t' \\<in> ball t et\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> ball t et \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "then"], ["proof (chain)\npicking this:\n  t' \\<in> ball t et", "have subset: \"{t0--t'} \\<subseteq> ball t et\""], ["proof (prove)\nusing this:\n  t' \\<in> ball t et\n\ngoal (1 subgoal):\n 1. {t0--t'} \\<subseteq> ball t et", "by (intro closed_segment_subset) (auto simp: \\<open>0 < et\\<close> \\<open>0 < ex\\<close> \\<open>t = t0\\<close>)"], ["proof (state)\nthis:\n  {t0--t'} \\<subseteq> ball t et\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> ball t et \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "also"], ["proof (state)\nthis:\n  {t0--t'} \\<subseteq> ball t et\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> ball t et \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "have \"\\<dots> \\<subseteq> cball t et\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ball t et \\<subseteq> cball t et", "by simp"], ["proof (state)\nthis:\n  ball t et \\<subseteq> cball t et\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> ball t et \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "also"], ["proof (state)\nthis:\n  ball t et \\<subseteq> cball t et\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> ball t et \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "note \\<open>cball t _ \\<subseteq> T\\<close>"], ["proof (state)\nthis:\n  cball t et \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> ball t et \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "finally"], ["proof (chain)\npicking this:\n  {t0--t'} \\<subseteq> T", "have \"{t0--t'} \\<subseteq> T\""], ["proof (prove)\nusing this:\n  {t0--t'} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. {t0--t'} \\<subseteq> T", "by simp"], ["proof (state)\nthis:\n  {t0--t'} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> ball t et \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "moreover"], ["proof (state)\nthis:\n  {t0--t'} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> ball t et \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "have \"(solution solves_ode f) {t0--t'} X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (solution solves_ode f) {t0--t'} X", "using lsol_ode"], ["proof (prove)\nusing this:\n  (solution solves_ode f) (cball t et) (cball (flow t0 x0 t) ex)\n\ngoal (1 subgoal):\n 1. (solution solves_ode f) {t0--t'} X", "apply (rule solves_ode_on_subset)"], ["proof (prove)\ngoal (2 subgoals):\n 1. {t0--t'} \\<subseteq> cball t et\n 2. cball (flow t0 x0 t) ex \\<subseteq> X", "using subset lsol"], ["proof (prove)\nusing this:\n  {t0--t'} \\<subseteq> ball t et\n  0 < et\n  0 < ex\n  cball t et \\<subseteq> T\n  cball (flow t0 x0 t) ex \\<subseteq> X\n  unique_on_cylinder t (cball t et) (flow t0 x0 t) ex f B L\n\ngoal (2 subgoals):\n 1. {t0--t'} \\<subseteq> cball t et\n 2. cball (flow t0 x0 t) ex \\<subseteq> X", "by (auto simp: mem_ball mem_cball)"], ["proof (state)\nthis:\n  (solution solves_ode f) {t0--t'} X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> ball t et \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "ultimately"], ["proof (chain)\npicking this:\n  {t0--t'} \\<subseteq> T\n  (solution solves_ode f) {t0--t'} X", "have \"(solution, t') \\<in> csols t0 x0\""], ["proof (prove)\nusing this:\n  {t0--t'} \\<subseteq> T\n  (solution solves_ode f) {t0--t'} X\n\ngoal (1 subgoal):\n 1. (solution, t') \\<in> csols t0 x0", "unfolding csols_def"], ["proof (prove)\nusing this:\n  {t0--t'} \\<subseteq> T\n  (solution solves_ode f) {t0--t'} X\n\ngoal (1 subgoal):\n 1. (solution, t')\n    \\<in> {(x, t1).\n           {t0--t1} \\<subseteq> T \\<and>\n           x t0 = x0 \\<and> (x solves_ode f) {t0--t1} X}", "using lsol \\<open>t' \\<in> ball _ _\\<close> lsol \\<open>t = t0\\<close> solution_iv \\<open>x0 \\<in> X\\<close>"], ["proof (prove)\nusing this:\n  {t0--t'} \\<subseteq> T\n  (solution solves_ode f) {t0--t'} X\n  0 < et\n  0 < ex\n  cball t et \\<subseteq> T\n  cball (flow t0 x0 t) ex \\<subseteq> X\n  unique_on_cylinder t (cball t et) (flow t0 x0 t) ex f B L\n  t' \\<in> ball t et\n  0 < et\n  0 < ex\n  cball t et \\<subseteq> T\n  cball (flow t0 x0 t) ex \\<subseteq> X\n  unique_on_cylinder t (cball t et) (flow t0 x0 t) ex f B L\n  t = t0\n  solution t = flow t0 x0 t\n  x0 \\<in> X\n\ngoal (1 subgoal):\n 1. (solution, t')\n    \\<in> {(x, t1).\n           {t0--t1} \\<subseteq> T \\<and>\n           x t0 = x0 \\<and> (x solves_ode f) {t0--t1} X}", "by (auto simp: csols_def)"], ["proof (state)\nthis:\n  (solution, t') \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> ball t et \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "then"], ["proof (chain)\npicking this:\n  (solution, t') \\<in> csols t0 x0", "show \"t' \\<in> existence_ivl t0 x0\""], ["proof (prove)\nusing this:\n  (solution, t') \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. t' \\<in> existence_ivl t0 x0", "unfolding existence_ivl_def"], ["proof (prove)\nusing this:\n  (solution, t') \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. t' \\<in> (\\<Union>(x, y)\\<in>csols t0 x0. {t0--y})", "by force"], ["proof (state)\nthis:\n  t' \\<in> existence_ivl t0 x0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>e>0. ball t e \\<subseteq> existence_ivl t0 x0\n\ngoal (1 subgoal):\n 1. t \\<noteq> t0 \\<Longrightarrow>\n    \\<exists>e>0. ball t e \\<subseteq> existence_ivl t0 x0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<noteq> t0 \\<Longrightarrow>\n    \\<exists>e>0. ball t e \\<subseteq> existence_ivl t0 x0", "assume \"t \\<noteq> t0\""], ["proof (state)\nthis:\n  t \\<noteq> t0\n\ngoal (1 subgoal):\n 1. t \\<noteq> t0 \\<Longrightarrow>\n    \\<exists>e>0. ball t e \\<subseteq> existence_ivl t0 x0", "let ?m = \"min et (dist t0 t / 2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<noteq> t0 \\<Longrightarrow>\n    \\<exists>e>0. ball t e \\<subseteq> existence_ivl t0 x0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e>0. ball t e \\<subseteq> existence_ivl t0 x0", "proof (safe intro!: exI[where x = ?m])"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < min et (dist t0 t / 2)\n 2. \\<And>x.\n       x \\<in> ball t (min et (dist t0 t / 2)) \\<Longrightarrow>\n       x \\<in> existence_ivl t0 x0", "let ?t1' = \"if t0 \\<le> t then t + et else t - et\""], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < min et (dist t0 t / 2)\n 2. \\<And>x.\n       x \\<in> ball t (min et (dist t0 t / 2)) \\<Longrightarrow>\n       x \\<in> existence_ivl t0 x0", "have lsol_ode: \"(solution solves_ode f) {t -- ?t1'} (cball (flow t0 x0 t) ex)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (solution solves_ode f) {t--if t0 \\<le> t then t + et else t - et}\n     (cball (flow t0 x0 t) ex)", "by (rule solves_ode_on_subset[OF lsol_ode])\n          (insert \\<open>0 < et\\<close> \\<open>0 < ex\\<close>, auto simp: mem_cball closed_segment_eq_real_ivl dist_real_def)"], ["proof (state)\nthis:\n  (solution solves_ode f) {t--if t0 \\<le> t then t + et else t - et}\n   (cball (flow t0 x0 t) ex)\n\ngoal (2 subgoals):\n 1. 0 < min et (dist t0 t / 2)\n 2. \\<And>x.\n       x \\<in> ball t (min et (dist t0 t / 2)) \\<Longrightarrow>\n       x \\<in> existence_ivl t0 x0", "let ?if = \"\\<lambda>ta. if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta\""], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < min et (dist t0 t / 2)\n 2. \\<And>x.\n       x \\<in> ball t (min et (dist t0 t / 2)) \\<Longrightarrow>\n       x \\<in> existence_ivl t0 x0", "let ?iff = \"\\<lambda>ta. if ta \\<in> {t0--t} then f ta else f ta\""], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < min et (dist t0 t / 2)\n 2. \\<And>x.\n       x \\<in> ball t (min et (dist t0 t / 2)) \\<Longrightarrow>\n       x \\<in> existence_ivl t0 x0", "have \"(?if solves_ode ?iff) ({t0--t} \\<union> {t -- ?t1'}) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>ta.\n         if ta \\<in> {t0--t} then csol t0 x0 t ta\n         else solution ta) solves_ode\n     (\\<lambda>ta. if ta \\<in> {t0--t} then f ta else f ta))\n     ({t0--t} \\<union> {t--if t0 \\<le> t then t + et else t - et}) X", "apply (rule connection_solves_ode[OF csol(4) lsol_ode, unfolded Un_absorb2[OF \\<open>_ \\<subseteq> X\\<close>]])"], ["proof (prove)\ngoal (4 subgoals):\n 1. closure {t--if t0 \\<le> t then t + et else t - et} \\<inter>\n    closure {t0--t}\n    \\<subseteq> {t0--t}\n 2. closure {t--if t0 \\<le> t then t + et else t - et} \\<inter>\n    closure {t0--t}\n    \\<subseteq> {t--if t0 \\<le> t then t + et else t - et}\n 3. \\<And>ta.\n       \\<lbrakk>ta \\<in> closure {t--if t0 \\<le> t then t + et else t - et};\n        ta \\<in> closure {t0--t}\\<rbrakk>\n       \\<Longrightarrow> csol t0 x0 t ta = solution ta\n 4. \\<And>ta.\n       \\<lbrakk>ta \\<in> closure {t--if t0 \\<le> t then t + et else t - et};\n        ta \\<in> closure {t0--t}\\<rbrakk>\n       \\<Longrightarrow> f ta (solution ta) = f ta (solution ta)", "using lsol solution_iv \\<open>t \\<in> existence_ivl t0 x0\\<close>"], ["proof (prove)\nusing this:\n  0 < et\n  0 < ex\n  cball t et \\<subseteq> T\n  cball (flow t0 x0 t) ex \\<subseteq> X\n  unique_on_cylinder t (cball t et) (flow t0 x0 t) ex f B L\n  solution t = flow t0 x0 t\n  t \\<in> existence_ivl t0 x0\n\ngoal (4 subgoals):\n 1. closure {t--if t0 \\<le> t then t + et else t - et} \\<inter>\n    closure {t0--t}\n    \\<subseteq> {t0--t}\n 2. closure {t--if t0 \\<le> t then t + et else t - et} \\<inter>\n    closure {t0--t}\n    \\<subseteq> {t--if t0 \\<le> t then t + et else t - et}\n 3. \\<And>ta.\n       \\<lbrakk>ta \\<in> closure {t--if t0 \\<le> t then t + et else t - et};\n        ta \\<in> closure {t0--t}\\<rbrakk>\n       \\<Longrightarrow> csol t0 x0 t ta = solution ta\n 4. \\<And>ta.\n       \\<lbrakk>ta \\<in> closure {t--if t0 \\<le> t then t + et else t - et};\n        ta \\<in> closure {t0--t}\\<rbrakk>\n       \\<Longrightarrow> f ta (solution ta) = f ta (solution ta)", "by (auto intro!: simp: closed_segment_eq_real_ivl flow_def split: if_split_asm)"], ["proof (state)\nthis:\n  ((\\<lambda>ta.\n       if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta) solves_ode\n   (\\<lambda>ta. if ta \\<in> {t0--t} then f ta else f ta))\n   ({t0--t} \\<union> {t--if t0 \\<le> t then t + et else t - et}) X\n\ngoal (2 subgoals):\n 1. 0 < min et (dist t0 t / 2)\n 2. \\<And>x.\n       x \\<in> ball t (min et (dist t0 t / 2)) \\<Longrightarrow>\n       x \\<in> existence_ivl t0 x0", "also"], ["proof (state)\nthis:\n  ((\\<lambda>ta.\n       if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta) solves_ode\n   (\\<lambda>ta. if ta \\<in> {t0--t} then f ta else f ta))\n   ({t0--t} \\<union> {t--if t0 \\<le> t then t + et else t - et}) X\n\ngoal (2 subgoals):\n 1. 0 < min et (dist t0 t / 2)\n 2. \\<And>x.\n       x \\<in> ball t (min et (dist t0 t / 2)) \\<Longrightarrow>\n       x \\<in> existence_ivl t0 x0", "have \"?iff = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>ta. if ta \\<in> {t0--t} then f ta else f ta) = f", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>ta. if ta \\<in> {t0--t} then f ta else f ta) = f\n\ngoal (2 subgoals):\n 1. 0 < min et (dist t0 t / 2)\n 2. \\<And>x.\n       x \\<in> ball t (min et (dist t0 t / 2)) \\<Longrightarrow>\n       x \\<in> existence_ivl t0 x0", "also"], ["proof (state)\nthis:\n  (\\<lambda>ta. if ta \\<in> {t0--t} then f ta else f ta) = f\n\ngoal (2 subgoals):\n 1. 0 < min et (dist t0 t / 2)\n 2. \\<And>x.\n       x \\<in> ball t (min et (dist t0 t / 2)) \\<Longrightarrow>\n       x \\<in> existence_ivl t0 x0", "have Un_eq: \"{t0--t} \\<union> {t -- ?t1'} = {t0 -- ?t1'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0--t} \\<union> {t--if t0 \\<le> t then t + et else t - et} =\n    {t0--if t0 \\<le> t then t + et else t - et}", "using \\<open>0 < et\\<close> \\<open>0 < ex\\<close>"], ["proof (prove)\nusing this:\n  0 < et\n  0 < ex\n\ngoal (1 subgoal):\n 1. {t0--t} \\<union> {t--if t0 \\<le> t then t + et else t - et} =\n    {t0--if t0 \\<le> t then t + et else t - et}", "by (auto simp: closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  {t0--t} \\<union> {t--if t0 \\<le> t then t + et else t - et} =\n  {t0--if t0 \\<le> t then t + et else t - et}\n\ngoal (2 subgoals):\n 1. 0 < min et (dist t0 t / 2)\n 2. \\<And>x.\n       x \\<in> ball t (min et (dist t0 t / 2)) \\<Longrightarrow>\n       x \\<in> existence_ivl t0 x0", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>ta.\n       if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta) solves_ode\n   f)\n   {t0--if t0 \\<le> t then t + et else t - et} X", "have continuation: \"(?if solves_ode f) {t0--?t1'} X\""], ["proof (prove)\nusing this:\n  ((\\<lambda>ta.\n       if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta) solves_ode\n   f)\n   {t0--if t0 \\<le> t then t + et else t - et} X\n\ngoal (1 subgoal):\n 1. ((\\<lambda>ta.\n         if ta \\<in> {t0--t} then csol t0 x0 t ta\n         else solution ta) solves_ode\n     f)\n     {t0--if t0 \\<le> t then t + et else t - et} X", "."], ["proof (state)\nthis:\n  ((\\<lambda>ta.\n       if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta) solves_ode\n   f)\n   {t0--if t0 \\<le> t then t + et else t - et} X\n\ngoal (2 subgoals):\n 1. 0 < min et (dist t0 t / 2)\n 2. \\<And>x.\n       x \\<in> ball t (min et (dist t0 t / 2)) \\<Longrightarrow>\n       x \\<in> existence_ivl t0 x0", "have subset_T: \"{t0 -- ?t1'} \\<subseteq> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0--if t0 \\<le> t then t + et else t - et} \\<subseteq> T", "unfolding Un_eq[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0--t} \\<union> {t--if t0 \\<le> t then t + et else t - et}\n    \\<subseteq> T", "apply (intro Un_least)"], ["proof (prove)\ngoal (2 subgoals):\n 1. {t0--t} \\<subseteq> T\n 2. {t--if t0 \\<le> t then t + et else t - et} \\<subseteq> T", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0--t} \\<subseteq> T", "using csol"], ["proof (prove)\nusing this:\n  t \\<in> T\n  {t0--t} \\<subseteq> T\n  csol t0 x0 t t0 = x0\n  (csol t0 x0 t solves_ode f) {t0--t} X\n\ngoal (1 subgoal):\n 1. {t0--t} \\<subseteq> T", "by force"], ["proof (prove)\ngoal (1 subgoal):\n 1. {t--if t0 \\<le> t then t + et else t - et} \\<subseteq> T", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. {t--if t0 \\<le> t then t + et else t - et} \\<subseteq> T", "using _ lsol(3)"], ["proof (prove)\nusing this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  cball t et \\<subseteq> T\n\ngoal (1 subgoal):\n 1. {t--if t0 \\<le> t then t + et else t - et} \\<subseteq> T", "apply (rule order_trans)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {t--if t0 \\<le> t then t + et else t - et} \\<subseteq> cball t et", "using \\<open>0 < et\\<close> \\<open>0 < ex\\<close>"], ["proof (prove)\nusing this:\n  0 < et\n  0 < ex\n\ngoal (1 subgoal):\n 1. {t--if t0 \\<le> t then t + et else t - et} \\<subseteq> cball t et", "by (auto simp: closed_segment_eq_real_ivl subset_iff mem_cball dist_real_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  {t0--if t0 \\<le> t then t + et else t - et} \\<subseteq> T\n\ngoal (2 subgoals):\n 1. 0 < min et (dist t0 t / 2)\n 2. \\<And>x.\n       x \\<in> ball t (min et (dist t0 t / 2)) \\<Longrightarrow>\n       x \\<in> existence_ivl t0 x0", "fix t'"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < min et (dist t0 t / 2)\n 2. \\<And>x.\n       x \\<in> ball t (min et (dist t0 t / 2)) \\<Longrightarrow>\n       x \\<in> existence_ivl t0 x0", "assume \"t' \\<in> ball t ?m\""], ["proof (state)\nthis:\n  t' \\<in> ball t (min et (dist t0 t / 2))\n\ngoal (2 subgoals):\n 1. 0 < min et (dist t0 t / 2)\n 2. \\<And>x.\n       x \\<in> ball t (min et (dist t0 t / 2)) \\<Longrightarrow>\n       x \\<in> existence_ivl t0 x0", "then"], ["proof (chain)\npicking this:\n  t' \\<in> ball t (min et (dist t0 t / 2))", "have scs: \"{t0 -- t'} \\<subseteq> {t0--?t1'}\""], ["proof (prove)\nusing this:\n  t' \\<in> ball t (min et (dist t0 t / 2))\n\ngoal (1 subgoal):\n 1. {t0--t'} \\<subseteq> {t0--if t0 \\<le> t then t + et else t - et}", "using \\<open>0 < et\\<close> \\<open>0 < ex\\<close>"], ["proof (prove)\nusing this:\n  t' \\<in> ball t (min et (dist t0 t / 2))\n  0 < et\n  0 < ex\n\ngoal (1 subgoal):\n 1. {t0--t'} \\<subseteq> {t0--if t0 \\<le> t then t + et else t - et}", "by (auto simp: closed_segment_eq_real_ivl dist_real_def abs_real_def mem_ball split: if_split_asm)"], ["proof (state)\nthis:\n  {t0--t'} \\<subseteq> {t0--if t0 \\<le> t then t + et else t - et}\n\ngoal (2 subgoals):\n 1. 0 < min et (dist t0 t / 2)\n 2. \\<And>x.\n       x \\<in> ball t (min et (dist t0 t / 2)) \\<Longrightarrow>\n       x \\<in> existence_ivl t0 x0", "with continuation"], ["proof (chain)\npicking this:\n  ((\\<lambda>ta.\n       if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta) solves_ode\n   f)\n   {t0--if t0 \\<le> t then t + et else t - et} X\n  {t0--t'} \\<subseteq> {t0--if t0 \\<le> t then t + et else t - et}", "have \"(?if solves_ode f) {t0 -- t'} X\""], ["proof (prove)\nusing this:\n  ((\\<lambda>ta.\n       if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta) solves_ode\n   f)\n   {t0--if t0 \\<le> t then t + et else t - et} X\n  {t0--t'} \\<subseteq> {t0--if t0 \\<le> t then t + et else t - et}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>ta.\n         if ta \\<in> {t0--t} then csol t0 x0 t ta\n         else solution ta) solves_ode\n     f)\n     {t0--t'} X", "by (rule solves_ode_on_subset) simp"], ["proof (state)\nthis:\n  ((\\<lambda>ta.\n       if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta) solves_ode\n   f)\n   {t0--t'} X\n\ngoal (2 subgoals):\n 1. 0 < min et (dist t0 t / 2)\n 2. \\<And>x.\n       x \\<in> ball t (min et (dist t0 t / 2)) \\<Longrightarrow>\n       x \\<in> existence_ivl t0 x0", "then"], ["proof (chain)\npicking this:\n  ((\\<lambda>ta.\n       if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta) solves_ode\n   f)\n   {t0--t'} X", "have \"(?if, t') \\<in> csols t0 x0\""], ["proof (prove)\nusing this:\n  ((\\<lambda>ta.\n       if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta) solves_ode\n   f)\n   {t0--t'} X\n\ngoal (1 subgoal):\n 1. (\\<lambda>ta. if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta,\n     t')\n    \\<in> csols t0 x0", "using lsol \\<open>t' \\<in> ball _ _\\<close> csol scs subset_T"], ["proof (prove)\nusing this:\n  ((\\<lambda>ta.\n       if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta) solves_ode\n   f)\n   {t0--t'} X\n  0 < et\n  0 < ex\n  cball t et \\<subseteq> T\n  cball (flow t0 x0 t) ex \\<subseteq> X\n  unique_on_cylinder t (cball t et) (flow t0 x0 t) ex f B L\n  t' \\<in> ball t (min et (dist t0 t / 2))\n  t \\<in> T\n  {t0--t} \\<subseteq> T\n  csol t0 x0 t t0 = x0\n  (csol t0 x0 t solves_ode f) {t0--t} X\n  {t0--t'} \\<subseteq> {t0--if t0 \\<le> t then t + et else t - et}\n  {t0--if t0 \\<le> t then t + et else t - et} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. (\\<lambda>ta. if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta,\n     t')\n    \\<in> csols t0 x0", "by (auto simp: csols_def subset_iff)"], ["proof (state)\nthis:\n  (\\<lambda>ta. if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta,\n   t')\n  \\<in> csols t0 x0\n\ngoal (2 subgoals):\n 1. 0 < min et (dist t0 t / 2)\n 2. \\<And>x.\n       x \\<in> ball t (min et (dist t0 t / 2)) \\<Longrightarrow>\n       x \\<in> existence_ivl t0 x0", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>ta. if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta,\n   t')\n  \\<in> csols t0 x0", "show \"t' \\<in> existence_ivl t0 x0\""], ["proof (prove)\nusing this:\n  (\\<lambda>ta. if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta,\n   t')\n  \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. t' \\<in> existence_ivl t0 x0", "unfolding existence_ivl_def"], ["proof (prove)\nusing this:\n  (\\<lambda>ta. if ta \\<in> {t0--t} then csol t0 x0 t ta else solution ta,\n   t')\n  \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. t' \\<in> (\\<Union>(x, y)\\<in>csols t0 x0. {t0--y})", "by force"], ["proof (state)\nthis:\n  t' \\<in> existence_ivl t0 x0\n\ngoal (1 subgoal):\n 1. 0 < min et (dist t0 t / 2)", "qed (insert \\<open>t \\<noteq> t0\\<close> \\<open>0 < et\\<close> \\<open>0 < ex\\<close>, simp)"], ["proof (state)\nthis:\n  \\<exists>e>0. ball t e \\<subseteq> existence_ivl t0 x0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>e>0. ball t e \\<subseteq> existence_ivl t0 x0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma csols_unique:\n  assumes \"(x, t1) \\<in> csols t0 x0\"\n  assumes \"(y, t2) \\<in> csols t0 x0\"\n  shows \"\\<forall>t \\<in> {t0 -- t1} \\<inter> {t0 -- t2}. x t = y t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}. x t = y t", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "let ?S = \"{t0 -- t1} \\<inter> {t0 -- t2}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "let ?Z0 = \"(\\<lambda>t. x t - y t) -` {0} \\<inter> ?S\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "let ?Z = \"connected_component_set ?Z0 t0\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "from assms"], ["proof (chain)\npicking this:\n  (x, t1) \\<in> csols t0 x0\n  (y, t2) \\<in> csols t0 x0", "have t1: \"t1 \\<in> existence_ivl t0 x0\" and t2: \"t2 \\<in> existence_ivl t0 x0\"\n    and x: \"(x solves_ode f) {t0 -- t1} X\"\n    and y: \"(y solves_ode f) {t0 -- t2} X\"\n    and sub1: \"{t0--t1} \\<subseteq> T\"\n    and sub2: \"{t0--t2} \\<subseteq> T\"\n    and x0: \"x t0 = x0\"\n    and y0: \"y t0 = x0\""], ["proof (prove)\nusing this:\n  (x, t1) \\<in> csols t0 x0\n  (y, t2) \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. ((t1 \\<in> existence_ivl t0 x0 &&& t2 \\<in> existence_ivl t0 x0) &&&\n     (x solves_ode f) {t0--t1} X &&& (y solves_ode f) {t0--t2} X) &&&\n    ({t0--t1} \\<subseteq> T &&& {t0--t2} \\<subseteq> T) &&&\n    x t0 = x0 &&& y t0 = x0", "by (auto simp: existence_ivl_def csols_def)"], ["proof (state)\nthis:\n  t1 \\<in> existence_ivl t0 x0\n  t2 \\<in> existence_ivl t0 x0\n  (x solves_ode f) {t0--t1} X\n  (y solves_ode f) {t0--t2} X\n  {t0--t1} \\<subseteq> T\n  {t0--t2} \\<subseteq> T\n  x t0 = x0\n  y t0 = x0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "assume \"\\<not> (\\<forall>t\\<in>?S. x t = y t)\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}. x t = y t)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "hence \"\\<exists>t\\<in>?S. x t \\<noteq> y t\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}. x t = y t)\n\ngoal (1 subgoal):\n 1. \\<exists>t\\<in>{t0--t1} \\<inter> {t0--t2}. x t \\<noteq> y t", "by simp"], ["proof (state)\nthis:\n  \\<exists>t\\<in>{t0--t1} \\<inter> {t0--t2}. x t \\<noteq> y t\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>t\\<in>{t0--t1} \\<inter> {t0--t2}. x t \\<noteq> y t", "obtain t_ne where t_ne: \"t_ne \\<in> ?S\" \"x t_ne \\<noteq> y t_ne\""], ["proof (prove)\nusing this:\n  \\<exists>t\\<in>{t0--t1} \\<inter> {t0--t2}. x t \\<noteq> y t\n\ngoal (1 subgoal):\n 1. (\\<And>t_ne.\n        \\<lbrakk>t_ne \\<in> {t0--t1} \\<inter> {t0--t2};\n         x t_ne \\<noteq> y t_ne\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  t_ne \\<in> {t0--t1} \\<inter> {t0--t2}\n  x t_ne \\<noteq> y t_ne\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "from assms"], ["proof (chain)\npicking this:\n  (x, t1) \\<in> csols t0 x0\n  (y, t2) \\<in> csols t0 x0", "have x: \"(x solves_ode f) {t0--t1} X\"\n    and y:\"(y solves_ode f) {t0--t2} X\""], ["proof (prove)\nusing this:\n  (x, t1) \\<in> csols t0 x0\n  (y, t2) \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. (x solves_ode f) {t0--t1} X &&& (y solves_ode f) {t0--t2} X", "by (auto simp: csols_def)"], ["proof (state)\nthis:\n  (x solves_ode f) {t0--t1} X\n  (y solves_ode f) {t0--t2} X\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "have \"compact ?S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact ({t0--t1} \\<inter> {t0--t2})", "by auto"], ["proof (state)\nthis:\n  compact ({t0--t1} \\<inter> {t0--t2})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "have \"closed ?Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed\n     (connected_component_set\n       ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n        ({t0--t1} \\<inter> {t0--t2}))\n       t0)", "by (intro closed_connected_component closed_vimage_Int)\n      (auto intro!: continuous_intros continuous_on_subset[OF solves_ode_continuous_on[OF x]]\n        continuous_on_subset[OF solves_ode_continuous_on[OF y]])"], ["proof (state)\nthis:\n  closed\n   (connected_component_set\n     ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n      ({t0--t1} \\<inter> {t0--t2}))\n     t0)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  closed\n   (connected_component_set\n     ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n      ({t0--t1} \\<inter> {t0--t2}))\n     t0)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "have \"t0 \\<in> ?Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> connected_component_set\n              ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n               ({t0--t1} \\<inter> {t0--t2}))\n              t0", "using assms"], ["proof (prove)\nusing this:\n  (x, t1) \\<in> csols t0 x0\n  (y, t2) \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. t0 \\<in> connected_component_set\n              ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n               ({t0--t1} \\<inter> {t0--t2}))\n              t0", "by (auto simp: csols_def)"], ["proof (state)\nthis:\n  t0 \\<in> connected_component_set\n            ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n             ({t0--t1} \\<inter> {t0--t2}))\n            t0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  t0 \\<in> connected_component_set\n            ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n             ({t0--t1} \\<inter> {t0--t2}))\n            t0", "have \"?Z \\<noteq> {}\""], ["proof (prove)\nusing this:\n  t0 \\<in> connected_component_set\n            ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n             ({t0--t1} \\<inter> {t0--t2}))\n            t0\n\ngoal (1 subgoal):\n 1. connected_component_set\n     ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n      ({t0--t1} \\<inter> {t0--t2}))\n     t0 \\<noteq>\n    {}", "by (auto intro!: exI[where x=t0])"], ["proof (state)\nthis:\n  connected_component_set\n   ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n    ({t0--t1} \\<inter> {t0--t2}))\n   t0 \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  closed\n   (connected_component_set\n     ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n      ({t0--t1} \\<inter> {t0--t2}))\n     t0)\n  connected_component_set\n   ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n    ({t0--t1} \\<inter> {t0--t2}))\n   t0 \\<noteq>\n  {}", "obtain t_max where max: \"t_max \\<in> ?Z\" \"y \\<in> ?Z \\<Longrightarrow> dist t_ne t_max \\<le> dist t_ne y\" for y"], ["proof (prove)\nusing this:\n  closed\n   (connected_component_set\n     ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n      ({t0--t1} \\<inter> {t0--t2}))\n     t0)\n  connected_component_set\n   ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n    ({t0--t1} \\<inter> {t0--t2}))\n   t0 \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. (\\<And>t_max.\n        \\<lbrakk>t_max\n                 \\<in> connected_component_set\n                        ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n                         ({t0--t1} \\<inter> {t0--t2}))\n                        t0;\n         \\<And>ya.\n            ya \\<in> connected_component_set\n                      ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n                       ({t0--t1} \\<inter> {t0--t2}))\n                      t0 \\<Longrightarrow>\n            dist t_ne t_max \\<le> dist t_ne ya\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast intro: distance_attains_inf)"], ["proof (state)\nthis:\n  t_max\n  \\<in> connected_component_set\n         ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n          ({t0--t1} \\<inter> {t0--t2}))\n         t0\n  ?y \\<in> connected_component_set\n            ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n             ({t0--t1} \\<inter> {t0--t2}))\n            t0 \\<Longrightarrow>\n  dist t_ne t_max \\<le> dist t_ne ?y\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "have max_equal_flows: \"x t = y t\" if \"t \\<in> {t0 -- t_max}\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. x t = y t", "using max(1) that"], ["proof (prove)\nusing this:\n  t_max\n  \\<in> connected_component_set\n         ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n          ({t0--t1} \\<inter> {t0--t2}))\n         t0\n  t \\<in> {t0--t_max}\n\ngoal (1 subgoal):\n 1. x t = y t", "by (auto simp: connected_component_def vimage_def subset_iff closed_segment_eq_real_ivl\n      split: if_split_asm) (metis connected_iff_interval)+"], ["proof (state)\nthis:\n  ?t \\<in> {t0--t_max} \\<Longrightarrow> x ?t = y ?t\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  ?t \\<in> {t0--t_max} \\<Longrightarrow> x ?t = y ?t", "have t_ne_outside: \"t_ne \\<notin> {t0 -- t_max}\""], ["proof (prove)\nusing this:\n  ?t \\<in> {t0--t_max} \\<Longrightarrow> x ?t = y ?t\n\ngoal (1 subgoal):\n 1. t_ne \\<notin> {t0--t_max}", "using t_ne"], ["proof (prove)\nusing this:\n  ?t \\<in> {t0--t_max} \\<Longrightarrow> x ?t = y ?t\n  t_ne \\<in> {t0--t1} \\<inter> {t0--t2}\n  x t_ne \\<noteq> y t_ne\n\ngoal (1 subgoal):\n 1. t_ne \\<notin> {t0--t_max}", "by auto"], ["proof (state)\nthis:\n  t_ne \\<notin> {t0--t_max}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "have \"x t_max = y t_max\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x t_max = y t_max", "by (rule max_equal_flows) simp"], ["proof (state)\nthis:\n  x t_max = y t_max\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "have \"t_max \\<in> ?S\" \"t_max \\<in> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t_max \\<in> {t0--t1} \\<inter> {t0--t2} &&& t_max \\<in> T", "using max sub1 sub2"], ["proof (prove)\nusing this:\n  t_max\n  \\<in> connected_component_set\n         ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n          ({t0--t1} \\<inter> {t0--t2}))\n         t0\n  ?y \\<in> connected_component_set\n            ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n             ({t0--t1} \\<inter> {t0--t2}))\n            t0 \\<Longrightarrow>\n  dist t_ne t_max \\<le> dist t_ne ?y\n  {t0--t1} \\<subseteq> T\n  {t0--t2} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. t_max \\<in> {t0--t1} \\<inter> {t0--t2} &&& t_max \\<in> T", "by (auto simp: connected_component_def)"], ["proof (state)\nthis:\n  t_max \\<in> {t0--t1} \\<inter> {t0--t2}\n  t_max \\<in> T\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "with solves_odeD[OF x]"], ["proof (chain)\npicking this:\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) {t0--t1}\n  ?t \\<in> {t0--t1} \\<Longrightarrow> x ?t \\<in> X\n  t_max \\<in> {t0--t1} \\<inter> {t0--t2}\n  t_max \\<in> T", "have \"x t_max \\<in> X\""], ["proof (prove)\nusing this:\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) {t0--t1}\n  ?t \\<in> {t0--t1} \\<Longrightarrow> x ?t \\<in> X\n  t_max \\<in> {t0--t1} \\<inter> {t0--t2}\n  t_max \\<in> T\n\ngoal (1 subgoal):\n 1. x t_max \\<in> X", "by auto"], ["proof (state)\nthis:\n  x t_max \\<in> X\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "from ll_on_open_it.local_unique_solution[OF ll_on_open_it_axioms \\<open>t_max \\<in> T\\<close> \\<open>x t_max \\<in> X\\<close>]"], ["proof (chain)\npicking this:\n  (\\<And>et ex B L.\n      \\<lbrakk>0 < et; 0 < ex; cball t_max et \\<subseteq> T;\n       cball (x t_max) ex \\<subseteq> X;\n       unique_on_cylinder t_max (cball t_max et) (x t_max) ex f B L\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain et ex B L\n    where \"0 < et\" \"0 < ex\"\n      and \"cball t_max et \\<subseteq> T\" \"cball (x t_max) ex \\<subseteq> X\"\n      and \"unique_on_cylinder t_max (cball t_max et) (x t_max) ex f B L\""], ["proof (prove)\nusing this:\n  (\\<And>et ex B L.\n      \\<lbrakk>0 < et; 0 < ex; cball t_max et \\<subseteq> T;\n       cball (x t_max) ex \\<subseteq> X;\n       unique_on_cylinder t_max (cball t_max et) (x t_max) ex f B L\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>et ex B L.\n        \\<lbrakk>0 < et; 0 < ex; cball t_max et \\<subseteq> T;\n         cball (x t_max) ex \\<subseteq> X;\n         unique_on_cylinder t_max (cball t_max et) (x t_max) ex f B\n          L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  0 < et\n  0 < ex\n  cball t_max et \\<subseteq> T\n  cball (x t_max) ex \\<subseteq> X\n  unique_on_cylinder t_max (cball t_max et) (x t_max) ex f B L\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  0 < et\n  0 < ex\n  cball t_max et \\<subseteq> T\n  cball (x t_max) ex \\<subseteq> X\n  unique_on_cylinder t_max (cball t_max et) (x t_max) ex f B L", "interpret unique_on_cylinder t_max \"cball t_max et\" \"x t_max\" ex \"cball (x t_max) ex\" f B L"], ["proof (prove)\nusing this:\n  0 < et\n  0 < ex\n  cball t_max et \\<subseteq> T\n  cball (x t_max) ex \\<subseteq> X\n  unique_on_cylinder t_max (cball t_max et) (x t_max) ex f B L\n\ngoal (1 subgoal):\n 1. unique_on_cylinder t_max (cball t_max et) (x t_max) ex f B L &&&\n    cball (x t_max) ex \\<equiv> cball (x t_max) ex", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "from usolves_ode_on_superset_domain[OF solution_usolves_ode solution_iv \\<open>cball _ _ \\<subseteq> X\\<close>]"], ["proof (chain)\npicking this:\n  (solution usolves_ode f from t_max) (cball t_max et) X", "have solution_usolves_on_X: \"(solution usolves_ode f from t_max) (cball t_max et) X\""], ["proof (prove)\nusing this:\n  (solution usolves_ode f from t_max) (cball t_max et) X\n\ngoal (1 subgoal):\n 1. (solution usolves_ode f from t_max) (cball t_max et) X", "by simp"], ["proof (state)\nthis:\n  (solution usolves_ode f from t_max) (cball t_max et) X\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "have ge_imps: \"t0 \\<le> t1\" \"t0 \\<le> t2\" \"t0 \\<le> t_max\" \"t_max < t_ne\" if \"t0 \\<le> t_ne\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t0 \\<le> t1 &&& t0 \\<le> t2) &&& t0 \\<le> t_max &&& t_max < t_ne", "using that t_ne_outside \\<open>0 < et\\<close> \\<open>0 < ex\\<close> max(1) \\<open>t_max \\<in> ?S\\<close> \\<open>t_max \\<in> T\\<close> t_ne x0 y0"], ["proof (prove)\nusing this:\n  t0 \\<le> t_ne\n  t_ne \\<notin> {t0--t_max}\n  0 < et\n  0 < ex\n  t_max\n  \\<in> connected_component_set\n         ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n          ({t0--t1} \\<inter> {t0--t2}))\n         t0\n  t_max \\<in> {t0--t1} \\<inter> {t0--t2}\n  t_max \\<in> T\n  t_ne \\<in> {t0--t1} \\<inter> {t0--t2}\n  x t_ne \\<noteq> y t_ne\n  x t0 = x0\n  y t0 = x0\n\ngoal (1 subgoal):\n 1. (t0 \\<le> t1 &&& t0 \\<le> t2) &&& t0 \\<le> t_max &&& t_max < t_ne", "by (auto simp: min_def dist_real_def max_def closed_segment_eq_real_ivl split: if_split_asm)"], ["proof (state)\nthis:\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t1\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t2\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t_max\n  t0 \\<le> t_ne \\<Longrightarrow> t_max < t_ne\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "have le_imps: \"t0 \\<ge> t1\" \"t0 \\<ge> t2\" \"t0 \\<ge> t_max\" \"t_max > t_ne\" if \"t0 \\<ge> t_ne\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t1 \\<le> t0 &&& t2 \\<le> t0) &&& t_max \\<le> t0 &&& t_ne < t_max", "using that t_ne_outside \\<open>0 < et\\<close> \\<open>0 < ex\\<close> max(1) \\<open>t_max \\<in> ?S\\<close> \\<open>t_max \\<in> T\\<close> t_ne x0 y0"], ["proof (prove)\nusing this:\n  t_ne \\<le> t0\n  t_ne \\<notin> {t0--t_max}\n  0 < et\n  0 < ex\n  t_max\n  \\<in> connected_component_set\n         ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n          ({t0--t1} \\<inter> {t0--t2}))\n         t0\n  t_max \\<in> {t0--t1} \\<inter> {t0--t2}\n  t_max \\<in> T\n  t_ne \\<in> {t0--t1} \\<inter> {t0--t2}\n  x t_ne \\<noteq> y t_ne\n  x t0 = x0\n  y t0 = x0\n\ngoal (1 subgoal):\n 1. (t1 \\<le> t0 &&& t2 \\<le> t0) &&& t_max \\<le> t0 &&& t_ne < t_max", "by (auto simp: min_def dist_real_def max_def closed_segment_eq_real_ivl split: if_split_asm)"], ["proof (state)\nthis:\n  t_ne \\<le> t0 \\<Longrightarrow> t1 \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t2 \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t_max \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t_ne < t_max\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "define tt where \"tt \\<equiv> if t0 \\<le> t_ne then min (t_max + et) t_ne else max (t_max - et) t_ne\""], ["proof (state)\nthis:\n  tt \\<equiv>\n  if t0 \\<le> t_ne then min (t_max + et) t_ne else max (t_max - et) t_ne\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "have \"tt \\<in> cball t_max et\" \"tt \\<in> {t0 -- t1}\" \"tt \\<in> {t0 -- t2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tt \\<in> cball t_max et &&& tt \\<in> {t0--t1} &&& tt \\<in> {t0--t2}", "using ge_imps le_imps \\<open>0 < et\\<close> t_ne(1)"], ["proof (prove)\nusing this:\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t1\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t2\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t_max\n  t0 \\<le> t_ne \\<Longrightarrow> t_max < t_ne\n  t_ne \\<le> t0 \\<Longrightarrow> t1 \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t2 \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t_max \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t_ne < t_max\n  0 < et\n  t_ne \\<in> {t0--t1} \\<inter> {t0--t2}\n\ngoal (1 subgoal):\n 1. tt \\<in> cball t_max et &&& tt \\<in> {t0--t1} &&& tt \\<in> {t0--t2}", "by (auto simp: mem_cball closed_segment_eq_real_ivl tt_def dist_real_def abs_real_def min_def max_def not_less)"], ["proof (state)\nthis:\n  tt \\<in> cball t_max et\n  tt \\<in> {t0--t1}\n  tt \\<in> {t0--t2}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "have segment_unsplit: \"{t0 -- t_max} \\<union> {t_max -- tt} = {t0 -- tt}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0--t_max} \\<union> {t_max--tt} = {t0--tt}", "using ge_imps le_imps \\<open>0 < et\\<close>"], ["proof (prove)\nusing this:\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t1\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t2\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t_max\n  t0 \\<le> t_ne \\<Longrightarrow> t_max < t_ne\n  t_ne \\<le> t0 \\<Longrightarrow> t1 \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t2 \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t_max \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t_ne < t_max\n  0 < et\n\ngoal (1 subgoal):\n 1. {t0--t_max} \\<union> {t_max--tt} = {t0--tt}", "by (auto simp: tt_def closed_segment_eq_real_ivl min_def max_def split: if_split_asm) arith"], ["proof (state)\nthis:\n  {t0--t_max} \\<union> {t_max--tt} = {t0--tt}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "have \"tt \\<in> {t0 -- t1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tt \\<in> {t0--t1}", "using ge_imps le_imps \\<open>0 < et\\<close> t_ne(1)"], ["proof (prove)\nusing this:\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t1\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t2\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t_max\n  t0 \\<le> t_ne \\<Longrightarrow> t_max < t_ne\n  t_ne \\<le> t0 \\<Longrightarrow> t1 \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t2 \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t_max \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t_ne < t_max\n  0 < et\n  t_ne \\<in> {t0--t1} \\<inter> {t0--t2}\n\ngoal (1 subgoal):\n 1. tt \\<in> {t0--t1}", "by (auto simp: tt_def closed_segment_eq_real_ivl min_def max_def split: if_split_asm)"], ["proof (state)\nthis:\n  tt \\<in> {t0--t1}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "have \"tt \\<in> ?Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tt \\<in> connected_component_set\n              ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n               ({t0--t1} \\<inter> {t0--t2}))\n              t0", "proof (safe intro!: connected_componentI[where T = \"{t0 -- t_max} \\<union> {t_max -- tt}\"])"], ["proof (state)\ngoal (7 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 6. \\<And>x. x \\<in> {t_max--tt} \\<Longrightarrow> x \\<in> {t0--t1}\n 7. \\<And>x. x \\<in> {t_max--tt} \\<Longrightarrow> x \\<in> {t0--t2}", "fix s"], ["proof (state)\ngoal (7 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 6. \\<And>x. x \\<in> {t_max--tt} \\<Longrightarrow> x \\<in> {t0--t1}\n 7. \\<And>x. x \\<in> {t_max--tt} \\<Longrightarrow> x \\<in> {t0--t2}", "assume s: \"s \\<in> {t_max -- tt}\""], ["proof (state)\nthis:\n  s \\<in> {t_max--tt}\n\ngoal (7 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 6. \\<And>x. x \\<in> {t_max--tt} \\<Longrightarrow> x \\<in> {t0--t1}\n 7. \\<And>x. x \\<in> {t_max--tt} \\<Longrightarrow> x \\<in> {t0--t2}", "have \"{t_max--s} \\<subseteq> {t_max -- tt}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t_max--s} \\<subseteq> {t_max--tt}", "by (rule closed_segment_subset) (auto simp: s)"], ["proof (state)\nthis:\n  {t_max--s} \\<subseteq> {t_max--tt}\n\ngoal (7 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 6. \\<And>x. x \\<in> {t_max--tt} \\<Longrightarrow> x \\<in> {t0--t1}\n 7. \\<And>x. x \\<in> {t_max--tt} \\<Longrightarrow> x \\<in> {t0--t2}", "also"], ["proof (state)\nthis:\n  {t_max--s} \\<subseteq> {t_max--tt}\n\ngoal (7 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 6. \\<And>x. x \\<in> {t_max--tt} \\<Longrightarrow> x \\<in> {t0--t1}\n 7. \\<And>x. x \\<in> {t_max--tt} \\<Longrightarrow> x \\<in> {t0--t2}", "have \"\\<dots> \\<subseteq> cball t_max et\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t_max--tt} \\<subseteq> cball t_max et", "using \\<open>tt \\<in> cball t_max et\\<close> \\<open>0 < et\\<close>"], ["proof (prove)\nusing this:\n  tt \\<in> cball t_max et\n  0 < et\n\ngoal (1 subgoal):\n 1. {t_max--tt} \\<subseteq> cball t_max et", "by (intro closed_segment_subset) auto"], ["proof (state)\nthis:\n  {t_max--tt} \\<subseteq> cball t_max et\n\ngoal (7 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 6. \\<And>x. x \\<in> {t_max--tt} \\<Longrightarrow> x \\<in> {t0--t1}\n 7. \\<And>x. x \\<in> {t_max--tt} \\<Longrightarrow> x \\<in> {t0--t2}", "finally"], ["proof (chain)\npicking this:\n  {t_max--s} \\<subseteq> cball t_max et", "have subset: \"{t_max--s} \\<subseteq> cball t_max et\""], ["proof (prove)\nusing this:\n  {t_max--s} \\<subseteq> cball t_max et\n\ngoal (1 subgoal):\n 1. {t_max--s} \\<subseteq> cball t_max et", "."], ["proof (state)\nthis:\n  {t_max--s} \\<subseteq> cball t_max et\n\ngoal (7 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 6. \\<And>x. x \\<in> {t_max--tt} \\<Longrightarrow> x \\<in> {t0--t1}\n 7. \\<And>x. x \\<in> {t_max--tt} \\<Longrightarrow> x \\<in> {t0--t2}", "from s"], ["proof (chain)\npicking this:\n  s \\<in> {t_max--tt}", "show \"s \\<in> {t0--t1}\" \"s \\<in> {t0--t2}\""], ["proof (prove)\nusing this:\n  s \\<in> {t_max--tt}\n\ngoal (1 subgoal):\n 1. s \\<in> {t0--t1} &&& s \\<in> {t0--t2}", "using ge_imps le_imps t_ne \\<open>0 < et\\<close>"], ["proof (prove)\nusing this:\n  s \\<in> {t_max--tt}\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t1\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t2\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t_max\n  t0 \\<le> t_ne \\<Longrightarrow> t_max < t_ne\n  t_ne \\<le> t0 \\<Longrightarrow> t1 \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t2 \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t_max \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t_ne < t_max\n  t_ne \\<in> {t0--t1} \\<inter> {t0--t2}\n  x t_ne \\<noteq> y t_ne\n  0 < et\n\ngoal (1 subgoal):\n 1. s \\<in> {t0--t1} &&& s \\<in> {t0--t2}", "by (auto simp: tt_def min_def max_def closed_segment_eq_real_ivl split: if_split_asm)"], ["proof (state)\nthis:\n  s \\<in> {t0--t1}\n  s \\<in> {t0--t2}\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "have ivl: \"t_max \\<in> {t_max -- s}\" \"is_interval {t_max--s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t_max \\<in> {t_max--s} &&& is_interval {t_max--s}", "using \\<open>tt \\<in> cball t_max et\\<close> \\<open>0 < et\\<close> s"], ["proof (prove)\nusing this:\n  tt \\<in> cball t_max et\n  0 < et\n  s \\<in> {t_max--tt}\n\ngoal (1 subgoal):\n 1. t_max \\<in> {t_max--s} &&& is_interval {t_max--s}", "by (simp_all add: is_interval_convex_1)"], ["proof (state)\nthis:\n  t_max \\<in> {t_max--s}\n  is_interval {t_max--s}\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "{"], ["proof (state)\nthis:\n  t_max \\<in> {t_max--s}\n  is_interval {t_max--s}\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "note ivl subset"], ["proof (state)\nthis:\n  t_max \\<in> {t_max--s}\n  is_interval {t_max--s}\n  {t_max--s} \\<subseteq> cball t_max et\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "moreover"], ["proof (state)\nthis:\n  t_max \\<in> {t_max--s}\n  is_interval {t_max--s}\n  {t_max--s} \\<subseteq> cball t_max et\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "have \"{t_max--s} \\<subseteq> {t0--t1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t_max--s} \\<subseteq> {t0--t1}", "using \\<open>s \\<in> {t0 -- t1}\\<close> \\<open>t_max \\<in> ?S\\<close>"], ["proof (prove)\nusing this:\n  s \\<in> {t0--t1}\n  t_max \\<in> {t0--t1} \\<inter> {t0--t2}\n\ngoal (1 subgoal):\n 1. {t_max--s} \\<subseteq> {t0--t1}", "by (simp add: closed_segment_subset)"], ["proof (state)\nthis:\n  {t_max--s} \\<subseteq> {t0--t1}\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "from x this order_refl"], ["proof (chain)\npicking this:\n  (x solves_ode f) {t0--t1} X\n  {t_max--s} \\<subseteq> {t0--t1}\n  ?x \\<le> ?x", "have \"(x solves_ode f) {t_max--s} X\""], ["proof (prove)\nusing this:\n  (x solves_ode f) {t0--t1} X\n  {t_max--s} \\<subseteq> {t0--t1}\n  ?x \\<le> ?x\n\ngoal (1 subgoal):\n 1. (x solves_ode f) {t_max--s} X", "by (rule solves_ode_on_subset)"], ["proof (state)\nthis:\n  (x solves_ode f) {t_max--s} X\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "moreover"], ["proof (state)\nthis:\n  (x solves_ode f) {t_max--s} X\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "note solution_iv[symmetric]"], ["proof (state)\nthis:\n  x t_max = solution t_max\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "ultimately"], ["proof (chain)\npicking this:\n  t_max \\<in> {t_max--s}\n  is_interval {t_max--s}\n  {t_max--s} \\<subseteq> cball t_max et\n  (x solves_ode f) {t_max--s} X\n  x t_max = solution t_max", "have \"x s = solution s\""], ["proof (prove)\nusing this:\n  t_max \\<in> {t_max--s}\n  is_interval {t_max--s}\n  {t_max--s} \\<subseteq> cball t_max et\n  (x solves_ode f) {t_max--s} X\n  x t_max = solution t_max\n\ngoal (1 subgoal):\n 1. x s = solution s", "by (rule usolves_odeD(4)[OF solution_usolves_on_X]) simp"], ["proof (state)\nthis:\n  x s = solution s\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "}"], ["proof (state)\nthis:\n  x s = solution s\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "moreover"], ["proof (state)\nthis:\n  x s = solution s\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "{"], ["proof (state)\nthis:\n  x s = solution s\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "note ivl subset"], ["proof (state)\nthis:\n  t_max \\<in> {t_max--s}\n  is_interval {t_max--s}\n  {t_max--s} \\<subseteq> cball t_max et\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "moreover"], ["proof (state)\nthis:\n  t_max \\<in> {t_max--s}\n  is_interval {t_max--s}\n  {t_max--s} \\<subseteq> cball t_max et\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "have \"{t_max--s} \\<subseteq> {t0--t2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t_max--s} \\<subseteq> {t0--t2}", "using \\<open>s \\<in> {t0 -- t2}\\<close> \\<open>t_max \\<in> ?S\\<close>"], ["proof (prove)\nusing this:\n  s \\<in> {t0--t2}\n  t_max \\<in> {t0--t1} \\<inter> {t0--t2}\n\ngoal (1 subgoal):\n 1. {t_max--s} \\<subseteq> {t0--t2}", "by (simp add: closed_segment_subset)"], ["proof (state)\nthis:\n  {t_max--s} \\<subseteq> {t0--t2}\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "from y this order_refl"], ["proof (chain)\npicking this:\n  (y solves_ode f) {t0--t2} X\n  {t_max--s} \\<subseteq> {t0--t2}\n  ?x \\<le> ?x", "have \"(y solves_ode f) {t_max--s} X\""], ["proof (prove)\nusing this:\n  (y solves_ode f) {t0--t2} X\n  {t_max--s} \\<subseteq> {t0--t2}\n  ?x \\<le> ?x\n\ngoal (1 subgoal):\n 1. (y solves_ode f) {t_max--s} X", "by (rule solves_ode_on_subset)"], ["proof (state)\nthis:\n  (y solves_ode f) {t_max--s} X\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "moreover"], ["proof (state)\nthis:\n  (y solves_ode f) {t_max--s} X\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "from solution_iv[symmetric]"], ["proof (chain)\npicking this:\n  x t_max = solution t_max", "have \"y t_max = solution t_max\""], ["proof (prove)\nusing this:\n  x t_max = solution t_max\n\ngoal (1 subgoal):\n 1. y t_max = solution t_max", "by (simp add: \\<open>x t_max = y t_max\\<close>)"], ["proof (state)\nthis:\n  y t_max = solution t_max\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "ultimately"], ["proof (chain)\npicking this:\n  t_max \\<in> {t_max--s}\n  is_interval {t_max--s}\n  {t_max--s} \\<subseteq> cball t_max et\n  (y solves_ode f) {t_max--s} X\n  y t_max = solution t_max", "have \"y s = solution s\""], ["proof (prove)\nusing this:\n  t_max \\<in> {t_max--s}\n  is_interval {t_max--s}\n  {t_max--s} \\<subseteq> cball t_max et\n  (y solves_ode f) {t_max--s} X\n  y t_max = solution t_max\n\ngoal (1 subgoal):\n 1. y s = solution s", "by (rule usolves_odeD[OF solution_usolves_on_X]) simp"], ["proof (state)\nthis:\n  y s = solution s\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "}"], ["proof (state)\nthis:\n  y s = solution s\n\ngoal (5 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}\n 5. \\<And>xa.\n       xa \\<in> {t_max--tt} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "ultimately"], ["proof (chain)\npicking this:\n  x s = solution s\n  y s = solution s", "show \"s \\<in> (\\<lambda>t. x t - y t) -` {0}\""], ["proof (prove)\nusing this:\n  x s = solution s\n  y s = solution s\n\ngoal (1 subgoal):\n 1. s \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "by simp"], ["proof (state)\nthis:\n  s \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n\ngoal (4 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}", "fix s"], ["proof (state)\ngoal (4 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}", "assume s: \"s \\<in> {t0 -- t_max}\""], ["proof (state)\nthis:\n  s \\<in> {t0--t_max}\n\ngoal (4 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>xa.\n       xa \\<in> {t0--t_max} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 4. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}", "then"], ["proof (chain)\npicking this:\n  s \\<in> {t0--t_max}", "show \"s \\<in> (\\<lambda>t. x t - y t) -` {0}\""], ["proof (prove)\nusing this:\n  s \\<in> {t0--t_max}\n\ngoal (1 subgoal):\n 1. s \\<in> (\\<lambda>t. x t - y t) -` {0::'a}", "by (auto intro!: max_equal_flows)"], ["proof (state)\nthis:\n  s \\<in> (\\<lambda>t. x t - y t) -` {0::'a}\n\ngoal (3 subgoals):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})\n 2. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t1}\n 3. \\<And>x. x \\<in> {t0--t_max} \\<Longrightarrow> x \\<in> {t0--t2}", "show \"s \\<in> {t0--t1}\" \"s \\<in> {t0--t2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> {t0--t1} &&& s \\<in> {t0--t2}", "by (metis Int_iff \\<open>t_max \\<in> ?S\\<close> closed_segment_closed_segment_subset ends_in_segment(1) s)+"], ["proof (state)\nthis:\n  s \\<in> {t0--t1}\n  s \\<in> {t0--t2}\n\ngoal (1 subgoal):\n 1. connected ({t0--t_max} \\<union> {t_max--tt})", "qed (auto simp: segment_unsplit)"], ["proof (state)\nthis:\n  tt \\<in> connected_component_set\n            ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n             ({t0--t1} \\<inter> {t0--t2}))\n            t0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  tt \\<in> connected_component_set\n            ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n             ({t0--t1} \\<inter> {t0--t2}))\n            t0", "have \"dist t_ne t_max \\<le> dist t_ne tt\""], ["proof (prove)\nusing this:\n  tt \\<in> connected_component_set\n            ((\\<lambda>t. x t - y t) -` {0::'a} \\<inter>\n             ({t0--t1} \\<inter> {t0--t2}))\n            t0\n\ngoal (1 subgoal):\n 1. dist t_ne t_max \\<le> dist t_ne tt", "by (rule max)"], ["proof (state)\nthis:\n  dist t_ne t_max \\<le> dist t_ne tt\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  dist t_ne t_max \\<le> dist t_ne tt\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "have \"dist t_ne t_max > dist t_ne tt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist t_ne tt < dist t_ne t_max", "using le_imps ge_imps \\<open>0 < et\\<close>"], ["proof (prove)\nusing this:\n  t_ne \\<le> t0 \\<Longrightarrow> t1 \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t2 \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t_max \\<le> t0\n  t_ne \\<le> t0 \\<Longrightarrow> t_ne < t_max\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t1\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t2\n  t0 \\<le> t_ne \\<Longrightarrow> t0 \\<le> t_max\n  t0 \\<le> t_ne \\<Longrightarrow> t_max < t_ne\n  0 < et\n\ngoal (1 subgoal):\n 1. dist t_ne tt < dist t_ne t_max", "by (auto simp: tt_def dist_real_def)"], ["proof (state)\nthis:\n  dist t_ne tt < dist t_ne t_max\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n               x t = y t) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  dist t_ne t_max \\<le> dist t_ne tt\n  dist t_ne tt < dist t_ne t_max", "show False"], ["proof (prove)\nusing this:\n  dist t_ne t_max \\<le> dist t_ne tt\n  dist t_ne tt < dist t_ne t_max\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma csol_unique:\n  assumes t1: \"t1 \\<in> existence_ivl t0 x0\"\n  assumes t2: \"t2 \\<in> existence_ivl t0 x0\"\n  assumes t: \"t \\<in> {t0 -- t1}\" \"t \\<in> {t0 -- t2}\"\n  shows \"csol t0 x0 t1 t = csol t0 x0 t2 t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. csol t0 x0 t1 t = csol t0 x0 t2 t", "using csols_unique[OF csol_mem_csols[OF t1] csol_mem_csols[OF t2]] t"], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>{t0--t1} \\<inter> {t0--t2}.\n     csol t0 x0 t1 t = csol t0 x0 t2 t\n  t \\<in> {t0--t1}\n  t \\<in> {t0--t2}\n\ngoal (1 subgoal):\n 1. csol t0 x0 t1 t = csol t0 x0 t2 t", "by simp"], ["", "lemma flow_vderiv_on_left:\n  \"(flow t0 x0 has_vderiv_on (\\<lambda>x. f x (flow t0 x0 x))) (existence_ivl t0 x0 \\<inter> {..t0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (flow t0 x0 has_vderiv_on (\\<lambda>x. f x (flow t0 x0 x)))\n     (existence_ivl t0 x0 \\<inter> {..t0})", "unfolding has_vderiv_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>existence_ivl t0 x0 \\<inter> {..t0}.\n       (flow t0 x0 has_vector_derivative f x (flow t0 x0 x))\n        (at x within existence_ivl t0 x0 \\<inter> {..t0})", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; x \\<le> t0\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {..t0})", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; x \\<le> t0\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {..t0})", "assume t: \"t \\<in> existence_ivl t0 x0\" \"t \\<le> t0\""], ["proof (state)\nthis:\n  t \\<in> existence_ivl t0 x0\n  t \\<le> t0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; x \\<le> t0\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {..t0})", "with open_existence_ivl"], ["proof (chain)\npicking this:\n  open (existence_ivl t0 ?x0.0)\n  t \\<in> existence_ivl t0 x0\n  t \\<le> t0", "obtain e where \"e > 0\" and e: \"\\<And>s. s \\<in> cball t e \\<Longrightarrow> s \\<in> existence_ivl t0 x0\""], ["proof (prove)\nusing this:\n  open (existence_ivl t0 ?x0.0)\n  t \\<in> existence_ivl t0 x0\n  t \\<le> t0\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         \\<And>s.\n            s \\<in> cball t e \\<Longrightarrow>\n            s \\<in> existence_ivl t0 x0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force simp: open_contains_cball)"], ["proof (state)\nthis:\n  0 < e\n  ?s \\<in> cball t e \\<Longrightarrow> ?s \\<in> existence_ivl t0 x0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; x \\<le> t0\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {..t0})", "have csol_eq: \"csol t0 x0 (t - e) s = flow t0 x0 s\" if \"t - e \\<le> s\" \"s \\<le> t0\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. csol t0 x0 (t - e) s = flow t0 x0 s", "unfolding flow_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. csol t0 x0 (t - e) s =\n    (if s \\<in> existence_ivl t0 x0 then csol t0 x0 s s else (0::'a))", "using that \\<open>0 < e\\<close> t e"], ["proof (prove)\nusing this:\n  t - e \\<le> s\n  s \\<le> t0\n  0 < e\n  t \\<in> existence_ivl t0 x0\n  t \\<le> t0\n  ?s \\<in> cball t e \\<Longrightarrow> ?s \\<in> existence_ivl t0 x0\n\ngoal (1 subgoal):\n 1. csol t0 x0 (t - e) s =\n    (if s \\<in> existence_ivl t0 x0 then csol t0 x0 s s else (0::'a))", "by (auto simp: cball_def dist_real_def abs_real_def closed_segment_eq_real_ivl subset_iff\n      intro!: csol_unique in_existence_between_zeroI[of \"t - e\" x0 s]\n      split: if_split_asm)"], ["proof (state)\nthis:\n  \\<lbrakk>t - e \\<le> ?s; ?s \\<le> t0\\<rbrakk>\n  \\<Longrightarrow> csol t0 x0 (t - e) ?s = flow t0 x0 ?s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; x \\<le> t0\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {..t0})", "from e[of \"t - e\"] \\<open>0 < e\\<close>"], ["proof (chain)\npicking this:\n  t - e \\<in> cball t e \\<Longrightarrow> t - e \\<in> existence_ivl t0 x0\n  0 < e", "have \"t - e \\<in> existence_ivl t0 x0\""], ["proof (prove)\nusing this:\n  t - e \\<in> cball t e \\<Longrightarrow> t - e \\<in> existence_ivl t0 x0\n  0 < e\n\ngoal (1 subgoal):\n 1. t - e \\<in> existence_ivl t0 x0", "by (auto simp: mem_cball)"], ["proof (state)\nthis:\n  t - e \\<in> existence_ivl t0 x0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; x \\<le> t0\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {..t0})", "let ?l = \"existence_ivl t0 x0 \\<inter> {..t0}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; x \\<le> t0\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {..t0})", "let ?s = \"{t0 -- t - e}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; x \\<le> t0\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {..t0})", "from csol(4)[OF e[of \"t - e\"]] \\<open>0 < e\\<close>"], ["proof (chain)\npicking this:\n  t - e \\<in> cball t e \\<Longrightarrow>\n  (csol t0 x0 (t - e) solves_ode f) {t0--t - e} X\n  0 < e", "have 1: \"(csol t0 x0 (t - e) solves_ode f) ?s X\""], ["proof (prove)\nusing this:\n  t - e \\<in> cball t e \\<Longrightarrow>\n  (csol t0 x0 (t - e) solves_ode f) {t0--t - e} X\n  0 < e\n\ngoal (1 subgoal):\n 1. (csol t0 x0 (t - e) solves_ode f) {t0--t - e} X", "by (auto simp: mem_cball)"], ["proof (state)\nthis:\n  (csol t0 x0 (t - e) solves_ode f) {t0--t - e} X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; x \\<le> t0\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {..t0})", "have \"t \\<in> {t0 -- t - e}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> {t0--t - e}", "using t \\<open>0 < e\\<close>"], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl t0 x0\n  t \\<le> t0\n  0 < e\n\ngoal (1 subgoal):\n 1. t \\<in> {t0--t - e}", "by (auto simp: closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  t \\<in> {t0--t - e}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; x \\<le> t0\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {..t0})", "from solves_odeD(1)[OF 1, unfolded has_vderiv_on_def, rule_format, OF this]"], ["proof (chain)\npicking this:\n  (csol t0 x0 (t - e) has_vector_derivative f t (csol t0 x0 (t - e) t))\n   (at t within {t0--t - e})", "have \"(csol t0 x0 (t - e) has_vector_derivative f t (csol t0 x0 (t - e) t)) (at t within ?s)\""], ["proof (prove)\nusing this:\n  (csol t0 x0 (t - e) has_vector_derivative f t (csol t0 x0 (t - e) t))\n   (at t within {t0--t - e})\n\ngoal (1 subgoal):\n 1. (csol t0 x0 (t - e) has_vector_derivative f t (csol t0 x0 (t - e) t))\n     (at t within {t0--t - e})", "."], ["proof (state)\nthis:\n  (csol t0 x0 (t - e) has_vector_derivative f t (csol t0 x0 (t - e) t))\n   (at t within {t0--t - e})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; x \\<le> t0\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {..t0})", "also"], ["proof (state)\nthis:\n  (csol t0 x0 (t - e) has_vector_derivative f t (csol t0 x0 (t - e) t))\n   (at t within {t0--t - e})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; x \\<le> t0\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {..t0})", "have \"at t within ?s = (at t within ?l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at t within {t0--t - e} = at t\n    within existence_ivl t0 x0 \\<inter> {..t0}", "using t \\<open>0 < e\\<close>"], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl t0 x0\n  t \\<le> t0\n  0 < e\n\ngoal (1 subgoal):\n 1. at t within {t0--t - e} = at t\n    within existence_ivl t0 x0 \\<inter> {..t0}", "by (intro at_within_nhd[where S=\"{t - e <..< t0 + 1}\"])\n      (auto simp: closed_segment_eq_real_ivl intro!: in_existence_between_zeroI[OF \\<open>t - e \\<in> existence_ivl t0 x0\\<close>])"], ["proof (state)\nthis:\n  at t within {t0--t - e} = at t within existence_ivl t0 x0 \\<inter> {..t0}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; x \\<le> t0\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {..t0})", "finally"], ["proof (chain)\npicking this:\n  (csol t0 x0 (t - e) has_vector_derivative f t (csol t0 x0 (t - e) t))\n   (at t within existence_ivl t0 x0 \\<inter> {..t0})", "have \"(csol t0 x0 (t - e) has_vector_derivative f t (csol t0 x0 (t - e) t)) (at t within existence_ivl t0 x0 \\<inter> {..t0})\""], ["proof (prove)\nusing this:\n  (csol t0 x0 (t - e) has_vector_derivative f t (csol t0 x0 (t - e) t))\n   (at t within existence_ivl t0 x0 \\<inter> {..t0})\n\ngoal (1 subgoal):\n 1. (csol t0 x0 (t - e) has_vector_derivative f t (csol t0 x0 (t - e) t))\n     (at t within existence_ivl t0 x0 \\<inter> {..t0})", "."], ["proof (state)\nthis:\n  (csol t0 x0 (t - e) has_vector_derivative f t (csol t0 x0 (t - e) t))\n   (at t within existence_ivl t0 x0 \\<inter> {..t0})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; x \\<le> t0\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {..t0})", "also"], ["proof (state)\nthis:\n  (csol t0 x0 (t - e) has_vector_derivative f t (csol t0 x0 (t - e) t))\n   (at t within existence_ivl t0 x0 \\<inter> {..t0})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; x \\<le> t0\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {..t0})", "have \"csol t0 x0 (t - e) t = flow t0 x0 t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. csol t0 x0 (t - e) t = flow t0 x0 t", "using \\<open>0 < e\\<close> \\<open>t \\<le> t0\\<close>"], ["proof (prove)\nusing this:\n  0 < e\n  t \\<le> t0\n\ngoal (1 subgoal):\n 1. csol t0 x0 (t - e) t = flow t0 x0 t", "by (auto intro!: csol_eq)"], ["proof (state)\nthis:\n  csol t0 x0 (t - e) t = flow t0 x0 t\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; x \\<le> t0\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {..t0})", "finally"], ["proof (chain)\npicking this:\n  (csol t0 x0 (t - e) has_vector_derivative f t (flow t0 x0 t))\n   (at t within existence_ivl t0 x0 \\<inter> {..t0})", "show \"(flow t0 x0 has_vector_derivative f t (flow t0 x0 t)) (at t within existence_ivl t0 x0 \\<inter> {..t0})\""], ["proof (prove)\nusing this:\n  (csol t0 x0 (t - e) has_vector_derivative f t (flow t0 x0 t))\n   (at t within existence_ivl t0 x0 \\<inter> {..t0})\n\ngoal (1 subgoal):\n 1. (flow t0 x0 has_vector_derivative f t (flow t0 x0 t))\n     (at t within existence_ivl t0 x0 \\<inter> {..t0})", "apply (rule has_vector_derivative_transform_within[where d=e])"], ["proof (prove)\ngoal (3 subgoals):\n 1. 0 < e\n 2. t \\<in> existence_ivl t0 x0 \\<inter> {..t0}\n 3. \\<And>x'.\n       \\<lbrakk>x' \\<in> existence_ivl t0 x0 \\<inter> {..t0};\n        dist x' t < e\\<rbrakk>\n       \\<Longrightarrow> csol t0 x0 (t - e) x' = flow t0 x0 x'", "using t \\<open>0 < e\\<close>"], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl t0 x0\n  t \\<le> t0\n  0 < e\n\ngoal (3 subgoals):\n 1. 0 < e\n 2. t \\<in> existence_ivl t0 x0 \\<inter> {..t0}\n 3. \\<And>x'.\n       \\<lbrakk>x' \\<in> existence_ivl t0 x0 \\<inter> {..t0};\n        dist x' t < e\\<rbrakk>\n       \\<Longrightarrow> csol t0 x0 (t - e) x' = flow t0 x0 x'", "by (auto intro!: csol_eq simp: dist_real_def)"], ["proof (state)\nthis:\n  (flow t0 x0 has_vector_derivative f t (flow t0 x0 t))\n   (at t within existence_ivl t0 x0 \\<inter> {..t0})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma flow_vderiv_on_right:\n  \"(flow t0 x0 has_vderiv_on (\\<lambda>x. f x (flow t0 x0 x))) (existence_ivl t0 x0 \\<inter> {t0..})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (flow t0 x0 has_vderiv_on (\\<lambda>x. f x (flow t0 x0 x)))\n     (existence_ivl t0 x0 \\<inter> {t0..})", "unfolding has_vderiv_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>existence_ivl t0 x0 \\<inter> {t0..}.\n       (flow t0 x0 has_vector_derivative f x (flow t0 x0 x))\n        (at x within existence_ivl t0 x0 \\<inter> {t0..})", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; t0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {t0..})", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; t0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {t0..})", "assume t: \"t \\<in> existence_ivl t0 x0\" \"t0 \\<le> t\""], ["proof (state)\nthis:\n  t \\<in> existence_ivl t0 x0\n  t0 \\<le> t\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; t0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {t0..})", "with open_existence_ivl"], ["proof (chain)\npicking this:\n  open (existence_ivl t0 ?x0.0)\n  t \\<in> existence_ivl t0 x0\n  t0 \\<le> t", "obtain e where \"e > 0\" and e: \"\\<And>s. s \\<in> cball t e \\<Longrightarrow> s \\<in> existence_ivl t0 x0\""], ["proof (prove)\nusing this:\n  open (existence_ivl t0 ?x0.0)\n  t \\<in> existence_ivl t0 x0\n  t0 \\<le> t\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         \\<And>s.\n            s \\<in> cball t e \\<Longrightarrow>\n            s \\<in> existence_ivl t0 x0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force simp: open_contains_cball)"], ["proof (state)\nthis:\n  0 < e\n  ?s \\<in> cball t e \\<Longrightarrow> ?s \\<in> existence_ivl t0 x0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; t0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {t0..})", "have csol_eq: \"csol t0 x0 (t + e) s = flow t0 x0 s\" if \"s \\<le> t + e\" \"t0 \\<le> s\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. csol t0 x0 (t + e) s = flow t0 x0 s", "unfolding flow_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. csol t0 x0 (t + e) s =\n    (if s \\<in> existence_ivl t0 x0 then csol t0 x0 s s else (0::'a))", "using e that \\<open>0 < e\\<close>"], ["proof (prove)\nusing this:\n  ?s \\<in> cball t e \\<Longrightarrow> ?s \\<in> existence_ivl t0 x0\n  s \\<le> t + e\n  t0 \\<le> s\n  0 < e\n\ngoal (1 subgoal):\n 1. csol t0 x0 (t + e) s =\n    (if s \\<in> existence_ivl t0 x0 then csol t0 x0 s s else (0::'a))", "by (auto simp: cball_def dist_real_def abs_real_def closed_segment_eq_real_ivl subset_iff\n      intro!: csol_unique in_existence_between_zeroI[of \"t + e\" x0 s]\n      split: if_split_asm)"], ["proof (state)\nthis:\n  \\<lbrakk>?s \\<le> t + e; t0 \\<le> ?s\\<rbrakk>\n  \\<Longrightarrow> csol t0 x0 (t + e) ?s = flow t0 x0 ?s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; t0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {t0..})", "from e[of \"t + e\"] \\<open>0 < e\\<close>"], ["proof (chain)\npicking this:\n  t + e \\<in> cball t e \\<Longrightarrow> t + e \\<in> existence_ivl t0 x0\n  0 < e", "have \"t + e \\<in> existence_ivl t0 x0\""], ["proof (prove)\nusing this:\n  t + e \\<in> cball t e \\<Longrightarrow> t + e \\<in> existence_ivl t0 x0\n  0 < e\n\ngoal (1 subgoal):\n 1. t + e \\<in> existence_ivl t0 x0", "by (auto simp: mem_cball dist_real_def)"], ["proof (state)\nthis:\n  t + e \\<in> existence_ivl t0 x0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; t0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {t0..})", "let ?l = \"existence_ivl t0 x0 \\<inter> {t0..}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; t0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {t0..})", "let ?s = \"{t0 -- t + e}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; t0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {t0..})", "from csol(4)[OF e[of \"t + e\"]] \\<open>0 < e\\<close>"], ["proof (chain)\npicking this:\n  t + e \\<in> cball t e \\<Longrightarrow>\n  (csol t0 x0 (t + e) solves_ode f) {t0--t + e} X\n  0 < e", "have 1: \"(csol t0 x0 (t + e) solves_ode f) ?s X\""], ["proof (prove)\nusing this:\n  t + e \\<in> cball t e \\<Longrightarrow>\n  (csol t0 x0 (t + e) solves_ode f) {t0--t + e} X\n  0 < e\n\ngoal (1 subgoal):\n 1. (csol t0 x0 (t + e) solves_ode f) {t0--t + e} X", "by (auto simp: dist_real_def mem_cball)"], ["proof (state)\nthis:\n  (csol t0 x0 (t + e) solves_ode f) {t0--t + e} X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; t0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {t0..})", "have \"t \\<in> {t0 -- t + e}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> {t0--t + e}", "using t \\<open>0 < e\\<close>"], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl t0 x0\n  t0 \\<le> t\n  0 < e\n\ngoal (1 subgoal):\n 1. t \\<in> {t0--t + e}", "by (auto simp: closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  t \\<in> {t0--t + e}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; t0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {t0..})", "from solves_odeD(1)[OF 1, unfolded has_vderiv_on_def, rule_format, OF this]"], ["proof (chain)\npicking this:\n  (csol t0 x0 (t + e) has_vector_derivative f t (csol t0 x0 (t + e) t))\n   (at t within {t0--t + e})", "have \"(csol t0 x0 (t + e) has_vector_derivative f t (csol t0 x0 (t + e) t)) (at t within ?s)\""], ["proof (prove)\nusing this:\n  (csol t0 x0 (t + e) has_vector_derivative f t (csol t0 x0 (t + e) t))\n   (at t within {t0--t + e})\n\ngoal (1 subgoal):\n 1. (csol t0 x0 (t + e) has_vector_derivative f t (csol t0 x0 (t + e) t))\n     (at t within {t0--t + e})", "."], ["proof (state)\nthis:\n  (csol t0 x0 (t + e) has_vector_derivative f t (csol t0 x0 (t + e) t))\n   (at t within {t0--t + e})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; t0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {t0..})", "also"], ["proof (state)\nthis:\n  (csol t0 x0 (t + e) has_vector_derivative f t (csol t0 x0 (t + e) t))\n   (at t within {t0--t + e})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; t0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {t0..})", "have \"at t within ?s = (at t within ?l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at t within {t0--t + e} = at t\n    within existence_ivl t0 x0 \\<inter> {t0..}", "using t \\<open>0 < e\\<close>"], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl t0 x0\n  t0 \\<le> t\n  0 < e\n\ngoal (1 subgoal):\n 1. at t within {t0--t + e} = at t\n    within existence_ivl t0 x0 \\<inter> {t0..}", "by (intro at_within_nhd[where S=\"{t0 - 1 <..< t + e}\"])\n      (auto simp: closed_segment_eq_real_ivl intro!: in_existence_between_zeroI[OF \\<open>t + e \\<in> existence_ivl t0 x0\\<close>])"], ["proof (state)\nthis:\n  at t within {t0--t + e} = at t within existence_ivl t0 x0 \\<inter> {t0..}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; t0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {t0..})", "finally"], ["proof (chain)\npicking this:\n  (csol t0 x0 (t + e) has_vector_derivative f t (csol t0 x0 (t + e) t))\n   (at t within existence_ivl t0 x0 \\<inter> {t0..})", "have \"(csol t0 x0 (t + e) has_vector_derivative f t (csol t0 x0 (t + e) t)) (at t within ?l)\""], ["proof (prove)\nusing this:\n  (csol t0 x0 (t + e) has_vector_derivative f t (csol t0 x0 (t + e) t))\n   (at t within existence_ivl t0 x0 \\<inter> {t0..})\n\ngoal (1 subgoal):\n 1. (csol t0 x0 (t + e) has_vector_derivative f t (csol t0 x0 (t + e) t))\n     (at t within existence_ivl t0 x0 \\<inter> {t0..})", "."], ["proof (state)\nthis:\n  (csol t0 x0 (t + e) has_vector_derivative f t (csol t0 x0 (t + e) t))\n   (at t within existence_ivl t0 x0 \\<inter> {t0..})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; t0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {t0..})", "also"], ["proof (state)\nthis:\n  (csol t0 x0 (t + e) has_vector_derivative f t (csol t0 x0 (t + e) t))\n   (at t within existence_ivl t0 x0 \\<inter> {t0..})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; t0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {t0..})", "have \"csol t0 x0 (t + e) t = flow t0 x0 t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. csol t0 x0 (t + e) t = flow t0 x0 t", "using \\<open>0 < e\\<close> \\<open>t0 \\<le> t\\<close>"], ["proof (prove)\nusing this:\n  0 < e\n  t0 \\<le> t\n\ngoal (1 subgoal):\n 1. csol t0 x0 (t + e) t = flow t0 x0 t", "by (auto intro!: csol_eq)"], ["proof (state)\nthis:\n  csol t0 x0 (t + e) t = flow t0 x0 t\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> existence_ivl t0 x0; t0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> (flow t0 x0 has_vector_derivative\n                          f x (flow t0 x0 x))\n                          (at x within existence_ivl t0 x0 \\<inter> {t0..})", "finally"], ["proof (chain)\npicking this:\n  (csol t0 x0 (t + e) has_vector_derivative f t (flow t0 x0 t))\n   (at t within existence_ivl t0 x0 \\<inter> {t0..})", "show \"(flow t0 x0 has_vector_derivative f t (flow t0 x0 t)) (at t within ?l)\""], ["proof (prove)\nusing this:\n  (csol t0 x0 (t + e) has_vector_derivative f t (flow t0 x0 t))\n   (at t within existence_ivl t0 x0 \\<inter> {t0..})\n\ngoal (1 subgoal):\n 1. (flow t0 x0 has_vector_derivative f t (flow t0 x0 t))\n     (at t within existence_ivl t0 x0 \\<inter> {t0..})", "apply (rule has_vector_derivative_transform_within[where d=e])"], ["proof (prove)\ngoal (3 subgoals):\n 1. 0 < e\n 2. t \\<in> existence_ivl t0 x0 \\<inter> {t0..}\n 3. \\<And>x'.\n       \\<lbrakk>x' \\<in> existence_ivl t0 x0 \\<inter> {t0..};\n        dist x' t < e\\<rbrakk>\n       \\<Longrightarrow> csol t0 x0 (t + e) x' = flow t0 x0 x'", "using t \\<open>0 < e\\<close>"], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl t0 x0\n  t0 \\<le> t\n  0 < e\n\ngoal (3 subgoals):\n 1. 0 < e\n 2. t \\<in> existence_ivl t0 x0 \\<inter> {t0..}\n 3. \\<And>x'.\n       \\<lbrakk>x' \\<in> existence_ivl t0 x0 \\<inter> {t0..};\n        dist x' t < e\\<rbrakk>\n       \\<Longrightarrow> csol t0 x0 (t + e) x' = flow t0 x0 x'", "by (auto intro!: csol_eq simp: dist_real_def)"], ["proof (state)\nthis:\n  (flow t0 x0 has_vector_derivative f t (flow t0 x0 t))\n   (at t within existence_ivl t0 x0 \\<inter> {t0..})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma flow_usolves_ode:\n  assumes iv_defined: \"t0 \\<in> T\" \"x0 \\<in> X\"\n  shows \"(flow t0 x0 usolves_ode f from t0) (existence_ivl t0 x0) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (flow t0 x0 usolves_ode f from t0) (existence_ivl t0 x0) X", "proof (rule usolves_odeI)"], ["proof (state)\ngoal (4 subgoals):\n 1. (flow t0 x0 solves_ode f) (existence_ivl t0 x0) X\n 2. t0 \\<in> existence_ivl t0 x0\n 3. is_interval (existence_ivl t0 x0)\n 4. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "let ?l = \"existence_ivl t0 x0 \\<inter> {..t0}\" and ?r = \"existence_ivl t0 x0 \\<inter> {t0..}\""], ["proof (state)\ngoal (4 subgoals):\n 1. (flow t0 x0 solves_ode f) (existence_ivl t0 x0) X\n 2. t0 \\<in> existence_ivl t0 x0\n 3. is_interval (existence_ivl t0 x0)\n 4. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "let ?split = \"?l \\<union> ?r\""], ["proof (state)\ngoal (4 subgoals):\n 1. (flow t0 x0 solves_ode f) (existence_ivl t0 x0) X\n 2. t0 \\<in> existence_ivl t0 x0\n 3. is_interval (existence_ivl t0 x0)\n 4. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "have insert_idem: \"insert t0 ?l = ?l\" \"insert t0 ?r = ?r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert t0 (existence_ivl t0 x0 \\<inter> {..t0}) =\n    existence_ivl t0 x0 \\<inter> {..t0} &&&\n    insert t0 (existence_ivl t0 x0 \\<inter> {t0..}) =\n    existence_ivl t0 x0 \\<inter> {t0..}", "using iv_defined"], ["proof (prove)\nusing this:\n  t0 \\<in> T\n  x0 \\<in> X\n\ngoal (1 subgoal):\n 1. insert t0 (existence_ivl t0 x0 \\<inter> {..t0}) =\n    existence_ivl t0 x0 \\<inter> {..t0} &&&\n    insert t0 (existence_ivl t0 x0 \\<inter> {t0..}) =\n    existence_ivl t0 x0 \\<inter> {t0..}", "by auto"], ["proof (state)\nthis:\n  insert t0 (existence_ivl t0 x0 \\<inter> {..t0}) =\n  existence_ivl t0 x0 \\<inter> {..t0}\n  insert t0 (existence_ivl t0 x0 \\<inter> {t0..}) =\n  existence_ivl t0 x0 \\<inter> {t0..}\n\ngoal (4 subgoals):\n 1. (flow t0 x0 solves_ode f) (existence_ivl t0 x0) X\n 2. t0 \\<in> existence_ivl t0 x0\n 3. is_interval (existence_ivl t0 x0)\n 4. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "from existence_ivl_initial_time"], ["proof (chain)\npicking this:\n  \\<lbrakk>t0 \\<in> T; ?x0.0 \\<in> X\\<rbrakk>\n  \\<Longrightarrow> t0 \\<in> existence_ivl t0 ?x0.0", "have cl_inter: \"closure ?l \\<inter> closure ?r = {t0}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>t0 \\<in> T; ?x0.0 \\<in> X\\<rbrakk>\n  \\<Longrightarrow> t0 \\<in> existence_ivl t0 ?x0.0\n\ngoal (1 subgoal):\n 1. closure (existence_ivl t0 x0 \\<inter> {..t0}) \\<inter>\n    closure (existence_ivl t0 x0 \\<inter> {t0..}) =\n    {t0}", "proof safe"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0\n 2. \\<And>x.\n       (\\<And>x0.\n           \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n           \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0) \\<Longrightarrow>\n       t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0})\n 3. \\<And>x.\n       (\\<And>x0.\n           \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n           \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0) \\<Longrightarrow>\n       t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})", "from iv_defined"], ["proof (chain)\npicking this:\n  t0 \\<in> T\n  x0 \\<in> X", "have \"t0 \\<in> ?l\""], ["proof (prove)\nusing this:\n  t0 \\<in> T\n  x0 \\<in> X\n\ngoal (1 subgoal):\n 1. t0 \\<in> existence_ivl t0 x0 \\<inter> {..t0}", "by simp"], ["proof (state)\nthis:\n  t0 \\<in> existence_ivl t0 x0 \\<inter> {..t0}\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0\n 2. \\<And>x.\n       (\\<And>x0.\n           \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n           \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0) \\<Longrightarrow>\n       t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0})\n 3. \\<And>x.\n       (\\<And>x0.\n           \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n           \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0) \\<Longrightarrow>\n       t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})", "also"], ["proof (state)\nthis:\n  t0 \\<in> existence_ivl t0 x0 \\<inter> {..t0}\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0\n 2. \\<And>x.\n       (\\<And>x0.\n           \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n           \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0) \\<Longrightarrow>\n       t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0})\n 3. \\<And>x.\n       (\\<And>x0.\n           \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n           \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0) \\<Longrightarrow>\n       t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})", "note closure_subset"], ["proof (state)\nthis:\n  ?S \\<subseteq> closure ?S\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0\n 2. \\<And>x.\n       (\\<And>x0.\n           \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n           \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0) \\<Longrightarrow>\n       t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0})\n 3. \\<And>x.\n       (\\<And>x0.\n           \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n           \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0) \\<Longrightarrow>\n       t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})", "finally"], ["proof (chain)\npicking this:\n  t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0})", "show \"t0 \\<in> closure ?l\""], ["proof (prove)\nusing this:\n  t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0})\n\ngoal (1 subgoal):\n 1. t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0})", "."], ["proof (state)\nthis:\n  t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0})\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0\n 2. \\<And>x.\n       (\\<And>x0.\n           \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n           \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0) \\<Longrightarrow>\n       t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})", "from iv_defined"], ["proof (chain)\npicking this:\n  t0 \\<in> T\n  x0 \\<in> X", "have \"t0 \\<in> ?r\""], ["proof (prove)\nusing this:\n  t0 \\<in> T\n  x0 \\<in> X\n\ngoal (1 subgoal):\n 1. t0 \\<in> existence_ivl t0 x0 \\<inter> {t0..}", "by simp"], ["proof (state)\nthis:\n  t0 \\<in> existence_ivl t0 x0 \\<inter> {t0..}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0\n 2. \\<And>x.\n       (\\<And>x0.\n           \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n           \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0) \\<Longrightarrow>\n       t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})", "also"], ["proof (state)\nthis:\n  t0 \\<in> existence_ivl t0 x0 \\<inter> {t0..}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0\n 2. \\<And>x.\n       (\\<And>x0.\n           \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n           \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0) \\<Longrightarrow>\n       t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})", "note closure_subset"], ["proof (state)\nthis:\n  ?S \\<subseteq> closure ?S\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0\n 2. \\<And>x.\n       (\\<And>x0.\n           \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n           \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0) \\<Longrightarrow>\n       t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})", "finally"], ["proof (chain)\npicking this:\n  t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})", "show \"t0 \\<in> closure ?r\""], ["proof (prove)\nusing this:\n  t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\n\ngoal (1 subgoal):\n 1. t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})", "."], ["proof (state)\nthis:\n  t0 \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0", "assume xl: \"x \\<in> closure ?l\""], ["proof (state)\nthis:\n  x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0", "assume \"x \\<in> closure ?r\""], ["proof (state)\nthis:\n  x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0", "also"], ["proof (state)\nthis:\n  x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0", "have \"closure ?r \\<subseteq> closure {t0..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closure (existence_ivl t0 x0 \\<inter> {t0..}) \\<subseteq> closure {t0..}", "by (rule closure_mono) simp"], ["proof (state)\nthis:\n  closure (existence_ivl t0 x0 \\<inter> {t0..}) \\<subseteq> closure {t0..}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0", "finally"], ["proof (chain)\npicking this:\n  x \\<in> closure {t0..}", "have \"t0 \\<le> x\""], ["proof (prove)\nusing this:\n  x \\<in> closure {t0..}\n\ngoal (1 subgoal):\n 1. t0 \\<le> x", "by simp"], ["proof (state)\nthis:\n  t0 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0", "moreover"], ["proof (state)\nthis:\n  t0 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0", "{"], ["proof (state)\nthis:\n  t0 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0", "note xl"], ["proof (state)\nthis:\n  x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0", "also"], ["proof (state)\nthis:\n  x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0", "have cl: \"closure ?l \\<subseteq> closure {..t0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closure (existence_ivl t0 x0 \\<inter> {..t0}) \\<subseteq> closure {..t0}", "by (rule closure_mono) simp"], ["proof (state)\nthis:\n  closure (existence_ivl t0 x0 \\<inter> {..t0}) \\<subseteq> closure {..t0}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0", "finally"], ["proof (chain)\npicking this:\n  x \\<in> closure {..t0}", "have \"x \\<le> t0\""], ["proof (prove)\nusing this:\n  x \\<in> closure {..t0}\n\ngoal (1 subgoal):\n 1. x \\<le> t0", "by simp"], ["proof (state)\nthis:\n  x \\<le> t0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0", "}"], ["proof (state)\nthis:\n  x \\<le> t0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x0.\n                   \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n                   \\<Longrightarrow> t0 \\<in> existence_ivl t0 x0;\n        x \\<notin> {};\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {..t0});\n        x \\<in> closure (existence_ivl t0 x0 \\<inter> {t0..})\\<rbrakk>\n       \\<Longrightarrow> x = t0", "ultimately"], ["proof (chain)\npicking this:\n  t0 \\<le> x\n  x \\<le> t0", "show \"x = t0\""], ["proof (prove)\nusing this:\n  t0 \\<le> x\n  x \\<le> t0\n\ngoal (1 subgoal):\n 1. x = t0", "by simp"], ["proof (state)\nthis:\n  x = t0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  closure (existence_ivl t0 x0 \\<inter> {..t0}) \\<inter>\n  closure (existence_ivl t0 x0 \\<inter> {t0..}) =\n  {t0}\n\ngoal (4 subgoals):\n 1. (flow t0 x0 solves_ode f) (existence_ivl t0 x0) X\n 2. t0 \\<in> existence_ivl t0 x0\n 3. is_interval (existence_ivl t0 x0)\n 4. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "have \"(flow t0 x0 has_vderiv_on (\\<lambda>t. f t (flow t0 x0 t))) ?split\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (flow t0 x0 has_vderiv_on (\\<lambda>t. f t (flow t0 x0 t)))\n     (existence_ivl t0 x0 \\<inter> {..t0} \\<union>\n      existence_ivl t0 x0 \\<inter> {t0..})", "by (rule has_vderiv_on_union)\n      (auto simp: cl_inter insert_idem flow_vderiv_on_right flow_vderiv_on_left)"], ["proof (state)\nthis:\n  (flow t0 x0 has_vderiv_on (\\<lambda>t. f t (flow t0 x0 t)))\n   (existence_ivl t0 x0 \\<inter> {..t0} \\<union>\n    existence_ivl t0 x0 \\<inter> {t0..})\n\ngoal (4 subgoals):\n 1. (flow t0 x0 solves_ode f) (existence_ivl t0 x0) X\n 2. t0 \\<in> existence_ivl t0 x0\n 3. is_interval (existence_ivl t0 x0)\n 4. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "also"], ["proof (state)\nthis:\n  (flow t0 x0 has_vderiv_on (\\<lambda>t. f t (flow t0 x0 t)))\n   (existence_ivl t0 x0 \\<inter> {..t0} \\<union>\n    existence_ivl t0 x0 \\<inter> {t0..})\n\ngoal (4 subgoals):\n 1. (flow t0 x0 solves_ode f) (existence_ivl t0 x0) X\n 2. t0 \\<in> existence_ivl t0 x0\n 3. is_interval (existence_ivl t0 x0)\n 4. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "have \"?split = existence_ivl t0 x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. existence_ivl t0 x0 \\<inter> {..t0} \\<union>\n    existence_ivl t0 x0 \\<inter> {t0..} =\n    existence_ivl t0 x0", "by auto"], ["proof (state)\nthis:\n  existence_ivl t0 x0 \\<inter> {..t0} \\<union>\n  existence_ivl t0 x0 \\<inter> {t0..} =\n  existence_ivl t0 x0\n\ngoal (4 subgoals):\n 1. (flow t0 x0 solves_ode f) (existence_ivl t0 x0) X\n 2. t0 \\<in> existence_ivl t0 x0\n 3. is_interval (existence_ivl t0 x0)\n 4. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "finally"], ["proof (chain)\npicking this:\n  (flow t0 x0 has_vderiv_on (\\<lambda>t. f t (flow t0 x0 t)))\n   (existence_ivl t0 x0)", "have \"(flow t0 x0 has_vderiv_on (\\<lambda>t. f t (flow t0 x0 t))) (existence_ivl t0 x0)\""], ["proof (prove)\nusing this:\n  (flow t0 x0 has_vderiv_on (\\<lambda>t. f t (flow t0 x0 t)))\n   (existence_ivl t0 x0)\n\ngoal (1 subgoal):\n 1. (flow t0 x0 has_vderiv_on (\\<lambda>t. f t (flow t0 x0 t)))\n     (existence_ivl t0 x0)", "."], ["proof (state)\nthis:\n  (flow t0 x0 has_vderiv_on (\\<lambda>t. f t (flow t0 x0 t)))\n   (existence_ivl t0 x0)\n\ngoal (4 subgoals):\n 1. (flow t0 x0 solves_ode f) (existence_ivl t0 x0) X\n 2. t0 \\<in> existence_ivl t0 x0\n 3. is_interval (existence_ivl t0 x0)\n 4. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "moreover"], ["proof (state)\nthis:\n  (flow t0 x0 has_vderiv_on (\\<lambda>t. f t (flow t0 x0 t)))\n   (existence_ivl t0 x0)\n\ngoal (4 subgoals):\n 1. (flow t0 x0 solves_ode f) (existence_ivl t0 x0) X\n 2. t0 \\<in> existence_ivl t0 x0\n 3. is_interval (existence_ivl t0 x0)\n 4. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "have \"flow t0 x0 t \\<in> X\" if \"t \\<in> existence_ivl t0 x0\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. flow t0 x0 t \\<in> X", "using solves_odeD(2)[OF csol(4)[OF that]] that"], ["proof (prove)\nusing this:\n  ?t \\<in> {t0--t} \\<Longrightarrow> csol t0 x0 t ?t \\<in> X\n  t \\<in> existence_ivl t0 x0\n\ngoal (1 subgoal):\n 1. flow t0 x0 t \\<in> X", "by (simp add: flow_def)"], ["proof (state)\nthis:\n  ?t \\<in> existence_ivl t0 x0 \\<Longrightarrow> flow t0 x0 ?t \\<in> X\n\ngoal (4 subgoals):\n 1. (flow t0 x0 solves_ode f) (existence_ivl t0 x0) X\n 2. t0 \\<in> existence_ivl t0 x0\n 3. is_interval (existence_ivl t0 x0)\n 4. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "ultimately"], ["proof (chain)\npicking this:\n  (flow t0 x0 has_vderiv_on (\\<lambda>t. f t (flow t0 x0 t)))\n   (existence_ivl t0 x0)\n  ?t \\<in> existence_ivl t0 x0 \\<Longrightarrow> flow t0 x0 ?t \\<in> X", "show \"(flow t0 x0 solves_ode f) (existence_ivl t0 x0) X\""], ["proof (prove)\nusing this:\n  (flow t0 x0 has_vderiv_on (\\<lambda>t. f t (flow t0 x0 t)))\n   (existence_ivl t0 x0)\n  ?t \\<in> existence_ivl t0 x0 \\<Longrightarrow> flow t0 x0 ?t \\<in> X\n\ngoal (1 subgoal):\n 1. (flow t0 x0 solves_ode f) (existence_ivl t0 x0) X", "by (rule solves_odeI)"], ["proof (state)\nthis:\n  (flow t0 x0 solves_ode f) (existence_ivl t0 x0) X\n\ngoal (3 subgoals):\n 1. t0 \\<in> existence_ivl t0 x0\n 2. is_interval (existence_ivl t0 x0)\n 3. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "show \"t0 \\<in> existence_ivl t0 x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> existence_ivl t0 x0", "using iv_defined"], ["proof (prove)\nusing this:\n  t0 \\<in> T\n  x0 \\<in> X\n\ngoal (1 subgoal):\n 1. t0 \\<in> existence_ivl t0 x0", "by simp"], ["proof (state)\nthis:\n  t0 \\<in> existence_ivl t0 x0\n\ngoal (2 subgoals):\n 1. is_interval (existence_ivl t0 x0)\n 2. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "show \"is_interval (existence_ivl t0 x0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval (existence_ivl t0 x0)", "by (simp add: is_interval_existence_ivl)"], ["proof (state)\nthis:\n  is_interval (existence_ivl t0 x0)\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "fix z t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "assume z: \"{t0 -- t} \\<subseteq> existence_ivl t0 x0\" \"(z solves_ode f) {t0 -- t} X\" \"z t0 = flow t0 x0 t0\""], ["proof (state)\nthis:\n  {t0--t} \\<subseteq> existence_ivl t0 x0\n  (z solves_ode f) {t0--t} X\n  z t0 = flow t0 x0 t0\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "then"], ["proof (chain)\npicking this:\n  {t0--t} \\<subseteq> existence_ivl t0 x0\n  (z solves_ode f) {t0--t} X\n  z t0 = flow t0 x0 t0", "have \"t \\<in> existence_ivl t0 x0\""], ["proof (prove)\nusing this:\n  {t0--t} \\<subseteq> existence_ivl t0 x0\n  (z solves_ode f) {t0--t} X\n  z t0 = flow t0 x0 t0\n\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl t0 x0", "by auto"], ["proof (state)\nthis:\n  t \\<in> existence_ivl t0 x0\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "moreover"], ["proof (state)\nthis:\n  t \\<in> existence_ivl t0 x0\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "from csol[OF this] z"], ["proof (chain)\npicking this:\n  t \\<in> T\n  {t0--t} \\<subseteq> T\n  csol t0 x0 t t0 = x0\n  (csol t0 x0 t solves_ode f) {t0--t} X\n  {t0--t} \\<subseteq> existence_ivl t0 x0\n  (z solves_ode f) {t0--t} X\n  z t0 = flow t0 x0 t0", "have \"(z, t) \\<in> csols t0 x0\""], ["proof (prove)\nusing this:\n  t \\<in> T\n  {t0--t} \\<subseteq> T\n  csol t0 x0 t t0 = x0\n  (csol t0 x0 t solves_ode f) {t0--t} X\n  {t0--t} \\<subseteq> existence_ivl t0 x0\n  (z solves_ode f) {t0--t} X\n  z t0 = flow t0 x0 t0\n\ngoal (1 subgoal):\n 1. (z, t) \\<in> csols t0 x0", "by (auto simp: csols_def)"], ["proof (state)\nthis:\n  (z, t) \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "moreover"], ["proof (state)\nthis:\n  (z, t) \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "have \"(csol t0 x0 t, t) \\<in> csols t0 x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (csol t0 x0 t, t) \\<in> csols t0 x0", "by (rule csol_mem_csols) fact"], ["proof (state)\nthis:\n  (csol t0 x0 t, t) \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> existence_ivl t0 x0;\n        (z solves_ode f) {t0--t} X; z t0 = flow t0 x0 t0\\<rbrakk>\n       \\<Longrightarrow> z t = flow t0 x0 t", "ultimately"], ["proof (chain)\npicking this:\n  t \\<in> existence_ivl t0 x0\n  (z, t) \\<in> csols t0 x0\n  (csol t0 x0 t, t) \\<in> csols t0 x0", "show \"z t = flow t0 x0 t\""], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl t0 x0\n  (z, t) \\<in> csols t0 x0\n  (csol t0 x0 t, t) \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. z t = flow t0 x0 t", "unfolding flow_def"], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl t0 x0\n  (z, t) \\<in> csols t0 x0\n  (csol t0 x0 t, t) \\<in> csols t0 x0\n\ngoal (1 subgoal):\n 1. z t = (if t \\<in> existence_ivl t0 x0 then csol t0 x0 t t else (0::'a))", "by (auto intro: csols_unique[rule_format])"], ["proof (state)\nthis:\n  z t = flow t0 x0 t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma flow_solves_ode: \"t0 \\<in> T \\<Longrightarrow> x0 \\<in> X \\<Longrightarrow> (flow t0 x0 solves_ode f) (existence_ivl t0 x0) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t0 \\<in> T; x0 \\<in> X\\<rbrakk>\n    \\<Longrightarrow> (flow t0 x0 solves_ode f) (existence_ivl t0 x0) X", "by (rule usolves_odeD[OF flow_usolves_ode])"], ["", "lemma equals_flowI:\n  assumes \"t0 \\<in> T'\"\n    \"is_interval T'\"\n    \"T' \\<subseteq> existence_ivl t0 x0\"\n    \"(z solves_ode f) T' X\"\n    \"z t0 = flow t0 x0 t0\" \"t \\<in> T'\"\n  shows \"z t = flow t0 x0 t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z t = flow t0 x0 t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z t = flow t0 x0 t", "from assms"], ["proof (chain)\npicking this:\n  t0 \\<in> T'\n  is_interval T'\n  T' \\<subseteq> existence_ivl t0 x0\n  (z solves_ode f) T' X\n  z t0 = flow t0 x0 t0\n  t \\<in> T'", "have iv_defined: \"t0 \\<in> T\" \"x0 \\<in> X\""], ["proof (prove)\nusing this:\n  t0 \\<in> T'\n  is_interval T'\n  T' \\<subseteq> existence_ivl t0 x0\n  (z solves_ode f) T' X\n  z t0 = flow t0 x0 t0\n  t \\<in> T'\n\ngoal (1 subgoal):\n 1. t0 \\<in> T &&& x0 \\<in> X", "unfolding atomize_conj"], ["proof (prove)\nusing this:\n  t0 \\<in> T'\n  is_interval T'\n  T' \\<subseteq> existence_ivl t0 x0\n  (z solves_ode f) T' X\n  z t0 = flow t0 x0 t0\n  t \\<in> T'\n\ngoal (1 subgoal):\n 1. t0 \\<in> T \\<and> x0 \\<in> X", "using assms existence_ivl_subset mem_existence_ivl_iv_defined"], ["proof (prove)\nusing this:\n  t0 \\<in> T'\n  is_interval T'\n  T' \\<subseteq> existence_ivl t0 x0\n  (z solves_ode f) T' X\n  z t0 = flow t0 x0 t0\n  t \\<in> T'\n  t0 \\<in> T'\n  is_interval T'\n  T' \\<subseteq> existence_ivl t0 x0\n  (z solves_ode f) T' X\n  z t0 = flow t0 x0 t0\n  t \\<in> T'\n  existence_ivl t0 ?x0.0 \\<subseteq> T\n  ?t \\<in> existence_ivl t0 ?x0.0 \\<Longrightarrow> t0 \\<in> T\n  ?t \\<in> existence_ivl t0 ?x0.0 \\<Longrightarrow> ?x0.0 \\<in> X\n\ngoal (1 subgoal):\n 1. t0 \\<in> T \\<and> x0 \\<in> X", "by blast"], ["proof (state)\nthis:\n  t0 \\<in> T\n  x0 \\<in> X\n\ngoal (1 subgoal):\n 1. z t = flow t0 x0 t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. z t = flow t0 x0 t", "using assms"], ["proof (prove)\nusing this:\n  t0 \\<in> T'\n  is_interval T'\n  T' \\<subseteq> existence_ivl t0 x0\n  (z solves_ode f) T' X\n  z t0 = flow t0 x0 t0\n  t \\<in> T'\n\ngoal (1 subgoal):\n 1. z t = flow t0 x0 t", "by (rule usolves_odeD[OF flow_usolves_ode[OF iv_defined]])"], ["proof (state)\nthis:\n  z t = flow t0 x0 t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma existence_ivl_maximal_segment:\n  assumes \"(x solves_ode f) {t0 -- t} X\" \"x t0 = x0\"\n  assumes \"{t0 -- t} \\<subseteq> T\"\n  shows \"t \\<in> existence_ivl t0 x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl t0 x0", "using assms"], ["proof (prove)\nusing this:\n  (x solves_ode f) {t0--t} X\n  x t0 = x0\n  {t0--t} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl t0 x0", "by (auto simp: existence_ivl_def csols_def)"], ["", "lemma existence_ivl_maximal_interval:\n  assumes \"(x solves_ode f) S X\" \"x t0 = x0\"\n  assumes \"t0 \\<in> S\" \"is_interval S\" \"S \\<subseteq> T\"\n  shows \"S \\<subseteq> existence_ivl t0 x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<subseteq> existence_ivl t0 x0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "assume \"t \\<in> S\""], ["proof (state)\nthis:\n  t \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "with assms"], ["proof (chain)\npicking this:\n  (x solves_ode f) S X\n  x t0 = x0\n  t0 \\<in> S\n  is_interval S\n  S \\<subseteq> T\n  t \\<in> S", "have subset1: \"{t0--t} \\<subseteq> S\""], ["proof (prove)\nusing this:\n  (x solves_ode f) S X\n  x t0 = x0\n  t0 \\<in> S\n  is_interval S\n  S \\<subseteq> T\n  t \\<in> S\n\ngoal (1 subgoal):\n 1. {t0--t} \\<subseteq> S", "by (intro closed_segment_subset) (auto simp: is_interval_convex_1)"], ["proof (state)\nthis:\n  {t0--t} \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "with \\<open>S \\<subseteq> T\\<close>"], ["proof (chain)\npicking this:\n  S \\<subseteq> T\n  {t0--t} \\<subseteq> S", "have subset2: \"{t0 -- t} \\<subseteq> T\""], ["proof (prove)\nusing this:\n  S \\<subseteq> T\n  {t0--t} \\<subseteq> S\n\ngoal (1 subgoal):\n 1. {t0--t} \\<subseteq> T", "by auto"], ["proof (state)\nthis:\n  {t0--t} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "have \"(x solves_ode f) {t0 -- t} X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x solves_ode f) {t0--t} X", "using assms(1) subset1 order_refl"], ["proof (prove)\nusing this:\n  (x solves_ode f) S X\n  {t0--t} \\<subseteq> S\n  ?x \\<le> ?x\n\ngoal (1 subgoal):\n 1. (x solves_ode f) {t0--t} X", "by (rule solves_ode_on_subset)"], ["proof (state)\nthis:\n  (x solves_ode f) {t0--t} X\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> existence_ivl t0 x0", "from this \\<open>x t0 = x0\\<close> subset2"], ["proof (chain)\npicking this:\n  (x solves_ode f) {t0--t} X\n  x t0 = x0\n  {t0--t} \\<subseteq> T", "show \"t \\<in> existence_ivl t0 x0\""], ["proof (prove)\nusing this:\n  (x solves_ode f) {t0--t} X\n  x t0 = x0\n  {t0--t} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl t0 x0", "by (rule existence_ivl_maximal_segment)"], ["proof (state)\nthis:\n  t \\<in> existence_ivl t0 x0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma maximal_existence_flow:\n  assumes sol: \"(x solves_ode f) K X\" and iv: \"x t0 = x0\"\n  assumes \"is_interval K\"\n  assumes \"t0 \\<in> K\"\n  assumes \"K \\<subseteq> T\"\n  shows \"K \\<subseteq> existence_ivl t0 x0\" \"\\<And>t. t \\<in> K \\<Longrightarrow> flow t0 x0 t = x t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K \\<subseteq> existence_ivl t0 x0 &&&\n    (\\<And>t. t \\<in> K \\<Longrightarrow> flow t0 x0 t = x t)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. K \\<subseteq> existence_ivl t0 x0\n 2. \\<And>t. t \\<in> K \\<Longrightarrow> flow t0 x0 t = x t", "from assms"], ["proof (chain)\npicking this:\n  (x solves_ode f) K X\n  x t0 = x0\n  is_interval K\n  t0 \\<in> K\n  K \\<subseteq> T", "have iv_defined: \"t0 \\<in> T\" \"x0 \\<in> X\""], ["proof (prove)\nusing this:\n  (x solves_ode f) K X\n  x t0 = x0\n  is_interval K\n  t0 \\<in> K\n  K \\<subseteq> T\n\ngoal (1 subgoal):\n 1. t0 \\<in> T &&& x0 \\<in> X", "unfolding atomize_conj"], ["proof (prove)\nusing this:\n  (x solves_ode f) K X\n  x t0 = x0\n  is_interval K\n  t0 \\<in> K\n  K \\<subseteq> T\n\ngoal (1 subgoal):\n 1. t0 \\<in> T \\<and> x0 \\<in> X", "using solves_ode_domainD"], ["proof (prove)\nusing this:\n  (x solves_ode f) K X\n  x t0 = x0\n  is_interval K\n  t0 \\<in> K\n  K \\<subseteq> T\n  \\<lbrakk>(?y solves_ode ?f) ?T ?X; ?t \\<in> ?T\\<rbrakk>\n  \\<Longrightarrow> ?y ?t \\<in> ?X\n\ngoal (1 subgoal):\n 1. t0 \\<in> T \\<and> x0 \\<in> X", "by blast"], ["proof (state)\nthis:\n  t0 \\<in> T\n  x0 \\<in> X\n\ngoal (2 subgoals):\n 1. K \\<subseteq> existence_ivl t0 x0\n 2. \\<And>t. t \\<in> K \\<Longrightarrow> flow t0 x0 t = x t", "show exivl: \"K \\<subseteq> existence_ivl t0 x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K \\<subseteq> existence_ivl t0 x0", "by (rule existence_ivl_maximal_interval; rule assms)"], ["proof (state)\nthis:\n  K \\<subseteq> existence_ivl t0 x0\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> K \\<Longrightarrow> flow t0 x0 t = x t", "show \"flow t0 x0 t = x t\" if \"t \\<in> K\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. flow t0 x0 t = x t", "apply (rule sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x t = flow t0 x0 t", "apply (rule equals_flowI[OF \\<open>t0 \\<in> K\\<close> \\<open>is_interval K\\<close> exivl sol _ that])"], ["proof (prove)\ngoal (1 subgoal):\n 1. x t0 = flow t0 x0 t0", "by (simp add: iv iv_defined)"], ["proof (state)\nthis:\n  ?t \\<in> K \\<Longrightarrow> flow t0 x0 ?t = x ?t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma maximal_existence_flowI:\n  assumes \"(x has_vderiv_on (\\<lambda>t. f t (x t))) K\"\n  assumes \"\\<And>t. t \\<in> K \\<Longrightarrow> x t \\<in> X\"\n  assumes \"x t0 = x0\"\n  assumes K: \"is_interval K\" \"t0 \\<in> K\" \"K \\<subseteq> T\"\n  shows \"K \\<subseteq> existence_ivl t0 x0\" \"\\<And>t. t \\<in> K \\<Longrightarrow> flow t0 x0 t = x t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K \\<subseteq> existence_ivl t0 x0 &&&\n    (\\<And>t. t \\<in> K \\<Longrightarrow> flow t0 x0 t = x t)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. K \\<subseteq> existence_ivl t0 x0\n 2. \\<And>t. t \\<in> K \\<Longrightarrow> flow t0 x0 t = x t", "from assms(1,2)"], ["proof (chain)\npicking this:\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) K\n  ?t \\<in> K \\<Longrightarrow> x ?t \\<in> X", "have sol: \"(x solves_ode f) K X\""], ["proof (prove)\nusing this:\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) K\n  ?t \\<in> K \\<Longrightarrow> x ?t \\<in> X\n\ngoal (1 subgoal):\n 1. (x solves_ode f) K X", "by (rule solves_odeI)"], ["proof (state)\nthis:\n  (x solves_ode f) K X\n\ngoal (2 subgoals):\n 1. K \\<subseteq> existence_ivl t0 x0\n 2. \\<And>t. t \\<in> K \\<Longrightarrow> flow t0 x0 t = x t", "from maximal_existence_flow[OF sol assms(3) K]"], ["proof (chain)\npicking this:\n  K \\<subseteq> existence_ivl t0 x0\n  ?t \\<in> K \\<Longrightarrow> flow t0 x0 ?t = x ?t", "show \"K \\<subseteq> existence_ivl t0 x0\" \"\\<And>t. t \\<in> K \\<Longrightarrow> flow t0 x0 t = x t\""], ["proof (prove)\nusing this:\n  K \\<subseteq> existence_ivl t0 x0\n  ?t \\<in> K \\<Longrightarrow> flow t0 x0 ?t = x ?t\n\ngoal (1 subgoal):\n 1. K \\<subseteq> existence_ivl t0 x0 &&&\n    (\\<And>t. t \\<in> K \\<Longrightarrow> flow t0 x0 t = x t)", "by auto"], ["proof (state)\nthis:\n  K \\<subseteq> existence_ivl t0 x0\n  ?t \\<in> K \\<Longrightarrow> flow t0 x0 ?t = x ?t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma flow_in_domain: \"t \\<in> existence_ivl t0 x0 \\<Longrightarrow> flow t0 x0 t \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl t0 x0 \\<Longrightarrow> flow t0 x0 t \\<in> X", "using flow_solves_ode solves_ode_domainD local.mem_existence_ivl_iv_defined"], ["proof (prove)\nusing this:\n  \\<lbrakk>t0 \\<in> T; ?x0.0 \\<in> X\\<rbrakk>\n  \\<Longrightarrow> (flow t0 ?x0.0 solves_ode f) (existence_ivl t0 ?x0.0) X\n  \\<lbrakk>(?y solves_ode ?f) ?T ?X; ?t \\<in> ?T\\<rbrakk>\n  \\<Longrightarrow> ?y ?t \\<in> ?X\n  ?t \\<in> existence_ivl t0 ?x0.0 \\<Longrightarrow> t0 \\<in> T\n  ?t \\<in> existence_ivl t0 ?x0.0 \\<Longrightarrow> ?x0.0 \\<in> X\n\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl t0 x0 \\<Longrightarrow> flow t0 x0 t \\<in> X", "by blast"], ["", "lemma (in ll_on_open)\n  assumes \"t \\<in> existence_ivl s x\"\n  assumes \"x \\<in> X\"\n  assumes auto: \"\\<And>s t x. x \\<in> X \\<Longrightarrow> f s x = f t x\"\n  assumes \"T = UNIV\"\n  shows mem_existence_ivl_shift_autonomous1: \"t - s \\<in> existence_ivl 0 x\"\n    and flow_shift_autonomous1: \"flow s x t = flow 0 x (t - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t - s \\<in> existence_ivl 0 x &&& flow s x t = flow 0 x (t - s)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. t - s \\<in> existence_ivl 0 x\n 2. flow s x t = flow 0 x (t - s)", "have na: \"s \\<in> T\" \"x \\<in> X\" and a: \"0 \\<in> T\" \"x \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s \\<in> T &&& x \\<in> X) &&& 0 \\<in> T &&& x \\<in> X", "by (auto simp: assms)"], ["proof (state)\nthis:\n  s \\<in> T\n  x \\<in> X\n  0 \\<in> T\n  x \\<in> X\n\ngoal (2 subgoals):\n 1. t - s \\<in> existence_ivl 0 x\n 2. flow s x t = flow 0 x (t - s)", "have tI[simp]: \"t \\<in> T\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> T", "by (simp add: assms)"], ["proof (state)\nthis:\n  ?t \\<in> T\n\ngoal (2 subgoals):\n 1. t - s \\<in> existence_ivl 0 x\n 2. flow s x t = flow 0 x (t - s)", "let ?T = \"((+) (- s) ` existence_ivl s x)\""], ["proof (state)\ngoal (2 subgoals):\n 1. t - s \\<in> existence_ivl 0 x\n 2. flow s x t = flow 0 x (t - s)", "have shifted: \"is_interval ?T\" \"0 \\<in> ?T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval ((+) (- s) ` existence_ivl s x) &&&\n    0 \\<in> (+) (- s) ` existence_ivl s x", "by (auto simp: \\<open>x \\<in> X\\<close>)"], ["proof (state)\nthis:\n  is_interval ((+) (- s) ` existence_ivl s x)\n  0 \\<in> (+) (- s) ` existence_ivl s x\n\ngoal (2 subgoals):\n 1. t - s \\<in> existence_ivl 0 x\n 2. flow s x t = flow 0 x (t - s)", "have \"(\\<lambda>t. t - s) = (+) (- s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. t - s) = (+) (- s)", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>t. t - s) = (+) (- s)\n\ngoal (2 subgoals):\n 1. t - s \\<in> existence_ivl 0 x\n 2. flow s x t = flow 0 x (t - s)", "with shift_autonomous_solution[OF flow_solves_ode[OF na], of s] flow_in_domain"], ["proof (chain)\npicking this:\n  (\\<And>sa t.\n      sa \\<in> existence_ivl s x \\<Longrightarrow>\n      f sa (flow s x sa) = f t (flow s x sa)) \\<Longrightarrow>\n  ((\\<lambda>t. flow s x (t + s)) solves_ode f)\n   ((\\<lambda>t. t - s) ` existence_ivl s x) X\n  ?t \\<in> existence_ivl ?t0.0 ?x0.0 \\<Longrightarrow>\n  flow ?t0.0 ?x0.0 ?t \\<in> X\n  (\\<lambda>t. t - s) = (+) (- s)", "have sol: \"((\\<lambda>t. flow s x (t + s)) solves_ode f) ?T X\""], ["proof (prove)\nusing this:\n  (\\<And>sa t.\n      sa \\<in> existence_ivl s x \\<Longrightarrow>\n      f sa (flow s x sa) = f t (flow s x sa)) \\<Longrightarrow>\n  ((\\<lambda>t. flow s x (t + s)) solves_ode f)\n   ((\\<lambda>t. t - s) ` existence_ivl s x) X\n  ?t \\<in> existence_ivl ?t0.0 ?x0.0 \\<Longrightarrow>\n  flow ?t0.0 ?x0.0 ?t \\<in> X\n  (\\<lambda>t. t - s) = (+) (- s)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. flow s x (t + s)) solves_ode f)\n     ((+) (- s) ` existence_ivl s x) X", "by (auto simp: auto \\<open>x \\<in> X\\<close>)"], ["proof (state)\nthis:\n  ((\\<lambda>t. flow s x (t + s)) solves_ode f)\n   ((+) (- s) ` existence_ivl s x) X\n\ngoal (2 subgoals):\n 1. t - s \\<in> existence_ivl 0 x\n 2. flow s x t = flow 0 x (t - s)", "have \"flow s x (0 + s) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow s x (0 + s) = x", "using \\<open>x \\<in> X\\<close> flow_initial_time"], ["proof (prove)\nusing this:\n  x \\<in> X\n  \\<lbrakk>?t0.0 \\<in> T; ?x0.0 \\<in> X\\<rbrakk>\n  \\<Longrightarrow> flow ?t0.0 ?x0.0 ?t0.0 = ?x0.0\n\ngoal (1 subgoal):\n 1. flow s x (0 + s) = x", "by simp"], ["proof (state)\nthis:\n  flow s x (0 + s) = x\n\ngoal (2 subgoals):\n 1. t - s \\<in> existence_ivl 0 x\n 2. flow s x t = flow 0 x (t - s)", "from maximal_existence_flow[OF sol this shifted]"], ["proof (chain)\npicking this:\n  (+) (- s) ` existence_ivl s x \\<subseteq> T \\<Longrightarrow>\n  (+) (- s) ` existence_ivl s x \\<subseteq> existence_ivl 0 x\n  \\<lbrakk>(+) (- s) ` existence_ivl s x \\<subseteq> T;\n   ?t \\<in> (+) (- s) ` existence_ivl s x\\<rbrakk>\n  \\<Longrightarrow> flow 0 x ?t = flow s x (?t + s)", "have *: \"?T \\<subseteq> existence_ivl 0 x\"\n    and **: \"\\<And>t. t \\<in> ?T \\<Longrightarrow> flow 0 x t = flow s x (t + s)\""], ["proof (prove)\nusing this:\n  (+) (- s) ` existence_ivl s x \\<subseteq> T \\<Longrightarrow>\n  (+) (- s) ` existence_ivl s x \\<subseteq> existence_ivl 0 x\n  \\<lbrakk>(+) (- s) ` existence_ivl s x \\<subseteq> T;\n   ?t \\<in> (+) (- s) ` existence_ivl s x\\<rbrakk>\n  \\<Longrightarrow> flow 0 x ?t = flow s x (?t + s)\n\ngoal (1 subgoal):\n 1. (+) (- s) ` existence_ivl s x \\<subseteq> existence_ivl 0 x &&&\n    (\\<And>t.\n        t \\<in> (+) (- s) ` existence_ivl s x \\<Longrightarrow>\n        flow 0 x t = flow s x (t + s))", "by (auto simp: subset_iff)"], ["proof (state)\nthis:\n  (+) (- s) ` existence_ivl s x \\<subseteq> existence_ivl 0 x\n  ?t \\<in> (+) (- s) ` existence_ivl s x \\<Longrightarrow>\n  flow 0 x ?t = flow s x (?t + s)\n\ngoal (2 subgoals):\n 1. t - s \\<in> existence_ivl 0 x\n 2. flow s x t = flow 0 x (t - s)", "have \"t - s \\<in> ?T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t - s \\<in> (+) (- s) ` existence_ivl s x", "using \\<open>t \\<in> existence_ivl s x\\<close>"], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl s x\n\ngoal (1 subgoal):\n 1. t - s \\<in> (+) (- s) ` existence_ivl s x", "by auto"], ["proof (state)\nthis:\n  t - s \\<in> (+) (- s) ` existence_ivl s x\n\ngoal (2 subgoals):\n 1. t - s \\<in> existence_ivl 0 x\n 2. flow s x t = flow 0 x (t - s)", "also"], ["proof (state)\nthis:\n  t - s \\<in> (+) (- s) ` existence_ivl s x\n\ngoal (2 subgoals):\n 1. t - s \\<in> existence_ivl 0 x\n 2. flow s x t = flow 0 x (t - s)", "note *"], ["proof (state)\nthis:\n  (+) (- s) ` existence_ivl s x \\<subseteq> existence_ivl 0 x\n\ngoal (2 subgoals):\n 1. t - s \\<in> existence_ivl 0 x\n 2. flow s x t = flow 0 x (t - s)", "finally"], ["proof (chain)\npicking this:\n  t - s \\<in> existence_ivl 0 x", "show \"t - s \\<in> existence_ivl 0 x\""], ["proof (prove)\nusing this:\n  t - s \\<in> existence_ivl 0 x\n\ngoal (1 subgoal):\n 1. t - s \\<in> existence_ivl 0 x", "."], ["proof (state)\nthis:\n  t - s \\<in> existence_ivl 0 x\n\ngoal (1 subgoal):\n 1. flow s x t = flow 0 x (t - s)", "show \"flow s x t = flow 0 x (t - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow s x t = flow 0 x (t - s)", "using \\<open>t \\<in> existence_ivl s x\\<close>"], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl s x\n\ngoal (1 subgoal):\n 1. flow s x t = flow 0 x (t - s)", "by (auto simp: **)"], ["proof (state)\nthis:\n  flow s x t = flow 0 x (t - s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in ll_on_open)\n  assumes \"t - s \\<in> existence_ivl 0 x\"\n  assumes \"x \\<in> X\"\n  assumes auto: \"\\<And>s t x. x \\<in> X \\<Longrightarrow> f s x = f t x\"\n  assumes \"T = UNIV\"\n  shows mem_existence_ivl_shift_autonomous2: \"t \\<in> existence_ivl s x\"\n    and flow_shift_autonomous2: \"flow s x t = flow 0 x (t - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl s x &&& flow s x t = flow 0 x (t - s)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. t \\<in> existence_ivl s x\n 2. flow s x t = flow 0 x (t - s)", "have na: \"s \\<in> T\" \"x \\<in> X\" and a: \"0 \\<in> T\" \"x \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s \\<in> T &&& x \\<in> X) &&& 0 \\<in> T &&& x \\<in> X", "by (auto simp: assms)"], ["proof (state)\nthis:\n  s \\<in> T\n  x \\<in> X\n  0 \\<in> T\n  x \\<in> X\n\ngoal (2 subgoals):\n 1. t \\<in> existence_ivl s x\n 2. flow s x t = flow 0 x (t - s)", "let ?T = \"((+) s ` existence_ivl 0 x)\""], ["proof (state)\ngoal (2 subgoals):\n 1. t \\<in> existence_ivl s x\n 2. flow s x t = flow 0 x (t - s)", "have shifted: \"is_interval ?T\" \"s \\<in> ?T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval ((+) s ` existence_ivl 0 x) &&&\n    s \\<in> (+) s ` existence_ivl 0 x", "by (auto simp: a)"], ["proof (state)\nthis:\n  is_interval ((+) s ` existence_ivl 0 x)\n  s \\<in> (+) s ` existence_ivl 0 x\n\ngoal (2 subgoals):\n 1. t \\<in> existence_ivl s x\n 2. flow s x t = flow 0 x (t - s)", "have \"(\\<lambda>t. t + s) = (+) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. t + s) = (+) s", "by (auto simp: )"], ["proof (state)\nthis:\n  (\\<lambda>t. t + s) = (+) s\n\ngoal (2 subgoals):\n 1. t \\<in> existence_ivl s x\n 2. flow s x t = flow 0 x (t - s)", "with shift_autonomous_solution[OF flow_solves_ode[OF a], of \"-s\"]\n    flow_in_domain"], ["proof (chain)\npicking this:\n  (\\<And>s t.\n      s \\<in> existence_ivl 0 x \\<Longrightarrow>\n      f s (flow 0 x s) = f t (flow 0 x s)) \\<Longrightarrow>\n  ((\\<lambda>t. flow 0 x (t + - s)) solves_ode f)\n   ((\\<lambda>t. t - - s) ` existence_ivl 0 x) X\n  ?t \\<in> existence_ivl ?t0.0 ?x0.0 \\<Longrightarrow>\n  flow ?t0.0 ?x0.0 ?t \\<in> X\n  (\\<lambda>t. t + s) = (+) s", "have sol: \"((\\<lambda>t. flow 0 x (t - s)) solves_ode f) ?T X\""], ["proof (prove)\nusing this:\n  (\\<And>s t.\n      s \\<in> existence_ivl 0 x \\<Longrightarrow>\n      f s (flow 0 x s) = f t (flow 0 x s)) \\<Longrightarrow>\n  ((\\<lambda>t. flow 0 x (t + - s)) solves_ode f)\n   ((\\<lambda>t. t - - s) ` existence_ivl 0 x) X\n  ?t \\<in> existence_ivl ?t0.0 ?x0.0 \\<Longrightarrow>\n  flow ?t0.0 ?x0.0 ?t \\<in> X\n  (\\<lambda>t. t + s) = (+) s\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. flow 0 x (t - s)) solves_ode f)\n     ((+) s ` existence_ivl 0 x) X", "by (auto simp: auto algebra_simps)"], ["proof (state)\nthis:\n  ((\\<lambda>t. flow 0 x (t - s)) solves_ode f) ((+) s ` existence_ivl 0 x)\n   X\n\ngoal (2 subgoals):\n 1. t \\<in> existence_ivl s x\n 2. flow s x t = flow 0 x (t - s)", "have \"flow 0 x (s - s) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow 0 x (s - s) = x", "by (auto simp: a)"], ["proof (state)\nthis:\n  flow 0 x (s - s) = x\n\ngoal (2 subgoals):\n 1. t \\<in> existence_ivl s x\n 2. flow s x t = flow 0 x (t - s)", "from maximal_existence_flow[OF sol this shifted]"], ["proof (chain)\npicking this:\n  (+) s ` existence_ivl 0 x \\<subseteq> T \\<Longrightarrow>\n  (+) s ` existence_ivl 0 x \\<subseteq> existence_ivl s x\n  \\<lbrakk>(+) s ` existence_ivl 0 x \\<subseteq> T;\n   ?t \\<in> (+) s ` existence_ivl 0 x\\<rbrakk>\n  \\<Longrightarrow> flow s x ?t = flow 0 x (?t - s)", "have *: \"?T \\<subseteq> existence_ivl s x\"\n    and **: \"\\<And>t. t \\<in> ?T \\<Longrightarrow> flow s x t = flow 0 x (t - s)\""], ["proof (prove)\nusing this:\n  (+) s ` existence_ivl 0 x \\<subseteq> T \\<Longrightarrow>\n  (+) s ` existence_ivl 0 x \\<subseteq> existence_ivl s x\n  \\<lbrakk>(+) s ` existence_ivl 0 x \\<subseteq> T;\n   ?t \\<in> (+) s ` existence_ivl 0 x\\<rbrakk>\n  \\<Longrightarrow> flow s x ?t = flow 0 x (?t - s)\n\ngoal (1 subgoal):\n 1. (+) s ` existence_ivl 0 x \\<subseteq> existence_ivl s x &&&\n    (\\<And>t.\n        t \\<in> (+) s ` existence_ivl 0 x \\<Longrightarrow>\n        flow s x t = flow 0 x (t - s))", "by (auto simp: subset_iff assms)"], ["proof (state)\nthis:\n  (+) s ` existence_ivl 0 x \\<subseteq> existence_ivl s x\n  ?t \\<in> (+) s ` existence_ivl 0 x \\<Longrightarrow>\n  flow s x ?t = flow 0 x (?t - s)\n\ngoal (2 subgoals):\n 1. t \\<in> existence_ivl s x\n 2. flow s x t = flow 0 x (t - s)", "have \"t \\<in> ?T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> (+) s ` existence_ivl 0 x", "using \\<open>t - s \\<in> existence_ivl 0 x\\<close>"], ["proof (prove)\nusing this:\n  t - s \\<in> existence_ivl 0 x\n\ngoal (1 subgoal):\n 1. t \\<in> (+) s ` existence_ivl 0 x", "by force"], ["proof (state)\nthis:\n  t \\<in> (+) s ` existence_ivl 0 x\n\ngoal (2 subgoals):\n 1. t \\<in> existence_ivl s x\n 2. flow s x t = flow 0 x (t - s)", "also"], ["proof (state)\nthis:\n  t \\<in> (+) s ` existence_ivl 0 x\n\ngoal (2 subgoals):\n 1. t \\<in> existence_ivl s x\n 2. flow s x t = flow 0 x (t - s)", "note *"], ["proof (state)\nthis:\n  (+) s ` existence_ivl 0 x \\<subseteq> existence_ivl s x\n\ngoal (2 subgoals):\n 1. t \\<in> existence_ivl s x\n 2. flow s x t = flow 0 x (t - s)", "finally"], ["proof (chain)\npicking this:\n  t \\<in> existence_ivl s x", "show \"t \\<in> existence_ivl s x\""], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl s x\n\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl s x", "."], ["proof (state)\nthis:\n  t \\<in> existence_ivl s x\n\ngoal (1 subgoal):\n 1. flow s x t = flow 0 x (t - s)", "show \"flow s x t = flow 0 x (t - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow s x t = flow 0 x (t - s)", "using \\<open>t - s \\<in> existence_ivl _ _\\<close>"], ["proof (prove)\nusing this:\n  t - s \\<in> existence_ivl 0 x\n\ngoal (1 subgoal):\n 1. flow s x t = flow 0 x (t - s)", "by (subst **; force)"], ["proof (state)\nthis:\n  flow s x t = flow 0 x (t - s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  flow_eq_rev:\n  assumes \"t \\<in> existence_ivl t0 x0\"\n  shows \"preflect t0 t \\<in> ll_on_open.existence_ivl (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0 x0\"\n    \"flow t0 x0 t = ll_on_open.flow (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0 x0 (preflect t0 t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preflect t0 t\n    \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n           (\\<lambda>t. - f (preflect t0 t)) X t0 x0 &&&\n    flow t0 x0 t =\n    ll_on_open.flow (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0\n     x0 (preflect t0 t)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. preflect t0 t\n    \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n           (\\<lambda>t. - f (preflect t0 t)) X t0 x0\n 2. flow t0 x0 t =\n    ll_on_open.flow (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0\n     x0 (preflect t0 t)", "from mem_existence_ivl_iv_defined[OF assms]"], ["proof (chain)\npicking this:\n  t0 \\<in> T\n  x0 \\<in> X", "have mt0: \"t0 \\<in> preflect t0 ` existence_ivl t0 x0\""], ["proof (prove)\nusing this:\n  t0 \\<in> T\n  x0 \\<in> X\n\ngoal (1 subgoal):\n 1. t0 \\<in> preflect t0 ` existence_ivl t0 x0", "by (auto simp: preflect_def)"], ["proof (state)\nthis:\n  t0 \\<in> preflect t0 ` existence_ivl t0 x0\n\ngoal (2 subgoals):\n 1. preflect t0 t\n    \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n           (\\<lambda>t. - f (preflect t0 t)) X t0 x0\n 2. flow t0 x0 t =\n    ll_on_open.flow (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0\n     x0 (preflect t0 t)", "have subset: \"preflect t0 ` existence_ivl t0 x0 \\<subseteq> preflect t0 ` T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preflect t0 ` existence_ivl t0 x0 \\<subseteq> preflect t0 ` T", "using existence_ivl_subset"], ["proof (prove)\nusing this:\n  existence_ivl t0 ?x0.0 \\<subseteq> T\n\ngoal (1 subgoal):\n 1. preflect t0 ` existence_ivl t0 x0 \\<subseteq> preflect t0 ` T", "by (rule image_mono)"], ["proof (state)\nthis:\n  preflect t0 ` existence_ivl t0 x0 \\<subseteq> preflect t0 ` T\n\ngoal (2 subgoals):\n 1. preflect t0 t\n    \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n           (\\<lambda>t. - f (preflect t0 t)) X t0 x0\n 2. flow t0 x0 t =\n    ll_on_open.flow (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0\n     x0 (preflect t0 t)", "from mt0 subset"], ["proof (chain)\npicking this:\n  t0 \\<in> preflect t0 ` existence_ivl t0 x0\n  preflect t0 ` existence_ivl t0 x0 \\<subseteq> preflect t0 ` T", "have \"t0 \\<in> preflect t0 ` T\""], ["proof (prove)\nusing this:\n  t0 \\<in> preflect t0 ` existence_ivl t0 x0\n  preflect t0 ` existence_ivl t0 x0 \\<subseteq> preflect t0 ` T\n\ngoal (1 subgoal):\n 1. t0 \\<in> preflect t0 ` T", "by auto"], ["proof (state)\nthis:\n  t0 \\<in> preflect t0 ` T\n\ngoal (2 subgoals):\n 1. preflect t0 t\n    \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n           (\\<lambda>t. - f (preflect t0 t)) X t0 x0\n 2. flow t0 x0 t =\n    ll_on_open.flow (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0\n     x0 (preflect t0 t)", "have sol: \"((\\<lambda>t. flow t0 x0 (preflect t0 t)) solves_ode (\\<lambda>t. - f (preflect t0 t))) (preflect t0 ` existence_ivl t0 x0) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. flow t0 x0 (preflect t0 t)) solves_ode\n     (\\<lambda>t. - f (preflect t0 t)))\n     (preflect t0 ` existence_ivl t0 x0) X", "using mt0"], ["proof (prove)\nusing this:\n  t0 \\<in> preflect t0 ` existence_ivl t0 x0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. flow t0 x0 (preflect t0 t)) solves_ode\n     (\\<lambda>t. - f (preflect t0 t)))\n     (preflect t0 ` existence_ivl t0 x0) X", "by (rule preflect_solution) (auto simp: image_image flow_solves_ode mem_existence_ivl_iv_defined[OF assms])"], ["proof (state)\nthis:\n  ((\\<lambda>t. flow t0 x0 (preflect t0 t)) solves_ode\n   (\\<lambda>t. - f (preflect t0 t)))\n   (preflect t0 ` existence_ivl t0 x0) X\n\ngoal (2 subgoals):\n 1. preflect t0 t\n    \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n           (\\<lambda>t. - f (preflect t0 t)) X t0 x0\n 2. flow t0 x0 t =\n    ll_on_open.flow (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0\n     x0 (preflect t0 t)", "have flow0: \"flow t0 x0 (preflect t0 t0) = x0\" and ivl: \"is_interval (preflect t0 ` existence_ivl t0 x0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow t0 x0 (preflect t0 t0) = x0 &&&\n    is_interval (preflect t0 ` existence_ivl t0 x0)", "by (auto simp: preflect_def mem_existence_ivl_iv_defined[OF assms])"], ["proof (state)\nthis:\n  flow t0 x0 (preflect t0 t0) = x0\n  is_interval (preflect t0 ` existence_ivl t0 x0)\n\ngoal (2 subgoals):\n 1. preflect t0 t\n    \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n           (\\<lambda>t. - f (preflect t0 t)) X t0 x0\n 2. flow t0 x0 t =\n    ll_on_open.flow (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0\n     x0 (preflect t0 t)", "interpret rev: ll_on_open \"(preflect t0 ` T)\" \"(\\<lambda>t. - f (preflect t0 t))\" X"], ["proof (prove)\ngoal (1 subgoal):\n 1. ll_on_open (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X", ".."], ["proof (state)\ngoal (2 subgoals):\n 1. preflect t0 t \\<in> rev.existence_ivl t0 x0\n 2. flow t0 x0 t = rev.flow t0 x0 (preflect t0 t)", "from rev.maximal_existence_flow[OF sol flow0 ivl mt0 subset]"], ["proof (chain)\npicking this:\n  preflect t0 ` existence_ivl t0 x0 \\<subseteq> rev.existence_ivl t0 x0\n  ?t \\<in> preflect t0 ` existence_ivl t0 x0 \\<Longrightarrow>\n  rev.flow t0 x0 ?t = flow t0 x0 (preflect t0 ?t)", "show \"preflect t0 t \\<in> rev.existence_ivl t0 x0\" \"flow t0 x0 t = rev.flow t0 x0 (preflect t0 t)\""], ["proof (prove)\nusing this:\n  preflect t0 ` existence_ivl t0 x0 \\<subseteq> rev.existence_ivl t0 x0\n  ?t \\<in> preflect t0 ` existence_ivl t0 x0 \\<Longrightarrow>\n  rev.flow t0 x0 ?t = flow t0 x0 (preflect t0 ?t)\n\ngoal (1 subgoal):\n 1. preflect t0 t \\<in> rev.existence_ivl t0 x0 &&&\n    flow t0 x0 t = rev.flow t0 x0 (preflect t0 t)", "using assms"], ["proof (prove)\nusing this:\n  preflect t0 ` existence_ivl t0 x0 \\<subseteq> rev.existence_ivl t0 x0\n  ?t \\<in> preflect t0 ` existence_ivl t0 x0 \\<Longrightarrow>\n  rev.flow t0 x0 ?t = flow t0 x0 (preflect t0 ?t)\n  t \\<in> existence_ivl t0 x0\n\ngoal (1 subgoal):\n 1. preflect t0 t \\<in> rev.existence_ivl t0 x0 &&&\n    flow t0 x0 t = rev.flow t0 x0 (preflect t0 t)", "by (auto simp: preflect_def)"], ["proof (state)\nthis:\n  preflect t0 t \\<in> rev.existence_ivl t0 x0\n  flow t0 x0 t = rev.flow t0 x0 (preflect t0 t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in ll_on_open)\n  shows rev_flow_eq: \"t \\<in> ll_on_open.existence_ivl (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0 x0 \\<Longrightarrow>\n    ll_on_open.flow (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0 x0 t = flow t0 x0 (preflect t0 t)\"\n  and mem_rev_existence_ivl_eq:\n  \"t \\<in> ll_on_open.existence_ivl (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0 x0 \\<longleftrightarrow> preflect t0 t \\<in> existence_ivl t0 x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n              (\\<lambda>t. - f (preflect t0 t)) X t0 x0 \\<Longrightarrow>\n     ll_on_open.flow (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X\n      t0 x0 t =\n     flow t0 x0 (preflect t0 t)) &&&\n    (t \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n              (\\<lambda>t. - f (preflect t0 t)) X t0 x0) =\n    (preflect t0 t \\<in> existence_ivl t0 x0)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. t \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n             (\\<lambda>t. - f (preflect t0 t)) X t0 x0 \\<Longrightarrow>\n    ll_on_open.flow (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0\n     x0 t =\n    flow t0 x0 (preflect t0 t)\n 2. (t \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n              (\\<lambda>t. - f (preflect t0 t)) X t0 x0) =\n    (preflect t0 t \\<in> existence_ivl t0 x0)", "interpret rev: ll_on_open \"(preflect t0 ` T)\" \"(\\<lambda>t. - f (preflect t0 t))\" X"], ["proof (prove)\ngoal (1 subgoal):\n 1. ll_on_open (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X", ".."], ["proof (state)\ngoal (2 subgoals):\n 1. t \\<in> rev.existence_ivl t0 x0 \\<Longrightarrow>\n    rev.flow t0 x0 t = flow t0 x0 (preflect t0 t)\n 2. (t \\<in> rev.existence_ivl t0 x0) =\n    (preflect t0 t \\<in> existence_ivl t0 x0)", "from rev.flow_eq_rev[of _ t0 x0] flow_eq_rev[of \"2 * t0 - t\" t0 x0]"], ["proof (chain)\npicking this:\n  ?t \\<in> rev.existence_ivl t0 x0 \\<Longrightarrow>\n  preflect t0 ?t\n  \\<in> ll_on_open.existence_ivl (preflect t0 ` preflect t0 ` T)\n         (\\<lambda>t. - (- f (preflect t0 (preflect t0 t)))) X t0 x0\n  ?t \\<in> rev.existence_ivl t0 x0 \\<Longrightarrow>\n  rev.flow t0 x0 ?t =\n  ll_on_open.flow (preflect t0 ` preflect t0 ` T)\n   (\\<lambda>t. - (- f (preflect t0 (preflect t0 t)))) X t0 x0\n   (preflect t0 ?t)\n  2 * t0 - t \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n  preflect t0 (2 * t0 - t) \\<in> rev.existence_ivl t0 x0\n  2 * t0 - t \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n  flow t0 x0 (2 * t0 - t) = rev.flow t0 x0 (preflect t0 (2 * t0 - t))", "show \"t \\<in> rev.existence_ivl t0 x0 \\<Longrightarrow> rev.flow t0 x0 t = flow t0 x0 (preflect t0 t)\"\n    \"(t \\<in> rev.existence_ivl t0 x0) = (preflect t0 t \\<in> existence_ivl t0 x0)\""], ["proof (prove)\nusing this:\n  ?t \\<in> rev.existence_ivl t0 x0 \\<Longrightarrow>\n  preflect t0 ?t\n  \\<in> ll_on_open.existence_ivl (preflect t0 ` preflect t0 ` T)\n         (\\<lambda>t. - (- f (preflect t0 (preflect t0 t)))) X t0 x0\n  ?t \\<in> rev.existence_ivl t0 x0 \\<Longrightarrow>\n  rev.flow t0 x0 ?t =\n  ll_on_open.flow (preflect t0 ` preflect t0 ` T)\n   (\\<lambda>t. - (- f (preflect t0 (preflect t0 t)))) X t0 x0\n   (preflect t0 ?t)\n  2 * t0 - t \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n  preflect t0 (2 * t0 - t) \\<in> rev.existence_ivl t0 x0\n  2 * t0 - t \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n  flow t0 x0 (2 * t0 - t) = rev.flow t0 x0 (preflect t0 (2 * t0 - t))\n\ngoal (1 subgoal):\n 1. (t \\<in> rev.existence_ivl t0 x0 \\<Longrightarrow>\n     rev.flow t0 x0 t = flow t0 x0 (preflect t0 t)) &&&\n    (t \\<in> rev.existence_ivl t0 x0) =\n    (preflect t0 t \\<in> existence_ivl t0 x0)", "by (auto simp: preflect_def fun_Compl_def image_image dest: mem_existence_ivl_iv_defined\n      rev.mem_existence_ivl_iv_defined)"], ["proof (state)\nthis:\n  t \\<in> rev.existence_ivl t0 x0 \\<Longrightarrow>\n  rev.flow t0 x0 t = flow t0 x0 (preflect t0 t)\n  (t \\<in> rev.existence_ivl t0 x0) =\n  (preflect t0 t \\<in> existence_ivl t0 x0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  shows rev_existence_ivl_eq: \"ll_on_open.existence_ivl (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0 x0 = preflect t0 ` existence_ivl t0 x0\"\n    and existence_ivl_eq_rev: \"existence_ivl t0 x0 = preflect t0 ` ll_on_open.existence_ivl (preflect t0 ` T) (\\<lambda>t. - f (preflect t0 t)) X t0 x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ll_on_open.existence_ivl (preflect t0 ` T)\n     (\\<lambda>t. - f (preflect t0 t)) X t0 x0 =\n    preflect t0 ` existence_ivl t0 x0 &&&\n    existence_ivl t0 x0 =\n    preflect t0 `\n    ll_on_open.existence_ivl (preflect t0 ` T)\n     (\\<lambda>t. - f (preflect t0 t)) X t0 x0", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n                (\\<lambda>t. - f (preflect t0 t)) X t0 x0 \\<Longrightarrow>\n       x \\<in> preflect t0 ` existence_ivl t0 x0\n 2. \\<And>x xa.\n       xa \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       preflect t0 xa\n       \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n              (\\<lambda>t. - f (preflect t0 t)) X t0 x0\n 3. \\<And>x.\n       x \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       x \\<in> preflect t0 `\n               ll_on_open.existence_ivl (preflect t0 ` T)\n                (\\<lambda>t. - f (preflect t0 t)) X t0 x0\n 4. \\<And>x xa.\n       xa \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n                 (\\<lambda>t. - f (preflect t0 t)) X t0 x0 \\<Longrightarrow>\n       preflect t0 xa \\<in> existence_ivl t0 x0", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n              (\\<lambda>t. - f (preflect t0 t)) X t0 x0 \\<Longrightarrow>\n    x_ \\<in> preflect t0 ` existence_ivl t0 x0", "by (force simp: mem_rev_existence_ivl_eq)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa.\n       xa \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       preflect t0 xa\n       \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n              (\\<lambda>t. - f (preflect t0 t)) X t0 x0\n 2. \\<And>x.\n       x \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       x \\<in> preflect t0 `\n               ll_on_open.existence_ivl (preflect t0 ` T)\n                (\\<lambda>t. - f (preflect t0 t)) X t0 x0\n 3. \\<And>x xa.\n       xa \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n                 (\\<lambda>t. - f (preflect t0 t)) X t0 x0 \\<Longrightarrow>\n       preflect t0 xa \\<in> existence_ivl t0 x0", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. xa_ \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n    preflect t0 xa_\n    \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n           (\\<lambda>t. - f (preflect t0 t)) X t0 x0", "by (force simp: mem_rev_existence_ivl_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n       x \\<in> preflect t0 `\n               ll_on_open.existence_ivl (preflect t0 ` T)\n                (\\<lambda>t. - f (preflect t0 t)) X t0 x0\n 2. \\<And>x xa.\n       xa \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n                 (\\<lambda>t. - f (preflect t0 t)) X t0 x0 \\<Longrightarrow>\n       preflect t0 xa \\<in> existence_ivl t0 x0", "subgoal for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> existence_ivl t0 x0 \\<Longrightarrow>\n    x \\<in> preflect t0 `\n            ll_on_open.existence_ivl (preflect t0 ` T)\n             (\\<lambda>t. - f (preflect t0 t)) X t0 x0", "by (force intro!: image_eqI[where x=\"preflect t0 x\"] simp: mem_rev_existence_ivl_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       xa \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n                 (\\<lambda>t. - f (preflect t0 t)) X t0 x0 \\<Longrightarrow>\n       preflect t0 xa \\<in> existence_ivl t0 x0", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. xa_\n    \\<in> ll_on_open.existence_ivl (preflect t0 ` T)\n           (\\<lambda>t. - f (preflect t0 t)) X t0 x0 \\<Longrightarrow>\n    preflect t0 xa_ \\<in> existence_ivl t0 x0", "by (force simp: mem_rev_existence_ivl_eq)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "end"]]}