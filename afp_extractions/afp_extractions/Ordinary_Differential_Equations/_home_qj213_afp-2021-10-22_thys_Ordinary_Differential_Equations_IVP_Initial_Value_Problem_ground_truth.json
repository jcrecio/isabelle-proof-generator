{"file_name": "/home/qj213/afp-2021-10-22/thys/Ordinary_Differential_Equations/IVP/Initial_Value_Problem.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Ordinary_Differential_Equations", "problem_names": ["lemma clamp_le[simp]: \"x \\<le> a \\<Longrightarrow> clamp a b x = a\" for x::\"'a::ordered_euclidean_space\"", "lemma clamp_ge[simp]: \"a \\<le> b \\<Longrightarrow> b \\<le> x \\<Longrightarrow> clamp a b x = b\" for x::\"'a::ordered_euclidean_space\"", "lemma closed_segment_translation_zero: \"z \\<in> {z + a--z + b} \\<longleftrightarrow> 0 \\<in> {a -- b}\"", "lemma closed_segment_subset_interval: \"is_interval T \\<Longrightarrow> a \\<in> T \\<Longrightarrow> b \\<in> T \\<Longrightarrow> closed_segment a b \\<subseteq> T\"", "lemma half_open_segment_real:\n  fixes a b::real\n  shows \"{a --< b} = (if a \\<le> b then {a ..< b} else {b <.. a})\"", "lemma closure_half_open_segment:\n  fixes a b::real\n  shows \"closure {a --< b} = (if a = b then {} else {a -- b})\"", "lemma half_open_segment_subset[intro, simp]:\n  \"{t0--<t1} \\<subseteq> {t0 -- t1}\"\n  \"x \\<in> {t0--<t1} \\<Longrightarrow> x \\<in> {t0 -- t1}\"", "lemma half_open_segment_closed_segmentI:\n  \"t \\<in> {t0 -- t1} \\<Longrightarrow> t \\<noteq> t1 \\<Longrightarrow> t \\<in> {t0 --< t1}\"", "lemma islimpt_half_open_segment:\n  fixes t0 t1 s::real\n  assumes \"t0 \\<noteq> t1\" \"s \\<in> {t0--t1}\"\n  shows \"s islimpt {t0--<t1}\"", "lemma\n  mem_half_open_segment_eventually_in_closed_segment:\n  fixes t::real\n  assumes \"t \\<in> {t0--<t1'}\"\n  shows \"\\<forall>\\<^sub>F t1' in at t1' within {t0--<t1'}. t \\<in> {t0--t1'}\"", "lemma closed_segment_half_open_segment_subsetI:\n  fixes x::real shows \"x \\<in> {t0--<t1} \\<Longrightarrow> {t0--x} \\<subseteq> {t0--<t1}\"", "lemma dist_component_le:\n  fixes x y::\"'a::euclidean_space\"\n  assumes \"i \\<in> Basis\"\n  shows \"dist (x \\<bullet> i) (y \\<bullet> i) \\<le> dist x y\"", "lemma sum_inner_Basis_one: \"i \\<in> Basis \\<Longrightarrow> (\\<Sum>x\\<in>Basis. x \\<bullet> i) = 1\"", "lemma cball_in_cbox:\n  fixes y::\"'a::euclidean_space\"\n  shows \"cball y r \\<subseteq> cbox (y - r *\\<^sub>R One) (y + r *\\<^sub>R One)\"", "lemma centered_cbox_in_cball:\n  shows \"cbox (- r *\\<^sub>R One) (r *\\<^sub>R One::'a::euclidean_space) \\<subseteq>\n    cball 0 (sqrt(DIM('a)) * r)\"", "lemma solves_odeI:\n  assumes solves_ode_vderivD: \"(y has_vderiv_on (\\<lambda>t. f t (y t))) T\"\n    and solves_ode_domainD: \"\\<And>t. t \\<in> T \\<Longrightarrow> y t \\<in> X\"\n  shows \"(y solves_ode f) T X\"", "lemma solves_odeD:\n  assumes \"(y solves_ode f) T X\"\n  shows solves_ode_vderivD: \"(y has_vderiv_on (\\<lambda>t. f t (y t))) T\"\n    and solves_ode_domainD: \"\\<And>t. t \\<in> T \\<Longrightarrow> y t \\<in> X\"", "lemma solves_ode_continuous_on: \"(y solves_ode f) T X \\<Longrightarrow> continuous_on T y\"", "lemma solves_ode_congI:\n  assumes \"(x solves_ode f) T X\"\n  assumes \"\\<And>t. t \\<in> T \\<Longrightarrow> x t = y t\"\n  assumes \"\\<And>t. t \\<in> T \\<Longrightarrow> f t (x t) = g t (x t)\"\n  assumes \"T = S\" \"X = Y\"\n  shows \"(y solves_ode g) S Y\"", "lemma solves_ode_cong[cong]:\n  assumes \"\\<And>t. t \\<in> T \\<Longrightarrow> x t = y t\"\n  assumes \"\\<And>t. t \\<in> T \\<Longrightarrow> f t (x t) = g t (x t)\"\n  assumes \"T = S\" \"X = Y\"\n  shows \"(x solves_ode f) T X \\<longleftrightarrow> (y solves_ode g) S Y\"", "lemma solves_ode_on_subset:\n  assumes \"(x solves_ode f) S Y\"\n  assumes \"T \\<subseteq> S\" \"Y \\<subseteq> X\"\n  shows \"(x solves_ode f) T X\"", "lemma preflect_solution:\n  assumes \"t0 \\<in> T\"\n  assumes sol: \"((\\<lambda>t. x (preflect t0 t)) solves_ode (\\<lambda>t x. - f (preflect t0 t) x)) (preflect t0 ` T) X\"\n  shows \"(x solves_ode f) T X\"", "lemma solution_preflect:\n  assumes \"t0 \\<in> T\"\n  assumes sol: \"(x solves_ode f) T X\"\n  shows \"((\\<lambda>t. x (preflect t0 t)) solves_ode (\\<lambda>t x. - f (preflect t0 t) x)) (preflect t0 ` T) X\"", "lemma solution_eq_preflect_solution:\n  assumes \"t0 \\<in> T\"\n  shows \"(x solves_ode f) T X \\<longleftrightarrow> ((\\<lambda>t. x (preflect t0 t)) solves_ode (\\<lambda>t x. - f (preflect t0 t) x)) (preflect t0 ` T) X\"", "lemma shift_autonomous_solution:\n  assumes sol: \"(x solves_ode f) T X\"\n  assumes auto: \"\\<And>s t. s \\<in> T \\<Longrightarrow> f s (x s) = f t (x s)\"\n  shows \"((\\<lambda>t. x (t + t0)) solves_ode f) ((\\<lambda>t. t - t0) ` T) X\"", "lemma solves_ode_singleton: \"y t0 \\<in> X \\<Longrightarrow> (y solves_ode f) {t0} X\"", "lemma connection_solves_ode:\n  assumes x: \"(x solves_ode f) T X\"\n  assumes y: \"(y solves_ode g) S Y\"\n  assumes conn_T: \"closure S \\<inter> closure T \\<subseteq> T\"\n  assumes conn_S: \"closure S \\<inter> closure T \\<subseteq> S\"\n  assumes conn_x: \"\\<And>t. t \\<in> closure S \\<Longrightarrow> t \\<in> closure T \\<Longrightarrow> x t = y t\"\n  assumes conn_f: \"\\<And>t. t \\<in> closure S \\<Longrightarrow> t \\<in> closure T \\<Longrightarrow> f t (y t) = g t (y t)\"\n  shows \"((\\<lambda>t. if t \\<in> T then x t else y t) solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) (T \\<union> S) (X \\<union> Y)\"", "lemma\n  solves_ode_subset_range:\n  assumes x: \"(x solves_ode f) T X\"\n  assumes s: \"x ` T \\<subseteq> Y\"\n  shows \"(x solves_ode f) T Y\"", "lemma\n  \"((\\<lambda>_. 0::real) usolves_ode (\\<lambda>_. sqrt) from 0) {0..} {0}\"\n    \"((\\<lambda>t. t\\<^sup>2 / 4) solves_ode (\\<lambda>_. sqrt)) {0..} {0..}\"\n    \"(\\<lambda>t. t\\<^sup>2 / 4) 0 = (\\<lambda>_. 0::real) 0\"", "lemma usolves_odeD:\n  assumes \"(y usolves_ode f from t0) T X\"\n  shows \"(y solves_ode f) T X\"\n    and \"t0 \\<in> T\"\n    and \"is_interval T\"\n    and \"\\<And>z T' t. t0 \\<in> T' \\<Longrightarrow> is_interval T' \\<Longrightarrow> T' \\<subseteq> T \\<Longrightarrow>(z solves_ode f) T' X \\<Longrightarrow> z t0 = y t0 \\<Longrightarrow> t \\<in> T' \\<Longrightarrow> z t = y t\"", "lemma usolves_ode_rawI:\n  assumes \"(y solves_ode f) T X\" \"t0 \\<in> T\" \"is_interval T\"\n  assumes \"\\<And>z T' t. t0 \\<in> T' \\<Longrightarrow> is_interval T' \\<Longrightarrow> T' \\<subseteq> T \\<Longrightarrow> (z solves_ode f) T' X \\<Longrightarrow> z t0 = y t0 \\<Longrightarrow> t \\<in> T' \\<Longrightarrow> z t = y t\"\n  shows \"(y usolves_ode f from t0) T X\"", "lemma usolves_odeI:\n  assumes \"(y solves_ode f) T X\" \"t0 \\<in> T\" \"is_interval T\"\n  assumes usol: \"\\<And>z t. {t0 -- t} \\<subseteq> T \\<Longrightarrow> (z solves_ode f) {t0 -- t} X \\<Longrightarrow> z t0 = y t0 \\<Longrightarrow> z t = y t\"\n  shows \"(y usolves_ode f from t0) T X\"", "lemma is_interval_singleton[intro,simp]: \"is_interval {t0}\"", "lemma usolves_ode_singleton: \"x t0 \\<in> X \\<Longrightarrow> (x usolves_ode f from t0) {t0} X\"", "lemma usolves_ode_congI:\n  assumes x: \"(x usolves_ode f from t0) T X\"\n  assumes \"\\<And>t. t \\<in> T \\<Longrightarrow> x t = y t\"\n  assumes \"\\<And>t y. t \\<in> T \\<Longrightarrow> y \\<in> X \\<Longrightarrow> f t y = g t y\"\\<comment> \\<open>TODO: weaken this assumption?!\\<close>\n  assumes \"t0 = s0\"\n  assumes \"T = S\"\n  assumes \"X = Y\"\n  shows \"(y usolves_ode g from s0) S Y\"", "lemma usolves_ode_cong[cong]:\n  assumes \"\\<And>t. t \\<in> T \\<Longrightarrow> x t = y t\"\n  assumes \"\\<And>t y. t \\<in> T \\<Longrightarrow> y \\<in> X \\<Longrightarrow> f t y = g t y\"\\<comment> \\<open>TODO: weaken this assumption?!\\<close>\n  assumes \"t0 = s0\"\n  assumes \"T = S\"\n  assumes \"X = Y\"\n  shows \"(x usolves_ode f from t0) T X \\<longleftrightarrow> (y usolves_ode g from s0) S Y\"", "lemma shift_autonomous_unique_solution:\n  assumes usol: \"(x usolves_ode f from t0) T X\"\n  assumes auto: \"\\<And>s t x. x \\<in> X \\<Longrightarrow> f s x = f t x\"\n  shows \"((\\<lambda>t. x (t + t0 - t1)) usolves_ode f from t1) ((+) (t1 - t0) ` T) X\"", "lemma three_intervals_lemma:\n  fixes a b c::real\n  assumes a: \"a \\<in> A - B\"\n    and b: \"b \\<in> B - A\"\n    and c: \"c \\<in> A \\<inter> B\"\n    and iA: \"is_interval A\" and iB: \"is_interval B\"\n    and aI: \"a \\<in> I\"\n    and bI: \"b \\<in> I\"\n    and iI: \"is_interval I\"\n  shows \"c \\<in> I\"", "lemma connection_usolves_ode:\n  assumes x: \"(x usolves_ode f from tx) T X\"\n  assumes y: \"\\<And>t. t \\<in> closure S \\<inter> closure T \\<Longrightarrow> (y usolves_ode g from t) S X\"\n  assumes conn_T: \"closure S \\<inter> closure T \\<subseteq> T\"\n  assumes conn_S: \"closure S \\<inter> closure T \\<subseteq> S\"\n  assumes conn_t: \"t \\<in> closure S \\<inter> closure T\"\n  assumes conn_x: \"\\<And>t. t \\<in> closure S \\<Longrightarrow> t \\<in> closure T \\<Longrightarrow> x t = y t\"\n  assumes conn_f: \"\\<And>t x. t \\<in> closure S \\<Longrightarrow> t \\<in> closure T \\<Longrightarrow> x \\<in> X \\<Longrightarrow> f t x = g t x\"\n  shows \"((\\<lambda>t. if t \\<in> T then x t else y t) usolves_ode (\\<lambda>t. if t \\<in> T then f t else g t) from tx) (T \\<union> S) X\"", "lemma usolves_ode_union_closed:\n  assumes x: \"(x usolves_ode f from tx) T X\"\n  assumes y: \"\\<And>t. t \\<in> closure S \\<inter> closure T \\<Longrightarrow> (x usolves_ode f from t) S X\"\n  assumes conn_T: \"closure S \\<inter> closure T \\<subseteq> T\"\n  assumes conn_S: \"closure S \\<inter> closure T \\<subseteq> S\"\n  assumes conn_t: \"t \\<in> closure S \\<inter> closure T\"\n  shows \"(x usolves_ode f from tx) (T \\<union> S) X\"", "lemma usolves_ode_solves_odeI:\n  assumes \"(x usolves_ode f from tx) T X\"\n  assumes \"(y solves_ode f) T X\" \"y tx = x tx\"\n  shows \"(y usolves_ode f from tx) T X\"", "lemma usolves_ode_subset_range:\n  assumes x: \"(x usolves_ode f from t0) T X\"\n  assumes r: \"x ` T \\<subseteq> Y\" and \"Y \\<subseteq> X\"\n  shows \"(x usolves_ode f from t0) T Y\"", "lemma is_solution_ext_cont:\n  \"continuous_on T x \\<Longrightarrow> (ext_cont x (min t0 t1) (max t0 t1) solves_ode f) T X = (x solves_ode f) T X\"", "lemma solution_fixed_point:\n  fixes x:: \"real \\<Rightarrow> 'a::banach\"\n  assumes x: \"(x solves_ode f) T X\" and t: \"t \\<in> T\"\n  shows \"x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) = x t\"", "lemma solution_fixed_point_left:\n  fixes x:: \"real \\<Rightarrow> 'a::banach\"\n  assumes x: \"(x solves_ode f) T X\" and t: \"t \\<in> T\"\n  shows \"x t1 - ivl_integral t t1 (\\<lambda>t. f t (x t)) = x t\"", "lemma solution_fixed_pointI:\n  fixes x:: \"real \\<Rightarrow> 'a::banach\"\n  assumes cont_f: \"continuous_on (T \\<times> X) (\\<lambda>(t, x). f t x)\"\n  assumes cont_x: \"continuous_on T x\"\n  assumes defined: \"\\<And>t. t \\<in> T \\<Longrightarrow> x t \\<in> X\"\n  assumes fp: \"\\<And>t. t \\<in> T \\<Longrightarrow> x t = x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t))\"\n  shows \"(x solves_ode f) T X\"", "lemma solves_ode_half_open_segment_continuation:\n  fixes f::\"real \\<Rightarrow> 'a \\<Rightarrow> 'a::banach\"\n  assumes ode: \"(x solves_ode f) {t0 --< t1} X\"\n  assumes continuous: \"continuous_on ({t0 -- t1} \\<times> X) (\\<lambda>(t, x). f t x)\"\n  assumes \"compact X\"\n  assumes \"t0 \\<noteq> t1\"\n  obtains l where\n    \"(x \\<longlongrightarrow> l) (at t1 within {t0 --< t1})\"\n    \"((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0 -- t1} X\"", "lemma continuous_rhs_comp[continuous_intros]:\n  assumes [continuous_intros]: \"continuous_on S g\"\n  assumes [continuous_intros]: \"continuous_on S h\"\n  assumes \"g ` S \\<subseteq> T\"\n  assumes \"h ` S \\<subseteq> X\"\n  shows \"continuous_on S (\\<lambda>x. f (g x) (h x))\"", "lemma closed_segment_subset_domain: \"t0 \\<in> T \\<Longrightarrow> t \\<in> T \\<Longrightarrow> closed_segment t0 t \\<subseteq> T\"", "lemma closed_segment_subset_domainI: \"t0 \\<in> T \\<Longrightarrow> t \\<in> T \\<Longrightarrow> s \\<in> closed_segment t0 t \\<Longrightarrow> s \\<in> T\"", "lemma convex[intro, simp]: \"convex T\"\n  and connected[intro, simp]: \"connected T\"", "lemma\n  shows tmin: \"t \\<in> T \\<Longrightarrow> tmin \\<le> t\" \"tmin \\<in> T\"\n    and tmax: \"t \\<in> T \\<Longrightarrow> t \\<le> tmax\" \"tmax \\<in> T\"", "lemma tmin_le_tmax[intro, simp]: \"tmin \\<le> tmax\"", "lemma T_def: \"T = {tmin .. tmax}\"", "lemma mem_T_I[intro, simp]: \"tmin \\<le> t \\<Longrightarrow> t \\<le> tmax \\<Longrightarrow> t \\<in> T\"", "lemma closed_segment_iv_subset_domain: \"t \\<in> T \\<Longrightarrow> closed_segment t0 t \\<subseteq> T\"", "lemma T_split: \"T = {tmin .. t0} \\<union> {t0 .. tmax}\"", "lemma L_nonneg: \"0 \\<le> L\"", "lemma cont_P_inner_ivl:\n  \"x \\<in> T \\<rightarrow>\\<^sub>C X \\<Longrightarrow> continuous_on {tmin..tmax} (P_inner (apply_bcontfun x))\"", "lemma P_inner_t0[simp]: \"P_inner g t0 = x0\"", "lemma t0_cs_tmin_tmax: \"t0 \\<in> {tmin--tmax}\" and cs_tmin_tmax_subset: \"{tmin--tmax} \\<subseteq> T\"", "lemma\n  P_eqs:\n  assumes \"x \\<in> T \\<rightarrow>\\<^sub>C X\"\n  shows P_eq_P_inner: \"t \\<in> T \\<Longrightarrow> P x t = P_inner x t\"\n    and P_le_tmin: \"t \\<le> tmin \\<Longrightarrow> P x t = P_inner x tmin\"\n    and P_ge_tmax: \"t \\<ge> tmax \\<Longrightarrow> P x t = P_inner x tmax\"", "lemma P_if_eq:\n  \"x \\<in> T \\<rightarrow>\\<^sub>C X \\<Longrightarrow>\n    P x t = (if tmin \\<le> t \\<and> t \\<le> tmax then P_inner x t else if t \\<ge> tmax then P_inner x tmax else P_inner x tmin)\"", "lemma dist_P_le:\n  assumes y: \"y \\<in> T \\<rightarrow>\\<^sub>C X\" and z: \"z \\<in> T \\<rightarrow>\\<^sub>C X\"\n  assumes le: \"\\<And>t. tmin \\<le> t \\<Longrightarrow> t \\<le> tmax \\<Longrightarrow> dist (P_inner y t) (P_inner z t) \\<le> R\"\n  assumes \"0 \\<le> R\"\n  shows \"dist (P y t) (P z t) \\<le> R\"", "lemma P_def':\n  assumes \"t \\<in> T\"\n  assumes \"fixed_point \\<in> T \\<rightarrow>\\<^sub>C X\"\n  shows \"(P fixed_point) t = x0 + ivl_integral t0 t (\\<lambda>x. f x (fixed_point x))\"", "lemma iter_spaceI:\n  assumes \"g \\<in> T \\<rightarrow>\\<^sub>C X\" \"g t0 = x0\"\n  shows \"g \\<in> iter_space\"", "lemma iter_spaceD:\n  assumes \"g \\<in> iter_space\"\n  shows \"g \\<in> T \\<rightarrow>\\<^sub>C X\" \"apply_bcontfun g t0 = x0\"", "lemma const_in_iter_space: \"const_bcontfun x0 \\<in> iter_space\"", "lemma closed_iter_space: \"closed iter_space\"", "lemma iter_space_notempty: \"iter_space \\<noteq> {}\"", "lemma clamp_in_eq[simp]: fixes a x b::real shows \"a \\<le> x \\<Longrightarrow> x \\<le> b \\<Longrightarrow> clamp a b x = x\"", "lemma P_self_mapping:\n  assumes in_space: \"g \\<in> iter_space\"\n  shows \"P g \\<in> iter_space\"", "lemma continuous_on_T: \"continuous_on {tmin .. tmax} g \\<Longrightarrow> continuous_on T g\"", "lemma T_closed_segment_subsetI[intro, simp]: \"t \\<in> {tmin--tmax} \\<Longrightarrow> t \\<in> T\"\n  and T_subsetI[intro, simp]: \"tmin \\<le> t \\<Longrightarrow> t \\<le> tmax \\<Longrightarrow> t \\<in> T\"", "lemma t0_mem_closed_segment[intro, simp]: \"t0 \\<in> {tmin--tmax}\"", "lemma tmin_le_t0[intro, simp]: \"tmin \\<le> t0\"\n  and tmax_ge_t0[intro, simp]: \"tmax \\<ge> t0\"", "lemma apply_bcontfun_solution_fixed_point:\n  assumes ode: \"(apply_bcontfun x solves_ode f) T X\"\n  assumes iv: \"x t0 = x0\"\n  assumes t: \"t \\<in> T\"\n  shows \"P x t = x t\"", "lemma\n  solution_in_iter_space:\n  assumes ode: \"(apply_bcontfun z solves_ode f) T X\"\n  assumes iv: \"z t0 = x0\"\n  shows \"z \\<in> iter_space\" (is \"?z \\<in> _\")", "lemma lipschitz_bound_maxmin: \"(tmax - tmin) * L < 1\"", "lemma lipschitz_P:\n  shows \"((tmax - tmin) * L)-lipschitz_on iter_space P\"", "lemma fixed_point_unique: \"\\<exists>!x\\<in>iter_space. P x = x\"", "lemma fixed_point':\n  \"fixed_point \\<in> iter_space \\<and> P fixed_point = fixed_point\"", "lemma fixed_point:\n  \"fixed_point \\<in> iter_space\" \"P fixed_point = fixed_point\"", "lemma fixed_point_equality': \"x \\<in> iter_space \\<and> P x = x \\<Longrightarrow> fixed_point = x\"", "lemma fixed_point_equality: \"x \\<in> iter_space \\<Longrightarrow> P x = x \\<Longrightarrow> fixed_point = x\"", "lemma fixed_point_iv: \"fixed_point t0 = x0\"\n  and fixed_point_domain: \"x \\<in> T \\<Longrightarrow> fixed_point x \\<in> X\"", "lemma fixed_point_has_vderiv_on: \"(fixed_point has_vderiv_on (\\<lambda>t. f t (fixed_point t))) T\"", "lemma fixed_point_solution:\n  shows \"(fixed_point solves_ode f) T X\"", "lemma solves_ode_equals_fixed_point:\n  assumes ode: \"(x solves_ode f) T X\"\n  assumes iv: \"x t0 = x0\"\n  assumes t: \"t \\<in> T\"\n  shows \"x t = fixed_point t\"", "lemma solves_ode_on_closed_segment_equals_fixed_point:\n  assumes ode: \"(x solves_ode f) {t0 -- t1'} X\"\n  assumes iv: \"x t0 = x0\"\n  assumes subset: \"{t0--t1'} \\<subseteq> T\"\n  assumes t_mem: \"t \\<in> {t0--t1'}\"\n  shows \"x t = fixed_point t\"", "lemma unique_solution:\n  assumes ivp1: \"(x solves_ode f) T X\" \"x t0 = x0\"\n  assumes ivp2: \"(y solves_ode f) T X\" \"y t0 = x0\"\n  assumes \"t \\<in> T\"\n  shows \"x t = y t\"", "lemma fixed_point_usolves_ode: \"(fixed_point usolves_ode f from t0) T X\"", "lemma closed_segment_Un:\n  fixes a b c::real\n  assumes \"b \\<in> closed_segment a c\"\n  shows \"closed_segment a b \\<union> closed_segment b c = closed_segment a c\"", "lemma closed_segment_closed_segment_subset:\n  fixes s::real and i::nat\n  assumes \"s \\<in> closed_segment a b\"\n  assumes \"a \\<in> closed_segment c d\" \"b \\<in> closed_segment c d\"\n  shows \"s \\<in> closed_segment c d\"", "lemma subdivide_count_ex: \"\\<exists>n. L * abs (t1 - t0) / (Suc n) < 1\"", "lemma subdivide_count: \"L * abs (t1 - t0) / Suc subdivide_count < 1\"", "lemma subdivide_lipschitz:\n  assumes \"\\<bar>s - t\\<bar> \\<le> abs (t1 - t0) / Suc subdivide_count\"\n  shows \"\\<bar>s - t\\<bar> * L < 1\"", "lemma subdivide_lipschitz_lemma:\n  assumes st: \"s \\<in> {a -- b}\" \"t \\<in> {a -- b}\"\n  assumes \"abs (b - a) \\<le> abs (t1 - t0) / Suc subdivide_count\"\n  shows \"\\<bar>s - t\\<bar> * L < 1\"", "lemma last_step: \"t0 + real (Suc subdivide_count) * step = t1\"", "lemma step_in_segment:\n  assumes \"0 \\<le> i\" \"i \\<le> real (Suc subdivide_count)\"\n  shows \"t0 + i * step \\<in> closed_segment t0 t1\"", "lemma subset_T1:\n  fixes s::real and i::nat\n  assumes \"s \\<in> closed_segment t0 (t0 + i * step)\"\n  assumes \"i \\<le> Suc subdivide_count\"\n  shows \"s \\<in> {t0 -- t1}\"", "lemma subset_T: \"{t0 -- t1} \\<subseteq> T\" and subset_TI: \"s \\<in> {t0 -- t1} \\<Longrightarrow> s \\<in> T\"", "lemma psolutions_usolves_until_step:\n  assumes i_le: \"i \\<le> Suc subdivide_count\"\n  shows \"(psolutions usolves_ode f from t0) (closed_segment t0 (t0 + real i * step)) X\"", "lemma psolutions_usolves_ode: \"(psolutions usolves_ode f from t0) {t0 -- t1} X\"", "lemma solution_eq_left: \"tmin \\<le> t \\<Longrightarrow> t \\<le> t0 \\<Longrightarrow> solution t = psolutions tmin t\"", "lemma solution_eq_right: \"t0 \\<le> t \\<Longrightarrow> t \\<le> tmax \\<Longrightarrow> solution t = psolutions tmax t\"", "lemma solution_usolves_ode: \"(solution usolves_ode f from t0) T X\"", "lemma solution_solves_ode: \"(solution solves_ode f) T X\"", "lemma solution_iv[simp]: \"solution t0 = x0\"", "lemmas cylinder = X_def", "lemma B_nonneg: \"B \\<ge> 0\"", "lemma in_bounds_derivativeI:\n  assumes \"t \\<in> T\"\n  assumes init: \"x t0 = x0\"\n  assumes cont: \"continuous_on (closed_segment t0 t) x\"\n  assumes solves: \"(x has_vderiv_on (\\<lambda>s. f s (y s))) (open_segment t0 t)\"\n  assumes y_bounded: \"\\<And>\\<xi>. \\<xi> \\<in> closed_segment t0 t \\<Longrightarrow> x \\<xi> \\<in> X \\<Longrightarrow> y \\<xi> \\<in> X\"\n  shows \"x t \\<in> cball x0 (B * abs (t - t0))\"", "lemma in_bounds_derivative_globalI:\n  assumes \"t \\<in> T\"\n  assumes init: \"x t0 = x0\"\n  assumes cont: \"continuous_on (closed_segment t0 t) x\"\n  assumes solves: \"(x has_vderiv_on (\\<lambda>s. f s (y s))) (open_segment t0 t)\"\n  assumes y_bounded: \"\\<And>\\<xi>. \\<xi> \\<in> closed_segment t0 t \\<Longrightarrow> x \\<xi> \\<in> X \\<Longrightarrow> y \\<xi> \\<in> X\"\n  shows \"x t \\<in> X\"", "lemma integral_in_bounds:\n  assumes \"t \\<in> T\" \"x t0 = x0\" \"x \\<in> {t0 -- t} \\<rightarrow> X\"\n  assumes cont[continuous_intros]: \"continuous_on ({t0 -- t}) x\"\n  shows \"x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X\" (is \"_ + ?ix t \\<in> X\")", "lemma solves_in_cone:\n  assumes \"t \\<in> T\"\n  assumes init: \"x t0 = x0\"\n  assumes cont: \"continuous_on (closed_segment t0 t) x\"\n  assumes solves: \"(x has_vderiv_on (\\<lambda>s. f s (x s))) (open_segment t0 t)\"\n  shows \"x t \\<in> cball x0 (B * abs (t - t0))\"", "lemma is_solution_in_cone:\n  assumes \"t \\<in> T\"\n  assumes sol: \"(x solves_ode f) (closed_segment t0 t) Y\" and iv: \"x t0 = x0\"\n  shows \"x t \\<in> cball x0 (B * abs (t - t0))\"", "lemma cone_subset_domain:\n  assumes \"t \\<in> T\"\n  shows \"cball x0 (B * \\<bar>t - t0\\<bar>) \\<subseteq> X\"", "lemma is_solution_in_domain:\n  assumes \"t \\<in> T\"\n  assumes sol: \"(x solves_ode f) (closed_segment t0 t) Y\" and iv: \"x t0 = x0\"\n  shows \"x t \\<in> X\"", "lemma solves_ode_on_subset_domain:\n  assumes sol: \"(x solves_ode f) S Y\" and iv: \"x t0 = x0\"\n    and ivl: \"t0 \\<in> S\" \"is_interval S\" \"S \\<subseteq> T\"\n  shows \"(x solves_ode f) S X\"", "lemma usolves_ode_on_subset:\n  assumes x: \"(x usolves_ode f from t0) T X\" and iv: \"x t0 = x0\"\n  assumes \"t0 \\<in> S\" \"is_interval S\" \"S \\<subseteq> T\" \"X \\<subseteq> Y\"\n  shows \"(x usolves_ode f from t0) S Y\"", "lemma usolves_ode_on_superset_domain:\n  assumes \"(x usolves_ode f from t0) T X\" and iv: \"x t0 = x0\"\n  assumes \"X \\<subseteq> Y\"\n  shows \"(x usolves_ode f from t0) T Y\"", "lemma f'_comp[derivative_intros]:\n  \"(g has_derivative g') (at s within S) \\<Longrightarrow> (h has_derivative h') (at s within S) \\<Longrightarrow>\n  s \\<in> S \\<Longrightarrow> (\\<And>x. x \\<in> S \\<Longrightarrow> g x \\<in> T) \\<Longrightarrow> (\\<And>x. x \\<in> S \\<Longrightarrow> h x \\<in> X) \\<Longrightarrow>\n  ((\\<lambda>x. f (g x) (h x)) has_derivative (\\<lambda>y. f' (g s, h s) (g' y, h' y))) (at s within S)\"", "lemma derivative_on_prod_subset:\n  assumes \"X' \\<subseteq> X\"\n  shows \"derivative_on_prod T X' f f'\""], "translations": [["", "lemma clamp_le[simp]: \"x \\<le> a \\<Longrightarrow> clamp a b x = a\" for x::\"'a::ordered_euclidean_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> a \\<Longrightarrow> clamp a b x = a", "by (auto simp: clamp_def eucl_le[where 'a='a] intro!: euclidean_eqI[where 'a='a])"], ["", "lemma clamp_ge[simp]: \"a \\<le> b \\<Longrightarrow> b \\<le> x \\<Longrightarrow> clamp a b x = b\" for x::\"'a::ordered_euclidean_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; b \\<le> x\\<rbrakk> \\<Longrightarrow> clamp a b x = b", "by (force simp: clamp_def eucl_le[where 'a='a] not_le not_less  intro!: euclidean_eqI[where 'a='a])"], ["", "abbreviation cfuncset :: \"'a::topological_space set \\<Rightarrow> 'b::metric_space set \\<Rightarrow> ('a \\<Rightarrow>\\<^sub>C 'b) set\"\n  (infixr \"\\<rightarrow>\\<^sub>C\" 60)\n  where \"A \\<rightarrow>\\<^sub>C B \\<equiv> PiC A (\\<lambda>_. B)\""], ["", "lemma closed_segment_translation_zero: \"z \\<in> {z + a--z + b} \\<longleftrightarrow> 0 \\<in> {a -- b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z \\<in> {z + a--z + b}) = ((0::'a) \\<in> {a--b})", "by (metis add.right_neutral closed_segment_translation_eq)"], ["", "lemma closed_segment_subset_interval: \"is_interval T \\<Longrightarrow> a \\<in> T \\<Longrightarrow> b \\<in> T \\<Longrightarrow> closed_segment a b \\<subseteq> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_interval T; a \\<in> T; b \\<in> T\\<rbrakk>\n    \\<Longrightarrow> {a--b} \\<subseteq> T", "by (rule closed_segment_subset) (auto intro!: closed_segment_subset is_interval_convex)"], ["", "definition half_open_segment::\"'a::real_vector \\<Rightarrow> 'a \\<Rightarrow> 'a set\" (\"(1{_--<_})\")\n  where \"half_open_segment a b = {a -- b} - {b}\""], ["", "lemma half_open_segment_real:\n  fixes a b::real\n  shows \"{a --< b} = (if a \\<le> b then {a ..< b} else {b <.. a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a--<b} = (if a \\<le> b then {a..<b} else {b<..a})", "by (auto simp: half_open_segment_def closed_segment_eq_real_ivl)"], ["", "lemma closure_half_open_segment:\n  fixes a b::real\n  shows \"closure {a --< b} = (if a = b then {} else {a -- b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closure {a--<b} = (if a = b then {} else {a--b})", "unfolding closed_segment_eq_real_ivl if_distrib half_open_segment_real"], ["proof (prove)\ngoal (1 subgoal):\n 1. if a = b\n    then (if a \\<le> b then (=) (closure {a..<b})\n          else (=) (closure {b<..a}))\n          ((if a = b then If (a \\<le> b) {} else If (a \\<le> b) {a..b}) {})\n    else (if a \\<le> b then (=) (closure {a..<b})\n          else (=) (closure {b<..a}))\n          ((if a = b then If (a \\<le> b) {} else If (a \\<le> b) {a..b})\n            {b..a})", "unfolding if_distribR"], ["proof (prove)\ngoal (1 subgoal):\n 1. if a = b\n    then if a \\<le> b\n         then closure {a..<b} =\n              (if a = b then if a \\<le> b then {} else {}\n               else if a \\<le> b then {a..b} else {})\n         else closure {b<..a} =\n              (if a = b then if a \\<le> b then {} else {}\n               else if a \\<le> b then {a..b} else {})\n    else if a \\<le> b\n         then closure {a..<b} =\n              (if a = b then if a \\<le> b then {} else {b..a}\n               else if a \\<le> b then {a..b} else {b..a})\n         else closure {b<..a} =\n              (if a = b then if a \\<le> b then {} else {b..a}\n               else if a \\<le> b then {a..b} else {b..a})", "by simp"], ["", "lemma half_open_segment_subset[intro, simp]:\n  \"{t0--<t1} \\<subseteq> {t0 -- t1}\"\n  \"x \\<in> {t0--<t1} \\<Longrightarrow> x \\<in> {t0 -- t1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0--<t1} \\<subseteq> {t0--t1} &&&\n    (x \\<in> {t0--<t1} \\<Longrightarrow> x \\<in> {t0--t1})", "by (auto simp: half_open_segment_def)"], ["", "lemma half_open_segment_closed_segmentI:\n  \"t \\<in> {t0 -- t1} \\<Longrightarrow> t \\<noteq> t1 \\<Longrightarrow> t \\<in> {t0 --< t1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<in> {t0--t1}; t \\<noteq> t1\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {t0--<t1}", "by (auto simp: half_open_segment_def)"], ["", "lemma islimpt_half_open_segment:\n  fixes t0 t1 s::real\n  assumes \"t0 \\<noteq> t1\" \"s \\<in> {t0--t1}\"\n  shows \"s islimpt {t0--<t1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s islimpt {t0--<t1}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s islimpt {t0--<t1}", "have \"s islimpt {t0..<t1}\" if \"t0 \\<le> s\" \"s \\<le> t1\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. s islimpt {t0..<t1}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s islimpt {t0..<t1}", "have *: \"{t0..<t1} - {s} = {t0..<s} \\<union> {s<..<t1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0..<t1} - {s} = {t0..<s} \\<union> {s<..<t1}", "using that"], ["proof (prove)\nusing this:\n  t0 \\<le> s\n  s \\<le> t1\n\ngoal (1 subgoal):\n 1. {t0..<t1} - {s} = {t0..<s} \\<union> {s<..<t1}", "by auto"], ["proof (state)\nthis:\n  {t0..<t1} - {s} = {t0..<s} \\<union> {s<..<t1}\n\ngoal (1 subgoal):\n 1. s islimpt {t0..<t1}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. s islimpt {t0..<t1}", "using that \\<open>t0 \\<noteq> t1\\<close> *"], ["proof (prove)\nusing this:\n  t0 \\<le> s\n  s \\<le> t1\n  t0 \\<noteq> t1\n  {t0..<t1} - {s} = {t0..<s} \\<union> {s<..<t1}\n\ngoal (1 subgoal):\n 1. s islimpt {t0..<t1}", "by (cases \"t0 = s\") (auto simp: islimpt_in_closure)"], ["proof (state)\nthis:\n  s islimpt {t0..<t1}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>t0 \\<le> ?s; ?s \\<le> t1\\<rbrakk>\n  \\<Longrightarrow> ?s islimpt {t0..<t1}\n\ngoal (1 subgoal):\n 1. s islimpt {t0--<t1}", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>t0 \\<le> ?s; ?s \\<le> t1\\<rbrakk>\n  \\<Longrightarrow> ?s islimpt {t0..<t1}\n\ngoal (1 subgoal):\n 1. s islimpt {t0--<t1}", "have \"s islimpt {t1<..t0}\" if \"t1 \\<le> s\" \"s \\<le> t0\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. s islimpt {t1<..t0}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s islimpt {t1<..t0}", "have *: \"{t1<..t0} - {s} = {t1<..<s} \\<union> {s<..t0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t1<..t0} - {s} = {t1<..<s} \\<union> {s<..t0}", "using that"], ["proof (prove)\nusing this:\n  t1 \\<le> s\n  s \\<le> t0\n\ngoal (1 subgoal):\n 1. {t1<..t0} - {s} = {t1<..<s} \\<union> {s<..t0}", "by auto"], ["proof (state)\nthis:\n  {t1<..t0} - {s} = {t1<..<s} \\<union> {s<..t0}\n\ngoal (1 subgoal):\n 1. s islimpt {t1<..t0}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. s islimpt {t1<..t0}", "using that \\<open>t0 \\<noteq> t1\\<close> *"], ["proof (prove)\nusing this:\n  t1 \\<le> s\n  s \\<le> t0\n  t0 \\<noteq> t1\n  {t1<..t0} - {s} = {t1<..<s} \\<union> {s<..t0}\n\ngoal (1 subgoal):\n 1. s islimpt {t1<..t0}", "by (cases \"t0 = s\") (auto simp: islimpt_in_closure)"], ["proof (state)\nthis:\n  s islimpt {t1<..t0}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>t1 \\<le> ?s; ?s \\<le> t0\\<rbrakk>\n  \\<Longrightarrow> ?s islimpt {t1<..t0}\n\ngoal (1 subgoal):\n 1. s islimpt {t0--<t1}", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>t0 \\<le> ?s; ?s \\<le> t1\\<rbrakk>\n  \\<Longrightarrow> ?s islimpt {t0..<t1}\n  \\<lbrakk>t1 \\<le> ?s; ?s \\<le> t0\\<rbrakk>\n  \\<Longrightarrow> ?s islimpt {t1<..t0}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>t0 \\<le> ?s; ?s \\<le> t1\\<rbrakk>\n  \\<Longrightarrow> ?s islimpt {t0..<t1}\n  \\<lbrakk>t1 \\<le> ?s; ?s \\<le> t0\\<rbrakk>\n  \\<Longrightarrow> ?s islimpt {t1<..t0}\n\ngoal (1 subgoal):\n 1. s islimpt {t0--<t1}", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>t0 \\<le> ?s; ?s \\<le> t1\\<rbrakk>\n  \\<Longrightarrow> ?s islimpt {t0..<t1}\n  \\<lbrakk>t1 \\<le> ?s; ?s \\<le> t0\\<rbrakk>\n  \\<Longrightarrow> ?s islimpt {t1<..t0}\n  t0 \\<noteq> t1\n  s \\<in> {t0--t1}\n\ngoal (1 subgoal):\n 1. s islimpt {t0--<t1}", "by (auto simp: half_open_segment_real closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  s islimpt {t0--<t1}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  mem_half_open_segment_eventually_in_closed_segment:\n  fixes t::real\n  assumes \"t \\<in> {t0--<t1'}\"\n  shows \"\\<forall>\\<^sub>F t1' in at t1' within {t0--<t1'}. t \\<in> {t0--t1'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t1' in at t1' within {t0--<t1'}. t \\<in> {t0--t1'}", "unfolding half_open_segment_real"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t1' in at t1'\n       within (if t0 \\<le> t1' then {t0..<t1'} else {t1'<..t0}).\n       t \\<in> {t0--t1'}", "proof (split if_split, safe)"], ["proof (state)\ngoal (2 subgoals):\n 1. t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t0..<t1'}. t \\<in> {t0--t1'}\n 2. \\<not> t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<in> {t0--t1'}", "assume le: \"t0 \\<le> t1'\""], ["proof (state)\nthis:\n  t0 \\<le> t1'\n\ngoal (2 subgoals):\n 1. t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t0..<t1'}. t \\<in> {t0--t1'}\n 2. \\<not> t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<in> {t0--t1'}", "with assms"], ["proof (chain)\npicking this:\n  t \\<in> {t0--<t1'}\n  t0 \\<le> t1'", "have t: \"t0 \\<le> t\" \"t < t1'\""], ["proof (prove)\nusing this:\n  t \\<in> {t0--<t1'}\n  t0 \\<le> t1'\n\ngoal (1 subgoal):\n 1. t0 \\<le> t &&& t < t1'", "by (auto simp: half_open_segment_real)"], ["proof (state)\nthis:\n  t0 \\<le> t\n  t < t1'\n\ngoal (2 subgoals):\n 1. t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t0..<t1'}. t \\<in> {t0--t1'}\n 2. \\<not> t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<in> {t0--t1'}", "then"], ["proof (chain)\npicking this:\n  t0 \\<le> t\n  t < t1'", "have \"\\<forall>\\<^sub>F t1' in at t1' within {t0..<t1'}. t0 \\<le> t\""], ["proof (prove)\nusing this:\n  t0 \\<le> t\n  t < t1'\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t1' in at t1' within {t0..<t1'}. t0 \\<le> t", "by simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t1' in at t1' within {t0..<t1'}. t0 \\<le> t\n\ngoal (2 subgoals):\n 1. t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t0..<t1'}. t \\<in> {t0--t1'}\n 2. \\<not> t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<in> {t0--t1'}", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t1' in at t1' within {t0..<t1'}. t0 \\<le> t\n\ngoal (2 subgoals):\n 1. t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t0..<t1'}. t \\<in> {t0--t1'}\n 2. \\<not> t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<in> {t0--t1'}", "from tendsto_ident_at \\<open>t < t1'\\<close>"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. x) \\<longlongrightarrow> ?a) (at ?a within ?s)\n  t < t1'", "have \"\\<forall>\\<^sub>F t1' in at t1' within {t0..<t1'}. t < t1'\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. x) \\<longlongrightarrow> ?a) (at ?a within ?s)\n  t < t1'\n\ngoal (1 subgoal):\n 1. eventually ((<) t) (at t1' within {t0..<t1'})", "by (rule order_tendstoD)"], ["proof (state)\nthis:\n  eventually ((<) t) (at t1' within {t0..<t1'})\n\ngoal (2 subgoals):\n 1. t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t0..<t1'}. t \\<in> {t0--t1'}\n 2. \\<not> t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<in> {t0--t1'}", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F t1' in at t1' within {t0..<t1'}. t0 \\<le> t\n  eventually ((<) t) (at t1' within {t0..<t1'})", "show \"\\<forall>\\<^sub>F t1' in at t1' within {t0..<t1'}. t \\<in> {t0--t1'}\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t1' in at t1' within {t0..<t1'}. t0 \\<le> t\n  eventually ((<) t) (at t1' within {t0..<t1'})\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t1' in at t1' within {t0..<t1'}. t \\<in> {t0--t1'}", "by eventually_elim (auto simp add: closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t1' in at t1' within {t0..<t1'}. t \\<in> {t0--t1'}\n\ngoal (1 subgoal):\n 1. \\<not> t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<in> {t0--t1'}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<in> {t0--t1'}", "assume le: \"\\<not> t0 \\<le> t1'\""], ["proof (state)\nthis:\n  \\<not> t0 \\<le> t1'\n\ngoal (1 subgoal):\n 1. \\<not> t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<in> {t0--t1'}", "with assms"], ["proof (chain)\npicking this:\n  t \\<in> {t0--<t1'}\n  \\<not> t0 \\<le> t1'", "have t: \"t \\<le> t0\" \"t1' < t\""], ["proof (prove)\nusing this:\n  t \\<in> {t0--<t1'}\n  \\<not> t0 \\<le> t1'\n\ngoal (1 subgoal):\n 1. t \\<le> t0 &&& t1' < t", "by (auto simp: half_open_segment_real)"], ["proof (state)\nthis:\n  t \\<le> t0\n  t1' < t\n\ngoal (1 subgoal):\n 1. \\<not> t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<in> {t0--t1'}", "then"], ["proof (chain)\npicking this:\n  t \\<le> t0\n  t1' < t", "have \"\\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<le> t0\""], ["proof (prove)\nusing this:\n  t \\<le> t0\n  t1' < t\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<le> t0", "by simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<le> t0\n\ngoal (1 subgoal):\n 1. \\<not> t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<in> {t0--t1'}", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<le> t0\n\ngoal (1 subgoal):\n 1. \\<not> t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<in> {t0--t1'}", "from tendsto_ident_at \\<open>t1' < t\\<close>"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. x) \\<longlongrightarrow> ?a) (at ?a within ?s)\n  t1' < t", "have \"\\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t1' < t\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. x) \\<longlongrightarrow> ?a) (at ?a within ?s)\n  t1' < t\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t1' < t", "by (rule order_tendstoD)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t1' < t\n\ngoal (1 subgoal):\n 1. \\<not> t0 \\<le> t1' \\<Longrightarrow>\n    \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<in> {t0--t1'}", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<le> t0\n  \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t1' < t", "show \"\\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<in> {t0--t1'}\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<le> t0\n  \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t1' < t\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<in> {t0--t1'}", "by eventually_elim (auto simp add: closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t1' in at t1' within {t1'<..t0}. t \\<in> {t0--t1'}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma closed_segment_half_open_segment_subsetI:\n  fixes x::real shows \"x \\<in> {t0--<t1} \\<Longrightarrow> {t0--x} \\<subseteq> {t0--<t1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {t0--<t1} \\<Longrightarrow> {t0--x} \\<subseteq> {t0--<t1}", "by (auto simp: half_open_segment_real closed_segment_eq_real_ivl split: if_split_asm)"], ["", "lemma dist_component_le:\n  fixes x y::\"'a::euclidean_space\"\n  assumes \"i \\<in> Basis\"\n  shows \"dist (x \\<bullet> i) (y \\<bullet> i) \\<le> dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (x \\<bullet> i) (y \\<bullet> i) \\<le> dist x y", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> Basis\n\ngoal (1 subgoal):\n 1. dist (x \\<bullet> i) (y \\<bullet> i) \\<le> dist x y", "by (auto simp: euclidean_dist_l2[of x y] intro: member_le_L2_set)"], ["", "lemma sum_inner_Basis_one: \"i \\<in> Basis \\<Longrightarrow> (\\<Sum>x\\<in>Basis. x \\<bullet> i) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> Basis \\<Longrightarrow> (\\<Sum>x\\<in>Basis. x \\<bullet> i) = 1", "by (subst sum.mono_neutral_right[where S=\"{i}\"])\n    (auto simp: inner_not_same_Basis)"], ["", "lemma cball_in_cbox:\n  fixes y::\"'a::euclidean_space\"\n  shows \"cball y r \\<subseteq> cbox (y - r *\\<^sub>R One) (y + r *\\<^sub>R One)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cball y r \\<subseteq> cbox (y - r *\\<^sub>R One) (y + r *\\<^sub>R One)", "unfolding scaleR_sum_right interval_cbox cbox_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cball y r\n    \\<subseteq> {x. \\<forall>i\\<in>Basis.\n                       (y - sum ((*\\<^sub>R) r) Basis) \\<bullet> i\n                       \\<le> x \\<bullet> i \\<and>\n                       x \\<bullet> i\n                       \\<le> (y + sum ((*\\<^sub>R) r) Basis) \\<bullet> i}", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x i.\n       \\<lbrakk>x \\<in> cball y r; i \\<in> Basis\\<rbrakk>\n       \\<Longrightarrow> (y - sum ((*\\<^sub>R) r) Basis) \\<bullet> i\n                         \\<le> x \\<bullet> i\n 2. \\<And>x i.\n       \\<lbrakk>x \\<in> cball y r; i \\<in> Basis\\<rbrakk>\n       \\<Longrightarrow> x \\<bullet> i\n                         \\<le> (y + sum ((*\\<^sub>R) r) Basis) \\<bullet> i", "fix x i::'a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x i.\n       \\<lbrakk>x \\<in> cball y r; i \\<in> Basis\\<rbrakk>\n       \\<Longrightarrow> (y - sum ((*\\<^sub>R) r) Basis) \\<bullet> i\n                         \\<le> x \\<bullet> i\n 2. \\<And>x i.\n       \\<lbrakk>x \\<in> cball y r; i \\<in> Basis\\<rbrakk>\n       \\<Longrightarrow> x \\<bullet> i\n                         \\<le> (y + sum ((*\\<^sub>R) r) Basis) \\<bullet> i", "assume \"i \\<in> Basis\" \"x \\<in> cball y r\""], ["proof (state)\nthis:\n  i \\<in> Basis\n  x \\<in> cball y r\n\ngoal (2 subgoals):\n 1. \\<And>x i.\n       \\<lbrakk>x \\<in> cball y r; i \\<in> Basis\\<rbrakk>\n       \\<Longrightarrow> (y - sum ((*\\<^sub>R) r) Basis) \\<bullet> i\n                         \\<le> x \\<bullet> i\n 2. \\<And>x i.\n       \\<lbrakk>x \\<in> cball y r; i \\<in> Basis\\<rbrakk>\n       \\<Longrightarrow> x \\<bullet> i\n                         \\<le> (y + sum ((*\\<^sub>R) r) Basis) \\<bullet> i", "with dist_component_le[OF \\<open>i \\<in> Basis\\<close>, of y x]"], ["proof (chain)\npicking this:\n  dist (y \\<bullet> i) (x \\<bullet> i) \\<le> dist y x\n  i \\<in> Basis\n  x \\<in> cball y r", "have \"dist (y \\<bullet> i) (x \\<bullet> i) \\<le> r\""], ["proof (prove)\nusing this:\n  dist (y \\<bullet> i) (x \\<bullet> i) \\<le> dist y x\n  i \\<in> Basis\n  x \\<in> cball y r\n\ngoal (1 subgoal):\n 1. dist (y \\<bullet> i) (x \\<bullet> i) \\<le> r", "by (simp add: mem_cball)"], ["proof (state)\nthis:\n  dist (y \\<bullet> i) (x \\<bullet> i) \\<le> r\n\ngoal (2 subgoals):\n 1. \\<And>x i.\n       \\<lbrakk>x \\<in> cball y r; i \\<in> Basis\\<rbrakk>\n       \\<Longrightarrow> (y - sum ((*\\<^sub>R) r) Basis) \\<bullet> i\n                         \\<le> x \\<bullet> i\n 2. \\<And>x i.\n       \\<lbrakk>x \\<in> cball y r; i \\<in> Basis\\<rbrakk>\n       \\<Longrightarrow> x \\<bullet> i\n                         \\<le> (y + sum ((*\\<^sub>R) r) Basis) \\<bullet> i", "thus \"(y - sum ((*\\<^sub>R) r) Basis) \\<bullet> i \\<le> x \\<bullet> i\"\n    \"x \\<bullet> i \\<le> (y + sum ((*\\<^sub>R) r) Basis) \\<bullet> i\""], ["proof (prove)\nusing this:\n  dist (y \\<bullet> i) (x \\<bullet> i) \\<le> r\n\ngoal (1 subgoal):\n 1. (y - sum ((*\\<^sub>R) r) Basis) \\<bullet> i \\<le> x \\<bullet> i &&&\n    x \\<bullet> i \\<le> (y + sum ((*\\<^sub>R) r) Basis) \\<bullet> i", "by (auto simp add: inner_diff_left inner_add_left inner_sum_left\n      sum_distrib_left[symmetric] sum_inner_Basis_one \\<open>i\\<in>Basis\\<close> dist_real_def)"], ["proof (state)\nthis:\n  (y - sum ((*\\<^sub>R) r) Basis) \\<bullet> i \\<le> x \\<bullet> i\n  x \\<bullet> i \\<le> (y + sum ((*\\<^sub>R) r) Basis) \\<bullet> i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma centered_cbox_in_cball:\n  shows \"cbox (- r *\\<^sub>R One) (r *\\<^sub>R One::'a::euclidean_space) \\<subseteq>\n    cball 0 (sqrt(DIM('a)) * r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cbox (- r *\\<^sub>R One) (r *\\<^sub>R One)\n    \\<subseteq> cball (0::'a) (sqrt (real DIM('a)) * r)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> cbox (- r *\\<^sub>R One) (r *\\<^sub>R One) \\<Longrightarrow>\n       x \\<in> cball (0::'a) (sqrt (real DIM('a)) * r)", "fix x::'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> cbox (- r *\\<^sub>R One) (r *\\<^sub>R One) \\<Longrightarrow>\n       x \\<in> cball (0::'a) (sqrt (real DIM('a)) * r)", "have \"norm x \\<le> sqrt(DIM('a)) * infnorm x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm x \\<le> sqrt (real DIM('a)) * infnorm x", "by (rule norm_le_infnorm)"], ["proof (state)\nthis:\n  norm x \\<le> sqrt (real DIM('a)) * infnorm x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> cbox (- r *\\<^sub>R One) (r *\\<^sub>R One) \\<Longrightarrow>\n       x \\<in> cball (0::'a) (sqrt (real DIM('a)) * r)", "also"], ["proof (state)\nthis:\n  norm x \\<le> sqrt (real DIM('a)) * infnorm x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> cbox (- r *\\<^sub>R One) (r *\\<^sub>R One) \\<Longrightarrow>\n       x \\<in> cball (0::'a) (sqrt (real DIM('a)) * r)", "assume \"x \\<in> cbox (- r *\\<^sub>R One) (r *\\<^sub>R One)\""], ["proof (state)\nthis:\n  x \\<in> cbox (- r *\\<^sub>R One) (r *\\<^sub>R One)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> cbox (- r *\\<^sub>R One) (r *\\<^sub>R One) \\<Longrightarrow>\n       x \\<in> cball (0::'a) (sqrt (real DIM('a)) * r)", "hence \"infnorm x \\<le> r\""], ["proof (prove)\nusing this:\n  x \\<in> cbox (- r *\\<^sub>R One) (r *\\<^sub>R One)\n\ngoal (1 subgoal):\n 1. infnorm x \\<le> r", "by (auto simp: infnorm_def mem_box intro!: cSup_least)"], ["proof (state)\nthis:\n  infnorm x \\<le> r\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> cbox (- r *\\<^sub>R One) (r *\\<^sub>R One) \\<Longrightarrow>\n       x \\<in> cball (0::'a) (sqrt (real DIM('a)) * r)", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      sqrt (real DIM('a)) * x\n      \\<le> sqrt (real DIM('a)) * y) \\<Longrightarrow>\n  norm x \\<le> sqrt (real DIM('a)) * r", "show \"x \\<in> cball 0 (sqrt(DIM('a)) * r)\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      sqrt (real DIM('a)) * x\n      \\<le> sqrt (real DIM('a)) * y) \\<Longrightarrow>\n  norm x \\<le> sqrt (real DIM('a)) * r\n\ngoal (1 subgoal):\n 1. x \\<in> cball (0::'a) (sqrt (real DIM('a)) * r)", "by (auto simp: dist_norm mult_left_mono mem_cball)"], ["proof (state)\nthis:\n  x \\<in> cball (0::'a) (sqrt (real DIM('a)) * r)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Solutions of IVPs \\label{sec:solutions}\\<close>"], ["", "definition\n  solves_ode :: \"(real \\<Rightarrow> 'a::real_normed_vector) \\<Rightarrow> (real \\<Rightarrow> 'a \\<Rightarrow> 'a) \\<Rightarrow> real set \\<Rightarrow> 'a set \\<Rightarrow> bool\"\n  (infix \"(solves'_ode)\" 50)\nwhere\n  \"(y solves_ode f) T X \\<longleftrightarrow> (y has_vderiv_on (\\<lambda>t. f t (y t))) T \\<and> y \\<in> T \\<rightarrow> X\""], ["", "lemma solves_odeI:\n  assumes solves_ode_vderivD: \"(y has_vderiv_on (\\<lambda>t. f t (y t))) T\"\n    and solves_ode_domainD: \"\\<And>t. t \\<in> T \\<Longrightarrow> y t \\<in> X\"\n  shows \"(y solves_ode f) T X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y solves_ode f) T X", "using assms"], ["proof (prove)\nusing this:\n  (y has_vderiv_on (\\<lambda>t. f t (y t))) T\n  ?t \\<in> T \\<Longrightarrow> y ?t \\<in> X\n\ngoal (1 subgoal):\n 1. (y solves_ode f) T X", "by (auto simp: solves_ode_def)"], ["", "lemma solves_odeD:\n  assumes \"(y solves_ode f) T X\"\n  shows solves_ode_vderivD: \"(y has_vderiv_on (\\<lambda>t. f t (y t))) T\"\n    and solves_ode_domainD: \"\\<And>t. t \\<in> T \\<Longrightarrow> y t \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y has_vderiv_on (\\<lambda>t. f t (y t))) T &&&\n    (\\<And>t. t \\<in> T \\<Longrightarrow> y t \\<in> X)", "using assms"], ["proof (prove)\nusing this:\n  (y solves_ode f) T X\n\ngoal (1 subgoal):\n 1. (y has_vderiv_on (\\<lambda>t. f t (y t))) T &&&\n    (\\<And>t. t \\<in> T \\<Longrightarrow> y t \\<in> X)", "by (auto simp: solves_ode_def)"], ["", "lemma solves_ode_continuous_on: \"(y solves_ode f) T X \\<Longrightarrow> continuous_on T y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y solves_ode f) T X \\<Longrightarrow> continuous_on T y", "by (auto intro!: vderiv_on_continuous_on simp: solves_ode_def)"], ["", "lemma solves_ode_congI:\n  assumes \"(x solves_ode f) T X\"\n  assumes \"\\<And>t. t \\<in> T \\<Longrightarrow> x t = y t\"\n  assumes \"\\<And>t. t \\<in> T \\<Longrightarrow> f t (x t) = g t (x t)\"\n  assumes \"T = S\" \"X = Y\"\n  shows \"(y solves_ode g) S Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y solves_ode g) S Y", "using assms"], ["proof (prove)\nusing this:\n  (x solves_ode f) T X\n  ?t \\<in> T \\<Longrightarrow> x ?t = y ?t\n  ?t \\<in> T \\<Longrightarrow> f ?t (x ?t) = g ?t (x ?t)\n  T = S\n  X = Y\n\ngoal (1 subgoal):\n 1. (y solves_ode g) S Y", "by (auto simp: solves_ode_def Pi_iff)"], ["", "lemma solves_ode_cong[cong]:\n  assumes \"\\<And>t. t \\<in> T \\<Longrightarrow> x t = y t\"\n  assumes \"\\<And>t. t \\<in> T \\<Longrightarrow> f t (x t) = g t (x t)\"\n  assumes \"T = S\" \"X = Y\"\n  shows \"(x solves_ode f) T X \\<longleftrightarrow> (y solves_ode g) S Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x solves_ode f) T X = (y solves_ode g) S Y", "using assms"], ["proof (prove)\nusing this:\n  ?t \\<in> T \\<Longrightarrow> x ?t = y ?t\n  ?t \\<in> T \\<Longrightarrow> f ?t (x ?t) = g ?t (x ?t)\n  T = S\n  X = Y\n\ngoal (1 subgoal):\n 1. (x solves_ode f) T X = (y solves_ode g) S Y", "by (auto simp: solves_ode_def Pi_iff)"], ["", "lemma solves_ode_on_subset:\n  assumes \"(x solves_ode f) S Y\"\n  assumes \"T \\<subseteq> S\" \"Y \\<subseteq> X\"\n  shows \"(x solves_ode f) T X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x solves_ode f) T X", "using assms"], ["proof (prove)\nusing this:\n  (x solves_ode f) S Y\n  T \\<subseteq> S\n  Y \\<subseteq> X\n\ngoal (1 subgoal):\n 1. (x solves_ode f) T X", "by (auto simp: solves_ode_def has_vderiv_on_subset)"], ["", "lemma preflect_solution:\n  assumes \"t0 \\<in> T\"\n  assumes sol: \"((\\<lambda>t. x (preflect t0 t)) solves_ode (\\<lambda>t x. - f (preflect t0 t) x)) (preflect t0 ` T) X\"\n  shows \"(x solves_ode f) T X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x solves_ode f) T X", "proof (rule solves_odeI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (x has_vderiv_on (\\<lambda>t. f t (x t))) T\n 2. \\<And>t. t \\<in> T \\<Longrightarrow> x t \\<in> X", "from solves_odeD[OF sol]"], ["proof (chain)\npicking this:\n  ((\\<lambda>t. x (preflect t0 t)) has_vderiv_on\n   (\\<lambda>t. - f (preflect t0 t) (x (preflect t0 t))))\n   (preflect t0 ` T)\n  ?t \\<in> preflect t0 ` T \\<Longrightarrow> x (preflect t0 ?t) \\<in> X", "have xm_deriv: \"(x o preflect t0 has_vderiv_on (\\<lambda>t. - f (preflect t0 t) (x (preflect t0 t)))) (preflect t0 ` T)\"\n    and xm_mem: \"t \\<in> preflect t0 ` T \\<Longrightarrow> x (preflect t0 t) \\<in> X\" for t"], ["proof (prove)\nusing this:\n  ((\\<lambda>t. x (preflect t0 t)) has_vderiv_on\n   (\\<lambda>t. - f (preflect t0 t) (x (preflect t0 t))))\n   (preflect t0 ` T)\n  ?t \\<in> preflect t0 ` T \\<Longrightarrow> x (preflect t0 ?t) \\<in> X\n\ngoal (1 subgoal):\n 1. (x \\<circ> preflect t0 has_vderiv_on\n     (\\<lambda>t. - f (preflect t0 t) (x (preflect t0 t))))\n     (preflect t0 ` T) &&&\n    (t \\<in> preflect t0 ` T \\<Longrightarrow> x (preflect t0 t) \\<in> X)", "by simp_all"], ["proof (state)\nthis:\n  (x \\<circ> preflect t0 has_vderiv_on\n   (\\<lambda>t. - f (preflect t0 t) (x (preflect t0 t))))\n   (preflect t0 ` T)\n  ?t \\<in> preflect t0 ` T \\<Longrightarrow> x (preflect t0 ?t) \\<in> X\n\ngoal (2 subgoals):\n 1. (x has_vderiv_on (\\<lambda>t. f t (x t))) T\n 2. \\<And>t. t \\<in> T \\<Longrightarrow> x t \\<in> X", "have \"(x o preflect t0 o preflect t0 has_vderiv_on (\\<lambda>t. f t (x t))) T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<circ> preflect t0 \\<circ> preflect t0 has_vderiv_on\n     (\\<lambda>t. f t (x t)))\n     T", "apply (rule has_vderiv_on_eq_rhs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (x \\<circ> preflect t0 \\<circ> preflect t0 has_vderiv_on ?g') T\n 2. \\<And>xa. xa \\<in> T \\<Longrightarrow> ?g' xa = f xa (x xa)", "apply (rule has_vderiv_on_compose)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (x \\<circ> preflect t0 has_vderiv_on ?f'3) (preflect t0 ` T)\n 2. (preflect t0 has_vderiv_on ?g'3) T\n 3. \\<And>xa.\n       xa \\<in> T \\<Longrightarrow>\n       ?g'3 xa *\\<^sub>R ?f'3 (preflect t0 xa) = f xa (x xa)", "apply (rule xm_deriv)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (preflect t0 has_vderiv_on ?g'3) T\n 2. \\<And>xa.\n       xa \\<in> T \\<Longrightarrow>\n       ?g'3 xa *\\<^sub>R\n       - f (preflect t0 (preflect t0 xa))\n          (x (preflect t0 (preflect t0 xa))) =\n       f xa (x xa)", "apply (auto simp: preflect_def intro!: derivative_intros)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (x \\<circ> preflect t0 \\<circ> preflect t0 has_vderiv_on\n   (\\<lambda>t. f t (x t)))\n   T\n\ngoal (2 subgoals):\n 1. (x has_vderiv_on (\\<lambda>t. f t (x t))) T\n 2. \\<And>t. t \\<in> T \\<Longrightarrow> x t \\<in> X", "then"], ["proof (chain)\npicking this:\n  (x \\<circ> preflect t0 \\<circ> preflect t0 has_vderiv_on\n   (\\<lambda>t. f t (x t)))\n   T", "show \"(x has_vderiv_on (\\<lambda>t. f t (x t))) T\""], ["proof (prove)\nusing this:\n  (x \\<circ> preflect t0 \\<circ> preflect t0 has_vderiv_on\n   (\\<lambda>t. f t (x t)))\n   T\n\ngoal (1 subgoal):\n 1. (x has_vderiv_on (\\<lambda>t. f t (x t))) T", "by (simp add: preflect_def)"], ["proof (state)\nthis:\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) T\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> T \\<Longrightarrow> x t \\<in> X", "show \"x t \\<in> X\" if \"t \\<in> T\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. x t \\<in> X", "using that xm_mem[of \"preflect t0 t\"]"], ["proof (prove)\nusing this:\n  t \\<in> T\n  preflect t0 t \\<in> preflect t0 ` T \\<Longrightarrow>\n  x (preflect t0 (preflect t0 t)) \\<in> X\n\ngoal (1 subgoal):\n 1. x t \\<in> X", "by (auto simp: preflect_def)"], ["proof (state)\nthis:\n  ?t \\<in> T \\<Longrightarrow> x ?t \\<in> X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma solution_preflect:\n  assumes \"t0 \\<in> T\"\n  assumes sol: \"(x solves_ode f) T X\"\n  shows \"((\\<lambda>t. x (preflect t0 t)) solves_ode (\\<lambda>t x. - f (preflect t0 t) x)) (preflect t0 ` T) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. x (preflect t0 t)) solves_ode\n     (\\<lambda>t x. - f (preflect t0 t) x))\n     (preflect t0 ` T) X", "using sol \\<open>t0 \\<in> T\\<close>"], ["proof (prove)\nusing this:\n  (x solves_ode f) T X\n  t0 \\<in> T\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. x (preflect t0 t)) solves_ode\n     (\\<lambda>t x. - f (preflect t0 t) x))\n     (preflect t0 ` T) X", "by (simp_all add: preflect_def image_image preflect_solution[of t0])"], ["", "lemma solution_eq_preflect_solution:\n  assumes \"t0 \\<in> T\"\n  shows \"(x solves_ode f) T X \\<longleftrightarrow> ((\\<lambda>t. x (preflect t0 t)) solves_ode (\\<lambda>t x. - f (preflect t0 t) x)) (preflect t0 ` T) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x solves_ode f) T X =\n    ((\\<lambda>t. x (preflect t0 t)) solves_ode\n     (\\<lambda>t x. - f (preflect t0 t) x))\n     (preflect t0 ` T) X", "using solution_preflect[OF \\<open>t0 \\<in> T\\<close>] preflect_solution[OF \\<open>t0 \\<in> T\\<close>]"], ["proof (prove)\nusing this:\n  (?x solves_ode ?f) T ?X \\<Longrightarrow>\n  ((\\<lambda>t. ?x (preflect t0 t)) solves_ode\n   (\\<lambda>t x. - ?f (preflect t0 t) x))\n   (preflect t0 ` T) ?X\n  ((\\<lambda>t. ?x (preflect t0 t)) solves_ode\n   (\\<lambda>t x. - ?f (preflect t0 t) x))\n   (preflect t0 ` T) ?X \\<Longrightarrow>\n  (?x solves_ode ?f) T ?X\n\ngoal (1 subgoal):\n 1. (x solves_ode f) T X =\n    ((\\<lambda>t. x (preflect t0 t)) solves_ode\n     (\\<lambda>t x. - f (preflect t0 t) x))\n     (preflect t0 ` T) X", "by blast"], ["", "lemma shift_autonomous_solution:\n  assumes sol: \"(x solves_ode f) T X\"\n  assumes auto: \"\\<And>s t. s \\<in> T \\<Longrightarrow> f s (x s) = f t (x s)\"\n  shows \"((\\<lambda>t. x (t + t0)) solves_ode f) ((\\<lambda>t. t - t0) ` T) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. x (t + t0)) solves_ode f) ((\\<lambda>t. t - t0) ` T) X", "using solves_odeD[OF sol]"], ["proof (prove)\nusing this:\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) T\n  ?t \\<in> T \\<Longrightarrow> x ?t \\<in> X\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. x (t + t0)) solves_ode f) ((\\<lambda>t. t - t0) ` T) X", "apply (intro solves_odeI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(x has_vderiv_on (\\<lambda>t. f t (x t))) T;\n     \\<And>t. t \\<in> T \\<Longrightarrow> x t \\<in> X\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>t. x (t + t0)) has_vderiv_on\n                       (\\<lambda>t. f t (x (t + t0))))\n                       ((\\<lambda>t. t - t0) ` T)\n 2. \\<And>t.\n       \\<lbrakk>(x has_vderiv_on (\\<lambda>t. f t (x t))) T;\n        \\<And>t. t \\<in> T \\<Longrightarrow> x t \\<in> X;\n        t \\<in> (\\<lambda>t. t - t0) ` T\\<rbrakk>\n       \\<Longrightarrow> x (t + t0) \\<in> X", "apply (rule has_vderiv_on_compose'[of x, THEN has_vderiv_on_eq_rhs])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>(x has_vderiv_on (\\<lambda>t. f t (x t))) T;\n     \\<And>t. t \\<in> T \\<Longrightarrow> x t \\<in> X\\<rbrakk>\n    \\<Longrightarrow> (x has_vderiv_on ?f'6)\n                       ((\\<lambda>x. x + t0) ` (\\<lambda>t. t - t0) ` T)\n 2. \\<lbrakk>(x has_vderiv_on (\\<lambda>t. f t (x t))) T;\n     \\<And>t. t \\<in> T \\<Longrightarrow> x t \\<in> X\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>x. x + t0) has_vderiv_on ?g'6)\n                       ((\\<lambda>t. t - t0) ` T)\n 3. \\<And>t.\n       \\<lbrakk>(x has_vderiv_on (\\<lambda>t. f t (x t))) T;\n        \\<And>t. t \\<in> T \\<Longrightarrow> x t \\<in> X;\n        t \\<in> (\\<lambda>t. t - t0) ` T\\<rbrakk>\n       \\<Longrightarrow> ?g'6 t *\\<^sub>R ?f'6 (t + t0) = f t (x (t + t0))\n 4. \\<And>t.\n       \\<lbrakk>(x has_vderiv_on (\\<lambda>t. f t (x t))) T;\n        \\<And>t. t \\<in> T \\<Longrightarrow> x t \\<in> X;\n        t \\<in> (\\<lambda>t. t - t0) ` T\\<rbrakk>\n       \\<Longrightarrow> x (t + t0) \\<in> X", "apply (auto simp: image_image intro!: auto derivative_intros)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma solves_ode_singleton: \"y t0 \\<in> X \\<Longrightarrow> (y solves_ode f) {t0} X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y t0 \\<in> X \\<Longrightarrow> (y solves_ode f) {t0} X", "by (auto intro!: solves_odeI has_vderiv_on_singleton)"], ["", "subsubsection\\<open>Connecting solutions\\<close>"], ["", "text\\<open>\\label{sec:combining-solutions}\\<close>"], ["", "lemma connection_solves_ode:\n  assumes x: \"(x solves_ode f) T X\"\n  assumes y: \"(y solves_ode g) S Y\"\n  assumes conn_T: \"closure S \\<inter> closure T \\<subseteq> T\"\n  assumes conn_S: \"closure S \\<inter> closure T \\<subseteq> S\"\n  assumes conn_x: \"\\<And>t. t \\<in> closure S \\<Longrightarrow> t \\<in> closure T \\<Longrightarrow> x t = y t\"\n  assumes conn_f: \"\\<And>t. t \\<in> closure S \\<Longrightarrow> t \\<in> closure T \\<Longrightarrow> f t (y t) = g t (y t)\"\n  shows \"((\\<lambda>t. if t \\<in> T then x t else y t) solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) (T \\<union> S) (X \\<union> Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. if t \\<in> T then x t else y t) solves_ode\n     (\\<lambda>t. if t \\<in> T then f t else g t))\n     (T \\<union> S) (X \\<union> Y)", "proof (rule solves_odeI)"], ["proof (state)\ngoal (2 subgoals):\n 1. ((\\<lambda>t. if t \\<in> T then x t else y t) has_vderiv_on\n     (\\<lambda>t.\n         (if t \\<in> T then f t else g t) (if t \\<in> T then x t else y t)))\n     (T \\<union> S)\n 2. \\<And>t.\n       t \\<in> T \\<union> S \\<Longrightarrow>\n       (if t \\<in> T then x t else y t) \\<in> X \\<union> Y", "from solves_odeD(2)[OF x] solves_odeD(2)[OF y]"], ["proof (chain)\npicking this:\n  ?t \\<in> T \\<Longrightarrow> x ?t \\<in> X\n  ?t \\<in> S \\<Longrightarrow> y ?t \\<in> Y", "show \"t \\<in> T \\<union> S \\<Longrightarrow> (if t \\<in> T then x t else y t) \\<in> X \\<union> Y\" for t"], ["proof (prove)\nusing this:\n  ?t \\<in> T \\<Longrightarrow> x ?t \\<in> X\n  ?t \\<in> S \\<Longrightarrow> y ?t \\<in> Y\n\ngoal (1 subgoal):\n 1. t \\<in> T \\<union> S \\<Longrightarrow>\n    (if t \\<in> T then x t else y t) \\<in> X \\<union> Y", "by auto"], ["proof (state)\nthis:\n  ?t \\<in> T \\<union> S \\<Longrightarrow>\n  (if ?t \\<in> T then x ?t else y ?t) \\<in> X \\<union> Y\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. if t \\<in> T then x t else y t) has_vderiv_on\n     (\\<lambda>t.\n         (if t \\<in> T then f t else g t) (if t \\<in> T then x t else y t)))\n     (T \\<union> S)", "show \"((\\<lambda>t. if t \\<in> T then x t else y t) has_vderiv_on (\\<lambda>t. (if t \\<in> T then f t else g t) (if t \\<in> T then x t else y t))) (T \\<union> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. if t \\<in> T then x t else y t) has_vderiv_on\n     (\\<lambda>t.\n         (if t \\<in> T then f t else g t) (if t \\<in> T then x t else y t)))\n     (T \\<union> S)", "apply (rule has_vderiv_on_If[OF refl, THEN has_vderiv_on_eq_rhs])"], ["proof (prove)\ngoal (5 subgoals):\n 1. (x has_vderiv_on ?f'1) (T \\<union> closure S \\<inter> closure T)\n 2. (y has_vderiv_on ?g'1) (S \\<union> closure S \\<inter> closure T)\n 3. \\<And>xa.\n       \\<lbrakk>xa \\<in> closure S; xa \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> x xa = y xa\n 4. \\<And>x.\n       \\<lbrakk>x \\<in> closure S; x \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> ?f'1 x = ?g'1 x\n 5. \\<And>xa.\n       xa \\<in> T \\<union> S \\<Longrightarrow>\n       (if xa \\<in> T then ?f'1 xa else ?g'1 xa) =\n       (if xa \\<in> T then f xa else g xa)\n        (if xa \\<in> T then x xa else y xa)", "unfolding Un_absorb2[OF conn_T] Un_absorb2[OF conn_S]"], ["proof (prove)\ngoal (5 subgoals):\n 1. (x has_vderiv_on ?f'1) T\n 2. (y has_vderiv_on ?g'1) S\n 3. \\<And>xa.\n       \\<lbrakk>xa \\<in> closure S; xa \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> x xa = y xa\n 4. \\<And>x.\n       \\<lbrakk>x \\<in> closure S; x \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> ?f'1 x = ?g'1 x\n 5. \\<And>xa.\n       xa \\<in> T \\<union> S \\<Longrightarrow>\n       (if xa \\<in> T then ?f'1 xa else ?g'1 xa) =\n       (if xa \\<in> T then f xa else g xa)\n        (if xa \\<in> T then x xa else y xa)", "apply (rule solves_odeD(1)[OF x])"], ["proof (prove)\ngoal (4 subgoals):\n 1. (y has_vderiv_on ?g'1) S\n 2. \\<And>xa.\n       \\<lbrakk>xa \\<in> closure S; xa \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> x xa = y xa\n 3. \\<And>xa.\n       \\<lbrakk>xa \\<in> closure S; xa \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> f xa (x xa) = ?g'1 xa\n 4. \\<And>xa.\n       xa \\<in> T \\<union> S \\<Longrightarrow>\n       (if xa \\<in> T then f xa (x xa) else ?g'1 xa) =\n       (if xa \\<in> T then f xa else g xa)\n        (if xa \\<in> T then x xa else y xa)", "apply (rule solves_odeD(1)[OF y])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> closure S; xa \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> x xa = y xa\n 2. \\<And>xa.\n       \\<lbrakk>xa \\<in> closure S; xa \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> f xa (x xa) = g xa (y xa)\n 3. \\<And>xa.\n       xa \\<in> T \\<union> S \\<Longrightarrow>\n       (if xa \\<in> T then f xa (x xa) else g xa (y xa)) =\n       (if xa \\<in> T then f xa else g xa)\n        (if xa \\<in> T then x xa else y xa)", "apply (simp_all add: conn_T conn_S Un_absorb2 conn_x conn_f)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ((\\<lambda>t. if t \\<in> T then x t else y t) has_vderiv_on\n   (\\<lambda>t.\n       (if t \\<in> T then f t else g t) (if t \\<in> T then x t else y t)))\n   (T \\<union> S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  solves_ode_subset_range:\n  assumes x: \"(x solves_ode f) T X\"\n  assumes s: \"x ` T \\<subseteq> Y\"\n  shows \"(x solves_ode f) T Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x solves_ode f) T Y", "using assms"], ["proof (prove)\nusing this:\n  (x solves_ode f) T X\n  x ` T \\<subseteq> Y\n\ngoal (1 subgoal):\n 1. (x solves_ode f) T Y", "by (auto intro!: solves_odeI dest!: solves_odeD)"], ["", "subsection \\<open>unique solution with initial value\\<close>"], ["", "definition\n  usolves_ode_from :: \"(real \\<Rightarrow> 'a::real_normed_vector) \\<Rightarrow> (real \\<Rightarrow> 'a \\<Rightarrow> 'a) \\<Rightarrow> real \\<Rightarrow> real set \\<Rightarrow> 'a set \\<Rightarrow> bool\"\n  (\"((_) usolves'_ode (_) from (_))\" [10, 10, 10] 10)\n  \\<comment> \\<open>TODO: no idea about mixfix and precedences, check this!\\<close>\nwhere\n  \"(y usolves_ode f from t0) T X \\<longleftrightarrow> (y solves_ode f) T X \\<and> t0 \\<in> T \\<and> is_interval T \\<and>\n    (\\<forall>z T'. t0 \\<in> T' \\<and> is_interval T' \\<and> T' \\<subseteq> T \\<and> (z solves_ode f) T' X \\<longrightarrow> z t0 = y t0 \\<longrightarrow> (\\<forall>t \\<in> T'. z t = y t))\""], ["", "text \\<open>uniqueness of solution can depend on domain \\<open>X\\<close>:\\<close>"], ["", "lemma\n  \"((\\<lambda>_. 0::real) usolves_ode (\\<lambda>_. sqrt) from 0) {0..} {0}\"\n    \"((\\<lambda>t. t\\<^sup>2 / 4) solves_ode (\\<lambda>_. sqrt)) {0..} {0..}\"\n    \"(\\<lambda>t. t\\<^sup>2 / 4) 0 = (\\<lambda>_. 0::real) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. 0) usolves_ode (\\<lambda>_. sqrt) from 0) {0..} {0} &&&\n    ((\\<lambda>t. t\\<^sup>2 / 4) solves_ode (\\<lambda>_. sqrt)) {0..}\n     {0..} &&&\n    0\\<^sup>2 / 4 = 0", "by (auto intro!: derivative_eq_intros\n    simp: has_vderiv_on_def has_vector_derivative_def usolves_ode_from_def solves_ode_def\n      is_interval_ci real_sqrt_divide)"], ["", "text \\<open>TODO: show that if solution stays in interior, then domain can be enlarged! (?)\\<close>"], ["", "lemma usolves_odeD:\n  assumes \"(y usolves_ode f from t0) T X\"\n  shows \"(y solves_ode f) T X\"\n    and \"t0 \\<in> T\"\n    and \"is_interval T\"\n    and \"\\<And>z T' t. t0 \\<in> T' \\<Longrightarrow> is_interval T' \\<Longrightarrow> T' \\<subseteq> T \\<Longrightarrow>(z solves_ode f) T' X \\<Longrightarrow> z t0 = y t0 \\<Longrightarrow> t \\<in> T' \\<Longrightarrow> z t = y t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((y solves_ode f) T X &&& t0 \\<in> T) &&&\n    is_interval T &&&\n    (\\<And>z T' t.\n        \\<lbrakk>t0 \\<in> T'; is_interval T'; T' \\<subseteq> T;\n         (z solves_ode f) T' X; z t0 = y t0; t \\<in> T'\\<rbrakk>\n        \\<Longrightarrow> z t = y t)", "using assms"], ["proof (prove)\nusing this:\n  (y usolves_ode f from t0) T X\n\ngoal (1 subgoal):\n 1. ((y solves_ode f) T X &&& t0 \\<in> T) &&&\n    is_interval T &&&\n    (\\<And>z T' t.\n        \\<lbrakk>t0 \\<in> T'; is_interval T'; T' \\<subseteq> T;\n         (z solves_ode f) T' X; z t0 = y t0; t \\<in> T'\\<rbrakk>\n        \\<Longrightarrow> z t = y t)", "unfolding usolves_ode_from_def"], ["proof (prove)\nusing this:\n  (y solves_ode f) T X \\<and>\n  t0 \\<in> T \\<and>\n  is_interval T \\<and>\n  (\\<forall>z T'.\n      t0 \\<in> T' \\<and>\n      is_interval T' \\<and>\n      T' \\<subseteq> T \\<and> (z solves_ode f) T' X \\<longrightarrow>\n      z t0 = y t0 \\<longrightarrow> (\\<forall>t\\<in>T'. z t = y t))\n\ngoal (1 subgoal):\n 1. ((y solves_ode f) T X &&& t0 \\<in> T) &&&\n    is_interval T &&&\n    (\\<And>z T' t.\n        \\<lbrakk>t0 \\<in> T'; is_interval T'; T' \\<subseteq> T;\n         (z solves_ode f) T' X; z t0 = y t0; t \\<in> T'\\<rbrakk>\n        \\<Longrightarrow> z t = y t)", "by blast+"], ["", "lemma usolves_ode_rawI:\n  assumes \"(y solves_ode f) T X\" \"t0 \\<in> T\" \"is_interval T\"\n  assumes \"\\<And>z T' t. t0 \\<in> T' \\<Longrightarrow> is_interval T' \\<Longrightarrow> T' \\<subseteq> T \\<Longrightarrow> (z solves_ode f) T' X \\<Longrightarrow> z t0 = y t0 \\<Longrightarrow> t \\<in> T' \\<Longrightarrow> z t = y t\"\n  shows \"(y usolves_ode f from t0) T X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y usolves_ode f from t0) T X", "using assms"], ["proof (prove)\nusing this:\n  (y solves_ode f) T X\n  t0 \\<in> T\n  is_interval T\n  \\<lbrakk>t0 \\<in> ?T'; is_interval ?T'; ?T' \\<subseteq> T;\n   (?z solves_ode f) ?T' X; ?z t0 = y t0; ?t \\<in> ?T'\\<rbrakk>\n  \\<Longrightarrow> ?z ?t = y ?t\n\ngoal (1 subgoal):\n 1. (y usolves_ode f from t0) T X", "unfolding usolves_ode_from_def"], ["proof (prove)\nusing this:\n  (y solves_ode f) T X\n  t0 \\<in> T\n  is_interval T\n  \\<lbrakk>t0 \\<in> ?T'; is_interval ?T'; ?T' \\<subseteq> T;\n   (?z solves_ode f) ?T' X; ?z t0 = y t0; ?t \\<in> ?T'\\<rbrakk>\n  \\<Longrightarrow> ?z ?t = y ?t\n\ngoal (1 subgoal):\n 1. (y solves_ode f) T X \\<and>\n    t0 \\<in> T \\<and>\n    is_interval T \\<and>\n    (\\<forall>z T'.\n        t0 \\<in> T' \\<and>\n        is_interval T' \\<and>\n        T' \\<subseteq> T \\<and> (z solves_ode f) T' X \\<longrightarrow>\n        z t0 = y t0 \\<longrightarrow> (\\<forall>t\\<in>T'. z t = y t))", "by blast"], ["", "lemma usolves_odeI:\n  assumes \"(y solves_ode f) T X\" \"t0 \\<in> T\" \"is_interval T\"\n  assumes usol: \"\\<And>z t. {t0 -- t} \\<subseteq> T \\<Longrightarrow> (z solves_ode f) {t0 -- t} X \\<Longrightarrow> z t0 = y t0 \\<Longrightarrow> z t = y t\"\n  shows \"(y usolves_ode f from t0) T X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y usolves_ode f from t0) T X", "proof (rule usolves_ode_rawI; fact?)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>t0 \\<in> T'; is_interval T'; T' \\<subseteq> T;\n        (z solves_ode f) T' X; z t0 = y t0; t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = y t", "fix z T' t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>t0 \\<in> T'; is_interval T'; T' \\<subseteq> T;\n        (z solves_ode f) T' X; z t0 = y t0; t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = y t", "assume T': \"t0 \\<in> T'\" \"is_interval T'\" \"T' \\<subseteq> T\"\n    and z: \"(z solves_ode f) T' X\" and iv: \"z t0 = y t0\" and t: \"t \\<in> T'\""], ["proof (state)\nthis:\n  t0 \\<in> T'\n  is_interval T'\n  T' \\<subseteq> T\n  (z solves_ode f) T' X\n  z t0 = y t0\n  t \\<in> T'\n\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>t0 \\<in> T'; is_interval T'; T' \\<subseteq> T;\n        (z solves_ode f) T' X; z t0 = y t0; t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = y t", "have subset_T': \"{t0 -- t} \\<subseteq> T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0--t} \\<subseteq> T'", "by (rule closed_segment_subset_interval; fact)"], ["proof (state)\nthis:\n  {t0--t} \\<subseteq> T'\n\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>t0 \\<in> T'; is_interval T'; T' \\<subseteq> T;\n        (z solves_ode f) T' X; z t0 = y t0; t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = y t", "with z"], ["proof (chain)\npicking this:\n  (z solves_ode f) T' X\n  {t0--t} \\<subseteq> T'", "have sol_cs: \"(z solves_ode f) {t0 -- t} X\""], ["proof (prove)\nusing this:\n  (z solves_ode f) T' X\n  {t0--t} \\<subseteq> T'\n\ngoal (1 subgoal):\n 1. (z solves_ode f) {t0--t} X", "by (rule solves_ode_on_subset[OF _ _ order_refl])"], ["proof (state)\nthis:\n  (z solves_ode f) {t0--t} X\n\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>t0 \\<in> T'; is_interval T'; T' \\<subseteq> T;\n        (z solves_ode f) T' X; z t0 = y t0; t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = y t", "from subset_T'"], ["proof (chain)\npicking this:\n  {t0--t} \\<subseteq> T'", "have subset_T: \"{t0 -- t} \\<subseteq> T\""], ["proof (prove)\nusing this:\n  {t0--t} \\<subseteq> T'\n\ngoal (1 subgoal):\n 1. {t0--t} \\<subseteq> T", "using \\<open>T' \\<subseteq> T\\<close>"], ["proof (prove)\nusing this:\n  {t0--t} \\<subseteq> T'\n  T' \\<subseteq> T\n\ngoal (1 subgoal):\n 1. {t0--t} \\<subseteq> T", "by simp"], ["proof (state)\nthis:\n  {t0--t} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>t0 \\<in> T'; is_interval T'; T' \\<subseteq> T;\n        (z solves_ode f) T' X; z t0 = y t0; t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = y t", "from usol[OF subset_T sol_cs iv]"], ["proof (chain)\npicking this:\n  z t = y t", "show \"z t = y t\""], ["proof (prove)\nusing this:\n  z t = y t\n\ngoal (1 subgoal):\n 1. z t = y t", "by simp"], ["proof (state)\nthis:\n  z t = y t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma is_interval_singleton[intro,simp]: \"is_interval {t0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval {t0}", "by (auto simp: is_interval_def intro!: euclidean_eqI[where 'a='a])"], ["", "lemma usolves_ode_singleton: \"x t0 \\<in> X \\<Longrightarrow> (x usolves_ode f from t0) {t0} X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x t0 \\<in> X \\<Longrightarrow> (x usolves_ode f from t0) {t0} X", "by (auto intro!: usolves_odeI solves_ode_singleton)"], ["", "lemma usolves_ode_congI:\n  assumes x: \"(x usolves_ode f from t0) T X\"\n  assumes \"\\<And>t. t \\<in> T \\<Longrightarrow> x t = y t\"\n  assumes \"\\<And>t y. t \\<in> T \\<Longrightarrow> y \\<in> X \\<Longrightarrow> f t y = g t y\"\\<comment> \\<open>TODO: weaken this assumption?!\\<close>\n  assumes \"t0 = s0\"\n  assumes \"T = S\"\n  assumes \"X = Y\"\n  shows \"(y usolves_ode g from s0) S Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y usolves_ode g from s0) S Y", "proof (rule usolves_ode_rawI)"], ["proof (state)\ngoal (4 subgoals):\n 1. (y solves_ode g) S Y\n 2. s0 \\<in> S\n 3. is_interval S\n 4. \\<And>z T' t.\n       \\<lbrakk>s0 \\<in> T'; is_interval T'; T' \\<subseteq> S;\n        (z solves_ode g) T' Y; z s0 = y s0; t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = y t", "from assms x"], ["proof (chain)\npicking this:\n  (x usolves_ode f from t0) T X\n  ?t \\<in> T \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> T; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?y = g ?t ?y\n  t0 = s0\n  T = S\n  X = Y\n  (x usolves_ode f from t0) T X", "have \"(y solves_ode f) S Y\""], ["proof (prove)\nusing this:\n  (x usolves_ode f from t0) T X\n  ?t \\<in> T \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> T; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?y = g ?t ?y\n  t0 = s0\n  T = S\n  X = Y\n  (x usolves_ode f from t0) T X\n\ngoal (1 subgoal):\n 1. (y solves_ode f) S Y", "by (auto simp add: usolves_ode_from_def)"], ["proof (state)\nthis:\n  (y solves_ode f) S Y\n\ngoal (4 subgoals):\n 1. (y solves_ode g) S Y\n 2. s0 \\<in> S\n 3. is_interval S\n 4. \\<And>z T' t.\n       \\<lbrakk>s0 \\<in> T'; is_interval T'; T' \\<subseteq> S;\n        (z solves_ode g) T' Y; z s0 = y s0; t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = y t", "then"], ["proof (chain)\npicking this:\n  (y solves_ode f) S Y", "show \"(y solves_ode g) S Y\""], ["proof (prove)\nusing this:\n  (y solves_ode f) S Y\n\ngoal (1 subgoal):\n 1. (y solves_ode g) S Y", "by (rule solves_ode_congI) (use assms in \\<open>auto simp: usolves_ode_from_def dest!: solves_ode_domainD\\<close>)"], ["proof (state)\nthis:\n  (y solves_ode g) S Y\n\ngoal (3 subgoals):\n 1. s0 \\<in> S\n 2. is_interval S\n 3. \\<And>z T' t.\n       \\<lbrakk>s0 \\<in> T'; is_interval T'; T' \\<subseteq> S;\n        (z solves_ode g) T' Y; z s0 = y s0; t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = y t", "from assms"], ["proof (chain)\npicking this:\n  (x usolves_ode f from t0) T X\n  ?t \\<in> T \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> T; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?y = g ?t ?y\n  t0 = s0\n  T = S\n  X = Y", "show \"s0 \\<in> S\" \"is_interval S\""], ["proof (prove)\nusing this:\n  (x usolves_ode f from t0) T X\n  ?t \\<in> T \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> T; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?y = g ?t ?y\n  t0 = s0\n  T = S\n  X = Y\n\ngoal (1 subgoal):\n 1. s0 \\<in> S &&& is_interval S", "by (auto simp add: usolves_ode_from_def)"], ["proof (state)\nthis:\n  s0 \\<in> S\n  is_interval S\n\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>s0 \\<in> T'; is_interval T'; T' \\<subseteq> S;\n        (z solves_ode g) T' Y; z s0 = y s0; t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = y t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>s0 \\<in> T'; is_interval T'; T' \\<subseteq> S;\n        (z solves_ode g) T' Y; z s0 = y s0; t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = y t", "fix z T' t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>s0 \\<in> T'; is_interval T'; T' \\<subseteq> S;\n        (z solves_ode g) T' Y; z s0 = y s0; t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = y t", "assume hyps: \"s0 \\<in> T'\" \"is_interval T'\" \"T' \\<subseteq> S\" \"(z solves_ode g) T' Y\" \"z s0 = y s0\" \"t \\<in> T'\""], ["proof (state)\nthis:\n  s0 \\<in> T'\n  is_interval T'\n  T' \\<subseteq> S\n  (z solves_ode g) T' Y\n  z s0 = y s0\n  t \\<in> T'\n\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>s0 \\<in> T'; is_interval T'; T' \\<subseteq> S;\n        (z solves_ode g) T' Y; z s0 = y s0; t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = y t", "from \\<open>(z solves_ode g) T' Y\\<close>"], ["proof (chain)\npicking this:\n  (z solves_ode g) T' Y", "have zsol: \"(z solves_ode f) T' Y\""], ["proof (prove)\nusing this:\n  (z solves_ode g) T' Y\n\ngoal (1 subgoal):\n 1. (z solves_ode f) T' Y", "by (rule solves_ode_congI) (use assms hyps in \\<open>auto dest!: solves_ode_domainD\\<close>)"], ["proof (state)\nthis:\n  (z solves_ode f) T' Y\n\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>s0 \\<in> T'; is_interval T'; T' \\<subseteq> S;\n        (z solves_ode g) T' Y; z s0 = y s0; t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = y t", "have \"z t = x t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z t = x t", "by (rule x[THEN usolves_odeD(4),where T' = T'])\n      (use zsol \\<open>s0 \\<in> T'\\<close> \\<open>is_interval T'\\<close> \\<open>T' \\<subseteq> S\\<close> \\<open>T = S\\<close> \\<open>z s0 = y s0\\<close> \\<open>t \\<in> T'\\<close> assms in auto)"], ["proof (state)\nthis:\n  z t = x t\n\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>s0 \\<in> T'; is_interval T'; T' \\<subseteq> S;\n        (z solves_ode g) T' Y; z s0 = y s0; t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = y t", "also"], ["proof (state)\nthis:\n  z t = x t\n\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>s0 \\<in> T'; is_interval T'; T' \\<subseteq> S;\n        (z solves_ode g) T' Y; z s0 = y s0; t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = y t", "have \"y t = x t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y t = x t", "using assms \\<open>t \\<in> T'\\<close> \\<open>T' \\<subseteq> S\\<close> \\<open>T = S\\<close>"], ["proof (prove)\nusing this:\n  (x usolves_ode f from t0) T X\n  ?t \\<in> T \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> T; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?y = g ?t ?y\n  t0 = s0\n  T = S\n  X = Y\n  t \\<in> T'\n  T' \\<subseteq> S\n  T = S\n\ngoal (1 subgoal):\n 1. y t = x t", "by auto"], ["proof (state)\nthis:\n  y t = x t\n\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>s0 \\<in> T'; is_interval T'; T' \\<subseteq> S;\n        (z solves_ode g) T' Y; z s0 = y s0; t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = y t", "finally"], ["proof (chain)\npicking this:\n  y t = z t", "show \"z t = y t\""], ["proof (prove)\nusing this:\n  y t = z t\n\ngoal (1 subgoal):\n 1. z t = y t", "by simp"], ["proof (state)\nthis:\n  z t = y t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma usolves_ode_cong[cong]:\n  assumes \"\\<And>t. t \\<in> T \\<Longrightarrow> x t = y t\"\n  assumes \"\\<And>t y. t \\<in> T \\<Longrightarrow> y \\<in> X \\<Longrightarrow> f t y = g t y\"\\<comment> \\<open>TODO: weaken this assumption?!\\<close>\n  assumes \"t0 = s0\"\n  assumes \"T = S\"\n  assumes \"X = Y\"\n  shows \"(x usolves_ode f from t0) T X \\<longleftrightarrow> (y usolves_ode g from s0) S Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x usolves_ode f from t0) T X = (y usolves_ode g from s0) S Y", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (x usolves_ode f from t0) T X \\<Longrightarrow>\n    (y usolves_ode g from s0) S Y\n 2. (y usolves_ode g from s0) S Y \\<Longrightarrow>\n    (x usolves_ode f from t0) T X", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x usolves_ode f from t0) T X \\<Longrightarrow>\n    (y usolves_ode g from s0) S Y", "by (rule usolves_ode_congI[OF _ assms]; assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (y usolves_ode g from s0) S Y \\<Longrightarrow>\n    (x usolves_ode f from t0) T X", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (y usolves_ode g from s0) S Y \\<Longrightarrow>\n    (x usolves_ode f from t0) T X", "by (metis assms(1) assms(2) assms(3) assms(4) assms(5) usolves_ode_congI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma shift_autonomous_unique_solution:\n  assumes usol: \"(x usolves_ode f from t0) T X\"\n  assumes auto: \"\\<And>s t x. x \\<in> X \\<Longrightarrow> f s x = f t x\"\n  shows \"((\\<lambda>t. x (t + t0 - t1)) usolves_ode f from t1) ((+) (t1 - t0) ` T) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. x (t + t0 - t1)) usolves_ode f from t1)\n     ((+) (t1 - t0) ` T) X", "proof (rule usolves_ode_rawI)"], ["proof (state)\ngoal (4 subgoals):\n 1. ((\\<lambda>t. x (t + t0 - t1)) solves_ode f) ((+) (t1 - t0) ` T) X\n 2. t1 \\<in> (+) (t1 - t0) ` T\n 3. is_interval ((+) (t1 - t0) ` T)\n 4. \\<And>z T' t.\n       \\<lbrakk>t1 \\<in> T'; is_interval T';\n        T' \\<subseteq> (+) (t1 - t0) ` T; (z solves_ode f) T' X;\n        z t1 = x (t1 + t0 - t1); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = x (t + t0 - t1)", "from usolves_odeD[OF usol]"], ["proof (chain)\npicking this:\n  (x solves_ode f) T X\n  t0 \\<in> T\n  is_interval T\n  \\<lbrakk>t0 \\<in> ?T'; is_interval ?T'; ?T' \\<subseteq> T;\n   (?z solves_ode f) ?T' X; ?z t0 = x t0; ?t \\<in> ?T'\\<rbrakk>\n  \\<Longrightarrow> ?z ?t = x ?t", "have sol: \"(x solves_ode f) T X\"\n    and \"t0 \\<in> T\"\n    and \"is_interval T\"\n    and unique: \"t0 \\<in> T' \\<Longrightarrow> is_interval T' \\<Longrightarrow> T' \\<subseteq> T \\<Longrightarrow> (z solves_ode f) T' X \\<Longrightarrow> z t0 = x t0 \\<Longrightarrow> t \\<in> T' \\<Longrightarrow> z t = x t\"\n    for z T' t"], ["proof (prove)\nusing this:\n  (x solves_ode f) T X\n  t0 \\<in> T\n  is_interval T\n  \\<lbrakk>t0 \\<in> ?T'; is_interval ?T'; ?T' \\<subseteq> T;\n   (?z solves_ode f) ?T' X; ?z t0 = x t0; ?t \\<in> ?T'\\<rbrakk>\n  \\<Longrightarrow> ?z ?t = x ?t\n\ngoal (1 subgoal):\n 1. ((x solves_ode f) T X &&& t0 \\<in> T) &&&\n    is_interval T &&&\n    (\\<lbrakk>t0 \\<in> T'; is_interval T'; T' \\<subseteq> T;\n      (z solves_ode f) T' X; z t0 = x t0; t \\<in> T'\\<rbrakk>\n     \\<Longrightarrow> z t = x t)", "by blast+"], ["proof (state)\nthis:\n  (x solves_ode f) T X\n  t0 \\<in> T\n  is_interval T\n  \\<lbrakk>t0 \\<in> ?T'; is_interval ?T'; ?T' \\<subseteq> T;\n   (?z solves_ode f) ?T' X; ?z t0 = x t0; ?t \\<in> ?T'\\<rbrakk>\n  \\<Longrightarrow> ?z ?t = x ?t\n\ngoal (4 subgoals):\n 1. ((\\<lambda>t. x (t + t0 - t1)) solves_ode f) ((+) (t1 - t0) ` T) X\n 2. t1 \\<in> (+) (t1 - t0) ` T\n 3. is_interval ((+) (t1 - t0) ` T)\n 4. \\<And>z T' t.\n       \\<lbrakk>t1 \\<in> T'; is_interval T';\n        T' \\<subseteq> (+) (t1 - t0) ` T; (z solves_ode f) T' X;\n        z t1 = x (t1 + t0 - t1); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = x (t + t0 - t1)", "have \"(\\<lambda>t. t + t1 - t0) = (+) (t1 - t0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. t + t1 - t0) = (+) (t1 - t0)", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  (\\<lambda>t. t + t1 - t0) = (+) (t1 - t0)\n\ngoal (4 subgoals):\n 1. ((\\<lambda>t. x (t + t0 - t1)) solves_ode f) ((+) (t1 - t0) ` T) X\n 2. t1 \\<in> (+) (t1 - t0) ` T\n 3. is_interval ((+) (t1 - t0) ` T)\n 4. \\<And>z T' t.\n       \\<lbrakk>t1 \\<in> T'; is_interval T';\n        T' \\<subseteq> (+) (t1 - t0) ` T; (z solves_ode f) T' X;\n        z t1 = x (t1 + t0 - t1); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = x (t + t0 - t1)", "with shift_autonomous_solution[OF sol auto, of \"t0 - t1\"] solves_odeD[OF sol]"], ["proof (chain)\npicking this:\n  (\\<And>s t. s \\<in> T \\<Longrightarrow> x s \\<in> X) \\<Longrightarrow>\n  ((\\<lambda>t. x (t + (t0 - t1))) solves_ode f)\n   ((\\<lambda>t. t - (t0 - t1)) ` T) X\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) T\n  ?t \\<in> T \\<Longrightarrow> x ?t \\<in> X\n  (\\<lambda>t. t + t1 - t0) = (+) (t1 - t0)", "show \"((\\<lambda>t. x (t + t0 - t1)) solves_ode f) ((+) (t1 - t0) ` T) X\""], ["proof (prove)\nusing this:\n  (\\<And>s t. s \\<in> T \\<Longrightarrow> x s \\<in> X) \\<Longrightarrow>\n  ((\\<lambda>t. x (t + (t0 - t1))) solves_ode f)\n   ((\\<lambda>t. t - (t0 - t1)) ` T) X\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) T\n  ?t \\<in> T \\<Longrightarrow> x ?t \\<in> X\n  (\\<lambda>t. t + t1 - t0) = (+) (t1 - t0)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. x (t + t0 - t1)) solves_ode f) ((+) (t1 - t0) ` T) X", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  ((\\<lambda>t. x (t + t0 - t1)) solves_ode f) ((+) (t1 - t0) ` T) X\n\ngoal (3 subgoals):\n 1. t1 \\<in> (+) (t1 - t0) ` T\n 2. is_interval ((+) (t1 - t0) ` T)\n 3. \\<And>z T' t.\n       \\<lbrakk>t1 \\<in> T'; is_interval T';\n        T' \\<subseteq> (+) (t1 - t0) ` T; (z solves_ode f) T' X;\n        z t1 = x (t1 + t0 - t1); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = x (t + t0 - t1)", "from \\<open>t0 \\<in> T\\<close>"], ["proof (chain)\npicking this:\n  t0 \\<in> T", "show \"t1 \\<in> (+) (t1 - t0) ` T\""], ["proof (prove)\nusing this:\n  t0 \\<in> T\n\ngoal (1 subgoal):\n 1. t1 \\<in> (+) (t1 - t0) ` T", "by auto"], ["proof (state)\nthis:\n  t1 \\<in> (+) (t1 - t0) ` T\n\ngoal (2 subgoals):\n 1. is_interval ((+) (t1 - t0) ` T)\n 2. \\<And>z T' t.\n       \\<lbrakk>t1 \\<in> T'; is_interval T';\n        T' \\<subseteq> (+) (t1 - t0) ` T; (z solves_ode f) T' X;\n        z t1 = x (t1 + t0 - t1); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = x (t + t0 - t1)", "from \\<open>is_interval T\\<close>"], ["proof (chain)\npicking this:\n  is_interval T", "show \"is_interval ((+) (t1 - t0) ` T)\""], ["proof (prove)\nusing this:\n  is_interval T\n\ngoal (1 subgoal):\n 1. is_interval ((+) (t1 - t0) ` T)", "by simp"], ["proof (state)\nthis:\n  is_interval ((+) (t1 - t0) ` T)\n\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>t1 \\<in> T'; is_interval T';\n        T' \\<subseteq> (+) (t1 - t0) ` T; (z solves_ode f) T' X;\n        z t1 = x (t1 + t0 - t1); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = x (t + t0 - t1)", "fix z T' t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>t1 \\<in> T'; is_interval T';\n        T' \\<subseteq> (+) (t1 - t0) ` T; (z solves_ode f) T' X;\n        z t1 = x (t1 + t0 - t1); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = x (t + t0 - t1)", "assume z: \"(z solves_ode f) T' X\"\n    and t0': \"t1 \\<in> T'\" \"T' \\<subseteq> (+) (t1 - t0) ` T\"\n    and shift: \"z t1 = x (t1 + t0 - t1)\"\n    and t: \"t \\<in> T'\"\n    and ivl: \"is_interval T'\""], ["proof (state)\nthis:\n  (z solves_ode f) T' X\n  t1 \\<in> T'\n  T' \\<subseteq> (+) (t1 - t0) ` T\n  z t1 = x (t1 + t0 - t1)\n  t \\<in> T'\n  is_interval T'\n\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>t1 \\<in> T'; is_interval T';\n        T' \\<subseteq> (+) (t1 - t0) ` T; (z solves_ode f) T' X;\n        z t1 = x (t1 + t0 - t1); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = x (t + t0 - t1)", "let ?z = \"(\\<lambda>t. z (t + (t1 - t0)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>t1 \\<in> T'; is_interval T';\n        T' \\<subseteq> (+) (t1 - t0) ` T; (z solves_ode f) T' X;\n        z t1 = x (t1 + t0 - t1); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = x (t + t0 - t1)", "have \"(?z solves_ode f) ((\\<lambda>t. t - (t1 - t0)) ` T') X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. z (t + (t1 - t0))) solves_ode f)\n     ((\\<lambda>t. t - (t1 - t0)) ` T') X", "apply (rule shift_autonomous_solution[OF z, of \"t1 - t0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t. s \\<in> T' \\<Longrightarrow> f s (z s) = f t (z s)", "using solves_odeD[OF z]"], ["proof (prove)\nusing this:\n  (z has_vderiv_on (\\<lambda>t. f t (z t))) T'\n  ?t \\<in> T' \\<Longrightarrow> z ?t \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>s t. s \\<in> T' \\<Longrightarrow> f s (z s) = f t (z s)", "by (auto intro!: auto)"], ["proof (state)\nthis:\n  ((\\<lambda>t. z (t + (t1 - t0))) solves_ode f)\n   ((\\<lambda>t. t - (t1 - t0)) ` T') X\n\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>t1 \\<in> T'; is_interval T';\n        T' \\<subseteq> (+) (t1 - t0) ` T; (z solves_ode f) T' X;\n        z t1 = x (t1 + t0 - t1); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = x (t + t0 - t1)", "with _ _ _"], ["proof (chain)\npicking this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  ((\\<lambda>t. z (t + (t1 - t0))) solves_ode f)\n   ((\\<lambda>t. t - (t1 - t0)) ` T') X", "have \"?z ((t + (t0 - t1))) = x (t + (t0 - t1))\""], ["proof (prove)\nusing this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  ((\\<lambda>t. z (t + (t1 - t0))) solves_ode f)\n   ((\\<lambda>t. t - (t1 - t0)) ` T') X\n\ngoal (1 subgoal):\n 1. z (t + (t0 - t1) + (t1 - t0)) = x (t + (t0 - t1))", "apply (rule unique[where z = ?z ])"], ["proof (prove)\ngoal (5 subgoals):\n 1. t0 \\<in> (\\<lambda>t. t - (t1 - t0)) ` T'\n 2. is_interval ((\\<lambda>t. t - (t1 - t0)) ` T')\n 3. (\\<lambda>t. t - (t1 - t0)) ` T' \\<subseteq> T\n 4. z (t0 + (t1 - t0)) = x t0\n 5. t + (t0 - t1) \\<in> (\\<lambda>t. t - (t1 - t0)) ` T'", "using shift t t0' ivl"], ["proof (prove)\nusing this:\n  z t1 = x (t1 + t0 - t1)\n  t \\<in> T'\n  t1 \\<in> T'\n  T' \\<subseteq> (+) (t1 - t0) ` T\n  is_interval T'\n\ngoal (5 subgoals):\n 1. t0 \\<in> (\\<lambda>t. t - (t1 - t0)) ` T'\n 2. is_interval ((\\<lambda>t. t - (t1 - t0)) ` T')\n 3. (\\<lambda>t. t - (t1 - t0)) ` T' \\<subseteq> T\n 4. z (t0 + (t1 - t0)) = x t0\n 5. t + (t0 - t1) \\<in> (\\<lambda>t. t - (t1 - t0)) ` T'", "by auto"], ["proof (state)\nthis:\n  z (t + (t0 - t1) + (t1 - t0)) = x (t + (t0 - t1))\n\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>t1 \\<in> T'; is_interval T';\n        T' \\<subseteq> (+) (t1 - t0) ` T; (z solves_ode f) T' X;\n        z t1 = x (t1 + t0 - t1); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = x (t + t0 - t1)", "then"], ["proof (chain)\npicking this:\n  z (t + (t0 - t1) + (t1 - t0)) = x (t + (t0 - t1))", "show \"z t = x (t + t0 - t1)\""], ["proof (prove)\nusing this:\n  z (t + (t0 - t1) + (t1 - t0)) = x (t + (t0 - t1))\n\ngoal (1 subgoal):\n 1. z t = x (t + t0 - t1)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  z t = x (t + t0 - t1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma three_intervals_lemma:\n  fixes a b c::real\n  assumes a: \"a \\<in> A - B\"\n    and b: \"b \\<in> B - A\"\n    and c: \"c \\<in> A \\<inter> B\"\n    and iA: \"is_interval A\" and iB: \"is_interval B\"\n    and aI: \"a \\<in> I\"\n    and bI: \"b \\<in> I\"\n    and iI: \"is_interval I\"\n  shows \"c \\<in> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> I", "apply (rule mem_is_intervalI[OF iI aI bI])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> Basis \\<Longrightarrow>\n       a \\<bullet> i \\<le> c \\<bullet> i \\<and>\n       c \\<bullet> i \\<le> b \\<bullet> i \\<or>\n       b \\<bullet> i \\<le> c \\<bullet> i \\<and>\n       c \\<bullet> i \\<le> a \\<bullet> i", "using iA iB"], ["proof (prove)\nusing this:\n  is_interval A\n  is_interval B\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> Basis \\<Longrightarrow>\n       a \\<bullet> i \\<le> c \\<bullet> i \\<and>\n       c \\<bullet> i \\<le> b \\<bullet> i \\<or>\n       b \\<bullet> i \\<le> c \\<bullet> i \\<and>\n       c \\<bullet> i \\<le> a \\<bullet> i", "apply (auto simp: is_interval_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>a\\<in>A.\n                \\<forall>b\\<in>A.\n                   \\<forall>x.\n                      (a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n                       x \\<in> A) \\<and>\n                      (b \\<le> x \\<and> x \\<le> a \\<longrightarrow>\n                       x \\<in> A);\n     \\<forall>a\\<in>B.\n        \\<forall>b\\<in>B.\n           \\<forall>x.\n              (a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n               x \\<in> B) \\<and>\n              (b \\<le> x \\<and> x \\<le> a \\<longrightarrow> x \\<in> B);\n     \\<not> b \\<le> c\\<rbrakk>\n    \\<Longrightarrow> a \\<le> c\n 2. \\<lbrakk>\\<forall>a\\<in>A.\n                \\<forall>b\\<in>A.\n                   \\<forall>x.\n                      (a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n                       x \\<in> A) \\<and>\n                      (b \\<le> x \\<and> x \\<le> a \\<longrightarrow>\n                       x \\<in> A);\n     \\<forall>a\\<in>B.\n        \\<forall>b\\<in>B.\n           \\<forall>x.\n              (a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n               x \\<in> B) \\<and>\n              (b \\<le> x \\<and> x \\<le> a \\<longrightarrow> x \\<in> B);\n     \\<not> c \\<le> a\\<rbrakk>\n    \\<Longrightarrow> c \\<le> b", "apply (metis Diff_iff Int_iff a b c le_cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a\\<in>A.\n                \\<forall>b\\<in>A.\n                   \\<forall>x.\n                      (a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n                       x \\<in> A) \\<and>\n                      (b \\<le> x \\<and> x \\<le> a \\<longrightarrow>\n                       x \\<in> A);\n     \\<forall>a\\<in>B.\n        \\<forall>b\\<in>B.\n           \\<forall>x.\n              (a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n               x \\<in> B) \\<and>\n              (b \\<le> x \\<and> x \\<le> a \\<longrightarrow> x \\<in> B);\n     \\<not> c \\<le> a\\<rbrakk>\n    \\<Longrightarrow> c \\<le> b", "apply (metis Diff_iff Int_iff a b c le_cases)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma connection_usolves_ode:\n  assumes x: \"(x usolves_ode f from tx) T X\"\n  assumes y: \"\\<And>t. t \\<in> closure S \\<inter> closure T \\<Longrightarrow> (y usolves_ode g from t) S X\"\n  assumes conn_T: \"closure S \\<inter> closure T \\<subseteq> T\"\n  assumes conn_S: \"closure S \\<inter> closure T \\<subseteq> S\"\n  assumes conn_t: \"t \\<in> closure S \\<inter> closure T\"\n  assumes conn_x: \"\\<And>t. t \\<in> closure S \\<Longrightarrow> t \\<in> closure T \\<Longrightarrow> x t = y t\"\n  assumes conn_f: \"\\<And>t x. t \\<in> closure S \\<Longrightarrow> t \\<in> closure T \\<Longrightarrow> x \\<in> X \\<Longrightarrow> f t x = g t x\"\n  shows \"((\\<lambda>t. if t \\<in> T then x t else y t) usolves_ode (\\<lambda>t. if t \\<in> T then f t else g t) from tx) (T \\<union> S) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         if t \\<in> T then x t\n         else y t) usolves_ode (\\<lambda>t.\n                                   if t \\<in> T then f t else g t) from tx)\n     (T \\<union> S) X", "apply (rule usolves_ode_rawI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. ((\\<lambda>t. if t \\<in> T then x t else y t) solves_ode\n     (\\<lambda>t. if t \\<in> T then f t else g t))\n     (T \\<union> S) X\n 2. tx \\<in> T \\<union> S\n 3. is_interval (T \\<union> S)\n 4. \\<And>z T' t.\n       \\<lbrakk>tx \\<in> T'; is_interval T'; T' \\<subseteq> T \\<union> S;\n        (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) T' X;\n        z tx = (if tx \\<in> T then x tx else y tx); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = (if t \\<in> T then x t else y t)", "apply (subst Un_absorb[of X, symmetric])"], ["proof (prove)\ngoal (4 subgoals):\n 1. ((\\<lambda>t. if t \\<in> T then x t else y t) solves_ode\n     (\\<lambda>t. if t \\<in> T then f t else g t))\n     (T \\<union> S) (X \\<union> X)\n 2. tx \\<in> T \\<union> S\n 3. is_interval (T \\<union> S)\n 4. \\<And>z T' t.\n       \\<lbrakk>tx \\<in> T'; is_interval T'; T' \\<subseteq> T \\<union> S;\n        (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) T' X;\n        z tx = (if tx \\<in> T then x tx else y tx); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = (if t \\<in> T then x t else y t)", "apply (rule connection_solves_ode[OF usolves_odeD(1)[OF x] usolves_odeD(1)[OF y[OF conn_t]] conn_T conn_S conn_x conn_f])"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> closure S; t \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> t \\<in> closure S\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> closure S; t \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> t \\<in> closure T\n 3. \\<And>t.\n       \\<lbrakk>t \\<in> closure S; t \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> t \\<in> closure S\n 4. \\<And>t.\n       \\<lbrakk>t \\<in> closure S; t \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> t \\<in> closure T\n 5. \\<And>t.\n       \\<lbrakk>t \\<in> closure S; t \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> y t \\<in> X\n 6. tx \\<in> T \\<union> S\n 7. is_interval (T \\<union> S)\n 8. \\<And>z T' t.\n       \\<lbrakk>tx \\<in> T'; is_interval T'; T' \\<subseteq> T \\<union> S;\n        (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) T' X;\n        z tx = (if tx \\<in> T then x tx else y tx); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = (if t \\<in> T then x t else y t)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t_ \\<in> closure S; t_ \\<in> closure T\\<rbrakk>\n    \\<Longrightarrow> t_ \\<in> closure S", "by assumption"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> closure S; t \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> t \\<in> closure T\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> closure S; t \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> t \\<in> closure S\n 3. \\<And>t.\n       \\<lbrakk>t \\<in> closure S; t \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> t \\<in> closure T\n 4. \\<And>t.\n       \\<lbrakk>t \\<in> closure S; t \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> y t \\<in> X\n 5. tx \\<in> T \\<union> S\n 6. is_interval (T \\<union> S)\n 7. \\<And>z T' t.\n       \\<lbrakk>tx \\<in> T'; is_interval T'; T' \\<subseteq> T \\<union> S;\n        (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) T' X;\n        z tx = (if tx \\<in> T then x tx else y tx); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = (if t \\<in> T then x t else y t)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t_ \\<in> closure S; t_ \\<in> closure T\\<rbrakk>\n    \\<Longrightarrow> t_ \\<in> closure T", "by assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> closure S; t \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> t \\<in> closure S\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> closure S; t \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> t \\<in> closure T\n 3. \\<And>t.\n       \\<lbrakk>t \\<in> closure S; t \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> y t \\<in> X\n 4. tx \\<in> T \\<union> S\n 5. is_interval (T \\<union> S)\n 6. \\<And>z T' t.\n       \\<lbrakk>tx \\<in> T'; is_interval T'; T' \\<subseteq> T \\<union> S;\n        (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) T' X;\n        z tx = (if tx \\<in> T then x tx else y tx); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = (if t \\<in> T then x t else y t)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t_ \\<in> closure S; t_ \\<in> closure T\\<rbrakk>\n    \\<Longrightarrow> t_ \\<in> closure S", "by assumption"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> closure S; t \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> t \\<in> closure T\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> closure S; t \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> y t \\<in> X\n 3. tx \\<in> T \\<union> S\n 4. is_interval (T \\<union> S)\n 5. \\<And>z T' t.\n       \\<lbrakk>tx \\<in> T'; is_interval T'; T' \\<subseteq> T \\<union> S;\n        (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) T' X;\n        z tx = (if tx \\<in> T then x tx else y tx); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = (if t \\<in> T then x t else y t)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t_ \\<in> closure S; t_ \\<in> closure T\\<rbrakk>\n    \\<Longrightarrow> t_ \\<in> closure T", "by assumption"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> closure S; t \\<in> closure T\\<rbrakk>\n       \\<Longrightarrow> y t \\<in> X\n 2. tx \\<in> T \\<union> S\n 3. is_interval (T \\<union> S)\n 4. \\<And>z T' t.\n       \\<lbrakk>tx \\<in> T'; is_interval T'; T' \\<subseteq> T \\<union> S;\n        (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) T' X;\n        z tx = (if tx \\<in> T then x tx else y tx); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = (if t \\<in> T then x t else y t)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t_ \\<in> closure S; t_ \\<in> closure T\\<rbrakk>\n    \\<Longrightarrow> y t_ \\<in> X", "using solves_odeD(2)[OF usolves_odeD(1)[OF x]] conn_T"], ["proof (prove)\nusing this:\n  ?t \\<in> T \\<Longrightarrow> x ?t \\<in> X\n  closure S \\<inter> closure T \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t_ \\<in> closure S; t_ \\<in> closure T\\<rbrakk>\n    \\<Longrightarrow> y t_ \\<in> X", "by (auto simp add: conn_x[symmetric])"], ["proof (prove)\ngoal (3 subgoals):\n 1. tx \\<in> T \\<union> S\n 2. is_interval (T \\<union> S)\n 3. \\<And>z T' t.\n       \\<lbrakk>tx \\<in> T'; is_interval T'; T' \\<subseteq> T \\<union> S;\n        (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) T' X;\n        z tx = (if tx \\<in> T then x tx else y tx); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = (if t \\<in> T then x t else y t)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. tx \\<in> T \\<union> S", "using usolves_odeD(2)[OF x]"], ["proof (prove)\nusing this:\n  tx \\<in> T\n\ngoal (1 subgoal):\n 1. tx \\<in> T \\<union> S", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. is_interval (T \\<union> S)\n 2. \\<And>z T' t.\n       \\<lbrakk>tx \\<in> T'; is_interval T'; T' \\<subseteq> T \\<union> S;\n        (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) T' X;\n        z tx = (if tx \\<in> T then x tx else y tx); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = (if t \\<in> T then x t else y t)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval (T \\<union> S)", "using usolves_odeD(3)[OF x] usolves_odeD(3)[OF y]"], ["proof (prove)\nusing this:\n  is_interval T\n  ?t0.0 \\<in> closure S \\<inter> closure T \\<Longrightarrow> is_interval S\n\ngoal (1 subgoal):\n 1. is_interval (T \\<union> S)", "apply (rule is_real_interval_union)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ?t0.1 \\<in> closure S \\<inter> closure T\n 2. \\<lbrakk>T \\<noteq> {}; S \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> T \\<inter> S \\<noteq> {}", "using conn_T conn_S conn_t"], ["proof (prove)\nusing this:\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n\ngoal (2 subgoals):\n 1. ?t0.1 \\<in> closure S \\<inter> closure T\n 2. \\<lbrakk>T \\<noteq> {}; S \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> T \\<inter> S \\<noteq> {}", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z T' t.\n       \\<lbrakk>tx \\<in> T'; is_interval T'; T' \\<subseteq> T \\<union> S;\n        (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) T' X;\n        z tx = (if tx \\<in> T then x tx else y tx); t \\<in> T'\\<rbrakk>\n       \\<Longrightarrow> z t = (if t \\<in> T then x t else y t)", "subgoal premises prems for z TS' s"], ["proof (prove)\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "from \\<open>(z solves_ode _) _ _\\<close>"], ["proof (chain)\npicking this:\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X", "have \"(z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) (T \\<inter> TS') X\""], ["proof (prove)\nusing this:\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X\n\ngoal (1 subgoal):\n 1. (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t))\n     (T \\<inter> TS') X", "by (rule solves_ode_on_subset) auto"], ["proof (state)\nthis:\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t))\n   (T \\<inter> TS') X\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "then"], ["proof (chain)\npicking this:\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t))\n   (T \\<inter> TS') X", "have z_f: \"(z solves_ode f) (T \\<inter> TS') X\""], ["proof (prove)\nusing this:\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t))\n   (T \\<inter> TS') X\n\ngoal (1 subgoal):\n 1. (z solves_ode f) (T \\<inter> TS') X", "by (subst solves_ode_cong) auto"], ["proof (state)\nthis:\n  (z solves_ode f) (T \\<inter> TS') X\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "from prems(4)"], ["proof (chain)\npicking this:\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X", "have \"(z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) (S \\<inter> TS') X\""], ["proof (prove)\nusing this:\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X\n\ngoal (1 subgoal):\n 1. (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t))\n     (S \\<inter> TS') X", "by (rule solves_ode_on_subset) auto"], ["proof (state)\nthis:\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t))\n   (S \\<inter> TS') X\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "then"], ["proof (chain)\npicking this:\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t))\n   (S \\<inter> TS') X", "have z_g: \"(z solves_ode g) (S \\<inter> TS') X\""], ["proof (prove)\nusing this:\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t))\n   (S \\<inter> TS') X\n\ngoal (1 subgoal):\n 1. (z solves_ode g) (S \\<inter> TS') X", "apply (rule solves_ode_congI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t. t \\<in> S \\<inter> TS' \\<Longrightarrow> z t = z t\n 2. \\<And>t.\n       t \\<in> S \\<inter> TS' \\<Longrightarrow>\n       (if t \\<in> T then f t else g t) (z t) = g t (z t)\n 3. S \\<inter> TS' = S \\<inter> TS'\n 4. X = X", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t_ \\<in> S \\<inter> TS' \\<Longrightarrow> z t_ = z t_", "by simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       t \\<in> S \\<inter> TS' \\<Longrightarrow>\n       (if t \\<in> T then f t else g t) (z t) = g t (z t)\n 2. S \\<inter> TS' = S \\<inter> TS'\n 3. X = X", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t_ \\<in> S \\<inter> TS' \\<Longrightarrow>\n    (if t_ \\<in> T then f t_ else g t_) (z t_) = g t_ (z t_)", "by clarsimp (meson closure_subset conn_f contra_subsetD prems(4) solves_ode_domainD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. S \\<inter> TS' = S \\<inter> TS'\n 2. X = X", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<inter> TS' = S \\<inter> TS'", "by simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. X = X", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. X = X", "by simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (z solves_ode g) (S \\<inter> TS') X\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "have \"tx \\<in> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tx \\<in> T", "using assms"], ["proof (prove)\nusing this:\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n\ngoal (1 subgoal):\n 1. tx \\<in> T", "using usolves_odeD(2)[OF x]"], ["proof (prove)\nusing this:\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n  tx \\<in> T\n\ngoal (1 subgoal):\n 1. tx \\<in> T", "by auto"], ["proof (state)\nthis:\n  tx \\<in> T\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "have \"z tx = x tx\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z tx = x tx", "using assms prems"], ["proof (prove)\nusing this:\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n  tx \\<in> TS'\n  is_interval TS'\n  TS' \\<subseteq> T \\<union> S\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X\n  z tx = (if tx \\<in> T then x tx else y tx)\n  s \\<in> TS'\n\ngoal (1 subgoal):\n 1. z tx = x tx", "by (simp add: \\<open>tx \\<in> T\\<close>)"], ["proof (state)\nthis:\n  z tx = x tx\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "from usolves_odeD(4)[OF x _ _ _ \\<open>(z solves_ode f) _ _\\<close>, of s] prems"], ["proof (chain)\npicking this:\n  \\<lbrakk>tx \\<in> T \\<inter> TS'; is_interval (T \\<inter> TS');\n   T \\<inter> TS' \\<subseteq> T; z tx = x tx;\n   s \\<in> T \\<inter> TS'\\<rbrakk>\n  \\<Longrightarrow> z s = x s\n  tx \\<in> TS'\n  is_interval TS'\n  TS' \\<subseteq> T \\<union> S\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X\n  z tx = (if tx \\<in> T then x tx else y tx)\n  s \\<in> TS'", "have \"z s = x s\" if \"s \\<in> T\""], ["proof (prove)\nusing this:\n  \\<lbrakk>tx \\<in> T \\<inter> TS'; is_interval (T \\<inter> TS');\n   T \\<inter> TS' \\<subseteq> T; z tx = x tx;\n   s \\<in> T \\<inter> TS'\\<rbrakk>\n  \\<Longrightarrow> z s = x s\n  tx \\<in> TS'\n  is_interval TS'\n  TS' \\<subseteq> T \\<union> S\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X\n  z tx = (if tx \\<in> T then x tx else y tx)\n  s \\<in> TS'\n\ngoal (1 subgoal):\n 1. z s = x s", "using that \\<open>tx \\<in> T\\<close> \\<open>z tx = x tx\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>tx \\<in> T \\<inter> TS'; is_interval (T \\<inter> TS');\n   T \\<inter> TS' \\<subseteq> T; z tx = x tx;\n   s \\<in> T \\<inter> TS'\\<rbrakk>\n  \\<Longrightarrow> z s = x s\n  tx \\<in> TS'\n  is_interval TS'\n  TS' \\<subseteq> T \\<union> S\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X\n  z tx = (if tx \\<in> T then x tx else y tx)\n  s \\<in> TS'\n  s \\<in> T\n  tx \\<in> T\n  z tx = x tx\n\ngoal (1 subgoal):\n 1. z s = x s", "by (auto simp: is_interval_Int usolves_odeD(3)[OF x] \\<open>is_interval TS'\\<close>)"], ["proof (state)\nthis:\n  s \\<in> T \\<Longrightarrow> z s = x s\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "moreover"], ["proof (state)\nthis:\n  s \\<in> T \\<Longrightarrow> z s = x s\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "{"], ["proof (state)\nthis:\n  s \\<in> T \\<Longrightarrow> z s = x s\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "assume \"s \\<notin> T\""], ["proof (state)\nthis:\n  s \\<notin> T\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "then"], ["proof (chain)\npicking this:\n  s \\<notin> T", "have \"s \\<in> S\""], ["proof (prove)\nusing this:\n  s \\<notin> T\n\ngoal (1 subgoal):\n 1. s \\<in> S", "using prems assms"], ["proof (prove)\nusing this:\n  s \\<notin> T\n  tx \\<in> TS'\n  is_interval TS'\n  TS' \\<subseteq> T \\<union> S\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X\n  z tx = (if tx \\<in> T then x tx else y tx)\n  s \\<in> TS'\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n\ngoal (1 subgoal):\n 1. s \\<in> S", "by auto"], ["proof (state)\nthis:\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "{"], ["proof (state)\nthis:\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "assume \"tx \\<notin> S\""], ["proof (state)\nthis:\n  tx \\<notin> S\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "then"], ["proof (chain)\npicking this:\n  tx \\<notin> S", "have \"tx \\<in> T - S\""], ["proof (prove)\nusing this:\n  tx \\<notin> S\n\ngoal (1 subgoal):\n 1. tx \\<in> T - S", "using \\<open>tx \\<in> T\\<close>"], ["proof (prove)\nusing this:\n  tx \\<notin> S\n  tx \\<in> T\n\ngoal (1 subgoal):\n 1. tx \\<in> T - S", "by simp"], ["proof (state)\nthis:\n  tx \\<in> T - S\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "moreover"], ["proof (state)\nthis:\n  tx \\<in> T - S\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "have \"s \\<in> S - T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S - T", "using \\<open>s \\<notin> T\\<close> \\<open>s \\<in> S\\<close>"], ["proof (prove)\nusing this:\n  s \\<notin> T\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. s \\<in> S - T", "by blast"], ["proof (state)\nthis:\n  s \\<in> S - T\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "ultimately"], ["proof (chain)\npicking this:\n  tx \\<in> T - S\n  s \\<in> S - T", "have \"t \\<in> TS'\""], ["proof (prove)\nusing this:\n  tx \\<in> T - S\n  s \\<in> S - T\n\ngoal (1 subgoal):\n 1. t \\<in> TS'", "apply (rule three_intervals_lemma)"], ["proof (prove)\ngoal (6 subgoals):\n 1. t \\<in> T \\<inter> S\n 2. is_interval T\n 3. is_interval S\n 4. tx \\<in> TS'\n 5. s \\<in> TS'\n 6. is_interval TS'", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> T \\<inter> S", "using assms"], ["proof (prove)\nusing this:\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n\ngoal (1 subgoal):\n 1. t \\<in> T \\<inter> S", "by auto"], ["proof (prove)\ngoal (5 subgoals):\n 1. is_interval T\n 2. is_interval S\n 3. tx \\<in> TS'\n 4. s \\<in> TS'\n 5. is_interval TS'", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval T", "using usolves_odeD(3)[OF x]"], ["proof (prove)\nusing this:\n  is_interval T\n\ngoal (1 subgoal):\n 1. is_interval T", "."], ["proof (prove)\ngoal (4 subgoals):\n 1. is_interval S\n 2. tx \\<in> TS'\n 3. s \\<in> TS'\n 4. is_interval TS'", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval S", "using usolves_odeD(3)[OF y[OF conn_t]]"], ["proof (prove)\nusing this:\n  is_interval S\n\ngoal (1 subgoal):\n 1. is_interval S", "."], ["proof (prove)\ngoal (3 subgoals):\n 1. tx \\<in> TS'\n 2. s \\<in> TS'\n 3. is_interval TS'", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. tx \\<in> TS'", "using \\<open>tx \\<in> TS'\\<close>"], ["proof (prove)\nusing this:\n  tx \\<in> TS'\n\ngoal (1 subgoal):\n 1. tx \\<in> TS'", "."], ["proof (prove)\ngoal (2 subgoals):\n 1. s \\<in> TS'\n 2. is_interval TS'", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> TS'", "using \\<open>s \\<in> TS'\\<close>"], ["proof (prove)\nusing this:\n  s \\<in> TS'\n\ngoal (1 subgoal):\n 1. s \\<in> TS'", "."], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval TS'", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval TS'", "using \\<open>is_interval TS'\\<close>"], ["proof (prove)\nusing this:\n  is_interval TS'\n\ngoal (1 subgoal):\n 1. is_interval TS'", "."], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  t \\<in> TS'\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "with assms"], ["proof (chain)\npicking this:\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n  t \\<in> TS'", "have t: \"t \\<in> closure S \\<inter> closure T \\<inter> TS'\""], ["proof (prove)\nusing this:\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n  t \\<in> TS'\n\ngoal (1 subgoal):\n 1. t \\<in> closure S \\<inter> closure T \\<inter> TS'", "by simp"], ["proof (state)\nthis:\n  t \\<in> closure S \\<inter> closure T \\<inter> TS'\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "then"], ["proof (chain)\npicking this:\n  t \\<in> closure S \\<inter> closure T \\<inter> TS'", "have \"t \\<in> S\" \"t \\<in> T\" \"t \\<in> TS'\""], ["proof (prove)\nusing this:\n  t \\<in> closure S \\<inter> closure T \\<inter> TS'\n\ngoal (1 subgoal):\n 1. t \\<in> S &&& t \\<in> T &&& t \\<in> TS'", "using assms"], ["proof (prove)\nusing this:\n  t \\<in> closure S \\<inter> closure T \\<inter> TS'\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n\ngoal (1 subgoal):\n 1. t \\<in> S &&& t \\<in> T &&& t \\<in> TS'", "by auto"], ["proof (state)\nthis:\n  t \\<in> S\n  t \\<in> T\n  t \\<in> TS'\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "have \"z t = x t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z t = x t", "apply (rule usolves_odeD(4)[OF x _ _ _ z_f, of t])"], ["proof (prove)\ngoal (5 subgoals):\n 1. tx \\<in> T \\<inter> TS'\n 2. is_interval (T \\<inter> TS')\n 3. T \\<inter> TS' \\<subseteq> T\n 4. z tx = x tx\n 5. t \\<in> T \\<inter> TS'", "using \\<open>t \\<in> TS'\\<close> \\<open>t \\<in> T\\<close> prems assms \\<open>tx \\<in> T\\<close> usolves_odeD(3)[OF x]"], ["proof (prove)\nusing this:\n  t \\<in> TS'\n  t \\<in> T\n  tx \\<in> TS'\n  is_interval TS'\n  TS' \\<subseteq> T \\<union> S\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X\n  z tx = (if tx \\<in> T then x tx else y tx)\n  s \\<in> TS'\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n  tx \\<in> T\n  is_interval T\n\ngoal (5 subgoals):\n 1. tx \\<in> T \\<inter> TS'\n 2. is_interval (T \\<inter> TS')\n 3. T \\<inter> TS' \\<subseteq> T\n 4. z tx = x tx\n 5. t \\<in> T \\<inter> TS'", "by (auto intro!: is_interval_Int)"], ["proof (state)\nthis:\n  z t = x t\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "with assms"], ["proof (chain)\npicking this:\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n  z t = x t", "have \"z t = y t\""], ["proof (prove)\nusing this:\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n  z t = x t\n\ngoal (1 subgoal):\n 1. z t = y t", "using t"], ["proof (prove)\nusing this:\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n  z t = x t\n  t \\<in> closure S \\<inter> closure T \\<inter> TS'\n\ngoal (1 subgoal):\n 1. z t = y t", "by auto"], ["proof (state)\nthis:\n  z t = y t\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "from usolves_odeD(4)[OF y[OF conn_t] _ _ _ z_g, of s] prems"], ["proof (chain)\npicking this:\n  \\<lbrakk>t \\<in> S \\<inter> TS'; is_interval (S \\<inter> TS');\n   S \\<inter> TS' \\<subseteq> S; z t = y t; s \\<in> S \\<inter> TS'\\<rbrakk>\n  \\<Longrightarrow> z s = y s\n  tx \\<in> TS'\n  is_interval TS'\n  TS' \\<subseteq> T \\<union> S\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X\n  z tx = (if tx \\<in> T then x tx else y tx)\n  s \\<in> TS'", "have \"z s = y s\""], ["proof (prove)\nusing this:\n  \\<lbrakk>t \\<in> S \\<inter> TS'; is_interval (S \\<inter> TS');\n   S \\<inter> TS' \\<subseteq> S; z t = y t; s \\<in> S \\<inter> TS'\\<rbrakk>\n  \\<Longrightarrow> z s = y s\n  tx \\<in> TS'\n  is_interval TS'\n  TS' \\<subseteq> T \\<union> S\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X\n  z tx = (if tx \\<in> T then x tx else y tx)\n  s \\<in> TS'\n\ngoal (1 subgoal):\n 1. z s = y s", "using \\<open>s \\<notin> T\\<close> assms \\<open>z t = y t\\<close> t \\<open>t \\<in> S\\<close>\n          \\<open>is_interval TS'\\<close> usolves_odeD(3)[OF y[OF conn_t]]"], ["proof (prove)\nusing this:\n  \\<lbrakk>t \\<in> S \\<inter> TS'; is_interval (S \\<inter> TS');\n   S \\<inter> TS' \\<subseteq> S; z t = y t; s \\<in> S \\<inter> TS'\\<rbrakk>\n  \\<Longrightarrow> z s = y s\n  tx \\<in> TS'\n  is_interval TS'\n  TS' \\<subseteq> T \\<union> S\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X\n  z tx = (if tx \\<in> T then x tx else y tx)\n  s \\<in> TS'\n  s \\<notin> T\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n  z t = y t\n  t \\<in> closure S \\<inter> closure T \\<inter> TS'\n  t \\<in> S\n  is_interval TS'\n  is_interval S\n\ngoal (1 subgoal):\n 1. z s = y s", "by (auto simp: is_interval_Int)"], ["proof (state)\nthis:\n  z s = y s\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "}"], ["proof (state)\nthis:\n  tx \\<notin> S \\<Longrightarrow> z s = y s\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "moreover"], ["proof (state)\nthis:\n  tx \\<notin> S \\<Longrightarrow> z s = y s\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "{"], ["proof (state)\nthis:\n  tx \\<notin> S \\<Longrightarrow> z s = y s\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "assume \"tx \\<in> S\""], ["proof (state)\nthis:\n  tx \\<in> S\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "with prems closure_subset \\<open>tx \\<in> T\\<close>"], ["proof (chain)\npicking this:\n  tx \\<in> TS'\n  is_interval TS'\n  TS' \\<subseteq> T \\<union> S\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X\n  z tx = (if tx \\<in> T then x tx else y tx)\n  s \\<in> TS'\n  ?S \\<subseteq> closure ?S\n  tx \\<in> T\n  tx \\<in> S", "have tx: \"tx \\<in> closure S \\<inter> closure T \\<inter> TS'\""], ["proof (prove)\nusing this:\n  tx \\<in> TS'\n  is_interval TS'\n  TS' \\<subseteq> T \\<union> S\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X\n  z tx = (if tx \\<in> T then x tx else y tx)\n  s \\<in> TS'\n  ?S \\<subseteq> closure ?S\n  tx \\<in> T\n  tx \\<in> S\n\ngoal (1 subgoal):\n 1. tx \\<in> closure S \\<inter> closure T \\<inter> TS'", "by force"], ["proof (state)\nthis:\n  tx \\<in> closure S \\<inter> closure T \\<inter> TS'\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "then"], ["proof (chain)\npicking this:\n  tx \\<in> closure S \\<inter> closure T \\<inter> TS'", "have \"tx \\<in> S\" \"tx \\<in> T\" \"tx \\<in> TS'\""], ["proof (prove)\nusing this:\n  tx \\<in> closure S \\<inter> closure T \\<inter> TS'\n\ngoal (1 subgoal):\n 1. tx \\<in> S &&& tx \\<in> T &&& tx \\<in> TS'", "using assms"], ["proof (prove)\nusing this:\n  tx \\<in> closure S \\<inter> closure T \\<inter> TS'\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n\ngoal (1 subgoal):\n 1. tx \\<in> S &&& tx \\<in> T &&& tx \\<in> TS'", "by auto"], ["proof (state)\nthis:\n  tx \\<in> S\n  tx \\<in> T\n  tx \\<in> TS'\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "have \"z tx = x tx\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z tx = x tx", "apply (rule usolves_odeD(4)[OF x _ _ _ z_f, of tx])"], ["proof (prove)\ngoal (5 subgoals):\n 1. tx \\<in> T \\<inter> TS'\n 2. is_interval (T \\<inter> TS')\n 3. T \\<inter> TS' \\<subseteq> T\n 4. z tx = x tx\n 5. tx \\<in> T \\<inter> TS'", "using \\<open>tx \\<in> TS'\\<close> \\<open>tx \\<in> T\\<close> prems assms \\<open>tx \\<in> T\\<close> usolves_odeD(3)[OF x]"], ["proof (prove)\nusing this:\n  tx \\<in> TS'\n  tx \\<in> T\n  tx \\<in> TS'\n  is_interval TS'\n  TS' \\<subseteq> T \\<union> S\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X\n  z tx = (if tx \\<in> T then x tx else y tx)\n  s \\<in> TS'\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n  tx \\<in> T\n  is_interval T\n\ngoal (5 subgoals):\n 1. tx \\<in> T \\<inter> TS'\n 2. is_interval (T \\<inter> TS')\n 3. T \\<inter> TS' \\<subseteq> T\n 4. z tx = x tx\n 5. tx \\<in> T \\<inter> TS'", "by (auto intro!: is_interval_Int)"], ["proof (state)\nthis:\n  z tx = x tx\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "with assms"], ["proof (chain)\npicking this:\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n  z tx = x tx", "have \"z tx = y tx\""], ["proof (prove)\nusing this:\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n  z tx = x tx\n\ngoal (1 subgoal):\n 1. z tx = y tx", "using tx"], ["proof (prove)\nusing this:\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n  z tx = x tx\n  tx \\<in> closure S \\<inter> closure T \\<inter> TS'\n\ngoal (1 subgoal):\n 1. z tx = y tx", "by auto"], ["proof (state)\nthis:\n  z tx = y tx\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "from usolves_odeD(4)[OF y[where t=tx] _ _ _ z_g, of s] prems"], ["proof (chain)\npicking this:\n  \\<lbrakk>tx \\<in> closure S \\<inter> closure T; tx \\<in> S \\<inter> TS';\n   is_interval (S \\<inter> TS'); S \\<inter> TS' \\<subseteq> S; z tx = y tx;\n   s \\<in> S \\<inter> TS'\\<rbrakk>\n  \\<Longrightarrow> z s = y s\n  tx \\<in> TS'\n  is_interval TS'\n  TS' \\<subseteq> T \\<union> S\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X\n  z tx = (if tx \\<in> T then x tx else y tx)\n  s \\<in> TS'", "have \"z s = y s\""], ["proof (prove)\nusing this:\n  \\<lbrakk>tx \\<in> closure S \\<inter> closure T; tx \\<in> S \\<inter> TS';\n   is_interval (S \\<inter> TS'); S \\<inter> TS' \\<subseteq> S; z tx = y tx;\n   s \\<in> S \\<inter> TS'\\<rbrakk>\n  \\<Longrightarrow> z s = y s\n  tx \\<in> TS'\n  is_interval TS'\n  TS' \\<subseteq> T \\<union> S\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X\n  z tx = (if tx \\<in> T then x tx else y tx)\n  s \\<in> TS'\n\ngoal (1 subgoal):\n 1. z s = y s", "using \\<open>s \\<notin> T\\<close> assms \\<open>z tx = y tx\\<close> tx \\<open>tx \\<in> S\\<close>\n          \\<open>is_interval TS'\\<close> usolves_odeD(3)[OF y]"], ["proof (prove)\nusing this:\n  \\<lbrakk>tx \\<in> closure S \\<inter> closure T; tx \\<in> S \\<inter> TS';\n   is_interval (S \\<inter> TS'); S \\<inter> TS' \\<subseteq> S; z tx = y tx;\n   s \\<in> S \\<inter> TS'\\<rbrakk>\n  \\<Longrightarrow> z s = y s\n  tx \\<in> TS'\n  is_interval TS'\n  TS' \\<subseteq> T \\<union> S\n  (z solves_ode (\\<lambda>t. if t \\<in> T then f t else g t)) TS' X\n  z tx = (if tx \\<in> T then x tx else y tx)\n  s \\<in> TS'\n  s \\<notin> T\n  (x usolves_ode f from tx) T X\n  ?t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n  (y usolves_ode g from ?t) S X\n  closure S \\<inter> closure T \\<subseteq> T\n  closure S \\<inter> closure T \\<subseteq> S\n  t \\<in> closure S \\<inter> closure T\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T\\<rbrakk>\n  \\<Longrightarrow> x ?t = y ?t\n  \\<lbrakk>?t \\<in> closure S; ?t \\<in> closure T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> f ?t ?x = g ?t ?x\n  z tx = y tx\n  tx \\<in> closure S \\<inter> closure T \\<inter> TS'\n  tx \\<in> S\n  is_interval TS'\n  ?t0.0 \\<in> closure S \\<inter> closure T \\<Longrightarrow> is_interval S\n\ngoal (1 subgoal):\n 1. z s = y s", "by (auto simp: is_interval_Int)"], ["proof (state)\nthis:\n  z s = y s\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "}"], ["proof (state)\nthis:\n  tx \\<in> S \\<Longrightarrow> z s = y s\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "ultimately"], ["proof (chain)\npicking this:\n  tx \\<notin> S \\<Longrightarrow> z s = y s\n  tx \\<in> S \\<Longrightarrow> z s = y s", "have \"z s = y s\""], ["proof (prove)\nusing this:\n  tx \\<notin> S \\<Longrightarrow> z s = y s\n  tx \\<in> S \\<Longrightarrow> z s = y s\n\ngoal (1 subgoal):\n 1. z s = y s", "by blast"], ["proof (state)\nthis:\n  z s = y s\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "}"], ["proof (state)\nthis:\n  s \\<notin> T \\<Longrightarrow> z s = y s\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "ultimately"], ["proof (chain)\npicking this:\n  s \\<in> T \\<Longrightarrow> z s = x s\n  s \\<notin> T \\<Longrightarrow> z s = y s", "show \"z s = (if s \\<in> T then x s else y s)\""], ["proof (prove)\nusing this:\n  s \\<in> T \\<Longrightarrow> z s = x s\n  s \\<notin> T \\<Longrightarrow> z s = y s\n\ngoal (1 subgoal):\n 1. z s = (if s \\<in> T then x s else y s)", "by simp"], ["proof (state)\nthis:\n  z s = (if s \\<in> T then x s else y s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma usolves_ode_union_closed:\n  assumes x: \"(x usolves_ode f from tx) T X\"\n  assumes y: \"\\<And>t. t \\<in> closure S \\<inter> closure T \\<Longrightarrow> (x usolves_ode f from t) S X\"\n  assumes conn_T: \"closure S \\<inter> closure T \\<subseteq> T\"\n  assumes conn_S: \"closure S \\<inter> closure T \\<subseteq> S\"\n  assumes conn_t: \"t \\<in> closure S \\<inter> closure T\"\n  shows \"(x usolves_ode f from tx) (T \\<union> S) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x usolves_ode f from tx) (T \\<union> S) X", "using connection_usolves_ode[OF assms]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>t.\n              t \\<in> closure S \\<inter> closure T \\<Longrightarrow>\n              t \\<in> closure S \\<inter> closure T;\n   \\<And>t.\n      \\<lbrakk>t \\<in> closure S; t \\<in> closure T\\<rbrakk>\n      \\<Longrightarrow> x t = x t;\n   \\<And>t x.\n      \\<lbrakk>t \\<in> closure S; t \\<in> closure T; x \\<in> X\\<rbrakk>\n      \\<Longrightarrow> f t x = f t x\\<rbrakk>\n  \\<Longrightarrow> ((\\<lambda>t.\n                         if t \\<in> T then x t\n                         else x t) usolves_ode (\\<lambda>t.\n             if t \\<in> T then f t else f t) from tx)\n                     (T \\<union> S) X\n\ngoal (1 subgoal):\n 1. (x usolves_ode f from tx) (T \\<union> S) X", "by simp"], ["", "lemma usolves_ode_solves_odeI:\n  assumes \"(x usolves_ode f from tx) T X\"\n  assumes \"(y solves_ode f) T X\" \"y tx = x tx\"\n  shows \"(y usolves_ode f from tx) T X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y usolves_ode f from tx) T X", "using assms(1)"], ["proof (prove)\nusing this:\n  (x usolves_ode f from tx) T X\n\ngoal (1 subgoal):\n 1. (y usolves_ode f from tx) T X", "apply (rule usolves_ode_congI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>t. t \\<in> T \\<Longrightarrow> x t = y t\n 2. \\<And>t y.\n       \\<lbrakk>t \\<in> T; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> f t y = f t y\n 3. tx = tx\n 4. T = T\n 5. X = X", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t_ \\<in> T \\<Longrightarrow> x t_ = y t_", "using assms"], ["proof (prove)\nusing this:\n  (x usolves_ode f from tx) T X\n  (y solves_ode f) T X\n  y tx = x tx\n\ngoal (1 subgoal):\n 1. t_ \\<in> T \\<Longrightarrow> x t_ = y t_", "by (metis set_eq_subset usolves_odeD(2) usolves_odeD(3) usolves_odeD(4))"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t y.\n       \\<lbrakk>t \\<in> T; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> f t y = f t y\n 2. tx = tx\n 3. T = T\n 4. X = X", "by auto"], ["", "lemma usolves_ode_subset_range:\n  assumes x: \"(x usolves_ode f from t0) T X\"\n  assumes r: \"x ` T \\<subseteq> Y\" and \"Y \\<subseteq> X\"\n  shows \"(x usolves_ode f from t0) T Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x usolves_ode f from t0) T Y", "proof (rule usolves_odeI)"], ["proof (state)\ngoal (4 subgoals):\n 1. (x solves_ode f) T Y\n 2. t0 \\<in> T\n 3. is_interval T\n 4. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "note usolves_odeD[OF x]"], ["proof (state)\nthis:\n  (x solves_ode f) T X\n  t0 \\<in> T\n  is_interval T\n  \\<lbrakk>t0 \\<in> ?T'; is_interval ?T'; ?T' \\<subseteq> T;\n   (?z solves_ode f) ?T' X; ?z t0 = x t0; ?t \\<in> ?T'\\<rbrakk>\n  \\<Longrightarrow> ?z ?t = x ?t\n\ngoal (4 subgoals):\n 1. (x solves_ode f) T Y\n 2. t0 \\<in> T\n 3. is_interval T\n 4. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "show \"(x solves_ode f) T Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x solves_ode f) T Y", "by (rule solves_ode_subset_range; fact)"], ["proof (state)\nthis:\n  (x solves_ode f) T Y\n\ngoal (3 subgoals):\n 1. t0 \\<in> T\n 2. is_interval T\n 3. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "show \"t0 \\<in> T\" \"is_interval T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> T &&& is_interval T", "by fact+"], ["proof (state)\nthis:\n  t0 \\<in> T\n  is_interval T\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "fix z t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "assume s: \"{t0 -- t} \\<subseteq> T\" and z: \"(z solves_ode f) {t0 -- t} Y\" and z0: \"z t0 = x t0\""], ["proof (state)\nthis:\n  {t0--t} \\<subseteq> T\n  (z solves_ode f) {t0--t} Y\n  z t0 = x t0\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "then"], ["proof (chain)\npicking this:\n  {t0--t} \\<subseteq> T\n  (z solves_ode f) {t0--t} Y\n  z t0 = x t0", "have \"t0 \\<in> {t0 -- t}\" \"is_interval {t0 -- t}\""], ["proof (prove)\nusing this:\n  {t0--t} \\<subseteq> T\n  (z solves_ode f) {t0--t} Y\n  z t0 = x t0\n\ngoal (1 subgoal):\n 1. t0 \\<in> {t0--t} &&& is_interval {t0--t}", "by auto"], ["proof (state)\nthis:\n  t0 \\<in> {t0--t}\n  is_interval {t0--t}\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "moreover"], ["proof (state)\nthis:\n  t0 \\<in> {t0--t}\n  is_interval {t0--t}\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "note s"], ["proof (state)\nthis:\n  {t0--t} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "moreover"], ["proof (state)\nthis:\n  {t0--t} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "have \"(z solves_ode f) {t0--t} X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z solves_ode f) {t0--t} X", "using solves_odeD[OF z] \\<open>Y \\<subseteq> X\\<close>"], ["proof (prove)\nusing this:\n  (z has_vderiv_on (\\<lambda>t. f t (z t))) {t0--t}\n  ?t \\<in> {t0--t} \\<Longrightarrow> z ?t \\<in> Y\n  Y \\<subseteq> X\n\ngoal (1 subgoal):\n 1. (z solves_ode f) {t0--t} X", "by (intro solves_ode_subset_range[OF z]) force"], ["proof (state)\nthis:\n  (z solves_ode f) {t0--t} X\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "moreover"], ["proof (state)\nthis:\n  (z solves_ode f) {t0--t} X\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "note z0"], ["proof (state)\nthis:\n  z t0 = x t0\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "moreover"], ["proof (state)\nthis:\n  z t0 = x t0\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "have \"t \\<in> {t0 -- t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> {t0--t}", "by simp"], ["proof (state)\nthis:\n  t \\<in> {t0--t}\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "ultimately"], ["proof (chain)\npicking this:\n  t0 \\<in> {t0--t}\n  is_interval {t0--t}\n  {t0--t} \\<subseteq> T\n  (z solves_ode f) {t0--t} X\n  z t0 = x t0\n  t \\<in> {t0--t}", "show \"z t = x t\""], ["proof (prove)\nusing this:\n  t0 \\<in> {t0--t}\n  is_interval {t0--t}\n  {t0--t} \\<subseteq> T\n  (z solves_ode f) {t0--t} X\n  z t0 = x t0\n  t \\<in> {t0--t}\n\ngoal (1 subgoal):\n 1. z t = x t", "by (rule usolves_odeD[OF x])"], ["proof (state)\nthis:\n  z t = x t\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>ivp on interval\\<close>"], ["", "context\n  fixes t0 t1::real and T\n  defines \"T \\<equiv> closed_segment t0 t1\"\nbegin"], ["", "lemma is_solution_ext_cont:\n  \"continuous_on T x \\<Longrightarrow> (ext_cont x (min t0 t1) (max t0 t1) solves_ode f) T X = (x solves_ode f) T X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on T x \\<Longrightarrow>\n    (ext_cont x (min t0 t1) (max t0 t1) solves_ode f) T X =\n    (x solves_ode f) T X", "by (rule solves_ode_cong) (auto simp add: T_def min_def max_def closed_segment_eq_real_ivl)"], ["", "lemma solution_fixed_point:\n  fixes x:: \"real \\<Rightarrow> 'a::banach\"\n  assumes x: \"(x solves_ode f) T X\" and t: \"t \\<in> T\"\n  shows \"x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) = x t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) = x t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) = x t", "from solves_odeD(1)[OF x, unfolded T_def]"], ["proof (chain)\npicking this:\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) {t0--t1}", "have \"(x has_vderiv_on (\\<lambda>t. f t (x t))) (closed_segment t0 t)\""], ["proof (prove)\nusing this:\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) {t0--t1}\n\ngoal (1 subgoal):\n 1. (x has_vderiv_on (\\<lambda>t. f t (x t))) {t0--t}", "by (rule has_vderiv_on_subset) (insert \\<open>t \\<in> T\\<close>, auto simp: closed_segment_eq_real_ivl T_def)"], ["proof (state)\nthis:\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) {t0--t}\n\ngoal (1 subgoal):\n 1. x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) = x t", "from fundamental_theorem_of_calculus_ivl_integral[OF this]"], ["proof (chain)\npicking this:\n  ((\\<lambda>t. f t (x t)) has_ivl_integral x t - x t0) t0 t", "have \"((\\<lambda>t. f t (x t)) has_ivl_integral x t - x t0) t0 t\""], ["proof (prove)\nusing this:\n  ((\\<lambda>t. f t (x t)) has_ivl_integral x t - x t0) t0 t\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. f t (x t)) has_ivl_integral x t - x t0) t0 t", "."], ["proof (state)\nthis:\n  ((\\<lambda>t. f t (x t)) has_ivl_integral x t - x t0) t0 t\n\ngoal (1 subgoal):\n 1. x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) = x t", "from this[THEN ivl_integral_unique]"], ["proof (chain)\npicking this:\n  ivl_integral t0 t (\\<lambda>t. f t (x t)) = x t - x t0", "show ?thesis"], ["proof (prove)\nusing this:\n  ivl_integral t0 t (\\<lambda>t. f t (x t)) = x t - x t0\n\ngoal (1 subgoal):\n 1. x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) = x t", "by simp"], ["proof (state)\nthis:\n  x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) = x t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma solution_fixed_point_left:\n  fixes x:: \"real \\<Rightarrow> 'a::banach\"\n  assumes x: \"(x solves_ode f) T X\" and t: \"t \\<in> T\"\n  shows \"x t1 - ivl_integral t t1 (\\<lambda>t. f t (x t)) = x t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x t1 - ivl_integral t t1 (\\<lambda>t. f t (x t)) = x t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x t1 - ivl_integral t t1 (\\<lambda>t. f t (x t)) = x t", "from solves_odeD(1)[OF x, unfolded T_def]"], ["proof (chain)\npicking this:\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) {t0--t1}", "have \"(x has_vderiv_on (\\<lambda>t. f t (x t))) (closed_segment t t1)\""], ["proof (prove)\nusing this:\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) {t0--t1}\n\ngoal (1 subgoal):\n 1. (x has_vderiv_on (\\<lambda>t. f t (x t))) {t--t1}", "by (rule has_vderiv_on_subset) (insert \\<open>t \\<in> T\\<close>, auto simp: closed_segment_eq_real_ivl T_def)"], ["proof (state)\nthis:\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) {t--t1}\n\ngoal (1 subgoal):\n 1. x t1 - ivl_integral t t1 (\\<lambda>t. f t (x t)) = x t", "from fundamental_theorem_of_calculus_ivl_integral[OF this]"], ["proof (chain)\npicking this:\n  ((\\<lambda>t. f t (x t)) has_ivl_integral x t1 - x t) t t1", "have \"((\\<lambda>t. f t (x t)) has_ivl_integral x t1 - x t) t t1\""], ["proof (prove)\nusing this:\n  ((\\<lambda>t. f t (x t)) has_ivl_integral x t1 - x t) t t1\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. f t (x t)) has_ivl_integral x t1 - x t) t t1", "."], ["proof (state)\nthis:\n  ((\\<lambda>t. f t (x t)) has_ivl_integral x t1 - x t) t t1\n\ngoal (1 subgoal):\n 1. x t1 - ivl_integral t t1 (\\<lambda>t. f t (x t)) = x t", "from this[THEN ivl_integral_unique]"], ["proof (chain)\npicking this:\n  ivl_integral t t1 (\\<lambda>t. f t (x t)) = x t1 - x t", "show ?thesis"], ["proof (prove)\nusing this:\n  ivl_integral t t1 (\\<lambda>t. f t (x t)) = x t1 - x t\n\ngoal (1 subgoal):\n 1. x t1 - ivl_integral t t1 (\\<lambda>t. f t (x t)) = x t", "by simp"], ["proof (state)\nthis:\n  x t1 - ivl_integral t t1 (\\<lambda>t. f t (x t)) = x t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma solution_fixed_pointI:\n  fixes x:: \"real \\<Rightarrow> 'a::banach\"\n  assumes cont_f: \"continuous_on (T \\<times> X) (\\<lambda>(t, x). f t x)\"\n  assumes cont_x: \"continuous_on T x\"\n  assumes defined: \"\\<And>t. t \\<in> T \\<Longrightarrow> x t \\<in> X\"\n  assumes fp: \"\\<And>t. t \\<in> T \\<Longrightarrow> x t = x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t))\"\n  shows \"(x solves_ode f) T X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x solves_ode f) T X", "proof (rule solves_odeI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (x has_vderiv_on (\\<lambda>t. f t (x t))) T\n 2. \\<And>t. t \\<in> T \\<Longrightarrow> x t \\<in> X", "note [continuous_intros] = continuous_on_compose_Pair[OF cont_f]"], ["proof (state)\nthis:\n  \\<lbrakk>continuous_on ?C ?g; continuous_on ?C ?h;\n   \\<And>c. c \\<in> ?C \\<Longrightarrow> ?g c \\<in> T;\n   \\<And>c. c \\<in> ?C \\<Longrightarrow> ?h c \\<in> X\\<rbrakk>\n  \\<Longrightarrow> continuous_on ?C (\\<lambda>c. f (?g c) (?h c))\n\ngoal (2 subgoals):\n 1. (x has_vderiv_on (\\<lambda>t. f t (x t))) T\n 2. \\<And>t. t \\<in> T \\<Longrightarrow> x t \\<in> X", "have \"((\\<lambda>t. x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t))) has_vderiv_on (\\<lambda>t. f t (x t))) T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t))) has_vderiv_on\n     (\\<lambda>t. f t (x t)))\n     T", "using cont_x defined"], ["proof (prove)\nusing this:\n  continuous_on T x\n  ?t \\<in> T \\<Longrightarrow> x ?t \\<in> X\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t))) has_vderiv_on\n     (\\<lambda>t. f t (x t)))\n     T", "by (auto intro!: derivative_eq_intros ivl_integral_has_vector_derivative\n      continuous_intros\n      simp: has_vderiv_on_def T_def)"], ["proof (state)\nthis:\n  ((\\<lambda>t.\n       x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t))) has_vderiv_on\n   (\\<lambda>t. f t (x t)))\n   T\n\ngoal (2 subgoals):\n 1. (x has_vderiv_on (\\<lambda>t. f t (x t))) T\n 2. \\<And>t. t \\<in> T \\<Longrightarrow> x t \\<in> X", "with fp"], ["proof (chain)\npicking this:\n  ?t \\<in> T \\<Longrightarrow>\n  x ?t = x t0 + ivl_integral t0 ?t (\\<lambda>t. f t (x t))\n  ((\\<lambda>t.\n       x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t))) has_vderiv_on\n   (\\<lambda>t. f t (x t)))\n   T", "show \"(x has_vderiv_on (\\<lambda>t. f t (x t))) T\""], ["proof (prove)\nusing this:\n  ?t \\<in> T \\<Longrightarrow>\n  x ?t = x t0 + ivl_integral t0 ?t (\\<lambda>t. f t (x t))\n  ((\\<lambda>t.\n       x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t))) has_vderiv_on\n   (\\<lambda>t. f t (x t)))\n   T\n\ngoal (1 subgoal):\n 1. (x has_vderiv_on (\\<lambda>t. f t (x t))) T", "by simp"], ["proof (state)\nthis:\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) T\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> T \\<Longrightarrow> x t \\<in> X", "qed (simp add: defined)"], ["", "end"], ["", "lemma solves_ode_half_open_segment_continuation:\n  fixes f::\"real \\<Rightarrow> 'a \\<Rightarrow> 'a::banach\"\n  assumes ode: \"(x solves_ode f) {t0 --< t1} X\"\n  assumes continuous: \"continuous_on ({t0 -- t1} \\<times> X) (\\<lambda>(t, x). f t x)\"\n  assumes \"compact X\"\n  assumes \"t0 \\<noteq> t1\"\n  obtains l where\n    \"(x \\<longlongrightarrow> l) (at t1 within {t0 --< t1})\"\n    \"((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0 -- t1} X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>(x \\<longlongrightarrow> l) (at t1 within {t0--<t1});\n         ((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0--t1}\n          X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>(x \\<longlongrightarrow> l) (at t1 within {t0--<t1});\n         ((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0--t1}\n          X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note [continuous_intros] = continuous_on_compose_Pair[OF continuous]"], ["proof (state)\nthis:\n  \\<lbrakk>continuous_on ?C ?g; continuous_on ?C ?h;\n   \\<And>c. c \\<in> ?C \\<Longrightarrow> ?g c \\<in> {t0--t1};\n   \\<And>c. c \\<in> ?C \\<Longrightarrow> ?h c \\<in> X\\<rbrakk>\n  \\<Longrightarrow> continuous_on ?C (\\<lambda>c. f (?g c) (?h c))\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>(x \\<longlongrightarrow> l) (at t1 within {t0--<t1});\n         ((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0--t1}\n          X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"compact ((\\<lambda>(t, x). f t x) ` ({t0 -- t1} \\<times> X))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact ((\\<lambda>(t, x). f t x) ` ({t0--t1} \\<times> X))", "by (auto intro!: compact_continuous_image continuous_intros compact_Times \\<open>compact X\\<close>\n      simp: split_beta)"], ["proof (state)\nthis:\n  compact ((\\<lambda>(t, x). f t x) ` ({t0--t1} \\<times> X))\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>(x \\<longlongrightarrow> l) (at t1 within {t0--<t1});\n         ((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0--t1}\n          X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  compact ((\\<lambda>(t, x). f t x) ` ({t0--t1} \\<times> X))", "obtain B where \"B > 0\" and B: \"\\<And>t x. t \\<in> {t0 -- t1} \\<Longrightarrow> x \\<in> X \\<Longrightarrow> norm (f t x) \\<le> B\""], ["proof (prove)\nusing this:\n  compact ((\\<lambda>(t, x). f t x) ` ({t0--t1} \\<times> X))\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>0 < B;\n         \\<And>t x.\n            \\<lbrakk>t \\<in> {t0--t1}; x \\<in> X\\<rbrakk>\n            \\<Longrightarrow> norm (f t x) \\<le> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest!: compact_imp_bounded simp: bounded_pos)"], ["proof (state)\nthis:\n  0 < B\n  \\<lbrakk>?t \\<in> {t0--t1}; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> norm (f ?t ?x) \\<le> B\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>(x \\<longlongrightarrow> l) (at t1 within {t0--<t1});\n         ((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0--t1}\n          X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have uc: \"uniformly_continuous_on {t0 --< t1} x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniformly_continuous_on {t0--<t1} x", "apply (rule lipschitz_on_uniformly_continuous[where L=B])"], ["proof (prove)\ngoal (1 subgoal):\n 1. B-lipschitz_on {t0--<t1} x", "apply (rule bounded_vderiv_on_imp_lipschitz)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (x has_vderiv_on ?f'2) {t0--<t1}\n 2. convex {t0--<t1}\n 3. \\<And>x. x \\<in> {t0--<t1} \\<Longrightarrow> norm (?f'2 x) \\<le> B\n 4. 0 \\<le> B", "apply (rule solves_odeD[OF ode])"], ["proof (prove)\ngoal (3 subgoals):\n 1. convex {t0--<t1}\n 2. \\<And>xa.\n       xa \\<in> {t0--<t1} \\<Longrightarrow> norm (f xa (x xa)) \\<le> B\n 3. 0 \\<le> B", "using solves_odeD(2)[OF ode] \\<open>0 < B\\<close>"], ["proof (prove)\nusing this:\n  ?t \\<in> {t0--<t1} \\<Longrightarrow> x ?t \\<in> X\n  0 < B\n\ngoal (3 subgoals):\n 1. convex {t0--<t1}\n 2. \\<And>xa.\n       xa \\<in> {t0--<t1} \\<Longrightarrow> norm (f xa (x xa)) \\<le> B\n 3. 0 \\<le> B", "by (auto simp: closed_segment_eq_real_ivl half_open_segment_real subset_iff\n      intro!: B split: if_split_asm)"], ["proof (state)\nthis:\n  uniformly_continuous_on {t0--<t1} x\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>(x \\<longlongrightarrow> l) (at t1 within {t0--<t1});\n         ((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0--t1}\n          X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"t1 \\<in> closure ({t0 --< t1})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t1 \\<in> closure {t0--<t1}", "using closure_half_open_segment[of t0 t1] \\<open>t0 \\<noteq> t1\\<close>"], ["proof (prove)\nusing this:\n  closure {t0--<t1} = (if t0 = t1 then {} else {t0--t1})\n  t0 \\<noteq> t1\n\ngoal (1 subgoal):\n 1. t1 \\<in> closure {t0--<t1}", "by simp"], ["proof (state)\nthis:\n  t1 \\<in> closure {t0--<t1}\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>(x \\<longlongrightarrow> l) (at t1 within {t0--<t1});\n         ((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0--t1}\n          X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from uniformly_continuous_on_extension_on_closure[OF uc]"], ["proof (chain)\npicking this:\n  (\\<And>g.\n      \\<lbrakk>uniformly_continuous_on (closure {t0--<t1}) g;\n       \\<And>xa. xa \\<in> {t0--<t1} \\<Longrightarrow> x xa = g xa;\n       \\<And>Y h xa.\n          \\<lbrakk>{t0--<t1} \\<subseteq> Y; Y \\<subseteq> closure {t0--<t1};\n           continuous_on Y h;\n           \\<And>xa. xa \\<in> {t0--<t1} \\<Longrightarrow> x xa = h xa;\n           xa \\<in> Y\\<rbrakk>\n          \\<Longrightarrow> h xa = g xa\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain g where uc_g: \"uniformly_continuous_on {t0--t1} g\"\n    and xg: \"(\\<And>t. t \\<in> {t0 --< t1} \\<Longrightarrow> x t = g t)\""], ["proof (prove)\nusing this:\n  (\\<And>g.\n      \\<lbrakk>uniformly_continuous_on (closure {t0--<t1}) g;\n       \\<And>xa. xa \\<in> {t0--<t1} \\<Longrightarrow> x xa = g xa;\n       \\<And>Y h xa.\n          \\<lbrakk>{t0--<t1} \\<subseteq> Y; Y \\<subseteq> closure {t0--<t1};\n           continuous_on Y h;\n           \\<And>xa. xa \\<in> {t0--<t1} \\<Longrightarrow> x xa = h xa;\n           xa \\<in> Y\\<rbrakk>\n          \\<Longrightarrow> h xa = g xa\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>uniformly_continuous_on {t0--t1} g;\n         \\<And>t. t \\<in> {t0--<t1} \\<Longrightarrow> x t = g t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using closure_half_open_segment[of t0 t1] \\<open>t0 \\<noteq> t1\\<close>"], ["proof (prove)\nusing this:\n  (\\<And>g.\n      \\<lbrakk>uniformly_continuous_on (closure {t0--<t1}) g;\n       \\<And>xa. xa \\<in> {t0--<t1} \\<Longrightarrow> x xa = g xa;\n       \\<And>Y h xa.\n          \\<lbrakk>{t0--<t1} \\<subseteq> Y; Y \\<subseteq> closure {t0--<t1};\n           continuous_on Y h;\n           \\<And>xa. xa \\<in> {t0--<t1} \\<Longrightarrow> x xa = h xa;\n           xa \\<in> Y\\<rbrakk>\n          \\<Longrightarrow> h xa = g xa\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  closure {t0--<t1} = (if t0 = t1 then {} else {t0--t1})\n  t0 \\<noteq> t1\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>uniformly_continuous_on {t0--t1} g;\n         \\<And>t. t \\<in> {t0--<t1} \\<Longrightarrow> x t = g t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  uniformly_continuous_on {t0--t1} g\n  ?t \\<in> {t0--<t1} \\<Longrightarrow> x ?t = g ?t\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>(x \\<longlongrightarrow> l) (at t1 within {t0--<t1});\n         ((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0--t1}\n          X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from uc_g[THEN uniformly_continuous_imp_continuous, unfolded continuous_on_def]"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>{t0--t1}.\n     (g \\<longlongrightarrow> g x) (at x within {t0--t1})", "have \"(g \\<longlongrightarrow> g t) (at t within {t0--t1})\" if \"t\\<in>{t0--t1}\" for t"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{t0--t1}.\n     (g \\<longlongrightarrow> g x) (at x within {t0--t1})\n\ngoal (1 subgoal):\n 1. (g \\<longlongrightarrow> g t) (at t within {t0--t1})", "using that"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{t0--t1}.\n     (g \\<longlongrightarrow> g x) (at x within {t0--t1})\n  t \\<in> {t0--t1}\n\ngoal (1 subgoal):\n 1. (g \\<longlongrightarrow> g t) (at t within {t0--t1})", "by auto"], ["proof (state)\nthis:\n  ?t \\<in> {t0--t1} \\<Longrightarrow>\n  (g \\<longlongrightarrow> g ?t) (at ?t within {t0--t1})\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>(x \\<longlongrightarrow> l) (at t1 within {t0--<t1});\n         ((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0--t1}\n          X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  ?t \\<in> {t0--t1} \\<Longrightarrow>\n  (g \\<longlongrightarrow> g ?t) (at ?t within {t0--t1})", "have g_tendsto: \"(g \\<longlongrightarrow> g t) (at t within {t0--<t1})\" if \"t\\<in>{t0--t1}\" for t"], ["proof (prove)\nusing this:\n  ?t \\<in> {t0--t1} \\<Longrightarrow>\n  (g \\<longlongrightarrow> g ?t) (at ?t within {t0--t1})\n\ngoal (1 subgoal):\n 1. (g \\<longlongrightarrow> g t) (at t within {t0--<t1})", "using that"], ["proof (prove)\nusing this:\n  ?t \\<in> {t0--t1} \\<Longrightarrow>\n  (g \\<longlongrightarrow> g ?t) (at ?t within {t0--t1})\n  t \\<in> {t0--t1}\n\ngoal (1 subgoal):\n 1. (g \\<longlongrightarrow> g t) (at t within {t0--<t1})", "by (auto intro: tendsto_within_subset half_open_segment_subset)"], ["proof (state)\nthis:\n  ?t \\<in> {t0--t1} \\<Longrightarrow>\n  (g \\<longlongrightarrow> g ?t) (at ?t within {t0--<t1})\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>(x \\<longlongrightarrow> l) (at t1 within {t0--<t1});\n         ((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0--t1}\n          X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  ?t \\<in> {t0--t1} \\<Longrightarrow>\n  (g \\<longlongrightarrow> g ?t) (at ?t within {t0--<t1})", "have x_tendsto: \"(x \\<longlongrightarrow> g t) (at t within {t0--<t1})\" if \"t\\<in>{t0--t1}\" for t"], ["proof (prove)\nusing this:\n  ?t \\<in> {t0--t1} \\<Longrightarrow>\n  (g \\<longlongrightarrow> g ?t) (at ?t within {t0--<t1})\n\ngoal (1 subgoal):\n 1. (x \\<longlongrightarrow> g t) (at t within {t0--<t1})", "using that"], ["proof (prove)\nusing this:\n  ?t \\<in> {t0--t1} \\<Longrightarrow>\n  (g \\<longlongrightarrow> g ?t) (at ?t within {t0--<t1})\n  t \\<in> {t0--t1}\n\ngoal (1 subgoal):\n 1. (x \\<longlongrightarrow> g t) (at t within {t0--<t1})", "by (subst Lim_cong_within[OF refl refl refl xg]) auto"], ["proof (state)\nthis:\n  ?t \\<in> {t0--t1} \\<Longrightarrow>\n  (x \\<longlongrightarrow> g ?t) (at ?t within {t0--<t1})\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>(x \\<longlongrightarrow> l) (at t1 within {t0--<t1});\n         ((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0--t1}\n          X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  ?t \\<in> {t0--t1} \\<Longrightarrow>\n  (x \\<longlongrightarrow> g ?t) (at ?t within {t0--<t1})", "have \"(x \\<longlongrightarrow> g t1) (at t1 within {t0 --< t1})\""], ["proof (prove)\nusing this:\n  ?t \\<in> {t0--t1} \\<Longrightarrow>\n  (x \\<longlongrightarrow> g ?t) (at ?t within {t0--<t1})\n\ngoal (1 subgoal):\n 1. (x \\<longlongrightarrow> g t1) (at t1 within {t0--<t1})", "by auto"], ["proof (state)\nthis:\n  (x \\<longlongrightarrow> g t1) (at t1 within {t0--<t1})\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>(x \\<longlongrightarrow> l) (at t1 within {t0--<t1});\n         ((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0--t1}\n          X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  (x \\<longlongrightarrow> g t1) (at t1 within {t0--<t1})\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>(x \\<longlongrightarrow> l) (at t1 within {t0--<t1});\n         ((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0--t1}\n          X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have nbot: \"at s within {t0--<t1} \\<noteq> bot\" if \"s \\<in> {t0--t1}\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. at s within {t0--<t1} \\<noteq> bot", "using that \\<open>t0 \\<noteq> t1\\<close>"], ["proof (prove)\nusing this:\n  s \\<in> {t0--t1}\n  t0 \\<noteq> t1\n\ngoal (1 subgoal):\n 1. at s within {t0--<t1} \\<noteq> bot", "by (auto simp: trivial_limit_within islimpt_half_open_segment)"], ["proof (state)\nthis:\n  ?s \\<in> {t0--t1} \\<Longrightarrow> at ?s within {t0--<t1} \\<noteq> bot\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>(x \\<longlongrightarrow> l) (at t1 within {t0--<t1});\n         ((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0--t1}\n          X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have g_mem: \"s \\<in> {t0--t1} \\<Longrightarrow> g s \\<in> X\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> {t0--t1} \\<Longrightarrow> g s \\<in> X", "apply (rule Lim_in_closed_set[OF compact_imp_closed[OF \\<open>compact X\\<close>] _ _ x_tendsto])"], ["proof (prove)\ngoal (3 subgoals):\n 1. s \\<in> {t0--t1} \\<Longrightarrow>\n    \\<forall>\\<^sub>F xa in at s within {t0--<t1}. x xa \\<in> X\n 2. s \\<in> {t0--t1} \\<Longrightarrow> at s within {t0--<t1} \\<noteq> bot\n 3. s \\<in> {t0--t1} \\<Longrightarrow> s \\<in> {t0--t1}", "using solves_odeD(2)[OF ode] \\<open>t0 \\<noteq> t1\\<close>"], ["proof (prove)\nusing this:\n  ?t \\<in> {t0--<t1} \\<Longrightarrow> x ?t \\<in> X\n  t0 \\<noteq> t1\n\ngoal (3 subgoals):\n 1. s \\<in> {t0--t1} \\<Longrightarrow>\n    \\<forall>\\<^sub>F xa in at s within {t0--<t1}. x xa \\<in> X\n 2. s \\<in> {t0--t1} \\<Longrightarrow> at s within {t0--<t1} \\<noteq> bot\n 3. s \\<in> {t0--t1} \\<Longrightarrow> s \\<in> {t0--t1}", "by (auto intro!: simp: eventually_at_filter nbot)"], ["proof (state)\nthis:\n  ?s \\<in> {t0--t1} \\<Longrightarrow> g ?s \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>(x \\<longlongrightarrow> l) (at t1 within {t0--<t1});\n         ((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0--t1}\n          X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"(g solves_ode f) {t0 -- t1} X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g solves_ode f) {t0--t1} X", "apply (rule solution_fixed_pointI[OF continuous])"], ["proof (prove)\ngoal (3 subgoals):\n 1. continuous_on {t0--t1} g\n 2. \\<And>t. t \\<in> {t0--t1} \\<Longrightarrow> g t \\<in> X\n 3. \\<And>t.\n       t \\<in> {t0--t1} \\<Longrightarrow>\n       g t = g t0 + ivl_integral t0 t (\\<lambda>t. f t (g t))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {t0--t1} g", "by (auto intro!: uc_g uniformly_continuous_imp_continuous)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t. t \\<in> {t0--t1} \\<Longrightarrow> g t \\<in> X\n 2. \\<And>t.\n       t \\<in> {t0--t1} \\<Longrightarrow>\n       g t = g t0 + ivl_integral t0 t (\\<lambda>t. f t (g t))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t_ \\<in> {t0--t1} \\<Longrightarrow> g t_ \\<in> X", "by (rule g_mem)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> {t0--t1} \\<Longrightarrow>\n       g t = g t0 + ivl_integral t0 t (\\<lambda>t. f t (g t))", "subgoal premises prems for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. g s = g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. g s = g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. g s = g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t))", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. g s__ = g t0 + ivl_integral t0 s__ (\\<lambda>t. f t (g t))", "assume s: \"s \\<in> {t0--<t1}\""], ["proof (state)\nthis:\n  s \\<in> {t0--<t1}\n\ngoal (1 subgoal):\n 1. g s__ = g t0 + ivl_integral t0 s__ (\\<lambda>t. f t (g t))", "with prems"], ["proof (chain)\npicking this:\n  s__ \\<in> {t0--t1}\n  s \\<in> {t0--<t1}", "have subs: \"{t0--s} \\<subseteq> {t0--<t1}\""], ["proof (prove)\nusing this:\n  s__ \\<in> {t0--t1}\n  s \\<in> {t0--<t1}\n\ngoal (1 subgoal):\n 1. {t0--s} \\<subseteq> {t0--<t1}", "by (auto simp: half_open_segment_real closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  {t0--s} \\<subseteq> {t0--<t1}\n\ngoal (1 subgoal):\n 1. g s__ = g t0 + ivl_integral t0 s__ (\\<lambda>t. f t (g t))", "with ode"], ["proof (chain)\npicking this:\n  (x solves_ode f) {t0--<t1} X\n  {t0--s} \\<subseteq> {t0--<t1}", "have sol: \"(x solves_ode f) ({t0--s}) X\""], ["proof (prove)\nusing this:\n  (x solves_ode f) {t0--<t1} X\n  {t0--s} \\<subseteq> {t0--<t1}\n\ngoal (1 subgoal):\n 1. (x solves_ode f) {t0--s} X", "by (rule solves_ode_on_subset) (rule order_refl)"], ["proof (state)\nthis:\n  (x solves_ode f) {t0--s} X\n\ngoal (1 subgoal):\n 1. g s__ = g t0 + ivl_integral t0 s__ (\\<lambda>t. f t (g t))", "from subs"], ["proof (chain)\npicking this:\n  {t0--s} \\<subseteq> {t0--<t1}", "have inner_eq: \"t \\<in> {t0 -- s} \\<Longrightarrow> x t = g t\" for t"], ["proof (prove)\nusing this:\n  {t0--s} \\<subseteq> {t0--<t1}\n\ngoal (1 subgoal):\n 1. t \\<in> {t0--s} \\<Longrightarrow> x t = g t", "by (intro xg) auto"], ["proof (state)\nthis:\n  ?t \\<in> {t0--s} \\<Longrightarrow> x ?t = g ?t\n\ngoal (1 subgoal):\n 1. g s__ = g t0 + ivl_integral t0 s__ (\\<lambda>t. f t (g t))", "from solution_fixed_point[OF sol, of s]"], ["proof (chain)\npicking this:\n  s \\<in> {t0--s} \\<Longrightarrow>\n  x t0 + ivl_integral t0 s (\\<lambda>t. f t (x t)) = x s", "have \"g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s = 0\""], ["proof (prove)\nusing this:\n  s \\<in> {t0--s} \\<Longrightarrow>\n  x t0 + ivl_integral t0 s (\\<lambda>t. f t (x t)) = x s\n\ngoal (1 subgoal):\n 1. g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s = (0::'a)", "using s prems \\<open>t0 \\<noteq> t1\\<close>"], ["proof (prove)\nusing this:\n  s \\<in> {t0--s} \\<Longrightarrow>\n  x t0 + ivl_integral t0 s (\\<lambda>t. f t (x t)) = x s\n  s \\<in> {t0--<t1}\n  s__ \\<in> {t0--t1}\n  t0 \\<noteq> t1\n\ngoal (1 subgoal):\n 1. g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s = (0::'a)", "by (auto simp: inner_eq cong: ivl_integral_cong)"], ["proof (state)\nthis:\n  g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s = (0::'a)\n\ngoal (1 subgoal):\n 1. g s__ = g t0 + ivl_integral t0 s__ (\\<lambda>t. f t (g t))", "}"], ["proof (state)\nthis:\n  ?sa2 \\<in> {t0--<t1} \\<Longrightarrow>\n  g t0 + ivl_integral t0 ?sa2 (\\<lambda>t. f t (g t)) - g ?sa2 = (0::'a)\n\ngoal (1 subgoal):\n 1. g s = g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t))", "note fp = this"], ["proof (state)\nthis:\n  ?sa2 \\<in> {t0--<t1} \\<Longrightarrow>\n  g t0 + ivl_integral t0 ?sa2 (\\<lambda>t. f t (g t)) - g ?sa2 = (0::'a)\n\ngoal (1 subgoal):\n 1. g s = g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t))", "from prems"], ["proof (chain)\npicking this:\n  s \\<in> {t0--t1}", "have subs: \"{t0--s} \\<subseteq> {t0--t1}\""], ["proof (prove)\nusing this:\n  s \\<in> {t0--t1}\n\ngoal (1 subgoal):\n 1. {t0--s} \\<subseteq> {t0--t1}", "by (auto simp: closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  {t0--s} \\<subseteq> {t0--t1}\n\ngoal (1 subgoal):\n 1. g s = g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t))", "have int: \"(\\<lambda>t. f t (g t)) integrable_on {t0--t1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. f t (g t)) integrable_on {t0--t1}", "using prems subs"], ["proof (prove)\nusing this:\n  s \\<in> {t0--t1}\n  {t0--s} \\<subseteq> {t0--t1}\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. f t (g t)) integrable_on {t0--t1}", "by (auto intro!: integrable_continuous_closed_segment continuous_intros g_mem\n          uc_g[THEN uniformly_continuous_imp_continuous, THEN continuous_on_subset])"], ["proof (state)\nthis:\n  (\\<lambda>t. f t (g t)) integrable_on {t0--t1}\n\ngoal (1 subgoal):\n 1. g s = g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t))", "note ivl_tendsto[tendsto_intros] =\n        indefinite_ivl_integral_continuous(1)[OF int, unfolded continuous_on_def, rule_format]"], ["proof (state)\nthis:\n  ?x \\<in> {t0--t1} \\<Longrightarrow>\n  ((\\<lambda>x.\n       ivl_integral t0 x (\\<lambda>t. f t (g t))) \\<longlongrightarrow>\n   ivl_integral t0 ?x (\\<lambda>t. f t (g t)))\n   (at ?x within {t0--t1})\n\ngoal (1 subgoal):\n 1. g s = g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t))", "from subs half_open_segment_subset"], ["proof (chain)\npicking this:\n  {t0--s} \\<subseteq> {t0--t1}\n  {?t0.0--<?t1.0} \\<subseteq> {?t0.0--?t1.0}\n  ?x \\<in> {?t0.0--<?t1.0} \\<Longrightarrow> ?x \\<in> {?t0.0--?t1.0}", "have \"((\\<lambda>s. g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s) \\<longlongrightarrow>\n        g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s) (at s within {t0 --< t1})\""], ["proof (prove)\nusing this:\n  {t0--s} \\<subseteq> {t0--t1}\n  {?t0.0--<?t1.0} \\<subseteq> {?t0.0--?t1.0}\n  ?x \\<in> {?t0.0--<?t1.0} \\<Longrightarrow> ?x \\<in> {?t0.0--?t1.0}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>s.\n         g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) -\n         g s) \\<longlongrightarrow>\n     g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s)\n     (at s within {t0--<t1})", "using subs"], ["proof (prove)\nusing this:\n  {t0--s} \\<subseteq> {t0--t1}\n  {?t0.0--<?t1.0} \\<subseteq> {?t0.0--?t1.0}\n  ?x \\<in> {?t0.0--<?t1.0} \\<Longrightarrow> ?x \\<in> {?t0.0--?t1.0}\n  {t0--s} \\<subseteq> {t0--t1}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>s.\n         g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) -\n         g s) \\<longlongrightarrow>\n     g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s)\n     (at s within {t0--<t1})", "by (auto intro!: tendsto_intros ivl_tendsto[THEN tendsto_within_subset]\n          g_tendsto[THEN tendsto_within_subset])"], ["proof (state)\nthis:\n  ((\\<lambda>s.\n       g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) -\n       g s) \\<longlongrightarrow>\n   g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s)\n   (at s within {t0--<t1})\n\ngoal (1 subgoal):\n 1. g s = g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t))", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>s.\n       g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) -\n       g s) \\<longlongrightarrow>\n   g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s)\n   (at s within {t0--<t1})\n\ngoal (1 subgoal):\n 1. g s = g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t))", "have \"((\\<lambda>s. g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s) \\<longlongrightarrow> 0) (at s within {t0 --< t1})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>s.\n         g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) -\n         g s) \\<longlongrightarrow>\n     (0::'a))\n     (at s within {t0--<t1})", "apply (subst Lim_cong_within[OF refl refl refl, where g=\"\\<lambda>_. 0\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<noteq> s; x \\<in> {t0--<t1}\\<rbrakk>\n       \\<Longrightarrow> g t0 + ivl_integral t0 x (\\<lambda>t. f t (g t)) -\n                         g x =\n                         (0::'a)\n 2. ((\\<lambda>_. 0::'a) \\<longlongrightarrow> (0::'a))\n     (at s within {t0--<t1})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<noteq> s; x_ \\<in> {t0--<t1}\\<rbrakk>\n    \\<Longrightarrow> g t0 + ivl_integral t0 x_ (\\<lambda>t. f t (g t)) -\n                      g x_ =\n                      (0::'a)", "by (subst fp) auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. 0::'a) \\<longlongrightarrow> (0::'a))\n     (at s within {t0--<t1})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. 0::'a) \\<longlongrightarrow> (0::'a))\n     (at s within {t0--<t1})", "by simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ((\\<lambda>s.\n       g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) -\n       g s) \\<longlongrightarrow>\n   (0::'a))\n   (at s within {t0--<t1})\n\ngoal (1 subgoal):\n 1. g s = g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t))", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>s.\n       g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) -\n       g s) \\<longlongrightarrow>\n   g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s)\n   (at s within {t0--<t1})\n  ((\\<lambda>s.\n       g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) -\n       g s) \\<longlongrightarrow>\n   (0::'a))\n   (at s within {t0--<t1})", "have \"g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s = 0\""], ["proof (prove)\nusing this:\n  ((\\<lambda>s.\n       g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) -\n       g s) \\<longlongrightarrow>\n   g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s)\n   (at s within {t0--<t1})\n  ((\\<lambda>s.\n       g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) -\n       g s) \\<longlongrightarrow>\n   (0::'a))\n   (at s within {t0--<t1})\n\ngoal (1 subgoal):\n 1. g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s = (0::'a)", "using nbot prems tendsto_unique"], ["proof (prove)\nusing this:\n  ((\\<lambda>s.\n       g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) -\n       g s) \\<longlongrightarrow>\n   g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s)\n   (at s within {t0--<t1})\n  ((\\<lambda>s.\n       g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) -\n       g s) \\<longlongrightarrow>\n   (0::'a))\n   (at s within {t0--<t1})\n  ?s \\<in> {t0--t1} \\<Longrightarrow> at ?s within {t0--<t1} \\<noteq> bot\n  s \\<in> {t0--t1}\n  \\<lbrakk>?F \\<noteq> bot; (?f \\<longlongrightarrow> ?a) ?F;\n   (?f \\<longlongrightarrow> ?b) ?F\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s = (0::'a)", "by blast"], ["proof (state)\nthis:\n  g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s = (0::'a)\n\ngoal (1 subgoal):\n 1. g s = g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t))", "then"], ["proof (chain)\npicking this:\n  g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s = (0::'a)", "show \"g s = g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t))\""], ["proof (prove)\nusing this:\n  g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t)) - g s = (0::'a)\n\ngoal (1 subgoal):\n 1. g s = g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t))", "by simp"], ["proof (state)\nthis:\n  g s = g t0 + ivl_integral t0 s (\\<lambda>t. f t (g t))\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (g solves_ode f) {t0--t1} X\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>(x \\<longlongrightarrow> l) (at t1 within {t0--<t1});\n         ((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0--t1}\n          X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  (g solves_ode f) {t0--t1} X", "have \"((\\<lambda>t. if t = t1 then g t1 else x t) solves_ode f) {t0--t1} X\""], ["proof (prove)\nusing this:\n  (g solves_ode f) {t0--t1} X\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. if t = t1 then g t1 else x t) solves_ode f) {t0--t1} X", "apply (rule solves_ode_congI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t.\n       t \\<in> {t0--t1} \\<Longrightarrow>\n       g t = (if t = t1 then g t1 else x t)\n 2. \\<And>t. t \\<in> {t0--t1} \\<Longrightarrow> f t (g t) = f t (g t)\n 3. {t0--t1} = {t0--t1}\n 4. X = X", "using xg \\<open>t0 \\<noteq> t1\\<close>"], ["proof (prove)\nusing this:\n  ?t \\<in> {t0--<t1} \\<Longrightarrow> x ?t = g ?t\n  t0 \\<noteq> t1\n\ngoal (4 subgoals):\n 1. \\<And>t.\n       t \\<in> {t0--t1} \\<Longrightarrow>\n       g t = (if t = t1 then g t1 else x t)\n 2. \\<And>t. t \\<in> {t0--t1} \\<Longrightarrow> f t (g t) = f t (g t)\n 3. {t0--t1} = {t0--t1}\n 4. X = X", "by (auto simp: half_open_segment_closed_segmentI)"], ["proof (state)\nthis:\n  ((\\<lambda>t. if t = t1 then g t1 else x t) solves_ode f) {t0--t1} X\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>(x \\<longlongrightarrow> l) (at t1 within {t0--<t1});\n         ((\\<lambda>t. if t = t1 then l else x t) solves_ode f) {t0--t1}\n          X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  (x \\<longlongrightarrow> g t1) (at t1 within {t0--<t1})\n  ((\\<lambda>t. if t = t1 then g t1 else x t) solves_ode f) {t0--t1} X", "show ?thesis"], ["proof (prove)\nusing this:\n  (x \\<longlongrightarrow> g t1) (at t1 within {t0--<t1})\n  ((\\<lambda>t. if t = t1 then g t1 else x t) solves_ode f) {t0--t1} X\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Picard-Lindeloef on set of functions into closed set\\<close>"], ["", "text\\<open>\\label{sec:plclosed}\\<close>"], ["", "locale continuous_rhs = fixes T X f\n  assumes continuous: \"continuous_on (T \\<times> X) (\\<lambda>(t, x). f t x)\"\nbegin"], ["", "lemma continuous_rhs_comp[continuous_intros]:\n  assumes [continuous_intros]: \"continuous_on S g\"\n  assumes [continuous_intros]: \"continuous_on S h\"\n  assumes \"g ` S \\<subseteq> T\"\n  assumes \"h ` S \\<subseteq> X\"\n  shows \"continuous_on S (\\<lambda>x. f (g x) (h x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on S (\\<lambda>x. f (g x) (h x))", "using continuous_on_compose_Pair[OF continuous assms(1,2)] assms(3,4)"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>c. c \\<in> S \\<Longrightarrow> g c \\<in> T;\n   \\<And>c. c \\<in> S \\<Longrightarrow> h c \\<in> X\\<rbrakk>\n  \\<Longrightarrow> continuous_on S (\\<lambda>c. f (g c) (h c))\n  g ` S \\<subseteq> T\n  h ` S \\<subseteq> X\n\ngoal (1 subgoal):\n 1. continuous_on S (\\<lambda>x. f (g x) (h x))", "by auto"], ["", "end"], ["", "locale global_lipschitz =\n  fixes T X f and L::real\n  assumes lipschitz: \"\\<And>t. t \\<in> T \\<Longrightarrow> L-lipschitz_on X (\\<lambda>x. f t x)\""], ["", "locale closed_domain =\n  fixes X assumes closed: \"closed X\""], ["", "locale interval = fixes T::\"real set\"\n  assumes interval: \"is_interval T\"\nbegin"], ["", "lemma closed_segment_subset_domain: \"t0 \\<in> T \\<Longrightarrow> t \\<in> T \\<Longrightarrow> closed_segment t0 t \\<subseteq> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t0 \\<in> T; t \\<in> T\\<rbrakk>\n    \\<Longrightarrow> {t0--t} \\<subseteq> T", "by (simp add: closed_segment_subset_interval interval)"], ["", "lemma closed_segment_subset_domainI: \"t0 \\<in> T \\<Longrightarrow> t \\<in> T \\<Longrightarrow> s \\<in> closed_segment t0 t \\<Longrightarrow> s \\<in> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t0 \\<in> T; t \\<in> T; s \\<in> {t0--t}\\<rbrakk>\n    \\<Longrightarrow> s \\<in> T", "using closed_segment_subset_domain"], ["proof (prove)\nusing this:\n  \\<lbrakk>?t0.0 \\<in> T; ?t \\<in> T\\<rbrakk>\n  \\<Longrightarrow> {?t0.0--?t} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t0 \\<in> T; t \\<in> T; s \\<in> {t0--t}\\<rbrakk>\n    \\<Longrightarrow> s \\<in> T", "by force"], ["", "lemma convex[intro, simp]: \"convex T\"\n  and connected[intro, simp]: \"connected T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. convex T &&& connected T", "by (simp_all add: interval is_interval_connected is_interval_convex )"], ["", "end"], ["", "locale nonempty_set = fixes T assumes nonempty_set: \"T \\<noteq> {}\""], ["", "locale compact_interval = interval + nonempty_set T +\n  assumes compact_time: \"compact T\"\nbegin"], ["", "definition \"tmin = Inf T\""], ["", "definition \"tmax = Sup T\""], ["", "lemma\n  shows tmin: \"t \\<in> T \\<Longrightarrow> tmin \\<le> t\" \"tmin \\<in> T\"\n    and tmax: \"t \\<in> T \\<Longrightarrow> t \\<le> tmax\" \"tmax \\<in> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((t \\<in> T \\<Longrightarrow> tmin \\<le> t) &&& tmin \\<in> T) &&&\n    (t \\<in> T \\<Longrightarrow> t \\<le> tmax) &&& tmax \\<in> T", "using nonempty_set"], ["proof (prove)\nusing this:\n  T \\<noteq> {}\n\ngoal (1 subgoal):\n 1. ((t \\<in> T \\<Longrightarrow> tmin \\<le> t) &&& tmin \\<in> T) &&&\n    (t \\<in> T \\<Longrightarrow> t \\<le> tmax) &&& tmax \\<in> T", "by (auto intro!: cInf_lower cSup_upper bounded_imp_bdd_below bounded_imp_bdd_above\n    compact_imp_bounded compact_time closed_contains_Inf closed_contains_Sup compact_imp_closed\n    simp: tmin_def tmax_def)"], ["", "lemma tmin_le_tmax[intro, simp]: \"tmin \\<le> tmax\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tmin \\<le> tmax", "using nonempty_set tmin tmax"], ["proof (prove)\nusing this:\n  T \\<noteq> {}\n  ?t \\<in> T \\<Longrightarrow> tmin \\<le> ?t\n  tmin \\<in> T\n  ?t \\<in> T \\<Longrightarrow> ?t \\<le> tmax\n  tmax \\<in> T\n\ngoal (1 subgoal):\n 1. tmin \\<le> tmax", "by auto"], ["", "lemma T_def: \"T = {tmin .. tmax}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T = {tmin..tmax}", "using closed_segment_subset_interval[OF interval tmin(2) tmax(2)]"], ["proof (prove)\nusing this:\n  {tmin--tmax} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. T = {tmin..tmax}", "by (auto simp: closed_segment_eq_real_ivl subset_iff intro!: tmin tmax)"], ["", "lemma mem_T_I[intro, simp]: \"tmin \\<le> t \\<Longrightarrow> t \\<le> tmax \\<Longrightarrow> t \\<in> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tmin \\<le> t; t \\<le> tmax\\<rbrakk> \\<Longrightarrow> t \\<in> T", "using interval mem_is_interval_1_I tmax(2) tmin(2)"], ["proof (prove)\nusing this:\n  is_interval T\n  \\<lbrakk>is_interval ?S; ?a \\<in> ?S; ?c \\<in> ?S; ?a \\<le> ?b;\n   ?b \\<le> ?c\\<rbrakk>\n  \\<Longrightarrow> ?b \\<in> ?S\n  tmax \\<in> T\n  tmin \\<in> T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>tmin \\<le> t; t \\<le> tmax\\<rbrakk> \\<Longrightarrow> t \\<in> T", "by blast"], ["", "end"], ["", "locale self_mapping = interval T for T +\n  fixes t0::real and x0 f X\n  assumes iv_defined: \"t0 \\<in> T\" \"x0 \\<in> X\"\n  assumes self_mapping:\n    \"\\<And>x t. t \\<in> T \\<Longrightarrow> x t0 = x0 \\<Longrightarrow> x \\<in> closed_segment t0 t \\<rightarrow> X \\<Longrightarrow>\n      continuous_on (closed_segment t0 t) x \\<Longrightarrow> x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X\"\nbegin"], ["", "sublocale nonempty_set T"], ["proof (prove)\ngoal (1 subgoal):\n 1. nonempty_set T", "using iv_defined"], ["proof (prove)\nusing this:\n  t0 \\<in> T\n  x0 \\<in> X\n\ngoal (1 subgoal):\n 1. nonempty_set T", "by unfold_locales auto"], ["", "lemma closed_segment_iv_subset_domain: \"t \\<in> T \\<Longrightarrow> closed_segment t0 t \\<subseteq> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> T \\<Longrightarrow> {t0--t} \\<subseteq> T", "by (simp add: closed_segment_subset_domain iv_defined)"], ["", "end"], ["", "locale unique_on_closed =\n  compact_interval T +\n  self_mapping T t0 x0 f X +\n  continuous_rhs T X f +\n  closed_domain X +\n  global_lipschitz T X f L for t0::real and T and x0::\"'a::banach\" and f X L\nbegin"], ["", "lemma T_split: \"T = {tmin .. t0} \\<union> {t0 .. tmax}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T = {tmin..t0} \\<union> {t0..tmax}", "by (metis T_def atLeastAtMost_iff iv_defined(1) ivl_disj_un_two_touch(4))"], ["", "lemma L_nonneg: \"0 \\<le> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> L", "by (auto intro!: lipschitz_on_nonneg[OF lipschitz] iv_defined)"], ["", "text \\<open>Picard Iteration\\<close>"], ["", "definition P_inner where \"P_inner x t = x0 + ivl_integral t0 t (\\<lambda>t. f  t (x t))\""], ["", "definition P::\"(real \\<Rightarrow>\\<^sub>C 'a) \\<Rightarrow> (real \\<Rightarrow>\\<^sub>C 'a)\"\n  where \"P x = (SOME g::real\\<Rightarrow>\\<^sub>C 'a.\n    (\\<forall>t \\<in> T. g t = P_inner x t) \\<and>\n    (\\<forall>t\\<le>tmin. g t = P_inner x tmin) \\<and>\n    (\\<forall>t\\<ge>tmax. g t = P_inner x tmax))\""], ["", "lemma cont_P_inner_ivl:\n  \"x \\<in> T \\<rightarrow>\\<^sub>C X \\<Longrightarrow> continuous_on {tmin..tmax} (P_inner (apply_bcontfun x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> T \\<rightarrow>\\<^sub>C X \\<Longrightarrow>\n    continuous_on {tmin..tmax} (P_inner (apply_bcontfun x))", "apply (auto simp: real_Icc_closed_segment P_inner_def Pi_iff mem_PiC_iff\n      intro!: continuous_intros indefinite_ivl_integral_continuous_subset\n      integrable_continuous_closed_segment tmin(1) tmax(1))"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i\\<in>T. apply_bcontfun x i \\<in> X;\n        xa \\<in> {tmin--tmax}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> T\n 2. \\<And>xa.\n       \\<lbrakk>\\<forall>i\\<in>T. apply_bcontfun x i \\<in> X;\n        xa \\<in> {tmin--tmax}\\<rbrakk>\n       \\<Longrightarrow> apply_bcontfun x xa \\<in> X\n 3. \\<forall>i\\<in>T. apply_bcontfun x i \\<in> X \\<Longrightarrow>\n    t0 \\<in> {tmin--tmax}", "using closed_segment_subset_domainI tmax(2) tmin(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?t0.0 \\<in> T; ?t \\<in> T; ?s \\<in> {?t0.0--?t}\\<rbrakk>\n  \\<Longrightarrow> ?s \\<in> T\n  tmax \\<in> T\n  tmin \\<in> T\n\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i\\<in>T. apply_bcontfun x i \\<in> X;\n        xa \\<in> {tmin--tmax}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> T\n 2. \\<And>xa.\n       \\<lbrakk>\\<forall>i\\<in>T. apply_bcontfun x i \\<in> X;\n        xa \\<in> {tmin--tmax}\\<rbrakk>\n       \\<Longrightarrow> apply_bcontfun x xa \\<in> X\n 3. \\<forall>i\\<in>T. apply_bcontfun x i \\<in> X \\<Longrightarrow>\n    t0 \\<in> {tmin--tmax}", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i\\<in>T. apply_bcontfun x i \\<in> X;\n        xa \\<in> {tmin--tmax}\\<rbrakk>\n       \\<Longrightarrow> apply_bcontfun x xa \\<in> X\n 2. \\<forall>i\\<in>T. apply_bcontfun x i \\<in> X \\<Longrightarrow>\n    t0 \\<in> {tmin--tmax}", "using closed_segment_subset_domainI tmax(2) tmin(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?t0.0 \\<in> T; ?t \\<in> T; ?s \\<in> {?t0.0--?t}\\<rbrakk>\n  \\<Longrightarrow> ?s \\<in> T\n  tmax \\<in> T\n  tmin \\<in> T\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>i\\<in>T. apply_bcontfun x i \\<in> X;\n        xa \\<in> {tmin--tmax}\\<rbrakk>\n       \\<Longrightarrow> apply_bcontfun x xa \\<in> X\n 2. \\<forall>i\\<in>T. apply_bcontfun x i \\<in> X \\<Longrightarrow>\n    t0 \\<in> {tmin--tmax}", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>T. apply_bcontfun x i \\<in> X \\<Longrightarrow>\n    t0 \\<in> {tmin--tmax}", "using T_def closed_segment_eq_real_ivl iv_defined(1)"], ["proof (prove)\nusing this:\n  T = {tmin..tmax}\n  {?a--?b} = (if ?a \\<le> ?b then {?a..?b} else {?b..?a})\n  t0 \\<in> T\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>T. apply_bcontfun x i \\<in> X \\<Longrightarrow>\n    t0 \\<in> {tmin--tmax}", "by auto"], ["", "lemma P_inner_t0[simp]: \"P_inner g t0 = x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P_inner g t0 = x0", "by (simp add: P_inner_def)"], ["", "lemma t0_cs_tmin_tmax: \"t0 \\<in> {tmin--tmax}\" and cs_tmin_tmax_subset: \"{tmin--tmax} \\<subseteq> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> {tmin--tmax} &&& {tmin--tmax} \\<subseteq> T", "using iv_defined T_def closed_segment_eq_real_ivl"], ["proof (prove)\nusing this:\n  t0 \\<in> T\n  x0 \\<in> X\n  T = {tmin..tmax}\n  {?a--?b} = (if ?a \\<le> ?b then {?a..?b} else {?b..?a})\n\ngoal (1 subgoal):\n 1. t0 \\<in> {tmin--tmax} &&& {tmin--tmax} \\<subseteq> T", "by auto"], ["", "lemma\n  P_eqs:\n  assumes \"x \\<in> T \\<rightarrow>\\<^sub>C X\"\n  shows P_eq_P_inner: \"t \\<in> T \\<Longrightarrow> P x t = P_inner x t\"\n    and P_le_tmin: \"t \\<le> tmin \\<Longrightarrow> P x t = P_inner x tmin\"\n    and P_ge_tmax: \"t \\<ge> tmax \\<Longrightarrow> P x t = P_inner x tmax\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<in> T \\<Longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) t) &&&\n    (t \\<le> tmin \\<Longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmin) &&&\n    (tmax \\<le> t \\<Longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmax)", "unfolding atomize_conj atomize_imp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<in> T \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) t) \\<and>\n    (t \\<le> tmin \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmin) \\<and>\n    (tmax \\<le> t \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmax)", "proof goal_cases"], ["proof (state)\ngoal (1 subgoal):\n 1. (t \\<in> T \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) t) \\<and>\n    (t \\<le> tmin \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmin) \\<and>\n    (tmax \\<le> t \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmax)", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. (t \\<in> T \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) t) \\<and>\n    (t \\<le> tmin \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmin) \\<and>\n    (tmax \\<le> t \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmax)", "obtain g where\n    \"t \\<in> {tmin .. tmax} \\<Longrightarrow> apply_bcontfun g t = P_inner (apply_bcontfun x) t\"\n    \"apply_bcontfun g t = P_inner (apply_bcontfun x) (clamp tmin tmax t)\"\n    for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>\\<And>t.\n                    t \\<in> {tmin..tmax} \\<Longrightarrow>\n                    apply_bcontfun g t = P_inner (apply_bcontfun x) t;\n         \\<And>t.\n            apply_bcontfun g t =\n            P_inner (apply_bcontfun x) (clamp tmin tmax t)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis continuous_on_cbox_bcontfunE cont_P_inner_ivl[OF assms(1)] cbox_interval)"], ["proof (state)\nthis:\n  ?t \\<in> {tmin..tmax} \\<Longrightarrow>\n  apply_bcontfun g ?t = P_inner (apply_bcontfun x) ?t\n  apply_bcontfun g ?t = P_inner (apply_bcontfun x) (clamp tmin tmax ?t)\n\ngoal (1 subgoal):\n 1. (t \\<in> T \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) t) \\<and>\n    (t \\<le> tmin \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmin) \\<and>\n    (tmax \\<le> t \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmax)", "with T_def"], ["proof (chain)\npicking this:\n  T = {tmin..tmax}\n  ?t \\<in> {tmin..tmax} \\<Longrightarrow>\n  apply_bcontfun g ?t = P_inner (apply_bcontfun x) ?t\n  apply_bcontfun g ?t = P_inner (apply_bcontfun x) (clamp tmin tmax ?t)", "have \"\\<exists>g::real\\<Rightarrow>\\<^sub>C 'a.\n    (\\<forall>t \\<in> T. g t = P_inner x t) \\<and>\n    (\\<forall>t\\<le>tmin. g t = P_inner x tmin) \\<and>\n    (\\<forall>t\\<ge>tmax. g t = P_inner x tmax)\""], ["proof (prove)\nusing this:\n  T = {tmin..tmax}\n  ?t \\<in> {tmin..tmax} \\<Longrightarrow>\n  apply_bcontfun g ?t = P_inner (apply_bcontfun x) ?t\n  apply_bcontfun g ?t = P_inner (apply_bcontfun x) (clamp tmin tmax ?t)\n\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       (\\<forall>t\\<in>T.\n           apply_bcontfun xa t = P_inner (apply_bcontfun x) t) \\<and>\n       (\\<forall>t\\<le>tmin.\n           apply_bcontfun xa t = P_inner (apply_bcontfun x) tmin) \\<and>\n       (\\<forall>t\\<ge>tmax.\n           apply_bcontfun xa t = P_inner (apply_bcontfun x) tmax)", "by (auto intro!: exI[where x=g])"], ["proof (state)\nthis:\n  \\<exists>xa.\n     (\\<forall>t\\<in>T.\n         apply_bcontfun xa t = P_inner (apply_bcontfun x) t) \\<and>\n     (\\<forall>t\\<le>tmin.\n         apply_bcontfun xa t = P_inner (apply_bcontfun x) tmin) \\<and>\n     (\\<forall>t\\<ge>tmax.\n         apply_bcontfun xa t = P_inner (apply_bcontfun x) tmax)\n\ngoal (1 subgoal):\n 1. (t \\<in> T \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) t) \\<and>\n    (t \\<le> tmin \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmin) \\<and>\n    (tmax \\<le> t \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmax)", "then"], ["proof (chain)\npicking this:\n  \\<exists>xa.\n     (\\<forall>t\\<in>T.\n         apply_bcontfun xa t = P_inner (apply_bcontfun x) t) \\<and>\n     (\\<forall>t\\<le>tmin.\n         apply_bcontfun xa t = P_inner (apply_bcontfun x) tmin) \\<and>\n     (\\<forall>t\\<ge>tmax.\n         apply_bcontfun xa t = P_inner (apply_bcontfun x) tmax)", "have \"(\\<forall>t \\<in> T. P x t = P_inner x t) \\<and>\n    (\\<forall>t\\<le>tmin. P x t = P_inner x tmin) \\<and>\n    (\\<forall>t\\<ge>tmax. P x t = P_inner x tmax)\""], ["proof (prove)\nusing this:\n  \\<exists>xa.\n     (\\<forall>t\\<in>T.\n         apply_bcontfun xa t = P_inner (apply_bcontfun x) t) \\<and>\n     (\\<forall>t\\<le>tmin.\n         apply_bcontfun xa t = P_inner (apply_bcontfun x) tmin) \\<and>\n     (\\<forall>t\\<ge>tmax.\n         apply_bcontfun xa t = P_inner (apply_bcontfun x) tmax)\n\ngoal (1 subgoal):\n 1. (\\<forall>t\\<in>T.\n        apply_bcontfun (P x) t = P_inner (apply_bcontfun x) t) \\<and>\n    (\\<forall>t\\<le>tmin.\n        apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmin) \\<and>\n    (\\<forall>t\\<ge>tmax.\n        apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmax)", "unfolding P_def"], ["proof (prove)\nusing this:\n  \\<exists>xa.\n     (\\<forall>t\\<in>T.\n         apply_bcontfun xa t = P_inner (apply_bcontfun x) t) \\<and>\n     (\\<forall>t\\<le>tmin.\n         apply_bcontfun xa t = P_inner (apply_bcontfun x) tmin) \\<and>\n     (\\<forall>t\\<ge>tmax.\n         apply_bcontfun xa t = P_inner (apply_bcontfun x) tmax)\n\ngoal (1 subgoal):\n 1. (\\<forall>t\\<in>T.\n        apply_bcontfun\n         (SOME xa.\n             (\\<forall>t\\<in>T.\n                 apply_bcontfun xa t = P_inner (apply_bcontfun x) t) \\<and>\n             (\\<forall>t\\<le>tmin.\n                 apply_bcontfun xa t =\n                 P_inner (apply_bcontfun x) tmin) \\<and>\n             (\\<forall>t\\<ge>tmax.\n                 apply_bcontfun xa t = P_inner (apply_bcontfun x) tmax))\n         t =\n        P_inner (apply_bcontfun x) t) \\<and>\n    (\\<forall>t\\<le>tmin.\n        apply_bcontfun\n         (SOME xa.\n             (\\<forall>t\\<in>T.\n                 apply_bcontfun xa t = P_inner (apply_bcontfun x) t) \\<and>\n             (\\<forall>t\\<le>tmin.\n                 apply_bcontfun xa t =\n                 P_inner (apply_bcontfun x) tmin) \\<and>\n             (\\<forall>t\\<ge>tmax.\n                 apply_bcontfun xa t = P_inner (apply_bcontfun x) tmax))\n         t =\n        P_inner (apply_bcontfun x) tmin) \\<and>\n    (\\<forall>t\\<ge>tmax.\n        apply_bcontfun\n         (SOME xa.\n             (\\<forall>t\\<in>T.\n                 apply_bcontfun xa t = P_inner (apply_bcontfun x) t) \\<and>\n             (\\<forall>t\\<le>tmin.\n                 apply_bcontfun xa t =\n                 P_inner (apply_bcontfun x) tmin) \\<and>\n             (\\<forall>t\\<ge>tmax.\n                 apply_bcontfun xa t = P_inner (apply_bcontfun x) tmax))\n         t =\n        P_inner (apply_bcontfun x) tmax)", "by (rule someI_ex)"], ["proof (state)\nthis:\n  (\\<forall>t\\<in>T.\n      apply_bcontfun (P x) t = P_inner (apply_bcontfun x) t) \\<and>\n  (\\<forall>t\\<le>tmin.\n      apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmin) \\<and>\n  (\\<forall>t\\<ge>tmax.\n      apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmax)\n\ngoal (1 subgoal):\n 1. (t \\<in> T \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) t) \\<and>\n    (t \\<le> tmin \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmin) \\<and>\n    (tmax \\<le> t \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmax)", "then"], ["proof (chain)\npicking this:\n  (\\<forall>t\\<in>T.\n      apply_bcontfun (P x) t = P_inner (apply_bcontfun x) t) \\<and>\n  (\\<forall>t\\<le>tmin.\n      apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmin) \\<and>\n  (\\<forall>t\\<ge>tmax.\n      apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmax)", "show ?case"], ["proof (prove)\nusing this:\n  (\\<forall>t\\<in>T.\n      apply_bcontfun (P x) t = P_inner (apply_bcontfun x) t) \\<and>\n  (\\<forall>t\\<le>tmin.\n      apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmin) \\<and>\n  (\\<forall>t\\<ge>tmax.\n      apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmax)\n\ngoal (1 subgoal):\n 1. (t \\<in> T \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) t) \\<and>\n    (t \\<le> tmin \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmin) \\<and>\n    (tmax \\<le> t \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmax)", "using T_def"], ["proof (prove)\nusing this:\n  (\\<forall>t\\<in>T.\n      apply_bcontfun (P x) t = P_inner (apply_bcontfun x) t) \\<and>\n  (\\<forall>t\\<le>tmin.\n      apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmin) \\<and>\n  (\\<forall>t\\<ge>tmax.\n      apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmax)\n  T = {tmin..tmax}\n\ngoal (1 subgoal):\n 1. (t \\<in> T \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) t) \\<and>\n    (t \\<le> tmin \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmin) \\<and>\n    (tmax \\<le> t \\<longrightarrow>\n     apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmax)", "by auto"], ["proof (state)\nthis:\n  (t \\<in> T \\<longrightarrow>\n   apply_bcontfun (P x) t = P_inner (apply_bcontfun x) t) \\<and>\n  (t \\<le> tmin \\<longrightarrow>\n   apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmin) \\<and>\n  (tmax \\<le> t \\<longrightarrow>\n   apply_bcontfun (P x) t = P_inner (apply_bcontfun x) tmax)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P_if_eq:\n  \"x \\<in> T \\<rightarrow>\\<^sub>C X \\<Longrightarrow>\n    P x t = (if tmin \\<le> t \\<and> t \\<le> tmax then P_inner x t else if t \\<ge> tmax then P_inner x tmax else P_inner x tmin)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> T \\<rightarrow>\\<^sub>C X \\<Longrightarrow>\n    apply_bcontfun (P x) t =\n    (if tmin \\<le> t \\<and> t \\<le> tmax then P_inner (apply_bcontfun x) t\n     else if tmax \\<le> t then P_inner (apply_bcontfun x) tmax\n          else P_inner (apply_bcontfun x) tmin)", "by (auto simp: P_eqs)"], ["", "lemma dist_P_le:\n  assumes y: \"y \\<in> T \\<rightarrow>\\<^sub>C X\" and z: \"z \\<in> T \\<rightarrow>\\<^sub>C X\"\n  assumes le: \"\\<And>t. tmin \\<le> t \\<Longrightarrow> t \\<le> tmax \\<Longrightarrow> dist (P_inner y t) (P_inner z t) \\<le> R\"\n  assumes \"0 \\<le> R\"\n  shows \"dist (P y t) (P z t) \\<le> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (apply_bcontfun (P y) t) (apply_bcontfun (P z) t) \\<le> R", "by (cases \"t \\<le> tmin\"; cases \"t \\<ge> tmax\") (auto simp: P_eqs y z not_le intro!: le)"], ["", "lemma P_def':\n  assumes \"t \\<in> T\"\n  assumes \"fixed_point \\<in> T \\<rightarrow>\\<^sub>C X\"\n  shows \"(P fixed_point) t = x0 + ivl_integral t0 t (\\<lambda>x. f x (fixed_point x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_bcontfun (P fixed_point) t =\n    x0 + ivl_integral t0 t (\\<lambda>x. f x (apply_bcontfun fixed_point x))", "by (simp add: P_eq_P_inner assms P_inner_def)"], ["", "definition \"iter_space = PiC T ((\\<lambda>_. X)(t0:={x0}))\""], ["", "lemma iter_spaceI:\n  assumes \"g \\<in> T \\<rightarrow>\\<^sub>C X\" \"g t0 = x0\"\n  shows \"g \\<in> iter_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> iter_space", "using assms"], ["proof (prove)\nusing this:\n  g \\<in> T \\<rightarrow>\\<^sub>C X\n  apply_bcontfun g t0 = x0\n\ngoal (1 subgoal):\n 1. g \\<in> iter_space", "by (simp add: iter_space_def mem_PiC_iff Pi_iff)"], ["", "lemma iter_spaceD:\n  assumes \"g \\<in> iter_space\"\n  shows \"g \\<in> T \\<rightarrow>\\<^sub>C X\" \"apply_bcontfun g t0 = x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> T \\<rightarrow>\\<^sub>C X &&& apply_bcontfun g t0 = x0", "using assms iv_defined"], ["proof (prove)\nusing this:\n  g \\<in> iter_space\n  t0 \\<in> T\n  x0 \\<in> X\n\ngoal (1 subgoal):\n 1. g \\<in> T \\<rightarrow>\\<^sub>C X &&& apply_bcontfun g t0 = x0", "by (auto simp add: iter_space_def mem_PiC_iff split: if_splits)"], ["", "lemma const_in_iter_space: \"const_bcontfun x0 \\<in> iter_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. const_bcontfun x0 \\<in> iter_space", "by (auto simp: iter_space_def iv_defined mem_PiC_iff)"], ["", "lemma closed_iter_space: \"closed iter_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed iter_space", "by (auto simp: iter_space_def intro!: closed_PiC closed)"], ["", "lemma iter_space_notempty: \"iter_space \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iter_space \\<noteq> {}", "using const_in_iter_space"], ["proof (prove)\nusing this:\n  const_bcontfun x0 \\<in> iter_space\n\ngoal (1 subgoal):\n 1. iter_space \\<noteq> {}", "by blast"], ["", "lemma clamp_in_eq[simp]: fixes a x b::real shows \"a \\<le> x \\<Longrightarrow> x \\<le> b \\<Longrightarrow> clamp a b x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> x; x \\<le> b\\<rbrakk> \\<Longrightarrow> clamp a b x = x", "by (auto simp: clamp_def)"], ["", "lemma P_self_mapping:\n  assumes in_space: \"g \\<in> iter_space\"\n  shows \"P g \\<in> iter_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P g \\<in> iter_space", "proof (rule iter_spaceI)"], ["proof (state)\ngoal (2 subgoals):\n 1. P g \\<in> T \\<rightarrow>\\<^sub>C X\n 2. apply_bcontfun (P g) t0 = x0", "show x0: \"P g t0 = x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_bcontfun (P g) t0 = x0", "by (auto simp: P_def' iv_defined iter_spaceD[OF in_space])"], ["proof (state)\nthis:\n  apply_bcontfun (P g) t0 = x0\n\ngoal (1 subgoal):\n 1. P g \\<in> T \\<rightarrow>\\<^sub>C X", "from iter_spaceD(1)[OF in_space]"], ["proof (chain)\npicking this:\n  g \\<in> T \\<rightarrow>\\<^sub>C X", "show \"P g \\<in> T \\<rightarrow>\\<^sub>C X\""], ["proof (prove)\nusing this:\n  g \\<in> T \\<rightarrow>\\<^sub>C X\n\ngoal (1 subgoal):\n 1. P g \\<in> T \\<rightarrow>\\<^sub>C X", "unfolding mem_PiC_iff Pi_iff"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>T. apply_bcontfun g i \\<in> X\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>T. apply_bcontfun (P g) i \\<in> X", "apply (auto simp: mem_PiC_iff Pi_iff P_def')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i\\<in>T. apply_bcontfun g i \\<in> X;\n        i \\<in> T\\<rbrakk>\n       \\<Longrightarrow> x0 +\n                         ivl_integral t0 i\n                          (\\<lambda>x. f x (apply_bcontfun g x))\n                         \\<in> X", "apply (auto simp: iter_spaceD(2)[OF in_space, symmetric] intro!: self_mapping)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i x.\n       \\<lbrakk>\\<forall>i\\<in>T. apply_bcontfun g i \\<in> X; i \\<in> T;\n        x \\<in> {t0--i}\\<rbrakk>\n       \\<Longrightarrow> apply_bcontfun g x \\<in> X", "using closed_segment_subset_domainI iv_defined(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?t0.0 \\<in> T; ?t \\<in> T; ?s \\<in> {?t0.0--?t}\\<rbrakk>\n  \\<Longrightarrow> ?s \\<in> T\n  t0 \\<in> T\n\ngoal (1 subgoal):\n 1. \\<And>i x.\n       \\<lbrakk>\\<forall>i\\<in>T. apply_bcontfun g i \\<in> X; i \\<in> T;\n        x \\<in> {t0--i}\\<rbrakk>\n       \\<Longrightarrow> apply_bcontfun g x \\<in> X", "by blast"], ["proof (state)\nthis:\n  P g \\<in> T \\<rightarrow>\\<^sub>C X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma continuous_on_T: \"continuous_on {tmin .. tmax} g \\<Longrightarrow> continuous_on T g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {tmin..tmax} g \\<Longrightarrow> continuous_on T g", "using T_def"], ["proof (prove)\nusing this:\n  T = {tmin..tmax}\n\ngoal (1 subgoal):\n 1. continuous_on {tmin..tmax} g \\<Longrightarrow> continuous_on T g", "by auto"], ["", "lemma T_closed_segment_subsetI[intro, simp]: \"t \\<in> {tmin--tmax} \\<Longrightarrow> t \\<in> T\"\n  and T_subsetI[intro, simp]: \"tmin \\<le> t \\<Longrightarrow> t \\<le> tmax \\<Longrightarrow> t \\<in> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<in> {tmin--tmax} \\<Longrightarrow> t \\<in> T) &&&\n    (\\<lbrakk>tmin \\<le> t; t \\<le> tmax\\<rbrakk>\n     \\<Longrightarrow> t \\<in> T)", "by (subst T_def, simp add: closed_segment_eq_real_ivl)+"], ["", "lemma t0_mem_closed_segment[intro, simp]: \"t0 \\<in> {tmin--tmax}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> {tmin--tmax}", "using T_def iv_defined"], ["proof (prove)\nusing this:\n  T = {tmin..tmax}\n  t0 \\<in> T\n  x0 \\<in> X\n\ngoal (1 subgoal):\n 1. t0 \\<in> {tmin--tmax}", "by (simp add: closed_segment_eq_real_ivl)"], ["", "lemma tmin_le_t0[intro, simp]: \"tmin \\<le> t0\"\n  and tmax_ge_t0[intro, simp]: \"tmax \\<ge> t0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tmin \\<le> t0 &&& t0 \\<le> tmax", "using t0_mem_closed_segment"], ["proof (prove)\nusing this:\n  t0 \\<in> {tmin--tmax}\n\ngoal (1 subgoal):\n 1. tmin \\<le> t0 &&& t0 \\<le> tmax", "unfolding closed_segment_eq_real_ivl"], ["proof (prove)\nusing this:\n  t0 \\<in> (if tmin \\<le> tmax then {tmin..tmax} else {tmax..tmin})\n\ngoal (1 subgoal):\n 1. tmin \\<le> t0 &&& t0 \\<le> tmax", "by simp_all"], ["", "lemma apply_bcontfun_solution_fixed_point:\n  assumes ode: \"(apply_bcontfun x solves_ode f) T X\"\n  assumes iv: \"x t0 = x0\"\n  assumes t: \"t \\<in> T\"\n  shows \"P x t = x t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_bcontfun (P x) t = apply_bcontfun x t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. apply_bcontfun (P x) t = apply_bcontfun x t", "have \"t \\<in> {t0 -- t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> {t0--t}", "by simp"], ["proof (state)\nthis:\n  t \\<in> {t0--t}\n\ngoal (1 subgoal):\n 1. apply_bcontfun (P x) t = apply_bcontfun x t", "have ode': \"(apply_bcontfun x solves_ode f) {t0--t} X\" \"t \\<in> {t0 -- t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (apply_bcontfun x solves_ode f) {t0--t} X &&& t \\<in> {t0--t}", "using ode T_def closed_segment_eq_real_ivl t"], ["proof (prove)\nusing this:\n  (apply_bcontfun x solves_ode f) T X\n  T = {tmin..tmax}\n  {?a--?b} = (if ?a \\<le> ?b then {?a..?b} else {?b..?a})\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. (apply_bcontfun x solves_ode f) {t0--t} X &&& t \\<in> {t0--t}", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(apply_bcontfun x solves_ode f) T X; T = {tmin..tmax};\n     \\<And>a b. {a--b} = (if a \\<le> b then {a..b} else {b..a}); t \\<in> T;\n     t0 \\<le> t\\<rbrakk>\n    \\<Longrightarrow> (apply_bcontfun x solves_ode f) {t0..t} X\n 2. \\<lbrakk>(apply_bcontfun x solves_ode f) T X; T = {tmin..tmax};\n     \\<And>a b. {a--b} = (if a \\<le> b then {a..b} else {b..a}); t \\<in> T;\n     \\<not> t0 \\<le> t\\<rbrakk>\n    \\<Longrightarrow> (apply_bcontfun x solves_ode f) {t..t0} X", "using closed_segment_iv_subset_domain solves_ode_on_subset"], ["proof (prove)\nusing this:\n  ?t \\<in> T \\<Longrightarrow> {t0--?t} \\<subseteq> T\n  \\<lbrakk>(?x solves_ode ?f) ?S ?Y; ?T \\<subseteq> ?S;\n   ?Y \\<subseteq> ?X\\<rbrakk>\n  \\<Longrightarrow> (?x solves_ode ?f) ?T ?X\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(apply_bcontfun x solves_ode f) T X; T = {tmin..tmax};\n     \\<And>a b. {a--b} = (if a \\<le> b then {a..b} else {b..a}); t \\<in> T;\n     t0 \\<le> t\\<rbrakk>\n    \\<Longrightarrow> (apply_bcontfun x solves_ode f) {t0..t} X\n 2. \\<lbrakk>(apply_bcontfun x solves_ode f) T X; T = {tmin..tmax};\n     \\<And>a b. {a--b} = (if a \\<le> b then {a..b} else {b..a}); t \\<in> T;\n     \\<not> t0 \\<le> t\\<rbrakk>\n    \\<Longrightarrow> (apply_bcontfun x solves_ode f) {t..t0} X", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(apply_bcontfun x solves_ode f) T X; T = {tmin..tmax};\n     \\<And>a b. {a--b} = (if a \\<le> b then {a..b} else {b..a}); t \\<in> T;\n     \\<not> t0 \\<le> t\\<rbrakk>\n    \\<Longrightarrow> (apply_bcontfun x solves_ode f) {t..t0} X", "using closed_segment_iv_subset_domain solves_ode_on_subset"], ["proof (prove)\nusing this:\n  ?t \\<in> T \\<Longrightarrow> {t0--?t} \\<subseteq> T\n  \\<lbrakk>(?x solves_ode ?f) ?S ?Y; ?T \\<subseteq> ?S;\n   ?Y \\<subseteq> ?X\\<rbrakk>\n  \\<Longrightarrow> (?x solves_ode ?f) ?T ?X\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(apply_bcontfun x solves_ode f) T X; T = {tmin..tmax};\n     \\<And>a b. {a--b} = (if a \\<le> b then {a..b} else {b..a}); t \\<in> T;\n     \\<not> t0 \\<le> t\\<rbrakk>\n    \\<Longrightarrow> (apply_bcontfun x solves_ode f) {t..t0} X", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (apply_bcontfun x solves_ode f) {t0--t} X\n  t \\<in> {t0--t}\n\ngoal (1 subgoal):\n 1. apply_bcontfun (P x) t = apply_bcontfun x t", "from solves_odeD[OF ode]"], ["proof (chain)\npicking this:\n  (apply_bcontfun x has_vderiv_on (\\<lambda>t. f t (apply_bcontfun x t))) T\n  ?t \\<in> T \\<Longrightarrow> apply_bcontfun x ?t \\<in> X", "have x: \"x \\<in> T \\<rightarrow>\\<^sub>C X\""], ["proof (prove)\nusing this:\n  (apply_bcontfun x has_vderiv_on (\\<lambda>t. f t (apply_bcontfun x t))) T\n  ?t \\<in> T \\<Longrightarrow> apply_bcontfun x ?t \\<in> X\n\ngoal (1 subgoal):\n 1. x \\<in> T \\<rightarrow>\\<^sub>C X", "by (auto simp: mem_PiC_iff)"], ["proof (state)\nthis:\n  x \\<in> T \\<rightarrow>\\<^sub>C X\n\ngoal (1 subgoal):\n 1. apply_bcontfun (P x) t = apply_bcontfun x t", "from solution_fixed_point[OF ode'] iv"], ["proof (chain)\npicking this:\n  apply_bcontfun x t0 +\n  ivl_integral t0 t (\\<lambda>t. f t (apply_bcontfun x t)) =\n  apply_bcontfun x t\n  apply_bcontfun x t0 = x0", "show ?thesis"], ["proof (prove)\nusing this:\n  apply_bcontfun x t0 +\n  ivl_integral t0 t (\\<lambda>t. f t (apply_bcontfun x t)) =\n  apply_bcontfun x t\n  apply_bcontfun x t0 = x0\n\ngoal (1 subgoal):\n 1. apply_bcontfun (P x) t = apply_bcontfun x t", "unfolding P_def'[OF t x]"], ["proof (prove)\nusing this:\n  apply_bcontfun x t0 +\n  ivl_integral t0 t (\\<lambda>t. f t (apply_bcontfun x t)) =\n  apply_bcontfun x t\n  apply_bcontfun x t0 = x0\n\ngoal (1 subgoal):\n 1. x0 + ivl_integral t0 t (\\<lambda>xa. f xa (apply_bcontfun x xa)) =\n    apply_bcontfun x t", "by simp"], ["proof (state)\nthis:\n  apply_bcontfun (P x) t = apply_bcontfun x t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  solution_in_iter_space:\n  assumes ode: \"(apply_bcontfun z solves_ode f) T X\"\n  assumes iv: \"z t0 = x0\"\n  shows \"z \\<in> iter_space\" (is \"?z \\<in> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> iter_space", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<in> iter_space", "from T_def ode"], ["proof (chain)\npicking this:\n  T = {tmin..tmax}\n  (apply_bcontfun z solves_ode f) T X", "have ode: \"(z solves_ode f) {tmin -- tmax} X\""], ["proof (prove)\nusing this:\n  T = {tmin..tmax}\n  (apply_bcontfun z solves_ode f) T X\n\ngoal (1 subgoal):\n 1. (apply_bcontfun z solves_ode f) {tmin--tmax} X", "by (simp add: closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  (apply_bcontfun z solves_ode f) {tmin--tmax} X\n\ngoal (1 subgoal):\n 1. z \\<in> iter_space", "have \"(?z solves_ode f) T X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (apply_bcontfun z solves_ode f) T X", "using is_solution_ext_cont[OF solves_ode_continuous_on[OF ode], of f X] ode T_def"], ["proof (prove)\nusing this:\n  (ext_cont (apply_bcontfun z) (min tmin tmax) (max tmin tmax) solves_ode f)\n   {tmin--tmax} X =\n  (apply_bcontfun z solves_ode f) {tmin--tmax} X\n  (apply_bcontfun z solves_ode f) {tmin--tmax} X\n  T = {tmin..tmax}\n\ngoal (1 subgoal):\n 1. (apply_bcontfun z solves_ode f) T X", "by (auto simp: min_def max_def closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  (apply_bcontfun z solves_ode f) T X\n\ngoal (1 subgoal):\n 1. z \\<in> iter_space", "then"], ["proof (chain)\npicking this:\n  (apply_bcontfun z solves_ode f) T X", "have \"z \\<in> T \\<rightarrow>\\<^sub>C X\""], ["proof (prove)\nusing this:\n  (apply_bcontfun z solves_ode f) T X\n\ngoal (1 subgoal):\n 1. z \\<in> T \\<rightarrow>\\<^sub>C X", "by (auto simp add: solves_ode_def mem_PiC_iff)"], ["proof (state)\nthis:\n  z \\<in> T \\<rightarrow>\\<^sub>C X\n\ngoal (1 subgoal):\n 1. z \\<in> iter_space", "thus \"?z \\<in> iter_space\""], ["proof (prove)\nusing this:\n  z \\<in> T \\<rightarrow>\\<^sub>C X\n\ngoal (1 subgoal):\n 1. z \\<in> iter_space", "by (auto simp: iv intro!: iter_spaceI)"], ["proof (state)\nthis:\n  z \\<in> iter_space\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "locale unique_on_bounded_closed = unique_on_closed +\n  assumes lipschitz_bound: \"\\<And>s t. s \\<in> T \\<Longrightarrow> t \\<in> T \\<Longrightarrow> abs (s - t) * L < 1\"\nbegin"], ["", "lemma lipschitz_bound_maxmin: \"(tmax - tmin) * L < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (tmax - tmin) * L < 1", "using lipschitz_bound[of tmax tmin]"], ["proof (prove)\nusing this:\n  \\<lbrakk>tmax \\<in> T; tmin \\<in> T\\<rbrakk>\n  \\<Longrightarrow> \\<bar>tmax - tmin\\<bar> * L < 1\n\ngoal (1 subgoal):\n 1. (tmax - tmin) * L < 1", "by auto"], ["", "lemma lipschitz_P:\n  shows \"((tmax - tmin) * L)-lipschitz_on iter_space P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((tmax - tmin) * L)-lipschitz_on iter_space P", "proof (rule lipschitz_onI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y\n 2. 0 \\<le> (tmax - tmin) * L", "have \"t0 \\<in> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> T", "by (simp add: iv_defined)"], ["proof (state)\nthis:\n  t0 \\<in> T\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y\n 2. 0 \\<le> (tmax - tmin) * L", "then"], ["proof (chain)\npicking this:\n  t0 \\<in> T", "show \"0 \\<le> (tmax - tmin) * L\""], ["proof (prove)\nusing this:\n  t0 \\<in> T\n\ngoal (1 subgoal):\n 1. 0 \\<le> (tmax - tmin) * L", "using T_def"], ["proof (prove)\nusing this:\n  t0 \\<in> T\n  T = {tmin..tmax}\n\ngoal (1 subgoal):\n 1. 0 \\<le> (tmax - tmin) * L", "by (auto intro!: mult_nonneg_nonneg lipschitz lipschitz_on_nonneg[OF lipschitz]\n      iv_defined)"], ["proof (state)\nthis:\n  0 \\<le> (tmax - tmin) * L\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "fix y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "assume \"y \\<in> iter_space\" and \"z \\<in> iter_space\""], ["proof (state)\nthis:\n  y \\<in> iter_space\n  z \\<in> iter_space\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "hence y_defined: \"y \\<in> (T \\<rightarrow>\\<^sub>C X)\" and \"y t0 = x0\"\n    and z_defined: \"z \\<in> (T \\<rightarrow>\\<^sub>C X)\" and \"y t0 = x0\""], ["proof (prove)\nusing this:\n  y \\<in> iter_space\n  z \\<in> iter_space\n\ngoal (1 subgoal):\n 1. (y \\<in> T \\<rightarrow>\\<^sub>C X &&& apply_bcontfun y t0 = x0) &&&\n    z \\<in> T \\<rightarrow>\\<^sub>C X &&& apply_bcontfun y t0 = x0", "by (auto dest: iter_spaceD)"], ["proof (state)\nthis:\n  y \\<in> T \\<rightarrow>\\<^sub>C X\n  apply_bcontfun y t0 = x0\n  z \\<in> T \\<rightarrow>\\<^sub>C X\n  apply_bcontfun y t0 = x0\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "have defined: \"s \\<in> T\" \"y s \\<in> X\" \"z s \\<in> X\" if \"s \\<in> closed_segment tmin tmax\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> T &&& apply_bcontfun y s \\<in> X &&& apply_bcontfun z s \\<in> X", "using y_defined z_defined that T_def"], ["proof (prove)\nusing this:\n  y \\<in> T \\<rightarrow>\\<^sub>C X\n  z \\<in> T \\<rightarrow>\\<^sub>C X\n  s \\<in> {tmin--tmax}\n  T = {tmin..tmax}\n\ngoal (1 subgoal):\n 1. s \\<in> T &&& apply_bcontfun y s \\<in> X &&& apply_bcontfun z s \\<in> X", "by (auto simp: mem_PiC_iff)"], ["proof (state)\nthis:\n  ?s \\<in> {tmin--tmax} \\<Longrightarrow> ?s \\<in> T\n  ?s \\<in> {tmin--tmax} \\<Longrightarrow> apply_bcontfun y ?s \\<in> X\n  ?s \\<in> {tmin--tmax} \\<Longrightarrow> apply_bcontfun z ?s \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "{"], ["proof (state)\nthis:\n  ?s \\<in> {tmin--tmax} \\<Longrightarrow> ?s \\<in> T\n  ?s \\<in> {tmin--tmax} \\<Longrightarrow> apply_bcontfun y ?s \\<in> X\n  ?s \\<in> {tmin--tmax} \\<Longrightarrow> apply_bcontfun z ?s \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "note [intro, simp] = integrable_continuous_closed_segment"], ["proof (state)\nthis:\n  continuous_on {?a--?b} ?f \\<Longrightarrow> ?f integrable_on {?a--?b}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "assume t_bounds: \"tmin \\<le> t\" \"t \\<le> tmax\""], ["proof (state)\nthis:\n  tmin \\<le> t\n  t \\<le> tmax\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "then"], ["proof (chain)\npicking this:\n  tmin \\<le> t\n  t \\<le> tmax", "have cs_subs: \"closed_segment t0 t \\<subseteq> closed_segment tmin tmax\""], ["proof (prove)\nusing this:\n  tmin \\<le> t\n  t \\<le> tmax\n\ngoal (1 subgoal):\n 1. {t0--t} \\<subseteq> {tmin--tmax}", "by (auto simp: closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  {t0--t} \\<subseteq> {tmin--tmax}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "then"], ["proof (chain)\npicking this:\n  {t0--t} \\<subseteq> {tmin--tmax}", "have cs_subs_ext: \"\\<And>ta. ta \\<in> {t0--t} \\<Longrightarrow> ta \\<in> {tmin--tmax}\""], ["proof (prove)\nusing this:\n  {t0--t} \\<subseteq> {tmin--tmax}\n\ngoal (1 subgoal):\n 1. \\<And>ta. ta \\<in> {t0--t} \\<Longrightarrow> ta \\<in> {tmin--tmax}", "by auto"], ["proof (state)\nthis:\n  ?ta \\<in> {t0--t} \\<Longrightarrow> ?ta \\<in> {tmin--tmax}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "have \"norm (P_inner y t - P_inner z t) =\n      norm (ivl_integral t0 t (\\<lambda>t. f t (y t) - f t (z t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (P_inner (apply_bcontfun y) t - P_inner (apply_bcontfun z) t) =\n    norm\n     (ivl_integral t0 t\n       (\\<lambda>t. f t (apply_bcontfun y t) - f t (apply_bcontfun z t)))", "by (subst ivl_integral_diff)\n        (auto intro!: integrable_continuous_closed_segment continuous_intros defined cs_subs_ext simp: P_inner_def)"], ["proof (state)\nthis:\n  norm (P_inner (apply_bcontfun y) t - P_inner (apply_bcontfun z) t) =\n  norm\n   (ivl_integral t0 t\n     (\\<lambda>t. f t (apply_bcontfun y t) - f t (apply_bcontfun z t)))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "also"], ["proof (state)\nthis:\n  norm (P_inner (apply_bcontfun y) t - P_inner (apply_bcontfun z) t) =\n  norm\n   (ivl_integral t0 t\n     (\\<lambda>t. f t (apply_bcontfun y t) - f t (apply_bcontfun z t)))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "have \"... \\<le> abs (ivl_integral t0 t (\\<lambda>t. norm (f t (y t) - f t (z t))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm\n     (ivl_integral t0 t\n       (\\<lambda>t. f t (apply_bcontfun y t) - f t (apply_bcontfun z t)))\n    \\<le> \\<bar>ivl_integral t0 t\n                 (\\<lambda>t.\n                     norm\n                      (f t (apply_bcontfun y t) -\n                       f t (apply_bcontfun z t)))\\<bar>", "by (rule ivl_integral_norm_bound_ivl_integral)\n        (auto intro!: ivl_integral_norm_bound_ivl_integral continuous_intros integrable_continuous_closed_segment\n          simp: defined cs_subs_ext)"], ["proof (state)\nthis:\n  norm\n   (ivl_integral t0 t\n     (\\<lambda>t. f t (apply_bcontfun y t) - f t (apply_bcontfun z t)))\n  \\<le> \\<bar>ivl_integral t0 t\n               (\\<lambda>t.\n                   norm\n                    (f t (apply_bcontfun y t) -\n                     f t (apply_bcontfun z t)))\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "also"], ["proof (state)\nthis:\n  norm\n   (ivl_integral t0 t\n     (\\<lambda>t. f t (apply_bcontfun y t) - f t (apply_bcontfun z t)))\n  \\<le> \\<bar>ivl_integral t0 t\n               (\\<lambda>t.\n                   norm\n                    (f t (apply_bcontfun y t) -\n                     f t (apply_bcontfun z t)))\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "have \"... \\<le> abs (ivl_integral t0 t (\\<lambda>t. L * norm (y t - z t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>ivl_integral t0 t\n           (\\<lambda>t.\n               norm\n                (f t (apply_bcontfun y t) - f t (apply_bcontfun z t)))\\<bar>\n    \\<le> \\<bar>ivl_integral t0 t\n                 (\\<lambda>t.\n                     L *\n                     norm (apply_bcontfun y t - apply_bcontfun z t))\\<bar>", "using lipschitz t_bounds T_def y_defined z_defined cs_subs"], ["proof (prove)\nusing this:\n  ?t \\<in> T \\<Longrightarrow> L-lipschitz_on X (f ?t)\n  tmin \\<le> t\n  t \\<le> tmax\n  T = {tmin..tmax}\n  y \\<in> T \\<rightarrow>\\<^sub>C X\n  z \\<in> T \\<rightarrow>\\<^sub>C X\n  {t0--t} \\<subseteq> {tmin--tmax}\n\ngoal (1 subgoal):\n 1. \\<bar>ivl_integral t0 t\n           (\\<lambda>t.\n               norm\n                (f t (apply_bcontfun y t) - f t (apply_bcontfun z t)))\\<bar>\n    \\<le> \\<bar>ivl_integral t0 t\n                 (\\<lambda>t.\n                     L *\n                     norm (apply_bcontfun y t - apply_bcontfun z t))\\<bar>", "by (intro norm_ivl_integral_le) (auto intro!: continuous_intros integrable_continuous_closed_segment\n        simp add: dist_norm lipschitz_on_def mem_PiC_iff Pi_iff)"], ["proof (state)\nthis:\n  \\<bar>ivl_integral t0 t\n         (\\<lambda>t.\n             norm\n              (f t (apply_bcontfun y t) - f t (apply_bcontfun z t)))\\<bar>\n  \\<le> \\<bar>ivl_integral t0 t\n               (\\<lambda>t.\n                   L * norm (apply_bcontfun y t - apply_bcontfun z t))\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "also"], ["proof (state)\nthis:\n  \\<bar>ivl_integral t0 t\n         (\\<lambda>t.\n             norm\n              (f t (apply_bcontfun y t) - f t (apply_bcontfun z t)))\\<bar>\n  \\<le> \\<bar>ivl_integral t0 t\n               (\\<lambda>t.\n                   L * norm (apply_bcontfun y t - apply_bcontfun z t))\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "have \"... \\<le> abs (ivl_integral t0 t (\\<lambda>t. L * norm (y - z)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>ivl_integral t0 t\n           (\\<lambda>t.\n               L * norm (apply_bcontfun y t - apply_bcontfun z t))\\<bar>\n    \\<le> \\<bar>ivl_integral t0 t (\\<lambda>t. L * norm (y - z))\\<bar>", "using norm_bounded[of \"y - z\"]\n        L_nonneg"], ["proof (prove)\nusing this:\n  norm (apply_bcontfun (y - z) ?x) \\<le> norm (y - z)\n  0 \\<le> L\n\ngoal (1 subgoal):\n 1. \\<bar>ivl_integral t0 t\n           (\\<lambda>t.\n               L * norm (apply_bcontfun y t - apply_bcontfun z t))\\<bar>\n    \\<le> \\<bar>ivl_integral t0 t (\\<lambda>t. L * norm (y - z))\\<bar>", "by (intro norm_ivl_integral_le) (auto intro!: continuous_intros mult_left_mono)"], ["proof (state)\nthis:\n  \\<bar>ivl_integral t0 t\n         (\\<lambda>t.\n             L * norm (apply_bcontfun y t - apply_bcontfun z t))\\<bar>\n  \\<le> \\<bar>ivl_integral t0 t (\\<lambda>t. L * norm (y - z))\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "also"], ["proof (state)\nthis:\n  \\<bar>ivl_integral t0 t\n         (\\<lambda>t.\n             L * norm (apply_bcontfun y t - apply_bcontfun z t))\\<bar>\n  \\<le> \\<bar>ivl_integral t0 t (\\<lambda>t. L * norm (y - z))\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "have \"... = L * abs (t - t0) * norm (y - z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>ivl_integral t0 t (\\<lambda>t. L * norm (y - z))\\<bar> =\n    L * \\<bar>t - t0\\<bar> * norm (y - z)", "using t_bounds L_nonneg"], ["proof (prove)\nusing this:\n  tmin \\<le> t\n  t \\<le> tmax\n  0 \\<le> L\n\ngoal (1 subgoal):\n 1. \\<bar>ivl_integral t0 t (\\<lambda>t. L * norm (y - z))\\<bar> =\n    L * \\<bar>t - t0\\<bar> * norm (y - z)", "by (simp add: abs_mult)"], ["proof (state)\nthis:\n  \\<bar>ivl_integral t0 t (\\<lambda>t. L * norm (y - z))\\<bar> =\n  L * \\<bar>t - t0\\<bar> * norm (y - z)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "also"], ["proof (state)\nthis:\n  \\<bar>ivl_integral t0 t (\\<lambda>t. L * norm (y - z))\\<bar> =\n  L * \\<bar>t - t0\\<bar> * norm (y - z)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "have \"... \\<le> L * (tmax - tmin) * norm (y - z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L * \\<bar>t - t0\\<bar> * norm (y - z)\n    \\<le> L * (tmax - tmin) * norm (y - z)", "using t_bounds zero_le_dist L_nonneg cs_subs tmin_le_t0 tmax_ge_t0"], ["proof (prove)\nusing this:\n  tmin \\<le> t\n  t \\<le> tmax\n  0 \\<le> dist ?x ?y\n  0 \\<le> L\n  {t0--t} \\<subseteq> {tmin--tmax}\n  tmin \\<le> t0\n  t0 \\<le> tmax\n\ngoal (1 subgoal):\n 1. L * \\<bar>t - t0\\<bar> * norm (y - z)\n    \\<le> L * (tmax - tmin) * norm (y - z)", "by (auto intro!: mult_right_mono mult_left_mono simp: closed_segment_eq_real_ivl abs_real_def\n        simp del: tmin_le_t0 tmax_ge_t0 split: if_split_asm)"], ["proof (state)\nthis:\n  L * \\<bar>t - t0\\<bar> * norm (y - z)\n  \\<le> L * (tmax - tmin) * norm (y - z)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "finally"], ["proof (chain)\npicking this:\n  norm (P_inner (apply_bcontfun y) t - P_inner (apply_bcontfun z) t)\n  \\<le> L * (tmax - tmin) * norm (y - z)", "have \"dist (P_inner y t) (P_inner z t) \\<le> (tmax - tmin) * L * dist y z\""], ["proof (prove)\nusing this:\n  norm (P_inner (apply_bcontfun y) t - P_inner (apply_bcontfun z) t)\n  \\<le> L * (tmax - tmin) * norm (y - z)\n\ngoal (1 subgoal):\n 1. dist (P_inner (apply_bcontfun y) t) (P_inner (apply_bcontfun z) t)\n    \\<le> (tmax - tmin) * L * dist y z", "by (simp add: dist_norm ac_simps)"], ["proof (state)\nthis:\n  dist (P_inner (apply_bcontfun y) t) (P_inner (apply_bcontfun z) t)\n  \\<le> (tmax - tmin) * L * dist y z\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "}"], ["proof (state)\nthis:\n  \\<lbrakk>tmin \\<le> ?t2; ?t2 \\<le> tmax\\<rbrakk>\n  \\<Longrightarrow> dist (P_inner (apply_bcontfun y) ?t2)\n                     (P_inner (apply_bcontfun z) ?t2)\n                    \\<le> (tmax - tmin) * L * dist y z\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "note * = this"], ["proof (state)\nthis:\n  \\<lbrakk>tmin \\<le> ?t2; ?t2 \\<le> tmax\\<rbrakk>\n  \\<Longrightarrow> dist (P_inner (apply_bcontfun y) ?t2)\n                     (P_inner (apply_bcontfun z) ?t2)\n                    \\<le> (tmax - tmin) * L * dist y z\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> iter_space; y \\<in> iter_space\\<rbrakk>\n       \\<Longrightarrow> dist (P x) (P y) \\<le> (tmax - tmin) * L * dist x y", "show \"dist (P y) (P z) \\<le> (tmax - tmin) * L * dist y z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (P y) (P z) \\<le> (tmax - tmin) * L * dist y z", "by (auto intro!: dist_bound dist_P_le * y_defined z_defined mult_nonneg_nonneg L_nonneg)"], ["proof (state)\nthis:\n  dist (P y) (P z) \\<le> (tmax - tmin) * L * dist y z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fixed_point_unique: \"\\<exists>!x\\<in>iter_space. P x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!x. x \\<in> iter_space \\<and> P x = x", "using lipschitz lipschitz_bound_maxmin lipschitz_P T_def\n      complete_UNIV iv_defined"], ["proof (prove)\nusing this:\n  ?t \\<in> T \\<Longrightarrow> L-lipschitz_on X (f ?t)\n  (tmax - tmin) * L < 1\n  ((tmax - tmin) * L)-lipschitz_on iter_space P\n  T = {tmin..tmax}\n  complete UNIV\n  t0 \\<in> T\n  x0 \\<in> X\n\ngoal (1 subgoal):\n 1. \\<exists>!x. x \\<in> iter_space \\<and> P x = x", "by (intro banach_fix)\n    (auto\n      intro: P_self_mapping split_mult_pos_le\n      intro!: closed_iter_space iter_space_notempty mult_nonneg_nonneg\n      simp: lipschitz_on_def complete_eq_closed)"], ["", "definition fixed_point where\n  \"fixed_point = (THE x. x \\<in> iter_space \\<and> P x = x)\""], ["", "lemma fixed_point':\n  \"fixed_point \\<in> iter_space \\<and> P fixed_point = fixed_point\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fixed_point \\<in> iter_space \\<and> P fixed_point = fixed_point", "unfolding fixed_point_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE x. x \\<in> iter_space \\<and> P x = x) \\<in> iter_space \\<and>\n    P (THE x. x \\<in> iter_space \\<and> P x = x) =\n    (THE x. x \\<in> iter_space \\<and> P x = x)", "using fixed_point_unique"], ["proof (prove)\nusing this:\n  \\<exists>!x. x \\<in> iter_space \\<and> P x = x\n\ngoal (1 subgoal):\n 1. (THE x. x \\<in> iter_space \\<and> P x = x) \\<in> iter_space \\<and>\n    P (THE x. x \\<in> iter_space \\<and> P x = x) =\n    (THE x. x \\<in> iter_space \\<and> P x = x)", "by (rule theI')"], ["", "lemma fixed_point:\n  \"fixed_point \\<in> iter_space\" \"P fixed_point = fixed_point\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fixed_point \\<in> iter_space &&& P fixed_point = fixed_point", "using fixed_point'"], ["proof (prove)\nusing this:\n  fixed_point \\<in> iter_space \\<and> P fixed_point = fixed_point\n\ngoal (1 subgoal):\n 1. fixed_point \\<in> iter_space &&& P fixed_point = fixed_point", "by simp_all"], ["", "lemma fixed_point_equality': \"x \\<in> iter_space \\<and> P x = x \\<Longrightarrow> fixed_point = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> iter_space \\<and> P x = x \\<Longrightarrow> fixed_point = x", "unfolding fixed_point_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> iter_space \\<and> P x = x \\<Longrightarrow>\n    (THE x. x \\<in> iter_space \\<and> P x = x) = x", "using fixed_point_unique"], ["proof (prove)\nusing this:\n  \\<exists>!x. x \\<in> iter_space \\<and> P x = x\n\ngoal (1 subgoal):\n 1. x \\<in> iter_space \\<and> P x = x \\<Longrightarrow>\n    (THE x. x \\<in> iter_space \\<and> P x = x) = x", "by (rule the1_equality)"], ["", "lemma fixed_point_equality: \"x \\<in> iter_space \\<Longrightarrow> P x = x \\<Longrightarrow> fixed_point = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> iter_space; P x = x\\<rbrakk>\n    \\<Longrightarrow> fixed_point = x", "using fixed_point_equality'[of x]"], ["proof (prove)\nusing this:\n  x \\<in> iter_space \\<and> P x = x \\<Longrightarrow> fixed_point = x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> iter_space; P x = x\\<rbrakk>\n    \\<Longrightarrow> fixed_point = x", "by auto"], ["", "lemma fixed_point_iv: \"fixed_point t0 = x0\"\n  and fixed_point_domain: \"x \\<in> T \\<Longrightarrow> fixed_point x \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_bcontfun fixed_point t0 = x0 &&&\n    (x \\<in> T \\<Longrightarrow> apply_bcontfun fixed_point x \\<in> X)", "using fixed_point"], ["proof (prove)\nusing this:\n  fixed_point \\<in> iter_space\n  P fixed_point = fixed_point\n\ngoal (1 subgoal):\n 1. apply_bcontfun fixed_point t0 = x0 &&&\n    (x \\<in> T \\<Longrightarrow> apply_bcontfun fixed_point x \\<in> X)", "by (force dest: iter_spaceD simp: mem_PiC_iff)+"], ["", "lemma fixed_point_has_vderiv_on: \"(fixed_point has_vderiv_on (\\<lambda>t. f t (fixed_point t))) T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (apply_bcontfun fixed_point has_vderiv_on\n     (\\<lambda>t. f t (apply_bcontfun fixed_point t)))\n     T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (apply_bcontfun fixed_point has_vderiv_on\n     (\\<lambda>t. f t (apply_bcontfun fixed_point t)))\n     T", "have \"continuous_on T (\\<lambda>x. f x (fixed_point x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on T (\\<lambda>x. f x (apply_bcontfun fixed_point x))", "using fixed_point_domain"], ["proof (prove)\nusing this:\n  ?x \\<in> T \\<Longrightarrow> apply_bcontfun fixed_point ?x \\<in> X\n\ngoal (1 subgoal):\n 1. continuous_on T (\\<lambda>x. f x (apply_bcontfun fixed_point x))", "by (auto intro!: continuous_intros)"], ["proof (state)\nthis:\n  continuous_on T (\\<lambda>x. f x (apply_bcontfun fixed_point x))\n\ngoal (1 subgoal):\n 1. (apply_bcontfun fixed_point has_vderiv_on\n     (\\<lambda>t. f t (apply_bcontfun fixed_point t)))\n     T", "then"], ["proof (chain)\npicking this:\n  continuous_on T (\\<lambda>x. f x (apply_bcontfun fixed_point x))", "have \"((\\<lambda>u. x0 + ivl_integral t0 u (\\<lambda>x. f x (fixed_point x))) has_vderiv_on (\\<lambda>t. f t (fixed_point t))) T\""], ["proof (prove)\nusing this:\n  continuous_on T (\\<lambda>x. f x (apply_bcontfun fixed_point x))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u.\n         x0 +\n         ivl_integral t0 u\n          (\\<lambda>x. f x (apply_bcontfun fixed_point x))) has_vderiv_on\n     (\\<lambda>t. f t (apply_bcontfun fixed_point t)))\n     T", "by (auto intro!: derivative_intros ivl_integral_has_vderiv_on_compact_interval interval compact_time)"], ["proof (state)\nthis:\n  ((\\<lambda>u.\n       x0 +\n       ivl_integral t0 u\n        (\\<lambda>x. f x (apply_bcontfun fixed_point x))) has_vderiv_on\n   (\\<lambda>t. f t (apply_bcontfun fixed_point t)))\n   T\n\ngoal (1 subgoal):\n 1. (apply_bcontfun fixed_point has_vderiv_on\n     (\\<lambda>t. f t (apply_bcontfun fixed_point t)))\n     T", "then"], ["proof (chain)\npicking this:\n  ((\\<lambda>u.\n       x0 +\n       ivl_integral t0 u\n        (\\<lambda>x. f x (apply_bcontfun fixed_point x))) has_vderiv_on\n   (\\<lambda>t. f t (apply_bcontfun fixed_point t)))\n   T", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>u.\n       x0 +\n       ivl_integral t0 u\n        (\\<lambda>x. f x (apply_bcontfun fixed_point x))) has_vderiv_on\n   (\\<lambda>t. f t (apply_bcontfun fixed_point t)))\n   T\n\ngoal (1 subgoal):\n 1. (apply_bcontfun fixed_point has_vderiv_on\n     (\\<lambda>t. f t (apply_bcontfun fixed_point t)))\n     T", "proof (rule has_vderiv_eq)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> T \\<Longrightarrow>\n       x0 +\n       ivl_integral t0 x (\\<lambda>x. f x (apply_bcontfun fixed_point x)) =\n       apply_bcontfun fixed_point x\n 2. \\<And>x.\n       x \\<in> T \\<Longrightarrow>\n       f x (apply_bcontfun fixed_point x) =\n       f x (apply_bcontfun fixed_point x)\n 3. T = T", "fix t"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> T \\<Longrightarrow>\n       x0 +\n       ivl_integral t0 x (\\<lambda>x. f x (apply_bcontfun fixed_point x)) =\n       apply_bcontfun fixed_point x\n 2. \\<And>x.\n       x \\<in> T \\<Longrightarrow>\n       f x (apply_bcontfun fixed_point x) =\n       f x (apply_bcontfun fixed_point x)\n 3. T = T", "assume t: \"t \\<in> T\""], ["proof (state)\nthis:\n  t \\<in> T\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> T \\<Longrightarrow>\n       x0 +\n       ivl_integral t0 x (\\<lambda>x. f x (apply_bcontfun fixed_point x)) =\n       apply_bcontfun fixed_point x\n 2. \\<And>x.\n       x \\<in> T \\<Longrightarrow>\n       f x (apply_bcontfun fixed_point x) =\n       f x (apply_bcontfun fixed_point x)\n 3. T = T", "have \"fixed_point t = P fixed_point t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_bcontfun fixed_point t = apply_bcontfun (P fixed_point) t", "using fixed_point"], ["proof (prove)\nusing this:\n  fixed_point \\<in> iter_space\n  P fixed_point = fixed_point\n\ngoal (1 subgoal):\n 1. apply_bcontfun fixed_point t = apply_bcontfun (P fixed_point) t", "by simp"], ["proof (state)\nthis:\n  apply_bcontfun fixed_point t = apply_bcontfun (P fixed_point) t\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> T \\<Longrightarrow>\n       x0 +\n       ivl_integral t0 x (\\<lambda>x. f x (apply_bcontfun fixed_point x)) =\n       apply_bcontfun fixed_point x\n 2. \\<And>x.\n       x \\<in> T \\<Longrightarrow>\n       f x (apply_bcontfun fixed_point x) =\n       f x (apply_bcontfun fixed_point x)\n 3. T = T", "also"], ["proof (state)\nthis:\n  apply_bcontfun fixed_point t = apply_bcontfun (P fixed_point) t\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> T \\<Longrightarrow>\n       x0 +\n       ivl_integral t0 x (\\<lambda>x. f x (apply_bcontfun fixed_point x)) =\n       apply_bcontfun fixed_point x\n 2. \\<And>x.\n       x \\<in> T \\<Longrightarrow>\n       f x (apply_bcontfun fixed_point x) =\n       f x (apply_bcontfun fixed_point x)\n 3. T = T", "have \"\\<dots> = x0 + ivl_integral t0 t (\\<lambda>x. f x (fixed_point x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_bcontfun (P fixed_point) t =\n    x0 + ivl_integral t0 t (\\<lambda>x. f x (apply_bcontfun fixed_point x))", "using t fixed_point_domain"], ["proof (prove)\nusing this:\n  t \\<in> T\n  ?x \\<in> T \\<Longrightarrow> apply_bcontfun fixed_point ?x \\<in> X\n\ngoal (1 subgoal):\n 1. apply_bcontfun (P fixed_point) t =\n    x0 + ivl_integral t0 t (\\<lambda>x. f x (apply_bcontfun fixed_point x))", "by (auto simp: P_def' mem_PiC_iff)"], ["proof (state)\nthis:\n  apply_bcontfun (P fixed_point) t =\n  x0 + ivl_integral t0 t (\\<lambda>x. f x (apply_bcontfun fixed_point x))\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> T \\<Longrightarrow>\n       x0 +\n       ivl_integral t0 x (\\<lambda>x. f x (apply_bcontfun fixed_point x)) =\n       apply_bcontfun fixed_point x\n 2. \\<And>x.\n       x \\<in> T \\<Longrightarrow>\n       f x (apply_bcontfun fixed_point x) =\n       f x (apply_bcontfun fixed_point x)\n 3. T = T", "finally"], ["proof (chain)\npicking this:\n  apply_bcontfun fixed_point t =\n  x0 + ivl_integral t0 t (\\<lambda>x. f x (apply_bcontfun fixed_point x))", "show \"x0 + ivl_integral t0 t (\\<lambda>x. f x (fixed_point x)) = fixed_point t\""], ["proof (prove)\nusing this:\n  apply_bcontfun fixed_point t =\n  x0 + ivl_integral t0 t (\\<lambda>x. f x (apply_bcontfun fixed_point x))\n\ngoal (1 subgoal):\n 1. x0 +\n    ivl_integral t0 t (\\<lambda>x. f x (apply_bcontfun fixed_point x)) =\n    apply_bcontfun fixed_point t", "by simp"], ["proof (state)\nthis:\n  x0 + ivl_integral t0 t (\\<lambda>x. f x (apply_bcontfun fixed_point x)) =\n  apply_bcontfun fixed_point t\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> T \\<Longrightarrow>\n       f x (apply_bcontfun fixed_point x) =\n       f x (apply_bcontfun fixed_point x)\n 2. T = T", "qed (insert T_def, auto simp: closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  (apply_bcontfun fixed_point has_vderiv_on\n   (\\<lambda>t. f t (apply_bcontfun fixed_point t)))\n   T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fixed_point_solution:\n  shows \"(fixed_point solves_ode f) T X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (apply_bcontfun fixed_point solves_ode f) T X", "using fixed_point_has_vderiv_on fixed_point_domain"], ["proof (prove)\nusing this:\n  (apply_bcontfun fixed_point has_vderiv_on\n   (\\<lambda>t. f t (apply_bcontfun fixed_point t)))\n   T\n  ?x \\<in> T \\<Longrightarrow> apply_bcontfun fixed_point ?x \\<in> X\n\ngoal (1 subgoal):\n 1. (apply_bcontfun fixed_point solves_ode f) T X", "by (rule solves_odeI)"], ["", "subsubsection \\<open>Unique solution\\<close>"], ["", "text\\<open>\\label{sec:ivp-ubs}\\<close>"], ["", "lemma solves_ode_equals_fixed_point:\n  assumes ode: \"(x solves_ode f) T X\"\n  assumes iv: \"x t0 = x0\"\n  assumes t: \"t \\<in> T\"\n  shows \"x t = fixed_point t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "from solves_ode_continuous_on[OF ode] T_def"], ["proof (chain)\npicking this:\n  continuous_on T x\n  T = {tmin..tmax}", "have \"continuous_on (cbox tmin tmax) x\""], ["proof (prove)\nusing this:\n  continuous_on T x\n  T = {tmin..tmax}\n\ngoal (1 subgoal):\n 1. continuous_on (cbox tmin tmax) x", "by simp"], ["proof (state)\nthis:\n  continuous_on (cbox tmin tmax) x\n\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "from continuous_on_cbox_bcontfunE[OF this]"], ["proof (chain)\npicking this:\n  (\\<And>g.\n      \\<lbrakk>\\<And>xa.\n                  xa \\<in> cbox tmin tmax \\<Longrightarrow>\n                  apply_bcontfun g xa = x xa;\n       \\<And>xa. apply_bcontfun g xa = x (clamp tmin tmax xa)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain g where g:\n    \"t \\<in> {tmin .. tmax} \\<Longrightarrow> apply_bcontfun g t = x t\"\n    \"apply_bcontfun g t = x (clamp tmin tmax t)\"\n    for t"], ["proof (prove)\nusing this:\n  (\\<And>g.\n      \\<lbrakk>\\<And>xa.\n                  xa \\<in> cbox tmin tmax \\<Longrightarrow>\n                  apply_bcontfun g xa = x xa;\n       \\<And>xa. apply_bcontfun g xa = x (clamp tmin tmax xa)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>\\<And>t.\n                    t \\<in> {tmin..tmax} \\<Longrightarrow>\n                    apply_bcontfun g t = x t;\n         \\<And>t. apply_bcontfun g t = x (clamp tmin tmax t)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis interval_cbox)"], ["proof (state)\nthis:\n  ?t \\<in> {tmin..tmax} \\<Longrightarrow> apply_bcontfun g ?t = x ?t\n  apply_bcontfun g ?t = x (clamp tmin tmax ?t)\n\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "with ode T_def"], ["proof (chain)\npicking this:\n  (x solves_ode f) T X\n  T = {tmin..tmax}\n  ?t \\<in> {tmin..tmax} \\<Longrightarrow> apply_bcontfun g ?t = x ?t\n  apply_bcontfun g ?t = x (clamp tmin tmax ?t)", "have ode_g: \"(g solves_ode f) T X\""], ["proof (prove)\nusing this:\n  (x solves_ode f) T X\n  T = {tmin..tmax}\n  ?t \\<in> {tmin..tmax} \\<Longrightarrow> apply_bcontfun g ?t = x ?t\n  apply_bcontfun g ?t = x (clamp tmin tmax ?t)\n\ngoal (1 subgoal):\n 1. (apply_bcontfun g solves_ode f) T X", "by (metis (no_types, lifting) solves_ode_cong)"], ["proof (state)\nthis:\n  (apply_bcontfun g solves_ode f) T X\n\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "have \"x t = g t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x t = apply_bcontfun g t", "using t T_def"], ["proof (prove)\nusing this:\n  t \\<in> T\n  T = {tmin..tmax}\n\ngoal (1 subgoal):\n 1. x t = apply_bcontfun g t", "by (intro g[symmetric]) auto"], ["proof (state)\nthis:\n  x t = apply_bcontfun g t\n\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "also"], ["proof (state)\nthis:\n  x t = apply_bcontfun g t\n\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "have \"g t0 = x0\" \"g \\<in> T \\<rightarrow>\\<^sub>C X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_bcontfun g t0 = x0 &&& g \\<in> T \\<rightarrow>\\<^sub>C X", "using iv g solves_odeD(2)[OF ode_g]"], ["proof (prove)\nusing this:\n  x t0 = x0\n  ?t \\<in> {tmin..tmax} \\<Longrightarrow> apply_bcontfun g ?t = x ?t\n  apply_bcontfun g ?t = x (clamp tmin tmax ?t)\n  ?t \\<in> T \\<Longrightarrow> apply_bcontfun g ?t \\<in> X\n\ngoal (1 subgoal):\n 1. apply_bcontfun g t0 = x0 &&& g \\<in> T \\<rightarrow>\\<^sub>C X", "unfolding mem_PiC_iff atLeastAtMost_iff"], ["proof (prove)\nusing this:\n  x t0 = x0\n  tmin \\<le> ?t \\<and> ?t \\<le> tmax \\<Longrightarrow>\n  apply_bcontfun g ?t = x ?t\n  apply_bcontfun g ?t = x (clamp tmin tmax ?t)\n  ?t \\<in> T \\<Longrightarrow> apply_bcontfun g ?t \\<in> X\n\ngoal (1 subgoal):\n 1. apply_bcontfun g t0 = x0 &&& apply_bcontfun g \\<in> T \\<rightarrow> X", "by blast+"], ["proof (state)\nthis:\n  apply_bcontfun g t0 = x0\n  g \\<in> T \\<rightarrow>\\<^sub>C X\n\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "then"], ["proof (chain)\npicking this:\n  apply_bcontfun g t0 = x0\n  g \\<in> T \\<rightarrow>\\<^sub>C X", "have \"g \\<in> iter_space\""], ["proof (prove)\nusing this:\n  apply_bcontfun g t0 = x0\n  g \\<in> T \\<rightarrow>\\<^sub>C X\n\ngoal (1 subgoal):\n 1. g \\<in> iter_space", "by (intro iter_spaceI)"], ["proof (state)\nthis:\n  g \\<in> iter_space\n\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "then"], ["proof (chain)\npicking this:\n  g \\<in> iter_space", "have \"g = fixed_point\""], ["proof (prove)\nusing this:\n  g \\<in> iter_space\n\ngoal (1 subgoal):\n 1. g = fixed_point", "apply (rule fixed_point_equality[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. P g = g", "apply (rule bcontfun_eqI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. apply_bcontfun (P g) x = apply_bcontfun g x", "subgoal for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_bcontfun (P g) t = apply_bcontfun g t", "using apply_bcontfun_solution_fixed_point[OF ode_g \\<open>g t0 = x0\\<close>, of tmin]\n        apply_bcontfun_solution_fixed_point[OF ode_g \\<open>g t0 = x0\\<close>, of tmax]\n        apply_bcontfun_solution_fixed_point[OF ode_g \\<open>g t0 = x0\\<close>, of t]"], ["proof (prove)\nusing this:\n  tmin \\<in> T \\<Longrightarrow>\n  apply_bcontfun (P g) tmin = apply_bcontfun g tmin\n  tmax \\<in> T \\<Longrightarrow>\n  apply_bcontfun (P g) tmax = apply_bcontfun g tmax\n  t \\<in> T \\<Longrightarrow> apply_bcontfun (P g) t = apply_bcontfun g t\n\ngoal (1 subgoal):\n 1. apply_bcontfun (P g) t = apply_bcontfun g t", "using T_def"], ["proof (prove)\nusing this:\n  tmin \\<in> T \\<Longrightarrow>\n  apply_bcontfun (P g) tmin = apply_bcontfun g tmin\n  tmax \\<in> T \\<Longrightarrow>\n  apply_bcontfun (P g) tmax = apply_bcontfun g tmax\n  t \\<in> T \\<Longrightarrow> apply_bcontfun (P g) t = apply_bcontfun g t\n  T = {tmin..tmax}\n\ngoal (1 subgoal):\n 1. apply_bcontfun (P g) t = apply_bcontfun g t", "by (fastforce simp: P_eqs not_le \\<open>g \\<in> T \\<rightarrow>\\<^sub>C X\\<close> g)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  g = fixed_point\n\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "finally"], ["proof (chain)\npicking this:\n  x t = apply_bcontfun fixed_point t", "show ?thesis"], ["proof (prove)\nusing this:\n  x t = apply_bcontfun fixed_point t\n\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "."], ["proof (state)\nthis:\n  x t = apply_bcontfun fixed_point t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma solves_ode_on_closed_segment_equals_fixed_point:\n  assumes ode: \"(x solves_ode f) {t0 -- t1'} X\"\n  assumes iv: \"x t0 = x0\"\n  assumes subset: \"{t0--t1'} \\<subseteq> T\"\n  assumes t_mem: \"t \\<in> {t0--t1'}\"\n  shows \"x t = fixed_point t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "have subsetI: \"t \\<in> {t0--t1'} \\<Longrightarrow> t \\<in> T\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> {t0--t1'} \\<Longrightarrow> t \\<in> T", "using subset"], ["proof (prove)\nusing this:\n  {t0--t1'} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. t \\<in> {t0--t1'} \\<Longrightarrow> t \\<in> T", "by auto"], ["proof (state)\nthis:\n  ?t \\<in> {t0--t1'} \\<Longrightarrow> ?t \\<in> T\n\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "interpret s: unique_on_bounded_closed t0 \"{t0--t1'}\" x0 f X L"], ["proof (prove)\ngoal (1 subgoal):\n 1. unique_on_bounded_closed t0 {t0--t1'} x0 f X L", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. unique_on_bounded_closed t0 {t0--t1'} x0 f X L", "apply unfold_locales"], ["proof (prove)\ngoal (9 subgoals):\n 1. is_interval {t0--t1'}\n 2. {t0--t1'} \\<noteq> {}\n 3. compact {t0--t1'}\n 4. t0 \\<in> {t0--t1'}\n 5. x0 \\<in> X\n 6. \\<And>x t.\n       \\<lbrakk>t \\<in> {t0--t1'}; x t0 = x0;\n        x \\<in> {t0--t} \\<rightarrow> X; continuous_on {t0--t} x\\<rbrakk>\n       \\<Longrightarrow> x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t))\n                         \\<in> X\n 7. continuous_on ({t0--t1'} \\<times> X) (\\<lambda>(t, x). f t x)\n 8. \\<And>t. t \\<in> {t0--t1'} \\<Longrightarrow> L-lipschitz_on X (f t)\n 9. \\<And>s t.\n       \\<lbrakk>s \\<in> {t0--t1'}; t \\<in> {t0--t1'}\\<rbrakk>\n       \\<Longrightarrow> \\<bar>s - t\\<bar> * L < 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval {t0--t1'}", "by (simp add: closed_segment_eq_real_ivl)"], ["proof (prove)\ngoal (8 subgoals):\n 1. {t0--t1'} \\<noteq> {}\n 2. compact {t0--t1'}\n 3. t0 \\<in> {t0--t1'}\n 4. x0 \\<in> X\n 5. \\<And>x t.\n       \\<lbrakk>t \\<in> {t0--t1'}; x t0 = x0;\n        x \\<in> {t0--t} \\<rightarrow> X; continuous_on {t0--t} x\\<rbrakk>\n       \\<Longrightarrow> x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t))\n                         \\<in> X\n 6. continuous_on ({t0--t1'} \\<times> X) (\\<lambda>(t, x). f t x)\n 7. \\<And>t. t \\<in> {t0--t1'} \\<Longrightarrow> L-lipschitz_on X (f t)\n 8. \\<And>s t.\n       \\<lbrakk>s \\<in> {t0--t1'}; t \\<in> {t0--t1'}\\<rbrakk>\n       \\<Longrightarrow> \\<bar>s - t\\<bar> * L < 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0--t1'} \\<noteq> {}", "by simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. compact {t0--t1'}\n 2. t0 \\<in> {t0--t1'}\n 3. x0 \\<in> X\n 4. \\<And>x t.\n       \\<lbrakk>t \\<in> {t0--t1'}; x t0 = x0;\n        x \\<in> {t0--t} \\<rightarrow> X; continuous_on {t0--t} x\\<rbrakk>\n       \\<Longrightarrow> x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t))\n                         \\<in> X\n 5. continuous_on ({t0--t1'} \\<times> X) (\\<lambda>(t, x). f t x)\n 6. \\<And>t. t \\<in> {t0--t1'} \\<Longrightarrow> L-lipschitz_on X (f t)\n 7. \\<And>s t.\n       \\<lbrakk>s \\<in> {t0--t1'}; t \\<in> {t0--t1'}\\<rbrakk>\n       \\<Longrightarrow> \\<bar>s - t\\<bar> * L < 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. compact {t0--t1'}", "by simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. t0 \\<in> {t0--t1'}\n 2. x0 \\<in> X\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> {t0--t1'}; x t0 = x0;\n        x \\<in> {t0--t} \\<rightarrow> X; continuous_on {t0--t} x\\<rbrakk>\n       \\<Longrightarrow> x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t))\n                         \\<in> X\n 4. continuous_on ({t0--t1'} \\<times> X) (\\<lambda>(t, x). f t x)\n 5. \\<And>t. t \\<in> {t0--t1'} \\<Longrightarrow> L-lipschitz_on X (f t)\n 6. \\<And>s t.\n       \\<lbrakk>s \\<in> {t0--t1'}; t \\<in> {t0--t1'}\\<rbrakk>\n       \\<Longrightarrow> \\<bar>s - t\\<bar> * L < 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> {t0--t1'}", "by simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. x0 \\<in> X\n 2. \\<And>x t.\n       \\<lbrakk>t \\<in> {t0--t1'}; x t0 = x0;\n        x \\<in> {t0--t} \\<rightarrow> X; continuous_on {t0--t} x\\<rbrakk>\n       \\<Longrightarrow> x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t))\n                         \\<in> X\n 3. continuous_on ({t0--t1'} \\<times> X) (\\<lambda>(t, x). f t x)\n 4. \\<And>t. t \\<in> {t0--t1'} \\<Longrightarrow> L-lipschitz_on X (f t)\n 5. \\<And>s t.\n       \\<lbrakk>s \\<in> {t0--t1'}; t \\<in> {t0--t1'}\\<rbrakk>\n       \\<Longrightarrow> \\<bar>s - t\\<bar> * L < 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x0 \\<in> X", "using iv_defined"], ["proof (prove)\nusing this:\n  t0 \\<in> T\n  x0 \\<in> X\n\ngoal (1 subgoal):\n 1. x0 \\<in> X", "by simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>t \\<in> {t0--t1'}; x t0 = x0;\n        x \\<in> {t0--t} \\<rightarrow> X; continuous_on {t0--t} x\\<rbrakk>\n       \\<Longrightarrow> x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t))\n                         \\<in> X\n 2. continuous_on ({t0--t1'} \\<times> X) (\\<lambda>(t, x). f t x)\n 3. \\<And>t. t \\<in> {t0--t1'} \\<Longrightarrow> L-lipschitz_on X (f t)\n 4. \\<And>s t.\n       \\<lbrakk>s \\<in> {t0--t1'}; t \\<in> {t0--t1'}\\<rbrakk>\n       \\<Longrightarrow> \\<bar>s - t\\<bar> * L < 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t_ \\<in> {t0--t1'}; x_ t0 = x0;\n     x_ \\<in> {t0--t_} \\<rightarrow> X; continuous_on {t0--t_} x_\\<rbrakk>\n    \\<Longrightarrow> x_ t0 + ivl_integral t0 t_ (\\<lambda>t. f t (x_ t))\n                      \\<in> X", "by (intro self_mapping subsetI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. continuous_on ({t0--t1'} \\<times> X) (\\<lambda>(t, x). f t x)\n 2. \\<And>t. t \\<in> {t0--t1'} \\<Longrightarrow> L-lipschitz_on X (f t)\n 3. \\<And>s t.\n       \\<lbrakk>s \\<in> {t0--t1'}; t \\<in> {t0--t1'}\\<rbrakk>\n       \\<Longrightarrow> \\<bar>s - t\\<bar> * L < 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on ({t0--t1'} \\<times> X) (\\<lambda>(t, x). f t x)", "by (rule continuous_on_subset[OF continuous]) (auto simp: subsetI )"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t. t \\<in> {t0--t1'} \\<Longrightarrow> L-lipschitz_on X (f t)\n 2. \\<And>s t.\n       \\<lbrakk>s \\<in> {t0--t1'}; t \\<in> {t0--t1'}\\<rbrakk>\n       \\<Longrightarrow> \\<bar>s - t\\<bar> * L < 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t_ \\<in> {t0--t1'} \\<Longrightarrow> L-lipschitz_on X (f t_)", "by (rule lipschitz) (auto simp: subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>s \\<in> {t0--t1'}; t \\<in> {t0--t1'}\\<rbrakk>\n       \\<Longrightarrow> \\<bar>s - t\\<bar> * L < 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s_ \\<in> {t0--t1'}; t_ \\<in> {t0--t1'}\\<rbrakk>\n    \\<Longrightarrow> \\<bar>s_ - t_\\<bar> * L < 1", "by (auto intro!: subsetI lipschitz_bound)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "have \"x t = s.fixed_point t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x t = apply_bcontfun s.fixed_point t", "by (rule s.solves_ode_equals_fixed_point; fact)"], ["proof (state)\nthis:\n  x t = apply_bcontfun s.fixed_point t\n\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "moreover"], ["proof (state)\nthis:\n  x t = apply_bcontfun s.fixed_point t\n\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "have \"fixed_point t = s.fixed_point t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_bcontfun fixed_point t = apply_bcontfun s.fixed_point t", "by (intro s.solves_ode_equals_fixed_point solves_ode_on_subset[OF fixed_point_solution] assms\n      fixed_point_iv order_refl subset t_mem)"], ["proof (state)\nthis:\n  apply_bcontfun fixed_point t = apply_bcontfun s.fixed_point t\n\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "ultimately"], ["proof (chain)\npicking this:\n  x t = apply_bcontfun s.fixed_point t\n  apply_bcontfun fixed_point t = apply_bcontfun s.fixed_point t", "show ?thesis"], ["proof (prove)\nusing this:\n  x t = apply_bcontfun s.fixed_point t\n  apply_bcontfun fixed_point t = apply_bcontfun s.fixed_point t\n\ngoal (1 subgoal):\n 1. x t = apply_bcontfun fixed_point t", "by simp"], ["proof (state)\nthis:\n  x t = apply_bcontfun fixed_point t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unique_solution:\n  assumes ivp1: \"(x solves_ode f) T X\" \"x t0 = x0\"\n  assumes ivp2: \"(y solves_ode f) T X\" \"y t0 = x0\"\n  assumes \"t \\<in> T\"\n  shows \"x t = y t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x t = y t", "using solves_ode_equals_fixed_point[OF ivp1 \\<open>t \\<in> T\\<close>]\n    solves_ode_equals_fixed_point[OF ivp2 \\<open>t \\<in> T\\<close>]"], ["proof (prove)\nusing this:\n  x t = apply_bcontfun fixed_point t\n  y t = apply_bcontfun fixed_point t\n\ngoal (1 subgoal):\n 1. x t = y t", "by simp"], ["", "lemma fixed_point_usolves_ode: \"(fixed_point usolves_ode f from t0) T X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (apply_bcontfun fixed_point usolves_ode f from t0) T X", "apply (rule usolves_odeI[OF fixed_point_solution])"], ["proof (prove)\ngoal (3 subgoals):\n 1. t0 \\<in> T\n 2. is_interval T\n 3. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} X;\n        z t0 = apply_bcontfun fixed_point t0\\<rbrakk>\n       \\<Longrightarrow> z t = apply_bcontfun fixed_point t", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> T", "by (simp add: iv_defined(1))"], ["proof (prove)\ngoal (2 subgoals):\n 1. is_interval T\n 2. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} X;\n        z t0 = apply_bcontfun fixed_point t0\\<rbrakk>\n       \\<Longrightarrow> z t = apply_bcontfun fixed_point t", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval T", "by (rule interval)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> T; (z solves_ode f) {t0--t} X;\n        z t0 = apply_bcontfun fixed_point t0\\<rbrakk>\n       \\<Longrightarrow> z t = apply_bcontfun fixed_point t", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{t0--t_} \\<subseteq> T; (z_ solves_ode f) {t0--t_} X;\n     z_ t0 = apply_bcontfun fixed_point t0\\<rbrakk>\n    \\<Longrightarrow> z_ t_ = apply_bcontfun fixed_point t_", "using fixed_point_iv solves_ode_on_closed_segment_equals_fixed_point"], ["proof (prove)\nusing this:\n  apply_bcontfun fixed_point t0 = x0\n  \\<lbrakk>(?x solves_ode f) {t0--?t1'} X; ?x t0 = x0;\n   {t0--?t1'} \\<subseteq> T; ?t \\<in> {t0--?t1'}\\<rbrakk>\n  \\<Longrightarrow> ?x ?t = apply_bcontfun fixed_point ?t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>{t0--t_} \\<subseteq> T; (z_ solves_ode f) {t0--t_} X;\n     z_ t0 = apply_bcontfun fixed_point t0\\<rbrakk>\n    \\<Longrightarrow> z_ t_ = apply_bcontfun fixed_point t_", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "lemma closed_segment_Un:\n  fixes a b c::real\n  assumes \"b \\<in> closed_segment a c\"\n  shows \"closed_segment a b \\<union> closed_segment b c = closed_segment a c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a--b} \\<union> {b--c} = {a--c}", "using assms"], ["proof (prove)\nusing this:\n  b \\<in> {a--c}\n\ngoal (1 subgoal):\n 1. {a--b} \\<union> {b--c} = {a--c}", "by (auto simp: closed_segment_eq_real_ivl)"], ["", "lemma closed_segment_closed_segment_subset:\n  fixes s::real and i::nat\n  assumes \"s \\<in> closed_segment a b\"\n  assumes \"a \\<in> closed_segment c d\" \"b \\<in> closed_segment c d\"\n  shows \"s \\<in> closed_segment c d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> {c--d}", "using assms"], ["proof (prove)\nusing this:\n  s \\<in> {a--b}\n  a \\<in> {c--d}\n  b \\<in> {c--d}\n\ngoal (1 subgoal):\n 1. s \\<in> {c--d}", "by (auto simp: closed_segment_eq_real_ivl split: if_split_asm)"], ["", "context unique_on_closed begin"], ["", "context\\<comment> \\<open>solution until t1\\<close>\n  fixes t1::real\n  assumes mem_t1: \"t1 \\<in> T\"\nbegin"], ["", "lemma subdivide_count_ex: \"\\<exists>n. L * abs (t1 - t0) / (Suc n) < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. L * \\<bar>t1 - t0\\<bar> / real (Suc n) < 1", "by auto (meson add_strict_increasing less_numeral_extra(1) real_arch_simple)"], ["", "definition \"subdivide_count = (SOME n. L * abs (t1 - t0) / Suc n < 1)\""], ["", "lemma subdivide_count: \"L * abs (t1 - t0) / Suc subdivide_count < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L * \\<bar>t1 - t0\\<bar> / real (Suc subdivide_count) < 1", "unfolding subdivide_count_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. L * \\<bar>t1 - t0\\<bar> /\n    real (Suc (SOME n. L * \\<bar>t1 - t0\\<bar> / real (Suc n) < 1))\n    < 1", "using subdivide_count_ex"], ["proof (prove)\nusing this:\n  \\<exists>n. L * \\<bar>t1 - t0\\<bar> / real (Suc n) < 1\n\ngoal (1 subgoal):\n 1. L * \\<bar>t1 - t0\\<bar> /\n    real (Suc (SOME n. L * \\<bar>t1 - t0\\<bar> / real (Suc n) < 1))\n    < 1", "by (rule someI_ex)"], ["", "lemma subdivide_lipschitz:\n  assumes \"\\<bar>s - t\\<bar> \\<le> abs (t1 - t0) / Suc subdivide_count\"\n  shows \"\\<bar>s - t\\<bar> * L < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>s - t\\<bar> * L < 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>s - t\\<bar> * L < 1", "from assms L_nonneg"], ["proof (chain)\npicking this:\n  \\<bar>s - t\\<bar> \\<le> \\<bar>t1 - t0\\<bar> / real (Suc subdivide_count)\n  0 \\<le> L", "have \"\\<bar>s - t\\<bar> * L \\<le> abs (t1 - t0) / Suc subdivide_count * L\""], ["proof (prove)\nusing this:\n  \\<bar>s - t\\<bar> \\<le> \\<bar>t1 - t0\\<bar> / real (Suc subdivide_count)\n  0 \\<le> L\n\ngoal (1 subgoal):\n 1. \\<bar>s - t\\<bar> * L\n    \\<le> \\<bar>t1 - t0\\<bar> / real (Suc subdivide_count) * L", "by (rule mult_right_mono)"], ["proof (state)\nthis:\n  \\<bar>s - t\\<bar> * L\n  \\<le> \\<bar>t1 - t0\\<bar> / real (Suc subdivide_count) * L\n\ngoal (1 subgoal):\n 1. \\<bar>s - t\\<bar> * L < 1", "also"], ["proof (state)\nthis:\n  \\<bar>s - t\\<bar> * L\n  \\<le> \\<bar>t1 - t0\\<bar> / real (Suc subdivide_count) * L\n\ngoal (1 subgoal):\n 1. \\<bar>s - t\\<bar> * L < 1", "have \"\\<dots> < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>t1 - t0\\<bar> / real (Suc subdivide_count) * L < 1", "using subdivide_count"], ["proof (prove)\nusing this:\n  L * \\<bar>t1 - t0\\<bar> / real (Suc subdivide_count) < 1\n\ngoal (1 subgoal):\n 1. \\<bar>t1 - t0\\<bar> / real (Suc subdivide_count) * L < 1", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  \\<bar>t1 - t0\\<bar> / real (Suc subdivide_count) * L < 1\n\ngoal (1 subgoal):\n 1. \\<bar>s - t\\<bar> * L < 1", "finally"], ["proof (chain)\npicking this:\n  \\<bar>s - t\\<bar> * L < 1", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<bar>s - t\\<bar> * L < 1\n\ngoal (1 subgoal):\n 1. \\<bar>s - t\\<bar> * L < 1", "."], ["proof (state)\nthis:\n  \\<bar>s - t\\<bar> * L < 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subdivide_lipschitz_lemma:\n  assumes st: \"s \\<in> {a -- b}\" \"t \\<in> {a -- b}\"\n  assumes \"abs (b - a) \\<le> abs (t1 - t0) / Suc subdivide_count\"\n  shows \"\\<bar>s - t\\<bar> * L < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>s - t\\<bar> * L < 1", "apply (rule subdivide_lipschitz)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>s - t\\<bar> \\<le> \\<bar>t1 - t0\\<bar> / real (Suc subdivide_count)", "apply (rule order_trans[where y=\"abs (b - a)\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<bar>s - t\\<bar> \\<le> \\<bar>b - a\\<bar>\n 2. \\<bar>b - a\\<bar> \\<le> \\<bar>t1 - t0\\<bar> / real (Suc subdivide_count)", "using assms"], ["proof (prove)\nusing this:\n  s \\<in> {a--b}\n  t \\<in> {a--b}\n  \\<bar>b - a\\<bar> \\<le> \\<bar>t1 - t0\\<bar> / real (Suc subdivide_count)\n\ngoal (2 subgoals):\n 1. \\<bar>s - t\\<bar> \\<le> \\<bar>b - a\\<bar>\n 2. \\<bar>b - a\\<bar> \\<le> \\<bar>t1 - t0\\<bar> / real (Suc subdivide_count)", "by (auto simp: closed_segment_eq_real_ivl split: if_splits)"], ["", "definition \"step = (t1 - t0) / Suc subdivide_count\""], ["", "lemma last_step: \"t0 + real (Suc subdivide_count) * step = t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 + real (Suc subdivide_count) * step = t1", "by (auto simp: step_def)"], ["", "lemma step_in_segment:\n  assumes \"0 \\<le> i\" \"i \\<le> real (Suc subdivide_count)\"\n  shows \"t0 + i * step \\<in> closed_segment t0 t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 + i * step \\<in> {t0--t1}", "unfolding closed_segment_eq_real_ivl step_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 + i * ((t1 - t0) / real (Suc subdivide_count))\n    \\<in> (if t0 \\<le> t1 then {t0..t1} else {t1..t0})", "proof (clarsimp, safe)"], ["proof (state)\ngoal (4 subgoals):\n 1. t0 \\<le> t1 \\<Longrightarrow>\n    0 \\<le> i * (t1 - t0) / (1 + real subdivide_count)\n 2. t0 \\<le> t1 \\<Longrightarrow>\n    t0 + i * (t1 - t0) / (1 + real subdivide_count) \\<le> t1\n 3. \\<not> t0 \\<le> t1 \\<Longrightarrow>\n    t1 \\<le> t0 + i * (t1 - t0) / (1 + real subdivide_count)\n 4. \\<not> t0 \\<le> t1 \\<Longrightarrow>\n    i * (t1 - t0) / (1 + real subdivide_count) \\<le> 0", "assume \"t0 \\<le> t1\""], ["proof (state)\nthis:\n  t0 \\<le> t1\n\ngoal (4 subgoals):\n 1. t0 \\<le> t1 \\<Longrightarrow>\n    0 \\<le> i * (t1 - t0) / (1 + real subdivide_count)\n 2. t0 \\<le> t1 \\<Longrightarrow>\n    t0 + i * (t1 - t0) / (1 + real subdivide_count) \\<le> t1\n 3. \\<not> t0 \\<le> t1 \\<Longrightarrow>\n    t1 \\<le> t0 + i * (t1 - t0) / (1 + real subdivide_count)\n 4. \\<not> t0 \\<le> t1 \\<Longrightarrow>\n    i * (t1 - t0) / (1 + real subdivide_count) \\<le> 0", "then"], ["proof (chain)\npicking this:\n  t0 \\<le> t1", "have \"(t1 - t0) * i \\<le> (t1 - t0) * (1 + subdivide_count)\""], ["proof (prove)\nusing this:\n  t0 \\<le> t1\n\ngoal (1 subgoal):\n 1. (t1 - t0) * i \\<le> (t1 - t0) * real (1 + subdivide_count)", "using assms"], ["proof (prove)\nusing this:\n  t0 \\<le> t1\n  0 \\<le> i\n  i \\<le> real (Suc subdivide_count)\n\ngoal (1 subgoal):\n 1. (t1 - t0) * i \\<le> (t1 - t0) * real (1 + subdivide_count)", "by (auto intro!: mult_left_mono)"], ["proof (state)\nthis:\n  (t1 - t0) * i \\<le> (t1 - t0) * real (1 + subdivide_count)\n\ngoal (4 subgoals):\n 1. t0 \\<le> t1 \\<Longrightarrow>\n    0 \\<le> i * (t1 - t0) / (1 + real subdivide_count)\n 2. t0 \\<le> t1 \\<Longrightarrow>\n    t0 + i * (t1 - t0) / (1 + real subdivide_count) \\<le> t1\n 3. \\<not> t0 \\<le> t1 \\<Longrightarrow>\n    t1 \\<le> t0 + i * (t1 - t0) / (1 + real subdivide_count)\n 4. \\<not> t0 \\<le> t1 \\<Longrightarrow>\n    i * (t1 - t0) / (1 + real subdivide_count) \\<le> 0", "then"], ["proof (chain)\npicking this:\n  (t1 - t0) * i \\<le> (t1 - t0) * real (1 + subdivide_count)", "show \"t0 + i * (t1 - t0) / (1 + real subdivide_count) \\<le> t1\""], ["proof (prove)\nusing this:\n  (t1 - t0) * i \\<le> (t1 - t0) * real (1 + subdivide_count)\n\ngoal (1 subgoal):\n 1. t0 + i * (t1 - t0) / (1 + real subdivide_count) \\<le> t1", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  t0 + i * (t1 - t0) / (1 + real subdivide_count) \\<le> t1\n\ngoal (3 subgoals):\n 1. t0 \\<le> t1 \\<Longrightarrow>\n    0 \\<le> i * (t1 - t0) / (1 + real subdivide_count)\n 2. \\<not> t0 \\<le> t1 \\<Longrightarrow>\n    t1 \\<le> t0 + i * (t1 - t0) / (1 + real subdivide_count)\n 3. \\<not> t0 \\<le> t1 \\<Longrightarrow>\n    i * (t1 - t0) / (1 + real subdivide_count) \\<le> 0", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. t0 \\<le> t1 \\<Longrightarrow>\n    0 \\<le> i * (t1 - t0) / (1 + real subdivide_count)\n 2. \\<not> t0 \\<le> t1 \\<Longrightarrow>\n    t1 \\<le> t0 + i * (t1 - t0) / (1 + real subdivide_count)\n 3. \\<not> t0 \\<le> t1 \\<Longrightarrow>\n    i * (t1 - t0) / (1 + real subdivide_count) \\<le> 0", "assume \"\\<not>t0 \\<le> t1\""], ["proof (state)\nthis:\n  \\<not> t0 \\<le> t1\n\ngoal (3 subgoals):\n 1. t0 \\<le> t1 \\<Longrightarrow>\n    0 \\<le> i * (t1 - t0) / (1 + real subdivide_count)\n 2. \\<not> t0 \\<le> t1 \\<Longrightarrow>\n    t1 \\<le> t0 + i * (t1 - t0) / (1 + real subdivide_count)\n 3. \\<not> t0 \\<le> t1 \\<Longrightarrow>\n    i * (t1 - t0) / (1 + real subdivide_count) \\<le> 0", "then"], ["proof (chain)\npicking this:\n  \\<not> t0 \\<le> t1", "have \"(1 + subdivide_count) * (t0 - t1) \\<ge> i * (t0 - t1)\""], ["proof (prove)\nusing this:\n  \\<not> t0 \\<le> t1\n\ngoal (1 subgoal):\n 1. i * (t0 - t1) \\<le> real (1 + subdivide_count) * (t0 - t1)", "using assms"], ["proof (prove)\nusing this:\n  \\<not> t0 \\<le> t1\n  0 \\<le> i\n  i \\<le> real (Suc subdivide_count)\n\ngoal (1 subgoal):\n 1. i * (t0 - t1) \\<le> real (1 + subdivide_count) * (t0 - t1)", "by (auto intro!: mult_right_mono)"], ["proof (state)\nthis:\n  i * (t0 - t1) \\<le> real (1 + subdivide_count) * (t0 - t1)\n\ngoal (3 subgoals):\n 1. t0 \\<le> t1 \\<Longrightarrow>\n    0 \\<le> i * (t1 - t0) / (1 + real subdivide_count)\n 2. \\<not> t0 \\<le> t1 \\<Longrightarrow>\n    t1 \\<le> t0 + i * (t1 - t0) / (1 + real subdivide_count)\n 3. \\<not> t0 \\<le> t1 \\<Longrightarrow>\n    i * (t1 - t0) / (1 + real subdivide_count) \\<le> 0", "then"], ["proof (chain)\npicking this:\n  i * (t0 - t1) \\<le> real (1 + subdivide_count) * (t0 - t1)", "show \"t1 \\<le> t0 + i * (t1 - t0) / (1 + real subdivide_count)\""], ["proof (prove)\nusing this:\n  i * (t0 - t1) \\<le> real (1 + subdivide_count) * (t0 - t1)\n\ngoal (1 subgoal):\n 1. t1 \\<le> t0 + i * (t1 - t0) / (1 + real subdivide_count)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  t1 \\<le> t0 + i * (t1 - t0) / (1 + real subdivide_count)\n\ngoal (2 subgoals):\n 1. t0 \\<le> t1 \\<Longrightarrow>\n    0 \\<le> i * (t1 - t0) / (1 + real subdivide_count)\n 2. \\<not> t0 \\<le> t1 \\<Longrightarrow>\n    i * (t1 - t0) / (1 + real subdivide_count) \\<le> 0", "show \"i * (t1 - t0) / (1 + real subdivide_count) \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i * (t1 - t0) / (1 + real subdivide_count) \\<le> 0", "using \\<open>\\<not>t0 \\<le> t1\\<close>"], ["proof (prove)\nusing this:\n  \\<not> t0 \\<le> t1\n\ngoal (1 subgoal):\n 1. i * (t1 - t0) / (1 + real subdivide_count) \\<le> 0", "by (auto simp: divide_simps mult_le_0_iff assms)"], ["proof (state)\nthis:\n  i * (t1 - t0) / (1 + real subdivide_count) \\<le> 0\n\ngoal (1 subgoal):\n 1. t0 \\<le> t1 \\<Longrightarrow>\n    0 \\<le> i * (t1 - t0) / (1 + real subdivide_count)", "qed (auto intro!: divide_nonneg_nonneg mult_nonneg_nonneg assms)"], ["", "lemma subset_T1:\n  fixes s::real and i::nat\n  assumes \"s \\<in> closed_segment t0 (t0 + i * step)\"\n  assumes \"i \\<le> Suc subdivide_count\"\n  shows \"s \\<in> {t0 -- t1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> {t0--t1}", "using closed_segment_closed_segment_subset assms of_nat_le_iff of_nat_0_le_iff step_in_segment"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s \\<in> {?a--?b}; ?a \\<in> {?c--?d}; ?b \\<in> {?c--?d}\\<rbrakk>\n  \\<Longrightarrow> ?s \\<in> {?c--?d}\n  s \\<in> {t0--t0 + real i * step}\n  i \\<le> Suc subdivide_count\n  (of_nat ?m \\<le> of_nat ?n) = (?m \\<le> ?n)\n  (0::?'a) \\<le> of_nat ?n\n  \\<lbrakk>0 \\<le> ?i; ?i \\<le> real (Suc subdivide_count)\\<rbrakk>\n  \\<Longrightarrow> t0 + ?i * step \\<in> {t0--t1}\n\ngoal (1 subgoal):\n 1. s \\<in> {t0--t1}", "by blast"], ["", "lemma subset_T: \"{t0 -- t1} \\<subseteq> T\" and subset_TI: \"s \\<in> {t0 -- t1} \\<Longrightarrow> s \\<in> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0--t1} \\<subseteq> T &&&\n    (s \\<in> {t0--t1} \\<Longrightarrow> s \\<in> T)", "using closed_segment_iv_subset_domain mem_t1"], ["proof (prove)\nusing this:\n  ?t \\<in> T \\<Longrightarrow> {t0--?t} \\<subseteq> T\n  t1 \\<in> T\n\ngoal (1 subgoal):\n 1. {t0--t1} \\<subseteq> T &&&\n    (s \\<in> {t0--t1} \\<Longrightarrow> s \\<in> T)", "by blast+"], ["", "primrec psolution::\"nat \\<Rightarrow> real \\<Rightarrow> 'a\" where\n  \"psolution 0 t = x0\"\n| \"psolution (Suc i) t = unique_on_bounded_closed.fixed_point\n    (t0 + real i * step) {t0 + real i * step -- t0 + real (Suc i) * step}\n    (psolution i (t0 + real i * step)) f X t\""], ["", "definition \"psolutions t = psolution (LEAST i. t \\<in> closed_segment (t0 + real (i - 1) * step) (t0 + real i * step)) t\""], ["", "lemma psolutions_usolves_until_step:\n  assumes i_le: \"i \\<le> Suc subdivide_count\"\n  shows \"(psolutions usolves_ode f from t0) (closed_segment t0 (t0 + real i * step)) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (psolutions usolves_ode f from t0) {t0--t0 + real i * step} X", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (psolutions usolves_ode f from t0) {t0--t0 + real i * step} X\n 2. \\<not> ?P \\<Longrightarrow>\n    (psolutions usolves_ode f from t0) {t0--t0 + real i * step} X", "assume \"t0 = t1\""], ["proof (state)\nthis:\n  t0 = t1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (psolutions usolves_ode f from t0) {t0--t0 + real i * step} X\n 2. \\<not> ?P \\<Longrightarrow>\n    (psolutions usolves_ode f from t0) {t0--t0 + real i * step} X", "then"], ["proof (chain)\npicking this:\n  t0 = t1", "have \"step = 0\""], ["proof (prove)\nusing this:\n  t0 = t1\n\ngoal (1 subgoal):\n 1. step = 0", "unfolding step_def"], ["proof (prove)\nusing this:\n  t0 = t1\n\ngoal (1 subgoal):\n 1. (t1 - t0) / real (Suc subdivide_count) = 0", "by simp"], ["proof (state)\nthis:\n  step = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (psolutions usolves_ode f from t0) {t0--t0 + real i * step} X\n 2. \\<not> ?P \\<Longrightarrow>\n    (psolutions usolves_ode f from t0) {t0--t0 + real i * step} X", "then"], ["proof (chain)\npicking this:\n  step = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  step = 0\n\ngoal (1 subgoal):\n 1. (psolutions usolves_ode f from t0) {t0--t0 + real i * step} X", "by (simp add: psolutions_def iv_defined usolves_ode_singleton)"], ["proof (state)\nthis:\n  (psolutions usolves_ode f from t0) {t0--t0 + real i * step} X\n\ngoal (1 subgoal):\n 1. t0 \\<noteq> t1 \\<Longrightarrow>\n    (psolutions usolves_ode f from t0) {t0--t0 + real i * step} X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t0 \\<noteq> t1 \\<Longrightarrow>\n    (psolutions usolves_ode f from t0) {t0--t0 + real i * step} X", "assume \"t0 \\<noteq> t1\""], ["proof (state)\nthis:\n  t0 \\<noteq> t1\n\ngoal (1 subgoal):\n 1. t0 \\<noteq> t1 \\<Longrightarrow>\n    (psolutions usolves_ode f from t0) {t0--t0 + real i * step} X", "then"], ["proof (chain)\npicking this:\n  t0 \\<noteq> t1", "have \"step \\<noteq> 0\""], ["proof (prove)\nusing this:\n  t0 \\<noteq> t1\n\ngoal (1 subgoal):\n 1. step \\<noteq> 0", "by (simp add: step_def)"], ["proof (state)\nthis:\n  step \\<noteq> 0\n\ngoal (1 subgoal):\n 1. t0 \\<noteq> t1 \\<Longrightarrow>\n    (psolutions usolves_ode f from t0) {t0--t0 + real i * step} X", "define S where \"S \\<equiv> \\<lambda>i. closed_segment (t0 + real (i - 1) * step) (t0 + real i * step)\""], ["proof (state)\nthis:\n  S \\<equiv> \\<lambda>i. {t0 + real (i - 1) * step--t0 + real i * step}\n\ngoal (1 subgoal):\n 1. t0 \\<noteq> t1 \\<Longrightarrow>\n    (psolutions usolves_ode f from t0) {t0--t0 + real i * step} X", "have solution_eq: \"psolutions \\<equiv> \\<lambda>t. psolution (LEAST i. t \\<in> S i) t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. psolutions \\<equiv> \\<lambda>t. psolution (LEAST i. t \\<in> S i) t", "by (simp add: psolutions_def[abs_def] S_def)"], ["proof (state)\nthis:\n  psolutions \\<equiv> \\<lambda>t. psolution (LEAST i. t \\<in> S i) t\n\ngoal (1 subgoal):\n 1. t0 \\<noteq> t1 \\<Longrightarrow>\n    (psolutions usolves_ode f from t0) {t0--t0 + real i * step} X", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (psolutions usolves_ode f from t0) {t0--t0 + real i * step} X", "unfolding solution_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n     {t0--t0 + real i * step} X", "using i_le"], ["proof (prove)\nusing this:\n  i \\<le> Suc subdivide_count\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n     {t0--t0 + real i * step} X", "proof (induction i)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> Suc subdivide_count \\<Longrightarrow>\n    ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n     {t0--t0 + real 0 * step} X\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "case 0"], ["proof (state)\nthis:\n  0 \\<le> Suc subdivide_count\n\ngoal (2 subgoals):\n 1. 0 \\<le> Suc subdivide_count \\<Longrightarrow>\n    ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n     {t0--t0 + real 0 * step} X\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "then"], ["proof (chain)\npicking this:\n  0 \\<le> Suc subdivide_count", "show ?case"], ["proof (prove)\nusing this:\n  0 \\<le> Suc subdivide_count\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n     {t0--t0 + real 0 * step} X", "by (simp add: iv_defined usolves_ode_singleton S_def)"], ["proof (state)\nthis:\n  ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n   {t0--t0 + real 0 * step} X\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "case (Suc i)"], ["proof (state)\nthis:\n  i \\<le> Suc subdivide_count \\<Longrightarrow>\n  ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n   {t0--t0 + real i * step} X\n  Suc i \\<le> Suc subdivide_count\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "let ?sol = \"\\<lambda>t. psolution (LEAST i. t \\<in> S i) t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "let ?pi = \"t0 + real (i - Suc 0) * step\" and ?i = \"t0 + real i * step\" and ?si = \"t0 + (1 + real i) * step\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "from Suc"], ["proof (chain)\npicking this:\n  i \\<le> Suc subdivide_count \\<Longrightarrow>\n  ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n   {t0--t0 + real i * step} X\n  Suc i \\<le> Suc subdivide_count", "have ui: \"(?sol usolves_ode f from t0) (closed_segment t0 (t0 + real i * step)) X\""], ["proof (prove)\nusing this:\n  i \\<le> Suc subdivide_count \\<Longrightarrow>\n  ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n   {t0--t0 + real i * step} X\n  Suc i \\<le> Suc subdivide_count\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n     {t0--t0 + real i * step} X", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n   {t0--t0 + real i * step} X\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "from usolves_odeD(1)[OF Suc.IH] Suc"], ["proof (chain)\npicking this:\n  i \\<le> Suc subdivide_count \\<Longrightarrow>\n  ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) solves_ode f)\n   {t0--t0 + real i * step} X\n  i \\<le> Suc subdivide_count \\<Longrightarrow>\n  ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n   {t0--t0 + real i * step} X\n  Suc i \\<le> Suc subdivide_count", "have IH_sol: \"(?sol solves_ode f) (closed_segment t0 ?i) X\""], ["proof (prove)\nusing this:\n  i \\<le> Suc subdivide_count \\<Longrightarrow>\n  ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) solves_ode f)\n   {t0--t0 + real i * step} X\n  i \\<le> Suc subdivide_count \\<Longrightarrow>\n  ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n   {t0--t0 + real i * step} X\n  Suc i \\<le> Suc subdivide_count\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) solves_ode f)\n     {t0--t0 + real i * step} X", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) solves_ode f)\n   {t0--t0 + real i * step} X\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "have Least_eq_t0[simp]: \"(LEAST n. t0 \\<in> S n) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (LEAST n. t0 \\<in> S n) = 0", "by (rule Least_equality) (auto simp add: S_def)"], ["proof (state)\nthis:\n  (LEAST n. t0 \\<in> S n) = 0\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "have Least_eq[simp]: \"(LEAST n. t0 + real i * step \\<in> S n) = i\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. (LEAST n. t0 + real i * step \\<in> S n) = i", "apply (rule Least_equality)"], ["proof (prove)\ngoal (2 subgoals):\n 1. t0 + real i * step \\<in> S i\n 2. \\<And>y. t0 + real i * step \\<in> S y \\<Longrightarrow> i \\<le> y", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 + real i * step \\<in> S i", "by (simp add: S_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y. t0 + real i * step \\<in> S y \\<Longrightarrow> i \\<le> y", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 + real i * step \\<in> S y_ \\<Longrightarrow> i \\<le> y_", "using \\<open>step \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  step \\<noteq> 0\n\ngoal (1 subgoal):\n 1. t0 + real i * step \\<in> S y_ \\<Longrightarrow> i \\<le> y_", "by (cases \"step \\<ge> 0\")\n          (auto simp add: S_def closed_segment_eq_real_ivl zero_le_mult_iff split: if_split_asm)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (LEAST n. t0 + real ?i * step \\<in> S n) = ?i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "have \"y = t0 + real i * s\"\n      if \"t0 + (1 + real i) * s \\<le> t\" \"t \\<le> y\" \"y \\<le> t0 + real i * s\" \"t0 \\<le> y\"\n      for y i s t"], ["proof (prove)\ngoal (1 subgoal):\n 1. y = t0 + real i * s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y = t0 + real i * s", "from that"], ["proof (chain)\npicking this:\n  t0 + (1 + real i) * s \\<le> t\n  t \\<le> y\n  y \\<le> t0 + real i * s\n  t0 \\<le> y", "have \"(1 + real i) * s \\<le> real i * s\" \"0 \\<le> real i * s\""], ["proof (prove)\nusing this:\n  t0 + (1 + real i) * s \\<le> t\n  t \\<le> y\n  y \\<le> t0 + real i * s\n  t0 \\<le> y\n\ngoal (1 subgoal):\n 1. (1 + real i) * s \\<le> real i * s &&& 0 \\<le> real i * s", "by arith+"], ["proof (state)\nthis:\n  (1 + real i) * s \\<le> real i * s\n  0 \\<le> real i * s\n\ngoal (1 subgoal):\n 1. y = t0 + real i * s", "have \"s + (t0 + s * real i) \\<le> t \\<Longrightarrow> t \\<le> y \\<Longrightarrow> y \\<le> t0 + s * real i \\<Longrightarrow> t0 \\<le> y \\<Longrightarrow> y = t0 + s * real i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s + (t0 + s * real i) \\<le> t; t \\<le> y;\n     y \\<le> t0 + s * real i; t0 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> y = t0 + s * real i", "by (metis add_decreasing2 eq_iff le_add_same_cancel2 linear mult_le_0_iff of_nat_0_le_iff order.trans)"], ["proof (state)\nthis:\n  \\<lbrakk>s + (t0 + s * real i) \\<le> t; t \\<le> y;\n   y \\<le> t0 + s * real i; t0 \\<le> y\\<rbrakk>\n  \\<Longrightarrow> y = t0 + s * real i\n\ngoal (1 subgoal):\n 1. y = t0 + real i * s", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>s + (t0 + s * real i) \\<le> t; t \\<le> y;\n   y \\<le> t0 + s * real i; t0 \\<le> y\\<rbrakk>\n  \\<Longrightarrow> y = t0 + s * real i", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>s + (t0 + s * real i) \\<le> t; t \\<le> y;\n   y \\<le> t0 + s * real i; t0 \\<le> y\\<rbrakk>\n  \\<Longrightarrow> y = t0 + s * real i\n\ngoal (1 subgoal):\n 1. y = t0 + real i * s", "using that"], ["proof (prove)\nusing this:\n  \\<lbrakk>s + (t0 + s * real i) \\<le> t; t \\<le> y;\n   y \\<le> t0 + s * real i; t0 \\<le> y\\<rbrakk>\n  \\<Longrightarrow> y = t0 + s * real i\n  t0 + (1 + real i) * s \\<le> t\n  t \\<le> y\n  y \\<le> t0 + real i * s\n  t0 \\<le> y\n\ngoal (1 subgoal):\n 1. y = t0 + real i * s", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  y = t0 + real i * s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>t0 + (1 + real ?i) * ?s \\<le> ?t; ?t \\<le> ?y;\n   ?y \\<le> t0 + real ?i * ?s; t0 \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> ?y = t0 + real ?i * ?s\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>t0 + (1 + real ?i) * ?s \\<le> ?t; ?t \\<le> ?y;\n   ?y \\<le> t0 + real ?i * ?s; t0 \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> ?y = t0 + real ?i * ?s", "have segment_inter:\n      \"xa = t0 + real i * step\"\n      if\n      \"t \\<in> {t0 + real (Suc i - 1) * step--t0 + real (Suc i) * step}\"\n      \"xa \\<in> closed_segment (t0 + real i * step) t\" \"xa \\<in> closed_segment t0 (t0 + real i * step)\"\n      for xa t"], ["proof (prove)\nusing this:\n  \\<lbrakk>t0 + (1 + real ?i) * ?s \\<le> ?t; ?t \\<le> ?y;\n   ?y \\<le> t0 + real ?i * ?s; t0 \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> ?y = t0 + real ?i * ?s\n\ngoal (1 subgoal):\n 1. xa = t0 + real i * step", "apply (cases \"step > 0\"; cases \"step = 0\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>i s t y.\n                \\<lbrakk>t0 + (1 + real i) * s \\<le> t; t \\<le> y;\n                 y \\<le> t0 + real i * s; t0 \\<le> y\\<rbrakk>\n                \\<Longrightarrow> y = t0 + real i * s;\n     0 < step;\n     \\<And>i s t y.\n        \\<lbrakk>t0 + (1 + real i) * s \\<le> t; t \\<le> y;\n         y \\<le> t0 + real i * s; t0 \\<le> y\\<rbrakk>\n        \\<Longrightarrow> y = t0 + real i * s;\n     step = 0\\<rbrakk>\n    \\<Longrightarrow> xa = t0 + real i * step\n 2. \\<lbrakk>\\<And>i s t y.\n                \\<lbrakk>t0 + (1 + real i) * s \\<le> t; t \\<le> y;\n                 y \\<le> t0 + real i * s; t0 \\<le> y\\<rbrakk>\n                \\<Longrightarrow> y = t0 + real i * s;\n     0 < step;\n     \\<And>i s t y.\n        \\<lbrakk>t0 + (1 + real i) * s \\<le> t; t \\<le> y;\n         y \\<le> t0 + real i * s; t0 \\<le> y\\<rbrakk>\n        \\<Longrightarrow> y = t0 + real i * s;\n     step \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> xa = t0 + real i * step\n 3. \\<lbrakk>\\<And>i s t y.\n                \\<lbrakk>t0 + (1 + real i) * s \\<le> t; t \\<le> y;\n                 y \\<le> t0 + real i * s; t0 \\<le> y\\<rbrakk>\n                \\<Longrightarrow> y = t0 + real i * s;\n     \\<not> 0 < step;\n     \\<And>i s t y.\n        \\<lbrakk>t0 + (1 + real i) * s \\<le> t; t \\<le> y;\n         y \\<le> t0 + real i * s; t0 \\<le> y\\<rbrakk>\n        \\<Longrightarrow> y = t0 + real i * s;\n     step = 0\\<rbrakk>\n    \\<Longrightarrow> xa = t0 + real i * step\n 4. \\<lbrakk>\\<And>i s t y.\n                \\<lbrakk>t0 + (1 + real i) * s \\<le> t; t \\<le> y;\n                 y \\<le> t0 + real i * s; t0 \\<le> y\\<rbrakk>\n                \\<Longrightarrow> y = t0 + real i * s;\n     \\<not> 0 < step;\n     \\<And>i s t y.\n        \\<lbrakk>t0 + (1 + real i) * s \\<le> t; t \\<le> y;\n         y \\<le> t0 + real i * s; t0 \\<le> y\\<rbrakk>\n        \\<Longrightarrow> y = t0 + real i * s;\n     step \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> xa = t0 + real i * step", "using that"], ["proof (prove)\nusing this:\n  t \\<in> {t0 + real (Suc i - 1) * step--t0 + real (Suc i) * step}\n  xa \\<in> {t0 + real i * step--t}\n  xa \\<in> {t0--t0 + real i * step}\n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>i s t y.\n                \\<lbrakk>t0 + (1 + real i) * s \\<le> t; t \\<le> y;\n                 y \\<le> t0 + real i * s; t0 \\<le> y\\<rbrakk>\n                \\<Longrightarrow> y = t0 + real i * s;\n     0 < step;\n     \\<And>i s t y.\n        \\<lbrakk>t0 + (1 + real i) * s \\<le> t; t \\<le> y;\n         y \\<le> t0 + real i * s; t0 \\<le> y\\<rbrakk>\n        \\<Longrightarrow> y = t0 + real i * s;\n     step = 0\\<rbrakk>\n    \\<Longrightarrow> xa = t0 + real i * step\n 2. \\<lbrakk>\\<And>i s t y.\n                \\<lbrakk>t0 + (1 + real i) * s \\<le> t; t \\<le> y;\n                 y \\<le> t0 + real i * s; t0 \\<le> y\\<rbrakk>\n                \\<Longrightarrow> y = t0 + real i * s;\n     0 < step;\n     \\<And>i s t y.\n        \\<lbrakk>t0 + (1 + real i) * s \\<le> t; t \\<le> y;\n         y \\<le> t0 + real i * s; t0 \\<le> y\\<rbrakk>\n        \\<Longrightarrow> y = t0 + real i * s;\n     step \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> xa = t0 + real i * step\n 3. \\<lbrakk>\\<And>i s t y.\n                \\<lbrakk>t0 + (1 + real i) * s \\<le> t; t \\<le> y;\n                 y \\<le> t0 + real i * s; t0 \\<le> y\\<rbrakk>\n                \\<Longrightarrow> y = t0 + real i * s;\n     \\<not> 0 < step;\n     \\<And>i s t y.\n        \\<lbrakk>t0 + (1 + real i) * s \\<le> t; t \\<le> y;\n         y \\<le> t0 + real i * s; t0 \\<le> y\\<rbrakk>\n        \\<Longrightarrow> y = t0 + real i * s;\n     step = 0\\<rbrakk>\n    \\<Longrightarrow> xa = t0 + real i * step\n 4. \\<lbrakk>\\<And>i s t y.\n                \\<lbrakk>t0 + (1 + real i) * s \\<le> t; t \\<le> y;\n                 y \\<le> t0 + real i * s; t0 \\<le> y\\<rbrakk>\n                \\<Longrightarrow> y = t0 + real i * s;\n     \\<not> 0 < step;\n     \\<And>i s t y.\n        \\<lbrakk>t0 + (1 + real i) * s \\<le> t; t \\<le> y;\n         y \\<le> t0 + real i * s; t0 \\<le> y\\<rbrakk>\n        \\<Longrightarrow> y = t0 + real i * s;\n     step \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> xa = t0 + real i * step", "by (auto simp: S_def closed_segment_eq_real_ivl split: if_split_asm)"], ["proof (state)\nthis:\n  \\<lbrakk>?t \\<in> {t0 +\n                     real (Suc i - 1) * step--t0 + real (Suc i) * step};\n   ?xa \\<in> {t0 + real i * step--?t};\n   ?xa \\<in> {t0--t0 + real i * step}\\<rbrakk>\n  \\<Longrightarrow> ?xa = t0 + real i * step\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "have right_cond: \"t0 \\<le> t\" \"t \\<le> t1\" if \"t0 + real i * step \\<le> t\" \"t \\<le> t0 + (step + real i * step)\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<le> t &&& t \\<le> t1", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. t0 \\<le> t\n 2. t \\<le> t1", "from that"], ["proof (chain)\npicking this:\n  t0 + real i * step \\<le> t\n  t \\<le> t0 + (step + real i * step)", "have \"0 \\<le> step\""], ["proof (prove)\nusing this:\n  t0 + real i * step \\<le> t\n  t \\<le> t0 + (step + real i * step)\n\ngoal (1 subgoal):\n 1. 0 \\<le> step", "by simp"], ["proof (state)\nthis:\n  0 \\<le> step\n\ngoal (2 subgoals):\n 1. t0 \\<le> t\n 2. t \\<le> t1", "with last_step"], ["proof (chain)\npicking this:\n  t0 + real (Suc subdivide_count) * step = t1\n  0 \\<le> step", "have \"t0 \\<le> t1\""], ["proof (prove)\nusing this:\n  t0 + real (Suc subdivide_count) * step = t1\n  0 \\<le> step\n\ngoal (1 subgoal):\n 1. t0 \\<le> t1", "by (metis le_add_same_cancel1 of_nat_0_le_iff zero_le_mult_iff)"], ["proof (state)\nthis:\n  t0 \\<le> t1\n\ngoal (2 subgoals):\n 1. t0 \\<le> t\n 2. t \\<le> t1", "from that"], ["proof (chain)\npicking this:\n  t0 + real i * step \\<le> t\n  t \\<le> t0 + (step + real i * step)", "have \"t0 \\<le> t - real i * step\""], ["proof (prove)\nusing this:\n  t0 + real i * step \\<le> t\n  t \\<le> t0 + (step + real i * step)\n\ngoal (1 subgoal):\n 1. t0 \\<le> t - real i * step", "by simp"], ["proof (state)\nthis:\n  t0 \\<le> t - real i * step\n\ngoal (2 subgoals):\n 1. t0 \\<le> t\n 2. t \\<le> t1", "also"], ["proof (state)\nthis:\n  t0 \\<le> t - real i * step\n\ngoal (2 subgoals):\n 1. t0 \\<le> t\n 2. t \\<le> t1", "have \"\\<dots> \\<le> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t - real i * step \\<le> t", "using that"], ["proof (prove)\nusing this:\n  t0 + real i * step \\<le> t\n  t \\<le> t0 + (step + real i * step)\n\ngoal (1 subgoal):\n 1. t - real i * step \\<le> t", "by (auto intro!: mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  t - real i * step \\<le> t\n\ngoal (2 subgoals):\n 1. t0 \\<le> t\n 2. t \\<le> t1", "finally"], ["proof (chain)\npicking this:\n  t0 \\<le> t", "show \"t0 \\<le> t\""], ["proof (prove)\nusing this:\n  t0 \\<le> t\n\ngoal (1 subgoal):\n 1. t0 \\<le> t", "."], ["proof (state)\nthis:\n  t0 \\<le> t\n\ngoal (1 subgoal):\n 1. t \\<le> t1", "have \"t \\<le> t0 + (real (Suc i) * step)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<le> t0 + real (Suc i) * step", "using that"], ["proof (prove)\nusing this:\n  t0 + real i * step \\<le> t\n  t \\<le> t0 + (step + real i * step)\n\ngoal (1 subgoal):\n 1. t \\<le> t0 + real (Suc i) * step", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  t \\<le> t0 + real (Suc i) * step\n\ngoal (1 subgoal):\n 1. t \\<le> t1", "also"], ["proof (state)\nthis:\n  t \\<le> t0 + real (Suc i) * step\n\ngoal (1 subgoal):\n 1. t \\<le> t1", "have \"\\<dots> \\<le> t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 + real (Suc i) * step \\<le> t1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. t0 + real (Suc i) * step \\<le> t1", "have \"real (Suc i) * (t1 - t0) \\<le> real (Suc subdivide_count) * (t1 - t0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (Suc i) * (t1 - t0) \\<le> real (Suc subdivide_count) * (t1 - t0)", "using Suc.prems \\<open>t0 \\<le> t1\\<close>"], ["proof (prove)\nusing this:\n  Suc i \\<le> Suc subdivide_count\n  t0 \\<le> t1\n\ngoal (1 subgoal):\n 1. real (Suc i) * (t1 - t0) \\<le> real (Suc subdivide_count) * (t1 - t0)", "by (auto intro!: mult_mono)"], ["proof (state)\nthis:\n  real (Suc i) * (t1 - t0) \\<le> real (Suc subdivide_count) * (t1 - t0)\n\ngoal (1 subgoal):\n 1. t0 + real (Suc i) * step \\<le> t1", "then"], ["proof (chain)\npicking this:\n  real (Suc i) * (t1 - t0) \\<le> real (Suc subdivide_count) * (t1 - t0)", "show ?thesis"], ["proof (prove)\nusing this:\n  real (Suc i) * (t1 - t0) \\<le> real (Suc subdivide_count) * (t1 - t0)\n\ngoal (1 subgoal):\n 1. t0 + real (Suc i) * step \\<le> t1", "by (simp add: divide_simps algebra_simps step_def)"], ["proof (state)\nthis:\n  t0 + real (Suc i) * step \\<le> t1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t0 + real (Suc i) * step \\<le> t1\n\ngoal (1 subgoal):\n 1. t \\<le> t1", "finally"], ["proof (chain)\npicking this:\n  t \\<le> t1", "show \"t \\<le> t1\""], ["proof (prove)\nusing this:\n  t \\<le> t1\n\ngoal (1 subgoal):\n 1. t \\<le> t1", "."], ["proof (state)\nthis:\n  t \\<le> t1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>t0 + real i * step \\<le> ?t;\n   ?t \\<le> t0 + (step + real i * step)\\<rbrakk>\n  \\<Longrightarrow> t0 \\<le> ?t\n  \\<lbrakk>t0 + real i * step \\<le> ?t;\n   ?t \\<le> t0 + (step + real i * step)\\<rbrakk>\n  \\<Longrightarrow> ?t \\<le> t1\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "have left_cond: \"t1 \\<le> t\" \"t \\<le> t0\" if \"t0 + (step + real i * step) \\<le> t\" \"t \\<le> t0 + real i * step\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. t1 \\<le> t &&& t \\<le> t0", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. t1 \\<le> t\n 2. t \\<le> t0", "from that"], ["proof (chain)\npicking this:\n  t0 + (step + real i * step) \\<le> t\n  t \\<le> t0 + real i * step", "have \"step \\<le> 0\""], ["proof (prove)\nusing this:\n  t0 + (step + real i * step) \\<le> t\n  t \\<le> t0 + real i * step\n\ngoal (1 subgoal):\n 1. step \\<le> 0", "by simp"], ["proof (state)\nthis:\n  step \\<le> 0\n\ngoal (2 subgoals):\n 1. t1 \\<le> t\n 2. t \\<le> t0", "with last_step"], ["proof (chain)\npicking this:\n  t0 + real (Suc subdivide_count) * step = t1\n  step \\<le> 0", "have \"t1 \\<le> t0\""], ["proof (prove)\nusing this:\n  t0 + real (Suc subdivide_count) * step = t1\n  step \\<le> 0\n\ngoal (1 subgoal):\n 1. t1 \\<le> t0", "by (metis add_le_same_cancel1 mult_nonneg_nonpos of_nat_0_le_iff)"], ["proof (state)\nthis:\n  t1 \\<le> t0\n\ngoal (2 subgoals):\n 1. t1 \\<le> t\n 2. t \\<le> t0", "from that"], ["proof (chain)\npicking this:\n  t0 + (step + real i * step) \\<le> t\n  t \\<le> t0 + real i * step", "have \"t0 \\<ge> t - real i * step\""], ["proof (prove)\nusing this:\n  t0 + (step + real i * step) \\<le> t\n  t \\<le> t0 + real i * step\n\ngoal (1 subgoal):\n 1. t - real i * step \\<le> t0", "by simp"], ["proof (state)\nthis:\n  t - real i * step \\<le> t0\n\ngoal (2 subgoals):\n 1. t1 \\<le> t\n 2. t \\<le> t0", "also"], ["proof (state)\nthis:\n  t - real i * step \\<le> t0\n\ngoal (2 subgoals):\n 1. t1 \\<le> t\n 2. t \\<le> t0", "have \"t - real i * step \\<ge> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<le> t - real i * step", "using that"], ["proof (prove)\nusing this:\n  t0 + (step + real i * step) \\<le> t\n  t \\<le> t0 + real i * step\n\ngoal (1 subgoal):\n 1. t \\<le> t - real i * step", "by (auto intro!: mult_nonneg_nonpos)"], ["proof (state)\nthis:\n  t \\<le> t - real i * step\n\ngoal (2 subgoals):\n 1. t1 \\<le> t\n 2. t \\<le> t0", "finally (xtrans)"], ["proof (chain)\npicking this:\n  t \\<le> t0", "show \"t \\<le> t0\""], ["proof (prove)\nusing this:\n  t \\<le> t0\n\ngoal (1 subgoal):\n 1. t \\<le> t0", "."], ["proof (state)\nthis:\n  t \\<le> t0\n\ngoal (1 subgoal):\n 1. t1 \\<le> t", "have \"t \\<ge> t0 + (real (Suc i) * step)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 + real (Suc i) * step \\<le> t", "using that"], ["proof (prove)\nusing this:\n  t0 + (step + real i * step) \\<le> t\n  t \\<le> t0 + real i * step\n\ngoal (1 subgoal):\n 1. t0 + real (Suc i) * step \\<le> t", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  t0 + real (Suc i) * step \\<le> t\n\ngoal (1 subgoal):\n 1. t1 \\<le> t", "also"], ["proof (state)\nthis:\n  t0 + real (Suc i) * step \\<le> t\n\ngoal (1 subgoal):\n 1. t1 \\<le> t", "have \" t0 + (real (Suc i) * step) \\<ge> t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t1 \\<le> t0 + real (Suc i) * step", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. t1 \\<le> t0 + real (Suc i) * step", "have \"real (Suc i) * (t0 - t1) \\<le> real (Suc subdivide_count) * (t0 - t1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (Suc i) * (t0 - t1) \\<le> real (Suc subdivide_count) * (t0 - t1)", "using Suc.prems \\<open>t0 \\<ge> t1\\<close>"], ["proof (prove)\nusing this:\n  Suc i \\<le> Suc subdivide_count\n  t1 \\<le> t0\n\ngoal (1 subgoal):\n 1. real (Suc i) * (t0 - t1) \\<le> real (Suc subdivide_count) * (t0 - t1)", "by (auto intro!: mult_mono)"], ["proof (state)\nthis:\n  real (Suc i) * (t0 - t1) \\<le> real (Suc subdivide_count) * (t0 - t1)\n\ngoal (1 subgoal):\n 1. t1 \\<le> t0 + real (Suc i) * step", "then"], ["proof (chain)\npicking this:\n  real (Suc i) * (t0 - t1) \\<le> real (Suc subdivide_count) * (t0 - t1)", "show ?thesis"], ["proof (prove)\nusing this:\n  real (Suc i) * (t0 - t1) \\<le> real (Suc subdivide_count) * (t0 - t1)\n\ngoal (1 subgoal):\n 1. t1 \\<le> t0 + real (Suc i) * step", "by (simp add: divide_simps algebra_simps step_def)"], ["proof (state)\nthis:\n  t1 \\<le> t0 + real (Suc i) * step\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t1 \\<le> t0 + real (Suc i) * step\n\ngoal (1 subgoal):\n 1. t1 \\<le> t", "finally (xtrans)"], ["proof (chain)\npicking this:\n  t1 \\<le> t", "show \"t1 \\<le> t\""], ["proof (prove)\nusing this:\n  t1 \\<le> t\n\ngoal (1 subgoal):\n 1. t1 \\<le> t", "."], ["proof (state)\nthis:\n  t1 \\<le> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>t0 + (step + real i * step) \\<le> ?t;\n   ?t \\<le> t0 + real i * step\\<rbrakk>\n  \\<Longrightarrow> t1 \\<le> ?t\n  \\<lbrakk>t0 + (step + real i * step) \\<le> ?t;\n   ?t \\<le> t0 + real i * step\\<rbrakk>\n  \\<Longrightarrow> ?t \\<le> t0\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "interpret l: self_mapping \"S (Suc i)\" ?i \"?sol ?i\" f X"], ["proof (prove)\ngoal (1 subgoal):\n 1. self_mapping (S (Suc i)) (t0 + real i * step)\n     (psolution (LEAST i. t0 + real i * step \\<in> S i)\n       (t0 + real i * step))\n     f X", "proof unfold_locales"], ["proof (state)\ngoal (4 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step)\n    \\<in> X\n 4. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "show \"?sol ?i \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step)\n    \\<in> X", "using solves_odeD(2)[OF usolves_odeD(1)[OF ui], of \"?i\"]"], ["proof (prove)\nusing this:\n  t0 + real i * step \\<in> {t0--t0 + real i * step} \\<Longrightarrow>\n  psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step)\n  \\<in> X\n\ngoal (1 subgoal):\n 1. psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step)\n    \\<in> X", "by (simp add: S_def)"], ["proof (state)\nthis:\n  psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step)\n  \\<in> X\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "fix x t"], ["proof (state)\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "assume t[unfolded S_def]: \"t \\<in> S (Suc i)\"\n        and x: \"x ?i = ?sol ?i\" \"x \\<in> closed_segment ?i t \\<rightarrow> X\"\n        and cont: \"continuous_on (closed_segment ?i t) x\""], ["proof (state)\nthis:\n  t \\<in> {t0 + real (Suc i - 1) * step--t0 + real (Suc i) * step}\n  x (t0 + real i * step) =\n  psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step)\n  x \\<in> {t0 + real i * step--t} \\<rightarrow> X\n  continuous_on {t0 + real i * step--t} x\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "let ?if = \"\\<lambda>t. if t \\<in> closed_segment t0 ?i then ?sol t else x t\""], ["proof (state)\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "let ?f = \"\\<lambda>t. f t (?if t)\""], ["proof (state)\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "have sol_mem: \"?sol s \\<in> X\" if \"s \\<in> closed_segment t0 ?i\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. psolution (LEAST i. s \\<in> S i) s \\<in> X", "by (auto simp: subset_T1 intro!: solves_odeD[OF IH_sol] that)"], ["proof (state)\nthis:\n  ?s \\<in> {t0--t0 + real i * step} \\<Longrightarrow>\n  psolution (LEAST i. ?s \\<in> S i) ?s \\<in> X\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "from x(1)"], ["proof (chain)\npicking this:\n  x (t0 + real i * step) =\n  psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step)", "have \"x ?i + ivl_integral ?i t (\\<lambda>t. f t (x t)) = ?sol ?i + ivl_integral ?i t (\\<lambda>t. f t (x t))\""], ["proof (prove)\nusing this:\n  x (t0 + real i * step) =\n  psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step)\n\ngoal (1 subgoal):\n 1. x (t0 + real i * step) +\n    ivl_integral (t0 + real i * step) t (\\<lambda>t. f t (x t)) =\n    psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step) +\n    ivl_integral (t0 + real i * step) t (\\<lambda>t. f t (x t))", "by simp"], ["proof (state)\nthis:\n  x (t0 + real i * step) +\n  ivl_integral (t0 + real i * step) t (\\<lambda>t. f t (x t)) =\n  psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step) +\n  ivl_integral (t0 + real i * step) t (\\<lambda>t. f t (x t))\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "also"], ["proof (state)\nthis:\n  x (t0 + real i * step) +\n  ivl_integral (t0 + real i * step) t (\\<lambda>t. f t (x t)) =\n  psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step) +\n  ivl_integral (t0 + real i * step) t (\\<lambda>t. f t (x t))\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "have \"?sol ?i = ?sol t0 + ivl_integral t0 ?i (\\<lambda>t. f t (?sol t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step) =\n    psolution (LEAST i. t0 \\<in> S i) t0 +\n    ivl_integral t0 (t0 + real i * step)\n     (\\<lambda>t. f t (psolution (LEAST i. t \\<in> S i) t))", "apply (subst solution_fixed_point)"], ["proof (prove)\ngoal (3 subgoals):\n 1. ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) solves_ode f)\n     {t0--?t1.0} ?X\n 2. t0 + real i * step \\<in> {t0--?t1.0}\n 3. psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step) =\n    psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step)", "apply (rule usolves_odeD[OF ui])"], ["proof (prove)\ngoal (2 subgoals):\n 1. t0 + real i * step \\<in> {t0--t0 + real i * step}\n 2. psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step) =\n    psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step)", "by simp_all"], ["proof (state)\nthis:\n  psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step) =\n  psolution (LEAST i. t0 \\<in> S i) t0 +\n  ivl_integral t0 (t0 + real i * step)\n   (\\<lambda>t. f t (psolution (LEAST i. t \\<in> S i) t))\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "also"], ["proof (state)\nthis:\n  psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step) =\n  psolution (LEAST i. t0 \\<in> S i) t0 +\n  ivl_integral t0 (t0 + real i * step)\n   (\\<lambda>t. f t (psolution (LEAST i. t \\<in> S i) t))\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "have \"ivl_integral t0 ?i (\\<lambda>t. f t (?sol t)) = ivl_integral t0 ?i ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ivl_integral t0 (t0 + real i * step)\n     (\\<lambda>t. f t (psolution (LEAST i. t \\<in> S i) t)) =\n    ivl_integral t0 (t0 + real i * step)\n     (\\<lambda>t.\n         f t (if t \\<in> {t0--t0 + real i * step}\n              then psolution (LEAST i. t \\<in> S i) t else x t))", "by (simp cong: ivl_integral_cong)"], ["proof (state)\nthis:\n  ivl_integral t0 (t0 + real i * step)\n   (\\<lambda>t. f t (psolution (LEAST i. t \\<in> S i) t)) =\n  ivl_integral t0 (t0 + real i * step)\n   (\\<lambda>t.\n       f t (if t \\<in> {t0--t0 + real i * step}\n            then psolution (LEAST i. t \\<in> S i) t else x t))\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "also"], ["proof (state)\nthis:\n  ivl_integral t0 (t0 + real i * step)\n   (\\<lambda>t. f t (psolution (LEAST i. t \\<in> S i) t)) =\n  ivl_integral t0 (t0 + real i * step)\n   (\\<lambda>t.\n       f t (if t \\<in> {t0--t0 + real i * step}\n            then psolution (LEAST i. t \\<in> S i) t else x t))\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "have psolution_eq: \"x (t0 + real i * step) = psolution i (t0 + real i * step) \\<Longrightarrow>\n        ta \\<in> {t0 + real i * step--t} \\<Longrightarrow>\n        ta \\<in> {t0--t0 + real i * step} \\<Longrightarrow> psolution (LEAST i. ta \\<in> S i) ta = x ta\" for ta"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x (t0 + real i * step) = psolution i (t0 + real i * step);\n     ta \\<in> {t0 + real i * step--t};\n     ta \\<in> {t0--t0 + real i * step}\\<rbrakk>\n    \\<Longrightarrow> psolution (LEAST i. ta \\<in> S i) ta = x ta", "by (subst segment_inter[OF t], assumption, assumption)+ simp"], ["proof (state)\nthis:\n  \\<lbrakk>x (t0 + real i * step) = psolution i (t0 + real i * step);\n   ?ta \\<in> {t0 + real i * step--t};\n   ?ta \\<in> {t0--t0 + real i * step}\\<rbrakk>\n  \\<Longrightarrow> psolution (LEAST i. ?ta \\<in> S i) ?ta = x ?ta\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "have \"ivl_integral ?i t (\\<lambda>t. f t (x t)) = ivl_integral ?i t ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ivl_integral (t0 + real i * step) t (\\<lambda>t. f t (x t)) =\n    ivl_integral (t0 + real i * step) t\n     (\\<lambda>t.\n         f t (if t \\<in> {t0--t0 + real i * step}\n              then psolution (LEAST i. t \\<in> S i) t else x t))", "by (rule ivl_integral_cong) (simp_all add: x psolution_eq)"], ["proof (state)\nthis:\n  ivl_integral (t0 + real i * step) t (\\<lambda>t. f t (x t)) =\n  ivl_integral (t0 + real i * step) t\n   (\\<lambda>t.\n       f t (if t \\<in> {t0--t0 + real i * step}\n            then psolution (LEAST i. t \\<in> S i) t else x t))\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "also"], ["proof (state)\nthis:\n  ivl_integral (t0 + real i * step) t (\\<lambda>t. f t (x t)) =\n  ivl_integral (t0 + real i * step) t\n   (\\<lambda>t.\n       f t (if t \\<in> {t0--t0 + real i * step}\n            then psolution (LEAST i. t \\<in> S i) t else x t))\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "from t right_cond(1)"], ["proof (chain)\npicking this:\n  t \\<in> {t0 + real (Suc i - 1) * step--t0 + real (Suc i) * step}\n  \\<lbrakk>t0 + real i * step \\<le> ?t;\n   ?t \\<le> t0 + (step + real i * step)\\<rbrakk>\n  \\<Longrightarrow> t0 \\<le> ?t", "have cs: \"closed_segment t0 t = closed_segment t0 ?i \\<union> closed_segment ?i t\""], ["proof (prove)\nusing this:\n  t \\<in> {t0 + real (Suc i - 1) * step--t0 + real (Suc i) * step}\n  \\<lbrakk>t0 + real i * step \\<le> ?t;\n   ?t \\<le> t0 + (step + real i * step)\\<rbrakk>\n  \\<Longrightarrow> t0 \\<le> ?t\n\ngoal (1 subgoal):\n 1. {t0--t} = {t0--t0 + real i * step} \\<union> {t0 + real i * step--t}", "by (intro closed_segment_Un[symmetric])\n          (auto simp: closed_segment_eq_real_ivl algebra_simps mult_le_0_iff split: if_split_asm\n            intro!: segment_inter segment_inter[symmetric])"], ["proof (state)\nthis:\n  {t0--t} = {t0--t0 + real i * step} \\<union> {t0 + real i * step--t}\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "have cont_if: \"continuous_on (closed_segment t0 t) ?if\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {t0--t}\n     (\\<lambda>t.\n         if t \\<in> {t0--t0 + real i * step}\n         then psolution (LEAST i. t \\<in> S i) t else x t)", "unfolding cs"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on\n     ({t0--t0 + real i * step} \\<union> {t0 + real i * step--t})\n     (\\<lambda>t.\n         if t \\<in> {t0--t0 + real i * step}\n         then psolution (LEAST i. t \\<in> S i) t else x t)", "using x Suc.prems cont t psolution_eq"], ["proof (prove)\nusing this:\n  x (t0 + real i * step) =\n  psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step)\n  x \\<in> {t0 + real i * step--t} \\<rightarrow> X\n  Suc i \\<le> Suc subdivide_count\n  continuous_on {t0 + real i * step--t} x\n  t \\<in> {t0 + real (Suc i - 1) * step--t0 + real (Suc i) * step}\n  \\<lbrakk>x (t0 + real i * step) = psolution i (t0 + real i * step);\n   ?ta \\<in> {t0 + real i * step--t};\n   ?ta \\<in> {t0--t0 + real i * step}\\<rbrakk>\n  \\<Longrightarrow> psolution (LEAST i. ?ta \\<in> S i) ?ta = x ?ta\n\ngoal (1 subgoal):\n 1. continuous_on\n     ({t0--t0 + real i * step} \\<union> {t0 + real i * step--t})\n     (\\<lambda>t.\n         if t \\<in> {t0--t0 + real i * step}\n         then psolution (LEAST i. t \\<in> S i) t else x t)", "by (auto simp: subset_T1 T_def intro!: continuous_on_cases solves_ode_continuous_on[OF IH_sol])"], ["proof (state)\nthis:\n  continuous_on {t0--t}\n   (\\<lambda>t.\n       if t \\<in> {t0--t0 + real i * step}\n       then psolution (LEAST i. t \\<in> S i) t else x t)\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "have t_mem: \"t \\<in> closed_segment t0 t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> {t0--t1}", "using x Suc.prems t"], ["proof (prove)\nusing this:\n  x (t0 + real i * step) =\n  psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step)\n  x \\<in> {t0 + real i * step--t} \\<rightarrow> X\n  Suc i \\<le> Suc subdivide_count\n  t \\<in> {t0 + real (Suc i - 1) * step--t0 + real (Suc i) * step}\n\ngoal (1 subgoal):\n 1. t \\<in> {t0--t1}", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x (t0 + real i * step) =\n             psolution (LEAST i. t0 + real i * step \\<in> S i)\n              (t0 + real i * step);\n     x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n     Suc i \\<le> Suc subdivide_count;\n     t \\<in> {t0 +\n              real (Suc i - 1) * step--t0 + real (Suc i) * step}\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {t0--t1}", "apply (rule closed_segment_closed_segment_subset, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x (t0 + real i * step) =\n             psolution (LEAST i. t0 + real i * step \\<in> S i)\n              (t0 + real i * step);\n     x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n     Suc i \\<le> Suc subdivide_count;\n     t \\<in> {t0 +\n              real (Suc i - 1) * step--t0 + real (Suc i) * step}\\<rbrakk>\n    \\<Longrightarrow> t0 + real (Suc i - 1) * step \\<in> {t0--t1}\n 2. \\<lbrakk>x (t0 + real i * step) =\n             psolution (LEAST i. t0 + real i * step \\<in> S i)\n              (t0 + real i * step);\n     x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n     Suc i \\<le> Suc subdivide_count;\n     t \\<in> {t0 +\n              real (Suc i - 1) * step--t0 + real (Suc i) * step}\\<rbrakk>\n    \\<Longrightarrow> t0 + real (Suc i) * step \\<in> {t0--t1}", "apply (rule step_in_segment, force, force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x (t0 + real i * step) =\n             psolution (LEAST i. t0 + real i * step \\<in> S i)\n              (t0 + real i * step);\n     x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n     Suc i \\<le> Suc subdivide_count;\n     t \\<in> {t0 +\n              real (Suc i - 1) * step--t0 + real (Suc i) * step}\\<rbrakk>\n    \\<Longrightarrow> t0 + real (Suc i) * step \\<in> {t0--t1}", "apply (rule step_in_segment, force, force)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  t \\<in> {t0--t1}\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "have segment_subset: \"ta \\<in> {t0 + real i * step--t} \\<Longrightarrow> ta \\<in> {t0--t1}\" for ta"], ["proof (prove)\ngoal (1 subgoal):\n 1. ta \\<in> {t0 + real i * step--t} \\<Longrightarrow> ta \\<in> {t0--t1}", "using x Suc.prems"], ["proof (prove)\nusing this:\n  x (t0 + real i * step) =\n  psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step)\n  x \\<in> {t0 + real i * step--t} \\<rightarrow> X\n  Suc i \\<le> Suc subdivide_count\n\ngoal (1 subgoal):\n 1. ta \\<in> {t0 + real i * step--t} \\<Longrightarrow> ta \\<in> {t0--t1}", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ta \\<in> {t0 + real i * step--t};\n     x (t0 + real i * step) =\n     psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step);\n     x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n     Suc i \\<le> Suc subdivide_count\\<rbrakk>\n    \\<Longrightarrow> ta \\<in> {t0--t1}", "apply (rule closed_segment_closed_segment_subset, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ta \\<in> {t0 + real i * step--t};\n     x (t0 + real i * step) =\n     psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step);\n     x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n     Suc i \\<le> Suc subdivide_count\\<rbrakk>\n    \\<Longrightarrow> t0 + real i * step \\<in> {t0--t1}\n 2. \\<lbrakk>ta \\<in> {t0 + real i * step--t};\n     x (t0 + real i * step) =\n     psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step);\n     x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n     Suc i \\<le> Suc subdivide_count\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {t0--t1}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ta \\<in> {t0 + real i * step--t};\n     x (t0 + real i * step) =\n     psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step);\n     x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n     Suc i \\<le> Suc subdivide_count\\<rbrakk>\n    \\<Longrightarrow> t0 + real i * step \\<in> {t0--t1}", "by (rule step_in_segment; force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ta \\<in> {t0 + real i * step--t};\n     x (t0 + real i * step) =\n     psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step);\n     x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n     Suc i \\<le> Suc subdivide_count\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {t0--t1}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ta \\<in> {t0 + real i * step--t};\n     x (t0 + real i * step) =\n     psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step);\n     x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n     Suc i \\<le> Suc subdivide_count\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {t0--t1}", "by (rule t_mem)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ?ta \\<in> {t0 + real i * step--t} \\<Longrightarrow> ?ta \\<in> {t0--t1}\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "have cont_f: \"continuous_on (closed_segment t0 t) ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {t0--t}\n     (\\<lambda>t.\n         f t (if t \\<in> {t0--t0 + real i * step}\n              then psolution (LEAST i. t \\<in> S i) t else x t))", "apply (rule continuous_intros)"], ["proof (prove)\ngoal (4 subgoals):\n 1. continuous_on {t0--t} (\\<lambda>x. x)\n 2. continuous_on {t0--t}\n     (\\<lambda>xa.\n         if xa \\<in> {t0--t0 + real i * step}\n         then psolution (LEAST i. xa \\<in> S i) xa else x xa)\n 3. (\\<lambda>x. x) ` {t0--t} \\<subseteq> T\n 4. (\\<lambda>xa.\n        if xa \\<in> {t0--t0 + real i * step}\n        then psolution (LEAST i. xa \\<in> S i) xa else x xa) `\n    {t0--t}\n    \\<subseteq> X", "apply (rule continuous_intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. continuous_on {t0--t}\n     (\\<lambda>xa.\n         if xa \\<in> {t0--t0 + real i * step}\n         then psolution (LEAST i. xa \\<in> S i) xa else x xa)\n 2. (\\<lambda>x. x) ` {t0--t} \\<subseteq> T\n 3. (\\<lambda>xa.\n        if xa \\<in> {t0--t0 + real i * step}\n        then psolution (LEAST i. xa \\<in> S i) xa else x xa) `\n    {t0--t}\n    \\<subseteq> X", "apply (rule cont_if)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lambda>x. x) ` {t0--t} \\<subseteq> T\n 2. (\\<lambda>xa.\n        if xa \\<in> {t0--t0 + real i * step}\n        then psolution (LEAST i. xa \\<in> S i) xa else x xa) `\n    {t0--t}\n    \\<subseteq> X", "unfolding cs"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lambda>x. x) `\n    ({t0--t0 + real i * step} \\<union> {t0 + real i * step--t})\n    \\<subseteq> T\n 2. (\\<lambda>xa.\n        if xa \\<in> {t0--t0 + real i * step}\n        then psolution (LEAST i. xa \\<in> S i) xa else x xa) `\n    ({t0--t0 + real i * step} \\<union> {t0 + real i * step--t})\n    \\<subseteq> X", "using x Suc.prems"], ["proof (prove)\nusing this:\n  x (t0 + real i * step) =\n  psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step)\n  x \\<in> {t0 + real i * step--t} \\<rightarrow> X\n  Suc i \\<le> Suc subdivide_count\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. x) `\n    ({t0--t0 + real i * step} \\<union> {t0 + real i * step--t})\n    \\<subseteq> T\n 2. (\\<lambda>xa.\n        if xa \\<in> {t0--t0 + real i * step}\n        then psolution (LEAST i. xa \\<in> S i) xa else x xa) `\n    ({t0--t0 + real i * step} \\<union> {t0 + real i * step--t})\n    \\<subseteq> X", "apply (auto simp: subset_T1 segment_subset intro!: sol_mem subset_TI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  continuous_on {t0--t}\n   (\\<lambda>t.\n       f t (if t \\<in> {t0--t0 + real i * step}\n            then psolution (LEAST i. t \\<in> S i) t else x t))\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "have \"?sol t0 + ivl_integral t0 ?i ?f + ivl_integral ?i t ?f = ?if t0 + ivl_integral t0 t ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. psolution (LEAST i. t0 \\<in> S i) t0 +\n    ivl_integral t0 (t0 + real i * step)\n     (\\<lambda>t.\n         f t (if t \\<in> {t0--t0 + real i * step}\n              then psolution (LEAST i. t \\<in> S i) t else x t)) +\n    ivl_integral (t0 + real i * step) t\n     (\\<lambda>t.\n         f t (if t \\<in> {t0--t0 + real i * step}\n              then psolution (LEAST i. t \\<in> S i) t else x t)) =\n    (if t0 \\<in> {t0--t0 + real i * step}\n     then psolution (LEAST i. t0 \\<in> S i) t0 else x t0) +\n    ivl_integral t0 t\n     (\\<lambda>t.\n         f t (if t \\<in> {t0--t0 + real i * step}\n              then psolution (LEAST i. t \\<in> S i) t else x t))", "by (auto simp: cs intro!: ivl_integral_combine integrable_continuous_closed_segment\n          continuous_on_subset[OF cont_f])"], ["proof (state)\nthis:\n  psolution (LEAST i. t0 \\<in> S i) t0 +\n  ivl_integral t0 (t0 + real i * step)\n   (\\<lambda>t.\n       f t (if t \\<in> {t0--t0 + real i * step}\n            then psolution (LEAST i. t \\<in> S i) t else x t)) +\n  ivl_integral (t0 + real i * step) t\n   (\\<lambda>t.\n       f t (if t \\<in> {t0--t0 + real i * step}\n            then psolution (LEAST i. t \\<in> S i) t else x t)) =\n  (if t0 \\<in> {t0--t0 + real i * step}\n   then psolution (LEAST i. t0 \\<in> S i) t0 else x t0) +\n  ivl_integral t0 t\n   (\\<lambda>t.\n       f t (if t \\<in> {t0--t0 + real i * step}\n            then psolution (LEAST i. t \\<in> S i) t else x t))\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "also"], ["proof (state)\nthis:\n  psolution (LEAST i. t0 \\<in> S i) t0 +\n  ivl_integral t0 (t0 + real i * step)\n   (\\<lambda>t.\n       f t (if t \\<in> {t0--t0 + real i * step}\n            then psolution (LEAST i. t \\<in> S i) t else x t)) +\n  ivl_integral (t0 + real i * step) t\n   (\\<lambda>t.\n       f t (if t \\<in> {t0--t0 + real i * step}\n            then psolution (LEAST i. t \\<in> S i) t else x t)) =\n  (if t0 \\<in> {t0--t0 + real i * step}\n   then psolution (LEAST i. t0 \\<in> S i) t0 else x t0) +\n  ivl_integral t0 t\n   (\\<lambda>t.\n       f t (if t \\<in> {t0--t0 + real i * step}\n            then psolution (LEAST i. t \\<in> S i) t else x t))\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "have \"\\<dots> \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if t0 \\<in> {t0--t0 + real i * step}\n     then psolution (LEAST i. t0 \\<in> S i) t0 else x t0) +\n    ivl_integral t0 t\n     (\\<lambda>t.\n         f t (if t \\<in> {t0--t0 + real i * step}\n              then psolution (LEAST i. t \\<in> S i) t else x t))\n    \\<in> X", "apply (rule self_mapping)"], ["proof (prove)\ngoal (4 subgoals):\n 1. t \\<in> T\n 2. (if t0 \\<in> {t0--t0 + real i * step}\n     then psolution (LEAST i. t0 \\<in> S i) t0 else x t0) =\n    x0\n 3. (\\<lambda>t.\n        if t \\<in> {t0--t0 + real i * step}\n        then psolution (LEAST i. t \\<in> S i) t else x t)\n    \\<in> {t0--t} \\<rightarrow> X\n 4. continuous_on {t0--t}\n     (\\<lambda>t.\n         if t \\<in> {t0--t0 + real i * step}\n         then psolution (LEAST i. t \\<in> S i) t else x t)", "apply (rule subset_TI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. t \\<in> {t0--t1}\n 2. (if t0 \\<in> {t0--t0 + real i * step}\n     then psolution (LEAST i. t0 \\<in> S i) t0 else x t0) =\n    x0\n 3. (\\<lambda>t.\n        if t \\<in> {t0--t0 + real i * step}\n        then psolution (LEAST i. t \\<in> S i) t else x t)\n    \\<in> {t0--t} \\<rightarrow> X\n 4. continuous_on {t0--t}\n     (\\<lambda>t.\n         if t \\<in> {t0--t0 + real i * step}\n         then psolution (LEAST i. t \\<in> S i) t else x t)", "apply (rule t_mem)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (if t0 \\<in> {t0--t0 + real i * step}\n     then psolution (LEAST i. t0 \\<in> S i) t0 else x t0) =\n    x0\n 2. (\\<lambda>t.\n        if t \\<in> {t0--t0 + real i * step}\n        then psolution (LEAST i. t \\<in> S i) t else x t)\n    \\<in> {t0--t} \\<rightarrow> X\n 3. continuous_on {t0--t}\n     (\\<lambda>t.\n         if t \\<in> {t0--t0 + real i * step}\n         then psolution (LEAST i. t \\<in> S i) t else x t)", "using x cont_if"], ["proof (prove)\nusing this:\n  x (t0 + real i * step) =\n  psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step)\n  x \\<in> {t0 + real i * step--t} \\<rightarrow> X\n  continuous_on {t0--t}\n   (\\<lambda>t.\n       if t \\<in> {t0--t0 + real i * step}\n       then psolution (LEAST i. t \\<in> S i) t else x t)\n\ngoal (3 subgoals):\n 1. (if t0 \\<in> {t0--t0 + real i * step}\n     then psolution (LEAST i. t0 \\<in> S i) t0 else x t0) =\n    x0\n 2. (\\<lambda>t.\n        if t \\<in> {t0--t0 + real i * step}\n        then psolution (LEAST i. t \\<in> S i) t else x t)\n    \\<in> {t0--t} \\<rightarrow> X\n 3. continuous_on {t0--t}\n     (\\<lambda>t.\n         if t \\<in> {t0--t0 + real i * step}\n         then psolution (LEAST i. t \\<in> S i) t else x t)", "by (auto simp: subset_T1 Pi_iff cs intro!: sol_mem)"], ["proof (state)\nthis:\n  (if t0 \\<in> {t0--t0 + real i * step}\n   then psolution (LEAST i. t0 \\<in> S i) t0 else x t0) +\n  ivl_integral t0 t\n   (\\<lambda>t.\n       f t (if t \\<in> {t0--t0 + real i * step}\n            then psolution (LEAST i. t \\<in> S i) t else x t))\n  \\<in> X\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "finally"], ["proof (chain)\npicking this:\n  x (t0 + real i * step) +\n  ivl_integral (t0 + real i * step) t\n   (\\<lambda>t.\n       f t (if t \\<in> {t0--t0 + real i * step}\n            then psolution (LEAST i. t \\<in> S i) t else x t))\n  \\<in> X", "have \"x ?i + ivl_integral ?i t (\\<lambda>t. ?f t) \\<in> X\""], ["proof (prove)\nusing this:\n  x (t0 + real i * step) +\n  ivl_integral (t0 + real i * step) t\n   (\\<lambda>t.\n       f t (if t \\<in> {t0--t0 + real i * step}\n            then psolution (LEAST i. t \\<in> S i) t else x t))\n  \\<in> X\n\ngoal (1 subgoal):\n 1. x (t0 + real i * step) +\n    ivl_integral (t0 + real i * step) t\n     (\\<lambda>t.\n         f t (if t \\<in> {t0--t0 + real i * step}\n              then psolution (LEAST i. t \\<in> S i) t else x t))\n    \\<in> X", "."], ["proof (state)\nthis:\n  x (t0 + real i * step) +\n  ivl_integral (t0 + real i * step) t\n   (\\<lambda>t.\n       f t (if t \\<in> {t0--t0 + real i * step}\n            then psolution (LEAST i. t \\<in> S i) t else x t))\n  \\<in> X\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "also"], ["proof (state)\nthis:\n  x (t0 + real i * step) +\n  ivl_integral (t0 + real i * step) t\n   (\\<lambda>t.\n       f t (if t \\<in> {t0--t0 + real i * step}\n            then psolution (LEAST i. t \\<in> S i) t else x t))\n  \\<in> X\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "have \"ivl_integral ?i t (\\<lambda>t. ?f t) = ivl_integral ?i t (\\<lambda>t. f t (x t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ivl_integral (t0 + real i * step) t\n     (\\<lambda>t.\n         f t (if t \\<in> {t0--t0 + real i * step}\n              then psolution (LEAST i. t \\<in> S i) t else x t)) =\n    ivl_integral (t0 + real i * step) t (\\<lambda>t. f t (x t))", "apply (rule ivl_integral_cong[OF _ refl refl])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {t0 + real i * step--t} \\<Longrightarrow>\n       f xa (x xa) =\n       f xa\n        (if xa \\<in> {t0--t0 + real i * step}\n         then psolution (LEAST i. xa \\<in> S i) xa else x xa)", "using x"], ["proof (prove)\nusing this:\n  x (t0 + real i * step) =\n  psolution (LEAST i. t0 + real i * step \\<in> S i) (t0 + real i * step)\n  x \\<in> {t0 + real i * step--t} \\<rightarrow> X\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {t0 + real i * step--t} \\<Longrightarrow>\n       f xa (x xa) =\n       f xa\n        (if xa \\<in> {t0--t0 + real i * step}\n         then psolution (LEAST i. xa \\<in> S i) xa else x xa)", "by (auto simp: segment_inter psolution_eq)"], ["proof (state)\nthis:\n  ivl_integral (t0 + real i * step) t\n   (\\<lambda>t.\n       f t (if t \\<in> {t0--t0 + real i * step}\n            then psolution (LEAST i. t \\<in> S i) t else x t)) =\n  ivl_integral (t0 + real i * step) t (\\<lambda>t. f t (x t))\n\ngoal (3 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> S (Suc i);\n        x (t0 + real i * step) =\n        psolution (LEAST i. t0 + real i * step \\<in> S i)\n         (t0 + real i * step);\n        x \\<in> {t0 + real i * step--t} \\<rightarrow> X;\n        continuous_on {t0 + real i * step--t} x\\<rbrakk>\n       \\<Longrightarrow> x (t0 + real i * step) +\n                         ivl_integral (t0 + real i * step) t\n                          (\\<lambda>t. f t (x t))\n                         \\<in> X", "finally"], ["proof (chain)\npicking this:\n  x (t0 + real i * step) +\n  ivl_integral (t0 + real i * step) t (\\<lambda>t. f t (x t))\n  \\<in> X", "show \"x ?i + ivl_integral ?i t (\\<lambda>t. f t (x t)) \\<in> X\""], ["proof (prove)\nusing this:\n  x (t0 + real i * step) +\n  ivl_integral (t0 + real i * step) t (\\<lambda>t. f t (x t))\n  \\<in> X\n\ngoal (1 subgoal):\n 1. x (t0 + real i * step) +\n    ivl_integral (t0 + real i * step) t (\\<lambda>t. f t (x t))\n    \\<in> X", "."], ["proof (state)\nthis:\n  x (t0 + real i * step) +\n  ivl_integral (t0 + real i * step) t (\\<lambda>t. f t (x t))\n  \\<in> X\n\ngoal (2 subgoals):\n 1. is_interval (S (Suc i))\n 2. t0 + real i * step \\<in> S (Suc i)", "qed (auto simp add: S_def closed_segment_eq_real_ivl)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "have \"S (Suc i) \\<subseteq> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S (Suc i) \\<subseteq> T", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0 + real (Suc i - 1) * step--t0 + real (Suc i) * step} \\<subseteq> T", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {t0 +\n                real (Suc i - 1) *\n                step--t0 + real (Suc i) * step} \\<Longrightarrow>\n       x \\<in> T", "apply (rule subset_TI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {t0 +\n                real (Suc i - 1) *\n                step--t0 + real (Suc i) * step} \\<Longrightarrow>\n       x \\<in> {t0--t1}", "proof (cases \"step = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step = 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}", "case False"], ["proof (state)\nthis:\n  step \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step = 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step = 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}", "assume x: \"x \\<in> {t0 + real (Suc i - 1) * step--t0 + real (Suc i) * step}\""], ["proof (state)\nthis:\n  x \\<in> {t0 + real (Suc i - 1) * step--t0 + real (Suc i) * step}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step = 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}", "from x"], ["proof (chain)\npicking this:\n  x \\<in> {t0 + real (Suc i - 1) * step--t0 + real (Suc i) * step}", "have nn: \"((x - t0) / step) \\<ge> 0\""], ["proof (prove)\nusing this:\n  x \\<in> {t0 + real (Suc i - 1) * step--t0 + real (Suc i) * step}\n\ngoal (1 subgoal):\n 1. 0 \\<le> (x - t0) / step", "using False right_cond(1)[of x] left_cond(2)[of x]"], ["proof (prove)\nusing this:\n  x \\<in> {t0 + real (Suc i - 1) * step--t0 + real (Suc i) * step}\n  step \\<noteq> 0\n  \\<lbrakk>t0 + real i * step \\<le> x;\n   x \\<le> t0 + (step + real i * step)\\<rbrakk>\n  \\<Longrightarrow> t0 \\<le> x\n  \\<lbrakk>t0 + (step + real i * step) \\<le> x;\n   x \\<le> t0 + real i * step\\<rbrakk>\n  \\<Longrightarrow> x \\<le> t0\n\ngoal (1 subgoal):\n 1. 0 \\<le> (x - t0) / step", "by (auto simp: closed_segment_eq_real_ivl divide_simps algebra_simps split: if_splits)"], ["proof (state)\nthis:\n  0 \\<le> (x - t0) / step\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step = 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}", "have \"t1 < t0 \\<Longrightarrow> t1 \\<le> x\" \"t1 > t0 \\<Longrightarrow> x \\<le> t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t1 < t0 \\<Longrightarrow> t1 \\<le> x) &&&\n    (t0 < t1 \\<Longrightarrow> x \\<le> t1)", "using x False right_cond(1,2)[of x] left_cond(1,2)[of x]"], ["proof (prove)\nusing this:\n  x \\<in> {t0 + real (Suc i - 1) * step--t0 + real (Suc i) * step}\n  step \\<noteq> 0\n  \\<lbrakk>t0 + real i * step \\<le> x;\n   x \\<le> t0 + (step + real i * step)\\<rbrakk>\n  \\<Longrightarrow> t0 \\<le> x\n  \\<lbrakk>t0 + real i * step \\<le> x;\n   x \\<le> t0 + (step + real i * step)\\<rbrakk>\n  \\<Longrightarrow> x \\<le> t1\n  \\<lbrakk>t0 + (step + real i * step) \\<le> x;\n   x \\<le> t0 + real i * step\\<rbrakk>\n  \\<Longrightarrow> t1 \\<le> x\n  \\<lbrakk>t0 + (step + real i * step) \\<le> x;\n   x \\<le> t0 + real i * step\\<rbrakk>\n  \\<Longrightarrow> x \\<le> t0\n\ngoal (1 subgoal):\n 1. (t1 < t0 \\<Longrightarrow> t1 \\<le> x) &&&\n    (t0 < t1 \\<Longrightarrow> x \\<le> t1)", "by (auto simp: closed_segment_eq_real_ivl algebra_simps split: if_splits)"], ["proof (state)\nthis:\n  t1 < t0 \\<Longrightarrow> t1 \\<le> x\n  t0 < t1 \\<Longrightarrow> x \\<le> t1\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step = 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}", "then"], ["proof (chain)\npicking this:\n  t1 < t0 \\<Longrightarrow> t1 \\<le> x\n  t0 < t1 \\<Longrightarrow> x \\<le> t1", "have le: \"(x - t0) / step \\<le> 1 + real subdivide_count\""], ["proof (prove)\nusing this:\n  t1 < t0 \\<Longrightarrow> t1 \\<le> x\n  t0 < t1 \\<Longrightarrow> x \\<le> t1\n\ngoal (1 subgoal):\n 1. (x - t0) / step \\<le> 1 + real subdivide_count", "unfolding step_def"], ["proof (prove)\nusing this:\n  t1 < t0 \\<Longrightarrow> t1 \\<le> x\n  t0 < t1 \\<Longrightarrow> x \\<le> t1\n\ngoal (1 subgoal):\n 1. (x - t0) / ((t1 - t0) / real (Suc subdivide_count))\n    \\<le> 1 + real subdivide_count", "by (auto simp: divide_simps)"], ["proof (state)\nthis:\n  (x - t0) / step \\<le> 1 + real subdivide_count\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step = 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}", "have \"x = t0 + ((x - t0) / step) * step\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = t0 + (x - t0) / step * step", "using False"], ["proof (prove)\nusing this:\n  step \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x = t0 + (x - t0) / step * step", "by auto"], ["proof (state)\nthis:\n  x = t0 + (x - t0) / step * step\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step = 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}", "also"], ["proof (state)\nthis:\n  x = t0 + (x - t0) / step * step\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step = 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}", "have \"\\<dots> \\<in> {t0 -- t1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 + (x - t0) / step * step \\<in> {t0--t1}", "by (rule step_in_segment) (auto simp: nn le)"], ["proof (state)\nthis:\n  t0 + (x - t0) / step * step \\<in> {t0--t1}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step = 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}", "finally"], ["proof (chain)\npicking this:\n  x \\<in> {t0--t1}", "show \"x \\<in> {t0 -- t1}\""], ["proof (prove)\nusing this:\n  x \\<in> {t0--t1}\n\ngoal (1 subgoal):\n 1. x \\<in> {t0--t1}", "by simp"], ["proof (state)\nthis:\n  x \\<in> {t0--t1}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> {t0 +\n                         real (Suc i - 1) * step--t0 + real (Suc i) * step};\n        step = 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {t0--t1}", "qed simp"], ["proof (state)\nthis:\n  S (Suc i) \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "have algebra: \"(1 + real i) * (t1 - t0) - real i * (t1 - t0) = t1 - t0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + real i) * (t1 - t0) - real i * (t1 - t0) = t1 - t0", "by (simp only: algebra_simps)"], ["proof (state)\nthis:\n  (1 + real i) * (t1 - t0) - real i * (t1 - t0) = t1 - t0\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "interpret l: unique_on_bounded_closed ?i \"S (Suc i)\" \"?sol ?i\" f X L"], ["proof (prove)\ngoal (1 subgoal):\n 1. unique_on_bounded_closed (t0 + real i * step) (S (Suc i))\n     (psolution (LEAST i. t0 + real i * step \\<in> S i)\n       (t0 + real i * step))\n     f X L", "apply unfold_locales"], ["proof (prove)\ngoal (4 subgoals):\n 1. compact (S (Suc i))\n 2. continuous_on (S (Suc i) \\<times> X) (\\<lambda>(t, x). f t x)\n 3. \\<And>t. t \\<in> S (Suc i) \\<Longrightarrow> L-lipschitz_on X (f t)\n 4. \\<And>s t.\n       \\<lbrakk>s \\<in> S (Suc i); t \\<in> S (Suc i)\\<rbrakk>\n       \\<Longrightarrow> \\<bar>s - t\\<bar> * L < 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. compact (S (Suc i))", "by (auto simp: S_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. continuous_on (S (Suc i) \\<times> X) (\\<lambda>(t, x). f t x)\n 2. \\<And>t. t \\<in> S (Suc i) \\<Longrightarrow> L-lipschitz_on X (f t)\n 3. \\<And>s t.\n       \\<lbrakk>s \\<in> S (Suc i); t \\<in> S (Suc i)\\<rbrakk>\n       \\<Longrightarrow> \\<bar>s - t\\<bar> * L < 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on (S (Suc i) \\<times> X) (\\<lambda>(t, x). f t x)", "using \\<open>S (Suc i) \\<subseteq> T\\<close>"], ["proof (prove)\nusing this:\n  S (Suc i) \\<subseteq> T\n\ngoal (1 subgoal):\n 1. continuous_on (S (Suc i) \\<times> X) (\\<lambda>(t, x). f t x)", "by (auto intro!: continuous_intros simp: split_beta')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t. t \\<in> S (Suc i) \\<Longrightarrow> L-lipschitz_on X (f t)\n 2. \\<And>s t.\n       \\<lbrakk>s \\<in> S (Suc i); t \\<in> S (Suc i)\\<rbrakk>\n       \\<Longrightarrow> \\<bar>s - t\\<bar> * L < 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t_ \\<in> S (Suc i) \\<Longrightarrow> L-lipschitz_on X (f t_)", "using \\<open>S (Suc i) \\<subseteq> T\\<close>"], ["proof (prove)\nusing this:\n  S (Suc i) \\<subseteq> T\n\ngoal (1 subgoal):\n 1. t_ \\<in> S (Suc i) \\<Longrightarrow> L-lipschitz_on X (f t_)", "by (auto intro!: lipschitz)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>s \\<in> S (Suc i); t \\<in> S (Suc i)\\<rbrakk>\n       \\<Longrightarrow> \\<bar>s - t\\<bar> * L < 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s_ \\<in> S (Suc i); t_ \\<in> S (Suc i)\\<rbrakk>\n    \\<Longrightarrow> \\<bar>s_ - t_\\<bar> * L < 1", "by (rule subdivide_lipschitz_lemma) (auto simp add: step_def divide_simps algebra S_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "note ui"], ["proof (state)\nthis:\n  ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n   {t0--t0 + real i * step} X\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n   {t0--t0 + real i * step} X\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "have mem_SI: \"t \\<in> closed_segment ?i ?si \\<Longrightarrow> t \\<in> S (if t = ?i then i else Suc i)\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> {t0 + real i * step--t0 + (1 + real i) * step} \\<Longrightarrow>\n    t \\<in> S (if t = t0 + real i * step then i else Suc i)", "by (auto simp: S_def)"], ["proof (state)\nthis:\n  ?t \\<in> {t0 + real i * step--t0 + (1 + real i) * step} \\<Longrightarrow>\n  ?t \\<in> S (if ?t = t0 + real i * step then i else Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "have min_S: \"(if t = t0 + real i * step then i else Suc i) \\<le> y\"\n      if \"t \\<in> closed_segment (t0 + real i * step) (t0 + (1 + real i) * step)\"\n        \"t \\<in> S y\"\n      for y t"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if t = t0 + real i * step then i else Suc i) \\<le> y", "apply (cases \"t = t0 + real i * step\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. t = t0 + real i * step \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y\n 2. t \\<noteq> t0 + real i * step \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t = t0 + real i * step \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y", "using that \\<open>step \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  t \\<in> {t0 + real i * step--t0 + (1 + real i) * step}\n  t \\<in> S y\n  step \\<noteq> 0\n\ngoal (1 subgoal):\n 1. t = t0 + real i * step \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y", "by (auto simp add: S_def closed_segment_eq_real_ivl algebra_simps zero_le_mult_iff split: if_splits )"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<noteq> t0 + real i * step \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y", "subgoal premises ne"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if t = t0 + real i * step then i else Suc i) \\<le> y", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y\n 2. \\<not> ?P \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y", "assume \"step > 0\""], ["proof (state)\nthis:\n  0 < step\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y\n 2. \\<not> ?P \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y", "with that"], ["proof (chain)\npicking this:\n  t \\<in> {t0 + real i * step--t0 + (1 + real i) * step}\n  t \\<in> S y\n  0 < step", "have \"t0 + real i * step \\<le> t\" \"t \\<le> t0 + (1 + real i) * step\"\n          \"t0 + real (y - Suc 0) * step \\<le> t\" \"t \\<le> t0 + real y * step\""], ["proof (prove)\nusing this:\n  t \\<in> {t0 + real i * step--t0 + (1 + real i) * step}\n  t \\<in> S y\n  0 < step\n\ngoal (1 subgoal):\n 1. (t0 + real i * step \\<le> t &&& t \\<le> t0 + (1 + real i) * step) &&&\n    t0 + real (y - Suc 0) * step \\<le> t &&& t \\<le> t0 + real y * step", "by (auto simp: closed_segment_eq_real_ivl S_def)"], ["proof (state)\nthis:\n  t0 + real i * step \\<le> t\n  t \\<le> t0 + (1 + real i) * step\n  t0 + real (y - Suc 0) * step \\<le> t\n  t \\<le> t0 + real y * step\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y\n 2. \\<not> ?P \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y", "then"], ["proof (chain)\npicking this:\n  t0 + real i * step \\<le> t\n  t \\<le> t0 + (1 + real i) * step\n  t0 + real (y - Suc 0) * step \\<le> t\n  t \\<le> t0 + real y * step", "have \"real i * step < real y * step\""], ["proof (prove)\nusing this:\n  t0 + real i * step \\<le> t\n  t \\<le> t0 + (1 + real i) * step\n  t0 + real (y - Suc 0) * step \\<le> t\n  t \\<le> t0 + real y * step\n\ngoal (1 subgoal):\n 1. real i * step < real y * step", "using \\<open>step > 0\\<close> ne"], ["proof (prove)\nusing this:\n  t0 + real i * step \\<le> t\n  t \\<le> t0 + (1 + real i) * step\n  t0 + real (y - Suc 0) * step \\<le> t\n  t \\<le> t0 + real y * step\n  0 < step\n  t \\<noteq> t0 + real i * step\n\ngoal (1 subgoal):\n 1. real i * step < real y * step", "by arith"], ["proof (state)\nthis:\n  real i * step < real y * step\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y\n 2. \\<not> ?P \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y", "then"], ["proof (chain)\npicking this:\n  real i * step < real y * step", "show ?thesis"], ["proof (prove)\nusing this:\n  real i * step < real y * step\n\ngoal (1 subgoal):\n 1. (if t = t0 + real i * step then i else Suc i) \\<le> y", "using \\<open>step > 0\\<close> that"], ["proof (prove)\nusing this:\n  real i * step < real y * step\n  0 < step\n  t \\<in> {t0 + real i * step--t0 + (1 + real i) * step}\n  t \\<in> S y\n\ngoal (1 subgoal):\n 1. (if t = t0 + real i * step then i else Suc i) \\<le> y", "by (auto simp add: closed_segment_eq_real_ivl S_def)"], ["proof (state)\nthis:\n  (if t = t0 + real i * step then i else Suc i) \\<le> y\n\ngoal (1 subgoal):\n 1. \\<not> 0 < step \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 < step \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y", "assume \"\\<not> step > 0\""], ["proof (state)\nthis:\n  \\<not> 0 < step\n\ngoal (1 subgoal):\n 1. \\<not> 0 < step \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y", "with \\<open>step \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  step \\<noteq> 0\n  \\<not> 0 < step", "have \"step < 0\""], ["proof (prove)\nusing this:\n  step \\<noteq> 0\n  \\<not> 0 < step\n\ngoal (1 subgoal):\n 1. step < 0", "by simp"], ["proof (state)\nthis:\n  step < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < step \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y", "with that"], ["proof (chain)\npicking this:\n  t \\<in> {t0 + real i * step--t0 + (1 + real i) * step}\n  t \\<in> S y\n  step < 0", "have \"t0 + (1 + real i) * step \\<le> t\" \"t \\<le> t0 + real i * step\"\n          \"t0 + real y * step \\<le> t\" \"t \\<le> t0 + real (y - Suc 0) * step\""], ["proof (prove)\nusing this:\n  t \\<in> {t0 + real i * step--t0 + (1 + real i) * step}\n  t \\<in> S y\n  step < 0\n\ngoal (1 subgoal):\n 1. (t0 + (1 + real i) * step \\<le> t &&& t \\<le> t0 + real i * step) &&&\n    t0 + real y * step \\<le> t &&& t \\<le> t0 + real (y - Suc 0) * step", "using ne"], ["proof (prove)\nusing this:\n  t \\<in> {t0 + real i * step--t0 + (1 + real i) * step}\n  t \\<in> S y\n  step < 0\n  t \\<noteq> t0 + real i * step\n\ngoal (1 subgoal):\n 1. (t0 + (1 + real i) * step \\<le> t &&& t \\<le> t0 + real i * step) &&&\n    t0 + real y * step \\<le> t &&& t \\<le> t0 + real (y - Suc 0) * step", "by (auto simp: closed_segment_eq_real_ivl S_def diff_Suc zero_le_mult_iff split: if_splits nat.splits)"], ["proof (state)\nthis:\n  t0 + (1 + real i) * step \\<le> t\n  t \\<le> t0 + real i * step\n  t0 + real y * step \\<le> t\n  t \\<le> t0 + real (y - Suc 0) * step\n\ngoal (1 subgoal):\n 1. \\<not> 0 < step \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y", "then"], ["proof (chain)\npicking this:\n  t0 + (1 + real i) * step \\<le> t\n  t \\<le> t0 + real i * step\n  t0 + real y * step \\<le> t\n  t \\<le> t0 + real (y - Suc 0) * step", "have \"real y * step < real i * step\""], ["proof (prove)\nusing this:\n  t0 + (1 + real i) * step \\<le> t\n  t \\<le> t0 + real i * step\n  t0 + real y * step \\<le> t\n  t \\<le> t0 + real (y - Suc 0) * step\n\ngoal (1 subgoal):\n 1. real y * step < real i * step", "using \\<open>step < 0\\<close> ne"], ["proof (prove)\nusing this:\n  t0 + (1 + real i) * step \\<le> t\n  t \\<le> t0 + real i * step\n  t0 + real y * step \\<le> t\n  t \\<le> t0 + real (y - Suc 0) * step\n  step < 0\n  t \\<noteq> t0 + real i * step\n\ngoal (1 subgoal):\n 1. real y * step < real i * step", "by arith"], ["proof (state)\nthis:\n  real y * step < real i * step\n\ngoal (1 subgoal):\n 1. \\<not> 0 < step \\<Longrightarrow>\n    (if t = t0 + real i * step then i else Suc i) \\<le> y", "then"], ["proof (chain)\npicking this:\n  real y * step < real i * step", "show ?thesis"], ["proof (prove)\nusing this:\n  real y * step < real i * step\n\ngoal (1 subgoal):\n 1. (if t = t0 + real i * step then i else Suc i) \\<le> y", "using \\<open>step < 0\\<close>"], ["proof (prove)\nusing this:\n  real y * step < real i * step\n  step < 0\n\ngoal (1 subgoal):\n 1. (if t = t0 + real i * step then i else Suc i) \\<le> y", "by (auto simp add: closed_segment_eq_real_ivl S_def)"], ["proof (state)\nthis:\n  (if t = t0 + real i * step then i else Suc i) \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<lbrakk>?t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n   ?t \\<in> S ?y\\<rbrakk>\n  \\<Longrightarrow> (if ?t = t0 + real i * step then i else Suc i) \\<le> ?y\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "have \"(?sol usolves_ode f from ?i) (closed_segment ?i ?si) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         psolution (LEAST i. t \\<in> S i)\n          t) usolves_ode f from t0 + real i * step)\n     {t0 + real i * step--t0 + (1 + real i) * step} X", "apply (subst usolves_ode_cong)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>t.\n       t \\<in> {t0 +\n                real i * step--t0 + (1 + real i) * step} \\<Longrightarrow>\n       psolution (LEAST i. t \\<in> S i) t = ?y t\n 2. \\<And>t y.\n       \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n        y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> f t y = ?g t y\n 3. t0 + real i * step = ?s0.0\n 4. {t0 + real i * step--t0 + (1 + real i) * step} = ?S\n 5. X = ?Y\n 6. (?y usolves_ode ?g from ?s0.0) ?S ?Y", "apply (subst Least_equality)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>t.\n       t \\<in> {t0 +\n                real i * step--t0 + (1 + real i) * step} \\<Longrightarrow>\n       t \\<in> S (?y2 t)\n 2. \\<And>t y.\n       \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n        t \\<in> S y\\<rbrakk>\n       \\<Longrightarrow> ?y2 t \\<le> y\n 3. \\<And>t.\n       t \\<in> {t0 +\n                real i * step--t0 + (1 + real i) * step} \\<Longrightarrow>\n       psolution (?y2 t) t = ?ya2 t t\n 4. \\<And>t y.\n       \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n        y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> f t y = ?g t y\n 5. t0 + real i * step = ?s0.0\n 6. {t0 + real i * step--t0 + (1 + real i) * step} = ?S\n 7. X = ?Y\n 8. ((\\<lambda>t. ?ya2 t t) usolves_ode ?g from ?s0.0) ?S ?Y", "apply (rule mem_SI)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>t.\n       t \\<in> {t0 +\n                real i * step--t0 + (1 + real i) * step} \\<Longrightarrow>\n       t \\<in> {t0 + real i * step--t0 + (1 + real i) * step}\n 2. \\<And>t y.\n       \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n        t \\<in> S y\\<rbrakk>\n       \\<Longrightarrow> (if t = t0 + real i * step then i else Suc i)\n                         \\<le> y\n 3. \\<And>t.\n       t \\<in> {t0 +\n                real i * step--t0 + (1 + real i) * step} \\<Longrightarrow>\n       psolution (if t = t0 + real i * step then i else Suc i) t = ?ya2 t t\n 4. \\<And>t y.\n       \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n        y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> f t y = ?g t y\n 5. t0 + real i * step = ?s0.0\n 6. {t0 + real i * step--t0 + (1 + real i) * step} = ?S\n 7. X = ?Y\n 8. ((\\<lambda>t. ?ya2 t t) usolves_ode ?g from ?s0.0) ?S ?Y", "apply assumption"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>t y.\n       \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n        t \\<in> S y\\<rbrakk>\n       \\<Longrightarrow> (if t = t0 + real i * step then i else Suc i)\n                         \\<le> y\n 2. \\<And>t.\n       t \\<in> {t0 +\n                real i * step--t0 + (1 + real i) * step} \\<Longrightarrow>\n       psolution (if t = t0 + real i * step then i else Suc i) t = ?ya2 t t\n 3. \\<And>t y.\n       \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n        y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> f t y = ?g t y\n 4. t0 + real i * step = ?s0.0\n 5. {t0 + real i * step--t0 + (1 + real i) * step} = ?S\n 6. X = ?Y\n 7. ((\\<lambda>t. ?ya2 t t) usolves_ode ?g from ?s0.0) ?S ?Y", "apply (rule min_S)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>t y.\n       \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n        t \\<in> S y\\<rbrakk>\n       \\<Longrightarrow> t \\<in> {t0 +\n                                  real i * step--t0 + (1 + real i) * step}\n 2. \\<And>t y.\n       \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n        t \\<in> S y\\<rbrakk>\n       \\<Longrightarrow> t \\<in> S y\n 3. \\<And>t.\n       t \\<in> {t0 +\n                real i * step--t0 + (1 + real i) * step} \\<Longrightarrow>\n       psolution (if t = t0 + real i * step then i else Suc i) t = ?ya2 t t\n 4. \\<And>t y.\n       \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n        y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> f t y = ?g t y\n 5. t0 + real i * step = ?s0.0\n 6. {t0 + real i * step--t0 + (1 + real i) * step} = ?S\n 7. X = ?Y\n 8. ((\\<lambda>t. ?ya2 t t) usolves_ode ?g from ?s0.0) ?S ?Y", "apply assumption"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>t y.\n       \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n        t \\<in> S y\\<rbrakk>\n       \\<Longrightarrow> t \\<in> S y\n 2. \\<And>t.\n       t \\<in> {t0 +\n                real i * step--t0 + (1 + real i) * step} \\<Longrightarrow>\n       psolution (if t = t0 + real i * step then i else Suc i) t = ?ya2 t t\n 3. \\<And>t y.\n       \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n        y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> f t y = ?g t y\n 4. t0 + real i * step = ?s0.0\n 5. {t0 + real i * step--t0 + (1 + real i) * step} = ?S\n 6. X = ?Y\n 7. ((\\<lambda>t. ?ya2 t t) usolves_ode ?g from ?s0.0) ?S ?Y", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>t.\n       t \\<in> {t0 +\n                real i * step--t0 + (1 + real i) * step} \\<Longrightarrow>\n       psolution (if t = t0 + real i * step then i else Suc i) t = ?ya2 t t\n 2. \\<And>t y.\n       \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n        y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> f t y = ?g t y\n 3. t0 + real i * step = ?s0.0\n 4. {t0 + real i * step--t0 + (1 + real i) * step} = ?S\n 5. X = ?Y\n 6. ((\\<lambda>t. ?ya2 t t) usolves_ode ?g from ?s0.0) ?S ?Y", "apply (rule refl)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>t y.\n       \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n        y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> f t y = ?g t y\n 2. t0 + real i * step = ?s0.0\n 3. {t0 + real i * step--t0 + (1 + real i) * step} = ?S\n 4. X = ?Y\n 5. ((\\<lambda>t.\n         psolution (if t = t0 + real i * step then i else Suc i)\n          t) usolves_ode ?g from ?s0.0)\n     ?S ?Y", "apply (rule refl)"], ["proof (prove)\ngoal (4 subgoals):\n 1. t0 + real i * step = ?s0.0\n 2. {t0 + real i * step--t0 + (1 + real i) * step} = ?S\n 3. X = ?Y\n 4. ((\\<lambda>t.\n         psolution (if t = t0 + real i * step then i else Suc i)\n          t) usolves_ode f from ?s0.0)\n     ?S ?Y", "apply (rule refl)"], ["proof (prove)\ngoal (3 subgoals):\n 1. {t0 + real i * step--t0 + (1 + real i) * step} = ?S\n 2. X = ?Y\n 3. ((\\<lambda>t.\n         psolution (if t = t0 + real i * step then i else Suc i)\n          t) usolves_ode f from t0 + real i * step)\n     ?S ?Y", "apply (rule refl)"], ["proof (prove)\ngoal (2 subgoals):\n 1. X = ?Y\n 2. ((\\<lambda>t.\n         psolution (if t = t0 + real i * step then i else Suc i)\n          t) usolves_ode f from t0 + real i * step)\n     {t0 + real i * step--t0 + (1 + real i) * step} ?Y", "apply (rule refl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         psolution (if t = t0 + real i * step then i else Suc i)\n          t) usolves_ode f from t0 + real i * step)\n     {t0 + real i * step--t0 + (1 + real i) * step} X", "apply (subst usolves_ode_cong[where y=\"psolution (Suc i)\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>t.\n       t \\<in> {t0 +\n                real i * step--t0 + (1 + real i) * step} \\<Longrightarrow>\n       psolution (if t = t0 + real i * step then i else Suc i) t =\n       psolution (Suc i) t\n 2. \\<And>t y.\n       \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n        y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> f t y = ?g14 t y\n 3. t0 + real i * step = ?s0.14\n 4. {t0 + real i * step--t0 + (1 + real i) * step} = ?S14\n 5. X = ?Y14\n 6. (psolution (Suc i) usolves_ode ?g14 from ?s0.14) ?S14 ?Y14", "using l.fixed_point_iv[unfolded Least_eq]"], ["proof (prove)\nusing this:\n  apply_bcontfun\n   (unique_on_bounded_closed.fixed_point (t0 + real i * step) (S (Suc i))\n     (psolution i (t0 + real i * step)) f X)\n   (t0 + real i * step) =\n  psolution i (t0 + real i * step)\n\ngoal (6 subgoals):\n 1. \\<And>t.\n       t \\<in> {t0 +\n                real i * step--t0 + (1 + real i) * step} \\<Longrightarrow>\n       psolution (if t = t0 + real i * step then i else Suc i) t =\n       psolution (Suc i) t\n 2. \\<And>t y.\n       \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n        y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> f t y = ?g14 t y\n 3. t0 + real i * step = ?s0.14\n 4. {t0 + real i * step--t0 + (1 + real i) * step} = ?S14\n 5. X = ?Y14\n 6. (psolution (Suc i) usolves_ode ?g14 from ?s0.14) ?S14 ?Y14", "apply (simp add: S_def; fail)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>t y.\n       \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (1 + real i) * step};\n        y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> f t y = ?g14 t y\n 2. t0 + real i * step = ?s0.14\n 3. {t0 + real i * step--t0 + (1 + real i) * step} = ?S14\n 4. X = ?Y14\n 5. (psolution (Suc i) usolves_ode ?g14 from ?s0.14) ?S14 ?Y14", "apply (rule refl)"], ["proof (prove)\ngoal (4 subgoals):\n 1. t0 + real i * step = ?s0.14\n 2. {t0 + real i * step--t0 + (1 + real i) * step} = ?S14\n 3. X = ?Y14\n 4. (psolution (Suc i) usolves_ode f from ?s0.14) ?S14 ?Y14", "apply (rule refl)"], ["proof (prove)\ngoal (3 subgoals):\n 1. {t0 + real i * step--t0 + (1 + real i) * step} = ?S14\n 2. X = ?Y14\n 3. (psolution (Suc i) usolves_ode f from t0 + real i * step) ?S14 ?Y14", "apply (rule refl)"], ["proof (prove)\ngoal (2 subgoals):\n 1. X = ?Y14\n 2. (psolution (Suc i) usolves_ode f from t0 + real i * step)\n     {t0 + real i * step--t0 + (1 + real i) * step} ?Y14", "apply (rule refl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (psolution (Suc i) usolves_ode f from t0 + real i * step)\n     {t0 + real i * step--t0 + (1 + real i) * step} X", "using l.fixed_point_usolves_ode"], ["proof (prove)\nusing this:\n  (apply_bcontfun l.fixed_point usolves_ode f from t0 + real i * step)\n   (S (Suc i)) X\n\ngoal (1 subgoal):\n 1. (psolution (Suc i) usolves_ode f from t0 + real i * step)\n     {t0 + real i * step--t0 + (1 + real i) * step} X", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. (apply_bcontfun l.fixed_point usolves_ode f from t0 + real i * step)\n     (S (Suc i)) X \\<Longrightarrow>\n    (psolution (Suc i) usolves_ode f from t0 + real i * step)\n     {t0 + real i * step--t0 + (1 + real i) * step} X", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (apply_bcontfun\n      (unique_on_bounded_closed.fixed_point (t0 + real i * step) (S (Suc i))\n        (psolution i (t0 + real i * step)) f\n        X) usolves_ode f from t0 + real i * step)\n     (S (Suc i)) X \\<Longrightarrow>\n    (apply_bcontfun\n      (unique_on_bounded_closed.fixed_point (t0 + real i * step)\n        {t0 + real i * step--t0 + (1 + real i) * step}\n        (psolution i (t0 + real i * step)) f\n        X) usolves_ode f from t0 + real i * step)\n     {t0 + real i * step--t0 + (1 + real i) * step} X", "apply (simp add: S_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ((\\<lambda>t.\n       psolution (LEAST i. t \\<in> S i)\n        t) usolves_ode f from t0 + real i * step)\n   {t0 + real i * step--t0 + (1 + real i) * step} X\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>t.\n       psolution (LEAST i. t \\<in> S i)\n        t) usolves_ode f from t0 + real i * step)\n   {t0 + real i * step--t0 + (1 + real i) * step} X\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "have \"t \\<in> {t0 + real i * step--t0 + (step + real i * step)} \\<Longrightarrow>\n         t \\<in> {t0--t0 + real i * step} \\<Longrightarrow> t = t0 + real i * step\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<in> {t0 + real i * step--t0 + (step + real i * step)};\n     t \\<in> {t0--t0 + real i * step}\\<rbrakk>\n    \\<Longrightarrow> t = t0 + real i * step", "by (subst segment_inter[rotated], assumption, assumption) (auto simp: algebra_simps)"], ["proof (state)\nthis:\n  \\<lbrakk>?t \\<in> {t0 + real i * step--t0 + (step + real i * step)};\n   ?t \\<in> {t0--t0 + real i * step}\\<rbrakk>\n  \\<Longrightarrow> ?t = t0 + real i * step\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n   {t0--t0 + real i * step} X\n  ((\\<lambda>t.\n       psolution (LEAST i. t \\<in> S i)\n        t) usolves_ode f from t0 + real i * step)\n   {t0 + real i * step--t0 + (1 + real i) * step} X\n  \\<lbrakk>?t \\<in> {t0 + real i * step--t0 + (step + real i * step)};\n   ?t \\<in> {t0--t0 + real i * step}\\<rbrakk>\n  \\<Longrightarrow> ?t = t0 + real i * step", "have \"((\\<lambda>t. if t \\<in> closed_segment t0 ?i then ?sol t else ?sol t)\n      usolves_ode\n      (\\<lambda>t. if t \\<in> closed_segment t0 ?i then f t else f t) from t0)\n      (closed_segment t0 ?i \\<union> closed_segment ?i ?si) X\""], ["proof (prove)\nusing this:\n  ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n   {t0--t0 + real i * step} X\n  ((\\<lambda>t.\n       psolution (LEAST i. t \\<in> S i)\n        t) usolves_ode f from t0 + real i * step)\n   {t0 + real i * step--t0 + (1 + real i) * step} X\n  \\<lbrakk>?t \\<in> {t0 + real i * step--t0 + (step + real i * step)};\n   ?t \\<in> {t0--t0 + real i * step}\\<rbrakk>\n  \\<Longrightarrow> ?t = t0 + real i * step\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         if t \\<in> {t0--t0 + real i * step}\n         then psolution (LEAST i. t \\<in> S i) t\n         else psolution (LEAST i. t \\<in> S i)\n               t) usolves_ode (\\<lambda>t.\n                                  if t \\<in> {t0--t0 + real i * step}\n                                  then f t else f t) from t0)\n     ({t0--t0 + real i * step} \\<union>\n      {t0 + real i * step--t0 + (1 + real i) * step})\n     X", "by (intro connection_usolves_ode[where t=\"?i\"]) (auto simp: algebra_simps split: if_split_asm)"], ["proof (state)\nthis:\n  ((\\<lambda>t.\n       if t \\<in> {t0--t0 + real i * step}\n       then psolution (LEAST i. t \\<in> S i) t\n       else psolution (LEAST i. t \\<in> S i)\n             t) usolves_ode (\\<lambda>t.\n                                if t \\<in> {t0--t0 + real i * step} then f t\n                                else f t) from t0)\n   ({t0--t0 + real i * step} \\<union>\n    {t0 + real i * step--t0 + (1 + real i) * step})\n   X\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "also"], ["proof (state)\nthis:\n  ((\\<lambda>t.\n       if t \\<in> {t0--t0 + real i * step}\n       then psolution (LEAST i. t \\<in> S i) t\n       else psolution (LEAST i. t \\<in> S i)\n             t) usolves_ode (\\<lambda>t.\n                                if t \\<in> {t0--t0 + real i * step} then f t\n                                else f t) from t0)\n   ({t0--t0 + real i * step} \\<union>\n    {t0 + real i * step--t0 + (1 + real i) * step})\n   X\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "have \"closed_segment t0 ?i \\<union> closed_segment ?i ?si = closed_segment t0 ?si\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0--t0 + real i * step} \\<union>\n    {t0 + real i * step--t0 + (1 + real i) * step} =\n    {t0--t0 + (1 + real i) * step}", "apply (rule closed_segment_Un)"], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 + real i * step \\<in> {t0--t0 + (1 + real i) * step}", "by (cases \"step < 0\")\n        (auto simp: closed_segment_eq_real_ivl zero_le_mult_iff mult_le_0_iff\n          intro!: mult_right_mono\n          split: if_split_asm)"], ["proof (state)\nthis:\n  {t0--t0 + real i * step} \\<union>\n  {t0 + real i * step--t0 + (1 + real i) * step} =\n  {t0--t0 + (1 + real i) * step}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> Suc subdivide_count \\<Longrightarrow>\n                ((\\<lambda>t.\n                     psolution (LEAST i. t \\<in> S i)\n                      t) usolves_ode f from t0)\n                 {t0--t0 + real i * step} X;\n        Suc i \\<le> Suc subdivide_count\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t.\n                              psolution (LEAST i. t \\<in> S i)\n                               t) usolves_ode f from t0)\n                          {t0--t0 + real (Suc i) * step} X", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>t.\n       if t \\<in> {t0--t0 + real i * step}\n       then psolution (LEAST i. t \\<in> S i) t\n       else psolution (LEAST i. t \\<in> S i)\n             t) usolves_ode (\\<lambda>t.\n                                if t \\<in> {t0--t0 + real i * step} then f t\n                                else f t) from t0)\n   {t0--t0 + (1 + real i) * step} X", "show ?case"], ["proof (prove)\nusing this:\n  ((\\<lambda>t.\n       if t \\<in> {t0--t0 + real i * step}\n       then psolution (LEAST i. t \\<in> S i) t\n       else psolution (LEAST i. t \\<in> S i)\n             t) usolves_ode (\\<lambda>t.\n                                if t \\<in> {t0--t0 + real i * step} then f t\n                                else f t) from t0)\n   {t0--t0 + (1 + real i) * step} X\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n     {t0--t0 + real (Suc i) * step} X", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>t. psolution (LEAST i. t \\<in> S i) t) usolves_ode f from t0)\n   {t0--t0 + real (Suc i) * step} X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (psolutions usolves_ode f from t0) {t0--t0 + real i * step} X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma psolutions_usolves_ode: \"(psolutions usolves_ode f from t0) {t0 -- t1} X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (psolutions usolves_ode f from t0) {t0--t1} X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (psolutions usolves_ode f from t0) {t0--t1} X", "let ?T = \"closed_segment t0 (t0 + real (Suc subdivide_count) * step)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (psolutions usolves_ode f from t0) {t0--t1} X", "have \"(psolutions usolves_ode f from t0) ?T X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (psolutions usolves_ode f from t0)\n     {t0--t0 + real (Suc subdivide_count) * step} X", "by (rule psolutions_usolves_until_step) simp"], ["proof (state)\nthis:\n  (psolutions usolves_ode f from t0)\n   {t0--t0 + real (Suc subdivide_count) * step} X\n\ngoal (1 subgoal):\n 1. (psolutions usolves_ode f from t0) {t0--t1} X", "also"], ["proof (state)\nthis:\n  (psolutions usolves_ode f from t0)\n   {t0--t0 + real (Suc subdivide_count) * step} X\n\ngoal (1 subgoal):\n 1. (psolutions usolves_ode f from t0) {t0--t1} X", "have \"?T = {t0 -- t1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0--t0 + real (Suc subdivide_count) * step} = {t0--t1}", "unfolding last_step"], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0--t1} = {t0--t1}", ".."], ["proof (state)\nthis:\n  {t0--t0 + real (Suc subdivide_count) * step} = {t0--t1}\n\ngoal (1 subgoal):\n 1. (psolutions usolves_ode f from t0) {t0--t1} X", "finally"], ["proof (chain)\npicking this:\n  (psolutions usolves_ode f from t0) {t0--t1} X", "show ?thesis"], ["proof (prove)\nusing this:\n  (psolutions usolves_ode f from t0) {t0--t1} X\n\ngoal (1 subgoal):\n 1. (psolutions usolves_ode f from t0) {t0--t1} X", "."], ["proof (state)\nthis:\n  (psolutions usolves_ode f from t0) {t0--t1} X\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "definition \"solution t = (if t \\<le> t0 then psolutions tmin t else psolutions tmax t)\""], ["", "lemma solution_eq_left: \"tmin \\<le> t \\<Longrightarrow> t \\<le> t0 \\<Longrightarrow> solution t = psolutions tmin t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tmin \\<le> t; t \\<le> t0\\<rbrakk>\n    \\<Longrightarrow> solution t = psolutions tmin t", "by (simp add: solution_def)"], ["", "lemma solution_eq_right: \"t0 \\<le> t \\<Longrightarrow> t \\<le> tmax \\<Longrightarrow> solution t = psolutions tmax t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t0 \\<le> t; t \\<le> tmax\\<rbrakk>\n    \\<Longrightarrow> solution t = psolutions tmax t", "by (simp add: solution_def psolutions_def)"], ["", "lemma solution_usolves_ode: \"(solution usolves_ode f from t0) T X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (solution usolves_ode f from t0) T X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (solution usolves_ode f from t0) T X", "from psolutions_usolves_ode[OF tmin(2)] tmin_le_t0"], ["proof (chain)\npicking this:\n  (psolutions tmin usolves_ode f from t0) {t0--tmin} X\n  tmin \\<le> t0", "have u1: \"(psolutions tmin usolves_ode f from t0) {tmin .. t0} X\""], ["proof (prove)\nusing this:\n  (psolutions tmin usolves_ode f from t0) {t0--tmin} X\n  tmin \\<le> t0\n\ngoal (1 subgoal):\n 1. (psolutions tmin usolves_ode f from t0) {tmin..t0} X", "by (auto simp: closed_segment_eq_real_ivl split: if_splits)"], ["proof (state)\nthis:\n  (psolutions tmin usolves_ode f from t0) {tmin..t0} X\n\ngoal (1 subgoal):\n 1. (solution usolves_ode f from t0) T X", "from psolutions_usolves_ode[OF tmax(2)] tmin_le_t0"], ["proof (chain)\npicking this:\n  (psolutions tmax usolves_ode f from t0) {t0--tmax} X\n  tmin \\<le> t0", "have u2: \"(psolutions tmax usolves_ode f from t0) {t0 .. tmax} X\""], ["proof (prove)\nusing this:\n  (psolutions tmax usolves_ode f from t0) {t0--tmax} X\n  tmin \\<le> t0\n\ngoal (1 subgoal):\n 1. (psolutions tmax usolves_ode f from t0) {t0..tmax} X", "by (auto simp: closed_segment_eq_real_ivl split: if_splits)"], ["proof (state)\nthis:\n  (psolutions tmax usolves_ode f from t0) {t0..tmax} X\n\ngoal (1 subgoal):\n 1. (solution usolves_ode f from t0) T X", "have \"(solution usolves_ode f from t0) ({tmin .. t0} \\<union> {t0 .. tmax}) (X \\<union> X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (solution usolves_ode f from t0) ({tmin..t0} \\<union> {t0..tmax})\n     (X \\<union> X)", "apply (rule usolves_ode_union_closed[where t=t0])"], ["proof (prove)\ngoal (5 subgoals):\n 1. (solution usolves_ode f from t0) {tmin..t0} (X \\<union> X)\n 2. \\<And>t.\n       t \\<in> closure {t0..tmax} \\<inter>\n               closure {tmin..t0} \\<Longrightarrow>\n       (solution usolves_ode f from t) {t0..tmax} (X \\<union> X)\n 3. closure {t0..tmax} \\<inter> closure {tmin..t0} \\<subseteq> {tmin..t0}\n 4. closure {t0..tmax} \\<inter> closure {tmin..t0} \\<subseteq> {t0..tmax}\n 5. t0 \\<in> closure {t0..tmax} \\<inter> closure {tmin..t0}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (solution usolves_ode f from t0) {tmin..t0} (X \\<union> X)", "by (subst usolves_ode_cong[where y=\"psolutions tmin\"]) (auto simp: solution_eq_left u1)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t.\n       t \\<in> closure {t0..tmax} \\<inter>\n               closure {tmin..t0} \\<Longrightarrow>\n       (solution usolves_ode f from t) {t0..tmax} (X \\<union> X)\n 2. closure {t0..tmax} \\<inter> closure {tmin..t0} \\<subseteq> {tmin..t0}\n 3. closure {t0..tmax} \\<inter> closure {tmin..t0} \\<subseteq> {t0..tmax}\n 4. t0 \\<in> closure {t0..tmax} \\<inter> closure {tmin..t0}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t_ \\<in> closure {t0..tmax} \\<inter>\n             closure {tmin..t0} \\<Longrightarrow>\n    (solution usolves_ode f from t_) {t0..tmax} (X \\<union> X)", "using u2"], ["proof (prove)\nusing this:\n  (psolutions tmax usolves_ode f from t0) {t0..tmax} X\n\ngoal (1 subgoal):\n 1. t_ \\<in> closure {t0..tmax} \\<inter>\n             closure {tmin..t0} \\<Longrightarrow>\n    (solution usolves_ode f from t_) {t0..tmax} (X \\<union> X)", "by (rule usolves_ode_congI) (auto simp: solution_eq_right)"], ["proof (prove)\ngoal (3 subgoals):\n 1. closure {t0..tmax} \\<inter> closure {tmin..t0} \\<subseteq> {tmin..t0}\n 2. closure {t0..tmax} \\<inter> closure {tmin..t0} \\<subseteq> {t0..tmax}\n 3. t0 \\<in> closure {t0..tmax} \\<inter> closure {tmin..t0}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. closure {t0..tmax} \\<inter> closure {tmin..t0} \\<subseteq> {tmin..t0}", "by simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. closure {t0..tmax} \\<inter> closure {tmin..t0} \\<subseteq> {t0..tmax}\n 2. t0 \\<in> closure {t0..tmax} \\<inter> closure {tmin..t0}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. closure {t0..tmax} \\<inter> closure {tmin..t0} \\<subseteq> {t0..tmax}", "by simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> closure {t0..tmax} \\<inter> closure {tmin..t0}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> closure {t0..tmax} \\<inter> closure {tmin..t0}", "by simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (solution usolves_ode f from t0) ({tmin..t0} \\<union> {t0..tmax})\n   (X \\<union> X)\n\ngoal (1 subgoal):\n 1. (solution usolves_ode f from t0) T X", "also"], ["proof (state)\nthis:\n  (solution usolves_ode f from t0) ({tmin..t0} \\<union> {t0..tmax})\n   (X \\<union> X)\n\ngoal (1 subgoal):\n 1. (solution usolves_ode f from t0) T X", "have \"{tmin .. t0} \\<union> {t0 .. tmax} = T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {tmin..t0} \\<union> {t0..tmax} = T", "by (simp add: T_split[symmetric])"], ["proof (state)\nthis:\n  {tmin..t0} \\<union> {t0..tmax} = T\n\ngoal (1 subgoal):\n 1. (solution usolves_ode f from t0) T X", "finally"], ["proof (chain)\npicking this:\n  (solution usolves_ode f from t0) T (X \\<union> X)", "show ?thesis"], ["proof (prove)\nusing this:\n  (solution usolves_ode f from t0) T (X \\<union> X)\n\ngoal (1 subgoal):\n 1. (solution usolves_ode f from t0) T X", "by simp"], ["proof (state)\nthis:\n  (solution usolves_ode f from t0) T X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma solution_solves_ode: \"(solution solves_ode f) T X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (solution solves_ode f) T X", "by (rule usolves_odeD[OF solution_usolves_ode])"], ["", "lemma solution_iv[simp]: \"solution t0 = x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. solution t0 = x0", "by (auto simp: solution_def psolutions_def)"], ["", "end"], ["", "subsection \\<open>Picard-Lindeloef for @{term \"X = UNIV\"}\\<close>"], ["", "text\\<open>\\label{sec:pl-us}\\<close>"], ["", "locale unique_on_strip =\n  compact_interval T +\n  continuous_rhs T UNIV f +\n  global_lipschitz T UNIV f L\n  for t0 and T and f::\"real \\<Rightarrow> 'a \\<Rightarrow> 'a::banach\" and L +\n  assumes iv_time: \"t0 \\<in> T\"\nbegin"], ["", "sublocale unique_on_closed t0 T x0 f UNIV L for x0"], ["proof (prove)\ngoal (1 subgoal):\n 1. unique_on_closed t0 T x0 f UNIV L", "by (-, unfold_locales) (auto simp: iv_time)"], ["", "end"], ["", "subsection \\<open>Picard-Lindeloef on cylindric domain\\<close>"], ["", "text\\<open>\\label{sec:pl-rect}\\<close>"], ["", "locale solution_in_cylinder =\n  continuous_rhs T \"cball x0 b\" f +\n  compact_interval T\n  for t0 T x0 b and f::\"real \\<Rightarrow> 'a \\<Rightarrow> 'a::banach\" +\n  fixes X B\n  defines \"X \\<equiv> cball x0 b\"\n  assumes initial_time_in: \"t0 \\<in> T\"\n  assumes norm_f: \"\\<And>x t. t \\<in> T \\<Longrightarrow> x \\<in> X \\<Longrightarrow> norm (f t x) \\<le> B\"\n  assumes b_pos: \"b \\<ge> 0\"\n  assumes e_bounded: \"\\<And>t. t \\<in> T \\<Longrightarrow> dist t t0 \\<le> b / B\"\nbegin"], ["", "lemmas cylinder = X_def"], ["", "lemma B_nonneg: \"B \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> B", "have \"0 \\<le> norm (f t0 x0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> norm (f t0 x0)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> norm (f t0 x0)\n\ngoal (1 subgoal):\n 1. 0 \\<le> B", "also"], ["proof (state)\nthis:\n  0 \\<le> norm (f t0 x0)\n\ngoal (1 subgoal):\n 1. 0 \\<le> B", "from b_pos norm_f"], ["proof (chain)\npicking this:\n  0 \\<le> b\n  \\<lbrakk>?t \\<in> T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> norm (f ?t ?x) \\<le> B", "have \"... \\<le> B\""], ["proof (prove)\nusing this:\n  0 \\<le> b\n  \\<lbrakk>?t \\<in> T; ?x \\<in> X\\<rbrakk>\n  \\<Longrightarrow> norm (f ?t ?x) \\<le> B\n\ngoal (1 subgoal):\n 1. norm (f t0 x0) \\<le> B", "by (simp add: initial_time_in X_def)"], ["proof (state)\nthis:\n  norm (f t0 x0) \\<le> B\n\ngoal (1 subgoal):\n 1. 0 \\<le> B", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> B", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> B\n\ngoal (1 subgoal):\n 1. 0 \\<le> B", "by simp"], ["proof (state)\nthis:\n  0 \\<le> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma in_bounds_derivativeI:\n  assumes \"t \\<in> T\"\n  assumes init: \"x t0 = x0\"\n  assumes cont: \"continuous_on (closed_segment t0 t) x\"\n  assumes solves: \"(x has_vderiv_on (\\<lambda>s. f s (y s))) (open_segment t0 t)\"\n  assumes y_bounded: \"\\<And>\\<xi>. \\<xi> \\<in> closed_segment t0 t \\<Longrightarrow> x \\<xi> \\<in> X \\<Longrightarrow> y \\<xi> \\<in> X\"\n  shows \"x t \\<in> cball x0 (B * abs (t - t0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n 2. \\<not> ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "assume \"b = 0 \\<or> B = 0\""], ["proof (state)\nthis:\n  b = 0 \\<or> B = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n 2. \\<not> ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "with assms e_bounded T_def"], ["proof (chain)\npicking this:\n  t \\<in> T\n  x t0 = x0\n  continuous_on {t0--t} x\n  (x has_vderiv_on (\\<lambda>s. f s (y s))) {t0<--<t}\n  \\<lbrakk>?\\<xi> \\<in> {t0--t}; x ?\\<xi> \\<in> X\\<rbrakk>\n  \\<Longrightarrow> y ?\\<xi> \\<in> X\n  ?t \\<in> T \\<Longrightarrow> dist ?t t0 \\<le> b / B\n  T = {tmin..tmax}\n  b = 0 \\<or> B = 0", "have \"t = t0\""], ["proof (prove)\nusing this:\n  t \\<in> T\n  x t0 = x0\n  continuous_on {t0--t} x\n  (x has_vderiv_on (\\<lambda>s. f s (y s))) {t0<--<t}\n  \\<lbrakk>?\\<xi> \\<in> {t0--t}; x ?\\<xi> \\<in> X\\<rbrakk>\n  \\<Longrightarrow> y ?\\<xi> \\<in> X\n  ?t \\<in> T \\<Longrightarrow> dist ?t t0 \\<le> b / B\n  T = {tmin..tmax}\n  b = 0 \\<or> B = 0\n\ngoal (1 subgoal):\n 1. t = t0", "by auto"], ["proof (state)\nthis:\n  t = t0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n 2. \\<not> ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = t0\n\ngoal (1 subgoal):\n 1. x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "using b_pos init"], ["proof (prove)\nusing this:\n  t = t0\n  0 \\<le> b\n  x t0 = x0\n\ngoal (1 subgoal):\n 1. x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "by simp"], ["proof (state)\nthis:\n  x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n\ngoal (1 subgoal):\n 1. \\<not> (b = 0 \\<or> B = 0) \\<Longrightarrow>\n    x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (b = 0 \\<or> B = 0) \\<Longrightarrow>\n    x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "assume \"\\<not>(b = 0 \\<or> B = 0)\""], ["proof (state)\nthis:\n  \\<not> (b = 0 \\<or> B = 0)\n\ngoal (1 subgoal):\n 1. \\<not> (b = 0 \\<or> B = 0) \\<Longrightarrow>\n    x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "hence \"b > 0\" \"B > 0\""], ["proof (prove)\nusing this:\n  \\<not> (b = 0 \\<or> B = 0)\n\ngoal (1 subgoal):\n 1. 0 < b &&& 0 < B", "using B_nonneg b_pos"], ["proof (prove)\nusing this:\n  \\<not> (b = 0 \\<or> B = 0)\n  0 \\<le> B\n  0 \\<le> b\n\ngoal (1 subgoal):\n 1. 0 < b &&& 0 < B", "by auto"], ["proof (state)\nthis:\n  0 < b\n  0 < B\n\ngoal (1 subgoal):\n 1. \\<not> (b = 0 \\<or> B = 0) \\<Longrightarrow>\n    x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n 2. \\<not> ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "assume \"t0 \\<noteq> t\""], ["proof (state)\nthis:\n  t0 \\<noteq> t\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n 2. \\<not> ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "then"], ["proof (chain)\npicking this:\n  t0 \\<noteq> t", "have b_less: \"B * abs (t - t0) \\<le> b\""], ["proof (prove)\nusing this:\n  t0 \\<noteq> t\n\ngoal (1 subgoal):\n 1. B * \\<bar>t - t0\\<bar> \\<le> b", "using b_pos e_bounded"], ["proof (prove)\nusing this:\n  t0 \\<noteq> t\n  0 \\<le> b\n  ?t \\<in> T \\<Longrightarrow> dist ?t t0 \\<le> b / B\n\ngoal (1 subgoal):\n 1. B * \\<bar>t - t0\\<bar> \\<le> b", "using \\<open>b > 0\\<close> \\<open>B > 0\\<close> \\<open>t \\<in> T\\<close>"], ["proof (prove)\nusing this:\n  t0 \\<noteq> t\n  0 \\<le> b\n  ?t \\<in> T \\<Longrightarrow> dist ?t t0 \\<le> b / B\n  0 < b\n  0 < B\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. B * \\<bar>t - t0\\<bar> \\<le> b", "by (auto simp: field_simps initial_time_in dist_real_def abs_real_def closed_segment_eq_real_ivl split: if_split_asm)"], ["proof (state)\nthis:\n  B * \\<bar>t - t0\\<bar> \\<le> b\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n 2. \\<not> ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "define b where  \"b \\<equiv> B * abs (t - t0)\""], ["proof (state)\nthis:\n  b \\<equiv> B * \\<bar>t - t0\\<bar>\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n 2. \\<not> ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "have \"b > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < b", "using \\<open>t0 \\<noteq> t\\<close>"], ["proof (prove)\nusing this:\n  t0 \\<noteq> t\n\ngoal (1 subgoal):\n 1. 0 < b", "by (auto intro!: mult_pos_pos simp: algebra_simps b_def \\<open>B > 0\\<close>)"], ["proof (state)\nthis:\n  0 < b\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n 2. \\<not> ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "from cont"], ["proof (chain)\npicking this:\n  continuous_on {t0--t} x", "have closed: \"closed (closed_segment t0 t \\<inter> ((\\<lambda>s. norm (x s - x t0)) -` {b..}))\""], ["proof (prove)\nusing this:\n  continuous_on {t0--t} x\n\ngoal (1 subgoal):\n 1. closed ({t0--t} \\<inter> (\\<lambda>s. norm (x s - x t0)) -` {b..})", "by (intro continuous_closed_preimage continuous_intros closed_segment)"], ["proof (state)\nthis:\n  closed ({t0--t} \\<inter> (\\<lambda>s. norm (x s - x t0)) -` {b..})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n 2. \\<not> ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "have exceeding: \"{s \\<in> closed_segment t0 t. norm (x s - x t0) \\<in> {b..}} \\<subseteq> {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}} \\<subseteq> {t}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "assume \"\\<not>{s \\<in> closed_segment t0 t. norm (x s - x t0) \\<in> {b..}} \\<subseteq> {t}\""], ["proof (state)\nthis:\n  \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}} \\<subseteq> {t}\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "hence notempty: \"(closed_segment t0 t \\<inter> ((\\<lambda>s. norm (x s - x t0)) -` {b..})) \\<noteq> {}\"\n        and not_max: \"{s \\<in> closed_segment t0 t. norm (x s - x t0) \\<in> {b..}} \\<noteq> {t}\""], ["proof (prove)\nusing this:\n  \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}} \\<subseteq> {t}\n\ngoal (1 subgoal):\n 1. {t0--t} \\<inter> (\\<lambda>s. norm (x s - x t0)) -` {b..} \\<noteq>\n    {} &&&\n    {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}} \\<noteq> {t}", "by auto"], ["proof (state)\nthis:\n  {t0--t} \\<inter> (\\<lambda>s. norm (x s - x t0)) -` {b..} \\<noteq> {}\n  {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}} \\<noteq> {t}\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "obtain s where s_bound: \"s \\<in> closed_segment t0 t\"\n        and exceeds: \"norm (x s - x t0) \\<in> {b..}\"\n        and min: \"\\<forall>t2\\<in>closed_segment t0 t.\n          norm (x t2 - x t0) \\<in> {b..} \\<longrightarrow> dist t0 s \\<le> dist t0 t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> {t0--t}; norm (x s - x t0) \\<in> {b..};\n         \\<forall>t2\\<in>{t0--t}.\n            norm (x t2 - x t0) \\<in> {b..} \\<longrightarrow>\n            dist t0 s \\<le> dist t0 t2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule distance_attains_inf[OF closed notempty, of t0]) blast"], ["proof (state)\nthis:\n  s \\<in> {t0--t}\n  norm (x s - x t0) \\<in> {b..}\n  \\<forall>t2\\<in>{t0--t}.\n     norm (x t2 - x t0) \\<in> {b..} \\<longrightarrow>\n     dist t0 s \\<le> dist t0 t2\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "have \"s \\<noteq> t0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<noteq> t0", "using exceeds \\<open>b > 0\\<close>"], ["proof (prove)\nusing this:\n  norm (x s - x t0) \\<in> {b..}\n  0 < b\n\ngoal (1 subgoal):\n 1. s \\<noteq> t0", "by auto"], ["proof (state)\nthis:\n  s \\<noteq> t0\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "have st: \"closed_segment t0 t \\<supseteq> open_segment t0 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0<--<s} \\<subseteq> {t0--t}", "using s_bound"], ["proof (prove)\nusing this:\n  s \\<in> {t0--t}\n\ngoal (1 subgoal):\n 1. {t0<--<s} \\<subseteq> {t0--t}", "by (auto simp: closed_segment_eq_real_ivl open_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  {t0<--<s} \\<subseteq> {t0--t}\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "from cont"], ["proof (chain)\npicking this:\n  continuous_on {t0--t} x", "have cont: \"continuous_on (closed_segment t0 s) x\""], ["proof (prove)\nusing this:\n  continuous_on {t0--t} x\n\ngoal (1 subgoal):\n 1. continuous_on {t0--s} x", "by (rule continuous_on_subset)\n          (insert b_pos closed_segment_subset_domain s_bound, auto simp: closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  continuous_on {t0--s} x\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "have bnd_cont: \"continuous_on (closed_segment t0 s) ((*) B)\"\n        and bnd_deriv: \"((*) B has_vderiv_on (\\<lambda>_. B)) (open_segment t0 s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {t0--s} ((*) B) &&&\n    ((*) B has_vderiv_on (\\<lambda>_. B)) {t0<--<s}", "by (auto intro!: continuous_intros derivative_eq_intros\n          simp: has_vector_derivative_def has_vderiv_on_def)"], ["proof (state)\nthis:\n  continuous_on {t0--s} ((*) B)\n  ((*) B has_vderiv_on (\\<lambda>_. B)) {t0<--<s}\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  continuous_on {t0--s} ((*) B)\n  ((*) B has_vderiv_on (\\<lambda>_. B)) {t0<--<s}\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "fix ss"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "assume ss: \"ss \\<in> open_segment t0 s\""], ["proof (state)\nthis:\n  ss \\<in> {t0<--<s}\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "with st"], ["proof (chain)\npicking this:\n  {t0<--<s} \\<subseteq> {t0--t}\n  ss \\<in> {t0<--<s}", "have \"ss \\<in> closed_segment t0 t\""], ["proof (prove)\nusing this:\n  {t0<--<s} \\<subseteq> {t0--t}\n  ss \\<in> {t0<--<s}\n\ngoal (1 subgoal):\n 1. ss \\<in> {t0--t}", "by auto"], ["proof (state)\nthis:\n  ss \\<in> {t0--t}\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "have less_b: \"norm (x ss - x t0) < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (x ss - x t0) < b", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> norm (x ss - x t0) < b \\<Longrightarrow> False", "assume \"\\<not> norm (x ss - x t0) < b\""], ["proof (state)\nthis:\n  \\<not> norm (x ss - x t0) < b\n\ngoal (1 subgoal):\n 1. \\<not> norm (x ss - x t0) < b \\<Longrightarrow> False", "hence \"norm (x ss - x t0) \\<in> {b..}\""], ["proof (prove)\nusing this:\n  \\<not> norm (x ss - x t0) < b\n\ngoal (1 subgoal):\n 1. norm (x ss - x t0) \\<in> {b..}", "by auto"], ["proof (state)\nthis:\n  norm (x ss - x t0) \\<in> {b..}\n\ngoal (1 subgoal):\n 1. \\<not> norm (x ss - x t0) < b \\<Longrightarrow> False", "from min[rule_format, OF \\<open>ss \\<in> closed_segment t0 t\\<close> this]"], ["proof (chain)\npicking this:\n  dist t0 s \\<le> dist t0 ss", "show False"], ["proof (prove)\nusing this:\n  dist t0 s \\<le> dist t0 ss\n\ngoal (1 subgoal):\n 1. False", "using ss \\<open>s \\<noteq> t0\\<close>"], ["proof (prove)\nusing this:\n  dist t0 s \\<le> dist t0 ss\n  ss \\<in> {t0<--<s}\n  s \\<noteq> t0\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: dist_real_def open_segment_eq_real_ivl split_ifs)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  norm (x ss - x t0) < b\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "have \"norm (f ss (y ss)) \\<le> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f ss (y ss)) \\<le> B", "apply (rule norm_f)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ss \\<in> T\n 2. y ss \\<in> X", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. ss \\<in> T", "using ss st closed_segment_subset_domain[OF initial_time_in \\<open>t \\<in> T\\<close>]"], ["proof (prove)\nusing this:\n  ss \\<in> {t0<--<s}\n  {t0<--<s} \\<subseteq> {t0--t}\n  {t0--t} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. ss \\<in> T", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. y ss \\<in> X", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. y ss \\<in> X", "using ss st b_less less_b"], ["proof (prove)\nusing this:\n  ss \\<in> {t0<--<s}\n  {t0<--<s} \\<subseteq> {t0--t}\n  B * \\<bar>t - t0\\<bar> \\<le> b\n  norm (x ss - x t0) < b\n\ngoal (1 subgoal):\n 1. y ss \\<in> X", "by (intro y_bounded)\n              (auto simp: X_def dist_norm b_def init norm_minus_commute mem_cball)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  norm (f ss (y ss)) \\<le> B\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  ?ss2 \\<in> {t0<--<s} \\<Longrightarrow> norm (f ?ss2 (y ?ss2)) \\<le> B\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "note bnd = this"], ["proof (state)\nthis:\n  ?ss2 \\<in> {t0<--<s} \\<Longrightarrow> norm (f ?ss2 (y ?ss2)) \\<le> B\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "have subs: \"open_segment t0 s \\<subseteq> open_segment t0 t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0<--<s} \\<subseteq> {t0<--<t}", "using s_bound \\<open>s \\<noteq> t0\\<close>"], ["proof (prove)\nusing this:\n  s \\<in> {t0--t}\n  s \\<noteq> t0\n\ngoal (1 subgoal):\n 1. {t0<--<s} \\<subseteq> {t0<--<t}", "by (auto simp: closed_segment_eq_real_ivl open_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  {t0<--<s} \\<subseteq> {t0<--<t}\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "with differentiable_bound_general_open_segment[OF cont bnd_cont has_vderiv_on_subset[OF solves subs]\n        bnd_deriv bnd]"], ["proof (chain)\npicking this:\n  (\\<And>x.\n      x \\<in> {t0<--<s} \\<Longrightarrow>\n      x \\<in> {t0<--<s}) \\<Longrightarrow>\n  norm (x s - x t0) \\<le> \\<bar>B * s - B * t0\\<bar>\n  {t0<--<s} \\<subseteq> {t0<--<t}", "have \"norm (x s - x t0) \\<le> B * \\<bar>s - t0\\<bar>\""], ["proof (prove)\nusing this:\n  (\\<And>x.\n      x \\<in> {t0<--<s} \\<Longrightarrow>\n      x \\<in> {t0<--<s}) \\<Longrightarrow>\n  norm (x s - x t0) \\<le> \\<bar>B * s - B * t0\\<bar>\n  {t0<--<s} \\<subseteq> {t0<--<t}\n\ngoal (1 subgoal):\n 1. norm (x s - x t0) \\<le> B * \\<bar>s - t0\\<bar>", "by (auto simp: algebra_simps[symmetric] abs_mult B_nonneg)"], ["proof (state)\nthis:\n  norm (x s - x t0) \\<le> B * \\<bar>s - t0\\<bar>\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  norm (x s - x t0) \\<le> B * \\<bar>s - t0\\<bar>\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "have \"s \\<noteq> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<noteq> t", "using s_bound exceeds min not_max"], ["proof (prove)\nusing this:\n  s \\<in> {t0--t}\n  norm (x s - x t0) \\<in> {b..}\n  \\<forall>t2\\<in>{t0--t}.\n     norm (x t2 - x t0) \\<in> {b..} \\<longrightarrow>\n     dist t0 s \\<le> dist t0 t2\n  {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}} \\<noteq> {t}\n\ngoal (1 subgoal):\n 1. s \\<noteq> t", "by (auto simp: dist_norm closed_segment_eq_real_ivl split_ifs)"], ["proof (state)\nthis:\n  s \\<noteq> t\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "hence \"B * \\<bar>s - t0\\<bar> < \\<bar>t - t0\\<bar> * B\""], ["proof (prove)\nusing this:\n  s \\<noteq> t\n\ngoal (1 subgoal):\n 1. B * \\<bar>s - t0\\<bar> < \\<bar>t - t0\\<bar> * B", "using s_bound \\<open>B > 0\\<close>"], ["proof (prove)\nusing this:\n  s \\<noteq> t\n  s \\<in> {t0--t}\n  0 < B\n\ngoal (1 subgoal):\n 1. B * \\<bar>s - t0\\<bar> < \\<bar>t - t0\\<bar> * B", "by (intro le_neq_trans)\n          (auto simp: algebra_simps closed_segment_eq_real_ivl split_ifs\n            intro!: mult_left_mono)"], ["proof (state)\nthis:\n  B * \\<bar>s - t0\\<bar> < \\<bar>t - t0\\<bar> * B\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  norm (x s - x t0) < \\<bar>t - t0\\<bar> * B", "have \"norm (x s - x t0) < \\<bar>t - t0\\<bar> * B\""], ["proof (prove)\nusing this:\n  norm (x s - x t0) < \\<bar>t - t0\\<bar> * B\n\ngoal (1 subgoal):\n 1. norm (x s - x t0) < \\<bar>t - t0\\<bar> * B", "."], ["proof (state)\nthis:\n  norm (x s - x t0) < \\<bar>t - t0\\<bar> * B\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  norm (x s - x t0) < \\<bar>t - t0\\<bar> * B\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  norm (x s - x t0) < \\<bar>t - t0\\<bar> * B\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "have \"b \\<ge> \\<bar>t - t0\\<bar> * B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>t - t0\\<bar> * B \\<le> b", "by (simp add: b_def algebra_simps)"], ["proof (state)\nthis:\n  \\<bar>t - t0\\<bar> * B \\<le> b\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  \\<bar>t - t0\\<bar> * B \\<le> b\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "from exceeds"], ["proof (chain)\npicking this:\n  norm (x s - x t0) \\<in> {b..}", "have \"norm (x s - x t0) \\<ge> b\""], ["proof (prove)\nusing this:\n  norm (x s - x t0) \\<in> {b..}\n\ngoal (1 subgoal):\n 1. b \\<le> norm (x s - x t0)", "by simp"], ["proof (state)\nthis:\n  b \\<le> norm (x s - x t0)\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  \\<bar>t - t0\\<bar> * B \\<le> norm (x s - x t0)", "have \"\\<bar>t - t0\\<bar> * B \\<le> norm (x s - x t0)\""], ["proof (prove)\nusing this:\n  \\<bar>t - t0\\<bar> * B \\<le> norm (x s - x t0)\n\ngoal (1 subgoal):\n 1. \\<bar>t - t0\\<bar> * B \\<le> norm (x s - x t0)", "."], ["proof (state)\nthis:\n  \\<bar>t - t0\\<bar> * B \\<le> norm (x s - x t0)\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  \\<bar>t - t0\\<bar> * B \\<le> norm (x s - x t0)\n\ngoal (1 subgoal):\n 1. \\<not> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n           \\<subseteq> {t} \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  norm (x s - x t0) < \\<bar>t - t0\\<bar> * B\n  \\<bar>t - t0\\<bar> * B \\<le> norm (x s - x t0)", "show False"], ["proof (prove)\nusing this:\n  norm (x s - x t0) < \\<bar>t - t0\\<bar> * B\n  \\<bar>t - t0\\<bar> * B \\<le> norm (x s - x t0)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}} \\<subseteq> {t}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n 2. \\<not> ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "note mvt_result = this"], ["proof (state)\nthis:\n  {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}} \\<subseteq> {t}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n 2. \\<not> ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "from cont assms"], ["proof (chain)\npicking this:\n  continuous_on {t0--t} x\n  t \\<in> T\n  x t0 = x0\n  continuous_on {t0--t} x\n  (x has_vderiv_on (\\<lambda>s. f s (y s))) {t0<--<t}\n  \\<lbrakk>?\\<xi> \\<in> {t0--t}; x ?\\<xi> \\<in> X\\<rbrakk>\n  \\<Longrightarrow> y ?\\<xi> \\<in> X", "have cont_diff: \"continuous_on (closed_segment t0 t) (\\<lambda>xa. x xa - x t0)\""], ["proof (prove)\nusing this:\n  continuous_on {t0--t} x\n  t \\<in> T\n  x t0 = x0\n  continuous_on {t0--t} x\n  (x has_vderiv_on (\\<lambda>s. f s (y s))) {t0<--<t}\n  \\<lbrakk>?\\<xi> \\<in> {t0--t}; x ?\\<xi> \\<in> X\\<rbrakk>\n  \\<Longrightarrow> y ?\\<xi> \\<in> X\n\ngoal (1 subgoal):\n 1. continuous_on {t0--t} (\\<lambda>xa. x xa - x t0)", "by (auto intro!: continuous_intros)"], ["proof (state)\nthis:\n  continuous_on {t0--t} (\\<lambda>xa. x xa - x t0)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n 2. \\<not> ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "have \"norm (x t - x t0) \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (x t - x t0) \\<le> b", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> norm (x t - x t0) \\<le> b \\<Longrightarrow> False", "assume H: \"\\<not> norm (x t - x t0) \\<le> b\""], ["proof (state)\nthis:\n  \\<not> norm (x t - x t0) \\<le> b\n\ngoal (1 subgoal):\n 1. \\<not> norm (x t - x t0) \\<le> b \\<Longrightarrow> False", "hence \"b \\<in> closed_segment (norm (x t0 - x t0)) (norm (x t - x t0))\""], ["proof (prove)\nusing this:\n  \\<not> norm (x t - x t0) \\<le> b\n\ngoal (1 subgoal):\n 1. b \\<in> {norm (x t0 - x t0)--norm (x t - x t0)}", "using assms T_def \\<open>0 < b\\<close>"], ["proof (prove)\nusing this:\n  \\<not> norm (x t - x t0) \\<le> b\n  t \\<in> T\n  x t0 = x0\n  continuous_on {t0--t} x\n  (x has_vderiv_on (\\<lambda>s. f s (y s))) {t0<--<t}\n  \\<lbrakk>?\\<xi> \\<in> {t0--t}; x ?\\<xi> \\<in> X\\<rbrakk>\n  \\<Longrightarrow> y ?\\<xi> \\<in> X\n  T = {tmin..tmax}\n  0 < b\n\ngoal (1 subgoal):\n 1. b \\<in> {norm (x t0 - x t0)--norm (x t - x t0)}", "by (auto simp: closed_segment_eq_real_ivl )"], ["proof (state)\nthis:\n  b \\<in> {norm (x t0 - x t0)--norm (x t - x t0)}\n\ngoal (1 subgoal):\n 1. \\<not> norm (x t - x t0) \\<le> b \\<Longrightarrow> False", "from IVT'_closed_segment_real[OF this continuous_on_norm[OF cont_diff]]"], ["proof (chain)\npicking this:\n  \\<exists>xa\\<in>{t0--t}. norm (x xa - x t0) = b", "obtain s where s: \"s \\<in> closed_segment t0 t\" \"norm (x s - x t0) = b\""], ["proof (prove)\nusing this:\n  \\<exists>xa\\<in>{t0--t}. norm (x xa - x t0) = b\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> {t0--t}; norm (x s - x t0) = b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>b > 0\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>xa\\<in>{t0--t}. norm (x xa - x t0) = b\n  0 < b\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> {t0--t}; norm (x s - x t0) = b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<in> {t0--t}\n  norm (x s - x t0) = b\n\ngoal (1 subgoal):\n 1. \\<not> norm (x t - x t0) \\<le> b \\<Longrightarrow> False", "have \"s \\<in> {s \\<in> closed_segment t0 t. norm (x s - x t0) \\<in> {b..}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}", "using s \\<open>t \\<in> T\\<close>"], ["proof (prove)\nusing this:\n  s \\<in> {t0--t}\n  norm (x s - x t0) = b\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. s \\<in> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}", "by (auto simp: initial_time_in)"], ["proof (state)\nthis:\n  s \\<in> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n\ngoal (1 subgoal):\n 1. \\<not> norm (x t - x t0) \\<le> b \\<Longrightarrow> False", "with mvt_result"], ["proof (chain)\npicking this:\n  {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}} \\<subseteq> {t}\n  s \\<in> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}", "have \"s = t\""], ["proof (prove)\nusing this:\n  {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}} \\<subseteq> {t}\n  s \\<in> {s \\<in> {t0--t}. norm (x s - x t0) \\<in> {b..}}\n\ngoal (1 subgoal):\n 1. s = t", "by blast"], ["proof (state)\nthis:\n  s = t\n\ngoal (1 subgoal):\n 1. \\<not> norm (x t - x t0) \\<le> b \\<Longrightarrow> False", "hence \"s = t\""], ["proof (prove)\nusing this:\n  s = t\n\ngoal (1 subgoal):\n 1. s = t", "using s \\<open>t \\<in> T\\<close>"], ["proof (prove)\nusing this:\n  s = t\n  s \\<in> {t0--t}\n  norm (x s - x t0) = b\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. s = t", "by (auto simp: initial_time_in)"], ["proof (state)\nthis:\n  s = t\n\ngoal (1 subgoal):\n 1. \\<not> norm (x t - x t0) \\<le> b \\<Longrightarrow> False", "with s H"], ["proof (chain)\npicking this:\n  s \\<in> {t0--t}\n  norm (x s - x t0) = b\n  \\<not> norm (x t - x t0) \\<le> b\n  s = t", "show False"], ["proof (prove)\nusing this:\n  s \\<in> {t0--t}\n  norm (x s - x t0) = b\n  \\<not> norm (x t - x t0) \\<le> b\n  s = t\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  norm (x t - x t0) \\<le> b\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n 2. \\<not> ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "hence \"x t \\<in> cball x0 b\""], ["proof (prove)\nusing this:\n  norm (x t - x t0) \\<le> b\n\ngoal (1 subgoal):\n 1. x t \\<in> cball x0 b", "using init"], ["proof (prove)\nusing this:\n  norm (x t - x t0) \\<le> b\n  x t0 = x0\n\ngoal (1 subgoal):\n 1. x t \\<in> cball x0 b", "by (auto simp: dist_commute dist_norm[symmetric] mem_cball)"], ["proof (state)\nthis:\n  x t \\<in> cball x0 b\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n 2. \\<not> ?P \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "thus \"x t \\<in> cball x0 (B * abs (t - t0))\""], ["proof (prove)\nusing this:\n  x t \\<in> cball x0 b\n\ngoal (1 subgoal):\n 1. x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "unfolding cylinder b_def"], ["proof (prove)\nusing this:\n  x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n\ngoal (1 subgoal):\n 1. x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "."], ["proof (state)\nthis:\n  x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n\ngoal (1 subgoal):\n 1. \\<not> t0 \\<noteq> t \\<Longrightarrow>\n    x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "qed (simp add: init[symmetric])"], ["proof (state)\nthis:\n  x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma in_bounds_derivative_globalI:\n  assumes \"t \\<in> T\"\n  assumes init: \"x t0 = x0\"\n  assumes cont: \"continuous_on (closed_segment t0 t) x\"\n  assumes solves: \"(x has_vderiv_on (\\<lambda>s. f s (y s))) (open_segment t0 t)\"\n  assumes y_bounded: \"\\<And>\\<xi>. \\<xi> \\<in> closed_segment t0 t \\<Longrightarrow> x \\<xi> \\<in> X \\<Longrightarrow> y \\<xi> \\<in> X\"\n  shows \"x t \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x t \\<in> X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x t \\<in> X", "from in_bounds_derivativeI[OF assms]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>\\<xi>.\n              \\<lbrakk>\\<xi> \\<in> {t0--t}; x \\<xi> \\<in> X\\<rbrakk>\n              \\<Longrightarrow> \\<xi> \\<in> {t0--t};\n   \\<And>\\<xi>.\n      \\<lbrakk>\\<xi> \\<in> {t0--t}; x \\<xi> \\<in> X\\<rbrakk>\n      \\<Longrightarrow> x \\<xi> \\<in> X\\<rbrakk>\n  \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "have \"x t \\<in> cball x0 (B * abs (t - t0))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>\\<xi>.\n              \\<lbrakk>\\<xi> \\<in> {t0--t}; x \\<xi> \\<in> X\\<rbrakk>\n              \\<Longrightarrow> \\<xi> \\<in> {t0--t};\n   \\<And>\\<xi>.\n      \\<lbrakk>\\<xi> \\<in> {t0--t}; x \\<xi> \\<in> X\\<rbrakk>\n      \\<Longrightarrow> x \\<xi> \\<in> X\\<rbrakk>\n  \\<Longrightarrow> x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n\ngoal (1 subgoal):\n 1. x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "."], ["proof (state)\nthis:\n  x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n\ngoal (1 subgoal):\n 1. x t \\<in> X", "moreover"], ["proof (state)\nthis:\n  x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n\ngoal (1 subgoal):\n 1. x t \\<in> X", "have \"B * abs (t - t0) \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B * \\<bar>t - t0\\<bar> \\<le> b", "using e_bounded b_pos B_nonneg \\<open>t \\<in> T\\<close>"], ["proof (prove)\nusing this:\n  ?t \\<in> T \\<Longrightarrow> dist ?t t0 \\<le> b / B\n  0 \\<le> b\n  0 \\<le> B\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. B * \\<bar>t - t0\\<bar> \\<le> b", "by (cases \"B = 0\")\n      (auto simp: field_simps initial_time_in dist_real_def abs_real_def closed_segment_eq_real_ivl split: if_splits)"], ["proof (state)\nthis:\n  B * \\<bar>t - t0\\<bar> \\<le> b\n\ngoal (1 subgoal):\n 1. x t \\<in> X", "ultimately"], ["proof (chain)\npicking this:\n  x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n  B * \\<bar>t - t0\\<bar> \\<le> b", "show ?thesis"], ["proof (prove)\nusing this:\n  x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n  B * \\<bar>t - t0\\<bar> \\<le> b\n\ngoal (1 subgoal):\n 1. x t \\<in> X", "by (auto simp: cylinder mem_cball)"], ["proof (state)\nthis:\n  x t \\<in> X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma integral_in_bounds:\n  assumes \"t \\<in> T\" \"x t0 = x0\" \"x \\<in> {t0 -- t} \\<rightarrow> X\"\n  assumes cont[continuous_intros]: \"continuous_on ({t0 -- t}) x\"\n  shows \"x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X\" (is \"_ + ?ix t \\<in> X\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X\n 2. \\<not> ?P \\<Longrightarrow>\n    x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X", "assume \"t = t0\""], ["proof (state)\nthis:\n  t = t0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X\n 2. \\<not> ?P \\<Longrightarrow>\n    x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = t0\n\ngoal (1 subgoal):\n 1. x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X", "by (auto simp: cylinder b_pos assms)"], ["proof (state)\nthis:\n  x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X\n\ngoal (1 subgoal):\n 1. t \\<noteq> t0 \\<Longrightarrow>\n    x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<noteq> t0 \\<Longrightarrow>\n    x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X", "assume \"t \\<noteq> t0\""], ["proof (state)\nthis:\n  t \\<noteq> t0\n\ngoal (1 subgoal):\n 1. t \\<noteq> t0 \\<Longrightarrow>\n    x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X", "from closed_segment_subset_domain[OF initial_time_in]"], ["proof (chain)\npicking this:\n  ?t \\<in> T \\<Longrightarrow> {t0--?t} \\<subseteq> T", "have cont_f:\"continuous_on {t0 -- t} (\\<lambda>t. f t (x t))\""], ["proof (prove)\nusing this:\n  ?t \\<in> T \\<Longrightarrow> {t0--?t} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. continuous_on {t0--t} (\\<lambda>t. f t (x t))", "using assms"], ["proof (prove)\nusing this:\n  ?t \\<in> T \\<Longrightarrow> {t0--?t} \\<subseteq> T\n  t \\<in> T\n  x t0 = x0\n  x \\<in> {t0--t} \\<rightarrow> X\n  continuous_on {t0--t} x\n\ngoal (1 subgoal):\n 1. continuous_on {t0--t} (\\<lambda>t. f t (x t))", "by (intro continuous_intros)\n      (auto intro: cont continuous_on_subset[OF continuous] simp: cylinder split: if_splits)"], ["proof (state)\nthis:\n  continuous_on {t0--t} (\\<lambda>t. f t (x t))\n\ngoal (1 subgoal):\n 1. t \\<noteq> t0 \\<Longrightarrow>\n    x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X", "from closed_segment_subset_domain[OF initial_time_in \\<open>t \\<in> T\\<close>]"], ["proof (chain)\npicking this:\n  {t0--t} \\<subseteq> T", "have subsets: \"s \\<in> {t0--t} \\<Longrightarrow> s \\<in> T\" \"s \\<in> open_segment t0 t \\<Longrightarrow> s \\<in> {t0--t}\" for s"], ["proof (prove)\nusing this:\n  {t0--t} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. (s \\<in> {t0--t} \\<Longrightarrow> s \\<in> T) &&&\n    (s \\<in> {t0<--<t} \\<Longrightarrow> s \\<in> {t0--t})", "by (auto simp: closed_segment_eq_real_ivl open_segment_eq_real_ivl initial_time_in split: if_split_asm)"], ["proof (state)\nthis:\n  ?s \\<in> {t0--t} \\<Longrightarrow> ?s \\<in> T\n  ?s \\<in> {t0<--<t} \\<Longrightarrow> ?s \\<in> {t0--t}\n\ngoal (1 subgoal):\n 1. t \\<noteq> t0 \\<Longrightarrow>\n    x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X", "unfolding \\<open>x t0 = _\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. x0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X", "using assms \\<open>t \\<noteq> t0\\<close>"], ["proof (prove)\nusing this:\n  t \\<in> T\n  x t0 = x0\n  x \\<in> {t0--t} \\<rightarrow> X\n  continuous_on {t0--t} x\n  t \\<noteq> t0\n\ngoal (1 subgoal):\n 1. x0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X", "by (intro in_bounds_derivative_globalI[where y=x and x=\"\\<lambda>t. x0 + ?ix t\"])\n      (auto simp: initial_time_in subsets cylinder has_vderiv_on_def\n        split: if_split_asm\n        intro!: cont_f has_vector_derivative_const integrable_continuous_closed_segment\n          has_vector_derivative_within_subset[OF ivl_integral_has_vector_derivative]\n          has_vector_derivative_add[THEN has_vector_derivative_eq_rhs]\n          continuous_intros indefinite_ivl_integral_continuous)"], ["proof (state)\nthis:\n  x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t)) \\<in> X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma solves_in_cone:\n  assumes \"t \\<in> T\"\n  assumes init: \"x t0 = x0\"\n  assumes cont: \"continuous_on (closed_segment t0 t) x\"\n  assumes solves: \"(x has_vderiv_on (\\<lambda>s. f s (x s))) (open_segment t0 t)\"\n  shows \"x t \\<in> cball x0 (B * abs (t - t0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "using assms"], ["proof (prove)\nusing this:\n  t \\<in> T\n  x t0 = x0\n  continuous_on {t0--t} x\n  (x has_vderiv_on (\\<lambda>s. f s (x s))) {t0<--<t}\n\ngoal (1 subgoal):\n 1. x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "by (rule in_bounds_derivativeI)"], ["", "lemma is_solution_in_cone:\n  assumes \"t \\<in> T\"\n  assumes sol: \"(x solves_ode f) (closed_segment t0 t) Y\" and iv: \"x t0 = x0\"\n  shows \"x t \\<in> cball x0 (B * abs (t - t0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "using solves_odeD[OF sol] \\<open>t \\<in> T\\<close>"], ["proof (prove)\nusing this:\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) {t0--t}\n  ?t \\<in> {t0--t} \\<Longrightarrow> x ?t \\<in> Y\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)", "by (intro solves_in_cone)\n    (auto intro!: assms vderiv_on_continuous_on segment_open_subset_closed\n      intro: has_vderiv_on_subset simp: initial_time_in)"], ["", "lemma cone_subset_domain:\n  assumes \"t \\<in> T\"\n  shows \"cball x0 (B * \\<bar>t - t0\\<bar>) \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cball x0 (B * \\<bar>t - t0\\<bar>) \\<subseteq> X", "using e_bounded[OF assms] B_nonneg b_pos"], ["proof (prove)\nusing this:\n  dist t t0 \\<le> b / B\n  0 \\<le> B\n  0 \\<le> b\n\ngoal (1 subgoal):\n 1. cball x0 (B * \\<bar>t - t0\\<bar>) \\<subseteq> X", "unfolding cylinder"], ["proof (prove)\nusing this:\n  dist t t0 \\<le> b / B\n  0 \\<le> B\n  0 \\<le> b\n\ngoal (1 subgoal):\n 1. cball x0 (B * \\<bar>t - t0\\<bar>) \\<subseteq> cball x0 b", "by (intro subset_cball) (auto simp: dist_real_def divide_simps algebra_simps split: if_splits)"], ["", "lemma is_solution_in_domain:\n  assumes \"t \\<in> T\"\n  assumes sol: \"(x solves_ode f) (closed_segment t0 t) Y\" and iv: \"x t0 = x0\"\n  shows \"x t \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x t \\<in> X", "using is_solution_in_cone[OF assms] cone_subset_domain[OF \\<open>t \\<in> T\\<close>]"], ["proof (prove)\nusing this:\n  x t \\<in> cball x0 (B * \\<bar>t - t0\\<bar>)\n  cball x0 (B * \\<bar>t - t0\\<bar>) \\<subseteq> X\n\ngoal (1 subgoal):\n 1. x t \\<in> X", "by (rule rev_subsetD)"], ["", "lemma solves_ode_on_subset_domain:\n  assumes sol: \"(x solves_ode f) S Y\" and iv: \"x t0 = x0\"\n    and ivl: \"t0 \\<in> S\" \"is_interval S\" \"S \\<subseteq> T\"\n  shows \"(x solves_ode f) S X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x solves_ode f) S X", "proof (rule solves_odeI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (x has_vderiv_on (\\<lambda>t. f t (x t))) S\n 2. \\<And>t. t \\<in> S \\<Longrightarrow> x t \\<in> X", "show \"(x has_vderiv_on (\\<lambda>t. f t (x t))) S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x has_vderiv_on (\\<lambda>t. f t (x t))) S", "using solves_odeD(1)[OF sol]"], ["proof (prove)\nusing this:\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) S\n\ngoal (1 subgoal):\n 1. (x has_vderiv_on (\\<lambda>t. f t (x t))) S", "."], ["proof (state)\nthis:\n  (x has_vderiv_on (\\<lambda>t. f t (x t))) S\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> S \\<Longrightarrow> x t \\<in> X", "show \"x s \\<in> X\" if s: \"s \\<in> S\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. x s \\<in> X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x s \\<in> X", "from s assms"], ["proof (chain)\npicking this:\n  s \\<in> S\n  (x solves_ode f) S Y\n  x t0 = x0\n  t0 \\<in> S\n  is_interval S\n  S \\<subseteq> T", "have \"s \\<in> T\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  (x solves_ode f) S Y\n  x t0 = x0\n  t0 \\<in> S\n  is_interval S\n  S \\<subseteq> T\n\ngoal (1 subgoal):\n 1. s \\<in> T", "by auto"], ["proof (state)\nthis:\n  s \\<in> T\n\ngoal (1 subgoal):\n 1. x s \\<in> X", "moreover"], ["proof (state)\nthis:\n  s \\<in> T\n\ngoal (1 subgoal):\n 1. x s \\<in> X", "have \"{t0--s} \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t0--s} \\<subseteq> S", "by (rule closed_segment_subset) (auto simp: s assms is_interval_convex)"], ["proof (state)\nthis:\n  {t0--s} \\<subseteq> S\n\ngoal (1 subgoal):\n 1. x s \\<in> X", "with sol"], ["proof (chain)\npicking this:\n  (x solves_ode f) S Y\n  {t0--s} \\<subseteq> S", "have \"(x solves_ode f) {t0--s} Y\""], ["proof (prove)\nusing this:\n  (x solves_ode f) S Y\n  {t0--s} \\<subseteq> S\n\ngoal (1 subgoal):\n 1. (x solves_ode f) {t0--s} Y", "using order_refl"], ["proof (prove)\nusing this:\n  (x solves_ode f) S Y\n  {t0--s} \\<subseteq> S\n  ?x \\<le> ?x\n\ngoal (1 subgoal):\n 1. (x solves_ode f) {t0--s} Y", "by (rule solves_ode_on_subset)"], ["proof (state)\nthis:\n  (x solves_ode f) {t0--s} Y\n\ngoal (1 subgoal):\n 1. x s \\<in> X", "ultimately"], ["proof (chain)\npicking this:\n  s \\<in> T\n  (x solves_ode f) {t0--s} Y", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> T\n  (x solves_ode f) {t0--s} Y\n\ngoal (1 subgoal):\n 1. x s \\<in> X", "using iv"], ["proof (prove)\nusing this:\n  s \\<in> T\n  (x solves_ode f) {t0--s} Y\n  x t0 = x0\n\ngoal (1 subgoal):\n 1. x s \\<in> X", "by (rule is_solution_in_domain)"], ["proof (state)\nthis:\n  x s \\<in> X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?s \\<in> S \\<Longrightarrow> x ?s \\<in> X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma usolves_ode_on_subset:\n  assumes x: \"(x usolves_ode f from t0) T X\" and iv: \"x t0 = x0\"\n  assumes \"t0 \\<in> S\" \"is_interval S\" \"S \\<subseteq> T\" \"X \\<subseteq> Y\"\n  shows \"(x usolves_ode f from t0) S Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x usolves_ode f from t0) S Y", "proof (rule usolves_odeI)"], ["proof (state)\ngoal (4 subgoals):\n 1. (x solves_ode f) S Y\n 2. t0 \\<in> S\n 3. is_interval S\n 4. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> S; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "show \"(x solves_ode f) S Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x solves_ode f) S Y", "by (rule solves_ode_on_subset[OF usolves_odeD(1)[OF x]]; fact)"], ["proof (state)\nthis:\n  (x solves_ode f) S Y\n\ngoal (3 subgoals):\n 1. t0 \\<in> S\n 2. is_interval S\n 3. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> S; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "show \"t0 \\<in> S\" \"is_interval S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> S &&& is_interval S", "by fact+"], ["proof (state)\nthis:\n  t0 \\<in> S\n  is_interval S\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> S; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "fix z t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> S; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "assume \"{t0 -- t} \\<subseteq> S\" and z: \"(z solves_ode f) {t0--t} Y\" \"z t0 = x t0\""], ["proof (state)\nthis:\n  {t0--t} \\<subseteq> S\n  (z solves_ode f) {t0--t} Y\n  z t0 = x t0\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> S; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "then"], ["proof (chain)\npicking this:\n  {t0--t} \\<subseteq> S\n  (z solves_ode f) {t0--t} Y\n  z t0 = x t0", "have \"z t0 = x0\" \"t0 \\<in> {t0--t}\" \"is_interval {t0--t}\" \"{t0--t} \\<subseteq> T\""], ["proof (prove)\nusing this:\n  {t0--t} \\<subseteq> S\n  (z solves_ode f) {t0--t} Y\n  z t0 = x t0\n\ngoal (1 subgoal):\n 1. (z t0 = x0 &&& t0 \\<in> {t0--t}) &&&\n    is_interval {t0--t} &&& {t0--t} \\<subseteq> T", "using iv \\<open>S \\<subseteq> T\\<close>"], ["proof (prove)\nusing this:\n  {t0--t} \\<subseteq> S\n  (z solves_ode f) {t0--t} Y\n  z t0 = x t0\n  x t0 = x0\n  S \\<subseteq> T\n\ngoal (1 subgoal):\n 1. (z t0 = x0 &&& t0 \\<in> {t0--t}) &&&\n    is_interval {t0--t} &&& {t0--t} \\<subseteq> T", "by (auto simp: is_interval_convex_1)"], ["proof (state)\nthis:\n  z t0 = x0\n  t0 \\<in> {t0--t}\n  is_interval {t0--t}\n  {t0--t} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> S; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "with z(1)"], ["proof (chain)\npicking this:\n  (z solves_ode f) {t0--t} Y\n  z t0 = x0\n  t0 \\<in> {t0--t}\n  is_interval {t0--t}\n  {t0--t} \\<subseteq> T", "have zX: \"(z solves_ode f) {t0 -- t} X\""], ["proof (prove)\nusing this:\n  (z solves_ode f) {t0--t} Y\n  z t0 = x0\n  t0 \\<in> {t0--t}\n  is_interval {t0--t}\n  {t0--t} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. (z solves_ode f) {t0--t} X", "by (rule solves_ode_on_subset_domain)"], ["proof (state)\nthis:\n  (z solves_ode f) {t0--t} X\n\ngoal (1 subgoal):\n 1. \\<And>z t.\n       \\<lbrakk>{t0--t} \\<subseteq> S; (z solves_ode f) {t0--t} Y;\n        z t0 = x t0\\<rbrakk>\n       \\<Longrightarrow> z t = x t", "show \"z t = x t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z t = x t", "apply (rule usolves_odeD(4)[OF x _ _ _ zX])"], ["proof (prove)\ngoal (5 subgoals):\n 1. t0 \\<in> {t0--t}\n 2. is_interval {t0--t}\n 3. {t0--t} \\<subseteq> T\n 4. z t0 = x t0\n 5. t \\<in> {t0--t}", "using \\<open>{t0 -- t} \\<subseteq> S\\<close> \\<open>S \\<subseteq> T\\<close>"], ["proof (prove)\nusing this:\n  {t0--t} \\<subseteq> S\n  S \\<subseteq> T\n\ngoal (5 subgoals):\n 1. t0 \\<in> {t0--t}\n 2. is_interval {t0--t}\n 3. {t0--t} \\<subseteq> T\n 4. z t0 = x t0\n 5. t \\<in> {t0--t}", "by (auto simp: is_interval_convex_1 \\<open>z t0 = x t0\\<close>)"], ["proof (state)\nthis:\n  z t = x t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma usolves_ode_on_superset_domain:\n  assumes \"(x usolves_ode f from t0) T X\" and iv: \"x t0 = x0\"\n  assumes \"X \\<subseteq> Y\"\n  shows \"(x usolves_ode f from t0) T Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x usolves_ode f from t0) T Y", "using assms(1,2) usolves_odeD(2,3)[OF assms(1)] order_refl assms(3)"], ["proof (prove)\nusing this:\n  (x usolves_ode f from t0) T X\n  x t0 = x0\n  t0 \\<in> T\n  is_interval T\n  ?x \\<le> ?x\n  X \\<subseteq> Y\n\ngoal (1 subgoal):\n 1. (x usolves_ode f from t0) T Y", "by (rule usolves_ode_on_subset)"], ["", "end"], ["", "locale unique_on_cylinder =\n  solution_in_cylinder t0 T x0 b f X B +\n  global_lipschitz T X f L\n  for t0 T x0 b X f B L\nbegin"], ["", "sublocale unique_on_closed t0 T x0 f X L"], ["proof (prove)\ngoal (1 subgoal):\n 1. unique_on_closed t0 T x0 f X L", "apply unfold_locales"], ["proof (prove)\ngoal (5 subgoals):\n 1. t0 \\<in> T\n 2. x0 \\<in> X\n 3. \\<And>x t.\n       \\<lbrakk>t \\<in> T; x t0 = x0; x \\<in> {t0--t} \\<rightarrow> X;\n        continuous_on {t0--t} x\\<rbrakk>\n       \\<Longrightarrow> x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t))\n                         \\<in> X\n 4. continuous_on (T \\<times> X) (\\<lambda>(t, x). f t x)\n 5. closed X", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> T", "by (simp add: initial_time_in)"], ["proof (prove)\ngoal (4 subgoals):\n 1. x0 \\<in> X\n 2. \\<And>x t.\n       \\<lbrakk>t \\<in> T; x t0 = x0; x \\<in> {t0--t} \\<rightarrow> X;\n        continuous_on {t0--t} x\\<rbrakk>\n       \\<Longrightarrow> x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t))\n                         \\<in> X\n 3. continuous_on (T \\<times> X) (\\<lambda>(t, x). f t x)\n 4. closed X", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x0 \\<in> X", "by (simp add: X_def b_pos)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>t \\<in> T; x t0 = x0; x \\<in> {t0--t} \\<rightarrow> X;\n        continuous_on {t0--t} x\\<rbrakk>\n       \\<Longrightarrow> x t0 + ivl_integral t0 t (\\<lambda>t. f t (x t))\n                         \\<in> X\n 2. continuous_on (T \\<times> X) (\\<lambda>(t, x). f t x)\n 3. closed X", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t_ \\<in> T; x_ t0 = x0; x_ \\<in> {t0--t_} \\<rightarrow> X;\n     continuous_on {t0--t_} x_\\<rbrakk>\n    \\<Longrightarrow> x_ t0 + ivl_integral t0 t_ (\\<lambda>t. f t (x_ t))\n                      \\<in> X", "by (auto intro!: integral_in_bounds simp: initial_time_in)"], ["proof (prove)\ngoal (2 subgoals):\n 1. continuous_on (T \\<times> X) (\\<lambda>(t, x). f t x)\n 2. closed X", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on (T \\<times> X) (\\<lambda>(t, x). f t x)", "by (auto intro!: continuous_intros simp: split_beta' X_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. closed X", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. closed X", "by (simp add: X_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "locale derivative_on_prod =\n  fixes T X and f::\"real \\<Rightarrow> 'a::banach \\<Rightarrow> 'a\" and f':: \"real \\<times> 'a \\<Rightarrow> (real \\<times> 'a) \\<Rightarrow> 'a\"\n  assumes f': \"\\<And>tx. tx \\<in> T \\<times> X \\<Longrightarrow> ((\\<lambda>(t, x). f t x) has_derivative (f' tx)) (at tx within (T \\<times> X))\"\nbegin"], ["", "lemma f'_comp[derivative_intros]:\n  \"(g has_derivative g') (at s within S) \\<Longrightarrow> (h has_derivative h') (at s within S) \\<Longrightarrow>\n  s \\<in> S \\<Longrightarrow> (\\<And>x. x \\<in> S \\<Longrightarrow> g x \\<in> T) \\<Longrightarrow> (\\<And>x. x \\<in> S \\<Longrightarrow> h x \\<in> X) \\<Longrightarrow>\n  ((\\<lambda>x. f (g x) (h x)) has_derivative (\\<lambda>y. f' (g s, h s) (g' y, h' y))) (at s within S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(g has_derivative g') (at s within S);\n     (h has_derivative h') (at s within S); s \\<in> S;\n     \\<And>x. x \\<in> S \\<Longrightarrow> g x \\<in> T;\n     \\<And>x. x \\<in> S \\<Longrightarrow> h x \\<in> X\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>x. f (g x) (h x)) has_derivative\n                       (\\<lambda>y. f' (g s, h s) (g' y, h' y)))\n                       (at s within S)", "apply (rule has_derivative_in_compose2[OF f' _ _ has_derivative_Pair, unfolded split_beta' fst_conv snd_conv, of g h S s g' h'])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>(g has_derivative g') (at s within S);\n        (h has_derivative h') (at s within S); s \\<in> S;\n        \\<And>x. x \\<in> S \\<Longrightarrow> g x \\<in> T;\n        \\<And>x. x \\<in> S \\<Longrightarrow> h x \\<in> X;\n        x \\<in> T \\<times> X\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T \\<times> X\n 2. \\<lbrakk>(g has_derivative g') (at s within S);\n     (h has_derivative h') (at s within S); s \\<in> S;\n     \\<And>x. x \\<in> S \\<Longrightarrow> g x \\<in> T;\n     \\<And>x. x \\<in> S \\<Longrightarrow> h x \\<in> X\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. (g x, h x)) ` S \\<subseteq> T \\<times> X\n 3. \\<lbrakk>(g has_derivative g') (at s within S);\n     (h has_derivative h') (at s within S); s \\<in> S;\n     \\<And>x. x \\<in> S \\<Longrightarrow> g x \\<in> T;\n     \\<And>x. x \\<in> S \\<Longrightarrow> h x \\<in> X\\<rbrakk>\n    \\<Longrightarrow> s \\<in> S\n 4. \\<lbrakk>(g has_derivative g') (at s within S);\n     (h has_derivative h') (at s within S); s \\<in> S;\n     \\<And>x. x \\<in> S \\<Longrightarrow> g x \\<in> T;\n     \\<And>x. x \\<in> S \\<Longrightarrow> h x \\<in> X\\<rbrakk>\n    \\<Longrightarrow> (g has_derivative g') (at s within S)\n 5. \\<lbrakk>(g has_derivative g') (at s within S);\n     (h has_derivative h') (at s within S); s \\<in> S;\n     \\<And>x. x \\<in> S \\<Longrightarrow> g x \\<in> T;\n     \\<And>x. x \\<in> S \\<Longrightarrow> h x \\<in> X\\<rbrakk>\n    \\<Longrightarrow> (h has_derivative h') (at s within S)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma derivative_on_prod_subset:\n  assumes \"X' \\<subseteq> X\"\n  shows \"derivative_on_prod T X' f f'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. derivative_on_prod T X' f f'", "using assms"], ["proof (prove)\nusing this:\n  X' \\<subseteq> X\n\ngoal (1 subgoal):\n 1. derivative_on_prod T X' f f'", "by (unfold_locales) (auto intro!: derivative_eq_intros)"], ["", "end"], ["", "end"]]}