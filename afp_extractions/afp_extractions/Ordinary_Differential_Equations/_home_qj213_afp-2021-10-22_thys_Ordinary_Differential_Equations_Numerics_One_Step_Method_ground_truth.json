{"file_name": "/home/qj213/afp-2021-10-22/thys/Ordinary_Differential_Equations/Numerics/One_Step_Method.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Ordinary_Differential_Equations", "problem_names": ["lemmas grid = steps", "lemma grid_ge_min:\n  shows \"t 0 \\<le> t j\"", "lemma grid_mono:\n  assumes \"j \\<le> n\"\n  shows \"t j \\<le> t n\"", "lemma grid_stepsize_nonneg:\n  shows \"stepsize j \\<ge> 0\"", "lemma grid_stepsize_sum:\n  shows \"(\\<Sum>i\\<in>{0..<n}. stepsize i) = t n - t 0\"", "lemma max_stepsize_ge_stepsize:\n  assumes \"j \\<le> n\"\n  shows \"max_stepsize n \\<ge> stepsize j\"", "lemma max_stepsize_nonneg:\n  shows \"max_stepsize n \\<ge> 0\"", "lemma max_stepsize_mono:\n  assumes \"j \\<le> n\"\n  shows \"max_stepsize j \\<le> max_stepsize n\"", "lemma min_stepsize_le_stepsize:\n  assumes \"j \\<le> n\"\n  shows \"min_stepsize n \\<le> stepsize j\"", "lemma (in grid) grid_interval_notempty: \"t 0 \\<le> t n\"", "lemma consistentD:\n  assumes \"consistent x t T B p incr\"\n  assumes \"h \\<ge> 0\" \"t + h \\<le> T\"\n  shows \"dist (x (t + h)) (discrete_evolution incr (t + h) t (x t)) \\<le> B * h ^ (p + 1)\"", "lemma consistentI[intro]:\n  fixes x::\"real\\<Rightarrow>'a::real_normed_vector\"\n  assumes \"\\<And>h. h > 0 \\<Longrightarrow> t + h \\<le> T \\<Longrightarrow>\n    dist (x (t + h)) (discrete_evolution incr (t + h) t (x t)) \\<le> B * h ^ (p + 1)\"\n  shows \"consistent x t T B p incr\"", "lemma consistent_imp_nonneg_constant:\n  assumes \"consistent x t T B p incr\"\n  assumes \"t < T\"\n  shows \"B \\<ge> 0\"", "lemma stepsize_inverse:\n  assumes \"L \\<ge> 0\" \"h \\<ge> 0\" \"B \\<ge> 0\" \"r \\<ge> 0\" \"p > 0\" \"T1 \\<ge> T2\" \"T2 \\<ge> 0\"\n  assumes max_step: \"h \\<le> root p (r * L / B / (exp (L * T1 + 1) - 1))\"\n  shows  \"B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\"", "lemma (in grid) error_accumulation:\n  fixes x::\"(nat \\<Rightarrow> real) \\<Rightarrow> nat \\<Rightarrow> 'a::euclidean_space\"\n  assumes max_step: \"max_stepsize j \\<le>\n    root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\"\n  defines \"K \\<equiv> {(s, y). \\<exists>i \\<le> j. s = t i \\<and> y \\<in> cball (x t i) r}\"\n  assumes \"p > 0\"\n  assumes lipschitz: \"\\<And>j. t (Suc j) \\<le> T \\<Longrightarrow>\n  dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j) \\<le> \\<bar>r\\<bar> \\<Longrightarrow>\n  dist (\\<psi> (stepsize j) (t j) (x t j))\n     (\\<psi> (stepsize j) (t j) (grid_function (discrete_evolution \\<psi>) x0 t j))\n    \\<le> L * dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\" and \"L \\<ge> 0\"\n  assumes consistence_error: \"\\<And>j. t (Suc j) \\<le> T \\<Longrightarrow>\n    dist (x t (Suc j)) (discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) \\<le>\n    B * stepsize j ^ (p + 1)\" and \"B \\<ge> 0\"\n  assumes initial_error: \"dist (x t 0) x0 \\<le>\n    B * (exp 1 - 1) * stepsize 0 ^ p / L\"\n  assumes \"t j \\<le> T\"\n  shows \"dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j) \\<le>\n    B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\"", "lemma max_step_mono_r:\n  assumes \"\\<bar>s\\<bar> \\<ge> \\<bar>r\\<bar>\" \"L \\<ge> 0\" \"B \\<ge> 0\" \"t1 \\<ge> t 0\" \"0 < p\" \"t j \\<le> t1\"\n  shows \"max_stepsize j \\<le>\n    root p (\\<bar>s\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\"", "lemma (in convergent_one_step) convergence:\n  assumes \"t j \\<le> t1\"\n  shows \"dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j) \\<le>\n        B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\"", "lemma t0_le: \"t i \\<le> t1 \\<Longrightarrow> t 0 \\<le> t1\"", "lemma max_step_r:\n  assumes \"t j \\<le> t1\"\n  shows \"max_stepsize j \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\"", "lemma stability:\n  assumes \"t j \\<le> t1\"\n  defines incrs: \"incrs \\<equiv> \\<lambda>h t x. incr h t x + s h t x\"\n  shows \"dist\n    (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n    (grid_function (discrete_evolution incr) (x (t 0)) t j) \\<le>\n        B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\"", "lemma stability:\n  assumes \"t j \\<le> t1\"\n  shows \"dist\n   ((grid_function (discrete_evolution incr') (x0') t j))\n   (grid_function (discrete_evolution incr) (x (t 0)) t j) \\<le>\n     B / L * (exp (L * (t1 - (t 0)) + 1) - 1) * max_stepsize j ^ p\""], "translations": [["", "lemmas grid = steps"], ["", "lemma grid_ge_min:\n  shows \"t 0 \\<le> t j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t 0 \\<le> t j", "proof (induct j)"], ["proof (state)\ngoal (2 subgoals):\n 1. t 0 \\<le> t 0\n 2. \\<And>j. t 0 \\<le> t j \\<Longrightarrow> t 0 \\<le> t (Suc j)", "fix j"], ["proof (state)\ngoal (2 subgoals):\n 1. t 0 \\<le> t 0\n 2. \\<And>j. t 0 \\<le> t j \\<Longrightarrow> t 0 \\<le> t (Suc j)", "assume \"t 0 \\<le> t j\""], ["proof (state)\nthis:\n  t 0 \\<le> t j\n\ngoal (2 subgoals):\n 1. t 0 \\<le> t 0\n 2. \\<And>j. t 0 \\<le> t j \\<Longrightarrow> t 0 \\<le> t (Suc j)", "also"], ["proof (state)\nthis:\n  t 0 \\<le> t j\n\ngoal (2 subgoals):\n 1. t 0 \\<le> t 0\n 2. \\<And>j. t 0 \\<le> t j \\<Longrightarrow> t 0 \\<le> t (Suc j)", "from grid"], ["proof (chain)\npicking this:\n  t ?i \\<le> t (Suc ?i)", "have \"t j \\<le> t (Suc j)\""], ["proof (prove)\nusing this:\n  t ?i \\<le> t (Suc ?i)\n\ngoal (1 subgoal):\n 1. t j \\<le> t (Suc j)", "."], ["proof (state)\nthis:\n  t j \\<le> t (Suc j)\n\ngoal (2 subgoals):\n 1. t 0 \\<le> t 0\n 2. \\<And>j. t 0 \\<le> t j \\<Longrightarrow> t 0 \\<le> t (Suc j)", "finally"], ["proof (chain)\npicking this:\n  t 0 \\<le> t (Suc j)", "show \"t 0 \\<le> t (Suc j)\""], ["proof (prove)\nusing this:\n  t 0 \\<le> t (Suc j)\n\ngoal (1 subgoal):\n 1. t 0 \\<le> t (Suc j)", "."], ["proof (state)\nthis:\n  t 0 \\<le> t (Suc j)\n\ngoal (1 subgoal):\n 1. t 0 \\<le> t 0", "qed simp"], ["", "lemma grid_mono:\n  assumes \"j \\<le> n\"\n  shows \"t j \\<le> t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t j \\<le> t n", "using assms"], ["proof (prove)\nusing this:\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. t j \\<le> t n", "proof (induct rule: inc_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. t n \\<le> t n\n 2. \\<And>na.\n       \\<lbrakk>j \\<le> na; na < n; t (Suc na) \\<le> t n\\<rbrakk>\n       \\<Longrightarrow> t na \\<le> t n", "fix j"], ["proof (state)\ngoal (2 subgoals):\n 1. t n \\<le> t n\n 2. \\<And>na.\n       \\<lbrakk>j \\<le> na; na < n; t (Suc na) \\<le> t n\\<rbrakk>\n       \\<Longrightarrow> t na \\<le> t n", "assume \"j < n\" \"t (Suc j) \\<le> t n\""], ["proof (state)\nthis:\n  j < n\n  t (Suc j) \\<le> t n\n\ngoal (2 subgoals):\n 1. t n \\<le> t n\n 2. \\<And>na.\n       \\<lbrakk>j \\<le> na; na < n; t (Suc na) \\<le> t n\\<rbrakk>\n       \\<Longrightarrow> t na \\<le> t n", "moreover"], ["proof (state)\nthis:\n  j < n\n  t (Suc j) \\<le> t n\n\ngoal (2 subgoals):\n 1. t n \\<le> t n\n 2. \\<And>na.\n       \\<lbrakk>j \\<le> na; na < n; t (Suc na) \\<le> t n\\<rbrakk>\n       \\<Longrightarrow> t na \\<le> t n", "with grid"], ["proof (chain)\npicking this:\n  t ?i \\<le> t (Suc ?i)\n  j < n\n  t (Suc j) \\<le> t n", "have \"t j \\<le> t (Suc j)\""], ["proof (prove)\nusing this:\n  t ?i \\<le> t (Suc ?i)\n  j < n\n  t (Suc j) \\<le> t n\n\ngoal (1 subgoal):\n 1. t j \\<le> t (Suc j)", "by auto"], ["proof (state)\nthis:\n  t j \\<le> t (Suc j)\n\ngoal (2 subgoals):\n 1. t n \\<le> t n\n 2. \\<And>na.\n       \\<lbrakk>j \\<le> na; na < n; t (Suc na) \\<le> t n\\<rbrakk>\n       \\<Longrightarrow> t na \\<le> t n", "ultimately"], ["proof (chain)\npicking this:\n  j < n\n  t (Suc j) \\<le> t n\n  t j \\<le> t (Suc j)", "show \"t j \\<le> t n\""], ["proof (prove)\nusing this:\n  j < n\n  t (Suc j) \\<le> t n\n  t j \\<le> t (Suc j)\n\ngoal (1 subgoal):\n 1. t j \\<le> t n", "by simp"], ["proof (state)\nthis:\n  t j \\<le> t n\n\ngoal (1 subgoal):\n 1. t n \\<le> t n", "qed simp"], ["", "text \\<open>The size of the step from point j to j+1 in grid t\\<close>"], ["", "definition stepsize\nwhere \"stepsize j = t (Suc j) - t j\""], ["", "lemma grid_stepsize_nonneg:\n  shows \"stepsize j \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> stepsize j", "using grid"], ["proof (prove)\nusing this:\n  t ?i \\<le> t (Suc ?i)\n\ngoal (1 subgoal):\n 1. 0 \\<le> stepsize j", "unfolding stepsize_def"], ["proof (prove)\nusing this:\n  t ?i \\<le> t (Suc ?i)\n\ngoal (1 subgoal):\n 1. 0 \\<le> t (Suc j) - t j", "by (simp add: field_simps order_less_imp_le)"], ["", "lemma grid_stepsize_sum:\n  shows \"(\\<Sum>i\\<in>{0..<n}. stepsize i) = t n - t 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum stepsize {0..<n} = t n - t 0", "by (induct n) (simp_all add: stepsize_def)"], ["", "definition max_stepsize\nwhere \"max_stepsize n = Max (stepsize ` {0..n})\""], ["", "lemma max_stepsize_ge_stepsize:\n  assumes \"j \\<le> n\"\n  shows \"max_stepsize n \\<ge> stepsize j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stepsize j \\<le> max_stepsize n", "using assms"], ["proof (prove)\nusing this:\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. stepsize j \\<le> max_stepsize n", "by (auto simp: max_stepsize_def)"], ["", "lemma max_stepsize_nonneg:\n  shows \"max_stepsize n \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> max_stepsize n", "using grid_stepsize_nonneg[of 0]\n    max_stepsize_ge_stepsize[of 0 n]"], ["proof (prove)\nusing this:\n  0 \\<le> stepsize 0\n  0 \\<le> n \\<Longrightarrow> stepsize 0 \\<le> max_stepsize n\n\ngoal (1 subgoal):\n 1. 0 \\<le> max_stepsize n", "by simp"], ["", "lemma max_stepsize_mono:\n  assumes \"j \\<le> n\"\n  shows \"max_stepsize j \\<le> max_stepsize n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_stepsize j \\<le> max_stepsize n", "using assms"], ["proof (prove)\nusing this:\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. max_stepsize j \\<le> max_stepsize n", "by (auto intro!: Max_mono simp: max_stepsize_def)"], ["", "definition min_stepsize\nwhere \"min_stepsize n = Min (stepsize ` {0..n})\""], ["", "lemma min_stepsize_le_stepsize:\n  assumes \"j \\<le> n\"\n  shows \"min_stepsize n \\<le> stepsize j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min_stepsize n \\<le> stepsize j", "using grid assms"], ["proof (prove)\nusing this:\n  t ?i \\<le> t (Suc ?i)\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. min_stepsize n \\<le> stepsize j", "by (auto simp add: min_stepsize_def)"], ["", "end"], ["", "lemma (in grid) grid_interval_notempty: \"t 0 \\<le> t n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t 0 \\<le> t n", "using grid_ge_min[of n]"], ["proof (prove)\nusing this:\n  t 0 \\<le> t n\n\ngoal (1 subgoal):\n 1. t 0 \\<le> t n", "."], ["", "subsection \\<open>Definition \\label{sec:osm-definition}\\<close>"], ["", "text\\<open>Discrete evolution (noted \\<open>\\<Psi>\\<close>) using incrementing function @{term incr}\\<close>"], ["", "definition discrete_evolution\nwhere \"discrete_evolution incr t1 t0 x = x + (t1 - t0) *\\<^sub>R incr (t1 - t0) t0 x\""], ["", "text \\<open>Using the discrete evolution \\<open>\\<Psi>\\<close> between each two points of the\n  grid, define a function over the whole grid\\<close>"], ["", "fun grid_function\nwhere\n  \"grid_function \\<Psi> x0 t 0 = x0\"\n| \"grid_function \\<Psi> x0 t (Suc j) = \\<Psi> (t (Suc j)) (t j) (grid_function \\<Psi> x0 t j)\""], ["", "subsection \\<open>Consistency \\label{sec:osm-consistent}\\<close>"], ["", "definition \"consistent x t T B p incr \\<longleftrightarrow>\n  (\\<forall>h\\<ge>0. t + h \\<le> T \\<longrightarrow> dist (x (t + h)) (discrete_evolution incr (t + h) t (x t)) \\<le> B * h ^ (p + 1))\""], ["", "lemma consistentD:\n  assumes \"consistent x t T B p incr\"\n  assumes \"h \\<ge> 0\" \"t + h \\<le> T\"\n  shows \"dist (x (t + h)) (discrete_evolution incr (t + h) t (x t)) \\<le> B * h ^ (p + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (x (t + h)) (discrete_evolution incr (t + h) t (x t))\n    \\<le> B * h ^ (p + 1)", "using assms"], ["proof (prove)\nusing this:\n  consistent x t T B p incr\n  0 \\<le> h\n  t + h \\<le> T\n\ngoal (1 subgoal):\n 1. dist (x (t + h)) (discrete_evolution incr (t + h) t (x t))\n    \\<le> B * h ^ (p + 1)", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  \\<forall>h\\<ge>0.\n     t + h \\<le> T \\<longrightarrow>\n     dist (x (t + h)) (discrete_evolution incr (t + h) t (x t))\n     \\<le> B * h ^ (p + 1)\n  0 \\<le> h\n  t + h \\<le> T\n\ngoal (1 subgoal):\n 1. dist (x (t + h)) (discrete_evolution incr (t + h) t (x t))\n    \\<le> B * h ^ (p + 1)", "by auto"], ["", "lemma consistentI[intro]:\n  fixes x::\"real\\<Rightarrow>'a::real_normed_vector\"\n  assumes \"\\<And>h. h > 0 \\<Longrightarrow> t + h \\<le> T \\<Longrightarrow>\n    dist (x (t + h)) (discrete_evolution incr (t + h) t (x t)) \\<le> B * h ^ (p + 1)\"\n  shows \"consistent x t T B p incr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent x t T B p incr", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?h; t + ?h \\<le> T\\<rbrakk>\n  \\<Longrightarrow> dist (x (t + ?h))\n                     (discrete_evolution incr (t + ?h) t (x t))\n                    \\<le> B * ?h ^ (p + 1)\n\ngoal (1 subgoal):\n 1. consistent x t T B p incr", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?h; t + ?h \\<le> T\\<rbrakk>\n  \\<Longrightarrow> dist (x (t + ?h))\n                     (discrete_evolution incr (t + ?h) t (x t))\n                    \\<le> B * ?h ^ (p + 1)\n\ngoal (1 subgoal):\n 1. \\<forall>h\\<ge>0.\n       t + h \\<le> T \\<longrightarrow>\n       dist (x (t + h)) (discrete_evolution incr (t + h) t (x t))\n       \\<le> B * h ^ (p + 1)", "by safe (case_tac \"h = 0\", auto simp: discrete_evolution_def)"], ["", "lemma consistent_imp_nonneg_constant:\n  assumes \"consistent x t T B p incr\"\n  assumes \"t < T\"\n  shows \"B \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> B", "from assms"], ["proof (chain)\npicking this:\n  consistent x t T B p incr\n  t < T", "have \"T - t > 0\""], ["proof (prove)\nusing this:\n  consistent x t T B p incr\n  t < T\n\ngoal (1 subgoal):\n 1. 0 < T - t", "by simp"], ["proof (state)\nthis:\n  0 < T - t\n\ngoal (1 subgoal):\n 1. 0 \\<le> B", "have \"0 \\<le> dist (x T) (discrete_evolution incr T t (x t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> dist (x T) (discrete_evolution incr T t (x t))", "by simp"], ["proof (state)\nthis:\n  0 \\<le> dist (x T) (discrete_evolution incr T t (x t))\n\ngoal (1 subgoal):\n 1. 0 \\<le> B", "also"], ["proof (state)\nthis:\n  0 \\<le> dist (x T) (discrete_evolution incr T t (x t))\n\ngoal (1 subgoal):\n 1. 0 \\<le> B", "from assms"], ["proof (chain)\npicking this:\n  consistent x t T B p incr\n  t < T", "have \"... \\<le> B * (T - t) ^ (p + 1)\""], ["proof (prove)\nusing this:\n  consistent x t T B p incr\n  t < T\n\ngoal (1 subgoal):\n 1. dist (x T) (discrete_evolution incr T t (x t))\n    \\<le> B * (T - t) ^ (p + 1)", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  \\<forall>h\\<ge>0.\n     t + h \\<le> T \\<longrightarrow>\n     dist (x (t + h)) (discrete_evolution incr (t + h) t (x t))\n     \\<le> B * h ^ (p + 1)\n  t < T\n\ngoal (1 subgoal):\n 1. dist (x T) (discrete_evolution incr T t (x t))\n    \\<le> B * (T - t) ^ (p + 1)", "by (auto dest: spec[where x=\"T - t\"])"], ["proof (state)\nthis:\n  dist (x T) (discrete_evolution incr T t (x t)) \\<le> B * (T - t) ^ (p + 1)\n\ngoal (1 subgoal):\n 1. 0 \\<le> B", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> B * (T - t) ^ (p + 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> B * (T - t) ^ (p + 1)\n\ngoal (1 subgoal):\n 1. 0 \\<le> B", "using zero_less_power[OF \\<open>T - t > 0\\<close>, of \"p+1\"]"], ["proof (prove)\nusing this:\n  0 \\<le> B * (T - t) ^ (p + 1)\n  0 < (T - t) ^ (p + 1)\n\ngoal (1 subgoal):\n 1. 0 \\<le> B", "by (simp add: zero_le_mult_iff)"], ["proof (state)\nthis:\n  0 \\<le> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stepsize_inverse:\n  assumes \"L \\<ge> 0\" \"h \\<ge> 0\" \"B \\<ge> 0\" \"r \\<ge> 0\" \"p > 0\" \"T1 \\<ge> T2\" \"T2 \\<ge> 0\"\n  assumes max_step: \"h \\<le> root p (r * L / B / (exp (L * T1 + 1) - 1))\"\n  shows  \"B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "assume \"L = 0\""], ["proof (state)\nthis:\n  L = 0\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "hence ?thesis"], ["proof (prove)\nusing this:\n  L = 0\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "using \\<open>r \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  L = 0\n  0 \\<le> r\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "by simp"], ["proof (state)\nthis:\n  B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "}"], ["proof (state)\nthis:\n  L = 0 \\<Longrightarrow> B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "moreover"], ["proof (state)\nthis:\n  L = 0 \\<Longrightarrow> B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "{"], ["proof (state)\nthis:\n  L = 0 \\<Longrightarrow> B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "assume B_pos: \"B > 0\""], ["proof (state)\nthis:\n  0 < B\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "assume \"L > 0\""], ["proof (state)\nthis:\n  0 < L\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "from \\<open>0 \\<le> T2\\<close> \\<open>T1 \\<ge> T2\\<close>"], ["proof (chain)\npicking this:\n  0 \\<le> T2\n  T2 \\<le> T1", "have \"T1 \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> T2\n  T2 \\<le> T1\n\ngoal (1 subgoal):\n 1. 0 \\<le> T1", "by simp"], ["proof (state)\nthis:\n  0 \\<le> T1\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "hence eg: \"(exp (L * T1 + 1) - 1) > 0\""], ["proof (prove)\nusing this:\n  0 \\<le> T1\n\ngoal (1 subgoal):\n 1. 0 < exp (L * T1 + 1) - 1", "using \\<open>L > 0\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> T1\n  0 < L\n\ngoal (1 subgoal):\n 1. 0 < exp (L * T1 + 1) - 1", "by (auto intro!: add_nonneg_pos)"], ["proof (state)\nthis:\n  0 < exp (L * T1 + 1) - 1\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "have \"B * (h ^ p * (exp (L * T2 + 1) - 1)) / L \\<le>\n      B * (root p (r * L / B / (exp (L * T1 + 1) - 1)) ^ p\n      * (exp (L * T2 + 1) - 1)) / L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B * (h ^ p * (exp (L * T2 + 1) - 1)) / L\n    \\<le> B *\n          (root p (r * L / B / (exp (L * T1 + 1) - 1)) ^ p *\n           (exp (L * T2 + 1) - 1)) /\n          L", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> L\n  0 \\<le> h\n  0 \\<le> B\n  0 \\<le> r\n  0 < p\n  T2 \\<le> T1\n  0 \\<le> T2\n  h \\<le> root p (r * L / B / (exp (L * T1 + 1) - 1))\n\ngoal (1 subgoal):\n 1. B * (h ^ p * (exp (L * T2 + 1) - 1)) / L\n    \\<le> B *\n          (root p (r * L / B / (exp (L * T1 + 1) - 1)) ^ p *\n           (exp (L * T2 + 1) - 1)) /\n          L", "by (auto simp add: ge_iff_diff_ge_0[symmetric] divide_simps\n               intro!: mult_left_mono mult_right_mono power_mono)"], ["proof (state)\nthis:\n  B * (h ^ p * (exp (L * T2 + 1) - 1)) / L\n  \\<le> B *\n        (root p (r * L / B / (exp (L * T1 + 1) - 1)) ^ p *\n         (exp (L * T2 + 1) - 1)) /\n        L\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "also"], ["proof (state)\nthis:\n  B * (h ^ p * (exp (L * T2 + 1) - 1)) / L\n  \\<le> B *\n        (root p (r * L / B / (exp (L * T1 + 1) - 1)) ^ p *\n         (exp (L * T2 + 1) - 1)) /\n        L\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "have \"root p (r * L / B / (exp (L * T1 + 1) - 1)) ^ p =\n      (r * L / B / (exp (L * T1 + 1) - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. root p (r * L / B / (exp (L * T1 + 1) - 1)) ^ p =\n    r * L / B / (exp (L * T1 + 1) - 1)", "using assms B_pos \\<open>T1 \\<ge> 0\\<close> \\<open>L > 0\\<close> \\<open>B > 0\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> L\n  0 \\<le> h\n  0 \\<le> B\n  0 \\<le> r\n  0 < p\n  T2 \\<le> T1\n  0 \\<le> T2\n  h \\<le> root p (r * L / B / (exp (L * T1 + 1) - 1))\n  0 < B\n  0 \\<le> T1\n  0 < L\n  0 < B\n\ngoal (1 subgoal):\n 1. root p (r * L / B / (exp (L * T1 + 1) - 1)) ^ p =\n    r * L / B / (exp (L * T1 + 1) - 1)", "by (subst real_root_pow_pos2[OF \\<open>p > 0\\<close>])\n         (auto intro!: divide_nonneg_pos add_nonneg_pos mult_pos_pos)"], ["proof (state)\nthis:\n  root p (r * L / B / (exp (L * T1 + 1) - 1)) ^ p =\n  r * L / B / (exp (L * T1 + 1) - 1)\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "finally"], ["proof (chain)\npicking this:\n  B * (h ^ p * (exp (L * T2 + 1) - 1)) / L\n  \\<le> B * (r * L / B / (exp (L * T1 + 1) - 1) * (exp (L * T2 + 1) - 1)) /\n        L", "have \"B * (h ^ p * (exp (L * T2 + 1) - 1)) / L \\<le>\n      r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1))\""], ["proof (prove)\nusing this:\n  B * (h ^ p * (exp (L * T2 + 1) - 1)) / L\n  \\<le> B * (r * L / B / (exp (L * T1 + 1) - 1) * (exp (L * T2 + 1) - 1)) /\n        L\n\ngoal (1 subgoal):\n 1. B * (h ^ p * (exp (L * T2 + 1) - 1)) / L\n    \\<le> r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1))", "using B_pos \\<open>L > 0\\<close> eg \\<open>r \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  B * (h ^ p * (exp (L * T2 + 1) - 1)) / L\n  \\<le> B * (r * L / B / (exp (L * T1 + 1) - 1) * (exp (L * T2 + 1) - 1)) /\n        L\n  0 < B\n  0 < L\n  0 < exp (L * T1 + 1) - 1\n  0 \\<le> r\n\ngoal (1 subgoal):\n 1. B * (h ^ p * (exp (L * T2 + 1) - 1)) / L\n    \\<le> r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1))", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  B * (h ^ p * (exp (L * T2 + 1) - 1)) / L\n  \\<le> r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1))\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "also"], ["proof (state)\nthis:\n  B * (h ^ p * (exp (L * T2 + 1) - 1)) / L\n  \\<le> r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1))\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "have \"... \\<le> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1)) \\<le> r", "using \\<open>T1 \\<ge> T2\\<close> \\<open>0 \\<le> T2\\<close>"], ["proof (prove)\nusing this:\n  T2 \\<le> T1\n  0 \\<le> T2\n\ngoal (1 subgoal):\n 1. r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1)) \\<le> r", "proof (cases \"T1 = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>T2 \\<le> T1; 0 \\<le> T2; T1 = 0\\<rbrakk>\n    \\<Longrightarrow> r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1))\n                      \\<le> r\n 2. \\<lbrakk>T2 \\<le> T1; 0 \\<le> T2; T1 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1))\n                      \\<le> r", "assume \"T1 \\<noteq> 0\""], ["proof (state)\nthis:\n  T1 \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>T2 \\<le> T1; 0 \\<le> T2; T1 = 0\\<rbrakk>\n    \\<Longrightarrow> r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1))\n                      \\<le> r\n 2. \\<lbrakk>T2 \\<le> T1; 0 \\<le> T2; T1 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1))\n                      \\<le> r", "with \\<open>T1 \\<ge> T2\\<close> \\<open>0 \\<le> T2\\<close>"], ["proof (chain)\npicking this:\n  T2 \\<le> T1\n  0 \\<le> T2\n  T1 \\<noteq> 0", "have \"T1 > 0\""], ["proof (prove)\nusing this:\n  T2 \\<le> T1\n  0 \\<le> T2\n  T1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < T1", "by simp"], ["proof (state)\nthis:\n  0 < T1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>T2 \\<le> T1; 0 \\<le> T2; T1 = 0\\<rbrakk>\n    \\<Longrightarrow> r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1))\n                      \\<le> r\n 2. \\<lbrakk>T2 \\<le> T1; 0 \\<le> T2; T1 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1))\n                      \\<le> r", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1)) \\<le> r", "using \\<open>L > 0\\<close> \\<open>0 \\<le> T2\\<close> \\<open>T1 \\<ge> 0\\<close> add_0_left \\<open>T1 > 0\\<close> \\<open>T1 \\<ge> T2\\<close>"], ["proof (prove)\nusing this:\n  0 < L\n  0 \\<le> T2\n  0 \\<le> T1\n  (0::?'a) + ?a = ?a\n  0 < T1\n  T2 \\<le> T1\n\ngoal (1 subgoal):\n 1. r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1)) \\<le> r", "by (intro mult_right_le_one_le \\<open>r \\<ge> 0\\<close>)\n           (subst pos_le_divide_eq pos_divide_le_eq, auto simp add: intro!: add_pos_pos)+"], ["proof (state)\nthis:\n  r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1)) \\<le> r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>T2 \\<le> T1; 0 \\<le> T2; T1 = 0\\<rbrakk>\n    \\<Longrightarrow> r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1))\n                      \\<le> r", "qed simp"], ["proof (state)\nthis:\n  r * ((exp (L * T2 + 1) - 1) / (exp (L * T1 + 1) - 1)) \\<le> r\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "finally"], ["proof (chain)\npicking this:\n  B * (h ^ p * (exp (L * T2 + 1) - 1)) / L \\<le> r", "have ?thesis"], ["proof (prove)\nusing this:\n  B * (h ^ p * (exp (L * T2 + 1) - 1)) / L \\<le> r\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "}"], ["proof (state)\nthis:\n  \\<lbrakk>0 < B; 0 < L\\<rbrakk>\n  \\<Longrightarrow> B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>0 < B; 0 < L\\<rbrakk>\n  \\<Longrightarrow> B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "{"], ["proof (state)\nthis:\n  \\<lbrakk>0 < B; 0 < L\\<rbrakk>\n  \\<Longrightarrow> B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "assume \"\\<not>0<B\""], ["proof (state)\nthis:\n  \\<not> 0 < B\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "hence \"B = 0\""], ["proof (prove)\nusing this:\n  \\<not> 0 < B\n\ngoal (1 subgoal):\n 1. B = 0", "using \\<open>B \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  \\<not> 0 < B\n  0 \\<le> B\n\ngoal (1 subgoal):\n 1. B = 0", "by simp"], ["proof (state)\nthis:\n  B = 0\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "hence ?thesis"], ["proof (prove)\nusing this:\n  B = 0\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "using \\<open>r \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  B = 0\n  0 \\<le> r\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "by simp"], ["proof (state)\nthis:\n  B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "}"], ["proof (state)\nthis:\n  \\<not> 0 < B \\<Longrightarrow>\n  B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "ultimately"], ["proof (chain)\npicking this:\n  L = 0 \\<Longrightarrow> B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n  \\<lbrakk>0 < B; 0 < L\\<rbrakk>\n  \\<Longrightarrow> B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n  \\<not> 0 < B \\<Longrightarrow>\n  B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "show ?thesis"], ["proof (prove)\nusing this:\n  L = 0 \\<Longrightarrow> B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n  \\<lbrakk>0 < B; 0 < L\\<rbrakk>\n  \\<Longrightarrow> B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n  \\<not> 0 < B \\<Longrightarrow>\n  B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "using assms"], ["proof (prove)\nusing this:\n  L = 0 \\<Longrightarrow> B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n  \\<lbrakk>0 < B; 0 < L\\<rbrakk>\n  \\<Longrightarrow> B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n  \\<not> 0 < B \\<Longrightarrow>\n  B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n  0 \\<le> L\n  0 \\<le> h\n  0 \\<le> B\n  0 \\<le> r\n  0 < p\n  T2 \\<le> T1\n  0 \\<le> T2\n  h \\<le> root p (r * L / B / (exp (L * T1 + 1) - 1))\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r", "by arith"], ["proof (state)\nthis:\n  B / L * (exp (L * T2 + 1) - 1) * h ^ p \\<le> r\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Accumulation of errors\\<close>"], ["", "text \\<open>The concept of accumulating errors applies to convergence and stability.\\<close>"], ["", "lemma (in grid) error_accumulation:\n  fixes x::\"(nat \\<Rightarrow> real) \\<Rightarrow> nat \\<Rightarrow> 'a::euclidean_space\"\n  assumes max_step: \"max_stepsize j \\<le>\n    root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\"\n  defines \"K \\<equiv> {(s, y). \\<exists>i \\<le> j. s = t i \\<and> y \\<in> cball (x t i) r}\"\n  assumes \"p > 0\"\n  assumes lipschitz: \"\\<And>j. t (Suc j) \\<le> T \\<Longrightarrow>\n  dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j) \\<le> \\<bar>r\\<bar> \\<Longrightarrow>\n  dist (\\<psi> (stepsize j) (t j) (x t j))\n     (\\<psi> (stepsize j) (t j) (grid_function (discrete_evolution \\<psi>) x0 t j))\n    \\<le> L * dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\" and \"L \\<ge> 0\"\n  assumes consistence_error: \"\\<And>j. t (Suc j) \\<le> T \\<Longrightarrow>\n    dist (x t (Suc j)) (discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) \\<le>\n    B * stepsize j ^ (p + 1)\" and \"B \\<ge> 0\"\n  assumes initial_error: \"dist (x t 0) x0 \\<le>\n    B * (exp 1 - 1) * stepsize 0 ^ p / L\"\n  assumes \"t j \\<le> T\"\n  shows \"dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j) \\<le>\n    B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n    \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p", "using \\<open>t j \\<le> T\\<close> max_step"], ["proof (prove)\nusing this:\n  t j \\<le> T\n  max_stepsize j\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\n\ngoal (1 subgoal):\n 1. dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n    \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p", "proof (induct j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>t 0 \\<le> T;\n     max_stepsize 0\n     \\<le> root p\n            (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n    \\<Longrightarrow> dist (x t 0)\n                       (grid_function (discrete_evolution \\<psi>) x0 t 0)\n                      \\<le> B / L * (exp (L * (t 0 - t 0) + 1) - 1) *\n                            max_stepsize 0 ^ p\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "case 0"], ["proof (state)\nthis:\n  t 0 \\<le> T\n  max_stepsize 0\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>t 0 \\<le> T;\n     max_stepsize 0\n     \\<le> root p\n            (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n    \\<Longrightarrow> dist (x t 0)\n                       (grid_function (discrete_evolution \\<psi>) x0 t 0)\n                      \\<le> B / L * (exp (L * (t 0 - t 0) + 1) - 1) *\n                            max_stepsize 0 ^ p\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "note initial_error"], ["proof (state)\nthis:\n  dist (x t 0) x0 \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n\ngoal (2 subgoals):\n 1. \\<lbrakk>t 0 \\<le> T;\n     max_stepsize 0\n     \\<le> root p\n            (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n    \\<Longrightarrow> dist (x t 0)\n                       (grid_function (discrete_evolution \\<psi>) x0 t 0)\n                      \\<le> B / L * (exp (L * (t 0 - t 0) + 1) - 1) *\n                            max_stepsize 0 ^ p\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "also"], ["proof (state)\nthis:\n  dist (x t 0) x0 \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n\ngoal (2 subgoals):\n 1. \\<lbrakk>t 0 \\<le> T;\n     max_stepsize 0\n     \\<le> root p\n            (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n    \\<Longrightarrow> dist (x t 0)\n                       (grid_function (discrete_evolution \\<psi>) x0 t 0)\n                      \\<le> B / L * (exp (L * (t 0 - t 0) + 1) - 1) *\n                            max_stepsize 0 ^ p\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "have \"B * (exp 1 - 1) * stepsize 0 ^ p / L \\<le>\n    B * (exp 1 - 1) * max_stepsize 0 ^ p / L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B * (exp 1 - 1) * stepsize 0 ^ p / L\n    \\<le> B * (exp 1 - 1) * max_stepsize 0 ^ p / L", "using grid_stepsize_nonneg \\<open>B\\<ge>0\\<close> \\<open>L\\<ge>0\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> stepsize ?j\n  0 \\<le> B\n  0 \\<le> L\n\ngoal (1 subgoal):\n 1. B * (exp 1 - 1) * stepsize 0 ^ p / L\n    \\<le> B * (exp 1 - 1) * max_stepsize 0 ^ p / L", "by (auto intro!: max_stepsize_ge_stepsize power_mono mult_left_mono divide_right_mono)"], ["proof (state)\nthis:\n  B * (exp 1 - 1) * stepsize 0 ^ p / L\n  \\<le> B * (exp 1 - 1) * max_stepsize 0 ^ p / L\n\ngoal (2 subgoals):\n 1. \\<lbrakk>t 0 \\<le> T;\n     max_stepsize 0\n     \\<le> root p\n            (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n    \\<Longrightarrow> dist (x t 0)\n                       (grid_function (discrete_evolution \\<psi>) x0 t 0)\n                      \\<le> B / L * (exp (L * (t 0 - t 0) + 1) - 1) *\n                            max_stepsize 0 ^ p\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "finally"], ["proof (chain)\npicking this:\n  dist (x t 0) x0 \\<le> B * (exp 1 - 1) * max_stepsize 0 ^ p / L", "show ?case"], ["proof (prove)\nusing this:\n  dist (x t 0) x0 \\<le> B * (exp 1 - 1) * max_stepsize 0 ^ p / L\n\ngoal (1 subgoal):\n 1. dist (x t 0) (grid_function (discrete_evolution \\<psi>) x0 t 0)\n    \\<le> B / L * (exp (L * (t 0 - t 0) + 1) - 1) * max_stepsize 0 ^ p", "by simp"], ["proof (state)\nthis:\n  dist (x t 0) (grid_function (discrete_evolution \\<psi>) x0 t 0)\n  \\<le> B / L * (exp (L * (t 0 - t 0) + 1) - 1) * max_stepsize 0 ^ p\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "case (Suc j)"], ["proof (state)\nthis:\n  \\<lbrakk>t j \\<le> T;\n   max_stepsize j\n   \\<le> root p\n          (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n  \\<Longrightarrow> dist (x t j)\n                     (grid_function (discrete_evolution \\<psi>) x0 t j)\n                    \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) *\n                          max_stepsize j ^ p\n  t (Suc j) \\<le> T\n  max_stepsize (Suc j)\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "have \"t 0 \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t 0 \\<le> T", "using Suc grid_interval_notempty[of \"Suc j\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>t j \\<le> T;\n   max_stepsize j\n   \\<le> root p\n          (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n  \\<Longrightarrow> dist (x t j)\n                     (grid_function (discrete_evolution \\<psi>) x0 t j)\n                    \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) *\n                          max_stepsize j ^ p\n  t (Suc j) \\<le> T\n  max_stepsize (Suc j)\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\n  t 0 \\<le> t (Suc j)\n\ngoal (1 subgoal):\n 1. t 0 \\<le> T", "by auto"], ["proof (state)\nthis:\n  t 0 \\<le> T\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "from Suc"], ["proof (chain)\npicking this:\n  \\<lbrakk>t j \\<le> T;\n   max_stepsize j\n   \\<le> root p\n          (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n  \\<Longrightarrow> dist (x t j)\n                     (grid_function (discrete_evolution \\<psi>) x0 t j)\n                    \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) *\n                          max_stepsize j ^ p\n  t (Suc j) \\<le> T\n  max_stepsize (Suc j)\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))", "have j_in:\"t j \\<le> T\""], ["proof (prove)\nusing this:\n  \\<lbrakk>t j \\<le> T;\n   max_stepsize j\n   \\<le> root p\n          (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n  \\<Longrightarrow> dist (x t j)\n                     (grid_function (discrete_evolution \\<psi>) x0 t j)\n                    \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) *\n                          max_stepsize j ^ p\n  t (Suc j) \\<le> T\n  max_stepsize (Suc j)\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\n\ngoal (1 subgoal):\n 1. t j \\<le> T", "using grid_mono[of j \"Suc j\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>t j \\<le> T;\n   max_stepsize j\n   \\<le> root p\n          (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n  \\<Longrightarrow> dist (x t j)\n                     (grid_function (discrete_evolution \\<psi>) x0 t j)\n                    \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) *\n                          max_stepsize j ^ p\n  t (Suc j) \\<le> T\n  max_stepsize (Suc j)\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\n  j \\<le> Suc j \\<Longrightarrow> t j \\<le> t (Suc j)\n\ngoal (1 subgoal):\n 1. t j \\<le> T", "by simp"], ["proof (state)\nthis:\n  t j \\<le> T\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "moreover"], ["proof (state)\nthis:\n  t j \\<le> T\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "have \"max_stepsize j \\<le> max_stepsize (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_stepsize j \\<le> max_stepsize (Suc j)", "by (simp add: max_stepsize_mono)"], ["proof (state)\nthis:\n  max_stepsize j \\<le> max_stepsize (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "with Suc"], ["proof (chain)\npicking this:\n  \\<lbrakk>t j \\<le> T;\n   max_stepsize j\n   \\<le> root p\n          (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n  \\<Longrightarrow> dist (x t j)\n                     (grid_function (discrete_evolution \\<psi>) x0 t j)\n                    \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) *\n                          max_stepsize j ^ p\n  t (Suc j) \\<le> T\n  max_stepsize (Suc j)\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\n  max_stepsize j \\<le> max_stepsize (Suc j)", "have IH1: \"max_stepsize j \\<le>\n    root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>t j \\<le> T;\n   max_stepsize j\n   \\<le> root p\n          (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n  \\<Longrightarrow> dist (x t j)\n                     (grid_function (discrete_evolution \\<psi>) x0 t j)\n                    \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) *\n                          max_stepsize j ^ p\n  t (Suc j) \\<le> T\n  max_stepsize (Suc j)\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\n  max_stepsize j \\<le> max_stepsize (Suc j)\n\ngoal (1 subgoal):\n 1. max_stepsize j\n    \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))", "by simp"], ["proof (state)\nthis:\n  max_stepsize j\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "ultimately"], ["proof (chain)\npicking this:\n  t j \\<le> T\n  max_stepsize j\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))", "have\n    IH2: \"dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n     \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\""], ["proof (prove)\nusing this:\n  t j \\<le> T\n  max_stepsize j\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\n\ngoal (1 subgoal):\n 1. dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n    \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p", "by (rule Suc(1))"], ["proof (state)\nthis:\n  dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n  \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "have \"dist (x t (Suc j)) (grid_function (discrete_evolution \\<psi>) x0 t (Suc j)) =\n    norm (x t (Suc j) -\n    (discrete_evolution \\<psi>) (t (Suc j)) (t j) (x t j) +\n    ((discrete_evolution \\<psi>) (t (Suc j)) (t j) (x t j) -\n    (discrete_evolution \\<psi>) (t (Suc j)) (t j) (grid_function (discrete_evolution \\<psi>) x0 t j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (x t (Suc j))\n     (grid_function (discrete_evolution \\<psi>) x0 t (Suc j)) =\n    norm\n     (x t (Suc j) - discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) +\n      (discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) -\n       discrete_evolution \\<psi> (t (Suc j)) (t j)\n        (grid_function (discrete_evolution \\<psi>) x0 t j)))", "by (simp add: field_simps dist_norm)"], ["proof (state)\nthis:\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j)) =\n  norm\n   (x t (Suc j) - discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) +\n    (discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) -\n     discrete_evolution \\<psi> (t (Suc j)) (t j)\n      (grid_function (discrete_evolution \\<psi>) x0 t j)))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "also"], ["proof (state)\nthis:\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j)) =\n  norm\n   (x t (Suc j) - discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) +\n    (discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) -\n     discrete_evolution \\<psi> (t (Suc j)) (t j)\n      (grid_function (discrete_evolution \\<psi>) x0 t j)))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "have \"... \\<le> norm (x t (Suc j) -\n    (discrete_evolution \\<psi>) (t (Suc j)) (t j) (x t j)) +\n    norm (((discrete_evolution \\<psi>) (t (Suc j)) (t j) (x t j) -\n    (discrete_evolution \\<psi>) (t (Suc j)) (t j) (grid_function (discrete_evolution \\<psi>) x0 t j)))\"\n    (is \"_ \\<le> _ + ?ej\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm\n     (x t (Suc j) - discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) +\n      (discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) -\n       discrete_evolution \\<psi> (t (Suc j)) (t j)\n        (grid_function (discrete_evolution \\<psi>) x0 t j)))\n    \\<le> norm\n           (x t (Suc j) -\n            discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n          norm\n           (discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) -\n            discrete_evolution \\<psi> (t (Suc j)) (t j)\n             (grid_function (discrete_evolution \\<psi>) x0 t j))", "by (rule norm_triangle_ineq)"], ["proof (state)\nthis:\n  norm\n   (x t (Suc j) - discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) +\n    (discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) -\n     discrete_evolution \\<psi> (t (Suc j)) (t j)\n      (grid_function (discrete_evolution \\<psi>) x0 t j)))\n  \\<le> norm\n         (x t (Suc j) -\n          discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n        norm\n         (discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) -\n          discrete_evolution \\<psi> (t (Suc j)) (t j)\n           (grid_function (discrete_evolution \\<psi>) x0 t j))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "also"], ["proof (state)\nthis:\n  norm\n   (x t (Suc j) - discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) +\n    (discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) -\n     discrete_evolution \\<psi> (t (Suc j)) (t j)\n      (grid_function (discrete_evolution \\<psi>) x0 t j)))\n  \\<le> norm\n         (x t (Suc j) -\n          discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n        norm\n         (discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) -\n          discrete_evolution \\<psi> (t (Suc j)) (t j)\n           (grid_function (discrete_evolution \\<psi>) x0 t j))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "have \"?ej =\n    norm (x t j - grid_function (discrete_evolution \\<psi>) x0 t j + stepsize j *\\<^sub>R\n    (\\<psi> (stepsize j) (t j) (x t j) -\n    \\<psi> (stepsize j) (t j) (grid_function (discrete_evolution \\<psi>) x0 t j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm\n     (discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) -\n      discrete_evolution \\<psi> (t (Suc j)) (t j)\n       (grid_function (discrete_evolution \\<psi>) x0 t j)) =\n    norm\n     (x t j - grid_function (discrete_evolution \\<psi>) x0 t j +\n      stepsize j *\\<^sub>R\n      (\\<psi> (stepsize j) (t j) (x t j) -\n       \\<psi> (stepsize j) (t j)\n        (grid_function (discrete_evolution \\<psi>) x0 t j)))", "by (simp add: discrete_evolution_def stepsize_def algebra_simps)"], ["proof (state)\nthis:\n  norm\n   (discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) -\n    discrete_evolution \\<psi> (t (Suc j)) (t j)\n     (grid_function (discrete_evolution \\<psi>) x0 t j)) =\n  norm\n   (x t j - grid_function (discrete_evolution \\<psi>) x0 t j +\n    stepsize j *\\<^sub>R\n    (\\<psi> (stepsize j) (t j) (x t j) -\n     \\<psi> (stepsize j) (t j)\n      (grid_function (discrete_evolution \\<psi>) x0 t j)))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "also"], ["proof (state)\nthis:\n  norm\n   (discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j) -\n    discrete_evolution \\<psi> (t (Suc j)) (t j)\n     (grid_function (discrete_evolution \\<psi>) x0 t j)) =\n  norm\n   (x t j - grid_function (discrete_evolution \\<psi>) x0 t j +\n    stepsize j *\\<^sub>R\n    (\\<psi> (stepsize j) (t j) (x t j) -\n     \\<psi> (stepsize j) (t j)\n      (grid_function (discrete_evolution \\<psi>) x0 t j)))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "have \"... \\<le>\n    norm (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) + norm (stepsize j *\\<^sub>R\n    (\\<psi> (stepsize j) (t j) (x t j) -\n    \\<psi> (stepsize j) (t j) (grid_function (discrete_evolution \\<psi>) x0 t j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm\n     (x t j - grid_function (discrete_evolution \\<psi>) x0 t j +\n      stepsize j *\\<^sub>R\n      (\\<psi> (stepsize j) (t j) (x t j) -\n       \\<psi> (stepsize j) (t j)\n        (grid_function (discrete_evolution \\<psi>) x0 t j)))\n    \\<le> norm (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n          norm\n           (stepsize j *\\<^sub>R\n            (\\<psi> (stepsize j) (t j) (x t j) -\n             \\<psi> (stepsize j) (t j)\n              (grid_function (discrete_evolution \\<psi>) x0 t j)))", "by (rule norm_triangle_ineq)"], ["proof (state)\nthis:\n  norm\n   (x t j - grid_function (discrete_evolution \\<psi>) x0 t j +\n    stepsize j *\\<^sub>R\n    (\\<psi> (stepsize j) (t j) (x t j) -\n     \\<psi> (stepsize j) (t j)\n      (grid_function (discrete_evolution \\<psi>) x0 t j)))\n  \\<le> norm (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n        norm\n         (stepsize j *\\<^sub>R\n          (\\<psi> (stepsize j) (t j) (x t j) -\n           \\<psi> (stepsize j) (t j)\n            (grid_function (discrete_evolution \\<psi>) x0 t j)))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "also"], ["proof (state)\nthis:\n  norm\n   (x t j - grid_function (discrete_evolution \\<psi>) x0 t j +\n    stepsize j *\\<^sub>R\n    (\\<psi> (stepsize j) (t j) (x t j) -\n     \\<psi> (stepsize j) (t j)\n      (grid_function (discrete_evolution \\<psi>) x0 t j)))\n  \\<le> norm (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n        norm\n         (stepsize j *\\<^sub>R\n          (\\<psi> (stepsize j) (t j) (x t j) -\n           \\<psi> (stepsize j) (t j)\n            (grid_function (discrete_evolution \\<psi>) x0 t j)))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "have \"... = norm (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n    stepsize j *\n    dist (\\<psi> (stepsize j) (t j) (x t j))\n    (\\<psi> (stepsize j) (t j) (grid_function (discrete_evolution \\<psi>) x0 t j))\"\n    (is \"_ = _ + _ * ?dj\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n    norm\n     (stepsize j *\\<^sub>R\n      (\\<psi> (stepsize j) (t j) (x t j) -\n       \\<psi> (stepsize j) (t j)\n        (grid_function (discrete_evolution \\<psi>) x0 t j))) =\n    norm (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n    stepsize j *\n    dist (\\<psi> (stepsize j) (t j) (x t j))\n     (\\<psi> (stepsize j) (t j)\n       (grid_function (discrete_evolution \\<psi>) x0 t j))", "using grid_stepsize_nonneg"], ["proof (prove)\nusing this:\n  0 \\<le> stepsize ?j\n\ngoal (1 subgoal):\n 1. norm (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n    norm\n     (stepsize j *\\<^sub>R\n      (\\<psi> (stepsize j) (t j) (x t j) -\n       \\<psi> (stepsize j) (t j)\n        (grid_function (discrete_evolution \\<psi>) x0 t j))) =\n    norm (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n    stepsize j *\n    dist (\\<psi> (stepsize j) (t j) (x t j))\n     (\\<psi> (stepsize j) (t j)\n       (grid_function (discrete_evolution \\<psi>) x0 t j))", "by (simp add: dist_norm)"], ["proof (state)\nthis:\n  norm (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n  norm\n   (stepsize j *\\<^sub>R\n    (\\<psi> (stepsize j) (t j) (x t j) -\n     \\<psi> (stepsize j) (t j)\n      (grid_function (discrete_evolution \\<psi>) x0 t j))) =\n  norm (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n  stepsize j *\n  dist (\\<psi> (stepsize j) (t j) (x t j))\n   (\\<psi> (stepsize j) (t j)\n     (grid_function (discrete_evolution \\<psi>) x0 t j))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "also"], ["proof (state)\nthis:\n  norm (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n  norm\n   (stepsize j *\\<^sub>R\n    (\\<psi> (stepsize j) (t j) (x t j) -\n     \\<psi> (stepsize j) (t j)\n      (grid_function (discrete_evolution \\<psi>) x0 t j))) =\n  norm (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n  stepsize j *\n  dist (\\<psi> (stepsize j) (t j) (x t j))\n   (\\<psi> (stepsize j) (t j)\n     (grid_function (discrete_evolution \\<psi>) x0 t j))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "have \"?dj \\<le> L * dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (\\<psi> (stepsize j) (t j) (x t j))\n     (\\<psi> (stepsize j) (t j)\n       (grid_function (discrete_evolution \\<psi>) x0 t j))\n    \\<le> L *\n          dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)", "proof (intro lipschitz(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. t (Suc j) \\<le> T\n 2. dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n    \\<le> \\<bar>r\\<bar>", "from IH2"], ["proof (chain)\npicking this:\n  dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n  \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p", "have\n      \"dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n      \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\""], ["proof (prove)\nusing this:\n  dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n  \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (1 subgoal):\n 1. dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n    \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n  \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (2 subgoals):\n 1. t (Suc j) \\<le> T\n 2. dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n    \\<le> \\<bar>r\\<bar>", "also"], ["proof (state)\nthis:\n  dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n  \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (2 subgoals):\n 1. t (Suc j) \\<le> T\n 2. dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n    \\<le> \\<bar>r\\<bar>", "have \"... \\<le>\n      B / L * (exp (L * (T - t 0) + 1) - 1) * max_stepsize j ^ p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n    \\<le> B / L * (exp (L * (T - t 0) + 1) - 1) * max_stepsize j ^ p", "using \\<open>L\\<ge>0\\<close> \\<open>B\\<ge>0\\<close> \\<open>t j \\<le> T\\<close> max_stepsize_nonneg"], ["proof (prove)\nusing this:\n  0 \\<le> L\n  0 \\<le> B\n  t j \\<le> T\n  0 \\<le> max_stepsize ?n\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n    \\<le> B / L * (exp (L * (T - t 0) + 1) - 1) * max_stepsize j ^ p", "by (auto intro!: mult_left_mono mult_right_mono divide_right_mono)"], ["proof (state)\nthis:\n  B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n  \\<le> B / L * (exp (L * (T - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (2 subgoals):\n 1. t (Suc j) \\<le> T\n 2. dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n    \\<le> \\<bar>r\\<bar>", "also"], ["proof (state)\nthis:\n  B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n  \\<le> B / L * (exp (L * (T - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (2 subgoals):\n 1. t (Suc j) \\<le> T\n 2. dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n    \\<le> \\<bar>r\\<bar>", "have \"... \\<le> \\<bar>r\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B / L * (exp (L * (T - t 0) + 1) - 1) * max_stepsize j ^ p\n    \\<le> \\<bar>r\\<bar>", "using \\<open>B \\<ge> 0\\<close> max_step max_stepsize_nonneg \\<open>L \\<ge> 0\\<close> \\<open>p > 0\\<close>\n        grid_ge_min"], ["proof (prove)\nusing this:\n  0 \\<le> B\n  max_stepsize j\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\n  0 \\<le> max_stepsize ?n\n  0 \\<le> L\n  0 < p\n  t 0 \\<le> t ?j\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * (T - t 0) + 1) - 1) * max_stepsize j ^ p\n    \\<le> \\<bar>r\\<bar>", "using grid_mono[of 0 j] \\<open>t 0 \\<le> T\\<close> IH1"], ["proof (prove)\nusing this:\n  0 \\<le> B\n  max_stepsize j\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\n  0 \\<le> max_stepsize ?n\n  0 \\<le> L\n  0 < p\n  t 0 \\<le> t ?j\n  0 \\<le> j \\<Longrightarrow> t 0 \\<le> t j\n  t 0 \\<le> T\n  max_stepsize j\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * (T - t 0) + 1) - 1) * max_stepsize j ^ p\n    \\<le> \\<bar>r\\<bar>", "by (intro stepsize_inverse) auto"], ["proof (state)\nthis:\n  B / L * (exp (L * (T - t 0) + 1) - 1) * max_stepsize j ^ p\n  \\<le> \\<bar>r\\<bar>\n\ngoal (2 subgoals):\n 1. t (Suc j) \\<le> T\n 2. dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n    \\<le> \\<bar>r\\<bar>", "finally"], ["proof (chain)\npicking this:\n  dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n  \\<le> \\<bar>r\\<bar>", "show\n      \"dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j) \\<le> \\<bar>r\\<bar>\""], ["proof (prove)\nusing this:\n  dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n  \\<le> \\<bar>r\\<bar>\n\ngoal (1 subgoal):\n 1. dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n    \\<le> \\<bar>r\\<bar>", "."], ["proof (state)\nthis:\n  dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n  \\<le> \\<bar>r\\<bar>\n\ngoal (1 subgoal):\n 1. t (Suc j) \\<le> T", "qed (insert Suc, simp)"], ["proof (state)\nthis:\n  dist (\\<psi> (stepsize j) (t j) (x t j))\n   (\\<psi> (stepsize j) (t j)\n     (grid_function (discrete_evolution \\<psi>) x0 t j))\n  \\<le> L * dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>xa y.\n              xa \\<le> y \\<Longrightarrow>\n              norm\n               (x t (Suc j) -\n                discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n              xa\n              \\<le> norm\n                     (x t (Suc j) -\n                      discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n                    y;\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      norm\n       (x t (Suc j) - discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n      (norm (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n       stepsize j * xa)\n      \\<le> norm\n             (x t (Suc j) -\n              discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n            (norm\n              (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n             stepsize j * y)\\<rbrakk>\n  \\<Longrightarrow> dist (x t (Suc j))\n                     (grid_function (discrete_evolution \\<psi>) x0 t\n                       (Suc j))\n                    \\<le> norm\n                           (x t (Suc j) -\n                            discrete_evolution \\<psi> (t (Suc j)) (t j)\n                             (x t j)) +\n                          (norm\n                            (x t j -\n                             grid_function (discrete_evolution \\<psi>) x0 t\n                              j) +\n                           stepsize j *\n                           (L *\n                            dist (x t j)\n                             (grid_function (discrete_evolution \\<psi>) x0 t\n                               j)))", "have \"dist (x t (Suc j)) (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n    \\<le> norm (x t (Suc j) - (discrete_evolution \\<psi>) (t (Suc j)) (t j) (x t j)) +\n    (1 + stepsize j * L) *\n      dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>xa y.\n              xa \\<le> y \\<Longrightarrow>\n              norm\n               (x t (Suc j) -\n                discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n              xa\n              \\<le> norm\n                     (x t (Suc j) -\n                      discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n                    y;\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      norm\n       (x t (Suc j) - discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n      (norm (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n       stepsize j * xa)\n      \\<le> norm\n             (x t (Suc j) -\n              discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n            (norm\n              (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n             stepsize j * y)\\<rbrakk>\n  \\<Longrightarrow> dist (x t (Suc j))\n                     (grid_function (discrete_evolution \\<psi>) x0 t\n                       (Suc j))\n                    \\<le> norm\n                           (x t (Suc j) -\n                            discrete_evolution \\<psi> (t (Suc j)) (t j)\n                             (x t j)) +\n                          (norm\n                            (x t j -\n                             grid_function (discrete_evolution \\<psi>) x0 t\n                              j) +\n                           stepsize j *\n                           (L *\n                            dist (x t j)\n                             (grid_function (discrete_evolution \\<psi>) x0 t\n                               j)))\n\ngoal (1 subgoal):\n 1. dist (x t (Suc j))\n     (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n    \\<le> norm\n           (x t (Suc j) -\n            discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n          (1 + stepsize j * L) *\n          dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)", "using grid_stepsize_nonneg"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>xa y.\n              xa \\<le> y \\<Longrightarrow>\n              norm\n               (x t (Suc j) -\n                discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n              xa\n              \\<le> norm\n                     (x t (Suc j) -\n                      discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n                    y;\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      norm\n       (x t (Suc j) - discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n      (norm (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n       stepsize j * xa)\n      \\<le> norm\n             (x t (Suc j) -\n              discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n            (norm\n              (x t j - grid_function (discrete_evolution \\<psi>) x0 t j) +\n             stepsize j * y)\\<rbrakk>\n  \\<Longrightarrow> dist (x t (Suc j))\n                     (grid_function (discrete_evolution \\<psi>) x0 t\n                       (Suc j))\n                    \\<le> norm\n                           (x t (Suc j) -\n                            discrete_evolution \\<psi> (t (Suc j)) (t j)\n                             (x t j)) +\n                          (norm\n                            (x t j -\n                             grid_function (discrete_evolution \\<psi>) x0 t\n                              j) +\n                           stepsize j *\n                           (L *\n                            dist (x t j)\n                             (grid_function (discrete_evolution \\<psi>) x0 t\n                               j)))\n  0 \\<le> stepsize ?j\n\ngoal (1 subgoal):\n 1. dist (x t (Suc j))\n     (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n    \\<le> norm\n           (x t (Suc j) -\n            discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n          (1 + stepsize j * L) *\n          dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)", "by (auto simp: algebra_simps mult_right_mono dist_norm)"], ["proof (state)\nthis:\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n  \\<le> norm\n         (x t (Suc j) -\n          discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n        (1 + stepsize j * L) *\n        dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "also"], ["proof (state)\nthis:\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n  \\<le> norm\n         (x t (Suc j) -\n          discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j)) +\n        (1 + stepsize j * L) *\n        dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "have \"norm (x t (Suc j) - (discrete_evolution \\<psi>) (t (Suc j)) (t j) (x t j)) \\<le>\n    B * stepsize j ^ (p + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (x t (Suc j) - discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j))\n    \\<le> B * stepsize j ^ (p + 1)", "using consistence_error[OF \\<open>t (Suc j) \\<le> T\\<close>]"], ["proof (prove)\nusing this:\n  dist (x t (Suc j)) (discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j))\n  \\<le> B * stepsize j ^ (p + 1)\n\ngoal (1 subgoal):\n 1. norm (x t (Suc j) - discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j))\n    \\<le> B * stepsize j ^ (p + 1)", "by (simp add: dist_norm)"], ["proof (state)\nthis:\n  norm (x t (Suc j) - discrete_evolution \\<psi> (t (Suc j)) (t j) (x t j))\n  \\<le> B * stepsize j ^ (p + 1)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "finally"], ["proof (chain)\npicking this:\n  (\\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      xa +\n      (1 + stepsize j * L) *\n      dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n      \\<le> y +\n            (1 + stepsize j * L) *\n            dist (x t j)\n             (grid_function (discrete_evolution \\<psi>) x0 t\n               j)) \\<Longrightarrow>\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n  \\<le> B * stepsize j ^ (p + 1) +\n        (1 + stepsize j * L) *\n        dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)", "have rec:\n    \"dist (x t (Suc j)) (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n      \\<le> B * stepsize j ^ (p + 1) +\n        (1 + stepsize j * L) *\n        dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\""], ["proof (prove)\nusing this:\n  (\\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      xa +\n      (1 + stepsize j * L) *\n      dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n      \\<le> y +\n            (1 + stepsize j * L) *\n            dist (x t j)\n             (grid_function (discrete_evolution \\<psi>) x0 t\n               j)) \\<Longrightarrow>\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n  \\<le> B * stepsize j ^ (p + 1) +\n        (1 + stepsize j * L) *\n        dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n\ngoal (1 subgoal):\n 1. dist (x t (Suc j))\n     (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n    \\<le> B * stepsize j ^ (p + 1) +\n          (1 + stepsize j * L) *\n          dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)", "by simp"], ["proof (state)\nthis:\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n  \\<le> B * stepsize j ^ (p + 1) +\n        (1 + stepsize j * L) *\n        dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "also"], ["proof (state)\nthis:\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n  \\<le> B * stepsize j ^ (p + 1) +\n        (1 + stepsize j * L) *\n        dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "have \"... \\<le> B * stepsize j ^ (p + 1) +\n    (1 + stepsize j * L) * (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B * stepsize j ^ (p + 1) +\n    (1 + stepsize j * L) *\n    dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n    \\<le> B * stepsize j ^ (p + 1) +\n          (1 + stepsize j * L) *\n          (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)", "using \\<open>B \\<ge> 0\\<close> IH1 IH2 \\<open>t (Suc j) \\<le> T\\<close> \\<open>0\\<le>L\\<close> grid_stepsize_nonneg"], ["proof (prove)\nusing this:\n  0 \\<le> B\n  max_stepsize j\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (T - t 0) + 1) - 1))\n  dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n  \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n  t (Suc j) \\<le> T\n  0 \\<le> L\n  0 \\<le> stepsize ?j\n\ngoal (1 subgoal):\n 1. B * stepsize j ^ (p + 1) +\n    (1 + stepsize j * L) *\n    dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n    \\<le> B * stepsize j ^ (p + 1) +\n          (1 + stepsize j * L) *\n          (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)", "by (intro add_mono mult_left_mono) auto"], ["proof (state)\nthis:\n  B * stepsize j ^ (p + 1) +\n  (1 + stepsize j * L) *\n  dist (x t j) (grid_function (discrete_evolution \\<psi>) x0 t j)\n  \\<le> B * stepsize j ^ (p + 1) +\n        (1 + stepsize j * L) *\n        (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "finally"], ["proof (chain)\npicking this:\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n  \\<le> B * stepsize j ^ (p + 1) +\n        (1 + stepsize j * L) *\n        (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)", "have \"dist (x t (Suc j)) (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n    \\<le> B * stepsize j ^ (p + 1) +\n    (1 + stepsize j * L) * (B / L * (exp (L * (t j - t 0) + 1) - 1) *\n      max_stepsize j ^ p)\""], ["proof (prove)\nusing this:\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n  \\<le> B * stepsize j ^ (p + 1) +\n        (1 + stepsize j * L) *\n        (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)\n\ngoal (1 subgoal):\n 1. dist (x t (Suc j))\n     (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n    \\<le> B * stepsize j ^ (p + 1) +\n          (1 + stepsize j * L) *\n          (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)", "."], ["proof (state)\nthis:\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n  \\<le> B * stepsize j ^ (p + 1) +\n        (1 + stepsize j * L) *\n        (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "also"], ["proof (state)\nthis:\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n  \\<le> B * stepsize j ^ (p + 1) +\n        (1 + stepsize j * L) *\n        (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "have \"... \\<le> B * stepsize j * max_stepsize j ^ p +\n    (1 + stepsize j * L) *\n    (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B * stepsize j ^ (p + 1) +\n    (1 + stepsize j * L) *\n    (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)\n    \\<le> B * stepsize j * max_stepsize j ^ p +\n          (1 + stepsize j * L) *\n          (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)", "using grid_stepsize_nonneg \\<open>B \\<ge> 0\\<close> grid"], ["proof (prove)\nusing this:\n  0 \\<le> stepsize ?j\n  0 \\<le> B\n  t ?i \\<le> t (Suc ?i)\n\ngoal (1 subgoal):\n 1. B * stepsize j ^ (p + 1) +\n    (1 + stepsize j * L) *\n    (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)\n    \\<le> B * stepsize j * max_stepsize j ^ p +\n          (1 + stepsize j * L) *\n          (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)", "by (auto intro!: mult_left_mono power_mono\n      simp add: max_stepsize_def field_simps)"], ["proof (state)\nthis:\n  B * stepsize j ^ (p + 1) +\n  (1 + stepsize j * L) *\n  (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)\n  \\<le> B * stepsize j * max_stepsize j ^ p +\n        (1 + stepsize j * L) *\n        (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "also"], ["proof (state)\nthis:\n  B * stepsize j ^ (p + 1) +\n  (1 + stepsize j * L) *\n  (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)\n  \\<le> B * stepsize j * max_stepsize j ^ p +\n        (1 + stepsize j * L) *\n        (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "have \"... = max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n      (exp (L * (t j - t 0) + 1))\n    - max_stepsize j ^ p * B / L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B * stepsize j * max_stepsize j ^ p +\n    (1 + stepsize j * L) *\n    (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p) =\n    max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n    exp (L * (t j - t 0) + 1) -\n    max_stepsize j ^ p * B / L", "using \\<open>B \\<ge> 0\\<close> grid_stepsize_nonneg \\<open>p > 0\\<close> \\<open>L\\<ge>0\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> B\n  0 \\<le> stepsize ?j\n  0 < p\n  0 \\<le> L\n\ngoal (1 subgoal):\n 1. B * stepsize j * max_stepsize j ^ p +\n    (1 + stepsize j * L) *\n    (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p) =\n    max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n    exp (L * (t j - t 0) + 1) -\n    max_stepsize j ^ p * B / L", "apply (cases \"L \\<noteq> 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 \\<le> B; \\<And>j. 0 \\<le> stepsize j; 0 < p; 0 \\<le> L;\n     L \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> B * stepsize j * max_stepsize j ^ p +\n                      (1 + stepsize j * L) *\n                      (B / L * (exp (L * (t j - t 0) + 1) - 1) *\n                       max_stepsize j ^ p) =\n                      max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n                      exp (L * (t j - t 0) + 1) -\n                      max_stepsize j ^ p * B / L\n 2. \\<lbrakk>0 \\<le> B; \\<And>j. 0 \\<le> stepsize j; 0 < p; 0 \\<le> L;\n     \\<not> L \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> B * stepsize j * max_stepsize j ^ p +\n                      (1 + stepsize j * L) *\n                      (B / L * (exp (L * (t j - t 0) + 1) - 1) *\n                       max_stepsize j ^ p) =\n                      max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n                      exp (L * (t j - t 0) + 1) -\n                      max_stepsize j ^ p * B / L", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> B; \\<And>j. 0 \\<le> stepsize j; 0 < p; 0 \\<le> L;\n     L \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> B * stepsize j * max_stepsize j ^ p +\n                      (1 + stepsize j * L) *\n                      (B / L * (exp (L * (t j - t 0) + 1) - 1) *\n                       max_stepsize j ^ p) =\n                      max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n                      exp (L * (t j - t 0) + 1) -\n                      max_stepsize j ^ p * B / L", "by (simp add: field_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> B; \\<And>j. 0 \\<le> stepsize j; 0 < p; 0 \\<le> L;\n     \\<not> L \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> B * stepsize j * max_stepsize j ^ p +\n                      (1 + stepsize j * L) *\n                      (B / L * (exp (L * (t j - t 0) + 1) - 1) *\n                       max_stepsize j ^ p) =\n                      max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n                      exp (L * (t j - t 0) + 1) -\n                      max_stepsize j ^ p * B / L", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> B; \\<And>j. 0 \\<le> stepsize j; 0 < p; 0 \\<le> L;\n     \\<not> L \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> B * stepsize j * max_stepsize j ^ p +\n                      (1 + stepsize j * L) *\n                      (B / L * (exp (L * (t j - t 0) + 1) - 1) *\n                       max_stepsize j ^ p) =\n                      max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n                      exp (L * (t j - t 0) + 1) -\n                      max_stepsize j ^ p * B / L", "apply (cases \"max_stepsize j = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 \\<le> B; \\<And>j. 0 \\<le> stepsize j; 0 < p; 0 \\<le> L;\n     \\<not> L \\<noteq> 0; max_stepsize j = 0\\<rbrakk>\n    \\<Longrightarrow> B * stepsize j * max_stepsize j ^ p +\n                      (1 + stepsize j * L) *\n                      (B / L * (exp (L * (t j - t 0) + 1) - 1) *\n                       max_stepsize j ^ p) =\n                      max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n                      exp (L * (t j - t 0) + 1) -\n                      max_stepsize j ^ p * B / L\n 2. \\<lbrakk>0 \\<le> B; \\<And>j. 0 \\<le> stepsize j; 0 < p; 0 \\<le> L;\n     \\<not> L \\<noteq> 0; max_stepsize j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> B * stepsize j * max_stepsize j ^ p +\n                      (1 + stepsize j * L) *\n                      (B / L * (exp (L * (t j - t 0) + 1) - 1) *\n                       max_stepsize j ^ p) =\n                      max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n                      exp (L * (t j - t 0) + 1) -\n                      max_stepsize j ^ p * B / L", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> B; \\<And>j. 0 \\<le> stepsize j; 0 < p; 0 \\<le> L;\n     \\<not> L \\<noteq> 0; max_stepsize j = 0\\<rbrakk>\n    \\<Longrightarrow> B * stepsize j * max_stepsize j ^ p +\n                      (1 + stepsize j * L) *\n                      (B / L * (exp (L * (t j - t 0) + 1) - 1) *\n                       max_stepsize j ^ p) =\n                      max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n                      exp (L * (t j - t 0) + 1) -\n                      max_stepsize j ^ p * B / L", "by simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> B; \\<And>j. 0 \\<le> stepsize j; 0 < p; 0 \\<le> L;\n     \\<not> L \\<noteq> 0; max_stepsize j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> B * stepsize j * max_stepsize j ^ p +\n                      (1 + stepsize j * L) *\n                      (B / L * (exp (L * (t j - t 0) + 1) - 1) *\n                       max_stepsize j ^ p) =\n                      max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n                      exp (L * (t j - t 0) + 1) -\n                      max_stepsize j ^ p * B / L", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> B; \\<And>j. 0 \\<le> stepsize j; 0 < p; 0 \\<le> L;\n     \\<not> L \\<noteq> 0; max_stepsize j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> B * stepsize j * max_stepsize j ^ p +\n                      (1 + stepsize j * L) *\n                      (B / L * (exp (L * (t j - t 0) + 1) - 1) *\n                       max_stepsize j ^ p) =\n                      max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n                      exp (L * (t j - t 0) + 1) -\n                      max_stepsize j ^ p * B / L", "by (metis IH1 abs_not_less_zero abs_of_pos div_0 less_eq_real_def max_stepsize_nonneg\n            mult_zero_right real_root_zero)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  B * stepsize j * max_stepsize j ^ p +\n  (1 + stepsize j * L) *\n  (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p) =\n  max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n  exp (L * (t j - t 0) + 1) -\n  max_stepsize j ^ p * B / L\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "also"], ["proof (state)\nthis:\n  B * stepsize j * max_stepsize j ^ p +\n  (1 + stepsize j * L) *\n  (B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p) =\n  max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n  exp (L * (t j - t 0) + 1) -\n  max_stepsize j ^ p * B / L\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "have \"B * (max_stepsize j ^ p * (exp (L * (t j - t 0) + 1) *\n    (1 + L * (t (Suc j) - t j)))) / L\n    \\<le> B * (max_stepsize j ^ p * exp (L * (t (Suc j) - t 0) + 1)) / L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B *\n    (max_stepsize j ^ p *\n     (exp (L * (t j - t 0) + 1) * (1 + L * (t (Suc j) - t j)))) /\n    L\n    \\<le> B * (max_stepsize j ^ p * exp (L * (t (Suc j) - t 0) + 1)) / L", "using \\<open>L \\<ge> 0\\<close> \\<open>B \\<ge> 0\\<close> max_stepsize_nonneg"], ["proof (prove)\nusing this:\n  0 \\<le> L\n  0 \\<le> B\n  0 \\<le> max_stepsize ?n\n\ngoal (1 subgoal):\n 1. B *\n    (max_stepsize j ^ p *\n     (exp (L * (t j - t 0) + 1) * (1 + L * (t (Suc j) - t j)))) /\n    L\n    \\<le> B * (max_stepsize j ^ p * exp (L * (t (Suc j) - t 0) + 1)) / L", "proof (intro divide_right_mono mult_left_mono)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> exp (L * (t j - t 0) + 1) *\n                      (1 + L * (t (Suc j) - t j))\n                      \\<le> exp (L * (t (Suc j) - t 0) + 1)\n 2. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> max_stepsize j ^ p\n 3. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> B\n 4. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> L", "have \"exp (L * (t j - t 0) + 1) * (1 + L * (t (Suc j) - t j)) \\<le>\n      exp (L * (t j - t 0) + 1) * exp (stepsize j * L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (L * (t j - t 0) + 1) * (1 + L * (t (Suc j) - t j))\n    \\<le> exp (L * (t j - t 0) + 1) * exp (stepsize j * L)", "unfolding stepsize_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (L * (t j - t 0) + 1) * (1 + L * stepsize j)\n    \\<le> exp (L * (t j - t 0) + 1) * exp (stepsize j * L)", "by (auto simp add: ac_simps)"], ["proof (state)\nthis:\n  exp (L * (t j - t 0) + 1) * (1 + L * (t (Suc j) - t j))\n  \\<le> exp (L * (t j - t 0) + 1) * exp (stepsize j * L)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> exp (L * (t j - t 0) + 1) *\n                      (1 + L * (t (Suc j) - t j))\n                      \\<le> exp (L * (t (Suc j) - t 0) + 1)\n 2. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> max_stepsize j ^ p\n 3. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> B\n 4. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> L", "also"], ["proof (state)\nthis:\n  exp (L * (t j - t 0) + 1) * (1 + L * (t (Suc j) - t j))\n  \\<le> exp (L * (t j - t 0) + 1) * exp (stepsize j * L)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> exp (L * (t j - t 0) + 1) *\n                      (1 + L * (t (Suc j) - t j))\n                      \\<le> exp (L * (t (Suc j) - t 0) + 1)\n 2. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> max_stepsize j ^ p\n 3. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> B\n 4. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> L", "have \"... \\<le> exp (L * (t (Suc j) - t 0) + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (L * (t j - t 0) + 1) * exp (stepsize j * L)\n    \\<le> exp (L * (t (Suc j) - t 0) + 1)", "by (simp add: mult_exp_exp stepsize_def algebra_simps)"], ["proof (state)\nthis:\n  exp (L * (t j - t 0) + 1) * exp (stepsize j * L)\n  \\<le> exp (L * (t (Suc j) - t 0) + 1)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> exp (L * (t j - t 0) + 1) *\n                      (1 + L * (t (Suc j) - t j))\n                      \\<le> exp (L * (t (Suc j) - t 0) + 1)\n 2. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> max_stepsize j ^ p\n 3. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> B\n 4. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> L", "finally"], ["proof (chain)\npicking this:\n  exp (L * (t j - t 0) + 1) * (1 + L * (t (Suc j) - t j))\n  \\<le> exp (L * (t (Suc j) - t 0) + 1)", "show \"exp (L * (t j - t 0) + 1) * (1 + L * (t (Suc j) - t j)) \\<le>\n      exp (L * (t (Suc j) - t 0) + 1)\""], ["proof (prove)\nusing this:\n  exp (L * (t j - t 0) + 1) * (1 + L * (t (Suc j) - t j))\n  \\<le> exp (L * (t (Suc j) - t 0) + 1)\n\ngoal (1 subgoal):\n 1. exp (L * (t j - t 0) + 1) * (1 + L * (t (Suc j) - t j))\n    \\<le> exp (L * (t (Suc j) - t 0) + 1)", "."], ["proof (state)\nthis:\n  exp (L * (t j - t 0) + 1) * (1 + L * (t (Suc j) - t j))\n  \\<le> exp (L * (t (Suc j) - t 0) + 1)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> max_stepsize j ^ p\n 2. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> B\n 3. \\<lbrakk>0 \\<le> L; 0 \\<le> B; \\<And>n. 0 \\<le> max_stepsize n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> L", "qed simp_all"], ["proof (state)\nthis:\n  B *\n  (max_stepsize j ^ p *\n   (exp (L * (t j - t 0) + 1) * (1 + L * (t (Suc j) - t j)))) /\n  L\n  \\<le> B * (max_stepsize j ^ p * exp (L * (t (Suc j) - t 0) + 1)) / L\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "hence \"max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n    exp (L * (t j - t 0) + 1) \\<le>\n    max_stepsize j ^ p * B / L * exp (L * (t (Suc j) - t 0) + 1)\""], ["proof (prove)\nusing this:\n  B *\n  (max_stepsize j ^ p *\n   (exp (L * (t j - t 0) + 1) * (1 + L * (t (Suc j) - t j)))) /\n  L\n  \\<le> B * (max_stepsize j ^ p * exp (L * (t (Suc j) - t 0) + 1)) / L\n\ngoal (1 subgoal):\n 1. max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n    exp (L * (t j - t 0) + 1)\n    \\<le> max_stepsize j ^ p * B / L * exp (L * (t (Suc j) - t 0) + 1)", "by (simp add: stepsize_def ac_simps)"], ["proof (state)\nthis:\n  max_stepsize j ^ p * B / L * (1 + stepsize j * L) *\n  exp (L * (t j - t 0) + 1)\n  \\<le> max_stepsize j ^ p * B / L * exp (L * (t (Suc j) - t 0) + 1)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x - max_stepsize j ^ p * B / L\n      \\<le> y - max_stepsize j ^ p * B / L) \\<Longrightarrow>\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n  \\<le> max_stepsize j ^ p * B / L * exp (L * (t (Suc j) - t 0) + 1) -\n        max_stepsize j ^ p * B / L", "have \"dist (x t (Suc j)) (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n    \\<le> B / L * (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n    max_stepsize j ^ p\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x - max_stepsize j ^ p * B / L\n      \\<le> y - max_stepsize j ^ p * B / L) \\<Longrightarrow>\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n  \\<le> max_stepsize j ^ p * B / L * exp (L * (t (Suc j) - t 0) + 1) -\n        max_stepsize j ^ p * B / L\n\ngoal (1 subgoal):\n 1. dist (x t (Suc j))\n     (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n    \\<le> B / L * (exp (L * (t (Suc j) - t 0) + 1) - 1) * max_stepsize j ^ p", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n  \\<le> B / L * (exp (L * (t (Suc j) - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "also"], ["proof (state)\nthis:\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n  \\<le> B / L * (exp (L * (t (Suc j) - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "have \"... \\<le> B / L * (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n    max_stepsize (Suc j) ^ p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B / L * (exp (L * (t (Suc j) - t 0) + 1) - 1) * max_stepsize j ^ p\n    \\<le> B / L * (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n          max_stepsize (Suc j) ^ p", "using \\<open>B\\<ge>0\\<close>\\<open>L\\<ge>0\\<close> max_stepsize_nonneg"], ["proof (prove)\nusing this:\n  0 \\<le> B\n  0 \\<le> L\n  0 \\<le> max_stepsize ?n\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * (t (Suc j) - t 0) + 1) - 1) * max_stepsize j ^ p\n    \\<le> B / L * (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n          max_stepsize (Suc j) ^ p", "by (intro mult_left_mono power_mono max_stepsize_mono) \n       (auto intro!: divide_nonneg_nonneg mult_nonneg_nonneg add_nonneg_nonneg grid_mono)"], ["proof (state)\nthis:\n  B / L * (exp (L * (t (Suc j) - t 0) + 1) - 1) * max_stepsize j ^ p\n  \\<le> B / L * (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n        max_stepsize (Suc j) ^ p\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>t j \\<le> T;\n                 max_stepsize j\n                 \\<le> root p\n                        (\\<bar>r\\<bar> * L / B /\n                         (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n                \\<Longrightarrow> dist (x t j)\n                                   (grid_function\n                                     (discrete_evolution \\<psi>) x0 t j)\n                                  \\<le> B / L *\n  (exp (L * (t j - t 0) + 1) - 1) *\n  max_stepsize j ^ p;\n        t (Suc j) \\<le> T;\n        max_stepsize (Suc j)\n        \\<le> root p\n               (\\<bar>r\\<bar> * L / B /\n                (exp (L * (T - t 0) + 1) - 1))\\<rbrakk>\n       \\<Longrightarrow> dist (x t (Suc j))\n                          (grid_function (discrete_evolution \\<psi>) x0 t\n                            (Suc j))\n                         \\<le> B / L *\n                               (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n                               max_stepsize (Suc j) ^ p", "finally"], ["proof (chain)\npicking this:\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n  \\<le> B / L * (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n        max_stepsize (Suc j) ^ p", "show ?case"], ["proof (prove)\nusing this:\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n  \\<le> B / L * (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n        max_stepsize (Suc j) ^ p\n\ngoal (1 subgoal):\n 1. dist (x t (Suc j))\n     (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n    \\<le> B / L * (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n          max_stepsize (Suc j) ^ p", "."], ["proof (state)\nthis:\n  dist (x t (Suc j))\n   (grid_function (discrete_evolution \\<psi>) x0 t (Suc j))\n  \\<le> B / L * (exp (L * (t (Suc j) - t 0) + 1) - 1) *\n        max_stepsize (Suc j) ^ p\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Consistency of order p implies convergence of order p \\label{sec:osm-cons-imp-conv}\\<close>"], ["", "locale consistent_one_step =\n  fixes t0 t1 and x::\"real \\<Rightarrow> 'a::euclidean_space\" and incr p B r L\n  assumes order_pos: \"p > 0\"\n  assumes consistent_nonneg: \"B \\<ge> 0\"\n  assumes consistent: \"\\<And>s. s \\<in> {t0..t1} \\<Longrightarrow> consistent x s t1 B p incr\"\n  assumes lipschitz_nonneg: \"L \\<ge> 0\"\n  assumes lipschitz_incr: \"\\<And>s h. s \\<in> {t0..t1} \\<Longrightarrow> h \\<in> {0..t1 - s} \\<Longrightarrow>\n    L-lipschitz_on (cball (x s) \\<bar>r\\<bar>) (\\<lambda>x. incr h s x)\""], ["", "locale max_step = grid +\n  fixes t1 p L B r\n  assumes max_step: \"\\<And>j. t j \\<le> t1 \\<Longrightarrow> max_stepsize j \\<le>\n    root p (\\<bar>r\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\"\nbegin"], ["", "lemma max_step_mono_r:\n  assumes \"\\<bar>s\\<bar> \\<ge> \\<bar>r\\<bar>\" \"L \\<ge> 0\" \"B \\<ge> 0\" \"t1 \\<ge> t 0\" \"0 < p\" \"t j \\<le> t1\"\n  shows \"max_stepsize j \\<le>\n    root p (\\<bar>s\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_stepsize j\n    \\<le> root p (\\<bar>s\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. max_stepsize j\n    \\<le> root p (\\<bar>s\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))", "from max_step \\<open>t j \\<le> t1\\<close>"], ["proof (chain)\npicking this:\n  t ?j \\<le> t1 \\<Longrightarrow>\n  max_stepsize ?j\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\n  t j \\<le> t1", "have \"max_stepsize j \\<le>\n    root p (\\<bar>r\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\""], ["proof (prove)\nusing this:\n  t ?j \\<le> t1 \\<Longrightarrow>\n  max_stepsize ?j\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\n  t j \\<le> t1\n\ngoal (1 subgoal):\n 1. max_stepsize j\n    \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))", "."], ["proof (state)\nthis:\n  max_stepsize j\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\n\ngoal (1 subgoal):\n 1. max_stepsize j\n    \\<le> root p (\\<bar>s\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))", "also"], ["proof (state)\nthis:\n  max_stepsize j\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\n\ngoal (1 subgoal):\n 1. max_stepsize j\n    \\<le> root p (\\<bar>s\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))", "have \"... \\<le> root p (\\<bar>s\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. root p (\\<bar>r\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\n    \\<le> root p (\\<bar>s\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))", "using assms"], ["proof (prove)\nusing this:\n  \\<bar>r\\<bar> \\<le> \\<bar>s\\<bar>\n  0 \\<le> L\n  0 \\<le> B\n  t 0 \\<le> t1\n  0 < p\n  t j \\<le> t1\n\ngoal (1 subgoal):\n 1. root p (\\<bar>r\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\n    \\<le> root p (\\<bar>s\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))", "apply (cases \"B = 0\", force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<bar>r\\<bar> \\<le> \\<bar>s\\<bar>; 0 \\<le> L; 0 \\<le> B;\n     t 0 \\<le> t1; 0 < p; t j \\<le> t1; B \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> root p\n                       (\\<bar>r\\<bar> * L / B /\n                        (exp (L * (t1 - t 0) + 1) - 1))\n                      \\<le> root p\n                             (\\<bar>s\\<bar> * L / B /\n                              (exp (L * (t1 - t 0) + 1) - 1))", "apply (cases \"L = 0\", force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<bar>r\\<bar> \\<le> \\<bar>s\\<bar>; 0 \\<le> L; 0 \\<le> B;\n     t 0 \\<le> t1; 0 < p; t j \\<le> t1; B \\<noteq> 0; L \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> root p\n                       (\\<bar>r\\<bar> * L / B /\n                        (exp (L * (t1 - t 0) + 1) - 1))\n                      \\<le> root p\n                             (\\<bar>s\\<bar> * L / B /\n                              (exp (L * (t1 - t 0) + 1) - 1))", "by (auto simp add: mult_le_cancel_left1\n             intro!: divide_right_mono add_increasing mult_left_mono)"], ["proof (state)\nthis:\n  root p (\\<bar>r\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\n  \\<le> root p (\\<bar>s\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\n\ngoal (1 subgoal):\n 1. max_stepsize j\n    \\<le> root p (\\<bar>s\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))", "finally"], ["proof (chain)\npicking this:\n  max_stepsize j\n  \\<le> root p (\\<bar>s\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))", "show \"max_stepsize j \\<le> root p (\\<bar>s\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\""], ["proof (prove)\nusing this:\n  max_stepsize j\n  \\<le> root p (\\<bar>s\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\n\ngoal (1 subgoal):\n 1. max_stepsize j\n    \\<le> root p (\\<bar>s\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))", "."], ["proof (state)\nthis:\n  max_stepsize j\n  \\<le> root p (\\<bar>s\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "locale convergent_one_step = consistent_one_step + max_step +\n  assumes grid_from: \"t0 = t 0\"\nbegin"], ["", "lemma (in convergent_one_step) convergence:\n  assumes \"t j \\<le> t1\"\n  shows \"dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j) \\<le>\n        B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "from order_pos consistent_nonneg lipschitz_nonneg"], ["proof (chain)\npicking this:\n  0 < p\n  0 \\<le> B\n  0 \\<le> L", "have \"p > 0\" \"B \\<ge> 0\" \"L \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 < p\n  0 \\<le> B\n  0 \\<le> L\n\ngoal (1 subgoal):\n 1. 0 < p &&& 0 \\<le> B &&& 0 \\<le> L", "by simp_all"], ["proof (state)\nthis:\n  0 < p\n  0 \\<le> B\n  0 \\<le> L\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "from consistent"], ["proof (chain)\npicking this:\n  ?s \\<in> {t0..t1} \\<Longrightarrow> consistent x ?s t1 B p incr", "have consistence_error: \"dist (x (t j + stepsize j))\n      (discrete_evolution incr (t j + stepsize j) (t j) (x (t j)))\n      \\<le> B * (stepsize j ^ (p + 1))\"\n      if \"t (Suc j) \\<le> t1\" for j :: nat"], ["proof (prove)\nusing this:\n  ?s \\<in> {t0..t1} \\<Longrightarrow> consistent x ?s t1 B p incr\n\ngoal (1 subgoal):\n 1. dist (x (t j + stepsize j))\n     (discrete_evolution incr (t j + stepsize j) (t j) (x (t j)))\n    \\<le> B * stepsize j ^ (p + 1)", "apply (rule consistentD [OF _ grid_stepsize_nonneg])"], ["proof (prove)\ngoal (2 subgoals):\n 1. t j \\<in> {t0..t1}\n 2. t j + stepsize j \\<le> t1", "using \\<open>t (Suc j) \\<le> t1\\<close> grid_mono[of j \"Suc j\"] grid_from grid_interval_notempty"], ["proof (prove)\nusing this:\n  t (Suc j) \\<le> t1\n  j \\<le> Suc j \\<Longrightarrow> t j \\<le> t (Suc j)\n  t0 = t 0\n  t 0 \\<le> t ?n\n\ngoal (2 subgoals):\n 1. t j \\<in> {t0..t1}\n 2. t j + stepsize j \\<le> t1", "by (auto simp add: stepsize_def)"], ["proof (state)\nthis:\n  t (Suc ?j) \\<le> t1 \\<Longrightarrow>\n  dist (x (t ?j + stepsize ?j))\n   (discrete_evolution incr (t ?j + stepsize ?j) (t ?j) (x (t ?j)))\n  \\<le> B * stepsize ?j ^ (p + 1)\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "have lipschitz_grid: \"dist (incr (stepsize j) (t j) (x (t j)))\n    (incr (stepsize j) (t j)\n    (grid_function (discrete_evolution incr) (x (t 0)) t j))\n    \\<le> L *\n    dist (x (t j))\n    (grid_function (discrete_evolution incr) (x (t 0)) t j)\"\n    if \"t (Suc j) \\<le> t1\"\n    and in_K: \"dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j) \\<le> \\<bar>r\\<bar>\"\n    for j :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (incr (stepsize j) (t j) (x (t j)))\n     (incr (stepsize j) (t j)\n       (grid_function (discrete_evolution incr) (x (t 0)) t j))\n    \\<le> L *\n          dist (x (t j))\n           (grid_function (discrete_evolution incr) (x (t 0)) t j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (incr (stepsize j) (t j) (x (t j)))\n     (incr (stepsize j) (t j)\n       (grid_function (discrete_evolution incr) (x (t 0)) t j))\n    \\<le> L *\n          dist (x (t j))\n           (grid_function (discrete_evolution incr) (x (t 0)) t j)", "from in_K"], ["proof (chain)\npicking this:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> \\<bar>r\\<bar>", "have \"stepsize j \\<in> {0..t1 - t j}\""], ["proof (prove)\nusing this:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> \\<bar>r\\<bar>\n\ngoal (1 subgoal):\n 1. stepsize j \\<in> {0..t1 - t j}", "using grid_stepsize_nonneg grid_mono \\<open>t (Suc j) \\<le> t1\\<close>"], ["proof (prove)\nusing this:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> \\<bar>r\\<bar>\n  0 \\<le> stepsize ?j\n  ?j \\<le> ?n \\<Longrightarrow> t ?j \\<le> t ?n\n  t (Suc j) \\<le> t1\n\ngoal (1 subgoal):\n 1. stepsize j \\<in> {0..t1 - t j}", "by (simp add: stepsize_def)"], ["proof (state)\nthis:\n  stepsize j \\<in> {0..t1 - t j}\n\ngoal (1 subgoal):\n 1. dist (incr (stepsize j) (t j) (x (t j)))\n     (incr (stepsize j) (t j)\n       (grid_function (discrete_evolution incr) (x (t 0)) t j))\n    \\<le> L *\n          dist (x (t j))\n           (grid_function (discrete_evolution incr) (x (t 0)) t j)", "moreover"], ["proof (state)\nthis:\n  stepsize j \\<in> {0..t1 - t j}\n\ngoal (1 subgoal):\n 1. dist (incr (stepsize j) (t j) (x (t j)))\n     (incr (stepsize j) (t j)\n       (grid_function (discrete_evolution incr) (x (t 0)) t j))\n    \\<le> L *\n          dist (x (t j))\n           (grid_function (discrete_evolution incr) (x (t 0)) t j)", "have t: \"t j \\<in> {t 0..t1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t j \\<in> {t 0..t1}", "using grid[of j] \\<open>t (Suc j) \\<le> t1\\<close>\n      grid_mono[of j \"Suc j\"] grid_ge_min"], ["proof (prove)\nusing this:\n  t j \\<le> t (Suc j)\n  t (Suc j) \\<le> t1\n  j \\<le> Suc j \\<Longrightarrow> t j \\<le> t (Suc j)\n  t 0 \\<le> t ?j\n\ngoal (1 subgoal):\n 1. t j \\<in> {t 0..t1}", "by simp"], ["proof (state)\nthis:\n  t j \\<in> {t 0..t1}\n\ngoal (1 subgoal):\n 1. dist (incr (stepsize j) (t j) (x (t j)))\n     (incr (stepsize j) (t j)\n       (grid_function (discrete_evolution incr) (x (t 0)) t j))\n    \\<le> L *\n          dist (x (t j))\n           (grid_function (discrete_evolution incr) (x (t 0)) t j)", "moreover"], ["proof (state)\nthis:\n  t j \\<in> {t 0..t1}\n\ngoal (1 subgoal):\n 1. dist (incr (stepsize j) (t j) (x (t j)))\n     (incr (stepsize j) (t j)\n       (grid_function (discrete_evolution incr) (x (t 0)) t j))\n    \\<le> L *\n          dist (x (t j))\n           (grid_function (discrete_evolution incr) (x (t 0)) t j)", "have \"x (t j) \\<in> cball (x (t j)) \\<bar>r\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x (t j) \\<in> cball (x (t j)) \\<bar>r\\<bar>", "by simp"], ["proof (state)\nthis:\n  x (t j) \\<in> cball (x (t j)) \\<bar>r\\<bar>\n\ngoal (1 subgoal):\n 1. dist (incr (stepsize j) (t j) (x (t j)))\n     (incr (stepsize j) (t j)\n       (grid_function (discrete_evolution incr) (x (t 0)) t j))\n    \\<le> L *\n          dist (x (t j))\n           (grid_function (discrete_evolution incr) (x (t 0)) t j)", "moreover"], ["proof (state)\nthis:\n  x (t j) \\<in> cball (x (t j)) \\<bar>r\\<bar>\n\ngoal (1 subgoal):\n 1. dist (incr (stepsize j) (t j) (x (t j)))\n     (incr (stepsize j) (t j)\n       (grid_function (discrete_evolution incr) (x (t 0)) t j))\n    \\<le> L *\n          dist (x (t j))\n           (grid_function (discrete_evolution incr) (x (t 0)) t j)", "have  \"grid_function (discrete_evolution incr) (x (t 0)) t j \\<in>\n      cball (x (t j)) \\<bar>r\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. grid_function (discrete_evolution incr) (x (t 0)) t j\n    \\<in> cball (x (t j)) \\<bar>r\\<bar>", "using in_K mem_cball"], ["proof (prove)\nusing this:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> \\<bar>r\\<bar>\n  (?y \\<in> cball ?x ?e) = (dist ?x ?y \\<le> ?e)\n\ngoal (1 subgoal):\n 1. grid_function (discrete_evolution incr) (x (t 0)) t j\n    \\<in> cball (x (t j)) \\<bar>r\\<bar>", "by blast"], ["proof (state)\nthis:\n  grid_function (discrete_evolution incr) (x (t 0)) t j\n  \\<in> cball (x (t j)) \\<bar>r\\<bar>\n\ngoal (1 subgoal):\n 1. dist (incr (stepsize j) (t j) (x (t j)))\n     (incr (stepsize j) (t j)\n       (grid_function (discrete_evolution incr) (x (t 0)) t j))\n    \\<le> L *\n          dist (x (t j))\n           (grid_function (discrete_evolution incr) (x (t 0)) t j)", "ultimately"], ["proof (chain)\npicking this:\n  stepsize j \\<in> {0..t1 - t j}\n  t j \\<in> {t 0..t1}\n  x (t j) \\<in> cball (x (t j)) \\<bar>r\\<bar>\n  grid_function (discrete_evolution incr) (x (t 0)) t j\n  \\<in> cball (x (t j)) \\<bar>r\\<bar>", "show ?thesis"], ["proof (prove)\nusing this:\n  stepsize j \\<in> {0..t1 - t j}\n  t j \\<in> {t 0..t1}\n  x (t j) \\<in> cball (x (t j)) \\<bar>r\\<bar>\n  grid_function (discrete_evolution incr) (x (t 0)) t j\n  \\<in> cball (x (t j)) \\<bar>r\\<bar>\n\ngoal (1 subgoal):\n 1. dist (incr (stepsize j) (t j) (x (t j)))\n     (incr (stepsize j) (t j)\n       (grid_function (discrete_evolution incr) (x (t 0)) t j))\n    \\<le> L *\n          dist (x (t j))\n           (grid_function (discrete_evolution incr) (x (t 0)) t j)", "using lipschitz_incr grid_from"], ["proof (prove)\nusing this:\n  stepsize j \\<in> {0..t1 - t j}\n  t j \\<in> {t 0..t1}\n  x (t j) \\<in> cball (x (t j)) \\<bar>r\\<bar>\n  grid_function (discrete_evolution incr) (x (t 0)) t j\n  \\<in> cball (x (t j)) \\<bar>r\\<bar>\n  \\<lbrakk>?s \\<in> {t0..t1}; ?h \\<in> {0..t1 - ?s}\\<rbrakk>\n  \\<Longrightarrow> L-lipschitz_on (cball (x ?s) \\<bar>r\\<bar>) (incr ?h ?s)\n  t0 = t 0\n\ngoal (1 subgoal):\n 1. dist (incr (stepsize j) (t j) (x (t j)))\n     (incr (stepsize j) (t j)\n       (grid_function (discrete_evolution incr) (x (t 0)) t j))\n    \\<le> L *\n          dist (x (t j))\n           (grid_function (discrete_evolution incr) (x (t 0)) t j)", "unfolding lipschitz_on_def"], ["proof (prove)\nusing this:\n  stepsize j \\<in> {0..t1 - t j}\n  t j \\<in> {t 0..t1}\n  x (t j) \\<in> cball (x (t j)) \\<bar>r\\<bar>\n  grid_function (discrete_evolution incr) (x (t 0)) t j\n  \\<in> cball (x (t j)) \\<bar>r\\<bar>\n  \\<lbrakk>?s \\<in> {t0..t1}; ?h \\<in> {0..t1 - ?s}\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> L \\<and>\n                    (\\<forall>xa\\<in>cball (x ?s) \\<bar>r\\<bar>.\n                        \\<forall>y\\<in>cball (x ?s) \\<bar>r\\<bar>.\n                           dist (incr ?h ?s xa) (incr ?h ?s y)\n                           \\<le> L * dist xa y)\n  t0 = t 0\n\ngoal (1 subgoal):\n 1. dist (incr (stepsize j) (t j) (x (t j)))\n     (incr (stepsize j) (t j)\n       (grid_function (discrete_evolution incr) (x (t 0)) t j))\n    \\<le> L *\n          dist (x (t j))\n           (grid_function (discrete_evolution incr) (x (t 0)) t j)", "by blast"], ["proof (state)\nthis:\n  dist (incr (stepsize j) (t j) (x (t j)))\n   (incr (stepsize j) (t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j))\n  \\<le> L *\n        dist (x (t j))\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>t (Suc ?j) \\<le> t1;\n   dist (x (t ?j)) (grid_function (discrete_evolution incr) (x (t 0)) t ?j)\n   \\<le> \\<bar>r\\<bar>\\<rbrakk>\n  \\<Longrightarrow> dist (incr (stepsize ?j) (t ?j) (x (t ?j)))\n                     (incr (stepsize ?j) (t ?j)\n                       (grid_function (discrete_evolution incr) (x (t 0)) t\n                         ?j))\n                    \\<le> L *\n                          dist (x (t ?j))\n                           (grid_function (discrete_evolution incr)\n                             (x (t 0)) t ?j)\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "have\n    \"dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j) \\<le>\n    (B / L * (exp (L * (t j - t 0) + 1) - 1)) * max_stepsize j ^ p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p", "using \\<open>p > 0\\<close> \\<open>L \\<ge> 0\\<close> \\<open>B \\<ge> 0\\<close> \\<open>t j \\<le> t1\\<close>\n      max_stepsize_nonneg\n      consistence_error lipschitz_grid"], ["proof (prove)\nusing this:\n  0 < p\n  0 \\<le> L\n  0 \\<le> B\n  t j \\<le> t1\n  0 \\<le> max_stepsize ?n\n  t (Suc ?j) \\<le> t1 \\<Longrightarrow>\n  dist (x (t ?j + stepsize ?j))\n   (discrete_evolution incr (t ?j + stepsize ?j) (t ?j) (x (t ?j)))\n  \\<le> B * stepsize ?j ^ (p + 1)\n  \\<lbrakk>t (Suc ?j) \\<le> t1;\n   dist (x (t ?j)) (grid_function (discrete_evolution incr) (x (t 0)) t ?j)\n   \\<le> \\<bar>r\\<bar>\\<rbrakk>\n  \\<Longrightarrow> dist (incr (stepsize ?j) (t ?j) (x (t ?j)))\n                     (incr (stepsize ?j) (t ?j)\n                       (grid_function (discrete_evolution incr) (x (t 0)) t\n                         ?j))\n                    \\<le> L *\n                          dist (x (t ?j))\n                           (grid_function (discrete_evolution incr)\n                             (x (t 0)) t ?j)\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p", "by (intro error_accumulation[OF max_step]) (auto intro!:\n      divide_nonneg_nonneg mult_nonneg_nonneg zero_le_power grid_mono\n      simp add: lipschitz_on_def stepsize_def)"], ["proof (state)\nthis:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "also"], ["proof (state)\nthis:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "have \"... \\<le>\n    (B / L * (exp (L * (t1 - t 0) + 1) - 1)) * max_stepsize j ^ p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "using \\<open>t j \\<le> t1\\<close> \\<open>0\\<le>L\\<close> \\<open>0\\<le>B\\<close> max_stepsize_nonneg"], ["proof (prove)\nusing this:\n  t j \\<le> t1\n  0 \\<le> L\n  0 \\<le> B\n  0 \\<le> max_stepsize ?n\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "by (auto intro!: divide_right_mono mult_right_mono mult_left_mono)"], ["proof (state)\nthis:\n  B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n  \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "finally"], ["proof (chain)\npicking this:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "by simp"], ["proof (state)\nthis:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Stability \\label{sec:osm-stability}\\<close>"], ["", "locale disturbed_one_step = grid +\n  fixes t1 s s0 x incr p B L\n  assumes initial_error: \"norm s0 \\<le> B / L * (exp 1 - 1) * stepsize 0 ^ p\"\n  assumes error: \"\\<And>j. t (Suc j) \\<le> t1 \\<Longrightarrow>\n  norm (s (stepsize j) (t j)\n  (grid_function (discrete_evolution (\\<lambda>h t x. incr h t x + s h t x))\n    (x (t 0) + s0) t j)) \\<le> B * stepsize j ^ p\""], ["", "locale stable_one_step =\n  consistent_one_step \"t 0\" + disturbed_one_step +\n  max_step t t1 p L B \"r / 2\"\nbegin"], ["", "lemma t0_le: \"t i \\<le> t1 \\<Longrightarrow> t 0 \\<le> t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t i \\<le> t1 \\<Longrightarrow> t 0 \\<le> t1", "by (metis grid_interval_notempty order.trans)"], ["", "lemma max_step_r:\n  assumes \"t j \\<le> t1\"\n  shows \"max_stepsize j \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_stepsize j\n    \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))", "using consistent_nonneg lipschitz_nonneg grid_interval_notempty order_pos assms\n    grid_mono[of 0 j, simplified]"], ["proof (prove)\nusing this:\n  0 \\<le> B\n  0 \\<le> L\n  t 0 \\<le> t ?n\n  0 < p\n  t j \\<le> t1\n  t 0 \\<le> t j\n\ngoal (1 subgoal):\n 1. max_stepsize j\n    \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))", "by (intro max_step_mono_r) (auto simp: t0_le)"], ["", "lemma stability:\n  assumes \"t j \\<le> t1\"\n  defines incrs: \"incrs \\<equiv> \\<lambda>h t x. incr h t x + s h t x\"\n  shows \"dist\n    (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n    (grid_function (discrete_evolution incr) (x (t 0)) t j) \\<le>\n        B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "have \"t 0 \\<le> t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t 0 \\<le> t1", "by (metis assms(1) grid_ge_min order_trans)"], ["proof (state)\nthis:\n  t 0 \\<le> t1\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "have error: \"norm (stepsize j *\\<^sub>R s (stepsize j) (t j)\n        (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n      \\<le> B * stepsize j ^ (p + 1)\"\n    if \"t (Suc j) \\<le> t1\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm\n     (stepsize j *\\<^sub>R\n      s (stepsize j) (t j)\n       (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n    \\<le> B * stepsize j ^ (p + 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. norm\n     (stepsize j *\\<^sub>R\n      s (stepsize j) (t j)\n       (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n    \\<le> B * stepsize j ^ (p + 1)", "from error[OF that]"], ["proof (chain)\npicking this:\n  norm\n   (s (stepsize j) (t j)\n     (grid_function\n       (discrete_evolution (\\<lambda>h t x. incr h t x + s h t x))\n       (x (t 0) + s0) t j))\n  \\<le> B * stepsize j ^ p", "have \"stepsize j * norm (s (stepsize j) (t j)\n        (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n       \\<le> stepsize j * (B * stepsize j ^ p)\""], ["proof (prove)\nusing this:\n  norm\n   (s (stepsize j) (t j)\n     (grid_function\n       (discrete_evolution (\\<lambda>h t x. incr h t x + s h t x))\n       (x (t 0) + s0) t j))\n  \\<le> B * stepsize j ^ p\n\ngoal (1 subgoal):\n 1. stepsize j *\n    norm\n     (s (stepsize j) (t j)\n       (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n    \\<le> stepsize j * (B * stepsize j ^ p)", "using grid_stepsize_nonneg"], ["proof (prove)\nusing this:\n  norm\n   (s (stepsize j) (t j)\n     (grid_function\n       (discrete_evolution (\\<lambda>h t x. incr h t x + s h t x))\n       (x (t 0) + s0) t j))\n  \\<le> B * stepsize j ^ p\n  0 \\<le> stepsize ?j\n\ngoal (1 subgoal):\n 1. stepsize j *\n    norm\n     (s (stepsize j) (t j)\n       (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n    \\<le> stepsize j * (B * stepsize j ^ p)", "by (auto intro: mult_left_mono simp: incrs)"], ["proof (state)\nthis:\n  stepsize j *\n  norm\n   (s (stepsize j) (t j)\n     (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n  \\<le> stepsize j * (B * stepsize j ^ p)\n\ngoal (1 subgoal):\n 1. norm\n     (stepsize j *\\<^sub>R\n      s (stepsize j) (t j)\n       (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n    \\<le> B * stepsize j ^ (p + 1)", "then"], ["proof (chain)\npicking this:\n  stepsize j *\n  norm\n   (s (stepsize j) (t j)\n     (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n  \\<le> stepsize j * (B * stepsize j ^ p)", "show ?thesis"], ["proof (prove)\nusing this:\n  stepsize j *\n  norm\n   (s (stepsize j) (t j)\n     (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n  \\<le> stepsize j * (B * stepsize j ^ p)\n\ngoal (1 subgoal):\n 1. norm\n     (stepsize j *\\<^sub>R\n      s (stepsize j) (t j)\n       (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n    \\<le> B * stepsize j ^ (p + 1)", "using grid_stepsize_nonneg"], ["proof (prove)\nusing this:\n  stepsize j *\n  norm\n   (s (stepsize j) (t j)\n     (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n  \\<le> stepsize j * (B * stepsize j ^ p)\n  0 \\<le> stepsize ?j\n\ngoal (1 subgoal):\n 1. norm\n     (stepsize j *\\<^sub>R\n      s (stepsize j) (t j)\n       (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n    \\<le> B * stepsize j ^ (p + 1)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  norm\n   (stepsize j *\\<^sub>R\n    s (stepsize j) (t j)\n     (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n  \\<le> B * stepsize j ^ (p + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t (Suc ?j) \\<le> t1 \\<Longrightarrow>\n  norm\n   (stepsize ?j *\\<^sub>R\n    s (stepsize ?j) (t ?j)\n     (grid_function (discrete_evolution incrs) (x (t 0) + s0) t ?j))\n  \\<le> B * stepsize ?j ^ (p + 1)\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "interpret c1: convergent_one_step \"t 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. convergent_one_step (t 0) t1 x incr p B r L t", "using max_step_r"], ["proof (prove)\nusing this:\n  t ?j \\<le> t1 \\<Longrightarrow>\n  max_stepsize ?j\n  \\<le> root p (\\<bar>r\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\n\ngoal (1 subgoal):\n 1. convergent_one_step (t 0) t1 x incr p B r L t", "by unfold_locales simp_all"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "have incr_in: \"dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j) \\<le> \\<bar>r / 2\\<bar>\"\n    if \"t (Suc j) \\<le> t1\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> \\<bar>r / 2\\<bar>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> \\<bar>r / 2\\<bar>", "from that"], ["proof (chain)\npicking this:\n  t (Suc j) \\<le> t1", "have \"t j \\<le> t1\""], ["proof (prove)\nusing this:\n  t (Suc j) \\<le> t1\n\ngoal (1 subgoal):\n 1. t j \\<le> t1", "using grid_mono[of j \"Suc j\"]"], ["proof (prove)\nusing this:\n  t (Suc j) \\<le> t1\n  j \\<le> Suc j \\<Longrightarrow> t j \\<le> t (Suc j)\n\ngoal (1 subgoal):\n 1. t j \\<le> t1", "by auto"], ["proof (state)\nthis:\n  t j \\<le> t1\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> \\<bar>r / 2\\<bar>", "have \"dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n      \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "using \\<open>t j \\<le> t1\\<close>"], ["proof (prove)\nusing this:\n  t j \\<le> t1\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "by (rule c1.convergence)"], ["proof (state)\nthis:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> \\<bar>r / 2\\<bar>", "also"], ["proof (state)\nthis:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> \\<bar>r / 2\\<bar>", "have \"... \\<le> \\<bar>r/2\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n    \\<le> \\<bar>r / 2\\<bar>", "using max_stepsize_nonneg grid_interval_notempty max_step\n      consistent_nonneg lipschitz_nonneg order_pos\n      grid_mono \\<open>t j \\<le> t1\\<close> t0_le"], ["proof (prove)\nusing this:\n  0 \\<le> max_stepsize ?n\n  t 0 \\<le> t ?n\n  t ?j \\<le> t1 \\<Longrightarrow>\n  max_stepsize ?j\n  \\<le> root p (\\<bar>r / 2\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\n  0 \\<le> B\n  0 \\<le> L\n  0 < p\n  ?j \\<le> ?n \\<Longrightarrow> t ?j \\<le> t ?n\n  t j \\<le> t1\n  t ?i \\<le> t1 \\<Longrightarrow> t 0 \\<le> t1\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n    \\<le> \\<bar>r / 2\\<bar>", "apply (cases \"L = 0\", force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n. 0 \\<le> max_stepsize n; \\<And>n. t 0 \\<le> t n;\n     \\<And>j.\n        t j \\<le> t1 \\<Longrightarrow>\n        max_stepsize j\n        \\<le> root p\n               (\\<bar>r / 2\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1));\n     0 \\<le> B; 0 \\<le> L; 0 < p;\n     \\<And>j n. j \\<le> n \\<Longrightarrow> t j \\<le> t n; t j \\<le> t1;\n     \\<And>i. t i \\<le> t1 \\<Longrightarrow> t 0 \\<le> t1;\n     L \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> B / L * (exp (L * (t1 - t 0) + 1) - 1) *\n                      max_stepsize j ^ p\n                      \\<le> \\<bar>r / 2\\<bar>", "by (intro stepsize_inverse) auto"], ["proof (state)\nthis:\n  B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n  \\<le> \\<bar>r / 2\\<bar>\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> \\<bar>r / 2\\<bar>", "finally"], ["proof (chain)\npicking this:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> \\<bar>r / 2\\<bar>", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> \\<bar>r / 2\\<bar>\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> \\<bar>r / 2\\<bar>", "."], ["proof (state)\nthis:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> \\<bar>r / 2\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t (Suc ?j) \\<le> t1 \\<Longrightarrow>\n  dist (x (t ?j)) (grid_function (discrete_evolution incr) (x (t 0)) t ?j)\n  \\<le> \\<bar>r / 2\\<bar>\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "have incr_in_r: \"dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j) \\<le> \\<bar>r\\<bar>\"\n    if \"t (Suc j) \\<le> t1\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> \\<bar>r\\<bar>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> \\<bar>r\\<bar>", "note incr_in[OF that]"], ["proof (state)\nthis:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> \\<bar>r / 2\\<bar>\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> \\<bar>r\\<bar>", "also"], ["proof (state)\nthis:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> \\<bar>r / 2\\<bar>\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> \\<bar>r\\<bar>", "have \"\\<bar>r/2\\<bar> \\<le> \\<bar>r\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>r / 2\\<bar> \\<le> \\<bar>r\\<bar>", "by simp"], ["proof (state)\nthis:\n  \\<bar>r / 2\\<bar> \\<le> \\<bar>r\\<bar>\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> \\<bar>r\\<bar>", "finally"], ["proof (chain)\npicking this:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> \\<bar>r\\<bar>", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> \\<bar>r\\<bar>\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> \\<bar>r\\<bar>", "."], ["proof (state)\nthis:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> \\<bar>r\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t (Suc ?j) \\<le> t1 \\<Longrightarrow>\n  dist (x (t ?j)) (grid_function (discrete_evolution incr) (x (t 0)) t ?j)\n  \\<le> \\<bar>r\\<bar>\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "have \"dist\n    (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n    (grid_function (discrete_evolution incr) (x (t 0)) t j) \\<le>\n    B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p", "proof (intro error_accumulation[OF max_step])"], ["proof (state)\ngoal (8 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. \\<And>j.\n       \\<lbrakk>t (Suc j) \\<le> t1;\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n        \\<le> \\<bar>r / 2\\<bar>\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incrs)\n                              (x (t 0) + s0) t j))\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incr)\n                              (x (t 0)) t j))\n                         \\<le> L *\n                               dist\n                                (grid_function (discrete_evolution incrs)\n                                  (x (t 0) + s0) t j)\n                                (grid_function (discrete_evolution incr)\n                                  (x (t 0)) t j)\n 4. 0 \\<le> L\n 5. \\<And>j.\n       t (Suc j) \\<le> t1 \\<Longrightarrow>\n       dist\n        (grid_function (discrete_evolution incrs) (x (t 0) + s0) t (Suc j))\n        (discrete_evolution incr (t (Suc j)) (t j)\n          (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n       \\<le> B * stepsize j ^ (p + 1)\n 6. 0 \\<le> B\n 7. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 8. t j \\<le> t1", "fix j"], ["proof (state)\ngoal (8 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. \\<And>j.\n       \\<lbrakk>t (Suc j) \\<le> t1;\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n        \\<le> \\<bar>r / 2\\<bar>\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incrs)\n                              (x (t 0) + s0) t j))\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incr)\n                              (x (t 0)) t j))\n                         \\<le> L *\n                               dist\n                                (grid_function (discrete_evolution incrs)\n                                  (x (t 0) + s0) t j)\n                                (grid_function (discrete_evolution incr)\n                                  (x (t 0)) t j)\n 4. 0 \\<le> L\n 5. \\<And>j.\n       t (Suc j) \\<le> t1 \\<Longrightarrow>\n       dist\n        (grid_function (discrete_evolution incrs) (x (t 0) + s0) t (Suc j))\n        (discrete_evolution incr (t (Suc j)) (t j)\n          (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n       \\<le> B * stepsize j ^ (p + 1)\n 6. 0 \\<le> B\n 7. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 8. t j \\<le> t1", "assume j: \"t (Suc j) \\<le> t1\""], ["proof (state)\nthis:\n  t (Suc j) \\<le> t1\n\ngoal (8 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. \\<And>j.\n       \\<lbrakk>t (Suc j) \\<le> t1;\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n        \\<le> \\<bar>r / 2\\<bar>\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incrs)\n                              (x (t 0) + s0) t j))\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incr)\n                              (x (t 0)) t j))\n                         \\<le> L *\n                               dist\n                                (grid_function (discrete_evolution incrs)\n                                  (x (t 0) + s0) t j)\n                                (grid_function (discrete_evolution incr)\n                                  (x (t 0)) t j)\n 4. 0 \\<le> L\n 5. \\<And>j.\n       t (Suc j) \\<le> t1 \\<Longrightarrow>\n       dist\n        (grid_function (discrete_evolution incrs) (x (t 0) + s0) t (Suc j))\n        (discrete_evolution incr (t (Suc j)) (t j)\n          (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n       \\<le> B * stepsize j ^ (p + 1)\n 6. 0 \\<le> B\n 7. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 8. t j \\<le> t1", "show \"dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t (Suc j))\n      (discrete_evolution incr (t (Suc j)) (t j) (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n      \\<le> B * stepsize j ^ (p + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t (Suc j))\n     (discrete_evolution incr (t (Suc j)) (t j)\n       (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n    \\<le> B * stepsize j ^ (p + 1)", "using error[OF j]"], ["proof (prove)\nusing this:\n  norm\n   (stepsize j *\\<^sub>R\n    s (stepsize j) (t j)\n     (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n  \\<le> B * stepsize j ^ (p + 1)\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t (Suc j))\n     (discrete_evolution incr (t (Suc j)) (t j)\n       (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n    \\<le> B * stepsize j ^ (p + 1)", "by (simp add: incrs discrete_evolution_def[abs_def] dist_norm\n        stepsize_def scaleR_right_distrib)"], ["proof (state)\nthis:\n  dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t (Suc j))\n   (discrete_evolution incr (t (Suc j)) (t j)\n     (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n  \\<le> B * stepsize j ^ (p + 1)\n\ngoal (7 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. \\<And>j.\n       \\<lbrakk>t (Suc j) \\<le> t1;\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n        \\<le> \\<bar>r / 2\\<bar>\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incrs)\n                              (x (t 0) + s0) t j))\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incr)\n                              (x (t 0)) t j))\n                         \\<le> L *\n                               dist\n                                (grid_function (discrete_evolution incrs)\n                                  (x (t 0) + s0) t j)\n                                (grid_function (discrete_evolution incr)\n                                  (x (t 0)) t j)\n 4. 0 \\<le> L\n 5. 0 \\<le> B\n 6. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 7. t j \\<le> t1", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. \\<And>j.\n       \\<lbrakk>t (Suc j) \\<le> t1;\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n        \\<le> \\<bar>r / 2\\<bar>\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incrs)\n                              (x (t 0) + s0) t j))\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incr)\n                              (x (t 0)) t j))\n                         \\<le> L *\n                               dist\n                                (grid_function (discrete_evolution incrs)\n                                  (x (t 0) + s0) t j)\n                                (grid_function (discrete_evolution incr)\n                                  (x (t 0)) t j)\n 4. 0 \\<le> L\n 5. 0 \\<le> B\n 6. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 7. t j \\<le> t1", "fix j"], ["proof (state)\ngoal (7 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. \\<And>j.\n       \\<lbrakk>t (Suc j) \\<le> t1;\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n        \\<le> \\<bar>r / 2\\<bar>\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incrs)\n                              (x (t 0) + s0) t j))\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incr)\n                              (x (t 0)) t j))\n                         \\<le> L *\n                               dist\n                                (grid_function (discrete_evolution incrs)\n                                  (x (t 0) + s0) t j)\n                                (grid_function (discrete_evolution incr)\n                                  (x (t 0)) t j)\n 4. 0 \\<le> L\n 5. 0 \\<le> B\n 6. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 7. t j \\<le> t1", "assume \"t (Suc j) \\<le> t1\""], ["proof (state)\nthis:\n  t (Suc j) \\<le> t1\n\ngoal (7 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. \\<And>j.\n       \\<lbrakk>t (Suc j) \\<le> t1;\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n        \\<le> \\<bar>r / 2\\<bar>\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incrs)\n                              (x (t 0) + s0) t j))\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incr)\n                              (x (t 0)) t j))\n                         \\<le> L *\n                               dist\n                                (grid_function (discrete_evolution incrs)\n                                  (x (t 0) + s0) t j)\n                                (grid_function (discrete_evolution incr)\n                                  (x (t 0)) t j)\n 4. 0 \\<le> L\n 5. 0 \\<le> B\n 6. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 7. t j \\<le> t1", "hence \"t j \\<le> t1\""], ["proof (prove)\nusing this:\n  t (Suc j) \\<le> t1\n\ngoal (1 subgoal):\n 1. t j \\<le> t1", "using grid_mono[of j \"Suc j\"]"], ["proof (prove)\nusing this:\n  t (Suc j) \\<le> t1\n  j \\<le> Suc j \\<Longrightarrow> t j \\<le> t (Suc j)\n\ngoal (1 subgoal):\n 1. t j \\<le> t1", "by simp"], ["proof (state)\nthis:\n  t j \\<le> t1\n\ngoal (7 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. \\<And>j.\n       \\<lbrakk>t (Suc j) \\<le> t1;\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n        \\<le> \\<bar>r / 2\\<bar>\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incrs)\n                              (x (t 0) + s0) t j))\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incr)\n                              (x (t 0)) t j))\n                         \\<le> L *\n                               dist\n                                (grid_function (discrete_evolution incrs)\n                                  (x (t 0) + s0) t j)\n                                (grid_function (discrete_evolution incr)\n                                  (x (t 0)) t j)\n 4. 0 \\<le> L\n 5. 0 \\<le> B\n 6. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 7. t j \\<le> t1", "have\n      \"dist (x (t j)) (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n      \\<le> dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j) +\n      dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n      (grid_function (discrete_evolution incr) (x (t 0)) t j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (x (t j))\n     (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n    \\<le> dist (x (t j))\n           (grid_function (discrete_evolution incr) (x (t 0)) t j) +\n          dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n           (grid_function (discrete_evolution incr) (x (t 0)) t j)", "by (rule dist_triangle2)"], ["proof (state)\nthis:\n  dist (x (t j))\n   (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n  \\<le> dist (x (t j))\n         (grid_function (discrete_evolution incr) (x (t 0)) t j) +\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n\ngoal (7 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. \\<And>j.\n       \\<lbrakk>t (Suc j) \\<le> t1;\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n        \\<le> \\<bar>r / 2\\<bar>\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incrs)\n                              (x (t 0) + s0) t j))\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incr)\n                              (x (t 0)) t j))\n                         \\<le> L *\n                               dist\n                                (grid_function (discrete_evolution incrs)\n                                  (x (t 0) + s0) t j)\n                                (grid_function (discrete_evolution incr)\n                                  (x (t 0)) t j)\n 4. 0 \\<le> L\n 5. 0 \\<le> B\n 6. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 7. t j \\<le> t1", "also"], ["proof (state)\nthis:\n  dist (x (t j))\n   (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n  \\<le> dist (x (t j))\n         (grid_function (discrete_evolution incr) (x (t 0)) t j) +\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n\ngoal (7 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. \\<And>j.\n       \\<lbrakk>t (Suc j) \\<le> t1;\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n        \\<le> \\<bar>r / 2\\<bar>\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incrs)\n                              (x (t 0) + s0) t j))\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incr)\n                              (x (t 0)) t j))\n                         \\<le> L *\n                               dist\n                                (grid_function (discrete_evolution incrs)\n                                  (x (t 0) + s0) t j)\n                                (grid_function (discrete_evolution incr)\n                                  (x (t 0)) t j)\n 4. 0 \\<le> L\n 5. 0 \\<le> B\n 6. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 7. t j \\<le> t1", "have\n      \"dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j) \\<le>\n      B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "using \\<open>t j \\<le> t1\\<close>"], ["proof (prove)\nusing this:\n  t j \\<le> t1\n\ngoal (1 subgoal):\n 1. dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "by (rule c1.convergence)"], ["proof (state)\nthis:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (7 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. \\<And>j.\n       \\<lbrakk>t (Suc j) \\<le> t1;\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n        \\<le> \\<bar>r / 2\\<bar>\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incrs)\n                              (x (t 0) + s0) t j))\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incr)\n                              (x (t 0)) t j))\n                         \\<le> L *\n                               dist\n                                (grid_function (discrete_evolution incrs)\n                                  (x (t 0) + s0) t j)\n                                (grid_function (discrete_evolution incr)\n                                  (x (t 0)) t j)\n 4. 0 \\<le> L\n 5. 0 \\<le> B\n 6. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 7. t j \\<le> t1", "also"], ["proof (state)\nthis:\n  dist (x (t j)) (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (7 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. \\<And>j.\n       \\<lbrakk>t (Suc j) \\<le> t1;\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n        \\<le> \\<bar>r / 2\\<bar>\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incrs)\n                              (x (t 0) + s0) t j))\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incr)\n                              (x (t 0)) t j))\n                         \\<le> L *\n                               dist\n                                (grid_function (discrete_evolution incrs)\n                                  (x (t 0) + s0) t j)\n                                (grid_function (discrete_evolution incr)\n                                  (x (t 0)) t j)\n 4. 0 \\<le> L\n 5. 0 \\<le> B\n 6. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 7. t j \\<le> t1", "have \"... \\<le> \\<bar>r/2\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n    \\<le> \\<bar>r / 2\\<bar>", "using max_stepsize_nonneg grid_interval_notempty max_step\n        consistent_nonneg lipschitz_nonneg order_pos\n        grid_mono \\<open>t j \\<le> t1\\<close> \\<open>t 0 \\<le> t1\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> max_stepsize ?n\n  t 0 \\<le> t ?n\n  t ?j \\<le> t1 \\<Longrightarrow>\n  max_stepsize ?j\n  \\<le> root p (\\<bar>r / 2\\<bar> * L / B / (exp (L * (t1 - t 0) + 1) - 1))\n  0 \\<le> B\n  0 \\<le> L\n  0 < p\n  ?j \\<le> ?n \\<Longrightarrow> t ?j \\<le> t ?n\n  t j \\<le> t1\n  t 0 \\<le> t1\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n    \\<le> \\<bar>r / 2\\<bar>", "by (intro stepsize_inverse) auto"], ["proof (state)\nthis:\n  B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n  \\<le> \\<bar>r / 2\\<bar>\n\ngoal (7 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. \\<And>j.\n       \\<lbrakk>t (Suc j) \\<le> t1;\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n        \\<le> \\<bar>r / 2\\<bar>\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incrs)\n                              (x (t 0) + s0) t j))\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incr)\n                              (x (t 0)) t j))\n                         \\<le> L *\n                               dist\n                                (grid_function (discrete_evolution incrs)\n                                  (x (t 0) + s0) t j)\n                                (grid_function (discrete_evolution incr)\n                                  (x (t 0)) t j)\n 4. 0 \\<le> L\n 5. 0 \\<le> B\n 6. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 7. t j \\<le> t1", "also"], ["proof (state)\nthis:\n  B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n  \\<le> \\<bar>r / 2\\<bar>\n\ngoal (7 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. \\<And>j.\n       \\<lbrakk>t (Suc j) \\<le> t1;\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n        \\<le> \\<bar>r / 2\\<bar>\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incrs)\n                              (x (t 0) + s0) t j))\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incr)\n                              (x (t 0)) t j))\n                         \\<le> L *\n                               dist\n                                (grid_function (discrete_evolution incrs)\n                                  (x (t 0) + s0) t j)\n                                (grid_function (discrete_evolution incr)\n                                  (x (t 0)) t j)\n 4. 0 \\<le> L\n 5. 0 \\<le> B\n 6. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 7. t j \\<le> t1", "assume \"dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n      (grid_function (discrete_evolution incr) (x (t 0)) t j) \\<le> \\<bar>r / 2\\<bar>\""], ["proof (state)\nthis:\n  dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n   (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> \\<bar>r / 2\\<bar>\n\ngoal (7 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. \\<And>j.\n       \\<lbrakk>t (Suc j) \\<le> t1;\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n        \\<le> \\<bar>r / 2\\<bar>\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incrs)\n                              (x (t 0) + s0) t j))\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incr)\n                              (x (t 0)) t j))\n                         \\<le> L *\n                               dist\n                                (grid_function (discrete_evolution incrs)\n                                  (x (t 0) + s0) t j)\n                                (grid_function (discrete_evolution incr)\n                                  (x (t 0)) t j)\n 4. 0 \\<le> L\n 5. 0 \\<le> B\n 6. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 7. t j \\<le> t1", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>xa y.\n              xa \\<le> y \\<Longrightarrow>\n              xa +\n              dist\n               (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n               (grid_function (discrete_evolution incr) (x (t 0)) t j)\n              \\<le> y +\n                    dist\n                     (grid_function (discrete_evolution incrs)\n                       (x (t 0) + s0) t j)\n                     (grid_function (discrete_evolution incr) (x (t 0)) t\n                       j);\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      xa +\n      dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n       (grid_function (discrete_evolution incr) (x (t 0)) t j)\n      \\<le> y +\n            dist\n             (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n             (grid_function (discrete_evolution incr) (x (t 0)) t j);\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      \\<bar>r / 2\\<bar> + x \\<le> \\<bar>r / 2\\<bar> + y\\<rbrakk>\n  \\<Longrightarrow> dist (x (t j))\n                     (grid_function (discrete_evolution incrs)\n                       (x (t 0) + s0) t j)\n                    \\<le> \\<bar>r / 2\\<bar> + \\<bar>r / 2\\<bar>", "have \"dist\n      (x (t j))\n      (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j) \\<le> \\<bar>r\\<bar>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>xa y.\n              xa \\<le> y \\<Longrightarrow>\n              xa +\n              dist\n               (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n               (grid_function (discrete_evolution incr) (x (t 0)) t j)\n              \\<le> y +\n                    dist\n                     (grid_function (discrete_evolution incrs)\n                       (x (t 0) + s0) t j)\n                     (grid_function (discrete_evolution incr) (x (t 0)) t\n                       j);\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      xa +\n      dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n       (grid_function (discrete_evolution incr) (x (t 0)) t j)\n      \\<le> y +\n            dist\n             (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n             (grid_function (discrete_evolution incr) (x (t 0)) t j);\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      \\<bar>r / 2\\<bar> + x \\<le> \\<bar>r / 2\\<bar> + y\\<rbrakk>\n  \\<Longrightarrow> dist (x (t j))\n                     (grid_function (discrete_evolution incrs)\n                       (x (t 0) + s0) t j)\n                    \\<le> \\<bar>r / 2\\<bar> + \\<bar>r / 2\\<bar>\n\ngoal (1 subgoal):\n 1. dist (x (t j))\n     (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n    \\<le> \\<bar>r\\<bar>", "by simp"], ["proof (state)\nthis:\n  dist (x (t j))\n   (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n  \\<le> \\<bar>r\\<bar>\n\ngoal (7 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. \\<And>j.\n       \\<lbrakk>t (Suc j) \\<le> t1;\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n        \\<le> \\<bar>r / 2\\<bar>\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incrs)\n                              (x (t 0) + s0) t j))\n                          (incr (stepsize j) (t j)\n                            (grid_function (discrete_evolution incr)\n                              (x (t 0)) t j))\n                         \\<le> L *\n                               dist\n                                (grid_function (discrete_evolution incrs)\n                                  (x (t 0) + s0) t j)\n                                (grid_function (discrete_evolution incr)\n                                  (x (t 0)) t j)\n 4. 0 \\<le> L\n 5. 0 \\<le> B\n 6. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 7. t j \\<le> t1", "thus \"dist\n      (incr (stepsize j) (t j)\n      (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n      (incr (stepsize j) (t j)\n      (grid_function (discrete_evolution incr) (x (t 0)) t j))\n      \\<le> L *\n      dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n      (grid_function (discrete_evolution incr) (x (t 0)) t j)\""], ["proof (prove)\nusing this:\n  dist (x (t j))\n   (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n  \\<le> \\<bar>r\\<bar>\n\ngoal (1 subgoal):\n 1. dist\n     (incr (stepsize j) (t j)\n       (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n     (incr (stepsize j) (t j)\n       (grid_function (discrete_evolution incr) (x (t 0)) t j))\n    \\<le> L *\n          dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n           (grid_function (discrete_evolution incr) (x (t 0)) t j)", "using  \\<open>t j \\<le> t1\\<close> \\<open>t (Suc j) \\<le> t1\\<close> incr_in_r\n        max_stepsize_nonneg\n        grid_ge_min\n        grid_stepsize_nonneg\n        grid_mono[of j]"], ["proof (prove)\nusing this:\n  dist (x (t j))\n   (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n  \\<le> \\<bar>r\\<bar>\n  t j \\<le> t1\n  t (Suc j) \\<le> t1\n  t (Suc ?j) \\<le> t1 \\<Longrightarrow>\n  dist (x (t ?j)) (grid_function (discrete_evolution incr) (x (t 0)) t ?j)\n  \\<le> \\<bar>r\\<bar>\n  0 \\<le> max_stepsize ?n\n  t 0 \\<le> t ?j\n  0 \\<le> stepsize ?j\n  j \\<le> ?n \\<Longrightarrow> t j \\<le> t ?n\n\ngoal (1 subgoal):\n 1. dist\n     (incr (stepsize j) (t j)\n       (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n     (incr (stepsize j) (t j)\n       (grid_function (discrete_evolution incr) (x (t 0)) t j))\n    \\<le> L *\n          dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n           (grid_function (discrete_evolution incr) (x (t 0)) t j)", "by (intro lipschitz_incr[THEN lipschitz_onD]) (auto simp: stepsize_def mem_cball)"], ["proof (state)\nthis:\n  dist\n   (incr (stepsize j) (t j)\n     (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j))\n   (incr (stepsize j) (t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j))\n  \\<le> L *\n        dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n         (grid_function (discrete_evolution incr) (x (t 0)) t j)\n\ngoal (6 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. 0 \\<le> L\n 4. 0 \\<le> B\n 5. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 6. t j \\<le> t1", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. 0 \\<le> L\n 4. 0 \\<le> B\n 5. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n 6. t j \\<le> t1", "show \"dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n      (x (t 0))\n      \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L", "using initial_error"], ["proof (prove)\nusing this:\n  norm s0 \\<le> B / L * (exp 1 - 1) * stepsize 0 ^ p\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n     (x (t 0))\n    \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L", "by (simp add: dist_norm)"], ["proof (state)\nthis:\n  dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t 0)\n   (x (t 0))\n  \\<le> B * (exp 1 - 1) * stepsize 0 ^ p / L\n\ngoal (5 subgoals):\n 1. t j \\<le> t1\n 2. 0 < p\n 3. 0 \\<le> L\n 4. 0 \\<le> B\n 5. t j \\<le> t1", "qed (simp_all add: consistent_nonneg order_pos lipschitz_nonneg \\<open>t j \\<le> t1\\<close>)"], ["proof (state)\nthis:\n  dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n   (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "also"], ["proof (state)\nthis:\n  dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n   (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "have \"... \\<le>\n    B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "using grid lipschitz_nonneg consistent_nonneg\n      max_stepsize_nonneg\n      grid_ge_min grid_mono \\<open>t j \\<le> t1\\<close>"], ["proof (prove)\nusing this:\n  t ?i \\<le> t (Suc ?i)\n  0 \\<le> L\n  0 \\<le> B\n  0 \\<le> max_stepsize ?n\n  t 0 \\<le> t ?j\n  ?j \\<le> ?n \\<Longrightarrow> t ?j \\<le> t ?n\n  t j \\<le> t1\n\ngoal (1 subgoal):\n 1. B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "by  (auto simp add: ac_simps intro!: divide_right_mono mult_left_mono)"], ["proof (state)\nthis:\n  B / L * (exp (L * (t j - t 0) + 1) - 1) * max_stepsize j ^ p\n  \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "finally"], ["proof (chain)\npicking this:\n  dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n   (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "have \"dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n   (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\""], ["proof (prove)\nusing this:\n  dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n   (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "."], ["proof (state)\nthis:\n  dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n   (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "thus ?thesis"], ["proof (prove)\nusing this:\n  dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n   (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "by simp"], ["proof (state)\nthis:\n  dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n   (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection\\<open>Stability via implicit error\\<close>"], ["", "locale rounded_one_step = consistent_one_step \"t 0\" t1 x incr p B r L +\n  max_step t t1 p L B \"r / 2\"\n  for t::\"nat\\<Rightarrow>real\" and t1 and x::\"real\\<Rightarrow>('a::ordered_euclidean_space)\" and incr p B r L +\n  fixes incr'::\"real\\<Rightarrow>real\\<Rightarrow>'a\\<Rightarrow>'a\"\n  fixes x0'::'a\n  assumes initial_error: \"dist (x (t 0)) x0' \\<le>\n    B / L * (exp 1 - 1) * stepsize 0 ^ p\"\n  assumes incr_approx: \"\\<And>h j x. t j \\<le> t1 \\<Longrightarrow> dist (incr h (t j) x) (incr' h (t j) x) \\<le>\n    B * stepsize j ^ p\"\nbegin"], ["", "lemma stability:\n  assumes \"t j \\<le> t1\"\n  shows \"dist\n   ((grid_function (discrete_evolution incr') (x0') t j))\n   (grid_function (discrete_evolution incr) (x (t 0)) t j) \\<le>\n     B / L * (exp (L * (t1 - (t 0)) + 1) - 1) * max_stepsize j ^ p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incr') x0' t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incr') x0' t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "note fg' = incr_approx"], ["proof (state)\nthis:\n  t ?j \\<le> t1 \\<Longrightarrow>\n  dist (incr ?h (t ?j) ?x) (incr' ?h (t ?j) ?x) \\<le> B * stepsize ?j ^ p\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incr') x0' t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "define s0 where \"s0 \\<equiv> x0' - x (t 0)\""], ["proof (state)\nthis:\n  s0 \\<equiv> x0' - x (t 0)\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incr') x0' t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "hence x0': \"x0' = x (t 0) + s0\""], ["proof (prove)\nusing this:\n  s0 \\<equiv> x0' - x (t 0)\n\ngoal (1 subgoal):\n 1. x0' = x (t 0) + s0", "by simp"], ["proof (state)\nthis:\n  x0' = x (t 0) + s0\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incr') x0' t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "define s where \"s \\<equiv> \\<lambda>x xa xb. (incr' x xa xb) - incr x xa xb\""], ["proof (state)\nthis:\n  s \\<equiv> \\<lambda>x xa xb. incr' x xa xb - incr x xa xb\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incr') x0' t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "define incrs where \"incrs \\<equiv> \\<lambda>h t x. incr h t x + s h t x\""], ["proof (state)\nthis:\n  incrs \\<equiv> \\<lambda>h t x. incr h t x + s h t x\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incr') x0' t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "have s: \"incr' = incrs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. incr' = incrs", "by (simp add: s_def incrs_def [abs_def])"], ["proof (state)\nthis:\n  incr' = incrs\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incr') x0' t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "interpret c: stable_one_step t1 x incr p B r L t s s0"], ["proof (prove)\ngoal (1 subgoal):\n 1. stable_one_step t1 x incr p B r L t s s0", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. norm s0 \\<le> B / L * (exp 1 - 1) * stepsize 0 ^ p\n 2. \\<And>j.\n       t (Suc j) \\<le> t1 \\<Longrightarrow>\n       norm\n        (s (stepsize j) (t j)\n          (grid_function\n            (discrete_evolution (\\<lambda>h t x. incr h t x + s h t x))\n            (x (t 0) + s0) t j))\n       \\<le> B * stepsize j ^ p", "fix j"], ["proof (state)\ngoal (2 subgoals):\n 1. norm s0 \\<le> B / L * (exp 1 - 1) * stepsize 0 ^ p\n 2. \\<And>j.\n       t (Suc j) \\<le> t1 \\<Longrightarrow>\n       norm\n        (s (stepsize j) (t j)\n          (grid_function\n            (discrete_evolution (\\<lambda>h t x. incr h t x + s h t x))\n            (x (t 0) + s0) t j))\n       \\<le> B * stepsize j ^ p", "assume \"(t (Suc j)) \\<le> t1\""], ["proof (state)\nthis:\n  t (Suc j) \\<le> t1\n\ngoal (2 subgoals):\n 1. norm s0 \\<le> B / L * (exp 1 - 1) * stepsize 0 ^ p\n 2. \\<And>j.\n       t (Suc j) \\<le> t1 \\<Longrightarrow>\n       norm\n        (s (stepsize j) (t j)\n          (grid_function\n            (discrete_evolution (\\<lambda>h t x. incr h t x + s h t x))\n            (x (t 0) + s0) t j))\n       \\<le> B * stepsize j ^ p", "hence \"t j \\<le> t1\""], ["proof (prove)\nusing this:\n  t (Suc j) \\<le> t1\n\ngoal (1 subgoal):\n 1. t j \\<le> t1", "using grid_mono[of j \"Suc j\"]"], ["proof (prove)\nusing this:\n  t (Suc j) \\<le> t1\n  j \\<le> Suc j \\<Longrightarrow> t j \\<le> t (Suc j)\n\ngoal (1 subgoal):\n 1. t j \\<le> t1", "by simp"], ["proof (state)\nthis:\n  t j \\<le> t1\n\ngoal (2 subgoals):\n 1. norm s0 \\<le> B / L * (exp 1 - 1) * stepsize 0 ^ p\n 2. \\<And>j.\n       t (Suc j) \\<le> t1 \\<Longrightarrow>\n       norm\n        (s (stepsize j) (t j)\n          (grid_function\n            (discrete_evolution (\\<lambda>h t x. incr h t x + s h t x))\n            (x (t 0) + s0) t j))\n       \\<le> B * stepsize j ^ p", "have \"norm (s (stepsize j) (t j) (grid_function\n             (discrete_evolution (\\<lambda>h t x. (incr' h t x)))\n             (x (t 0) + s0) t j))\n          \\<le> B * stepsize j ^ p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm\n     (s (stepsize j) (t j)\n       (grid_function (discrete_evolution incr') (x (t 0) + s0) t j))\n    \\<le> B * stepsize j ^ p", "unfolding s_def dist_norm[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist\n     (incr' (stepsize j) (t j)\n       (grid_function (discrete_evolution incr') (x (t 0) + s0) t j))\n     (incr (stepsize j) (t j)\n       (grid_function (discrete_evolution incr') (x (t 0) + s0) t j))\n    \\<le> B * stepsize j ^ p", "by (simp only: dist_commute fg'[OF \\<open>t j \\<le> t1\\<close>])"], ["proof (state)\nthis:\n  norm\n   (s (stepsize j) (t j)\n     (grid_function (discrete_evolution incr') (x (t 0) + s0) t j))\n  \\<le> B * stepsize j ^ p\n\ngoal (2 subgoals):\n 1. norm s0 \\<le> B / L * (exp 1 - 1) * stepsize 0 ^ p\n 2. \\<And>j.\n       t (Suc j) \\<le> t1 \\<Longrightarrow>\n       norm\n        (s (stepsize j) (t j)\n          (grid_function\n            (discrete_evolution (\\<lambda>h t x. incr h t x + s h t x))\n            (x (t 0) + s0) t j))\n       \\<le> B * stepsize j ^ p", "then"], ["proof (chain)\npicking this:\n  norm\n   (s (stepsize j) (t j)\n     (grid_function (discrete_evolution incr') (x (t 0) + s0) t j))\n  \\<le> B * stepsize j ^ p", "show \"norm\n         (s (stepsize j) (t j)\n           (grid_function (discrete_evolution (\\<lambda>h t x. incr h t x + s h t x))\n             (x (t 0) + s0) (\\<lambda>x. (t x)) j))\n        \\<le> B * stepsize j ^ p\""], ["proof (prove)\nusing this:\n  norm\n   (s (stepsize j) (t j)\n     (grid_function (discrete_evolution incr') (x (t 0) + s0) t j))\n  \\<le> B * stepsize j ^ p\n\ngoal (1 subgoal):\n 1. norm\n     (s (stepsize j) (t j)\n       (grid_function\n         (discrete_evolution (\\<lambda>h t x. incr h t x + s h t x))\n         (x (t 0) + s0) t j))\n    \\<le> B * stepsize j ^ p", "by (simp add: s incrs_def)"], ["proof (state)\nthis:\n  norm\n   (s (stepsize j) (t j)\n     (grid_function\n       (discrete_evolution (\\<lambda>h t x. incr h t x + s h t x))\n       (x (t 0) + s0) t j))\n  \\<le> B * stepsize j ^ p\n\ngoal (1 subgoal):\n 1. norm s0 \\<le> B / L * (exp 1 - 1) * stepsize 0 ^ p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. norm s0 \\<le> B / L * (exp 1 - 1) * stepsize 0 ^ p", "show \"norm s0 \\<le> B / L * (exp 1 - 1) * stepsize 0 ^ p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm s0 \\<le> B / L * (exp 1 - 1) * stepsize 0 ^ p", "unfolding s0_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (x0' - x (t 0)) \\<le> B / L * (exp 1 - 1) * stepsize 0 ^ p", "using initial_error"], ["proof (prove)\nusing this:\n  dist (x (t 0)) x0' \\<le> B / L * (exp 1 - 1) * stepsize 0 ^ p\n\ngoal (1 subgoal):\n 1. norm (x0' - x (t 0)) \\<le> B / L * (exp 1 - 1) * stepsize 0 ^ p", "by (simp add: dist_commute dist_norm)"], ["proof (state)\nthis:\n  norm s0 \\<le> B / L * (exp 1 - 1) * stepsize 0 ^ p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incr') x0' t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incr') x0' t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "unfolding s x0'"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "using \\<open>t j \\<le> t1\\<close>"], ["proof (prove)\nusing this:\n  t j \\<le> t1\n\ngoal (1 subgoal):\n 1. dist (grid_function (discrete_evolution incrs) (x (t 0) + s0) t j)\n     (grid_function (discrete_evolution incr) (x (t 0)) t j)\n    \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p", "by (rule c.stability[simplified incrs_def[symmetric]])"], ["proof (state)\nthis:\n  dist (grid_function (discrete_evolution incr') x0' t j)\n   (grid_function (discrete_evolution incr) (x (t 0)) t j)\n  \\<le> B / L * (exp (L * (t1 - t 0) + 1) - 1) * max_stepsize j ^ p\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}