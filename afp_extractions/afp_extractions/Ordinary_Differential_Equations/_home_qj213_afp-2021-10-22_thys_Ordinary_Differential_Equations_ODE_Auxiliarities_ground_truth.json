{"file_name": "/home/qj213/afp-2021-10-22/thys/Ordinary_Differential_Equations/ODE_Auxiliarities.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Ordinary_Differential_Equations", "problem_names": ["lemma (in real_inner) parallelogram_law: \"(norm (x + y))\\<^sup>2 + (norm (x - y))\\<^sup>2 = 2 * (norm x)\\<^sup>2 + 2 * (norm y)\\<^sup>2\"", "lemma [simp]: \"fstzero (a, b) = (a, 0)\"", "lemma [simp]: \"zerosnd (a, b) = (0, b)\"", "lemma fstzero_add_zerosnd: \"fstzero + zerosnd = id_blinfun\"", "lemma norm_fstzero_zerosnd: \"norm fstzero = 1\" \"norm zerosnd = 1\" \"norm (fstzero - zerosnd) = 1\"", "lemma \"(norm (fstzero + zerosnd))\\<^sup>2 + (norm (fstzero - zerosnd))\\<^sup>2 \\<noteq>\n    2 * (norm fstzero)\\<^sup>2 + 2 * (norm zerosnd)\\<^sup>2\"", "lemma ex_norm_eq_1: \"\\<exists>x. norm (x::'a::{real_normed_vector, perfect_space}) = 1\"", "lemmas [simp del] = mem_ball mem_cball mem_sphere mem_ball_0 mem_cball_0", "lemma bounded_subset_cboxE:\n  assumes \"\\<And>i. i \\<in> Basis \\<Longrightarrow> bounded ((\\<lambda>x. x \\<bullet> i) ` X)\"\n  obtains a b where \"X \\<subseteq> cbox a b\"", "lemma\n  bounded_euclideanI:\n  assumes \"\\<And>i. i \\<in> Basis \\<Longrightarrow> bounded ((\\<lambda>x. x \\<bullet> i) ` X)\"\n  shows \"bounded X\"", "lemma min_zero_mult_nonneg_le: \"0 \\<le> h' \\<Longrightarrow> h' \\<le> h \\<Longrightarrow> min 0 (h * k::real) \\<le> h' * k\"", "lemma max_zero_mult_nonneg_le: \"0 \\<le> h' \\<Longrightarrow> h' \\<le> h \\<Longrightarrow> h' * k \\<le> max 0 (h * k::real)\"", "lemmas closed_segment_eq_real_ivl = closed_segment_eq_real_ivl", "lemma bdd_above_is_intervalI: \"bdd_above I\" if \"is_interval I\" \"a \\<le> b\" \"a \\<in> I\" \"b \\<notin> I\" for I::\"real set\"", "lemma bdd_below_is_intervalI: \"bdd_below I\" if \"is_interval I\" \"a \\<le> b\" \"a \\<notin> I\" \"b \\<in> I\" for I::\"real set\"", "lemma eventually_open_cball:\n  assumes \"open X\"\n  assumes \"x \\<in> X\"\n  shows \"eventually (\\<lambda>e. cball x e \\<subseteq> X) (at_right 0)\"", "lemma\n  if_eventually_has_derivative:\n  assumes \"(f has_derivative F') (at x within S)\"\n  assumes \"\\<forall>\\<^sub>F x in at x within S. P x\" \"P x\" \"x \\<in> S\"\n  shows \"((\\<lambda>x. if P x then f x else g x) has_derivative F') (at x within S)\"", "lemma norm_le_in_cubeI: \"norm x \\<le> norm y\"\n  if \"\\<And>i. i \\<in> Basis \\<Longrightarrow> abs (x \\<bullet> i) \\<le> abs (y \\<bullet> i)\" for x y", "lemma has_derivative_partials_euclidean_convexI:\n  fixes f::\"'a::euclidean_space \\<Rightarrow> 'b::real_normed_vector\"\n  assumes f': \"\\<And>i x xi. i \\<in> Basis \\<Longrightarrow> (\\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j) \\<Longrightarrow> xi = x \\<bullet> i \\<Longrightarrow>\n    ((\\<lambda>p. f (x + (p - x \\<bullet> i) *\\<^sub>R i)) has_vector_derivative f' i x) (at xi within X i)\"\n  assumes df_cont: \"\\<And>i. i \\<in> Basis \\<Longrightarrow> (f' i \\<longlongrightarrow> (f' i x)) (at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j})\"\n  assumes \"\\<And>i. i \\<in> Basis \\<Longrightarrow> x \\<bullet> i \\<in> X i\"\n  assumes \"\\<And>i. i \\<in> Basis \\<Longrightarrow> convex (X i)\"\n  shows \"(f has_derivative (\\<lambda>h. \\<Sum>j\\<in>Basis. (h \\<bullet> j) *\\<^sub>R f' j x)) (at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j})\"\n    (is \"_ (at x within ?S)\")", "lemma\n  frechet_derivative_equals_partial_derivative:\n  fixes f::\"'a::euclidean_space \\<Rightarrow> 'a\"\n  assumes Df: \"\\<And>x. (f has_derivative Df x) (at x)\"\n  assumes f': \"((\\<lambda>p. f (x + (p - x \\<bullet> i) *\\<^sub>R i) \\<bullet> b) has_real_derivative f' x i b) (at (x \\<bullet> i))\"\n  shows \"Df x i \\<bullet> b = f' x i b\"", "lemmas content_real[simp]", "lemmas integrable_continuous[intro, simp]\n  and integrable_continuous_real[intro, simp]", "lemma integral_eucl_le:\n  fixes f g::\"'a::euclidean_space \\<Rightarrow> 'b::ordered_euclidean_space\"\n  assumes \"f integrable_on s\"\n    and \"g integrable_on s\"\n    and \"\\<And>x. x \\<in> s \\<Longrightarrow> f x \\<le> g x\"\n  shows \"integral s f \\<le> integral s g\"", "lemma\n  integral_ivl_bound:\n  fixes l u::\"'a::ordered_euclidean_space\"\n  assumes \"\\<And>x h'. h' \\<in> {t0 .. h} \\<Longrightarrow> x \\<in> {t0 .. h} \\<Longrightarrow> (h' - t0) *\\<^sub>R f x \\<in> {l .. u}\"\n  assumes \"t0 \\<le> h\"\n  assumes f_int: \"f integrable_on {t0 .. h}\"\n  shows \"integral {t0 .. h} f \\<in> {l .. u}\"", "lemma\n  add_integral_ivl_bound:\n  fixes l u::\"'a::ordered_euclidean_space\"\n  assumes \"\\<And>x h'. h' \\<in> {t0 .. h} \\<Longrightarrow> x \\<in> {t0 .. h} \\<Longrightarrow> (h' - t0) *\\<^sub>R f x \\<in> {l - x0 .. u - x0}\"\n  assumes \"t0 \\<le> h\"\n  assumes f_int: \"f integrable_on {t0 .. h}\"\n  shows \"x0 + integral {t0 .. h} f \\<in> {l .. u}\"", "lemma\n  Ball_set_Cons[simp]: \"(\\<forall>a\\<in>set_Cons x y. P a) \\<longleftrightarrow> (\\<forall>a\\<in>x. \\<forall>b\\<in>y. P (a#b))\"", "lemma set_cons_eq_empty[iff]: \"set_Cons a b = {} \\<longleftrightarrow> a = {} \\<or> b = {}\"", "lemma listset_eq_empty_iff[iff]: \"listset XS = {} \\<longleftrightarrow> {} \\<in> set XS\"", "lemma sing_in_sings[simp]: \"[x] \\<in> (\\<lambda>x. [x]) ` xd \\<longleftrightarrow> x \\<in> xd\"", "lemma those_eq_None_set_iff: \"those xs = None \\<longleftrightarrow> None \\<in> set xs\"", "lemma those_eq_Some_lengthD: \"those xs = Some ys \\<Longrightarrow> length xs = length ys\"", "lemma those_eq_Some_map_Some_iff: \"those xs = Some ys \\<longleftrightarrow> (xs = map Some ys)\" (is \"?l \\<longleftrightarrow> ?r\")", "lemma blinfun_apply_comp3[simp]: \"blinfun_apply (comp3 a) b = (a o\\<^sub>L b)\"", "lemma bounded_linear_comp3[bounded_linear]: \"bounded_linear comp3\"", "lemma blinfun_apply_comp12[simp]: \"blinfun_apply (comp12 f g) b = f (fst b) + g (snd b)\"", "lemma preflect_preflect[simp]: \"preflect t0 (preflect t0 t) = t\"", "lemma preflect_preflect_image[simp]: \"preflect t0 ` preflect t0 ` S = S\"", "lemma is_interval_preflect[simp]: \"is_interval (preflect t0 ` S) \\<longleftrightarrow> is_interval S\"", "lemma iv_in_preflect_image[intro, simp]: \"t0 \\<in> T \\<Longrightarrow> t0 \\<in> preflect t0 ` T\"", "lemma preflect_tendsto[tendsto_intros]:\n  fixes l::\"'a::real_normed_vector\"\n  shows \"(g \\<longlongrightarrow> l) F \\<Longrightarrow> (h \\<longlongrightarrow> m) F \\<Longrightarrow> ((\\<lambda>x. preflect (g x) (h x)) \\<longlongrightarrow> preflect l m) F\"", "lemma continuous_preflect[continuous_intros]:\n  fixes a::\"'a::real_normed_vector\"\n  shows \"continuous (at a within A) (preflect t0)\"", "lemma\n  fixes t0::\"'a::ordered_real_vector\"\n  shows preflect_le[simp]: \"t0 \\<le> preflect t0 b \\<longleftrightarrow> b \\<le> t0\"\n    and le_preflect[simp]: \"preflect t0 b \\<le> t0 \\<longleftrightarrow> t0 \\<le> b\"\n    and antimono_preflect: \"antimono (preflect t0)\"\n    and preflect_le_preflect[simp]: \"preflect t0 a \\<le> preflect t0 b \\<longleftrightarrow> b \\<le> a\"\n    and preflect_eq_cancel[simp]: \"preflect t0 a = preflect t0 b \\<longleftrightarrow> a = b\"", "lemma preflect_eq_point_iff[simp]: \"t0 = preflect t0 s \\<longleftrightarrow> t0 = s\" \"preflect t0 s = t0 \\<longleftrightarrow> t0 = s\"", "lemma preflect_minus_self[simp]: \"preflect t0 s - t0 = t0 - s\""], "translations": [["", "lemma (in real_inner) parallelogram_law: \"(norm (x + y))\\<^sup>2 + (norm (x - y))\\<^sup>2 = 2 * (norm x)\\<^sup>2 + 2 * (norm y)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (norm (x + y))\\<^sup>2 + (norm (x - y))\\<^sup>2 =\n    2 * (norm x)\\<^sup>2 + 2 * (norm y)\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (norm (x + y))\\<^sup>2 + (norm (x - y))\\<^sup>2 =\n    2 * (norm x)\\<^sup>2 + 2 * (norm y)\\<^sup>2", "have \"(norm (x + y))\\<^sup>2 + (norm (x - y))\\<^sup>2 = inner (x + y) (x + y) + inner (x - y) (x - y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (norm (x + y))\\<^sup>2 + (norm (x - y))\\<^sup>2 =\n    (x + y) \\<bullet> (x + y) + (x - y) \\<bullet> (x - y)", "by (simp add: norm_eq_sqrt_inner)"], ["proof (state)\nthis:\n  (norm (x + y))\\<^sup>2 + (norm (x - y))\\<^sup>2 =\n  (x + y) \\<bullet> (x + y) + (x - y) \\<bullet> (x - y)\n\ngoal (1 subgoal):\n 1. (norm (x + y))\\<^sup>2 + (norm (x - y))\\<^sup>2 =\n    2 * (norm x)\\<^sup>2 + 2 * (norm y)\\<^sup>2", "also"], ["proof (state)\nthis:\n  (norm (x + y))\\<^sup>2 + (norm (x - y))\\<^sup>2 =\n  (x + y) \\<bullet> (x + y) + (x - y) \\<bullet> (x - y)\n\ngoal (1 subgoal):\n 1. (norm (x + y))\\<^sup>2 + (norm (x - y))\\<^sup>2 =\n    2 * (norm x)\\<^sup>2 + 2 * (norm y)\\<^sup>2", "have \"\\<dots> = 2 * (norm x)\\<^sup>2 + 2 * (norm y)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y) \\<bullet> (x + y) + (x - y) \\<bullet> (x - y) =\n    2 * (norm x)\\<^sup>2 + 2 * (norm y)\\<^sup>2", "by (simp add: algebra_simps norm_eq_sqrt_inner)"], ["proof (state)\nthis:\n  (x + y) \\<bullet> (x + y) + (x - y) \\<bullet> (x - y) =\n  2 * (norm x)\\<^sup>2 + 2 * (norm y)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (norm (x + y))\\<^sup>2 + (norm (x - y))\\<^sup>2 =\n    2 * (norm x)\\<^sup>2 + 2 * (norm y)\\<^sup>2", "finally"], ["proof (chain)\npicking this:\n  (norm (x + y))\\<^sup>2 + (norm (x - y))\\<^sup>2 =\n  2 * (norm x)\\<^sup>2 + 2 * (norm y)\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  (norm (x + y))\\<^sup>2 + (norm (x - y))\\<^sup>2 =\n  2 * (norm x)\\<^sup>2 + 2 * (norm y)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (norm (x + y))\\<^sup>2 + (norm (x - y))\\<^sup>2 =\n    2 * (norm x)\\<^sup>2 + 2 * (norm y)\\<^sup>2", "."], ["proof (state)\nthis:\n  (norm (x + y))\\<^sup>2 + (norm (x - y))\\<^sup>2 =\n  2 * (norm x)\\<^sup>2 + 2 * (norm y)\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["", "locale no_real_inner\nbegin"], ["", "lift_definition fstzero::\"(real*real) \\<Rightarrow>\\<^sub>L (real*real)\" is \"\\<lambda>(x, y). (x, 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_linear (\\<lambda>(x, y). (x, 0))", "by (auto intro!: bounded_linearI')"], ["", "lemma [simp]: \"fstzero (a, b) = (a, 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply fstzero (a, b) = (a, 0)", "by transfer simp"], ["", "lift_definition zerosnd::\"(real*real) \\<Rightarrow>\\<^sub>L (real*real)\" is \"\\<lambda>(x, y). (0, y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_linear (\\<lambda>(x, y). (0, y))", "by (auto intro!: bounded_linearI')"], ["", "lemma [simp]: \"zerosnd (a, b) = (0, b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply zerosnd (a, b) = (0, b)", "by transfer simp"], ["", "lemma fstzero_add_zerosnd: \"fstzero + zerosnd = id_blinfun\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fstzero + zerosnd = id_blinfun", "by transfer auto"], ["", "lemma norm_fstzero_zerosnd: \"norm fstzero = 1\" \"norm zerosnd = 1\" \"norm (fstzero - zerosnd) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm fstzero = 1 &&& norm zerosnd = 1 &&& norm (fstzero - zerosnd) = 1", "by (rule norm_blinfun_eqI[where x=\"(1, 0)\"]) (auto simp: norm_Pair blinfun.bilinear_simps\n    intro: norm_blinfun_eqI[where x=\"(0, 1)\"] norm_blinfun_eqI[where x=\"(1, 0)\"])"], ["", "text \\<open>compare with @{thm parallelogram_law}\\<close>"], ["", "lemma \"(norm (fstzero + zerosnd))\\<^sup>2 + (norm (fstzero - zerosnd))\\<^sup>2 \\<noteq>\n    2 * (norm fstzero)\\<^sup>2 + 2 * (norm zerosnd)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (norm (fstzero + zerosnd))\\<^sup>2 +\n    (norm (fstzero - zerosnd))\\<^sup>2 \\<noteq>\n    2 * (norm fstzero)\\<^sup>2 + 2 * (norm zerosnd)\\<^sup>2", "by (simp add: fstzero_add_zerosnd norm_fstzero_zerosnd)"], ["", "end"], ["", "subsection \\<open>Topology\\<close>"], ["", "subsection \\<open>Vector Spaces\\<close>"], ["", "lemma ex_norm_eq_1: \"\\<exists>x. norm (x::'a::{real_normed_vector, perfect_space}) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. norm x = 1", "by (metis vector_choose_size zero_le_one)"], ["", "subsection \\<open>Reals\\<close>"], ["", "subsection \\<open>Balls\\<close>"], ["", "text \\<open>sometimes @{thm mem_ball} etc. are not good \\<open>[simp]\\<close> rules (although they are often useful):\n  not sure that inequalities are ``simpler'' than set membership (distorts automatic reasoning\n  when only sets are involved)\\<close>"], ["", "lemmas [simp del] = mem_ball mem_cball mem_sphere mem_ball_0 mem_cball_0"], ["", "subsection \\<open>Boundedness\\<close>"], ["", "lemma bounded_subset_cboxE:\n  assumes \"\\<And>i. i \\<in> Basis \\<Longrightarrow> bounded ((\\<lambda>x. x \\<bullet> i) ` X)\"\n  obtains a b where \"X \\<subseteq> cbox a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        X \\<subseteq> cbox a b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        X \\<subseteq> cbox a b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<And>i. i \\<in> Basis \\<Longrightarrow> \\<exists>a b. ((\\<lambda>x. x \\<bullet> i) ` X) \\<subseteq> {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> Basis \\<Longrightarrow>\n       \\<exists>a b. (\\<lambda>x. x \\<bullet> i) ` X \\<subseteq> {a..b}", "by (metis box_real(2) box_subset_cbox subset_trans bounded_subset_box_symmetric[OF assms] )"], ["proof (state)\nthis:\n  ?i \\<in> Basis \\<Longrightarrow>\n  \\<exists>a b. (\\<lambda>x. x \\<bullet> ?i) ` X \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        X \\<subseteq> cbox a b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  ?i \\<in> Basis \\<Longrightarrow>\n  \\<exists>a b. (\\<lambda>x. x \\<bullet> ?i) ` X \\<subseteq> {a..b}", "obtain a b where bnds: \"\\<And>i. i \\<in> Basis \\<Longrightarrow> ((\\<lambda>x. x \\<bullet> i) ` X) \\<subseteq> {a i .. b i}\""], ["proof (prove)\nusing this:\n  ?i \\<in> Basis \\<Longrightarrow>\n  \\<exists>a b. (\\<lambda>x. x \\<bullet> ?i) ` X \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        (\\<And>i.\n            i \\<in> Basis \\<Longrightarrow>\n            (\\<lambda>x. x \\<bullet> i) ` X\n            \\<subseteq> {a i..b i}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  ?i \\<in> Basis \\<Longrightarrow>\n  (\\<lambda>x. x \\<bullet> ?i) ` X \\<subseteq> {a ?i..b ?i}\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        X \\<subseteq> cbox a b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  ?i \\<in> Basis \\<Longrightarrow>\n  (\\<lambda>x. x \\<bullet> ?i) ` X \\<subseteq> {a ?i..b ?i}", "have \"X \\<subseteq> {x. \\<forall>i\\<in>Basis. x \\<bullet> i \\<in> {a i .. b i}}\""], ["proof (prove)\nusing this:\n  ?i \\<in> Basis \\<Longrightarrow>\n  (\\<lambda>x. x \\<bullet> ?i) ` X \\<subseteq> {a ?i..b ?i}\n\ngoal (1 subgoal):\n 1. X \\<subseteq> {x. \\<forall>i\\<in>Basis. x \\<bullet> i \\<in> {a i..b i}}", "by force"], ["proof (state)\nthis:\n  X \\<subseteq> {x. \\<forall>i\\<in>Basis. x \\<bullet> i \\<in> {a i..b i}}\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        X \\<subseteq> cbox a b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  X \\<subseteq> {x. \\<forall>i\\<in>Basis. x \\<bullet> i \\<in> {a i..b i}}\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        X \\<subseteq> cbox a b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<dots> = cbox (\\<Sum>i\\<in>Basis. a i *\\<^sub>R i) (\\<Sum>i\\<in>Basis. b i *\\<^sub>R i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. \\<forall>i\\<in>Basis. x \\<bullet> i \\<in> {a i..b i}} =\n    cbox (\\<Sum>i\\<in>Basis. a i *\\<^sub>R i)\n     (\\<Sum>i\\<in>Basis. b i *\\<^sub>R i)", "by (auto simp: cbox_def)"], ["proof (state)\nthis:\n  {x. \\<forall>i\\<in>Basis. x \\<bullet> i \\<in> {a i..b i}} =\n  cbox (\\<Sum>i\\<in>Basis. a i *\\<^sub>R i)\n   (\\<Sum>i\\<in>Basis. b i *\\<^sub>R i)\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        X \\<subseteq> cbox a b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  X \\<subseteq> cbox (\\<Sum>i\\<in>Basis. a i *\\<^sub>R i)\n                 (\\<Sum>i\\<in>Basis. b i *\\<^sub>R i)", "show ?thesis"], ["proof (prove)\nusing this:\n  X \\<subseteq> cbox (\\<Sum>i\\<in>Basis. a i *\\<^sub>R i)\n                 (\\<Sum>i\\<in>Basis. b i *\\<^sub>R i)\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  bounded_euclideanI:\n  assumes \"\\<And>i. i \\<in> Basis \\<Longrightarrow> bounded ((\\<lambda>x. x \\<bullet> i) ` X)\"\n  shows \"bounded X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. bounded X", "from bounded_subset_cboxE[OF assms]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>i. i \\<in> Basis \\<Longrightarrow> i \\<in> Basis;\n   \\<And>a b. X \\<subseteq> cbox a b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "obtain a b where \"X \\<subseteq> cbox a b\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>i. i \\<in> Basis \\<Longrightarrow> i \\<in> Basis;\n   \\<And>a b. X \\<subseteq> cbox a b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        X \\<subseteq> cbox a b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  X \\<subseteq> cbox a b\n\ngoal (1 subgoal):\n 1. bounded X", "with bounded_cbox"], ["proof (chain)\npicking this:\n  bounded (cbox ?a ?b)\n  X \\<subseteq> cbox a b", "show ?thesis"], ["proof (prove)\nusing this:\n  bounded (cbox ?a ?b)\n  X \\<subseteq> cbox a b\n\ngoal (1 subgoal):\n 1. bounded X", "by (rule bounded_subset)"], ["proof (state)\nthis:\n  bounded X\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Intervals\\<close>"], ["", "notation closed_segment (\"(1{_--_})\")"], ["", "notation open_segment (\"(1{_<--<_})\")"], ["", "lemma min_zero_mult_nonneg_le: \"0 \\<le> h' \\<Longrightarrow> h' \\<le> h \\<Longrightarrow> min 0 (h * k::real) \\<le> h' * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> h'; h' \\<le> h\\<rbrakk>\n    \\<Longrightarrow> min 0 (h * k) \\<le> h' * k", "by (metis dual_order.antisym le_cases min_le_iff_disj mult_eq_0_iff mult_le_0_iff\n      mult_right_mono_neg)"], ["", "lemma max_zero_mult_nonneg_le: \"0 \\<le> h' \\<Longrightarrow> h' \\<le> h \\<Longrightarrow> h' * k \\<le> max 0 (h * k::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> h'; h' \\<le> h\\<rbrakk>\n    \\<Longrightarrow> h' * k \\<le> max 0 (h * k)", "by (metis dual_order.antisym le_cases le_max_iff_disj mult_eq_0_iff mult_right_mono\n      zero_le_mult_iff)"], ["", "lemmas closed_segment_eq_real_ivl = closed_segment_eq_real_ivl"], ["", "lemma bdd_above_is_intervalI: \"bdd_above I\" if \"is_interval I\" \"a \\<le> b\" \"a \\<in> I\" \"b \\<notin> I\" for I::\"real set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bdd_above I", "by (meson bdd_above_def is_interval_1 le_cases that)"], ["", "lemma bdd_below_is_intervalI: \"bdd_below I\" if \"is_interval I\" \"a \\<le> b\" \"a \\<notin> I\" \"b \\<in> I\" for I::\"real set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bdd_below I", "by (meson bdd_below_def is_interval_1 le_cases that)"], ["", "subsection \\<open>Extended Real Intervals\\<close>"], ["", "subsection \\<open>Euclidean Components\\<close>"], ["", "subsection \\<open>Operator Norm\\<close>"], ["", "subsection \\<open>Limits\\<close>"], ["", "lemma eventually_open_cball:\n  assumes \"open X\"\n  assumes \"x \\<in> X\"\n  shows \"eventually (\\<lambda>e. cball x e \\<subseteq> X) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F e in at_right 0. cball x e \\<subseteq> X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F e in at_right 0. cball x e \\<subseteq> X", "from open_contains_cball_eq[OF assms(1)] assms(2)"], ["proof (chain)\npicking this:\n  \\<forall>x. (x \\<in> X) = (\\<exists>e>0. cball x e \\<subseteq> X)\n  x \\<in> X", "obtain e where \"e > 0\" \"cball x e \\<subseteq> X\""], ["proof (prove)\nusing this:\n  \\<forall>x. (x \\<in> X) = (\\<exists>e>0. cball x e \\<subseteq> X)\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; cball x e \\<subseteq> X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < e\n  cball x e \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F e in at_right 0. cball x e \\<subseteq> X", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 < e\n  cball x e \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F e in at_right 0. cball x e \\<subseteq> X", "by (auto simp: eventually_at dist_real_def mem_cball intro!: exI[where x=e])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F e in at_right 0. cball x e \\<subseteq> X\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Continuity\\<close>"], ["", "subsection \\<open>Derivatives\\<close>"], ["", "lemma\n  if_eventually_has_derivative:\n  assumes \"(f has_derivative F') (at x within S)\"\n  assumes \"\\<forall>\\<^sub>F x in at x within S. P x\" \"P x\" \"x \\<in> S\"\n  shows \"((\\<lambda>x. if P x then f x else g x) has_derivative F') (at x within S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. if P x then f x else g x) has_derivative F')\n     (at x within S)", "using assms(1)"], ["proof (prove)\nusing this:\n  (f has_derivative F') (at x within S)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. if P x then f x else g x) has_derivative F')\n     (at x within S)", "apply (rule has_derivative_transform_eventually)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F x' in at x within S.\n       f x' = (if P x' then f x' else g x')\n 2. f x = (if P x then f x else g x)\n 3. x \\<in> S", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x' in at x within S.\n       f x' = (if P x' then f x' else g x')", "using assms(2)"], ["proof (prove)\nusing this:\n  eventually P (at x within S)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x' in at x within S.\n       f x' = (if P x' then f x' else g x')", "by eventually_elim auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. f x = (if P x then f x else g x)\n 2. x \\<in> S", "by (auto simp: assms)"], ["", "lemma norm_le_in_cubeI: \"norm x \\<le> norm y\"\n  if \"\\<And>i. i \\<in> Basis \\<Longrightarrow> abs (x \\<bullet> i) \\<le> abs (y \\<bullet> i)\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm x \\<le> norm y", "unfolding norm_eq_sqrt_inner"], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (x \\<bullet> x) \\<le> sqrt (y \\<bullet> y)", "apply (subst euclidean_inner)"], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>b\\<in>Basis. x \\<bullet> b * (x \\<bullet> b))\n    \\<le> sqrt (y \\<bullet> y)", "apply (subst (3) euclidean_inner)"], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>b\\<in>Basis. x \\<bullet> b * (x \\<bullet> b))\n    \\<le> sqrt (\\<Sum>b\\<in>Basis. y \\<bullet> b * (y \\<bullet> b))", "using that"], ["proof (prove)\nusing this:\n  ?i \\<in> Basis \\<Longrightarrow>\n  \\<bar>x \\<bullet> ?i\\<bar> \\<le> \\<bar>y \\<bullet> ?i\\<bar>\n\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>b\\<in>Basis. x \\<bullet> b * (x \\<bullet> b))\n    \\<le> sqrt (\\<Sum>b\\<in>Basis. y \\<bullet> b * (y \\<bullet> b))", "by (auto intro!: sum_mono simp: abs_le_square_iff power2_eq_square[symmetric])"], ["", "lemma has_derivative_partials_euclidean_convexI:\n  fixes f::\"'a::euclidean_space \\<Rightarrow> 'b::real_normed_vector\"\n  assumes f': \"\\<And>i x xi. i \\<in> Basis \\<Longrightarrow> (\\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j) \\<Longrightarrow> xi = x \\<bullet> i \\<Longrightarrow>\n    ((\\<lambda>p. f (x + (p - x \\<bullet> i) *\\<^sub>R i)) has_vector_derivative f' i x) (at xi within X i)\"\n  assumes df_cont: \"\\<And>i. i \\<in> Basis \\<Longrightarrow> (f' i \\<longlongrightarrow> (f' i x)) (at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j})\"\n  assumes \"\\<And>i. i \\<in> Basis \\<Longrightarrow> x \\<bullet> i \\<in> X i\"\n  assumes \"\\<And>i. i \\<in> Basis \\<Longrightarrow> convex (X i)\"\n  shows \"(f has_derivative (\\<lambda>h. \\<Sum>j\\<in>Basis. (h \\<bullet> j) *\\<^sub>R f' j x)) (at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j})\"\n    (is \"_ (at x within ?S)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f has_derivative\n     (\\<lambda>h. \\<Sum>j\\<in>Basis. (h \\<bullet> j) *\\<^sub>R f' j x))\n     (at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j})", "proof (rule has_derivativeI)"], ["proof (state)\ngoal (2 subgoals):\n 1. bounded_linear\n     (\\<lambda>h. \\<Sum>j\\<in>Basis. (h \\<bullet> j) *\\<^sub>R f' j x)\n 2. ((\\<lambda>y.\n         (f y - f x -\n          (\\<Sum>j\\<in>Basis.\n             ((y - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n         norm (y - x)) \\<longlongrightarrow>\n     (0::'b))\n     (at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j})", "show \"bounded_linear (\\<lambda>h. \\<Sum>j\\<in>Basis. (h \\<bullet> j) *\\<^sub>R f' j x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_linear\n     (\\<lambda>h. \\<Sum>j\\<in>Basis. (h \\<bullet> j) *\\<^sub>R f' j x)", "by (auto intro!: bounded_linear_intros)"], ["proof (state)\nthis:\n  bounded_linear\n   (\\<lambda>h. \\<Sum>j\\<in>Basis. (h \\<bullet> j) *\\<^sub>R f' j x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (f y - f x -\n          (\\<Sum>j\\<in>Basis.\n             ((y - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n         norm (y - x)) \\<longlongrightarrow>\n     (0::'b))\n     (at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j})", "obtain E where [simp]: \"set E = (Basis::'a set)\" \"distinct E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>E.\n        \\<lbrakk>set E = Basis; distinct E\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using finite_distinct_list[OF finite_Basis]"], ["proof (prove)\nusing this:\n  \\<exists>xs. set xs = Basis \\<and> distinct xs\n\ngoal (1 subgoal):\n 1. (\\<And>E.\n        \\<lbrakk>set E = Basis; distinct E\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  set E = Basis\n  distinct E\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (f y - f x -\n          (\\<Sum>j\\<in>Basis.\n             ((y - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n         norm (y - x)) \\<longlongrightarrow>\n     (0::'b))\n     (at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j})", "have [simp]: \"length E = DIM('a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length E = DIM('a)", "using \\<open>distinct E\\<close> distinct_card"], ["proof (prove)\nusing this:\n  distinct E\n  distinct ?xs \\<Longrightarrow> card (set ?xs) = length ?xs\n\ngoal (1 subgoal):\n 1. length E = DIM('a)", "by fastforce"], ["proof (state)\nthis:\n  length E = DIM('a)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (f y - f x -\n          (\\<Sum>j\\<in>Basis.\n             ((y - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n         norm (y - x)) \\<longlongrightarrow>\n     (0::'b))\n     (at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j})", "have [simp]: \"E ! j \\<in> Basis\" if \"j < DIM('a)\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. E ! j \\<in> Basis", "by (metis \\<open>length E = DIM('a)\\<close> \\<open>set E = Basis\\<close> nth_mem that)"], ["proof (state)\nthis:\n  ?j < DIM('a) \\<Longrightarrow> E ! ?j \\<in> Basis\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (f y - f x -\n          (\\<Sum>j\\<in>Basis.\n             ((y - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n         norm (y - x)) \\<longlongrightarrow>\n     (0::'b))\n     (at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j})", "have \"convex ?S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. convex {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}", "by (rule convex_prod) (use assms in auto)"], ["proof (state)\nthis:\n  convex {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (f y - f x -\n          (\\<Sum>j\\<in>Basis.\n             ((y - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n         norm (y - x)) \\<longlongrightarrow>\n     (0::'b))\n     (at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j})", "have sum_Basis_E: \"sum g Basis = (\\<Sum>j<DIM('a). g (E ! j))\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum g Basis = (\\<Sum>j<DIM('a). g (E ! j))", "apply (rule sum.reindex_cong[OF _ _ refl])"], ["proof (prove)\ngoal (2 subgoals):\n 1. inj_on ((!) E) {..<DIM('a)}\n 2. Basis = (!) E ` {..<DIM('a)}", "apply (auto simp: inj_on_nth)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Basis \\<Longrightarrow> x \\<in> (!) E ` {..<DIM('a)}", "by (metis \\<open>distinct E\\<close> \\<open>length E = DIM('a)\\<close> \\<open>set E = Basis\\<close> bij_betw_def bij_betw_nth)"], ["proof (state)\nthis:\n  sum ?g1 Basis = (\\<Sum>j<DIM('a). ?g1 (E ! j))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (f y - f x -\n          (\\<Sum>j\\<in>Basis.\n             ((y - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n         norm (y - x)) \\<longlongrightarrow>\n     (0::'b))\n     (at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j})", "have segment: \"\\<forall>\\<^sub>F x' in at x within ?S. x' \\<in> ?S\" \"\\<forall>\\<^sub>F x' in at x within ?S. x' \\<noteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x' in at x\n       within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n       x' \\<in> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j} &&&\n    \\<forall>\\<^sub>F x' in at x\n       within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n       x' \\<noteq> x", "unfolding eventually_at_filter"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in nhds x.\n       xa \\<noteq> x \\<longrightarrow>\n       xa \\<in> {x. \\<forall>j\\<in>Basis.\n                       x \\<bullet> j \\<in> X j} \\<longrightarrow>\n       xa \\<in> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j} &&&\n    \\<forall>\\<^sub>F xa in nhds x.\n       xa \\<noteq> x \\<longrightarrow>\n       xa \\<in> {x. \\<forall>j\\<in>Basis.\n                       x \\<bullet> j \\<in> X j} \\<longrightarrow>\n       xa \\<noteq> x", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x' in at x\n     within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     x' \\<in> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}\n  \\<forall>\\<^sub>F x' in at x\n     within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     x' \\<noteq> x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (f y - f x -\n          (\\<Sum>j\\<in>Basis.\n             ((y - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n         norm (y - x)) \\<longlongrightarrow>\n     (0::'b))\n     (at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j})", "show \"((\\<lambda>y. (f y - f x - (\\<Sum>j\\<in>Basis. ((y - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R norm (y - x)) \\<longlongrightarrow> 0) (at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (f y - f x -\n          (\\<Sum>j\\<in>Basis.\n             ((y - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n         norm (y - x)) \\<longlongrightarrow>\n     (0::'b))\n     (at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j})", "apply (rule tendstoI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x\n          within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n          dist\n           ((f xa - f x -\n             (\\<Sum>j\\<in>Basis.\n                ((xa - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n            norm (xa - x))\n           (0::'b)\n          < e", "unfolding norm_conv_dist[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x\n          within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n          norm\n           ((f xa - f x -\n             (\\<Sum>j\\<in>Basis.\n                ((xa - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n            norm (xa - x))\n          < e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x\n          within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n          norm\n           ((f xa - f x -\n             (\\<Sum>j\\<in>Basis.\n                ((xa - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n            norm (xa - x))\n          < e", "fix e::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x\n          within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n          norm\n           ((f xa - f x -\n             (\\<Sum>j\\<in>Basis.\n                ((xa - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n            norm (xa - x))\n          < e", "assume \"e > 0\""], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x\n          within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n          norm\n           ((f xa - f x -\n             (\\<Sum>j\\<in>Basis.\n                ((xa - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n            norm (xa - x))\n          < e", "define B where \"B = e / norm (2*DIM('a) + 1)\""], ["proof (state)\nthis:\n  B = e / norm (real (2 * DIM('a) + 1))\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x\n          within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n          norm\n           ((f xa - f x -\n             (\\<Sum>j\\<in>Basis.\n                ((xa - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n            norm (xa - x))\n          < e", "with \\<open>e > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < e\n  B = e / norm (real (2 * DIM('a) + 1))", "have B_thms: \"B > 0\" \"2 * DIM('a) * B < e\" \"B \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 < e\n  B = e / norm (real (2 * DIM('a) + 1))\n\ngoal (1 subgoal):\n 1. 0 < B &&& real (2 * DIM('a)) * B < e &&& 0 \\<le> B", "by (auto simp: divide_simps algebra_simps B_def)"], ["proof (state)\nthis:\n  0 < B\n  real (2 * DIM('a)) * B < e\n  0 \\<le> B\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x\n          within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n          norm\n           ((f xa - f x -\n             (\\<Sum>j\\<in>Basis.\n                ((xa - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n            norm (xa - x))\n          < e", "define B' where \"B' = B / 2\""], ["proof (state)\nthis:\n  B' = B / 2\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x\n          within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n          norm\n           ((f xa - f x -\n             (\\<Sum>j\\<in>Basis.\n                ((xa - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n            norm (xa - x))\n          < e", "have \"B' > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < B'", "by (simp add: B'_def \\<open>0 < B\\<close>)"], ["proof (state)\nthis:\n  0 < B'\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x\n          within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n          norm\n           ((f xa - f x -\n             (\\<Sum>j\\<in>Basis.\n                ((xa - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n            norm (xa - x))\n          < e", "have \"\\<forall>i \\<in> Basis. \\<forall>\\<^sub>F xa in at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}. dist (f' i xa) (f' i x) < B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>Basis.\n       \\<forall>\\<^sub>F xa in at x\n          within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n          dist (f' i xa) (f' i x) < B'", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> Basis \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x\n          within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n          dist (f' i xa) (f' i x) < B'", "subgoal premises prems"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in at x\n       within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n       dist (f' i_ xa) (f' i_ x) < B'", "using df_cont[OF prems, THEN tendstoD, OF \\<open>0 < B'\\<close>]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F xa in at x\n     within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     dist (f' i_ xa) (f' i_ x) < B'\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in at x\n       within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n       dist (f' i_ xa) (f' i_ x) < B'", "."], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>i\\<in>Basis.\n     \\<forall>\\<^sub>F xa in at x\n        within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n        dist (f' i xa) (f' i x) < B'\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x\n          within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n          norm\n           ((f xa - f x -\n             (\\<Sum>j\\<in>Basis.\n                ((xa - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n            norm (xa - x))\n          < e", "from eventually_ball_finite[OF finite_Basis this]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F xa in at x\n     within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     \\<forall>y\\<in>Basis. dist (f' y xa) (f' y x) < B'", "have \"\\<forall>\\<^sub>F x' in at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}. \\<forall>j\\<in>Basis. dist (f' j x') (f' j x) < B'\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F xa in at x\n     within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     \\<forall>y\\<in>Basis. dist (f' y xa) (f' y x) < B'\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x' in at x\n       within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n       \\<forall>j\\<in>Basis. dist (f' j x') (f' j x) < B'", "."], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x' in at x\n     within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     \\<forall>j\\<in>Basis. dist (f' j x') (f' j x) < B'\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x\n          within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n          norm\n           ((f xa - f x -\n             (\\<Sum>j\\<in>Basis.\n                ((xa - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n            norm (xa - x))\n          < e", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x' in at x\n     within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     \\<forall>j\\<in>Basis. dist (f' j x') (f' j x) < B'", "obtain d where \"d > 0\"\n      and \"\\<And>x' j. x' \\<in> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j} \\<Longrightarrow> x' \\<noteq> x \\<Longrightarrow> dist x' x < d \\<Longrightarrow> j \\<in> Basis \\<Longrightarrow> dist (f' j x') (f' j x) < B'\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x' in at x\n     within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     \\<forall>j\\<in>Basis. dist (f' j x') (f' j x) < B'\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>0 < d;\n         \\<And>x' j.\n            \\<lbrakk>x' \\<in> {x. \\<forall>j\\<in>Basis.\n                                     x \\<bullet> j \\<in> X j};\n             x' \\<noteq> x; dist x' x < d; j \\<in> Basis\\<rbrakk>\n            \\<Longrightarrow> dist (f' j x') (f' j x) < B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>0 < B'\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x' in at x\n     within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     \\<forall>j\\<in>Basis. dist (f' j x') (f' j x) < B'\n  0 < B'\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>0 < d;\n         \\<And>x' j.\n            \\<lbrakk>x' \\<in> {x. \\<forall>j\\<in>Basis.\n                                     x \\<bullet> j \\<in> X j};\n             x' \\<noteq> x; dist x' x < d; j \\<in> Basis\\<rbrakk>\n            \\<Longrightarrow> dist (f' j x') (f' j x) < B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at)"], ["proof (state)\nthis:\n  0 < d\n  \\<lbrakk>?x'1 \\<in> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j};\n   ?x'1 \\<noteq> x; dist ?x'1 x < d; ?j1 \\<in> Basis\\<rbrakk>\n  \\<Longrightarrow> dist (f' ?j1 ?x'1) (f' ?j1 x) < B'\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x\n          within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n          norm\n           ((f xa - f x -\n             (\\<Sum>j\\<in>Basis.\n                ((xa - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n            norm (xa - x))\n          < e", "then"], ["proof (chain)\npicking this:\n  0 < d\n  \\<lbrakk>?x'1 \\<in> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j};\n   ?x'1 \\<noteq> x; dist ?x'1 x < d; ?j1 \\<in> Basis\\<rbrakk>\n  \\<Longrightarrow> dist (f' ?j1 ?x'1) (f' ?j1 x) < B'", "have B': \"x' \\<in> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j} \\<Longrightarrow> dist x' x < d \\<Longrightarrow> j \\<in> Basis \\<Longrightarrow> dist (f' j x') (f' j x) < B'\" for x' j"], ["proof (prove)\nusing this:\n  0 < d\n  \\<lbrakk>?x'1 \\<in> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j};\n   ?x'1 \\<noteq> x; dist ?x'1 x < d; ?j1 \\<in> Basis\\<rbrakk>\n  \\<Longrightarrow> dist (f' ?j1 ?x'1) (f' ?j1 x) < B'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x' \\<in> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j};\n     dist x' x < d; j \\<in> Basis\\<rbrakk>\n    \\<Longrightarrow> dist (f' j x') (f' j x) < B'", "by (cases \"x' = x\", auto simp add: \\<open>0 < B'\\<close>)"], ["proof (state)\nthis:\n  \\<lbrakk>?x'1 \\<in> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j};\n   dist ?x'1 x < d; ?j1 \\<in> Basis\\<rbrakk>\n  \\<Longrightarrow> dist (f' ?j1 ?x'1) (f' ?j1 x) < B'\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x\n          within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n          norm\n           ((f xa - f x -\n             (\\<Sum>j\\<in>Basis.\n                ((xa - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n            norm (xa - x))\n          < e", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x'1 \\<in> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j};\n   dist ?x'1 x < d; ?j1 \\<in> Basis\\<rbrakk>\n  \\<Longrightarrow> dist (f' ?j1 ?x'1) (f' ?j1 x) < B'", "have B: \"norm (f' j x' - f' j y) < B\" if\n      \"(\\<And>j. j \\<in> Basis \\<Longrightarrow> x' \\<bullet> j \\<in> X j)\"\n      \"(\\<And>j. j \\<in> Basis \\<Longrightarrow> y \\<bullet> j \\<in> X j)\"\n      \"dist x' x < d\"\n      \"dist y x < d\"\n      \"j \\<in> Basis\"\n      for x' y j"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x'1 \\<in> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j};\n   dist ?x'1 x < d; ?j1 \\<in> Basis\\<rbrakk>\n  \\<Longrightarrow> dist (f' ?j1 ?x'1) (f' ?j1 x) < B'\n\ngoal (1 subgoal):\n 1. norm (f' j x' - f' j y) < B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>x' j.\n        \\<lbrakk>x' \\<in> {x. \\<forall>j\\<in>Basis.\n                                 x \\<bullet> j \\<in> X j};\n         dist x' x < d; j \\<in> Basis\\<rbrakk>\n        \\<Longrightarrow> dist (f' j x') (f' j x) < B') \\<Longrightarrow>\n    norm (f' j x' - f' j y) < B", "have \"dist (f' j x') (f' j x) < B'\" \"dist (f' j y) (f' j x) < B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f' j x') (f' j x) < B' &&& dist (f' j y) (f' j x) < B'", "using that"], ["proof (prove)\nusing this:\n  ?j1 \\<in> Basis \\<Longrightarrow> x' \\<bullet> ?j1 \\<in> X ?j1\n  ?j1 \\<in> Basis \\<Longrightarrow> y \\<bullet> ?j1 \\<in> X ?j1\n  dist x' x < d\n  dist y x < d\n  j \\<in> Basis\n\ngoal (1 subgoal):\n 1. dist (f' j x') (f' j x) < B' &&& dist (f' j y) (f' j x) < B'", "by (auto intro!: B')"], ["proof (state)\nthis:\n  dist (f' j x') (f' j x) < B'\n  dist (f' j y) (f' j x) < B'\n\ngoal (1 subgoal):\n 1. (\\<And>x' j.\n        \\<lbrakk>x' \\<in> {x. \\<forall>j\\<in>Basis.\n                                 x \\<bullet> j \\<in> X j};\n         dist x' x < d; j \\<in> Basis\\<rbrakk>\n        \\<Longrightarrow> dist (f' j x') (f' j x) < B') \\<Longrightarrow>\n    norm (f' j x' - f' j y) < B", "then"], ["proof (chain)\npicking this:\n  dist (f' j x') (f' j x) < B'\n  dist (f' j y) (f' j x) < B'", "have \"dist (f' j x') (f' j y) < B' + B'\""], ["proof (prove)\nusing this:\n  dist (f' j x') (f' j x) < B'\n  dist (f' j y) (f' j x) < B'\n\ngoal (1 subgoal):\n 1. dist (f' j x') (f' j y) < B' + B'", "by norm"], ["proof (state)\nthis:\n  dist (f' j x') (f' j y) < B' + B'\n\ngoal (1 subgoal):\n 1. (\\<And>x' j.\n        \\<lbrakk>x' \\<in> {x. \\<forall>j\\<in>Basis.\n                                 x \\<bullet> j \\<in> X j};\n         dist x' x < d; j \\<in> Basis\\<rbrakk>\n        \\<Longrightarrow> dist (f' j x') (f' j x) < B') \\<Longrightarrow>\n    norm (f' j x' - f' j y) < B", "also"], ["proof (state)\nthis:\n  dist (f' j x') (f' j y) < B' + B'\n\ngoal (1 subgoal):\n 1. (\\<And>x' j.\n        \\<lbrakk>x' \\<in> {x. \\<forall>j\\<in>Basis.\n                                 x \\<bullet> j \\<in> X j};\n         dist x' x < d; j \\<in> Basis\\<rbrakk>\n        \\<Longrightarrow> dist (f' j x') (f' j x) < B') \\<Longrightarrow>\n    norm (f' j x' - f' j y) < B", "have \"\\<dots> = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B' + B' = B", "by (simp add: B'_def)"], ["proof (state)\nthis:\n  B' + B' = B\n\ngoal (1 subgoal):\n 1. (\\<And>x' j.\n        \\<lbrakk>x' \\<in> {x. \\<forall>j\\<in>Basis.\n                                 x \\<bullet> j \\<in> X j};\n         dist x' x < d; j \\<in> Basis\\<rbrakk>\n        \\<Longrightarrow> dist (f' j x') (f' j x) < B') \\<Longrightarrow>\n    norm (f' j x' - f' j y) < B", "finally"], ["proof (chain)\npicking this:\n  dist (f' j x') (f' j y) < B", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (f' j x') (f' j y) < B\n\ngoal (1 subgoal):\n 1. norm (f' j x' - f' j y) < B", "by (simp add: dist_norm)"], ["proof (state)\nthis:\n  norm (f' j x' - f' j y) < B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              j \\<in> Basis \\<Longrightarrow> ?x'1 \\<bullet> j \\<in> X j;\n   \\<And>j. j \\<in> Basis \\<Longrightarrow> ?y1 \\<bullet> j \\<in> X j;\n   dist ?x'1 x < d; dist ?y1 x < d; ?j1 \\<in> Basis\\<rbrakk>\n  \\<Longrightarrow> norm (f' ?j1 ?x'1 - f' ?j1 ?y1) < B\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x\n          within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n          norm\n           ((f xa - f x -\n             (\\<Sum>j\\<in>Basis.\n                ((xa - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n            norm (xa - x))\n          < e", "have \"\\<forall>\\<^sub>F x' in at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}. dist x' x < d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x' in at x\n       within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n       dist x' x < d", "by (rule tendstoD[OF tendsto_ident_at \\<open>d > 0\\<close>])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x' in at x\n     within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     dist x' x < d\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x\n          within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n          norm\n           ((f xa - f x -\n             (\\<Sum>j\\<in>Basis.\n                ((xa - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n            norm (xa - x))\n          < e", "with segment"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x' in at x\n     within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     x' \\<in> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}\n  \\<forall>\\<^sub>F x' in at x\n     within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     x' \\<noteq> x\n  \\<forall>\\<^sub>F x' in at x\n     within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     dist x' x < d", "show \"\\<forall>\\<^sub>F x' in at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n      norm ((f x' - f x - (\\<Sum>j\\<in>Basis. ((x' - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R norm (x' - x)) < e\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x' in at x\n     within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     x' \\<in> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}\n  \\<forall>\\<^sub>F x' in at x\n     within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     x' \\<noteq> x\n  \\<forall>\\<^sub>F x' in at x\n     within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     dist x' x < d\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x' in at x\n       within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n       norm\n        ((f x' - f x -\n          (\\<Sum>j\\<in>Basis.\n             ((x' - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n         norm (x' - x))\n       < e", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "case (elim x')"], ["proof (state)\nthis:\n  x' \\<in> {x'. \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j}\n  x' \\<noteq> x\n  dist x' x < d\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "then"], ["proof (chain)\npicking this:\n  x' \\<in> {x'. \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j}\n  x' \\<noteq> x\n  dist x' x < d", "have os_subset: \"open_segment x x' \\<subseteq> ?S\""], ["proof (prove)\nusing this:\n  x' \\<in> {x'. \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j}\n  x' \\<noteq> x\n  dist x' x < d\n\ngoal (1 subgoal):\n 1. {x<--<x'} \\<subseteq> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}", "using \\<open>convex ?S\\<close> assms(3)"], ["proof (prove)\nusing this:\n  x' \\<in> {x'. \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j}\n  x' \\<noteq> x\n  dist x' x < d\n  convex {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}\n  ?i \\<in> Basis \\<Longrightarrow> x \\<bullet> ?i \\<in> X ?i\n\ngoal (1 subgoal):\n 1. {x<--<x'} \\<subseteq> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}", "unfolding convex_contains_open_segment"], ["proof (prove)\nusing this:\n  x' \\<in> {x'. \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j}\n  x' \\<noteq> x\n  dist x' x < d\n  \\<forall>a\\<in>{x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     \\<forall>b\\<in>{x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n        {a<--<b}\n        \\<subseteq> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}\n  ?i \\<in> Basis \\<Longrightarrow> x \\<bullet> ?i \\<in> X ?i\n\ngoal (1 subgoal):\n 1. {x<--<x'} \\<subseteq> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}", "by auto"], ["proof (state)\nthis:\n  {x<--<x'} \\<subseteq> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "then"], ["proof (chain)\npicking this:\n  {x<--<x'} \\<subseteq> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}", "have cs_subset: \"closed_segment x x' \\<subseteq> ?S\""], ["proof (prove)\nusing this:\n  {x<--<x'} \\<subseteq> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}\n\ngoal (1 subgoal):\n 1. {x--x'} \\<subseteq> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}", "using elim assms(3)"], ["proof (prove)\nusing this:\n  {x<--<x'} \\<subseteq> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}\n  x' \\<in> {x'. \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j}\n  x' \\<noteq> x\n  dist x' x < d\n  ?i \\<in> Basis \\<Longrightarrow> x \\<bullet> ?i \\<in> X ?i\n\ngoal (1 subgoal):\n 1. {x--x'} \\<subseteq> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}", "by (auto simp add: open_segment_def)"], ["proof (state)\nthis:\n  {x--x'} \\<subseteq> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have csc_subset: \"closed_segment (x' \\<bullet> i) (x \\<bullet> i) \\<subseteq> X i\" if i: \"i \\<in> Basis\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x' \\<bullet> i--x \\<bullet> i} \\<subseteq> X i", "apply (rule closed_segment_subset)"], ["proof (prove)\ngoal (3 subgoals):\n 1. x' \\<bullet> i \\<in> X i\n 2. x \\<bullet> i \\<in> X i\n 3. convex (X i)", "using cs_subset elim assms(3,4) that"], ["proof (prove)\nusing this:\n  {x--x'} \\<subseteq> {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}\n  x' \\<in> {x'. \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j}\n  x' \\<noteq> x\n  dist x' x < d\n  ?i \\<in> Basis \\<Longrightarrow> x \\<bullet> ?i \\<in> X ?i\n  ?i \\<in> Basis \\<Longrightarrow> convex (X ?i)\n  i \\<in> Basis\n\ngoal (3 subgoals):\n 1. x' \\<bullet> i \\<in> X i\n 2. x \\<bullet> i \\<in> X i\n 3. convex (X i)", "by (auto )"], ["proof (state)\nthis:\n  ?i1 \\<in> Basis \\<Longrightarrow>\n  {x' \\<bullet> ?i1--x \\<bullet> ?i1} \\<subseteq> X ?i1\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have osc_subset: \"open_segment (x' \\<bullet> i) (x \\<bullet> i) \\<subseteq> X i\" if i: \"i \\<in> Basis\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x' \\<bullet> i<--<x \\<bullet> i} \\<subseteq> X i", "using segment_open_subset_closed csc_subset[OF i]"], ["proof (prove)\nusing this:\n  {?a<--<?b} \\<subseteq> {?a--?b}\n  {x' \\<bullet> i--x \\<bullet> i} \\<subseteq> X i\n\ngoal (1 subgoal):\n 1. {x' \\<bullet> i<--<x \\<bullet> i} \\<subseteq> X i", "by (rule order_trans)"], ["proof (state)\nthis:\n  ?i1 \\<in> Basis \\<Longrightarrow>\n  {x' \\<bullet> ?i1<--<x \\<bullet> ?i1} \\<subseteq> X ?i1\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "define h where \"h = x' - x\""], ["proof (state)\nthis:\n  h = x' - x\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "define z where \"z j = (\\<Sum>k<j. (h \\<bullet> E ! k) *\\<^sub>R (E ! k))\" for j"], ["proof (state)\nthis:\n  z ?j = (\\<Sum>k<?j. (h \\<bullet> E ! k) *\\<^sub>R E ! k)\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "define g where \"g j t = (f (x + z j + (t - x \\<bullet> E ! j) *\\<^sub>R E ! j))\" for j t"], ["proof (state)\nthis:\n  g ?j ?t = f (x + z ?j + (?t - x \\<bullet> E ! ?j) *\\<^sub>R E ! ?j)\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have z: \"z j \\<bullet> E ! j = 0\" if \"j < DIM('a)\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. z j \\<bullet> E ! j = 0", "using that"], ["proof (prove)\nusing this:\n  j < DIM('a)\n\ngoal (1 subgoal):\n 1. z j \\<bullet> E ! j = 0", "by (auto simp: z_def h_def algebra_simps inner_sum_left inner_Basis if_distrib\n            nth_eq_iff_index_eq\n            sum.delta\n            intro!: euclidean_eqI[where 'a='a]\n            cong: if_cong)"], ["proof (state)\nthis:\n  ?j1 < DIM('a) \\<Longrightarrow> z ?j1 \\<bullet> E ! ?j1 = 0\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "from distinct_Ex1[OF \\<open>distinct E\\<close>, unfolded \\<open>set E = Basis\\<close> Ex1_def \\<open>length E = _\\<close>]"], ["proof (chain)\npicking this:\n  ?x \\<in> Basis \\<Longrightarrow>\n  \\<exists>x.\n     (x < DIM('a) \\<and> E ! x = ?x) \\<and>\n     (\\<forall>y. y < DIM('a) \\<and> E ! y = ?x \\<longrightarrow> y = x)", "obtain index where\n        index: \"\\<And>i. i \\<in> Basis \\<Longrightarrow> i = E ! index i\" \"\\<And>i. i \\<in> Basis \\<Longrightarrow> index i < DIM('a)\"\n        and unique: \"\\<And>i j. i \\<in> Basis \\<Longrightarrow> j < DIM('a) \\<Longrightarrow> E ! j = i \\<Longrightarrow> j = index i\""], ["proof (prove)\nusing this:\n  ?x \\<in> Basis \\<Longrightarrow>\n  \\<exists>x.\n     (x < DIM('a) \\<and> E ! x = ?x) \\<and>\n     (\\<forall>y. y < DIM('a) \\<and> E ! y = ?x \\<longrightarrow> y = x)\n\ngoal (1 subgoal):\n 1. (\\<And>index.\n        \\<lbrakk>\\<And>i. i \\<in> Basis \\<Longrightarrow> i = E ! index i;\n         \\<And>i. i \\<in> Basis \\<Longrightarrow> index i < DIM('a);\n         \\<And>i j.\n            \\<lbrakk>i \\<in> Basis; j < DIM('a); E ! j = i\\<rbrakk>\n            \\<Longrightarrow> j = index i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  ?i1 \\<in> Basis \\<Longrightarrow> ?i1 = E ! index ?i1\n  ?i1 \\<in> Basis \\<Longrightarrow> index ?i1 < DIM('a)\n  \\<lbrakk>?i1 \\<in> Basis; ?j1 < DIM('a); E ! ?j1 = ?i1\\<rbrakk>\n  \\<Longrightarrow> ?j1 = index ?i1\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have nth_eq_iff_index: \"E ! k = i \\<longleftrightarrow> index i = k\" if \"i \\<in> Basis\" \"k < DIM('a)\" for k i"], ["proof (prove)\ngoal (1 subgoal):\n 1. (E ! k = i) = (index i = k)", "using unique[OF that] index[OF \\<open>i \\<in> Basis\\<close>]"], ["proof (prove)\nusing this:\n  E ! k = i \\<Longrightarrow> k = index i\n  i = E ! index i\n  index i < DIM('a)\n\ngoal (1 subgoal):\n 1. (E ! k = i) = (index i = k)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?i1 \\<in> Basis; ?k1 < DIM('a)\\<rbrakk>\n  \\<Longrightarrow> (E ! ?k1 = ?i1) = (index ?i1 = ?k1)\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have z_inner: \"z j \\<bullet> i = (if j \\<le> index i then 0 else h \\<bullet> i)\" if \"j < DIM('a)\" \"i \\<in> Basis\" for j i"], ["proof (prove)\ngoal (1 subgoal):\n 1. z j \\<bullet> i = (if j \\<le> index i then 0 else h \\<bullet> i)", "using that index[of i]"], ["proof (prove)\nusing this:\n  j < DIM('a)\n  i \\<in> Basis\n  i \\<in> Basis \\<Longrightarrow> i = E ! index i\n  i \\<in> Basis \\<Longrightarrow> index i < DIM('a)\n\ngoal (1 subgoal):\n 1. z j \\<bullet> i = (if j \\<le> index i then 0 else h \\<bullet> i)", "by (auto simp: z_def h_def algebra_simps inner_sum_left inner_Basis if_distrib\n            sum.delta nth_eq_iff_index\n            intro!: euclidean_eqI[where 'a='a]\n            cong: if_cong)"], ["proof (state)\nthis:\n  \\<lbrakk>?j1 < DIM('a); ?i1 \\<in> Basis\\<rbrakk>\n  \\<Longrightarrow> z ?j1 \\<bullet> ?i1 =\n                    (if ?j1 \\<le> index ?i1 then 0 else h \\<bullet> ?i1)\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have z_mem: \"j < DIM('a) \\<Longrightarrow> ja \\<in> Basis \\<Longrightarrow> x \\<bullet> ja + z j \\<bullet> ja \\<in> X ja\" for j ja"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>j < DIM('a); ja \\<in> Basis\\<rbrakk>\n    \\<Longrightarrow> x \\<bullet> ja + z j \\<bullet> ja \\<in> X ja", "using csc_subset"], ["proof (prove)\nusing this:\n  ?i1 \\<in> Basis \\<Longrightarrow>\n  {x' \\<bullet> ?i1--x \\<bullet> ?i1} \\<subseteq> X ?i1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j < DIM('a); ja \\<in> Basis\\<rbrakk>\n    \\<Longrightarrow> x \\<bullet> ja + z j \\<bullet> ja \\<in> X ja", "by (auto simp: z_inner h_def algebra_simps)"], ["proof (state)\nthis:\n  \\<lbrakk>?j1 < DIM('a); ?ja1 \\<in> Basis\\<rbrakk>\n  \\<Longrightarrow> x \\<bullet> ?ja1 + z ?j1 \\<bullet> ?ja1 \\<in> X ?ja1\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have \"norm (x' - x) < d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (x' - x) < d", "using elim"], ["proof (prove)\nusing this:\n  x' \\<in> {x'. \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j}\n  x' \\<noteq> x\n  dist x' x < d\n\ngoal (1 subgoal):\n 1. norm (x' - x) < d", "by (simp add: dist_norm)"], ["proof (state)\nthis:\n  norm (x' - x) < d\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have norm_z': \"y \\<in> closed_segment (x \\<bullet> E ! j) (x' \\<bullet> E ! j) \\<Longrightarrow> norm (z j + y *\\<^sub>R E ! j - (x \\<bullet> E ! j) *\\<^sub>R E ! j) < d\"\n        if \"j < DIM('a)\"\n        for j y"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n    norm (z j + y *\\<^sub>R E ! j - (x \\<bullet> E ! j) *\\<^sub>R E ! j) < d", "apply (rule le_less_trans[OF _ \\<open>norm (x' - x) < d\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n    norm (z j + y *\\<^sub>R E ! j - (x \\<bullet> E ! j) *\\<^sub>R E ! j)\n    \\<le> norm (x' - x)", "apply (rule norm_le_in_cubeI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j};\n        i \\<in> Basis\\<rbrakk>\n       \\<Longrightarrow> \\<bar>(z j + y *\\<^sub>R E ! j -\n                                (x \\<bullet> E ! j) *\\<^sub>R\n                                E ! j) \\<bullet>\n                               i\\<bar>\n                         \\<le> \\<bar>(x' - x) \\<bullet> i\\<bar>", "apply (auto simp: inner_diff_left inner_add_left inner_Basis that z)"], ["proof (prove)\ngoal (2 subgoals):\n 1. y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n    \\<bar>y - x \\<bullet> E ! j\\<bar>\n    \\<le> \\<bar>x' \\<bullet> E ! j - x \\<bullet> E ! j\\<bar>\n 2. \\<And>i.\n       \\<lbrakk>y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j};\n        i \\<in> Basis; E ! j \\<noteq> i\\<rbrakk>\n       \\<Longrightarrow> \\<bar>z j \\<bullet> i\\<bar>\n                         \\<le> \\<bar>x' \\<bullet> i - x \\<bullet> i\\<bar>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n    \\<bar>y - x \\<bullet> E ! j\\<bar>\n    \\<le> \\<bar>x' \\<bullet> E ! j - x \\<bullet> E ! j\\<bar>", "by (auto simp: closed_segment_eq_real_ivl split: if_splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j};\n        i \\<in> Basis; E ! j \\<noteq> i\\<rbrakk>\n       \\<Longrightarrow> \\<bar>z j \\<bullet> i\\<bar>\n                         \\<le> \\<bar>x' \\<bullet> i - x \\<bullet> i\\<bar>", "subgoal for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j}; i \\<in> Basis;\n     E ! j \\<noteq> i\\<rbrakk>\n    \\<Longrightarrow> \\<bar>z j \\<bullet> i\\<bar>\n                      \\<le> \\<bar>x' \\<bullet> i - x \\<bullet> i\\<bar>", "using that"], ["proof (prove)\nusing this:\n  j < DIM('a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j}; i \\<in> Basis;\n     E ! j \\<noteq> i\\<rbrakk>\n    \\<Longrightarrow> \\<bar>z j \\<bullet> i\\<bar>\n                      \\<le> \\<bar>x' \\<bullet> i - x \\<bullet> i\\<bar>", "by (auto simp: z_inner h_def algebra_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<lbrakk>?j1 < DIM('a);\n   ?y1 \\<in> {x \\<bullet> E ! ?j1--x' \\<bullet> E ! ?j1}\\<rbrakk>\n  \\<Longrightarrow> norm\n                     (z ?j1 + ?y1 *\\<^sub>R E ! ?j1 -\n                      (x \\<bullet> E ! ?j1) *\\<^sub>R E ! ?j1)\n                    < d\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have norm_z: \"norm (z j) < d\" if \"j < DIM('a)\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (z j) < d", "using norm_z'[OF that ends_in_segment(1)]"], ["proof (prove)\nusing this:\n  norm\n   (z j + (x \\<bullet> E ! j) *\\<^sub>R E ! j -\n    (x \\<bullet> E ! j) *\\<^sub>R E ! j)\n  < d\n\ngoal (1 subgoal):\n 1. norm (z j) < d", "by (auto simp: z_def)"], ["proof (state)\nthis:\n  ?j1 < DIM('a) \\<Longrightarrow> norm (z ?j1) < d\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "{"], ["proof (state)\nthis:\n  ?j1 < DIM('a) \\<Longrightarrow> norm (z ?j1) < d\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "assume j: \"j < DIM('a)\""], ["proof (state)\nthis:\n  j < DIM('a)\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have eq: \"(x + z j + ((y - (x + z j)) \\<bullet> E ! j) *\\<^sub>R E ! j +\n          (p - (x + z j + ((y - (x + z j)) \\<bullet> E ! j) *\\<^sub>R E ! j) \\<bullet> E ! j) *\\<^sub>R\n          E ! j) = (x + z j + (p - (x \\<bullet> E ! j)) *\\<^sub>R E ! j)\" for y p"], ["proof (prove)\ngoal (1 subgoal):\n 1. x + z j + ((y - (x + z j)) \\<bullet> E ! j) *\\<^sub>R E ! j +\n    (p -\n     (x + z j + ((y - (x + z j)) \\<bullet> E ! j) *\\<^sub>R E ! j) \\<bullet>\n     E ! j) *\\<^sub>R\n    E ! j =\n    x + z j + (p - x \\<bullet> E ! j) *\\<^sub>R E ! j", "by (auto simp: algebra_simps j z)"], ["proof (state)\nthis:\n  x + z j + ((?y1 - (x + z j)) \\<bullet> E ! j) *\\<^sub>R E ! j +\n  (?p1 -\n   (x + z j + ((?y1 - (x + z j)) \\<bullet> E ! j) *\\<^sub>R E ! j) \\<bullet>\n   E ! j) *\\<^sub>R\n  E ! j =\n  x + z j + (?p1 - x \\<bullet> E ! j) *\\<^sub>R E ! j\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have f_has_derivative: \"((\\<lambda>p. f (x + z j + (p - x \\<bullet> E ! j) *\\<^sub>R E ! j)) has_derivative (\\<lambda>xa. xa *\\<^sub>R f' (E ! j) (x + z j + ((y *\\<^sub>R E ! j - (x + z j)) \\<bullet> E ! j) *\\<^sub>R E ! j)))\n            (at y within closed_segment (x \\<bullet> E ! j) (x' \\<bullet> E ! j))\"\n          if \"y \\<in> closed_segment (x \\<bullet> E ! j) (x' \\<bullet> E ! j)\"\n          for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>p.\n         f (x + z j +\n            (p - x \\<bullet> E ! j) *\\<^sub>R E ! j)) has_derivative\n     (\\<lambda>xa.\n         xa *\\<^sub>R\n         f' (E ! j)\n          (x + z j +\n           ((y *\\<^sub>R E ! j - (x + z j)) \\<bullet> E ! j) *\\<^sub>R\n           E ! j)))\n     (at y within {x \\<bullet> E ! j--x' \\<bullet> E ! j})", "apply (rule has_derivative_subset)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((\\<lambda>p.\n         f (x + z j +\n            (p - x \\<bullet> E ! j) *\\<^sub>R E ! j)) has_derivative\n     (\\<lambda>xa.\n         xa *\\<^sub>R\n         f' (E ! j)\n          (x + z j +\n           ((y *\\<^sub>R E ! j - (x + z j)) \\<bullet> E ! j) *\\<^sub>R\n           E ! j)))\n     (at y within ?s)\n 2. {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<subseteq> ?s", "apply (rule f'[unfolded has_vector_derivative_def,\n                where x= \"x + z j + ((y *\\<^sub>R E!j - (x + z j))\\<bullet> E!j) *\\<^sub>R E ! j\" and i=\"E ! j\", unfolded eq])"], ["proof (prove)\ngoal (4 subgoals):\n 1. E ! j \\<in> Basis\n 2. \\<forall>ja\\<in>Basis.\n       (x + z j +\n        ((y *\\<^sub>R E ! j - (x + z j)) \\<bullet> E ! j) *\\<^sub>R\n        E ! j) \\<bullet>\n       ja\n       \\<in> X ja\n 3. y =\n    (x + z j +\n     ((y *\\<^sub>R E ! j - (x + z j)) \\<bullet> E ! j) *\\<^sub>R\n     E ! j) \\<bullet>\n    E ! j\n 4. {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<subseteq> X (E ! j)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. E ! j \\<in> Basis", "by (simp add: j)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<forall>ja\\<in>Basis.\n       (x + z j +\n        ((y *\\<^sub>R E ! j - (x + z j)) \\<bullet> E ! j) *\\<^sub>R\n        E ! j) \\<bullet>\n       ja\n       \\<in> X ja\n 2. y =\n    (x + z j +\n     ((y *\\<^sub>R E ! j - (x + z j)) \\<bullet> E ! j) *\\<^sub>R\n     E ! j) \\<bullet>\n    E ! j\n 3. {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<subseteq> X (E ! j)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ja\\<in>Basis.\n       (x + z j +\n        ((y *\\<^sub>R E ! j - (x + z j)) \\<bullet> E ! j) *\\<^sub>R\n        E ! j) \\<bullet>\n       ja\n       \\<in> X ja", "using that"], ["proof (prove)\nusing this:\n  y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j}\n\ngoal (1 subgoal):\n 1. \\<forall>ja\\<in>Basis.\n       (x + z j +\n        ((y *\\<^sub>R E ! j - (x + z j)) \\<bullet> E ! j) *\\<^sub>R\n        E ! j) \\<bullet>\n       ja\n       \\<in> X ja", "apply (auto simp: algebra_simps z j inner_Basis)"], ["proof (prove)\ngoal (2 subgoals):\n 1. y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n    y \\<in> X (E ! j)\n 2. \\<And>ja.\n       \\<lbrakk>y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j};\n        ja \\<in> Basis; E ! j \\<noteq> ja\\<rbrakk>\n       \\<Longrightarrow> x \\<bullet> ja + z j \\<bullet> ja \\<in> X ja", "using closed_segment_commute \\<open>E ! j \\<in> Basis\\<close> csc_subset"], ["proof (prove)\nusing this:\n  {?a--?b} = {?b--?a}\n  E ! j \\<in> Basis\n  ?i1 \\<in> Basis \\<Longrightarrow>\n  {x' \\<bullet> ?i1--x \\<bullet> ?i1} \\<subseteq> X ?i1\n\ngoal (2 subgoals):\n 1. y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n    y \\<in> X (E ! j)\n 2. \\<And>ja.\n       \\<lbrakk>y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j};\n        ja \\<in> Basis; E ! j \\<noteq> ja\\<rbrakk>\n       \\<Longrightarrow> x \\<bullet> ja + z j \\<bullet> ja \\<in> X ja", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ja.\n       \\<lbrakk>y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j};\n        ja \\<in> Basis; E ! j \\<noteq> ja\\<rbrakk>\n       \\<Longrightarrow> x \\<bullet> ja + z j \\<bullet> ja \\<in> X ja", "by (simp add: z_mem j)"], ["proof (prove)\ngoal (2 subgoals):\n 1. y =\n    (x + z j +\n     ((y *\\<^sub>R E ! j - (x + z j)) \\<bullet> E ! j) *\\<^sub>R\n     E ! j) \\<bullet>\n    E ! j\n 2. {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<subseteq> X (E ! j)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. y =\n    (x + z j +\n     ((y *\\<^sub>R E ! j - (x + z j)) \\<bullet> E ! j) *\\<^sub>R\n     E ! j) \\<bullet>\n    E ! j", "by (auto simp: algebra_simps z j inner_Basis)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<subseteq> X (E ! j)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<subseteq> X (E ! j)", "apply (auto simp: algebra_simps z j inner_Basis)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n       xa \\<in> X (E ! j)", "using closed_segment_commute \\<open>\\<And>j. j < DIM('a) \\<Longrightarrow> E ! j \\<in> Basis\\<close> csc_subset j"], ["proof (prove)\nusing this:\n  {?a--?b} = {?b--?a}\n  ?j < DIM('a) \\<Longrightarrow> E ! ?j \\<in> Basis\n  ?i1 \\<in> Basis \\<Longrightarrow>\n  {x' \\<bullet> ?i1--x \\<bullet> ?i1} \\<subseteq> X ?i1\n  j < DIM('a)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n       xa \\<in> X (E ! j)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ?y1 \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n  ((\\<lambda>p.\n       f (x + z j + (p - x \\<bullet> E ! j) *\\<^sub>R E ! j)) has_derivative\n   (\\<lambda>xa.\n       xa *\\<^sub>R\n       f' (E ! j)\n        (x + z j +\n         ((?y1 *\\<^sub>R E ! j - (x + z j)) \\<bullet> E ! j) *\\<^sub>R\n         E ! j)))\n   (at ?y1 within {x \\<bullet> E ! j--x' \\<bullet> E ! j})\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have *: \"((xa *\\<^sub>R E ! j - (x + z j)) \\<bullet> E ! j) = xa - x \\<bullet> E ! j\" for xa"], ["proof (prove)\ngoal (1 subgoal):\n 1. (xa *\\<^sub>R E ! j - (x + z j)) \\<bullet> E ! j =\n    xa - x \\<bullet> E ! j", "by (auto simp: algebra_simps z j)"], ["proof (state)\nthis:\n  (?xa1 *\\<^sub>R E ! j - (x + z j)) \\<bullet> E ! j =\n  ?xa1 - x \\<bullet> E ! j\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have g': \"(g j has_vector_derivative (f' (E ! j) (x + z j + (xa - x \\<bullet> E ! j) *\\<^sub>R E ! j)))\n          (at xa within (closed_segment (x\\<bullet>E!j) (x'\\<bullet>E!j)))\"\n          (is \"(_ has_vector_derivative ?g' j xa) _\")\n          if \"xa \\<in> closed_segment (x\\<bullet>E!j) (x'\\<bullet>E!j)\" for xa"], ["proof (prove)\ngoal (1 subgoal):\n 1. (g j has_vector_derivative\n     f' (E ! j) (x + z j + (xa - x \\<bullet> E ! j) *\\<^sub>R E ! j))\n     (at xa within {x \\<bullet> E ! j--x' \\<bullet> E ! j})", "using that"], ["proof (prove)\nusing this:\n  xa \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j}\n\ngoal (1 subgoal):\n 1. (g j has_vector_derivative\n     f' (E ! j) (x + z j + (xa - x \\<bullet> E ! j) *\\<^sub>R E ! j))\n     (at xa within {x \\<bullet> E ! j--x' \\<bullet> E ! j})", "by (auto simp: has_vector_derivative_def g_def[abs_def] *\n              intro!: derivative_eq_intros f_has_derivative[THEN has_derivative_eq_rhs])"], ["proof (state)\nthis:\n  ?xa1 \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n  (g j has_vector_derivative\n   f' (E ! j) (x + z j + (?xa1 - x \\<bullet> E ! j) *\\<^sub>R E ! j))\n   (at ?xa1 within {x \\<bullet> E ! j--x' \\<bullet> E ! j})\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "define g' where \"g' j = ?g' j\" for j"], ["proof (state)\nthis:\n  g' ?j =\n  (\\<lambda>a.\n      f' (E ! ?j) (x + z ?j + (a - x \\<bullet> E ! ?j) *\\<^sub>R E ! ?j))\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "with g'"], ["proof (chain)\npicking this:\n  ?xa1 \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n  (g j has_vector_derivative\n   f' (E ! j) (x + z j + (?xa1 - x \\<bullet> E ! j) *\\<^sub>R E ! j))\n   (at ?xa1 within {x \\<bullet> E ! j--x' \\<bullet> E ! j})\n  g' ?j =\n  (\\<lambda>a.\n      f' (E ! ?j) (x + z ?j + (a - x \\<bullet> E ! ?j) *\\<^sub>R E ! ?j))", "have g': \"(g j has_vector_derivative g' j t) (at t within closed_segment (x\\<bullet>E!j) (x'\\<bullet>E!j))\"\n          if \"t \\<in> closed_segment (x\\<bullet>E!j) (x'\\<bullet>E!j)\"\n          for t"], ["proof (prove)\nusing this:\n  ?xa1 \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n  (g j has_vector_derivative\n   f' (E ! j) (x + z j + (?xa1 - x \\<bullet> E ! j) *\\<^sub>R E ! j))\n   (at ?xa1 within {x \\<bullet> E ! j--x' \\<bullet> E ! j})\n  g' ?j =\n  (\\<lambda>a.\n      f' (E ! ?j) (x + z ?j + (a - x \\<bullet> E ! ?j) *\\<^sub>R E ! ?j))\n\ngoal (1 subgoal):\n 1. (g j has_vector_derivative g' j t)\n     (at t within {x \\<bullet> E ! j--x' \\<bullet> E ! j})", "by (simp add: that)"], ["proof (state)\nthis:\n  ?t1 \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n  (g j has_vector_derivative g' j ?t1)\n   (at ?t1 within {x \\<bullet> E ! j--x' \\<bullet> E ! j})\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have cont_bound: \"\\<And>y. y\\<in>closed_segment (x \\<bullet> E ! j) (x' \\<bullet> E ! j) \\<Longrightarrow> norm (g' j y - g' j (x \\<bullet> E ! j)) \\<le> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n       norm (g' j y - g' j (x \\<bullet> E ! j)) \\<le> B", "apply (auto simp add: g'_def j algebra_simps inner_Basis z dist_norm\n              intro!: less_imp_le B z_mem norm_z norm_z')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n       y \\<in> X (E ! j)", "using closed_segment_commute \\<open>\\<And>j. j < DIM('a) \\<Longrightarrow> E ! j \\<in> Basis\\<close> csc_subset j"], ["proof (prove)\nusing this:\n  {?a--?b} = {?b--?a}\n  ?j < DIM('a) \\<Longrightarrow> E ! ?j \\<in> Basis\n  ?i1 \\<in> Basis \\<Longrightarrow>\n  {x' \\<bullet> ?i1--x \\<bullet> ?i1} \\<subseteq> X ?i1\n  j < DIM('a)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n       y \\<in> X (E ! j)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ?y1 \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n  norm (g' j ?y1 - g' j (x \\<bullet> E ! j)) \\<le> B\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "from vector_differentiable_bound_linearization[OF g' order_refl cont_bound ends_in_segment(1)]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>xa.\n              xa \\<in> {x \\<bullet>\n                        E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n              xa \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j};\n   \\<And>xa.\n      xa \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n      xa \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j}\\<rbrakk>\n  \\<Longrightarrow> norm\n                     (g j (x' \\<bullet> E ! j) - g j (x \\<bullet> E ! j) -\n                      (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n                      g' j (x \\<bullet> E ! j))\n                    \\<le> norm (x' \\<bullet> E ! j - x \\<bullet> E ! j) * B", "have n: \"norm (g j (x' \\<bullet> E ! j) - g j (x \\<bullet> E ! j) - (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R g' j (x \\<bullet> E ! j)) \\<le> norm (x' \\<bullet> E ! j - x \\<bullet> E ! j) * B\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>xa.\n              xa \\<in> {x \\<bullet>\n                        E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n              xa \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j};\n   \\<And>xa.\n      xa \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j} \\<Longrightarrow>\n      xa \\<in> {x \\<bullet> E ! j--x' \\<bullet> E ! j}\\<rbrakk>\n  \\<Longrightarrow> norm\n                     (g j (x' \\<bullet> E ! j) - g j (x \\<bullet> E ! j) -\n                      (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n                      g' j (x \\<bullet> E ! j))\n                    \\<le> norm (x' \\<bullet> E ! j - x \\<bullet> E ! j) * B\n\ngoal (1 subgoal):\n 1. norm\n     (g j (x' \\<bullet> E ! j) - g j (x \\<bullet> E ! j) -\n      (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n      g' j (x \\<bullet> E ! j))\n    \\<le> norm (x' \\<bullet> E ! j - x \\<bullet> E ! j) * B", "."], ["proof (state)\nthis:\n  norm\n   (g j (x' \\<bullet> E ! j) - g j (x \\<bullet> E ! j) -\n    (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n    g' j (x \\<bullet> E ! j))\n  \\<le> norm (x' \\<bullet> E ! j - x \\<bullet> E ! j) * B\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have \"z (Suc j) = z j + (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R E ! j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z (Suc j) =\n    z j + (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R E ! j", "by (auto simp: z_def h_def algebra_simps)"], ["proof (state)\nthis:\n  z (Suc j) = z j + (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R E ! j\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "then"], ["proof (chain)\npicking this:\n  z (Suc j) = z j + (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R E ! j", "have \"f (x + z (Suc j)) = f (x + z j + (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R E ! j) \""], ["proof (prove)\nusing this:\n  z (Suc j) = z j + (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R E ! j\n\ngoal (1 subgoal):\n 1. f (x + z (Suc j)) =\n    f (x + z j + (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R E ! j)", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  f (x + z (Suc j)) =\n  f (x + z j + (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R E ! j)\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "with n"], ["proof (chain)\npicking this:\n  norm\n   (g j (x' \\<bullet> E ! j) - g j (x \\<bullet> E ! j) -\n    (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n    g' j (x \\<bullet> E ! j))\n  \\<le> norm (x' \\<bullet> E ! j - x \\<bullet> E ! j) * B\n  f (x + z (Suc j)) =\n  f (x + z j + (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R E ! j)", "have \"norm (f (x + z (Suc j)) - f (x + z j) - (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R f' (E ! j) (x + z j)) \\<le> \\<bar>x' \\<bullet> E ! j - x \\<bullet> E ! j\\<bar> * B\""], ["proof (prove)\nusing this:\n  norm\n   (g j (x' \\<bullet> E ! j) - g j (x \\<bullet> E ! j) -\n    (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n    g' j (x \\<bullet> E ! j))\n  \\<le> norm (x' \\<bullet> E ! j - x \\<bullet> E ! j) * B\n  f (x + z (Suc j)) =\n  f (x + z j + (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R E ! j)\n\ngoal (1 subgoal):\n 1. norm\n     (f (x + z (Suc j)) - f (x + z j) -\n      (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n      f' (E ! j) (x + z j))\n    \\<le> \\<bar>x' \\<bullet> E ! j - x \\<bullet> E ! j\\<bar> * B", "by (simp add: g_def g'_def)"], ["proof (state)\nthis:\n  norm\n   (f (x + z (Suc j)) - f (x + z j) -\n    (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R f' (E ! j) (x + z j))\n  \\<le> \\<bar>x' \\<bullet> E ! j - x \\<bullet> E ! j\\<bar> * B\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "}"], ["proof (state)\nthis:\n  ?j3 < DIM('a) \\<Longrightarrow>\n  norm\n   (f (x + z (Suc ?j3)) - f (x + z ?j3) -\n    (x' \\<bullet> E ! ?j3 - x \\<bullet> E ! ?j3) *\\<^sub>R\n    f' (E ! ?j3) (x + z ?j3))\n  \\<le> \\<bar>x' \\<bullet> E ! ?j3 - x \\<bullet> E ! ?j3\\<bar> * B\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "note B_le = this"], ["proof (state)\nthis:\n  ?j3 < DIM('a) \\<Longrightarrow>\n  norm\n   (f (x + z (Suc ?j3)) - f (x + z ?j3) -\n    (x' \\<bullet> E ! ?j3 - x \\<bullet> E ! ?j3) *\\<^sub>R\n    f' (E ! ?j3) (x + z ?j3))\n  \\<le> \\<bar>x' \\<bullet> E ! ?j3 - x \\<bullet> E ! ?j3\\<bar> * B\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have B': \"norm (f' (E ! j) (x + z j) - f' (E ! j) x) \\<le> B\" if \"j < DIM('a)\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f' (E ! j) (x + z j) - f' (E ! j) x) \\<le> B", "using that assms(3)"], ["proof (prove)\nusing this:\n  j < DIM('a)\n  ?i \\<in> Basis \\<Longrightarrow> x \\<bullet> ?i \\<in> X ?i\n\ngoal (1 subgoal):\n 1. norm (f' (E ! j) (x + z j) - f' (E ! j) x) \\<le> B", "by (auto simp add: algebra_simps inner_Basis z dist_norm \\<open>0 < d\\<close>\n            intro!: less_imp_le B z_mem norm_z)"], ["proof (state)\nthis:\n  ?j1 < DIM('a) \\<Longrightarrow>\n  norm (f' (E ! ?j1) (x + z ?j1) - f' (E ! ?j1) x) \\<le> B\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have \"(\\<Sum>j\\<le>DIM('a) - 1. f (x + z j) - f (x + z (Suc j))) = f (x + z 0) - f (x + z (Suc (DIM('a) - 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<le>DIM('a) - 1. f (x + z j) - f (x + z (Suc j))) =\n    f (x + z 0) - f (x + z (Suc (DIM('a) - 1)))", "by (rule sum_telescope)"], ["proof (state)\nthis:\n  (\\<Sum>j\\<le>DIM('a) - 1. f (x + z j) - f (x + z (Suc j))) =\n  f (x + z 0) - f (x + z (Suc (DIM('a) - 1)))\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>j\\<le>DIM('a) - 1. f (x + z j) - f (x + z (Suc j))) =\n  f (x + z 0) - f (x + z (Suc (DIM('a) - 1)))\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have \"z DIM('a) = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z DIM('a) = h", "using index"], ["proof (prove)\nusing this:\n  ?i1 \\<in> Basis \\<Longrightarrow> ?i1 = E ! index ?i1\n  ?i1 \\<in> Basis \\<Longrightarrow> index ?i1 < DIM('a)\n\ngoal (1 subgoal):\n 1. z DIM('a) = h", "by (auto simp: z_def h_def algebra_simps inner_sum_left inner_Basis if_distrib\n            nth_eq_iff_index \n            sum.delta \n            intro!: euclidean_eqI[where 'a='a]\n            cong: if_cong)"], ["proof (state)\nthis:\n  z DIM('a) = h\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "moreover"], ["proof (state)\nthis:\n  z DIM('a) = h\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have \"z 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z 0 = (0::'a)", "by (auto simp: z_def)"], ["proof (state)\nthis:\n  z 0 = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "moreover"], ["proof (state)\nthis:\n  z 0 = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have \"{..DIM('a) - 1} = {..<DIM('a)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..DIM('a) - 1} = {..<DIM('a)}", "using le_imp_less_Suc"], ["proof (prove)\nusing this:\n  ?m \\<le> ?n \\<Longrightarrow> ?m < Suc ?n\n\ngoal (1 subgoal):\n 1. {..DIM('a) - 1} = {..<DIM('a)}", "by fastforce"], ["proof (state)\nthis:\n  {..DIM('a) - 1} = {..<DIM('a)}\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>j\\<le>DIM('a) - 1. f (x + z j) - f (x + z (Suc j))) =\n  f (x + z 0) - f (x + z (Suc (DIM('a) - 1)))\n  z DIM('a) = h\n  z 0 = (0::'a)\n  {..DIM('a) - 1} = {..<DIM('a)}", "have \"f x - f (x + h) = (\\<Sum>j<DIM('a). f (x + z j) - f (x + z (Suc j)))\""], ["proof (prove)\nusing this:\n  (\\<Sum>j\\<le>DIM('a) - 1. f (x + z j) - f (x + z (Suc j))) =\n  f (x + z 0) - f (x + z (Suc (DIM('a) - 1)))\n  z DIM('a) = h\n  z 0 = (0::'a)\n  {..DIM('a) - 1} = {..<DIM('a)}\n\ngoal (1 subgoal):\n 1. f x - f (x + h) = (\\<Sum>j<DIM('a). f (x + z j) - f (x + z (Suc j)))", "by (auto simp: )"], ["proof (state)\nthis:\n  f x - f (x + h) = (\\<Sum>j<DIM('a). f (x + z j) - f (x + z (Suc j)))\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "then"], ["proof (chain)\npicking this:\n  f x - f (x + h) = (\\<Sum>j<DIM('a). f (x + z j) - f (x + z (Suc j)))", "have \"norm (f (x + h) - f x - (\\<Sum>j\\<in>Basis. ((x' - x) \\<bullet> j) *\\<^sub>R f' j x)) =\n        norm(\n          (\\<Sum>j<DIM('a). f (x + z (Suc j)) - f (x + z j) - (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R f' (E ! j) (x + z j)) +\n          (\\<Sum>j<DIM('a). (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R (f' (E ! j) (x + z j) - f' (E ! j) x)))\"\n        (is \"_ = norm (sum ?a ?E + sum ?b ?E)\")"], ["proof (prove)\nusing this:\n  f x - f (x + h) = (\\<Sum>j<DIM('a). f (x + z j) - f (x + z (Suc j)))\n\ngoal (1 subgoal):\n 1. norm\n     (f (x + h) - f x -\n      (\\<Sum>j\\<in>Basis. ((x' - x) \\<bullet> j) *\\<^sub>R f' j x)) =\n    norm\n     ((\\<Sum>j<DIM('a).\n          f (x + z (Suc j)) - f (x + z j) -\n          (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n          f' (E ! j) (x + z j)) +\n      (\\<Sum>j<DIM('a).\n          (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n          (f' (E ! j) (x + z j) - f' (E ! j) x)))", "by (intro arg_cong[where f=norm]) (simp add: sum_negf sum_subtractf sum.distrib algebra_simps sum_Basis_E)"], ["proof (state)\nthis:\n  norm\n   (f (x + h) - f x -\n    (\\<Sum>j\\<in>Basis. ((x' - x) \\<bullet> j) *\\<^sub>R f' j x)) =\n  norm\n   ((\\<Sum>j<DIM('a).\n        f (x + z (Suc j)) - f (x + z j) -\n        (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n        f' (E ! j) (x + z j)) +\n    (\\<Sum>j<DIM('a).\n        (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n        (f' (E ! j) (x + z j) - f' (E ! j) x)))\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "also"], ["proof (state)\nthis:\n  norm\n   (f (x + h) - f x -\n    (\\<Sum>j\\<in>Basis. ((x' - x) \\<bullet> j) *\\<^sub>R f' j x)) =\n  norm\n   ((\\<Sum>j<DIM('a).\n        f (x + z (Suc j)) - f (x + z j) -\n        (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n        f' (E ! j) (x + z j)) +\n    (\\<Sum>j<DIM('a).\n        (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n        (f' (E ! j) (x + z j) - f' (E ! j) x)))\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have \"\\<dots> \\<le> norm (sum ?a ?E) + norm (sum ?b ?E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm\n     ((\\<Sum>j<DIM('a).\n          f (x + z (Suc j)) - f (x + z j) -\n          (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n          f' (E ! j) (x + z j)) +\n      (\\<Sum>j<DIM('a).\n          (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n          (f' (E ! j) (x + z j) - f' (E ! j) x)))\n    \\<le> norm\n           (\\<Sum>j<DIM('a).\n               f (x + z (Suc j)) - f (x + z j) -\n               (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n               f' (E ! j) (x + z j)) +\n          norm\n           (\\<Sum>j<DIM('a).\n               (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n               (f' (E ! j) (x + z j) - f' (E ! j) x))", "by (norm)"], ["proof (state)\nthis:\n  norm\n   ((\\<Sum>j<DIM('a).\n        f (x + z (Suc j)) - f (x + z j) -\n        (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n        f' (E ! j) (x + z j)) +\n    (\\<Sum>j<DIM('a).\n        (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n        (f' (E ! j) (x + z j) - f' (E ! j) x)))\n  \\<le> norm\n         (\\<Sum>j<DIM('a).\n             f (x + z (Suc j)) - f (x + z j) -\n             (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n             f' (E ! j) (x + z j)) +\n        norm\n         (\\<Sum>j<DIM('a).\n             (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n             (f' (E ! j) (x + z j) - f' (E ! j) x))\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "also"], ["proof (state)\nthis:\n  norm\n   ((\\<Sum>j<DIM('a).\n        f (x + z (Suc j)) - f (x + z j) -\n        (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n        f' (E ! j) (x + z j)) +\n    (\\<Sum>j<DIM('a).\n        (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n        (f' (E ! j) (x + z j) - f' (E ! j) x)))\n  \\<le> norm\n         (\\<Sum>j<DIM('a).\n             f (x + z (Suc j)) - f (x + z j) -\n             (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n             f' (E ! j) (x + z j)) +\n        norm\n         (\\<Sum>j<DIM('a).\n             (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n             (f' (E ! j) (x + z j) - f' (E ! j) x))\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have \"norm (sum ?a ?E) \\<le> sum (\\<lambda>x. norm (?a x)) ?E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm\n     (\\<Sum>j<DIM('a).\n         f (x + z (Suc j)) - f (x + z j) -\n         (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n         f' (E ! j) (x + z j))\n    \\<le> (\\<Sum>xa<DIM('a).\n              norm\n               (f (x + z (Suc xa)) - f (x + z xa) -\n                (x' \\<bullet> E ! xa - x \\<bullet> E ! xa) *\\<^sub>R\n                f' (E ! xa) (x + z xa)))", "by (rule norm_sum)"], ["proof (state)\nthis:\n  norm\n   (\\<Sum>j<DIM('a).\n       f (x + z (Suc j)) - f (x + z j) -\n       (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n       f' (E ! j) (x + z j))\n  \\<le> (\\<Sum>xa<DIM('a).\n            norm\n             (f (x + z (Suc xa)) - f (x + z xa) -\n              (x' \\<bullet> E ! xa - x \\<bullet> E ! xa) *\\<^sub>R\n              f' (E ! xa) (x + z xa)))\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "also"], ["proof (state)\nthis:\n  norm\n   (\\<Sum>j<DIM('a).\n       f (x + z (Suc j)) - f (x + z j) -\n       (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n       f' (E ! j) (x + z j))\n  \\<le> (\\<Sum>xa<DIM('a).\n            norm\n             (f (x + z (Suc xa)) - f (x + z xa) -\n              (x' \\<bullet> E ! xa - x \\<bullet> E ! xa) *\\<^sub>R\n              f' (E ! xa) (x + z xa)))\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have \"\\<dots> \\<le> sum (\\<lambda>j. norm \\<bar>x' \\<bullet> E ! j - x \\<bullet> E ! j\\<bar> * B) ?E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>xa<DIM('a).\n        norm\n         (f (x + z (Suc xa)) - f (x + z xa) -\n          (x' \\<bullet> E ! xa - x \\<bullet> E ! xa) *\\<^sub>R\n          f' (E ! xa) (x + z xa)))\n    \\<le> (\\<Sum>j<DIM('a).\n              norm \\<bar>x' \\<bullet> E ! j - x \\<bullet> E ! j\\<bar> * B)", "by (auto intro!: sum_mono B_le)"], ["proof (state)\nthis:\n  (\\<Sum>xa<DIM('a).\n      norm\n       (f (x + z (Suc xa)) - f (x + z xa) -\n        (x' \\<bullet> E ! xa - x \\<bullet> E ! xa) *\\<^sub>R\n        f' (E ! xa) (x + z xa)))\n  \\<le> (\\<Sum>j<DIM('a).\n            norm \\<bar>x' \\<bullet> E ! j - x \\<bullet> E ! j\\<bar> * B)\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "also"], ["proof (state)\nthis:\n  (\\<Sum>xa<DIM('a).\n      norm\n       (f (x + z (Suc xa)) - f (x + z xa) -\n        (x' \\<bullet> E ! xa - x \\<bullet> E ! xa) *\\<^sub>R\n        f' (E ! xa) (x + z xa)))\n  \\<le> (\\<Sum>j<DIM('a).\n            norm \\<bar>x' \\<bullet> E ! j - x \\<bullet> E ! j\\<bar> * B)\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have \"\\<dots> \\<le> sum (\\<lambda>j. norm (x' - x) * B) ?E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j<DIM('a).\n        norm \\<bar>x' \\<bullet> E ! j - x \\<bullet> E ! j\\<bar> * B)\n    \\<le> (\\<Sum>j<DIM('a). norm (x' - x) * B)", "apply (rule sum_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {..<DIM('a)} \\<Longrightarrow>\n       norm \\<bar>x' \\<bullet> E ! j - x \\<bullet> E ! j\\<bar> * B\n       \\<le> norm (x' - x) * B", "apply (auto intro!: mult_right_mono \\<open>0 \\<le> B\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < DIM('a) \\<Longrightarrow>\n       \\<bar>x' \\<bullet> E ! j - x \\<bullet> E ! j\\<bar>\n       \\<le> norm (x' - x)", "by (metis (full_types) \\<open>\\<And>j. j < DIM('a) \\<Longrightarrow> E ! j \\<in> Basis\\<close> inner_diff_left norm_bound_Basis_le order_refl)"], ["proof (state)\nthis:\n  (\\<Sum>j<DIM('a).\n      norm \\<bar>x' \\<bullet> E ! j - x \\<bullet> E ! j\\<bar> * B)\n  \\<le> (\\<Sum>j<DIM('a). norm (x' - x) * B)\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "also"], ["proof (state)\nthis:\n  (\\<Sum>j<DIM('a).\n      norm \\<bar>x' \\<bullet> E ! j - x \\<bullet> E ! j\\<bar> * B)\n  \\<le> (\\<Sum>j<DIM('a). norm (x' - x) * B)\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have \"\\<dots> = norm (x' - x) * DIM('a) * B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j<DIM('a). norm (x' - x) * B) = norm (x' - x) * real DIM('a) * B", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>j<DIM('a). norm (x' - x) * B) = norm (x' - x) * real DIM('a) * B\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "also"], ["proof (state)\nthis:\n  (\\<Sum>j<DIM('a). norm (x' - x) * B) = norm (x' - x) * real DIM('a) * B\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have \"norm (sum ?b ?E) \\<le> sum (\\<lambda>x. norm (?b x)) ?E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm\n     (\\<Sum>j<DIM('a).\n         (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n         (f' (E ! j) (x + z j) - f' (E ! j) x))\n    \\<le> (\\<Sum>xa<DIM('a).\n              norm\n               ((x' \\<bullet> E ! xa - x \\<bullet> E ! xa) *\\<^sub>R\n                (f' (E ! xa) (x + z xa) - f' (E ! xa) x)))", "by (rule norm_sum)"], ["proof (state)\nthis:\n  norm\n   (\\<Sum>j<DIM('a).\n       (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n       (f' (E ! j) (x + z j) - f' (E ! j) x))\n  \\<le> (\\<Sum>xa<DIM('a).\n            norm\n             ((x' \\<bullet> E ! xa - x \\<bullet> E ! xa) *\\<^sub>R\n              (f' (E ! xa) (x + z xa) - f' (E ! xa) x)))\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "also"], ["proof (state)\nthis:\n  norm\n   (\\<Sum>j<DIM('a).\n       (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n       (f' (E ! j) (x + z j) - f' (E ! j) x))\n  \\<le> (\\<Sum>xa<DIM('a).\n            norm\n             ((x' \\<bullet> E ! xa - x \\<bullet> E ! xa) *\\<^sub>R\n              (f' (E ! xa) (x + z xa) - f' (E ! xa) x)))\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have \"\\<dots> \\<le> sum (\\<lambda>j. norm (x' - x) * B) ?E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>xa<DIM('a).\n        norm\n         ((x' \\<bullet> E ! xa - x \\<bullet> E ! xa) *\\<^sub>R\n          (f' (E ! xa) (x + z xa) - f' (E ! xa) x)))\n    \\<le> (\\<Sum>j<DIM('a). norm (x' - x) * B)", "apply (intro sum_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {..<DIM('a)} \\<Longrightarrow>\n       norm\n        ((x' \\<bullet> E ! xa - x \\<bullet> E ! xa) *\\<^sub>R\n         (f' (E ! xa) (x + z xa) - f' (E ! xa) x))\n       \\<le> norm (x' - x) * B", "apply (auto intro!: mult_mono B')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa < DIM('a) \\<Longrightarrow>\n       \\<bar>x' \\<bullet> E ! xa - x \\<bullet> E ! xa\\<bar>\n       \\<le> norm (x' - x)", "apply (metis (full_types) \\<open>\\<And>j. j < DIM('a) \\<Longrightarrow> E ! j \\<in> Basis\\<close> inner_diff_left norm_bound_Basis_le order_refl)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<Sum>xa<DIM('a).\n      norm\n       ((x' \\<bullet> E ! xa - x \\<bullet> E ! xa) *\\<^sub>R\n        (f' (E ! xa) (x + z xa) - f' (E ! xa) x)))\n  \\<le> (\\<Sum>j<DIM('a). norm (x' - x) * B)\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "also"], ["proof (state)\nthis:\n  (\\<Sum>xa<DIM('a).\n      norm\n       ((x' \\<bullet> E ! xa - x \\<bullet> E ! xa) *\\<^sub>R\n        (f' (E ! xa) (x + z xa) - f' (E ! xa) x)))\n  \\<le> (\\<Sum>j<DIM('a). norm (x' - x) * B)\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have \"\\<dots> = norm (x' - x) * DIM('a) * B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j<DIM('a). norm (x' - x) * B) = norm (x' - x) * real DIM('a) * B", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>j<DIM('a). norm (x' - x) * B) = norm (x' - x) * real DIM('a) * B\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>xa y.\n              xa \\<le> y \\<Longrightarrow>\n              xa +\n              norm\n               (\\<Sum>j<DIM('a).\n                   (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n                   (f' (E ! j) (x + z j) - f' (E ! j) x))\n              \\<le> y +\n                    norm\n                     (\\<Sum>j<DIM('a).\n                         (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n                         (f' (E ! j) (x + z j) - f' (E ! j) x));\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      xa +\n      norm\n       (\\<Sum>j<DIM('a).\n           (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n           (f' (E ! j) (x + z j) - f' (E ! j) x))\n      \\<le> y +\n            norm\n             (\\<Sum>j<DIM('a).\n                 (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n                 (f' (E ! j) (x + z j) - f' (E ! j) x));\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      xa +\n      norm\n       (\\<Sum>j<DIM('a).\n           (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n           (f' (E ! j) (x + z j) - f' (E ! j) x))\n      \\<le> y +\n            norm\n             (\\<Sum>j<DIM('a).\n                 (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n                 (f' (E ! j) (x + z j) - f' (E ! j) x));\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      norm (x' - x) * real DIM('a) * B + xa\n      \\<le> norm (x' - x) * real DIM('a) * B + y;\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      norm (x' - x) * real DIM('a) * B + xa\n      \\<le> norm (x' - x) * real DIM('a) * B + y\\<rbrakk>\n  \\<Longrightarrow> norm\n                     (f (x + h) - f x -\n                      (\\<Sum>j\\<in>Basis.\n                         ((x' - x) \\<bullet> j) *\\<^sub>R f' j x))\n                    \\<le> norm (x' - x) * real DIM('a) * B +\n                          norm (x' - x) * real DIM('a) * B", "have \"norm (f (x + h) - f x - (\\<Sum>j\\<in>Basis. ((x' - x) \\<bullet> j) *\\<^sub>R f' j x)) \\<le>\n          norm (x' - x) * real DIM('a) * B + norm (x' - x) * real DIM('a) * B\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>xa y.\n              xa \\<le> y \\<Longrightarrow>\n              xa +\n              norm\n               (\\<Sum>j<DIM('a).\n                   (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n                   (f' (E ! j) (x + z j) - f' (E ! j) x))\n              \\<le> y +\n                    norm\n                     (\\<Sum>j<DIM('a).\n                         (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n                         (f' (E ! j) (x + z j) - f' (E ! j) x));\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      xa +\n      norm\n       (\\<Sum>j<DIM('a).\n           (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n           (f' (E ! j) (x + z j) - f' (E ! j) x))\n      \\<le> y +\n            norm\n             (\\<Sum>j<DIM('a).\n                 (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n                 (f' (E ! j) (x + z j) - f' (E ! j) x));\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      xa +\n      norm\n       (\\<Sum>j<DIM('a).\n           (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n           (f' (E ! j) (x + z j) - f' (E ! j) x))\n      \\<le> y +\n            norm\n             (\\<Sum>j<DIM('a).\n                 (x' \\<bullet> E ! j - x \\<bullet> E ! j) *\\<^sub>R\n                 (f' (E ! j) (x + z j) - f' (E ! j) x));\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      norm (x' - x) * real DIM('a) * B + xa\n      \\<le> norm (x' - x) * real DIM('a) * B + y;\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      norm (x' - x) * real DIM('a) * B + xa\n      \\<le> norm (x' - x) * real DIM('a) * B + y\\<rbrakk>\n  \\<Longrightarrow> norm\n                     (f (x + h) - f x -\n                      (\\<Sum>j\\<in>Basis.\n                         ((x' - x) \\<bullet> j) *\\<^sub>R f' j x))\n                    \\<le> norm (x' - x) * real DIM('a) * B +\n                          norm (x' - x) * real DIM('a) * B\n\ngoal (1 subgoal):\n 1. norm\n     (f (x + h) - f x -\n      (\\<Sum>j\\<in>Basis. ((x' - x) \\<bullet> j) *\\<^sub>R f' j x))\n    \\<le> norm (x' - x) * real DIM('a) * B +\n          norm (x' - x) * real DIM('a) * B", "by arith"], ["proof (state)\nthis:\n  norm\n   (f (x + h) - f x -\n    (\\<Sum>j\\<in>Basis. ((x' - x) \\<bullet> j) *\\<^sub>R f' j x))\n  \\<le> norm (x' - x) * real DIM('a) * B + norm (x' - x) * real DIM('a) * B\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "also"], ["proof (state)\nthis:\n  norm\n   (f (x + h) - f x -\n    (\\<Sum>j\\<in>Basis. ((x' - x) \\<bullet> j) *\\<^sub>R f' j x))\n  \\<le> norm (x' - x) * real DIM('a) * B + norm (x' - x) * real DIM('a) * B\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have \"\\<dots> /\\<^sub>R norm (x' - x) \\<le> norm (2 * DIM('a) * B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (norm (x' - x) * real DIM('a) * B +\n     norm (x' - x) * real DIM('a) * B) /\\<^sub>R\n    norm (x' - x)\n    \\<le> norm (real (2 * DIM('a)) * B)", "using \\<open>B \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> B\n\ngoal (1 subgoal):\n 1. (norm (x' - x) * real DIM('a) * B +\n     norm (x' - x) * real DIM('a) * B) /\\<^sub>R\n    norm (x' - x)\n    \\<le> norm (real (2 * DIM('a)) * B)", "by (simp add: divide_simps abs_mult)"], ["proof (state)\nthis:\n  (norm (x' - x) * real DIM('a) * B +\n   norm (x' - x) * real DIM('a) * B) /\\<^sub>R\n  norm (x' - x)\n  \\<le> norm (real (2 * DIM('a)) * B)\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "also"], ["proof (state)\nthis:\n  (norm (x' - x) * real DIM('a) * B +\n   norm (x' - x) * real DIM('a) * B) /\\<^sub>R\n  norm (x' - x)\n  \\<le> norm (real (2 * DIM('a)) * B)\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "have \"\\<dots> < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (real (2 * DIM('a)) * B) < e", "using B_thms"], ["proof (prove)\nusing this:\n  0 < B\n  real (2 * DIM('a)) * B < e\n  0 \\<le> B\n\ngoal (1 subgoal):\n 1. norm (real (2 * DIM('a)) * B) < e", "by simp"], ["proof (state)\nthis:\n  norm (real (2 * DIM('a)) * B) < e\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {x'.\n                          \\<forall>j\\<in>Basis. x' \\<bullet> j \\<in> X j};\n        x' \\<noteq> x; dist x' x < d\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x' - f x -\n                            (\\<Sum>j\\<in>Basis.\n                               ((x' - x) \\<bullet> j) *\\<^sub>R\n                               f' j x)) /\\<^sub>R\n                           norm (x' - x))\n                         < e", "finally"], ["proof (chain)\npicking this:\n  (\\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      xa /\\<^sub>R norm (x' - x)\n      \\<le> y /\\<^sub>R norm (x' - x)) \\<Longrightarrow>\n  norm\n   (f (x + h) - f x -\n    (\\<Sum>j\\<in>Basis. ((x' - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n  norm (x' - x)\n  < e", "show ?case"], ["proof (prove)\nusing this:\n  (\\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      xa /\\<^sub>R norm (x' - x)\n      \\<le> y /\\<^sub>R norm (x' - x)) \\<Longrightarrow>\n  norm\n   (f (x + h) - f x -\n    (\\<Sum>j\\<in>Basis. ((x' - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n  norm (x' - x)\n  < e\n\ngoal (1 subgoal):\n 1. norm\n     ((f x' - f x -\n       (\\<Sum>j\\<in>Basis.\n          ((x' - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n      norm (x' - x))\n    < e", "by (auto simp: divide_simps abs_mult h_def)"], ["proof (state)\nthis:\n  norm\n   ((f x' - f x -\n     (\\<Sum>j\\<in>Basis. ((x' - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n    norm (x' - x))\n  < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x' in at x\n     within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j}.\n     norm\n      ((f x' - f x -\n        (\\<Sum>j\\<in>Basis.\n           ((x' - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n       norm (x' - x))\n     < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<lambda>y.\n       (f y - f x -\n        (\\<Sum>j\\<in>Basis.\n           ((y - x) \\<bullet> j) *\\<^sub>R f' j x)) /\\<^sub>R\n       norm (y - x)) \\<longlongrightarrow>\n   (0::'b))\n   (at x within {x. \\<forall>j\\<in>Basis. x \\<bullet> j \\<in> X j})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  frechet_derivative_equals_partial_derivative:\n  fixes f::\"'a::euclidean_space \\<Rightarrow> 'a\"\n  assumes Df: \"\\<And>x. (f has_derivative Df x) (at x)\"\n  assumes f': \"((\\<lambda>p. f (x + (p - x \\<bullet> i) *\\<^sub>R i) \\<bullet> b) has_real_derivative f' x i b) (at (x \\<bullet> i))\"\n  shows \"Df x i \\<bullet> b = f' x i b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Df x i \\<bullet> b = f' x i b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Df x i \\<bullet> b = f' x i b", "define Dfb where \"Dfb x = Blinfun (Df x)\" for x"], ["proof (state)\nthis:\n  Dfb ?x = Blinfun (Df ?x)\n\ngoal (1 subgoal):\n 1. Df x i \\<bullet> b = f' x i b", "have Dfb_apply: \"blinfun_apply (Dfb x) = Df x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply (Dfb x) = Df x", "unfolding Dfb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply (Blinfun (Df x)) = Df x", "apply (rule bounded_linear_Blinfun_apply)"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_linear (Df x)", "apply (rule has_derivative_bounded_linear)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (?f2 has_derivative Df x) ?F2", "apply (rule assms)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  blinfun_apply (Dfb ?x) = Df ?x\n\ngoal (1 subgoal):\n 1. Df x i \\<bullet> b = f' x i b", "have \"Dfb x = blinfun_of_matrix (\\<lambda>i b. Dfb x b \\<bullet> i)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. Dfb x =\n    blinfun_of_matrix (\\<lambda>i b. blinfun_apply (Dfb x) b \\<bullet> i)", "using blinfun_of_matrix_works[of \"Dfb x\"]"], ["proof (prove)\nusing this:\n  blinfun_of_matrix (\\<lambda>i j. blinfun_apply (Dfb x) j \\<bullet> i) =\n  Dfb x\n\ngoal (1 subgoal):\n 1. Dfb x =\n    blinfun_of_matrix (\\<lambda>i b. blinfun_apply (Dfb x) b \\<bullet> i)", "by auto"], ["proof (state)\nthis:\n  Dfb ?x =\n  blinfun_of_matrix (\\<lambda>i b. blinfun_apply (Dfb ?x) b \\<bullet> i)\n\ngoal (1 subgoal):\n 1. Df x i \\<bullet> b = f' x i b", "have Dfb: \"\\<And>x. (f has_derivative Dfb x) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. (f has_derivative blinfun_apply (Dfb x)) (at x)", "by (auto simp: Dfb_apply Df)"], ["proof (state)\nthis:\n  (f has_derivative blinfun_apply (Dfb ?x)) (at ?x)\n\ngoal (1 subgoal):\n 1. Df x i \\<bullet> b = f' x i b", "note [derivative_intros] = diff_chain_at[OF _ Dfb, unfolded o_def]"], ["proof (state)\nthis:\n  (?f has_derivative ?f') (at ?x) \\<Longrightarrow>\n  ((\\<lambda>x. f (?f x)) has_derivative\n   (\\<lambda>x. blinfun_apply (Dfb (?f ?x)) (?f' x)))\n   (at ?x)\n\ngoal (1 subgoal):\n 1. Df x i \\<bullet> b = f' x i b", "have \"((\\<lambda>p. f (x + (p - x \\<bullet> i) *\\<^sub>R i) \\<bullet> b) has_real_derivative Dfb x i \\<bullet> b) (at (x \\<bullet> i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>p.\n         f (x + (p - x \\<bullet> i) *\\<^sub>R i) \\<bullet>\n         b) has_real_derivative\n     blinfun_apply (Dfb x) i \\<bullet> b)\n     (at (x \\<bullet> i))", "by (auto intro!: derivative_eq_intros ext simp: has_field_derivative_def blinfun.bilinear_simps)"], ["proof (state)\nthis:\n  ((\\<lambda>p.\n       f (x + (p - x \\<bullet> i) *\\<^sub>R i) \\<bullet>\n       b) has_real_derivative\n   blinfun_apply (Dfb x) i \\<bullet> b)\n   (at (x \\<bullet> i))\n\ngoal (1 subgoal):\n 1. Df x i \\<bullet> b = f' x i b", "from DERIV_unique[OF f' this]"], ["proof (chain)\npicking this:\n  f' x i b = blinfun_apply (Dfb x) i \\<bullet> b", "show ?thesis"], ["proof (prove)\nusing this:\n  f' x i b = blinfun_apply (Dfb x) i \\<bullet> b\n\ngoal (1 subgoal):\n 1. Df x i \\<bullet> b = f' x i b", "by (simp add: Dfb_apply)"], ["proof (state)\nthis:\n  Df x i \\<bullet> b = f' x i b\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Integration\\<close>"], ["", "lemmas content_real[simp]"], ["", "lemmas integrable_continuous[intro, simp]\n  and integrable_continuous_real[intro, simp]"], ["", "lemma integral_eucl_le:\n  fixes f g::\"'a::euclidean_space \\<Rightarrow> 'b::ordered_euclidean_space\"\n  assumes \"f integrable_on s\"\n    and \"g integrable_on s\"\n    and \"\\<And>x. x \\<in> s \\<Longrightarrow> f x \\<le> g x\"\n  shows \"integral s f \\<le> integral s g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral s f \\<le> integral s g", "using assms"], ["proof (prove)\nusing this:\n  f integrable_on s\n  g integrable_on s\n  ?x \\<in> s \\<Longrightarrow> f ?x \\<le> g ?x\n\ngoal (1 subgoal):\n 1. integral s f \\<le> integral s g", "by (auto intro!: integral_component_le simp: eucl_le[where 'a='b])"], ["", "lemma\n  integral_ivl_bound:\n  fixes l u::\"'a::ordered_euclidean_space\"\n  assumes \"\\<And>x h'. h' \\<in> {t0 .. h} \\<Longrightarrow> x \\<in> {t0 .. h} \\<Longrightarrow> (h' - t0) *\\<^sub>R f x \\<in> {l .. u}\"\n  assumes \"t0 \\<le> h\"\n  assumes f_int: \"f integrable_on {t0 .. h}\"\n  shows \"integral {t0 .. h} f \\<in> {l .. u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {t0..h} f \\<in> {l..u}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. integral {t0..h} f \\<in> {l..u}", "from assms(1)[of t0 t0] assms(2)"], ["proof (chain)\npicking this:\n  \\<lbrakk>t0 \\<in> {t0..h}; t0 \\<in> {t0..h}\\<rbrakk>\n  \\<Longrightarrow> (t0 - t0) *\\<^sub>R f t0 \\<in> {l..u}\n  t0 \\<le> h", "have \"0 \\<in> {l .. u}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>t0 \\<in> {t0..h}; t0 \\<in> {t0..h}\\<rbrakk>\n  \\<Longrightarrow> (t0 - t0) *\\<^sub>R f t0 \\<in> {l..u}\n  t0 \\<le> h\n\ngoal (1 subgoal):\n 1. (0::'a) \\<in> {l..u}", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<in> {l..u}\n\ngoal (1 subgoal):\n 1. integral {t0..h} f \\<in> {l..u}", "have \"integral {t0 .. h} f = integral {t0 .. h} (\\<lambda>t. if t \\<in> {t0, h} then 0 else f t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {t0..h} f =\n    integral {t0..h} (\\<lambda>t. if t \\<in> {t0, h} then 0::'a else f t)", "by (rule integral_spike[where S=\"{t0, h}\"]) auto"], ["proof (state)\nthis:\n  integral {t0..h} f =\n  integral {t0..h} (\\<lambda>t. if t \\<in> {t0, h} then 0::'a else f t)\n\ngoal (1 subgoal):\n 1. integral {t0..h} f \\<in> {l..u}", "also"], ["proof (state)\nthis:\n  integral {t0..h} f =\n  integral {t0..h} (\\<lambda>t. if t \\<in> {t0, h} then 0::'a else f t)\n\ngoal (1 subgoal):\n 1. integral {t0..h} f \\<in> {l..u}", "{"], ["proof (state)\nthis:\n  integral {t0..h} f =\n  integral {t0..h} (\\<lambda>t. if t \\<in> {t0, h} then 0::'a else f t)\n\ngoal (1 subgoal):\n 1. integral {t0..h} f \\<in> {l..u}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. integral {t0..h} f \\<in> {l..u}", "assume 1: \"x \\<in> {t0 <..< h}\""], ["proof (state)\nthis:\n  x \\<in> {t0<..<h}\n\ngoal (1 subgoal):\n 1. integral {t0..h} f \\<in> {l..u}", "with assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>?h' \\<in> {t0..h}; ?x \\<in> {t0..h}\\<rbrakk>\n  \\<Longrightarrow> (?h' - t0) *\\<^sub>R f ?x \\<in> {l..u}\n  t0 \\<le> h\n  f integrable_on {t0..h}\n  x \\<in> {t0<..<h}", "have \"(h - t0) *\\<^sub>R f x \\<in> {l .. u}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?h' \\<in> {t0..h}; ?x \\<in> {t0..h}\\<rbrakk>\n  \\<Longrightarrow> (?h' - t0) *\\<^sub>R f ?x \\<in> {l..u}\n  t0 \\<le> h\n  f integrable_on {t0..h}\n  x \\<in> {t0<..<h}\n\ngoal (1 subgoal):\n 1. (h - t0) *\\<^sub>R f x \\<in> {l..u}", "by auto"], ["proof (state)\nthis:\n  (h - t0) *\\<^sub>R f x \\<in> {l..u}\n\ngoal (1 subgoal):\n 1. integral {t0..h} f \\<in> {l..u}", "then"], ["proof (chain)\npicking this:\n  (h - t0) *\\<^sub>R f x \\<in> {l..u}", "have \"(if x \\<in> {t0, h} then 0 else f x) \\<in> {l /\\<^sub>R (h - t0) .. u /\\<^sub>R (h - t0)}\""], ["proof (prove)\nusing this:\n  (h - t0) *\\<^sub>R f x \\<in> {l..u}\n\ngoal (1 subgoal):\n 1. (if x \\<in> {t0, h} then 0::'a else f x)\n    \\<in> {l /\\<^sub>R (h - t0)..u /\\<^sub>R (h - t0)}", "using \\<open>x \\<in> _\\<close>"], ["proof (prove)\nusing this:\n  (h - t0) *\\<^sub>R f x \\<in> {l..u}\n  x \\<in> {t0<..<h}\n\ngoal (1 subgoal):\n 1. (if x \\<in> {t0, h} then 0::'a else f x)\n    \\<in> {l /\\<^sub>R (h - t0)..u /\\<^sub>R (h - t0)}", "by (auto simp: inverse_eq_divide\n        simp: eucl_le[where 'a='a] field_simps algebra_simps)"], ["proof (state)\nthis:\n  (if x \\<in> {t0, h} then 0::'a else f x)\n  \\<in> {l /\\<^sub>R (h - t0)..u /\\<^sub>R (h - t0)}\n\ngoal (1 subgoal):\n 1. integral {t0..h} f \\<in> {l..u}", "}"], ["proof (state)\nthis:\n  ?x2 \\<in> {t0<..<h} \\<Longrightarrow>\n  (if ?x2 \\<in> {t0, h} then 0::'a else f ?x2)\n  \\<in> {l /\\<^sub>R (h - t0)..u /\\<^sub>R (h - t0)}\n\ngoal (1 subgoal):\n 1. integral {t0..h} f \\<in> {l..u}", "then"], ["proof (chain)\npicking this:\n  ?x2 \\<in> {t0<..<h} \\<Longrightarrow>\n  (if ?x2 \\<in> {t0, h} then 0::'a else f ?x2)\n  \\<in> {l /\\<^sub>R (h - t0)..u /\\<^sub>R (h - t0)}", "have \"\\<dots> \\<in> {integral {t0..h} (\\<lambda>_. l /\\<^sub>R (h - t0)) .. integral {t0..h} (\\<lambda>_. u /\\<^sub>R (h - t0))}\""], ["proof (prove)\nusing this:\n  ?x2 \\<in> {t0<..<h} \\<Longrightarrow>\n  (if ?x2 \\<in> {t0, h} then 0::'a else f ?x2)\n  \\<in> {l /\\<^sub>R (h - t0)..u /\\<^sub>R (h - t0)}\n\ngoal (1 subgoal):\n 1. integral {t0..h} (\\<lambda>t. if t \\<in> {t0, h} then 0::'a else f t)\n    \\<in> {integral {t0..h}\n            (\\<lambda>_.\n                l /\\<^sub>R\n                (h -\n                 t0))..integral {t0..h} (\\<lambda>_. u /\\<^sub>R (h - t0))}", "unfolding atLeastAtMost_iff"], ["proof (prove)\nusing this:\n  ?x2 \\<in> {t0<..<h} \\<Longrightarrow>\n  l /\\<^sub>R (h - t0)\n  \\<le> (if ?x2 \\<in> {t0, h} then 0::'a else f ?x2) \\<and>\n  (if ?x2 \\<in> {t0, h} then 0::'a else f ?x2) \\<le> u /\\<^sub>R (h - t0)\n\ngoal (1 subgoal):\n 1. integral {t0..h} (\\<lambda>_. l /\\<^sub>R (h - t0))\n    \\<le> integral {t0..h}\n           (\\<lambda>t. if t \\<in> {t0, h} then 0::'a else f t) \\<and>\n    integral {t0..h} (\\<lambda>t. if t \\<in> {t0, h} then 0::'a else f t)\n    \\<le> integral {t0..h} (\\<lambda>_. u /\\<^sub>R (h - t0))", "apply (safe intro!: integral_eucl_le)"], ["proof (prove)\ngoal (6 subgoals):\n 1. (\\<And>x.\n        x \\<in> {t0<..<h} \\<Longrightarrow>\n        l /\\<^sub>R (h - t0)\n        \\<le> (if x \\<in> {t0, h} then 0::'a else f x) \\<and>\n        (if x \\<in> {t0, h} then 0::'a else f x)\n        \\<le> u /\\<^sub>R (h - t0)) \\<Longrightarrow>\n    (\\<lambda>_. l /\\<^sub>R (h - t0)) integrable_on {t0..h}\n 2. (\\<And>x.\n        x \\<in> {t0<..<h} \\<Longrightarrow>\n        l /\\<^sub>R (h - t0)\n        \\<le> (if x \\<in> {t0, h} then 0::'a else f x) \\<and>\n        (if x \\<in> {t0, h} then 0::'a else f x)\n        \\<le> u /\\<^sub>R (h - t0)) \\<Longrightarrow>\n    (\\<lambda>t. if t \\<in> {t0, h} then 0::'a else f t) integrable_on\n    {t0..h}\n 3. \\<And>x.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> {t0<..<h} \\<Longrightarrow>\n                   l /\\<^sub>R (h - t0)\n                   \\<le> (if x \\<in> {t0, h} then 0::'a else f x) \\<and>\n                   (if x \\<in> {t0, h} then 0::'a else f x)\n                   \\<le> u /\\<^sub>R (h - t0);\n        x \\<in> {t0..h}\\<rbrakk>\n       \\<Longrightarrow> l /\\<^sub>R (h - t0)\n                         \\<le> (if x \\<in> {t0, h} then 0::'a else f x)\n 4. (\\<And>x.\n        x \\<in> {t0<..<h} \\<Longrightarrow>\n        l /\\<^sub>R (h - t0)\n        \\<le> (if x \\<in> {t0, h} then 0::'a else f x) \\<and>\n        (if x \\<in> {t0, h} then 0::'a else f x)\n        \\<le> u /\\<^sub>R (h - t0)) \\<Longrightarrow>\n    (\\<lambda>t. if t \\<in> {t0, h} then 0::'a else f t) integrable_on\n    {t0..h}\n 5. (\\<And>x.\n        x \\<in> {t0<..<h} \\<Longrightarrow>\n        l /\\<^sub>R (h - t0)\n        \\<le> (if x \\<in> {t0, h} then 0::'a else f x) \\<and>\n        (if x \\<in> {t0, h} then 0::'a else f x)\n        \\<le> u /\\<^sub>R (h - t0)) \\<Longrightarrow>\n    (\\<lambda>_. u /\\<^sub>R (h - t0)) integrable_on {t0..h}\n 6. \\<And>x.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> {t0<..<h} \\<Longrightarrow>\n                   l /\\<^sub>R (h - t0)\n                   \\<le> (if x \\<in> {t0, h} then 0::'a else f x) \\<and>\n                   (if x \\<in> {t0, h} then 0::'a else f x)\n                   \\<le> u /\\<^sub>R (h - t0);\n        x \\<in> {t0..h}\\<rbrakk>\n       \\<Longrightarrow> (if x \\<in> {t0, h} then 0::'a else f x)\n                         \\<le> u /\\<^sub>R (h - t0)", "using \\<open>0 \\<in> {l .. u}\\<close>"], ["proof (prove)\nusing this:\n  (0::'a) \\<in> {l..u}\n\ngoal (6 subgoals):\n 1. (\\<And>x.\n        x \\<in> {t0<..<h} \\<Longrightarrow>\n        l /\\<^sub>R (h - t0)\n        \\<le> (if x \\<in> {t0, h} then 0::'a else f x) \\<and>\n        (if x \\<in> {t0, h} then 0::'a else f x)\n        \\<le> u /\\<^sub>R (h - t0)) \\<Longrightarrow>\n    (\\<lambda>_. l /\\<^sub>R (h - t0)) integrable_on {t0..h}\n 2. (\\<And>x.\n        x \\<in> {t0<..<h} \\<Longrightarrow>\n        l /\\<^sub>R (h - t0)\n        \\<le> (if x \\<in> {t0, h} then 0::'a else f x) \\<and>\n        (if x \\<in> {t0, h} then 0::'a else f x)\n        \\<le> u /\\<^sub>R (h - t0)) \\<Longrightarrow>\n    (\\<lambda>t. if t \\<in> {t0, h} then 0::'a else f t) integrable_on\n    {t0..h}\n 3. \\<And>x.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> {t0<..<h} \\<Longrightarrow>\n                   l /\\<^sub>R (h - t0)\n                   \\<le> (if x \\<in> {t0, h} then 0::'a else f x) \\<and>\n                   (if x \\<in> {t0, h} then 0::'a else f x)\n                   \\<le> u /\\<^sub>R (h - t0);\n        x \\<in> {t0..h}\\<rbrakk>\n       \\<Longrightarrow> l /\\<^sub>R (h - t0)\n                         \\<le> (if x \\<in> {t0, h} then 0::'a else f x)\n 4. (\\<And>x.\n        x \\<in> {t0<..<h} \\<Longrightarrow>\n        l /\\<^sub>R (h - t0)\n        \\<le> (if x \\<in> {t0, h} then 0::'a else f x) \\<and>\n        (if x \\<in> {t0, h} then 0::'a else f x)\n        \\<le> u /\\<^sub>R (h - t0)) \\<Longrightarrow>\n    (\\<lambda>t. if t \\<in> {t0, h} then 0::'a else f t) integrable_on\n    {t0..h}\n 5. (\\<And>x.\n        x \\<in> {t0<..<h} \\<Longrightarrow>\n        l /\\<^sub>R (h - t0)\n        \\<le> (if x \\<in> {t0, h} then 0::'a else f x) \\<and>\n        (if x \\<in> {t0, h} then 0::'a else f x)\n        \\<le> u /\\<^sub>R (h - t0)) \\<Longrightarrow>\n    (\\<lambda>_. u /\\<^sub>R (h - t0)) integrable_on {t0..h}\n 6. \\<And>x.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> {t0<..<h} \\<Longrightarrow>\n                   l /\\<^sub>R (h - t0)\n                   \\<le> (if x \\<in> {t0, h} then 0::'a else f x) \\<and>\n                   (if x \\<in> {t0, h} then 0::'a else f x)\n                   \\<le> u /\\<^sub>R (h - t0);\n        x \\<in> {t0..h}\\<rbrakk>\n       \\<Longrightarrow> (if x \\<in> {t0, h} then 0::'a else f x)\n                         \\<le> u /\\<^sub>R (h - t0)", "apply (auto intro!: assms\n      intro: integrable_continuous_real  integrable_spike[where S=\"{t0, h}\", OF f_int]\n      simp: eucl_le[where 'a='a] divide_simps\n      split: if_split_asm)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  integral {t0..h} (\\<lambda>t. if t \\<in> {t0, h} then 0::'a else f t)\n  \\<in> {integral {t0..h}\n          (\\<lambda>_.\n              l /\\<^sub>R\n              (h -\n               t0))..integral {t0..h} (\\<lambda>_. u /\\<^sub>R (h - t0))}\n\ngoal (1 subgoal):\n 1. integral {t0..h} f \\<in> {l..u}", "also"], ["proof (state)\nthis:\n  integral {t0..h} (\\<lambda>t. if t \\<in> {t0, h} then 0::'a else f t)\n  \\<in> {integral {t0..h}\n          (\\<lambda>_.\n              l /\\<^sub>R\n              (h -\n               t0))..integral {t0..h} (\\<lambda>_. u /\\<^sub>R (h - t0))}\n\ngoal (1 subgoal):\n 1. integral {t0..h} f \\<in> {l..u}", "have \"\\<dots> \\<subseteq> {l .. u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {integral {t0..h}\n      (\\<lambda>_.\n          l /\\<^sub>R\n          (h - t0))..integral {t0..h} (\\<lambda>_. u /\\<^sub>R (h - t0))}\n    \\<subseteq> {l..u}", "using assms \\<open>0 \\<in> {l .. u}\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?h' \\<in> {t0..h}; ?x \\<in> {t0..h}\\<rbrakk>\n  \\<Longrightarrow> (?h' - t0) *\\<^sub>R f ?x \\<in> {l..u}\n  t0 \\<le> h\n  f integrable_on {t0..h}\n  (0::'a) \\<in> {l..u}\n\ngoal (1 subgoal):\n 1. {integral {t0..h}\n      (\\<lambda>_.\n          l /\\<^sub>R\n          (h - t0))..integral {t0..h} (\\<lambda>_. u /\\<^sub>R (h - t0))}\n    \\<subseteq> {l..u}", "by (auto simp: inverse_eq_divide)"], ["proof (state)\nthis:\n  {integral {t0..h}\n    (\\<lambda>_.\n        l /\\<^sub>R\n        (h - t0))..integral {t0..h} (\\<lambda>_. u /\\<^sub>R (h - t0))}\n  \\<subseteq> {l..u}\n\ngoal (1 subgoal):\n 1. integral {t0..h} f \\<in> {l..u}", "finally"], ["proof (chain)\npicking this:\n  integral {t0..h} f \\<in> {l..u}", "show ?thesis"], ["proof (prove)\nusing this:\n  integral {t0..h} f \\<in> {l..u}\n\ngoal (1 subgoal):\n 1. integral {t0..h} f \\<in> {l..u}", "."], ["proof (state)\nthis:\n  integral {t0..h} f \\<in> {l..u}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  add_integral_ivl_bound:\n  fixes l u::\"'a::ordered_euclidean_space\"\n  assumes \"\\<And>x h'. h' \\<in> {t0 .. h} \\<Longrightarrow> x \\<in> {t0 .. h} \\<Longrightarrow> (h' - t0) *\\<^sub>R f x \\<in> {l - x0 .. u - x0}\"\n  assumes \"t0 \\<le> h\"\n  assumes f_int: \"f integrable_on {t0 .. h}\"\n  shows \"x0 + integral {t0 .. h} f \\<in> {l .. u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x0 + integral {t0..h} f \\<in> {l..u}", "using integral_ivl_bound[OF assms]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x h'.\n              \\<lbrakk>h' \\<in> {t0..h}; x \\<in> {t0..h}\\<rbrakk>\n              \\<Longrightarrow> h' \\<in> {t0..h};\n   \\<And>x h'.\n      \\<lbrakk>h' \\<in> {t0..h}; x \\<in> {t0..h}\\<rbrakk>\n      \\<Longrightarrow> x \\<in> {t0..h}\\<rbrakk>\n  \\<Longrightarrow> integral {t0..h} f \\<in> {l - x0..u - x0}\n\ngoal (1 subgoal):\n 1. x0 + integral {t0..h} f \\<in> {l..u}", "by (auto simp: algebra_simps)"], ["", "subsection \\<open>conditionally complete lattice\\<close>"], ["", "subsection \\<open>Lists\\<close>"], ["", "lemma\n  Ball_set_Cons[simp]: \"(\\<forall>a\\<in>set_Cons x y. P a) \\<longleftrightarrow> (\\<forall>a\\<in>x. \\<forall>b\\<in>y. P (a#b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>a\\<in>set_Cons x y. P a) =\n    (\\<forall>a\\<in>x. \\<forall>b\\<in>y. P (a # b))", "by (auto simp: set_Cons_def)"], ["", "lemma set_cons_eq_empty[iff]: \"set_Cons a b = {} \\<longleftrightarrow> a = {} \\<or> b = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (set_Cons a b = {}) = (a = {} \\<or> b = {})", "by (auto simp: set_Cons_def)"], ["", "lemma listset_eq_empty_iff[iff]: \"listset XS = {} \\<longleftrightarrow> {} \\<in> set XS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (listset XS = {}) = ({} \\<in> set XS)", "by (induction XS) auto"], ["", "lemma sing_in_sings[simp]: \"[x] \\<in> (\\<lambda>x. [x]) ` xd \\<longleftrightarrow> x \\<in> xd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([x] \\<in> (\\<lambda>x. [x]) ` xd) = (x \\<in> xd)", "by auto"], ["", "lemma those_eq_None_set_iff: \"those xs = None \\<longleftrightarrow> None \\<in> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (those xs = None) = (None \\<in> set xs)", "by (induction xs) (auto split: option.split)"], ["", "lemma those_eq_Some_lengthD: \"those xs = Some ys \\<Longrightarrow> length xs = length ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. those xs = Some ys \\<Longrightarrow> length xs = length ys", "by (induction xs arbitrary: ys) (auto split: option.splits)"], ["", "lemma those_eq_Some_map_Some_iff: \"those xs = Some ys \\<longleftrightarrow> (xs = map Some ys)\" (is \"?l \\<longleftrightarrow> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (those xs = Some ys) = (xs = map Some ys)", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. those xs = Some ys \\<Longrightarrow> xs = map Some ys\n 2. xs = map Some ys \\<Longrightarrow> those (map Some ys) = Some ys", "assume ?l"], ["proof (state)\nthis:\n  those xs = Some ys\n\ngoal (2 subgoals):\n 1. those xs = Some ys \\<Longrightarrow> xs = map Some ys\n 2. xs = map Some ys \\<Longrightarrow> those (map Some ys) = Some ys", "then"], ["proof (chain)\npicking this:\n  those xs = Some ys", "have \"length xs = length ys\""], ["proof (prove)\nusing this:\n  those xs = Some ys\n\ngoal (1 subgoal):\n 1. length xs = length ys", "by (rule those_eq_Some_lengthD)"], ["proof (state)\nthis:\n  length xs = length ys\n\ngoal (2 subgoals):\n 1. those xs = Some ys \\<Longrightarrow> xs = map Some ys\n 2. xs = map Some ys \\<Longrightarrow> those (map Some ys) = Some ys", "then"], ["proof (chain)\npicking this:\n  length xs = length ys", "show ?r"], ["proof (prove)\nusing this:\n  length xs = length ys\n\ngoal (1 subgoal):\n 1. xs = map Some ys", "using \\<open>?l\\<close>"], ["proof (prove)\nusing this:\n  length xs = length ys\n  those xs = Some ys\n\ngoal (1 subgoal):\n 1. xs = map Some ys", "by (induction xs ys rule: list_induct2) (auto split: option.splits)"], ["proof (state)\nthis:\n  xs = map Some ys\n\ngoal (1 subgoal):\n 1. xs = map Some ys \\<Longrightarrow> those (map Some ys) = Some ys", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. xs = map Some ys \\<Longrightarrow> those (map Some ys) = Some ys", "assume ?r"], ["proof (state)\nthis:\n  xs = map Some ys\n\ngoal (1 subgoal):\n 1. xs = map Some ys \\<Longrightarrow> those (map Some ys) = Some ys", "then"], ["proof (chain)\npicking this:\n  xs = map Some ys", "have \"length xs = length ys\""], ["proof (prove)\nusing this:\n  xs = map Some ys\n\ngoal (1 subgoal):\n 1. length xs = length ys", "by simp"], ["proof (state)\nthis:\n  length xs = length ys\n\ngoal (1 subgoal):\n 1. xs = map Some ys \\<Longrightarrow> those (map Some ys) = Some ys", "then"], ["proof (chain)\npicking this:\n  length xs = length ys", "show \"those (map Some ys) = Some ys\""], ["proof (prove)\nusing this:\n  length xs = length ys\n\ngoal (1 subgoal):\n 1. those (map Some ys) = Some ys", "using \\<open>?r\\<close>"], ["proof (prove)\nusing this:\n  length xs = length ys\n  xs = map Some ys\n\ngoal (1 subgoal):\n 1. those (map Some ys) = Some ys", "by (induction xs ys rule: list_induct2) (auto split: option.splits)"], ["proof (state)\nthis:\n  those (map Some ys) = Some ys\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Set(sum)\\<close>"], ["", "subsection \\<open>Max\\<close>"], ["", "subsection \\<open>Uniform Limit\\<close>"], ["", "subsection \\<open>Bounded Linear Functions\\<close>"], ["", "lift_definition comp3::\\<comment> \\<open>TODO: name?\\<close>\n  \"('c::real_normed_vector \\<Rightarrow>\\<^sub>L 'd::real_normed_vector) \\<Rightarrow> ('b::real_normed_vector \\<Rightarrow>\\<^sub>L 'c) \\<Rightarrow>\\<^sub>L 'b \\<Rightarrow>\\<^sub>L 'd\" is\n  \"\\<lambda>(cd::('c \\<Rightarrow>\\<^sub>L 'd)) (bc::'b \\<Rightarrow>\\<^sub>L 'c). (cd o\\<^sub>L bc)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>blinfun. bounded_linear ((o\\<^sub>L) blinfun)", "by (rule bounded_bilinear.bounded_linear_right[OF bounded_bilinear_blinfun_compose])"], ["", "lemma blinfun_apply_comp3[simp]: \"blinfun_apply (comp3 a) b = (a o\\<^sub>L b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply (comp3 a) b = a o\\<^sub>L b", "by (simp add: comp3.rep_eq)"], ["", "lemma bounded_linear_comp3[bounded_linear]: \"bounded_linear comp3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_linear comp3", "by transfer (rule bounded_bilinear_blinfun_compose)"], ["", "lift_definition comp12::\\<comment> \\<open>TODO: name?\\<close>\n  \"('a::real_normed_vector \\<Rightarrow>\\<^sub>L 'c::real_normed_vector) \\<Rightarrow> ('b::real_normed_vector \\<Rightarrow>\\<^sub>L 'c) \\<Rightarrow> ('a \\<times> 'b) \\<Rightarrow>\\<^sub>L 'c\"\n  is \"\\<lambda>f g (a, b). f a + g b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fun1 fun2.\n       \\<lbrakk>bounded_linear fun1; bounded_linear fun2\\<rbrakk>\n       \\<Longrightarrow> bounded_linear (\\<lambda>(a, b). fun1 a + fun2 b)", "by (auto intro!: bounded_linear_intros\n    intro: bounded_linear_compose\n    simp: split_beta')"], ["", "lemma blinfun_apply_comp12[simp]: \"blinfun_apply (comp12 f g) b = f (fst b) + g (snd b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply (comp12 f g) b =\n    blinfun_apply f (fst b) + blinfun_apply g (snd b)", "by (simp add: comp12.rep_eq split_beta)"], ["", "subsection \\<open>Order Transitivity Attributes\\<close>"], ["", "attribute_setup le = \\<open>Scan.succeed (Thm.rule_attribute [] (fn context => fn thm => thm RS @{thm order_trans}))\\<close>\n  \"transitive version of inequality (useful for intro)\""], ["", "attribute_setup ge = \\<open>Scan.succeed (Thm.rule_attribute [] (fn context => fn thm => thm RS @{thm order_trans[rotated]}))\\<close>\n  \"transitive version of inequality (useful for intro)\""], ["", "subsection \\<open>point reflection\\<close>"], ["", "definition preflect::\"'a::real_vector \\<Rightarrow> 'a \\<Rightarrow> 'a\" where \"preflect \\<equiv> \\<lambda>t0 t. 2 *\\<^sub>R t0 - t\""], ["", "lemma preflect_preflect[simp]: \"preflect t0 (preflect t0 t) = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preflect t0 (preflect t0 t) = t", "by (simp add: preflect_def algebra_simps)"], ["", "lemma preflect_preflect_image[simp]: \"preflect t0 ` preflect t0 ` S = S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preflect t0 ` preflect t0 ` S = S", "by (simp add: image_image)"], ["", "lemma is_interval_preflect[simp]: \"is_interval (preflect t0 ` S) \\<longleftrightarrow> is_interval S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval (preflect t0 ` S) = is_interval S", "by (auto simp: preflect_def[abs_def])"], ["", "lemma iv_in_preflect_image[intro, simp]: \"t0 \\<in> T \\<Longrightarrow> t0 \\<in> preflect t0 ` T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> T \\<Longrightarrow> t0 \\<in> preflect t0 ` T", "by (auto intro!: image_eqI simp: preflect_def algebra_simps scaleR_2)"], ["", "lemma preflect_tendsto[tendsto_intros]:\n  fixes l::\"'a::real_normed_vector\"\n  shows \"(g \\<longlongrightarrow> l) F \\<Longrightarrow> (h \\<longlongrightarrow> m) F \\<Longrightarrow> ((\\<lambda>x. preflect (g x) (h x)) \\<longlongrightarrow> preflect l m) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(g \\<longlongrightarrow> l) F;\n     (h \\<longlongrightarrow> m) F\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>x.\n                           preflect (g x) (h x)) \\<longlongrightarrow>\n                       preflect l m)\n                       F", "by (auto intro!: tendsto_eq_intros simp: preflect_def)"], ["", "lemma continuous_preflect[continuous_intros]:\n  fixes a::\"'a::real_normed_vector\"\n  shows \"continuous (at a within A) (preflect t0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous (at a within A) (preflect t0)", "by (auto simp: continuous_within intro!: tendsto_intros)"], ["", "lemma\n  fixes t0::\"'a::ordered_real_vector\"\n  shows preflect_le[simp]: \"t0 \\<le> preflect t0 b \\<longleftrightarrow> b \\<le> t0\"\n    and le_preflect[simp]: \"preflect t0 b \\<le> t0 \\<longleftrightarrow> t0 \\<le> b\"\n    and antimono_preflect: \"antimono (preflect t0)\"\n    and preflect_le_preflect[simp]: \"preflect t0 a \\<le> preflect t0 b \\<longleftrightarrow> b \\<le> a\"\n    and preflect_eq_cancel[simp]: \"preflect t0 a = preflect t0 b \\<longleftrightarrow> a = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((t0 \\<le> preflect t0 b) = (b \\<le> t0) &&&\n     (preflect t0 b \\<le> t0) = (t0 \\<le> b)) &&&\n    antimono (preflect t0) &&&\n    (preflect t0 a \\<le> preflect t0 b) = (b \\<le> a) &&&\n    (preflect t0 a = preflect t0 b) = (a = b)", "by (auto intro!: antimonoI simp: preflect_def scaleR_2)"], ["", "lemma preflect_eq_point_iff[simp]: \"t0 = preflect t0 s \\<longleftrightarrow> t0 = s\" \"preflect t0 s = t0 \\<longleftrightarrow> t0 = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t0 = preflect t0 s) = (t0 = s) &&& (preflect t0 s = t0) = (t0 = s)", "by (auto simp: preflect_def algebra_simps scaleR_2)"], ["", "lemma preflect_minus_self[simp]: \"preflect t0 s - t0 = t0 - s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preflect t0 s - t0 = t0 - s", "by (simp add: preflect_def scaleR_2)"], ["", "end"]]}