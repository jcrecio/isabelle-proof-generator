{"file_name": "/home/qj213/afp-2021-10-22/thys/Ordinary_Differential_Equations/IVP/Poincare_Map.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Ordinary_Differential_Equations", "problem_names": ["lemma\n  eventually_tendsto_compose_within:\n  assumes \"eventually P (at l within S)\"\n  assumes \"P l\"\n  assumes \"(f \\<longlongrightarrow> l) (at x within T)\"\n  assumes \"eventually (\\<lambda>x. f x \\<in> S) (at x within T)\"\n  shows \"eventually (\\<lambda>x. P (f x)) (at x within T)\"", "lemma\n  eventually_eventually_withinI:\\<comment> \\<open>aha...\\<close>\n  assumes \"\\<forall>\\<^sub>F x in at x within A. P x\" \"P x\"\n  shows \"\\<forall>\\<^sub>F a in at x within S. \\<forall>\\<^sub>F x in at a within A. P x\"", "lemma eventually_not_in_closed:\n  assumes \"closed P\"\n  assumes \"f t \\<notin> P\" \"t \\<in> T\"\n  assumes \"continuous_on T f\"\n  shows \"\\<forall>\\<^sub>F t in at t within T. f t \\<notin> P\"", "lemma\n  existence_ivl_trans':\n  assumes \"t + s \\<in> existence_ivl t0 x0\"\n    \"t \\<in> existence_ivl t0 x0\"\n  shows \"t + s \\<in> existence_ivl t (flow t0 x0 t)\"", "lemma returns_toI:\n  assumes t: \"t > 0\" \"t \\<in> existence_ivl0 x\" \"flow0 x t \\<in> P\"\n  assumes ev: \"\\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\"\n  assumes \"closed P\"\n  shows \"returns_to P x\"", "lemma returns_to_outsideI:\n  assumes t: \"t \\<ge> 0\" \"t \\<in> existence_ivl0 x\" \"flow0 x t \\<in> P\"\n  assumes ev: \"x \\<notin> P\"\n  assumes \"closed P\"\n  shows \"returns_to P x\"", "lemma returns_toE:\n  assumes \"returns_to P x\"\n  obtains t0 t1 where\n    \"0 < t0\"\n    \"t0 \\<le> t1\"\n    \"t1 \\<in> existence_ivl0 x\"\n    \"flow0 x t1 \\<in> P\"\n    \"\\<And>t. 0 < t \\<Longrightarrow> t < t0 \\<Longrightarrow> flow0 x t \\<notin> P\"", "lemma return_time_some:\n  assumes \"returns_to P x\"\n  shows \"return_time P x =\n    (SOME t. t > 0 \\<and> t \\<in> existence_ivl0 x \\<and> flow0 x t \\<in> P \\<and> (\\<forall>s \\<in> {0<..<t}. flow0 x s \\<notin> P))\"", "lemma return_time_ex1:\n  assumes \"returns_to P x\"\n  assumes \"closed P\"\n  shows \"\\<exists>!t. t > 0 \\<and> t \\<in> existence_ivl0 x \\<and> flow0 x t \\<in> P \\<and> (\\<forall>s \\<in> {0<..<t}. flow0 x s \\<notin> P)\"", "lemma\n  return_time_pos_returns_to:\n  \"return_time P x > 0 \\<Longrightarrow> returns_to P x\"", "lemma\n  assumes ret: \"returns_to P x\"\n  assumes \"closed P\"\n  shows return_time_pos: \"return_time P x > 0\"", "lemma returns_to_return_time_pos:\n  assumes \"closed P\"\n  shows \"returns_to P x \\<longleftrightarrow> return_time P x > 0\"", "lemma return_time:\n  assumes ret: \"returns_to P x\"\n  assumes \"closed P\"\n  shows \"return_time P x > 0\"\n    and return_time_exivl: \"return_time P x \\<in> existence_ivl0 x\"\n    and return_time_returns: \"flow0 x (return_time P x) \\<in> P\"\n    and return_time_least: \"\\<And>s. 0 < s \\<Longrightarrow> s < return_time P x \\<Longrightarrow> flow0 x s \\<notin> P\"", "lemma returns_to_earlierI:\n  assumes ret: \"returns_to P (flow0 x t)\" \"closed P\"\n  assumes \"t \\<ge> 0\" \"t \\<in> existence_ivl0 x\"\n  assumes ev: \"\\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\"\n  shows \"returns_to P x\"", "lemma return_time_gt:\n  assumes ret: \"returns_to P x\" \"closed P\"\n  assumes flow_not: \"\\<And>s. 0 < s \\<Longrightarrow> s \\<le> t \\<Longrightarrow> flow0 x s \\<notin> P\"\n  shows \"t < return_time P x\"", "lemma return_time_le:\n  assumes ret: \"returns_to P x\" \"closed P\"\n  assumes flow_not: \"flow0 x t \\<in> P\" \"t > 0\"\n  shows \"return_time P x \\<le> t\"", "lemma returns_to_laterI:\n  assumes ret: \"returns_to P x\" \"closed P\"\n  assumes t: \"t > 0\" \"t \\<in> existence_ivl0 x\"\n  assumes flow_not: \"\\<And>s. 0 < s \\<Longrightarrow> s \\<le> t \\<Longrightarrow> flow0 x s \\<notin> P\"\n  shows \"returns_to P (flow0 x t)\"", "lemma never_returns:\n  assumes \"\\<not>returns_to P x\"\n  assumes \"closed P\" \"t \\<ge> 0\" \"t \\<in> existence_ivl0 x\"\n  assumes ev: \"\\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\"\n  shows \"\\<not>returns_to P (flow0 x t)\"", "lemma return_time_eqI:\n  assumes \"closed P\"\n    and t_pos: \"t > 0\"\n    and ex: \"t \\<in> existence_ivl0 x\"\n    and ret: \"flow0 x t \\<in> P\"\n    and least: \"\\<And>s. 0 < s \\<Longrightarrow> s < t \\<Longrightarrow> flow0 x s \\<notin> P\"\n  shows \"return_time P x = t\"", "lemma return_time_step:\n  assumes \"returns_to P (flow0 x t)\"\n  assumes \"closed P\"\n  assumes flow_not: \"\\<And>s. 0 < s \\<Longrightarrow> s \\<le> t \\<Longrightarrow> flow0 x s \\<notin> P\"\n  assumes t: \"t > 0\" \"t \\<in> existence_ivl0 x\"\n  shows \"return_time P (flow0 x t) = return_time P x - t\"", "lemma poincare_map_step_flow:\n  assumes ret: \"returns_to P x\" \"closed P\"\n  assumes flow_not: \"\\<And>s. 0 < s \\<Longrightarrow> s \\<le> t \\<Longrightarrow> flow0 x s \\<notin> P\"\n  assumes t: \"t > 0\" \"t \\<in> existence_ivl0 x\"\n  shows \"poincare_map P (flow0 x t) = poincare_map P x\"", "lemma poincare_map_returns:\n  assumes \"returns_to P x\" \"closed P\"\n  shows \"poincare_map P x \\<in> P\"", "lemma poincare_map_onto:\n  assumes \"closed P\"\n  assumes \"0 < t\" \"t \\<in> existence_ivl0 x\" \"\\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\"\n  assumes \"flow0 x t \\<in> P\"\n  shows \"poincare_map P x \\<in> flow0 x ` {0 <.. t} \\<inter> P\"", "lemma isCont_blinfunD:\n  fixes f'::\"'a::metric_space \\<Rightarrow> 'b::real_normed_vector \\<Rightarrow>\\<^sub>L 'c::real_normed_vector\"\n  assumes \"isCont f' a\" \"0 < e\"\n  shows \"\\<exists>d>0. \\<forall>x. dist a x < d \\<longrightarrow> onorm (\\<lambda>v. blinfun_apply (f' x) v - blinfun_apply (f' a) v) < e\"", "lemma blinfun_apply_embed1_blinfun[simp]: \"blinfun_apply embed1_blinfun x = (x, 0)\"", "lemma blinfun_apply_embed2_blinfun[simp]: \"blinfun_apply embed2_blinfun x = (0, x)\"", "lemma blinfun_inverseD: \"f o\\<^sub>L f' = 1\\<^sub>L \\<Longrightarrow> f (f' x) = x\"", "lemmas continuous_on_open_vimageI = continuous_on_open_vimage[THEN iffD1, rule_format]", "lemmas continuous_on_closed_vimageI = continuous_on_closed_vimage[THEN iffD1, rule_format]", "lemma ball_times_subset: \"ball a (c/2) \\<times> ball b (c/2) \\<subseteq> ball (a, b) c\"", "lemma linear_inverse_blinop_lemma:\n  fixes w::\"'a::{banach, perfect_space} blinop\"\n  assumes \"norm w < 1\"\n  shows\n    \"summable (\\<lambda>n. (-1)^n *\\<^sub>R w^n)\" (is ?C)\n    \"(\\<Sum>n. (-1)^n *\\<^sub>R w^n) * (1 + w) = 1\" (is ?I1)\n    \"(1 + w) * (\\<Sum>n. (-1)^n *\\<^sub>R w^n) = 1\" (is ?I2)\n    \"norm ((\\<Sum>n. (-1)^n *\\<^sub>R w^n) - 1 + w) \\<le> (norm w)\\<^sup>2/(1 - norm (w))\" (is ?L)", "lemma linear_inverse_blinfun_lemma:\n  fixes w::\"'a \\<Rightarrow>\\<^sub>L 'a::{banach, perfect_space}\"\n  assumes \"norm w < 1\"\n  obtains I where\n    \"I o\\<^sub>L (1\\<^sub>L + w) = 1\\<^sub>L\" \"(1\\<^sub>L + w) o\\<^sub>L I = 1\\<^sub>L\"\n    \"norm (I - 1\\<^sub>L + w) \\<le> (norm w)\\<^sup>2/(1 - norm (w))\"", "lemma blinfun_inverse_open:\\<comment> \\<open>8.3.2 in Dieudonne, TODO: add continuity and derivative\\<close>\n  shows \"open (invertibles_blinfun::\n      ('a::{banach, perfect_space} \\<Rightarrow>\\<^sub>L 'b::banach) set)\"", "lemma blinfun_compose_assoc[ac_simps]: \"a o\\<^sub>L b o\\<^sub>L c = a o\\<^sub>L (b o\\<^sub>L c)\"", "lemma (in real_normed_vector) norm_minus_cancel [simp]: \"norm (- x) = norm x\"", "lemma (in real_normed_vector) norm_minus_commute: \"norm (a - b) = norm (b - a)\"", "lemma blinfun_apply_Pair_split:\n  \"blinfun_apply g (a, b) = blinfun_apply g (a, 0) + blinfun_apply g (0, b)\"", "lemma blinfun_apply_Pair_add2: \"blinfun_apply f (0, a + b) = blinfun_apply f (0, a) + blinfun_apply f (0, b)\"", "lemma blinfun_apply_Pair_add1: \"blinfun_apply f (a + b, 0) = blinfun_apply f (a, 0) + blinfun_apply f (b, 0)\"", "lemma blinfun_apply_Pair_minus2: \"blinfun_apply f (0, a - b) = blinfun_apply f (0, a) - blinfun_apply f (0, b)\"", "lemma blinfun_apply_Pair_minus1: \"blinfun_apply f (a - b, 0) = blinfun_apply f (a, 0) - blinfun_apply f (b, 0)\"", "lemma implicit_function_theorem:\n  fixes f::\"'a::euclidean_space * 'b::euclidean_space \\<Rightarrow> 'c::euclidean_space\"\\<comment> \\<open>TODO: generalize?!\\<close>\n  assumes [derivative_intros]: \"\\<And>x. x \\<in> S \\<Longrightarrow> (f has_derivative blinfun_apply (f' x)) (at x)\"\n  assumes S: \"(x, y) \\<in> S\" \"open S\"\n  assumes \"DIM('c) \\<le> DIM('b)\"\n  assumes f'C: \"isCont f' (x, y)\"\n  assumes \"f (x, y) = 0\"\n  assumes T2: \"T o\\<^sub>L (f' (x, y) o\\<^sub>L embed2_blinfun) = 1\\<^sub>L\"\n  assumes T1: \"(f' (x, y) o\\<^sub>L embed2_blinfun) o\\<^sub>L T = 1\\<^sub>L\"\\<comment> \\<open>TODO: reduce?!\\<close>\n  obtains u e r\n  where \"f (x, u x) = 0\" \"u x = y\"\n    \"\\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = 0\"\n    \"continuous_on (cball x e) u\"\n    \"(\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S\"\n    \"e > 0\"\n    \"(u has_derivative - T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun) (at x)\"\n\n    \"r > 0\"\n    \"\\<And>U v s. v x = y \\<Longrightarrow> (\\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = 0) \\<Longrightarrow> U \\<subseteq> cball x e \\<Longrightarrow>\n      continuous_on U v \\<Longrightarrow> s \\<in> U \\<Longrightarrow> (s, v s) \\<in> ball (x, y) r \\<Longrightarrow> u s = v s\"", "lemma implicit_function_theorem_unique:\n  fixes f::\"'a::euclidean_space * 'b::euclidean_space \\<Rightarrow> 'c::euclidean_space\"\\<comment> \\<open>TODO: generalize?!\\<close>\n  assumes f'[derivative_intros]: \"\\<And>x. x \\<in> S \\<Longrightarrow> (f has_derivative blinfun_apply (f' x)) (at x)\"\n  assumes S: \"(x, y) \\<in> S\" \"open S\"\n  assumes D: \"DIM('c) \\<le> DIM('b)\"\n  assumes f'C: \"continuous_on S f'\"\n  assumes z: \"f (x, y) = 0\"\n  assumes T2: \"T o\\<^sub>L (f' (x, y) o\\<^sub>L embed2_blinfun) = 1\\<^sub>L\"\n  assumes T1: \"(f' (x, y) o\\<^sub>L embed2_blinfun) o\\<^sub>L T = 1\\<^sub>L\"\\<comment> \\<open>TODO: reduce?!\\<close>\n  obtains u e\n  where \"f (x, u x) = 0\" \"u x = y\"\n    \"\\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = 0\"\n    \"continuous_on (cball x e) u\"\n    \"(\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S\"\n    \"e > 0\"\n    \"(u has_derivative (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun)) (at x)\"\n    \"\\<And>s. s \\<in> cball x e \\<Longrightarrow> f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\"\n    \"\\<And>U v s. (\\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = 0) \\<Longrightarrow>\n      u x = v x \\<Longrightarrow>\n      continuous_on U v \\<Longrightarrow> s \\<in> U \\<Longrightarrow> x \\<in> U \\<Longrightarrow> U \\<subseteq> cball x e \\<Longrightarrow> connected U \\<Longrightarrow> open U \\<Longrightarrow> u s = v s\"", "lemma uniform_limit_compose:\n  assumes ul: \"uniform_limit T f l F\"\n  assumes uc: \"uniformly_continuous_on S s\"\n  assumes ev: \"\\<forall>\\<^sub>F x in F. f x ` T \\<subseteq> S\"\n  assumes subs: \"l ` T \\<subseteq> S\"\n  shows  \"uniform_limit T (\\<lambda>i x. s (f i x)) (\\<lambda>x. s (l x)) F\"", "lemma\n  uniform_limit_in_open:\n  fixes l::\"'a::topological_space\\<Rightarrow>'b::heine_borel\"\n  assumes ul: \"uniform_limit T f l (at x)\"\n  assumes cont: \"continuous_on T l\"\n  assumes compact: \"compact T\" and T_ne: \"T \\<noteq> {}\"\n  assumes B: \"open B\"\n  assumes mem: \"l ` T \\<subseteq> B\"\n  shows \"\\<forall>\\<^sub>F y in at x. \\<forall>t \\<in> T. f y t \\<in> B\"", "lemma\n  order_uniform_limitD1:\n  fixes l::\"'a::topological_space\\<Rightarrow>real\"\\<comment> \\<open>TODO: generalize?!\\<close>\n  assumes ul: \"uniform_limit T f l (at x)\"\n  assumes cont: \"continuous_on T l\"\n  assumes compact: \"compact T\"\n  assumes less: \"\\<And>t. t \\<in> T \\<Longrightarrow> l t < b\"\n  shows \"\\<forall>\\<^sub>F y in at x. \\<forall>t \\<in> T. f y t < b\"", "lemma\n  order_uniform_limitD2:\n  fixes l::\"'a::topological_space\\<Rightarrow>real\"\\<comment> \\<open>TODO: generalize?!\\<close>\n  assumes ul: \"uniform_limit T f l (at x)\"\n  assumes cont: \"continuous_on T l\"\n  assumes compact: \"compact T\"\n  assumes less: \"\\<And>t. t \\<in> T \\<Longrightarrow> l t > b\"\n  shows \"\\<forall>\\<^sub>F y in at x. \\<forall>t \\<in> T. f y t > b\"", "lemma continuous_on_avoid_cases:\n  fixes l::\"'b::topological_space \\<Rightarrow> 'a::linear_continuum_topology\"\\<comment> \\<open>TODO: generalize!\\<close>\n  assumes cont: \"continuous_on T l\" and conn: \"connected T\"\n  assumes avoid: \"\\<And>t. t \\<in> T \\<Longrightarrow> l t \\<noteq> b\"\n  obtains \"\\<And>t. t \\<in> T \\<Longrightarrow> l t < b\" | \"\\<And>t. t \\<in> T \\<Longrightarrow> l t > b\"", "lemma\n  order_uniform_limit_ne:\n  fixes l::\"'a::topological_space\\<Rightarrow>real\"\\<comment> \\<open>TODO: generalize?!\\<close>\n  assumes ul: \"uniform_limit T f l (at x)\"\n  assumes cont: \"continuous_on T l\"\n  assumes compact: \"compact T\" and conn: \"connected T\"\n  assumes ne: \"\\<And>t. t \\<in> T \\<Longrightarrow> l t \\<noteq> b\"\n  shows \"\\<forall>\\<^sub>F y in at x. \\<forall>t \\<in> T. f y t \\<noteq> b\"", "lemma open_cballE:\n  assumes \"open S\" \"x\\<in>S\"\n  obtains e where \"e>0\" \"cball x e \\<subseteq> S\"", "lemma pos_half_less: fixes x::real shows \"x > 0 \\<Longrightarrow> x / 2 < x\"", "lemma closed_levelset: \"closed {x. s x = (c::'a::t1_space)}\" if \"continuous_on UNIV s\"", "lemma closed_levelset_within: \"closed {x \\<in> S. s x = (c::'a::t1_space)}\" if \"continuous_on S s\" \"closed S\"", "lemma open_existence_ivlE:\n  assumes \"t \\<in> existence_ivl0 x\" \"t \\<ge> 0\"\n  obtains e where \"e > 0\" \"cball x e \\<times> {0 .. t + e} \\<subseteq> Sigma X existence_ivl0\"", "lemmas [derivative_intros] = flow0_comp_has_derivative", "lemma flow_isCont_state_space_comp[continuous_intros]:\n  \"t x \\<in> existence_ivl0 (s x) \\<Longrightarrow> isCont s x \\<Longrightarrow> isCont t x \\<Longrightarrow> isCont (\\<lambda>x. flow0 (s x) (t x)) x\"", "lemma closed_plane[simp]: \"closed {x. x \\<bullet> i = c}\"", "lemma flow_tendsto_compose[tendsto_intros]:\n  assumes \"(x \\<longlongrightarrow> xs) F\" \"(t \\<longlongrightarrow> ts) F\"\n  assumes \"ts \\<in> existence_ivl0 xs\"\n  shows \"((\\<lambda>s. flow0 (x s) (t s)) \\<longlongrightarrow> flow0 xs ts) F\"", "lemma returns_to_implicit_function:\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes rt: \"returns_to {x \\<in> S. s x = 0} x\" (is \"returns_to ?P x\")\n  assumes cS: \"closed S\"\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n  assumes DsC: \"isCont Ds (poincare_map ?P x)\"\n  assumes nz: \"Ds (poincare_map ?P x) (f (poincare_map ?P x)) \\<noteq> 0\"\n  obtains u e\n  where \"s (flow0 x (u x)) = 0\"\n      \"u x = return_time ?P x\"\n      \"(\\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0)\"\n      \"continuous_on (cball x e) u\"\n      \"(\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> Sigma X existence_ivl0\"\n      \"0 < e\" \"(u has_derivative (- blinfun_scaleR_left\n                   (inverse (blinfun_apply (Ds (poincare_map ?P x)) (f (poincare_map ?P x)))) o\\<^sub>L\n                      (Ds (poincare_map ?P x) o\\<^sub>L flowderiv x (return_time ?P x)) o\\<^sub>L embed1_blinfun)) (at x)\"", "lemma (in auto_ll_on_open) f_tendsto[tendsto_intros]:\n  assumes g1: \"(g1 \\<longlongrightarrow> b1) (at s within S)\" and \"b1 \\<in> X\"\n  shows \"((\\<lambda>x. f (g1 x)) \\<longlongrightarrow> f b1) (at s within S)\"", "lemma flow_avoids_surface_eventually_at_right_pos:\n  assumes \"s x > 0 \\<or> s x = 0 \\<and> blinfun_apply (Ds x) (f x) > 0\"\n  assumes x: \"x \\<in> X\"\n  assumes Ds: \"\\<And>x. (s has_derivative Ds x) (at x)\"\n  assumes DsC: \"\\<And>x. isCont Ds x\"\n  shows \"\\<forall>\\<^sub>F t in at_right 0. s (flow0 x t) > (0::real)\"", "lemma flow_avoids_surface_eventually_at_right_neg:\n  assumes \"s x < 0 \\<or> s x = 0 \\<and> blinfun_apply (Ds x) (f x) < 0\"\n  assumes x: \"x \\<in> X\"\n  assumes Ds: \"\\<And>x. (s has_derivative Ds x) (at x)\"\n  assumes DsC: \"\\<And>x. isCont Ds x\"\n  shows \"\\<forall>\\<^sub>F t in at_right 0. s (flow0 x t) < (0::real)\"", "lemma flow_avoids_surface_eventually_at_right:\n  assumes \"x \\<notin> S \\<or> s x \\<noteq> 0 \\<or> blinfun_apply (Ds x) (f x) \\<noteq> 0\"\n  assumes x: \"x \\<in> X\" and cS: \"closed S\"\n  assumes Ds: \"\\<And>x. (s has_derivative Ds x) (at x)\"\n  assumes DsC: \"\\<And>x. isCont Ds x\"\n  shows \"\\<forall>\\<^sub>F t in at_right 0. (flow0 x t) \\<notin> {x \\<in> S. s x = (0::real)}\"", "lemma eventually_returns_to:\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes rt: \"returns_to {x \\<in> S. s x = 0} x\" (is \"returns_to ?P x\")\n  assumes cS: \"closed S\"\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n  assumes DsC: \"\\<And>x. isCont Ds x\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map ?P x). s x = 0 \\<longrightarrow> x \\<in> S\"\n  assumes nz: \"Ds (poincare_map ?P x) (f (poincare_map ?P x)) \\<noteq> 0\"\n  assumes nz0: \"x \\<notin> S \\<or> s x \\<noteq> 0 \\<or> Ds x (f x) \\<noteq> 0\"\n  shows \"\\<forall>\\<^sub>F x in at x. returns_to ?P x\"", "lemma\n  return_time_isCont_outside:\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes rt: \"returns_to {x \\<in> S. s x = 0} x\" (is \"returns_to ?P x\")\n  assumes cS: \"closed S\"\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n  assumes DsC: \"\\<And>x. isCont Ds x\"\n  assumes through: \"(Ds (poincare_map ?P x)) (f (poincare_map ?P x)) \\<noteq> 0\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map ?P x). s x = 0 \\<longrightarrow> x \\<in> S\"\n  assumes outside: \"x \\<notin> S \\<or> s x \\<noteq> 0\"\n  shows \"isCont (return_time ?P) x\"", "lemma isCont_poincare_map:\n  assumes \"isCont (return_time P) x\"\n    \"returns_to P x\" \"closed P\"\n  shows \"isCont (poincare_map P) x\"", "lemma poincare_map_tendsto:\n  assumes \"(return_time P \\<longlongrightarrow> return_time P x) (at x within S)\"\n    \"returns_to P x\" \"closed P\"\n  shows \"(poincare_map P \\<longlongrightarrow> poincare_map P x) (at x within S)\"", "lemma\n  return_time_continuous_below:\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes rt: \"returns_to {x \\<in> S. s x = 0} x\" (is \"returns_to ?P x\")\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n  assumes cS: \"closed S\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map ?P x). s x = 0 \\<longrightarrow> x \\<in> S\"\n  assumes DsC: \"\\<And>x. isCont Ds x\"\n  assumes through: \"(Ds (poincare_map ?P x)) (f (poincare_map ?P x)) \\<noteq> 0\"\n  assumes inside: \"x \\<in> S\" \"s x = 0\" \"Ds x (f x) < 0\"\n  shows \"continuous (at x within {x. s x \\<le> 0}) (return_time ?P)\"", "lemma\n  return_time_continuous_below_plane:\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes rt: \"returns_to {x \\<in> R. x \\<bullet> n = c} x\" (is \"returns_to ?P x\")\n  assumes cR: \"closed R\"\n  assumes through: \"f (poincare_map ?P x) \\<bullet> n \\<noteq> 0\"\n  assumes R: \"x \\<in> R\"\n  assumes inside: \"x \\<bullet> n = c\" \"f x \\<bullet> n < 0\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map ?P x). x \\<bullet> n = c \\<longrightarrow> x \\<in> R\"\n  shows \"continuous (at x within {x. x \\<bullet> n \\<le> c}) (return_time ?P)\"", "lemma\n  poincare_map_in_interior_eventually_return_time_equal:\n  assumes RP: \"R \\<subseteq> P\"\n  assumes cP: \"closed P\"\n  assumes cR: \"closed R\"\n  assumes ret: \"returns_to P x\"\n  assumes evret: \"\\<forall>\\<^sub>F x in at x within S. returns_to P x\"\n  assumes evR: \"\\<forall>\\<^sub>F x in at x within S. poincare_map P x \\<in> R\"\n  shows \"\\<forall>\\<^sub>F x in at x within S. returns_to R x \\<and> return_time P x = return_time R x\"", "lemma poincare_map_in_planeI:\n  assumes \"returns_to (plane n c) x0\"\n  shows \"poincare_map (plane n c) x0 \\<bullet> n = c\"", "lemma less_return_time_imp_exivl:\n  \"h \\<in> existence_ivl0 x'\" if \"h \\<le> return_time P x'\" \"returns_to P x'\" \"closed P\" \"0 \\<le> h\"", "lemma eventually_returns_to_continuousI:\n  assumes \"returns_to P x\"\n  assumes \"closed P\"\n  assumes \"continuous (at x within S) (return_time P)\"\n  shows \"\\<forall>\\<^sub>F x in at x within S. returns_to P x\"", "lemma return_time_implicit_functionE:\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes rt: \"returns_to {x \\<in> S. s x = 0} x\" (is \"returns_to ?P _\")\n  assumes cS: \"closed S\"\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n  assumes DsC: \"\\<And>x. isCont Ds x\"\n  assumes Ds_through: \"(Ds (poincare_map ?P x)) (f (poincare_map ?P x)) \\<noteq> 0\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map ?P x). s x = 0 \\<longrightarrow> x \\<in> S\"\n  assumes outside: \"x \\<notin> S \\<or> s x \\<noteq> 0\"\n  obtains e' where\n    \"0 < e'\"\n    \"\\<And>y. y \\<in> ball x e' \\<Longrightarrow> returns_to ?P y\"\n    \"\\<And>y. y \\<in> ball x e' \\<Longrightarrow> s (flow0 y (return_time ?P y)) = 0\"\n    \"continuous_on (ball x e') (return_time ?P)\"\n    \"(\\<And>y. y \\<in> ball x e' \\<Longrightarrow> Ds (poincare_map ?P y) o\\<^sub>L flowderiv y (return_time ?P y) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun)\"\n    \"(\\<And>U v sa.\n       (\\<And>sa. sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0) \\<Longrightarrow>\n       return_time ?P x = v x \\<Longrightarrow>\n       continuous_on U v \\<Longrightarrow> sa \\<in> U \\<Longrightarrow> x \\<in> U \\<Longrightarrow> U \\<subseteq> ball x e' \\<Longrightarrow> connected U \\<Longrightarrow> open U \\<Longrightarrow> return_time ?P sa = v sa)\"\n    \"(return_time ?P has_derivative\n        - blinfun_scaleR_left (inverse ((Ds (poincare_map ?P x)) (f (poincare_map ?P x)))) o\\<^sub>L\n              (Ds (poincare_map ?P x) o\\<^sub>L Dflow x (return_time ?P x)))\n            (at x)\"", "lemma return_time_has_derivative:\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes rt: \"returns_to {x \\<in> S. s x = 0} x\" (is \"returns_to ?P _\")\n  assumes cS: \"closed S\"\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n  assumes DsC: \"\\<And>x. isCont Ds x\"\n  assumes Ds_through: \"(Ds (poincare_map ?P x)) (f (poincare_map ?P x)) \\<noteq> 0\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x). s x = 0 \\<longrightarrow> x \\<in> S\"\n  assumes outside: \"x \\<notin> S \\<or> s x \\<noteq> 0\"\n  shows \"(return_time ?P has_derivative\n  - blinfun_scaleR_left (inverse ((Ds (poincare_map ?P x)) (f (poincare_map ?P x)))) o\\<^sub>L\n      (Ds (poincare_map ?P x) o\\<^sub>L Dflow x (return_time ?P x)))\n            (at x)\"", "lemma return_time_plane_has_derivative_blinfun:\n  assumes rt: \"returns_to {x \\<in> S. x \\<bullet> i = c} x\" (is \"returns_to ?P _\")\n  assumes cS: \"closed S\"\n  assumes fnz: \"f (poincare_map ?P x) \\<bullet> i \\<noteq> 0\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map ?P x). x \\<bullet> i = c \\<longrightarrow> x \\<in> S\"\n  assumes outside: \"x \\<notin> S \\<or> x \\<bullet> i \\<noteq> c\"\n  shows \"(return_time ?P has_derivative\n    (- blinfun_scaleR_left (inverse ((blinfun_inner_left i) (f (poincare_map ?P x)))) o\\<^sub>L\n      (blinfun_inner_left i o\\<^sub>L Dflow x (return_time ?P x)))) (at x)\"", "lemma return_time_plane_has_derivative:\n  assumes rt: \"returns_to {x \\<in> S. x \\<bullet> i = c} x\" (is \"returns_to ?P _\")\n  assumes cS: \"closed S\"\n  assumes fnz: \"f (poincare_map ?P x) \\<bullet> i \\<noteq> 0\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map ?P x). x \\<bullet> i = c \\<longrightarrow> x \\<in> S\"\n  assumes outside: \"x \\<notin> S \\<or> x \\<bullet> i \\<noteq> c\"\n  shows \"(return_time ?P has_derivative\n    (\\<lambda>h. - (Dflow x (return_time ?P x)) h \\<bullet> i / (f (poincare_map ?P x) \\<bullet> i))) (at x)\"", "theorem poincare_map_plane_has_derivative:\n  assumes rt: \"returns_to {x \\<in> S. x \\<bullet> i = c} x\" (is \"returns_to ?P _\")\n  assumes cS: \"closed S\"\n  assumes fnz: \"f (poincare_map ?P x) \\<bullet> i \\<noteq> 0\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map ?P x). x \\<bullet> i = c \\<longrightarrow> x \\<in> S\"\n  assumes outside: \"x \\<notin> S \\<or> x \\<bullet> i \\<noteq> c\"\n  notes [derivative_intros] = return_time_plane_has_derivative[OF rt cS fnz eventually_inside outside]\n  shows \"(poincare_map ?P has_derivative Dpoincare_map' i c S x) (at x)\""], "translations": [["", "lemma\n  eventually_tendsto_compose_within:\n  assumes \"eventually P (at l within S)\"\n  assumes \"P l\"\n  assumes \"(f \\<longlongrightarrow> l) (at x within T)\"\n  assumes \"eventually (\\<lambda>x. f x \\<in> S) (at x within T)\"\n  shows \"eventually (\\<lambda>x. P (f x)) (at x within T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x within T. P (f x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x within T. P (f x)", "from assms(1) assms(2)"], ["proof (chain)\npicking this:\n  eventually P (at l within S)\n  P l", "obtain U where U:\n    \"open U\" \"l \\<in> U\" \"\\<And>x. x \\<in> U \\<Longrightarrow> x \\<in> S \\<Longrightarrow> P x\""], ["proof (prove)\nusing this:\n  eventually P (at l within S)\n  P l\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>open U; l \\<in> U;\n         \\<And>x.\n            \\<lbrakk>x \\<in> U; x \\<in> S\\<rbrakk>\n            \\<Longrightarrow> P x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force simp: eventually_at_topological)"], ["proof (state)\nthis:\n  open U\n  l \\<in> U\n  \\<lbrakk>?x \\<in> U; ?x \\<in> S\\<rbrakk> \\<Longrightarrow> P ?x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x within T. P (f x)", "from topological_tendstoD[OF assms(3) \\<open>open U\\<close> \\<open>l \\<in> U\\<close>]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x within T. f x \\<in> U", "have \"\\<forall>\\<^sub>F x in at x within T. f x \\<in> U\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x within T. f x \\<in> U\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x within T. f x \\<in> U", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x within T. f x \\<in> U\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x within T. P (f x)", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x within T. f x \\<in> U", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x within T. f x \\<in> U\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x within T. P (f x)", "using assms(4)"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x within T. f x \\<in> U\n  \\<forall>\\<^sub>F x in at x within T. f x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x within T. P (f x)", "by eventually_elim (auto intro!: U)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x within T. P (f x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  eventually_eventually_withinI:\\<comment> \\<open>aha...\\<close>\n  assumes \"\\<forall>\\<^sub>F x in at x within A. P x\" \"P x\"\n  shows \"\\<forall>\\<^sub>F a in at x within S. \\<forall>\\<^sub>F x in at a within A. P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F a in at x within S. eventually P (at a within A)", "using assms"], ["proof (prove)\nusing this:\n  eventually P (at x within A)\n  P x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F a in at x within S. eventually P (at a within A)", "unfolding eventually_at_topological"], ["proof (prove)\nusing this:\n  \\<exists>S.\n     open S \\<and>\n     x \\<in> S \\<and>\n     (\\<forall>xa\\<in>S.\n         xa \\<noteq> x \\<longrightarrow> xa \\<in> A \\<longrightarrow> P xa)\n  P x\n\ngoal (1 subgoal):\n 1. \\<exists>Sa.\n       open Sa \\<and>\n       x \\<in> Sa \\<and>\n       (\\<forall>xa\\<in>Sa.\n           xa \\<noteq> x \\<longrightarrow>\n           xa \\<in> S \\<longrightarrow>\n           (\\<exists>S.\n               open S \\<and>\n               xa \\<in> S \\<and>\n               (\\<forall>x\\<in>S.\n                   x \\<noteq> xa \\<longrightarrow>\n                   x \\<in> A \\<longrightarrow> P x)))", "by force"], ["", "lemma eventually_not_in_closed:\n  assumes \"closed P\"\n  assumes \"f t \\<notin> P\" \"t \\<in> T\"\n  assumes \"continuous_on T f\"\n  shows \"\\<forall>\\<^sub>F t in at t within T. f t \\<notin> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at t within T. f t \\<notin> P", "using assms"], ["proof (prove)\nusing this:\n  closed P\n  f t \\<notin> P\n  t \\<in> T\n  continuous_on T f\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at t within T. f t \\<notin> P", "unfolding Compl_iff[symmetric] closed_def continuous_on_topological eventually_at_topological"], ["proof (prove)\nusing this:\n  open (- P)\n  f t \\<in> - P\n  t \\<in> T\n  \\<forall>x\\<in>T.\n     \\<forall>B.\n        open B \\<longrightarrow>\n        f x \\<in> B \\<longrightarrow>\n        (\\<exists>A.\n            open A \\<and>\n            x \\<in> A \\<and>\n            (\\<forall>y\\<in>T. y \\<in> A \\<longrightarrow> f y \\<in> B))\n\ngoal (1 subgoal):\n 1. \\<exists>S.\n       open S \\<and>\n       t \\<in> S \\<and>\n       (\\<forall>x\\<in>S.\n           x \\<noteq> t \\<longrightarrow>\n           x \\<in> T \\<longrightarrow> f x \\<in> - P)", "by metis"], ["", "context ll_on_open_it begin"], ["", "lemma\n  existence_ivl_trans':\n  assumes \"t + s \\<in> existence_ivl t0 x0\"\n    \"t \\<in> existence_ivl t0 x0\"\n  shows \"t + s \\<in> existence_ivl t (flow t0 x0 t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t + s \\<in> existence_ivl t (flow t0 x0 t)", "by (meson assms(1) assms(2) general.existence_ivl_reverse general.flow_solves_ode\n      general.is_interval_existence_ivl general.maximal_existence_flow(1)\n      general.mem_existence_ivl_iv_defined(2) general.mem_existence_ivl_subset\n      local.existence_ivl_subset subsetD)"], ["", "end"], ["", "context auto_ll_on_open\\<comment> \\<open>TODO: generalize to continuous systems\\<close>\nbegin"], ["", "definition returns_to ::\"'a set \\<Rightarrow> 'a \\<Rightarrow> bool\"\n  where \"returns_to P x \\<longleftrightarrow> (\\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P) \\<and> (\\<exists>t>0. t \\<in> existence_ivl0 x \\<and> flow0 x t \\<in> P)\""], ["", "definition return_time :: \"'a set \\<Rightarrow> 'a \\<Rightarrow> real\"\n  where \"return_time P x =\n    (if returns_to P x then (SOME t.\n      t > 0 \\<and>\n      t \\<in> existence_ivl0 x \\<and>\n      flow0 x t \\<in> P \\<and>\n      (\\<forall>s \\<in> {0<..<t}. flow0 x s \\<notin> P)) else 0)\""], ["", "lemma returns_toI:\n  assumes t: \"t > 0\" \"t \\<in> existence_ivl0 x\" \"flow0 x t \\<in> P\"\n  assumes ev: \"\\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\"\n  assumes \"closed P\"\n  shows \"returns_to P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. returns_to P x", "using assms"], ["proof (prove)\nusing this:\n  0 < t\n  t \\<in> existence_ivl0 x\n  flow0 x t \\<in> P\n  \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\n  closed P\n\ngoal (1 subgoal):\n 1. returns_to P x", "by (auto simp: returns_to_def)"], ["", "lemma returns_to_outsideI:\n  assumes t: \"t \\<ge> 0\" \"t \\<in> existence_ivl0 x\" \"flow0 x t \\<in> P\"\n  assumes ev: \"x \\<notin> P\"\n  assumes \"closed P\"\n  shows \"returns_to P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. returns_to P x", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> returns_to P x\n 2. \\<not> ?P \\<Longrightarrow> returns_to P x", "assume \"t > 0\""], ["proof (state)\nthis:\n  0 < t\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> returns_to P x\n 2. \\<not> ?P \\<Longrightarrow> returns_to P x", "moreover"], ["proof (state)\nthis:\n  0 < t\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> returns_to P x\n 2. \\<not> ?P \\<Longrightarrow> returns_to P x", "have \"\\<forall>\\<^sub>F s in at 0 within {0 .. t}. flow0 x s \\<notin> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0 within {0..t}. flow0 x s \\<notin> P", "using assms mem_existence_ivl_iv_defined ivl_subset_existence_ivl[OF \\<open>t \\<in> _\\<close>] \\<open>0 < t\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> t\n  t \\<in> existence_ivl0 x\n  flow0 x t \\<in> P\n  x \\<notin> P\n  closed P\n  ?t \\<in> existence_ivl0 ?x0.0 \\<Longrightarrow> 0 \\<in> UNIV\n  ?t \\<in> existence_ivl0 ?x0.0 \\<Longrightarrow> ?x0.0 \\<in> X\n  {0..t} \\<subseteq> existence_ivl0 x\n  0 < t\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0 within {0..t}. flow0 x s \\<notin> P", "by (auto intro!: eventually_not_in_closed flow_continuous_on continuous_intros\n        simp: eventually_conj_iff)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at 0 within {0..t}. flow0 x s \\<notin> P\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> returns_to P x\n 2. \\<not> ?P \\<Longrightarrow> returns_to P x", "with order_tendstoD(2)[OF tendsto_ident_at \\<open>0 < t\\<close>, of \"{0<..}\"]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_right 0. x < t\n  \\<forall>\\<^sub>F s in at 0 within {0..t}. flow0 x s \\<notin> P", "have \"\\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_right 0. x < t\n  \\<forall>\\<^sub>F s in at 0 within {0..t}. flow0 x s \\<notin> P\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P", "unfolding eventually_at_filter"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in nhds 0.\n     x \\<noteq> 0 \\<longrightarrow> x \\<in> {0<..} \\<longrightarrow> x < t\n  \\<forall>\\<^sub>F xa in nhds 0.\n     xa \\<noteq> 0 \\<longrightarrow>\n     xa \\<in> {0..t} \\<longrightarrow> flow0 x xa \\<notin> P\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in nhds 0.\n       xa \\<noteq> 0 \\<longrightarrow>\n       xa \\<in> {0<..} \\<longrightarrow> flow0 x xa \\<notin> P", "by eventually_elim (use \\<open>t > 0\\<close> in auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> returns_to P x\n 2. \\<not> ?P \\<Longrightarrow> returns_to P x", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\n\ngoal (1 subgoal):\n 1. returns_to P x", "by (auto intro!: returns_toI assms \\<open>0 < t\\<close>)"], ["proof (state)\nthis:\n  returns_to P x\n\ngoal (1 subgoal):\n 1. \\<not> 0 < t \\<Longrightarrow> returns_to P x", "qed (use assms in simp)"], ["", "lemma returns_toE:\n  assumes \"returns_to P x\"\n  obtains t0 t1 where\n    \"0 < t0\"\n    \"t0 \\<le> t1\"\n    \"t1 \\<in> existence_ivl0 x\"\n    \"flow0 x t1 \\<in> P\"\n    \"\\<And>t. 0 < t \\<Longrightarrow> t < t0 \\<Longrightarrow> flow0 x t \\<notin> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t0 t1.\n        \\<lbrakk>0 < t0; t0 \\<le> t1; t1 \\<in> existence_ivl0 x;\n         flow0 x t1 \\<in> P;\n         \\<And>t.\n            \\<lbrakk>0 < t; t < t0\\<rbrakk>\n            \\<Longrightarrow> flow0 x t \\<notin> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>t0 t1.\n        \\<lbrakk>0 < t0; t0 \\<le> t1; t1 \\<in> existence_ivl0 x;\n         flow0 x t1 \\<in> P;\n         \\<And>t.\n            \\<lbrakk>0 < t; t < t0\\<rbrakk>\n            \\<Longrightarrow> flow0 x t \\<notin> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain t0 t1 where t0: \"t0 > 0\" \"\\<And>t. 0 < t \\<Longrightarrow> t < t0 \\<Longrightarrow> flow0 x t \\<notin> P\"\n    and t1: \"t1 > 0\" \"t1 \\<in> existence_ivl0 x\" \"flow0 x t1 \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t0 t1.\n        \\<lbrakk>0 < t0;\n         \\<And>t.\n            \\<lbrakk>0 < t; t < t0\\<rbrakk>\n            \\<Longrightarrow> flow0 x t \\<notin> P;\n         0 < t1; t1 \\<in> existence_ivl0 x; flow0 x t1 \\<in> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  returns_to P x\n\ngoal (1 subgoal):\n 1. (\\<And>t0 t1.\n        \\<lbrakk>0 < t0;\n         \\<And>t.\n            \\<lbrakk>0 < t; t < t0\\<rbrakk>\n            \\<Longrightarrow> flow0 x t \\<notin> P;\n         0 < t1; t1 \\<in> existence_ivl0 x; flow0 x t1 \\<in> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: returns_to_def eventually_at_right[OF zero_less_one])"], ["proof (state)\nthis:\n  0 < t0\n  \\<lbrakk>0 < ?t; ?t < t0\\<rbrakk> \\<Longrightarrow> flow0 x ?t \\<notin> P\n  0 < t1\n  t1 \\<in> existence_ivl0 x\n  flow0 x t1 \\<in> P\n\ngoal (1 subgoal):\n 1. (\\<And>t0 t1.\n        \\<lbrakk>0 < t0; t0 \\<le> t1; t1 \\<in> existence_ivl0 x;\n         flow0 x t1 \\<in> P;\n         \\<And>t.\n            \\<lbrakk>0 < t; t < t0\\<rbrakk>\n            \\<Longrightarrow> flow0 x t \\<notin> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  0 < t0\n  \\<lbrakk>0 < ?t; ?t < t0\\<rbrakk> \\<Longrightarrow> flow0 x ?t \\<notin> P\n  0 < t1\n  t1 \\<in> existence_ivl0 x\n  flow0 x t1 \\<in> P\n\ngoal (1 subgoal):\n 1. (\\<And>t0 t1.\n        \\<lbrakk>0 < t0; t0 \\<le> t1; t1 \\<in> existence_ivl0 x;\n         flow0 x t1 \\<in> P;\n         \\<And>t.\n            \\<lbrakk>0 < t; t < t0\\<rbrakk>\n            \\<Longrightarrow> flow0 x t \\<notin> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"t0 \\<le> t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<le> t1", "using t0(2)[of t1] t1 t0(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < t1; t1 < t0\\<rbrakk> \\<Longrightarrow> flow0 x t1 \\<notin> P\n  0 < t1\n  t1 \\<in> existence_ivl0 x\n  flow0 x t1 \\<in> P\n  0 < t0\n\ngoal (1 subgoal):\n 1. t0 \\<le> t1", "by force"], ["proof (state)\nthis:\n  t0 \\<le> t1\n\ngoal (1 subgoal):\n 1. (\\<And>t0 t1.\n        \\<lbrakk>0 < t0; t0 \\<le> t1; t1 \\<in> existence_ivl0 x;\n         flow0 x t1 \\<in> P;\n         \\<And>t.\n            \\<lbrakk>0 < t; t < t0\\<rbrakk>\n            \\<Longrightarrow> flow0 x t \\<notin> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  0 < t0\n  \\<lbrakk>0 < ?t; ?t < t0\\<rbrakk> \\<Longrightarrow> flow0 x ?t \\<notin> P\n  0 < t1\n  t1 \\<in> existence_ivl0 x\n  flow0 x t1 \\<in> P\n  t0 \\<le> t1", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < t0\n  \\<lbrakk>0 < ?t; ?t < t0\\<rbrakk> \\<Longrightarrow> flow0 x ?t \\<notin> P\n  0 < t1\n  t1 \\<in> existence_ivl0 x\n  flow0 x t1 \\<in> P\n  t0 \\<le> t1\n\ngoal (1 subgoal):\n 1. thesis", "by (blast intro: that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma return_time_some:\n  assumes \"returns_to P x\"\n  shows \"return_time P x =\n    (SOME t. t > 0 \\<and> t \\<in> existence_ivl0 x \\<and> flow0 x t \\<in> P \\<and> (\\<forall>s \\<in> {0<..<t}. flow0 x s \\<notin> P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time P x =\n    (SOME t.\n        0 < t \\<and>\n        t \\<in> existence_ivl0 x \\<and>\n        flow0 x t \\<in> P \\<and>\n        (\\<forall>s\\<in>{0<..<t}. flow0 x s \\<notin> P))", "using assms"], ["proof (prove)\nusing this:\n  returns_to P x\n\ngoal (1 subgoal):\n 1. return_time P x =\n    (SOME t.\n        0 < t \\<and>\n        t \\<in> existence_ivl0 x \\<and>\n        flow0 x t \\<in> P \\<and>\n        (\\<forall>s\\<in>{0<..<t}. flow0 x s \\<notin> P))", "by (auto simp: return_time_def)"], ["", "lemma return_time_ex1:\n  assumes \"returns_to P x\"\n  assumes \"closed P\"\n  shows \"\\<exists>!t. t > 0 \\<and> t \\<in> existence_ivl0 x \\<and> flow0 x t \\<in> P \\<and> (\\<forall>s \\<in> {0<..<t}. flow0 x s \\<notin> P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!t.\n       0 < t \\<and>\n       t \\<in> existence_ivl0 x \\<and>\n       flow0 x t \\<in> P \\<and>\n       (\\<forall>s\\<in>{0<..<t}. flow0 x s \\<notin> P)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!t.\n       0 < t \\<and>\n       t \\<in> existence_ivl0 x \\<and>\n       flow0 x t \\<in> P \\<and>\n       (\\<forall>s\\<in>{0<..<t}. flow0 x s \\<notin> P)", "from returns_toE[OF \\<open>returns_to P x\\<close>]"], ["proof (chain)\npicking this:\n  (\\<And>t0 t1.\n      \\<lbrakk>0 < t0; t0 \\<le> t1; t1 \\<in> existence_ivl0 x;\n       flow0 x t1 \\<in> P;\n       \\<And>t.\n          \\<lbrakk>0 < t; t < t0\\<rbrakk>\n          \\<Longrightarrow> flow0 x t \\<notin> P\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain t0 t1 where\n    t1: \"t1 \\<ge> t0\" \"t1 \\<in> existence_ivl0 x\" \"flow0 x t1 \\<in> P\"\n    and t0: \"t0 > 0\" \"\\<And>t. 0 < t \\<Longrightarrow> t < t0 \\<Longrightarrow> flow0 x t \\<notin> P\""], ["proof (prove)\nusing this:\n  (\\<And>t0 t1.\n      \\<lbrakk>0 < t0; t0 \\<le> t1; t1 \\<in> existence_ivl0 x;\n       flow0 x t1 \\<in> P;\n       \\<And>t.\n          \\<lbrakk>0 < t; t < t0\\<rbrakk>\n          \\<Longrightarrow> flow0 x t \\<notin> P\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>t0 t1.\n        \\<lbrakk>t0 \\<le> t1; t1 \\<in> existence_ivl0 x; flow0 x t1 \\<in> P;\n         0 < t0;\n         \\<And>t.\n            \\<lbrakk>0 < t; t < t0\\<rbrakk>\n            \\<Longrightarrow> flow0 x t \\<notin> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  t0 \\<le> t1\n  t1 \\<in> existence_ivl0 x\n  flow0 x t1 \\<in> P\n  0 < t0\n  \\<lbrakk>0 < ?t; ?t < t0\\<rbrakk> \\<Longrightarrow> flow0 x ?t \\<notin> P\n\ngoal (1 subgoal):\n 1. \\<exists>!t.\n       0 < t \\<and>\n       t \\<in> existence_ivl0 x \\<and>\n       flow0 x t \\<in> P \\<and>\n       (\\<forall>s\\<in>{0<..<t}. flow0 x s \\<notin> P)", "from flow_continuous_on"], ["proof (chain)\npicking this:\n  continuous_on (existence_ivl0 ?x0.0) (flow0 ?x0.0)", "have cont: \"continuous_on {0 .. t1} (flow0 x)\""], ["proof (prove)\nusing this:\n  continuous_on (existence_ivl0 ?x0.0) (flow0 ?x0.0)\n\ngoal (1 subgoal):\n 1. continuous_on {0..t1} (flow0 x)", "by (rule continuous_on_subset) (intro ivl_subset_existence_ivl t1)"], ["proof (state)\nthis:\n  continuous_on {0..t1} (flow0 x)\n\ngoal (1 subgoal):\n 1. \\<exists>!t.\n       0 < t \\<and>\n       t \\<in> existence_ivl0 x \\<and>\n       flow0 x t \\<in> P \\<and>\n       (\\<forall>s\\<in>{0<..<t}. flow0 x s \\<notin> P)", "from cont"], ["proof (chain)\npicking this:\n  continuous_on {0..t1} (flow0 x)", "have cont': \"continuous_on {t0 .. t1} (flow0 x)\""], ["proof (prove)\nusing this:\n  continuous_on {0..t1} (flow0 x)\n\ngoal (1 subgoal):\n 1. continuous_on {t0..t1} (flow0 x)", "by (rule continuous_on_subset) (use \\<open>0 < t0\\<close> in auto)"], ["proof (state)\nthis:\n  continuous_on {t0..t1} (flow0 x)\n\ngoal (1 subgoal):\n 1. \\<exists>!t.\n       0 < t \\<and>\n       t \\<in> existence_ivl0 x \\<and>\n       flow0 x t \\<in> P \\<and>\n       (\\<forall>s\\<in>{0<..<t}. flow0 x s \\<notin> P)", "have \"compact (flow0 x -` P \\<inter> {t0 .. t1})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact (flow0 x -` P \\<inter> {t0..t1})", "using \\<open>closed P\\<close> cont'"], ["proof (prove)\nusing this:\n  closed P\n  continuous_on {t0..t1} (flow0 x)\n\ngoal (1 subgoal):\n 1. compact (flow0 x -` P \\<inter> {t0..t1})", "by (auto simp: compact_eq_bounded_closed bounded_Int bounded_closed_interval\n        intro!: closed_vimage_Int)"], ["proof (state)\nthis:\n  compact (flow0 x -` P \\<inter> {t0..t1})\n\ngoal (1 subgoal):\n 1. \\<exists>!t.\n       0 < t \\<and>\n       t \\<in> existence_ivl0 x \\<and>\n       flow0 x t \\<in> P \\<and>\n       (\\<forall>s\\<in>{0<..<t}. flow0 x s \\<notin> P)", "have \"flow0 x -` P \\<inter> {t0..t1} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 x -` P \\<inter> {t0..t1} \\<noteq> {}", "using t1 t0"], ["proof (prove)\nusing this:\n  t0 \\<le> t1\n  t1 \\<in> existence_ivl0 x\n  flow0 x t1 \\<in> P\n  0 < t0\n  \\<lbrakk>0 < ?t; ?t < t0\\<rbrakk> \\<Longrightarrow> flow0 x ?t \\<notin> P\n\ngoal (1 subgoal):\n 1. flow0 x -` P \\<inter> {t0..t1} \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  flow0 x -` P \\<inter> {t0..t1} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>!t.\n       0 < t \\<and>\n       t \\<in> existence_ivl0 x \\<and>\n       flow0 x t \\<in> P \\<and>\n       (\\<forall>s\\<in>{0<..<t}. flow0 x s \\<notin> P)", "from compact_attains_inf[OF \\<open>compact _\\<close> this] t0 t1"], ["proof (chain)\npicking this:\n  \\<exists>s\\<in>flow0 x -` P \\<inter> {t0..t1}.\n     \\<forall>t\\<in>flow0 x -` P \\<inter> {t0..t1}. s \\<le> t\n  0 < t0\n  \\<lbrakk>0 < ?t; ?t < t0\\<rbrakk> \\<Longrightarrow> flow0 x ?t \\<notin> P\n  t0 \\<le> t1\n  t1 \\<in> existence_ivl0 x\n  flow0 x t1 \\<in> P", "obtain rt where rt: \"t0 \\<le> rt\" \"rt \\<le> t1\" \"flow0 x rt \\<in> P\"\n    and least: \"\\<And>t'. flow0 x t' \\<in> P \\<Longrightarrow> t0 \\<le> t' \\<Longrightarrow> t' \\<le> t1 \\<Longrightarrow> rt \\<le> t'\""], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>flow0 x -` P \\<inter> {t0..t1}.\n     \\<forall>t\\<in>flow0 x -` P \\<inter> {t0..t1}. s \\<le> t\n  0 < t0\n  \\<lbrakk>0 < ?t; ?t < t0\\<rbrakk> \\<Longrightarrow> flow0 x ?t \\<notin> P\n  t0 \\<le> t1\n  t1 \\<in> existence_ivl0 x\n  flow0 x t1 \\<in> P\n\ngoal (1 subgoal):\n 1. (\\<And>rt.\n        \\<lbrakk>t0 \\<le> rt; rt \\<le> t1; flow0 x rt \\<in> P;\n         \\<And>t'.\n            \\<lbrakk>flow0 x t' \\<in> P; t0 \\<le> t'; t' \\<le> t1\\<rbrakk>\n            \\<Longrightarrow> rt \\<le> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t0 \\<le> rt\n  rt \\<le> t1\n  flow0 x rt \\<in> P\n  \\<lbrakk>flow0 x ?t' \\<in> P; t0 \\<le> ?t'; ?t' \\<le> t1\\<rbrakk>\n  \\<Longrightarrow> rt \\<le> ?t'\n\ngoal (1 subgoal):\n 1. \\<exists>!t.\n       0 < t \\<and>\n       t \\<in> existence_ivl0 x \\<and>\n       flow0 x t \\<in> P \\<and>\n       (\\<forall>s\\<in>{0<..<t}. flow0 x s \\<notin> P)", "have \"0 < rt\" \"flow0 x rt \\<in> P\" \"rt \\<in> existence_ivl0 x\"\n    and \"0 < t' \\<Longrightarrow> t' < rt \\<Longrightarrow> flow0 x t' \\<notin> P\" for t'"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < rt &&& flow0 x rt \\<in> P &&& rt \\<in> existence_ivl0 x) &&&\n    (\\<lbrakk>0 < t'; t' < rt\\<rbrakk>\n     \\<Longrightarrow> flow0 x t' \\<notin> P)", "using ivl_subset_existence_ivl[OF \\<open>t1 \\<in> existence_ivl0 x\\<close>] t0 t1 rt least[of t']"], ["proof (prove)\nusing this:\n  {0..t1} \\<subseteq> existence_ivl0 x\n  0 < t0\n  \\<lbrakk>0 < ?t; ?t < t0\\<rbrakk> \\<Longrightarrow> flow0 x ?t \\<notin> P\n  t0 \\<le> t1\n  t1 \\<in> existence_ivl0 x\n  flow0 x t1 \\<in> P\n  t0 \\<le> rt\n  rt \\<le> t1\n  flow0 x rt \\<in> P\n  \\<lbrakk>flow0 x t' \\<in> P; t0 \\<le> t'; t' \\<le> t1\\<rbrakk>\n  \\<Longrightarrow> rt \\<le> t'\n\ngoal (1 subgoal):\n 1. (0 < rt &&& flow0 x rt \\<in> P &&& rt \\<in> existence_ivl0 x) &&&\n    (\\<lbrakk>0 < t'; t' < rt\\<rbrakk>\n     \\<Longrightarrow> flow0 x t' \\<notin> P)", "by force+"], ["proof (state)\nthis:\n  0 < rt\n  flow0 x rt \\<in> P\n  rt \\<in> existence_ivl0 x\n  \\<lbrakk>0 < ?t'; ?t' < rt\\<rbrakk>\n  \\<Longrightarrow> flow0 x ?t' \\<notin> P\n\ngoal (1 subgoal):\n 1. \\<exists>!t.\n       0 < t \\<and>\n       t \\<in> existence_ivl0 x \\<and>\n       flow0 x t \\<in> P \\<and>\n       (\\<forall>s\\<in>{0<..<t}. flow0 x s \\<notin> P)", "then"], ["proof (chain)\npicking this:\n  0 < rt\n  flow0 x rt \\<in> P\n  rt \\<in> existence_ivl0 x\n  \\<lbrakk>0 < ?t'; ?t' < rt\\<rbrakk>\n  \\<Longrightarrow> flow0 x ?t' \\<notin> P", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < rt\n  flow0 x rt \\<in> P\n  rt \\<in> existence_ivl0 x\n  \\<lbrakk>0 < ?t'; ?t' < rt\\<rbrakk>\n  \\<Longrightarrow> flow0 x ?t' \\<notin> P\n\ngoal (1 subgoal):\n 1. \\<exists>!t.\n       0 < t \\<and>\n       t \\<in> existence_ivl0 x \\<and>\n       flow0 x t \\<in> P \\<and>\n       (\\<forall>s\\<in>{0<..<t}. flow0 x s \\<notin> P)", "by (intro ex_ex1I) force+"], ["proof (state)\nthis:\n  \\<exists>!t.\n     0 < t \\<and>\n     t \\<in> existence_ivl0 x \\<and>\n     flow0 x t \\<in> P \\<and>\n     (\\<forall>s\\<in>{0<..<t}. flow0 x s \\<notin> P)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  return_time_pos_returns_to:\n  \"return_time P x > 0 \\<Longrightarrow> returns_to P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < return_time P x \\<Longrightarrow> returns_to P x", "by (auto simp: return_time_def split: if_splits)"], ["", "lemma\n  assumes ret: \"returns_to P x\"\n  assumes \"closed P\"\n  shows return_time_pos: \"return_time P x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < return_time P x", "using someI_ex[OF return_time_ex1[OF assms, THEN ex1_implies_ex]]"], ["proof (prove)\nusing this:\n  0 < (SOME xa.\n          0 < xa \\<and>\n          xa \\<in> existence_ivl0 x \\<and>\n          flow0 x xa \\<in> P \\<and>\n          (\\<forall>s\\<in>{0<..<xa}. flow0 x s \\<notin> P)) \\<and>\n  (SOME xa.\n      0 < xa \\<and>\n      xa \\<in> existence_ivl0 x \\<and>\n      flow0 x xa \\<in> P \\<and>\n      (\\<forall>s\\<in>{0<..<xa}. flow0 x s \\<notin> P))\n  \\<in> existence_ivl0 x \\<and>\n  flow0 x\n   (SOME xa.\n       0 < xa \\<and>\n       xa \\<in> existence_ivl0 x \\<and>\n       flow0 x xa \\<in> P \\<and>\n       (\\<forall>s\\<in>{0<..<xa}. flow0 x s \\<notin> P))\n  \\<in> P \\<and>\n  (\\<forall>s\\<in>{0<..<SOME xa.\n                           0 < xa \\<and>\n                           xa \\<in> existence_ivl0 x \\<and>\n                           flow0 x xa \\<in> P \\<and>\n                           (\\<forall>s\\<in>{0<..<xa}.\n                               flow0 x s \\<notin> P)}.\n      flow0 x s \\<notin> P)\n\ngoal (1 subgoal):\n 1. 0 < return_time P x", "unfolding return_time_some[OF ret, symmetric]"], ["proof (prove)\nusing this:\n  0 < return_time P x \\<and>\n  return_time P x \\<in> existence_ivl0 x \\<and>\n  flow0 x (return_time P x) \\<in> P \\<and>\n  (\\<forall>s\\<in>{0<..<return_time P x}. flow0 x s \\<notin> P)\n\ngoal (1 subgoal):\n 1. 0 < return_time P x", "by auto"], ["", "lemma returns_to_return_time_pos:\n  assumes \"closed P\"\n  shows \"returns_to P x \\<longleftrightarrow> return_time P x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. returns_to P x = (0 < return_time P x)", "by (auto intro!: return_time_pos assms) (auto simp: return_time_def split: if_splits)"], ["", "lemma return_time:\n  assumes ret: \"returns_to P x\"\n  assumes \"closed P\"\n  shows \"return_time P x > 0\"\n    and return_time_exivl: \"return_time P x \\<in> existence_ivl0 x\"\n    and return_time_returns: \"flow0 x (return_time P x) \\<in> P\"\n    and return_time_least: \"\\<And>s. 0 < s \\<Longrightarrow> s < return_time P x \\<Longrightarrow> flow0 x s \\<notin> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < return_time P x &&& return_time P x \\<in> existence_ivl0 x) &&&\n    flow0 x (return_time P x) \\<in> P &&&\n    (\\<And>s.\n        \\<lbrakk>0 < s; s < return_time P x\\<rbrakk>\n        \\<Longrightarrow> flow0 x s \\<notin> P)", "using someI_ex[OF return_time_ex1[OF assms, THEN ex1_implies_ex]]"], ["proof (prove)\nusing this:\n  0 < (SOME xa.\n          0 < xa \\<and>\n          xa \\<in> existence_ivl0 x \\<and>\n          flow0 x xa \\<in> P \\<and>\n          (\\<forall>s\\<in>{0<..<xa}. flow0 x s \\<notin> P)) \\<and>\n  (SOME xa.\n      0 < xa \\<and>\n      xa \\<in> existence_ivl0 x \\<and>\n      flow0 x xa \\<in> P \\<and>\n      (\\<forall>s\\<in>{0<..<xa}. flow0 x s \\<notin> P))\n  \\<in> existence_ivl0 x \\<and>\n  flow0 x\n   (SOME xa.\n       0 < xa \\<and>\n       xa \\<in> existence_ivl0 x \\<and>\n       flow0 x xa \\<in> P \\<and>\n       (\\<forall>s\\<in>{0<..<xa}. flow0 x s \\<notin> P))\n  \\<in> P \\<and>\n  (\\<forall>s\\<in>{0<..<SOME xa.\n                           0 < xa \\<and>\n                           xa \\<in> existence_ivl0 x \\<and>\n                           flow0 x xa \\<in> P \\<and>\n                           (\\<forall>s\\<in>{0<..<xa}.\n                               flow0 x s \\<notin> P)}.\n      flow0 x s \\<notin> P)\n\ngoal (1 subgoal):\n 1. (0 < return_time P x &&& return_time P x \\<in> existence_ivl0 x) &&&\n    flow0 x (return_time P x) \\<in> P &&&\n    (\\<And>s.\n        \\<lbrakk>0 < s; s < return_time P x\\<rbrakk>\n        \\<Longrightarrow> flow0 x s \\<notin> P)", "unfolding return_time_some[OF ret, symmetric]"], ["proof (prove)\nusing this:\n  0 < return_time P x \\<and>\n  return_time P x \\<in> existence_ivl0 x \\<and>\n  flow0 x (return_time P x) \\<in> P \\<and>\n  (\\<forall>s\\<in>{0<..<return_time P x}. flow0 x s \\<notin> P)\n\ngoal (1 subgoal):\n 1. (0 < return_time P x &&& return_time P x \\<in> existence_ivl0 x) &&&\n    flow0 x (return_time P x) \\<in> P &&&\n    (\\<And>s.\n        \\<lbrakk>0 < s; s < return_time P x\\<rbrakk>\n        \\<Longrightarrow> flow0 x s \\<notin> P)", "by auto"], ["", "lemma returns_to_earlierI:\n  assumes ret: \"returns_to P (flow0 x t)\" \"closed P\"\n  assumes \"t \\<ge> 0\" \"t \\<in> existence_ivl0 x\"\n  assumes ev: \"\\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\"\n  shows \"returns_to P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. returns_to P x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. returns_to P x", "from return_time[OF ret]"], ["proof (chain)\npicking this:\n  0 < return_time P (flow0 x t)\n  return_time P (flow0 x t) \\<in> existence_ivl0 (flow0 x t)\n  flow0 (flow0 x t) (return_time P (flow0 x t)) \\<in> P\n  \\<lbrakk>0 < ?s; ?s < return_time P (flow0 x t)\\<rbrakk>\n  \\<Longrightarrow> flow0 (flow0 x t) ?s \\<notin> P", "have rt: \"0 < return_time P (flow0 x t)\" \"flow0 (flow0 x t) (return_time P (flow0 x t)) \\<in> P\"\n    and \"0 < s \\<Longrightarrow> s < return_time P (flow0 x t) \\<Longrightarrow> flow0 (flow0 x t) s \\<notin> P\" for s"], ["proof (prove)\nusing this:\n  0 < return_time P (flow0 x t)\n  return_time P (flow0 x t) \\<in> existence_ivl0 (flow0 x t)\n  flow0 (flow0 x t) (return_time P (flow0 x t)) \\<in> P\n  \\<lbrakk>0 < ?s; ?s < return_time P (flow0 x t)\\<rbrakk>\n  \\<Longrightarrow> flow0 (flow0 x t) ?s \\<notin> P\n\ngoal (1 subgoal):\n 1. (0 < return_time P (flow0 x t) &&&\n     flow0 (flow0 x t) (return_time P (flow0 x t)) \\<in> P) &&&\n    (\\<lbrakk>0 < s; s < return_time P (flow0 x t)\\<rbrakk>\n     \\<Longrightarrow> flow0 (flow0 x t) s \\<notin> P)", "by auto"], ["proof (state)\nthis:\n  0 < return_time P (flow0 x t)\n  flow0 (flow0 x t) (return_time P (flow0 x t)) \\<in> P\n  \\<lbrakk>0 < ?s; ?s < return_time P (flow0 x t)\\<rbrakk>\n  \\<Longrightarrow> flow0 (flow0 x t) ?s \\<notin> P\n\ngoal (1 subgoal):\n 1. returns_to P x", "let ?t = \"t + return_time P  (flow0 x t)\""], ["proof (state)\ngoal (1 subgoal):\n 1. returns_to P x", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. returns_to P x", "proof (rule returns_toI[of ?t])"], ["proof (state)\ngoal (5 subgoals):\n 1. 0 < t + return_time P (flow0 x t)\n 2. t + return_time P (flow0 x t) \\<in> existence_ivl0 x\n 3. flow0 x (t + return_time P (flow0 x t)) \\<in> P\n 4. \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\n 5. closed P", "show \"0 < ?t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < t + return_time P (flow0 x t)", "by (auto intro!: add_nonneg_pos rt \\<open>t \\<ge> 0\\<close>)"], ["proof (state)\nthis:\n  0 < t + return_time P (flow0 x t)\n\ngoal (4 subgoals):\n 1. t + return_time P (flow0 x t) \\<in> existence_ivl0 x\n 2. flow0 x (t + return_time P (flow0 x t)) \\<in> P\n 3. \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\n 4. closed P", "show \"?t \\<in> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t + return_time P (flow0 x t) \\<in> existence_ivl0 x", "by (intro existence_ivl_trans return_time_exivl assms)"], ["proof (state)\nthis:\n  t + return_time P (flow0 x t) \\<in> existence_ivl0 x\n\ngoal (3 subgoals):\n 1. flow0 x (t + return_time P (flow0 x t)) \\<in> P\n 2. \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\n 3. closed P", "have \"flow0 x (t + return_time P (flow0 x t)) = flow0 (flow0 x t) (return_time P (flow0 x t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 x (t + return_time P (flow0 x t)) =\n    flow0 (flow0 x t) (return_time P (flow0 x t))", "by (intro flow_trans assms return_time_exivl)"], ["proof (state)\nthis:\n  flow0 x (t + return_time P (flow0 x t)) =\n  flow0 (flow0 x t) (return_time P (flow0 x t))\n\ngoal (3 subgoals):\n 1. flow0 x (t + return_time P (flow0 x t)) \\<in> P\n 2. \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\n 3. closed P", "also"], ["proof (state)\nthis:\n  flow0 x (t + return_time P (flow0 x t)) =\n  flow0 (flow0 x t) (return_time P (flow0 x t))\n\ngoal (3 subgoals):\n 1. flow0 x (t + return_time P (flow0 x t)) \\<in> P\n 2. \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\n 3. closed P", "have \"\\<dots> \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 (flow0 x t) (return_time P (flow0 x t)) \\<in> P", "by (rule return_time_returns[OF ret])"], ["proof (state)\nthis:\n  flow0 (flow0 x t) (return_time P (flow0 x t)) \\<in> P\n\ngoal (3 subgoals):\n 1. flow0 x (t + return_time P (flow0 x t)) \\<in> P\n 2. \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\n 3. closed P", "finally"], ["proof (chain)\npicking this:\n  flow0 x (t + return_time P (flow0 x t)) \\<in> P", "show \"flow0 x (t + return_time P (flow0 x t)) \\<in> P\""], ["proof (prove)\nusing this:\n  flow0 x (t + return_time P (flow0 x t)) \\<in> P\n\ngoal (1 subgoal):\n 1. flow0 x (t + return_time P (flow0 x t)) \\<in> P", "."], ["proof (state)\nthis:\n  flow0 x (t + return_time P (flow0 x t)) \\<in> P\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\n 2. closed P", "show \"closed P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed P", "by fact"], ["proof (state)\nthis:\n  closed P\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P", "show \"\\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P", "by fact"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  returns_to P x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma return_time_gt:\n  assumes ret: \"returns_to P x\" \"closed P\"\n  assumes flow_not: \"\\<And>s. 0 < s \\<Longrightarrow> s \\<le> t \\<Longrightarrow> flow0 x s \\<notin> P\"\n  shows \"t < return_time P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t < return_time P x", "using flow_not[of \"return_time P x\"] return_time_pos[OF ret] return_time_returns[OF ret]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < return_time P x; return_time P x \\<le> t\\<rbrakk>\n  \\<Longrightarrow> flow0 x (return_time P x) \\<notin> P\n  0 < return_time P x\n  flow0 x (return_time P x) \\<in> P\n\ngoal (1 subgoal):\n 1. t < return_time P x", "by force"], ["", "lemma return_time_le:\n  assumes ret: \"returns_to P x\" \"closed P\"\n  assumes flow_not: \"flow0 x t \\<in> P\" \"t > 0\"\n  shows \"return_time P x \\<le> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time P x \\<le> t", "using return_time_least[OF assms(1,2), of t] flow_not"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < t; t < return_time P x\\<rbrakk>\n  \\<Longrightarrow> flow0 x t \\<notin> P\n  flow0 x t \\<in> P\n  0 < t\n\ngoal (1 subgoal):\n 1. return_time P x \\<le> t", "by force"], ["", "lemma returns_to_laterI:\n  assumes ret: \"returns_to P x\" \"closed P\"\n  assumes t: \"t > 0\" \"t \\<in> existence_ivl0 x\"\n  assumes flow_not: \"\\<And>s. 0 < s \\<Longrightarrow> s \\<le> t \\<Longrightarrow> flow0 x s \\<notin> P\"\n  shows \"returns_to P (flow0 x t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. returns_to P (flow0 x t)", "apply (rule returns_toI[of \"return_time P x - t\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. 0 < return_time P x - t\n 2. return_time P x - t \\<in> existence_ivl0 (flow0 x t)\n 3. flow0 (flow0 x t) (return_time P x - t) \\<in> P\n 4. \\<forall>\\<^sub>F ta in at_right 0. flow0 (flow0 x t) ta \\<notin> P\n 5. closed P", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < return_time P x - t", "using flow_not"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?s; ?s \\<le> t\\<rbrakk>\n  \\<Longrightarrow> flow0 x ?s \\<notin> P\n\ngoal (1 subgoal):\n 1. 0 < return_time P x - t", "by (auto intro!: return_time_gt ret)"], ["proof (prove)\ngoal (4 subgoals):\n 1. return_time P x - t \\<in> existence_ivl0 (flow0 x t)\n 2. flow0 (flow0 x t) (return_time P x - t) \\<in> P\n 3. \\<forall>\\<^sub>F ta in at_right 0. flow0 (flow0 x t) ta \\<notin> P\n 4. closed P", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time P x - t \\<in> existence_ivl0 (flow0 x t)", "by (auto intro!: existence_ivl_trans' return_time_exivl ret t)"], ["proof (prove)\ngoal (3 subgoals):\n 1. flow0 (flow0 x t) (return_time P x - t) \\<in> P\n 2. \\<forall>\\<^sub>F ta in at_right 0. flow0 (flow0 x t) ta \\<notin> P\n 3. closed P", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 (flow0 x t) (return_time P x - t) \\<in> P", "by (subst flow_trans[symmetric])\n      (auto intro!: existence_ivl_trans' return_time_exivl ret t return_time_returns)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F ta in at_right 0. flow0 (flow0 x t) ta \\<notin> P\n 2. closed P", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F ta in at_right 0. flow0 (flow0 x t) ta \\<notin> P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F ta in at_right 0. flow0 (flow0 x t) ta \\<notin> P", "have \"\\<forall>\\<^sub>F y in nhds 0. y \\<in> existence_ivl0 (flow0 x t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in nhds 0. y \\<in> existence_ivl0 (flow0 x t)", "apply (rule eventually_nhds_in_open[OF open_existence_ivl[of \"flow0 x t\"] existence_ivl_zero])"], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 x t \\<in> X", "apply (rule flow_in_domain)"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl0 x", "apply fact"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in nhds 0. y \\<in> existence_ivl0 (flow0 x t)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F ta in at_right 0. flow0 (flow0 x t) ta \\<notin> P", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in nhds 0. y \\<in> existence_ivl0 (flow0 x t)", "have \"\\<forall>\\<^sub>F s in at_right 0. s \\<in> existence_ivl0 (flow0 x t)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in nhds 0. y \\<in> existence_ivl0 (flow0 x t)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at_right 0. s \\<in> existence_ivl0 (flow0 x t)", "unfolding eventually_at_filter"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in nhds 0. y \\<in> existence_ivl0 (flow0 x t)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in nhds 0.\n       xa \\<noteq> 0 \\<longrightarrow>\n       xa \\<in> {0<..} \\<longrightarrow> xa \\<in> existence_ivl0 (flow0 x t)", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at_right 0. s \\<in> existence_ivl0 (flow0 x t)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F ta in at_right 0. flow0 (flow0 x t) ta \\<notin> P", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at_right 0. s \\<in> existence_ivl0 (flow0 x t)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F ta in at_right 0. flow0 (flow0 x t) ta \\<notin> P", "have \"\\<forall>\\<^sub>F s in at_right 0. t + s < return_time P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at_right 0. t + s < return_time P x", "using return_time_gt[OF ret flow_not, of t]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>s.\n              \\<lbrakk>0 < s; s \\<le> t\\<rbrakk> \\<Longrightarrow> 0 < s;\n   \\<And>s.\n      \\<lbrakk>0 < s; s \\<le> t\\<rbrakk>\n      \\<Longrightarrow> s \\<le> t\\<rbrakk>\n  \\<Longrightarrow> t < return_time P x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at_right 0. t + s < return_time P x", "by (auto simp: eventually_at_right[OF zero_less_one] intro!: exI[of _ \"return_time P x - t\"])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at_right 0. t + s < return_time P x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F ta in at_right 0. flow0 (flow0 x t) ta \\<notin> P", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at_right 0. t + s < return_time P x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F ta in at_right 0. flow0 (flow0 x t) ta \\<notin> P", "have \"\\<forall>\\<^sub>F s in at_right 0. 0 < t + s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at_right 0. 0 < t + s", "by (metis (mono_tags) eventually_at_rightI greaterThanLessThan_iff pos_add_strict t(1))"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at_right 0. 0 < t + s\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F ta in at_right 0. flow0 (flow0 x t) ta \\<notin> P", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F s in at_right 0. s \\<in> existence_ivl0 (flow0 x t)\n  \\<forall>\\<^sub>F s in at_right 0. t + s < return_time P x\n  \\<forall>\\<^sub>F s in at_right 0. 0 < t + s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s in at_right 0. s \\<in> existence_ivl0 (flow0 x t)\n  \\<forall>\\<^sub>F s in at_right 0. t + s < return_time P x\n  \\<forall>\\<^sub>F s in at_right 0. 0 < t + s\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F ta in at_right 0. flow0 (flow0 x t) ta \\<notin> P", "apply eventually_elim"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ta.\n       \\<lbrakk>ta \\<in> existence_ivl0 (flow0 x t);\n        t + ta < return_time P x; 0 < t + ta\\<rbrakk>\n       \\<Longrightarrow> flow0 (flow0 x t) ta \\<notin> P", "apply (subst flow_trans[symmetric])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ta.\n       \\<lbrakk>ta \\<in> existence_ivl0 (flow0 x t);\n        t + ta < return_time P x; 0 < t + ta\\<rbrakk>\n       \\<Longrightarrow> t \\<in> existence_ivl0 x\n 2. \\<And>ta.\n       \\<lbrakk>ta \\<in> existence_ivl0 (flow0 x t);\n        t + ta < return_time P x; 0 < t + ta\\<rbrakk>\n       \\<Longrightarrow> ta \\<in> existence_ivl0 (flow0 x t)\n 3. \\<And>ta.\n       \\<lbrakk>ta \\<in> existence_ivl0 (flow0 x t);\n        t + ta < return_time P x; 0 < t + ta\\<rbrakk>\n       \\<Longrightarrow> flow0 x (t + ta) \\<notin> P", "using return_time_least[OF ret]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?s; ?s < return_time P x\\<rbrakk>\n  \\<Longrightarrow> flow0 x ?s \\<notin> P\n\ngoal (3 subgoals):\n 1. \\<And>ta.\n       \\<lbrakk>ta \\<in> existence_ivl0 (flow0 x t);\n        t + ta < return_time P x; 0 < t + ta\\<rbrakk>\n       \\<Longrightarrow> t \\<in> existence_ivl0 x\n 2. \\<And>ta.\n       \\<lbrakk>ta \\<in> existence_ivl0 (flow0 x t);\n        t + ta < return_time P x; 0 < t + ta\\<rbrakk>\n       \\<Longrightarrow> ta \\<in> existence_ivl0 (flow0 x t)\n 3. \\<And>ta.\n       \\<lbrakk>ta \\<in> existence_ivl0 (flow0 x t);\n        t + ta < return_time P x; 0 < t + ta\\<rbrakk>\n       \\<Longrightarrow> flow0 x (t + ta) \\<notin> P", "by (auto intro!: existence_ivl_trans' t)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F ta in at_right 0. flow0 (flow0 x t) ta \\<notin> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. closed P", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. closed P", "by fact"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma never_returns:\n  assumes \"\\<not>returns_to P x\"\n  assumes \"closed P\" \"t \\<ge> 0\" \"t \\<in> existence_ivl0 x\"\n  assumes ev: \"\\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\"\n  shows \"\\<not>returns_to P (flow0 x t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> returns_to P (flow0 x t)", "using returns_to_earlierI[OF _ assms(2-5)] assms(1)"], ["proof (prove)\nusing this:\n  returns_to P (flow0 x t) \\<Longrightarrow> returns_to P x\n  \\<not> returns_to P x\n\ngoal (1 subgoal):\n 1. \\<not> returns_to P (flow0 x t)", "by blast"], ["", "lemma return_time_eqI:\n  assumes \"closed P\"\n    and t_pos: \"t > 0\"\n    and ex: \"t \\<in> existence_ivl0 x\"\n    and ret: \"flow0 x t \\<in> P\"\n    and least: \"\\<And>s. 0 < s \\<Longrightarrow> s < t \\<Longrightarrow> flow0 x s \\<notin> P\"\n  shows \"return_time P x = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time P x = t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. return_time P x = t", "from least t_pos"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < ?s; ?s < t\\<rbrakk> \\<Longrightarrow> flow0 x ?s \\<notin> P\n  0 < t", "have \"\\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?s; ?s < t\\<rbrakk> \\<Longrightarrow> flow0 x ?s \\<notin> P\n  0 < t\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P", "by (auto simp: eventually_at_right[OF zero_less_one])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\n\ngoal (1 subgoal):\n 1. return_time P x = t", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P", "have \"returns_to P x\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\n\ngoal (1 subgoal):\n 1. returns_to P x", "by (auto intro!: returns_toI[of t] assms)"], ["proof (state)\nthis:\n  returns_to P x\n\ngoal (1 subgoal):\n 1. return_time P x = t", "then"], ["proof (chain)\npicking this:\n  returns_to P x", "show ?thesis"], ["proof (prove)\nusing this:\n  returns_to P x\n\ngoal (1 subgoal):\n 1. return_time P x = t", "using least"], ["proof (prove)\nusing this:\n  returns_to P x\n  \\<lbrakk>0 < ?s; ?s < t\\<rbrakk> \\<Longrightarrow> flow0 x ?s \\<notin> P\n\ngoal (1 subgoal):\n 1. return_time P x = t", "by (auto simp: return_time_def t_pos ex ret\n        intro!: some1_equality[OF return_time_ex1[OF \\<open>returns_to _ _\\<close> \\<open>closed _\\<close>]])"], ["proof (state)\nthis:\n  return_time P x = t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma return_time_step:\n  assumes \"returns_to P (flow0 x t)\"\n  assumes \"closed P\"\n  assumes flow_not: \"\\<And>s. 0 < s \\<Longrightarrow> s \\<le> t \\<Longrightarrow> flow0 x s \\<notin> P\"\n  assumes t: \"t > 0\" \"t \\<in> existence_ivl0 x\"\n  shows \"return_time P (flow0 x t) = return_time P x - t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time P (flow0 x t) = return_time P x - t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. return_time P (flow0 x t) = return_time P x - t", "from flow_not t"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < ?s; ?s \\<le> t\\<rbrakk>\n  \\<Longrightarrow> flow0 x ?s \\<notin> P\n  0 < t\n  t \\<in> existence_ivl0 x", "have \"\\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?s; ?s \\<le> t\\<rbrakk>\n  \\<Longrightarrow> flow0 x ?s \\<notin> P\n  0 < t\n  t \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P", "by (auto simp: eventually_at_right[OF zero_less_one])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\n\ngoal (1 subgoal):\n 1. return_time P (flow0 x t) = return_time P x - t", "from returns_to_earlierI[OF assms(1,2) less_imp_le, OF t this]"], ["proof (chain)\npicking this:\n  returns_to P x", "have ret: \"returns_to P x\""], ["proof (prove)\nusing this:\n  returns_to P x\n\ngoal (1 subgoal):\n 1. returns_to P x", "."], ["proof (state)\nthis:\n  returns_to P x\n\ngoal (1 subgoal):\n 1. return_time P (flow0 x t) = return_time P x - t", "from return_time_gt[OF ret \\<open>closed P\\<close> flow_not]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>s.\n              \\<lbrakk>0 < s; s \\<le> ?t\\<rbrakk> \\<Longrightarrow> 0 < s;\n   \\<And>s.\n      \\<lbrakk>0 < s; s \\<le> ?t\\<rbrakk>\n      \\<Longrightarrow> s \\<le> t\\<rbrakk>\n  \\<Longrightarrow> ?t < return_time P x", "have \"t < return_time P x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>s.\n              \\<lbrakk>0 < s; s \\<le> ?t\\<rbrakk> \\<Longrightarrow> 0 < s;\n   \\<And>s.\n      \\<lbrakk>0 < s; s \\<le> ?t\\<rbrakk>\n      \\<Longrightarrow> s \\<le> t\\<rbrakk>\n  \\<Longrightarrow> ?t < return_time P x\n\ngoal (1 subgoal):\n 1. t < return_time P x", "by simp"], ["proof (state)\nthis:\n  t < return_time P x\n\ngoal (1 subgoal):\n 1. return_time P (flow0 x t) = return_time P x - t", "moreover"], ["proof (state)\nthis:\n  t < return_time P x\n\ngoal (1 subgoal):\n 1. return_time P (flow0 x t) = return_time P x - t", "have \"0 < s \\<Longrightarrow> s < return_time P x - t \\<Longrightarrow> flow0 (flow0 x t) s = flow0 x (t + s)\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; s < return_time P x - t\\<rbrakk>\n    \\<Longrightarrow> flow0 (flow0 x t) s = flow0 x (t + s)", "using ivl_subset_existence_ivl[OF return_time_exivl[OF ret \\<open>closed _\\<close>]] t"], ["proof (prove)\nusing this:\n  {0..return_time P x} \\<subseteq> existence_ivl0 x\n  0 < t\n  t \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; s < return_time P x - t\\<rbrakk>\n    \\<Longrightarrow> flow0 (flow0 x t) s = flow0 x (t + s)", "by (subst flow_trans) (auto intro!: existence_ivl_trans')"], ["proof (state)\nthis:\n  \\<lbrakk>0 < ?s; ?s < return_time P x - t\\<rbrakk>\n  \\<Longrightarrow> flow0 (flow0 x t) ?s = flow0 x (t + ?s)\n\ngoal (1 subgoal):\n 1. return_time P (flow0 x t) = return_time P x - t", "ultimately"], ["proof (chain)\npicking this:\n  t < return_time P x\n  \\<lbrakk>0 < ?s; ?s < return_time P x - t\\<rbrakk>\n  \\<Longrightarrow> flow0 (flow0 x t) ?s = flow0 x (t + ?s)", "show ?thesis"], ["proof (prove)\nusing this:\n  t < return_time P x\n  \\<lbrakk>0 < ?s; ?s < return_time P x - t\\<rbrakk>\n  \\<Longrightarrow> flow0 (flow0 x t) ?s = flow0 x (t + ?s)\n\ngoal (1 subgoal):\n 1. return_time P (flow0 x t) = return_time P x - t", "using flow_not assms(1) ret return_time_least t(1)"], ["proof (prove)\nusing this:\n  t < return_time P x\n  \\<lbrakk>0 < ?s; ?s < return_time P x - t\\<rbrakk>\n  \\<Longrightarrow> flow0 (flow0 x t) ?s = flow0 x (t + ?s)\n  \\<lbrakk>0 < ?s; ?s \\<le> t\\<rbrakk>\n  \\<Longrightarrow> flow0 x ?s \\<notin> P\n  returns_to P (flow0 x t)\n  returns_to P x\n  \\<lbrakk>returns_to ?P ?x; closed ?P; 0 < ?s;\n   ?s < return_time ?P ?x\\<rbrakk>\n  \\<Longrightarrow> flow0 ?x ?s \\<notin> ?P\n  0 < t\n\ngoal (1 subgoal):\n 1. return_time P (flow0 x t) = return_time P x - t", "by (auto intro!: return_time_eqI return_time_returns ret\n        simp: flow_trans[symmetric] \\<open>closed P\\<close> t(2) existence_ivl_trans' return_time_exivl)"], ["proof (state)\nthis:\n  return_time P (flow0 x t) = return_time P x - t\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"poincare_map P x = flow0 x (return_time P x)\""], ["", "lemma poincare_map_step_flow:\n  assumes ret: \"returns_to P x\" \"closed P\"\n  assumes flow_not: \"\\<And>s. 0 < s \\<Longrightarrow> s \\<le> t \\<Longrightarrow> flow0 x s \\<notin> P\"\n  assumes t: \"t > 0\" \"t \\<in> existence_ivl0 x\"\n  shows \"poincare_map P (flow0 x t) = poincare_map P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poincare_map P (flow0 x t) = poincare_map P x", "unfolding poincare_map_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 (flow0 x t) (return_time P (flow0 x t)) =\n    flow0 x (return_time P x)", "apply (subst flow_trans[symmetric])"], ["proof (prove)\ngoal (3 subgoals):\n 1. t \\<in> existence_ivl0 x\n 2. return_time P (flow0 x t) \\<in> existence_ivl0 (flow0 x t)\n 3. flow0 x (t + return_time P (flow0 x t)) = flow0 x (return_time P x)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl0 x", "by fact"], ["proof (prove)\ngoal (2 subgoals):\n 1. return_time P (flow0 x t) \\<in> existence_ivl0 (flow0 x t)\n 2. flow0 x (t + return_time P (flow0 x t)) = flow0 x (return_time P x)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time P (flow0 x t) \\<in> existence_ivl0 (flow0 x t)", "using flow_not"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?s; ?s \\<le> t\\<rbrakk>\n  \\<Longrightarrow> flow0 x ?s \\<notin> P\n\ngoal (1 subgoal):\n 1. return_time P (flow0 x t) \\<in> existence_ivl0 (flow0 x t)", "by (auto intro!: return_time_exivl returns_to_laterI t ret)"], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 x (t + return_time P (flow0 x t)) = flow0 x (return_time P x)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 x (t + return_time P (flow0 x t)) = flow0 x (return_time P x)", "using flow_not"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?s; ?s \\<le> t\\<rbrakk>\n  \\<Longrightarrow> flow0 x ?s \\<notin> P\n\ngoal (1 subgoal):\n 1. flow0 x (t + return_time P (flow0 x t)) = flow0 x (return_time P x)", "by (subst return_time_step) (auto intro!: return_time_exivl returns_to_laterI t ret)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma poincare_map_returns:\n  assumes \"returns_to P x\" \"closed P\"\n  shows \"poincare_map P x \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poincare_map P x \\<in> P", "by (auto intro!: return_time_returns assms simp: poincare_map_def)"], ["", "lemma poincare_map_onto:\n  assumes \"closed P\"\n  assumes \"0 < t\" \"t \\<in> existence_ivl0 x\" \"\\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> P\"\n  assumes \"flow0 x t \\<in> P\"\n  shows \"poincare_map P x \\<in> flow0 x ` {0 <.. t} \\<inter> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poincare_map P x \\<in> flow0 x ` {0<..t} \\<inter> P", "proof (rule IntI)"], ["proof (state)\ngoal (2 subgoals):\n 1. poincare_map P x \\<in> flow0 x ` {0<..t}\n 2. poincare_map P x \\<in> P", "have \"returns_to P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. returns_to P x", "by (rule returns_toI) (rule assms)+"], ["proof (state)\nthis:\n  returns_to P x\n\ngoal (2 subgoals):\n 1. poincare_map P x \\<in> flow0 x ` {0<..t}\n 2. poincare_map P x \\<in> P", "then"], ["proof (chain)\npicking this:\n  returns_to P x", "have \"return_time P x \\<in> {0<..t}\""], ["proof (prove)\nusing this:\n  returns_to P x\n\ngoal (1 subgoal):\n 1. return_time P x \\<in> {0<..t}", "by (auto intro!: return_time_pos assms return_time_le)"], ["proof (state)\nthis:\n  return_time P x \\<in> {0<..t}\n\ngoal (2 subgoals):\n 1. poincare_map P x \\<in> flow0 x ` {0<..t}\n 2. poincare_map P x \\<in> P", "then"], ["proof (chain)\npicking this:\n  return_time P x \\<in> {0<..t}", "show \"poincare_map P x \\<in> flow0 x ` {0<..t}\""], ["proof (prove)\nusing this:\n  return_time P x \\<in> {0<..t}\n\ngoal (1 subgoal):\n 1. poincare_map P x \\<in> flow0 x ` {0<..t}", "by (auto simp: poincare_map_def)"], ["proof (state)\nthis:\n  poincare_map P x \\<in> flow0 x ` {0<..t}\n\ngoal (1 subgoal):\n 1. poincare_map P x \\<in> P", "show \"poincare_map P x \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poincare_map P x \\<in> P", "by (auto intro!: poincare_map_returns \\<open>returns_to _ _\\<close> \\<open>closed _\\<close>)"], ["proof (state)\nthis:\n  poincare_map P x \\<in> P\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma isCont_blinfunD:\n  fixes f'::\"'a::metric_space \\<Rightarrow> 'b::real_normed_vector \\<Rightarrow>\\<^sub>L 'c::real_normed_vector\"\n  assumes \"isCont f' a\" \"0 < e\"\n  shows \"\\<exists>d>0. \\<forall>x. dist a x < d \\<longrightarrow> onorm (\\<lambda>v. blinfun_apply (f' x) v - blinfun_apply (f' a) v) < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>x.\n          dist a x < d \\<longrightarrow>\n          onorm\n           (\\<lambda>v. blinfun_apply (f' x) v - blinfun_apply (f' a) v)\n          < e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>x.\n          dist a x < d \\<longrightarrow>\n          onorm\n           (\\<lambda>v. blinfun_apply (f' x) v - blinfun_apply (f' a) v)\n          < e", "have \"\\<forall>\\<^sub>F x in at a. dist (f' x) (f' a) < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at a. dist (f' x) (f' a) < e", "using assms isCont_def tendsto_iff"], ["proof (prove)\nusing this:\n  isCont f' a\n  0 < e\n  isCont ?f ?a = ?f \\<midarrow>?a\\<rightarrow> ?f ?a\n  (?f \\<longlongrightarrow> ?l) ?F =\n  (\\<forall>e>0. \\<forall>\\<^sub>F x in ?F. dist (?f x) ?l < e)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at a. dist (f' x) (f' a) < e", "by blast"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at a. dist (f' x) (f' a) < e\n\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>x.\n          dist a x < d \\<longrightarrow>\n          onorm\n           (\\<lambda>v. blinfun_apply (f' x) v - blinfun_apply (f' a) v)\n          < e", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at a. dist (f' x) (f' a) < e", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at a. dist (f' x) (f' a) < e\n\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>x.\n          dist a x < d \\<longrightarrow>\n          onorm\n           (\\<lambda>v. blinfun_apply (f' x) v - blinfun_apply (f' a) v)\n          < e", "using \\<open>e > 0\\<close> norm_eq_zero"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at a. dist (f' x) (f' a) < e\n  0 < e\n  (norm ?x = 0) = (?x = (0::?'a))\n\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>x.\n          dist a x < d \\<longrightarrow>\n          onorm\n           (\\<lambda>v. blinfun_apply (f' x) v - blinfun_apply (f' a) v)\n          < e", "by (force simp: eventually_at dist_commute dist_norm norm_blinfun.rep_eq\n        simp flip: blinfun.bilinear_simps)"], ["proof (state)\nthis:\n  \\<exists>d>0.\n     \\<forall>x.\n        dist a x < d \\<longrightarrow>\n        onorm (\\<lambda>v. blinfun_apply (f' x) v - blinfun_apply (f' a) v)\n        < e\n\ngoal:\nNo subgoals!", "qed"], ["", "proposition has_derivative_locally_injective_blinfun:\n  fixes f :: \"'n::euclidean_space \\<Rightarrow> 'm::euclidean_space\"\n    and f'::\"'n \\<Rightarrow> 'n \\<Rightarrow>\\<^sub>L 'm\"\n    and g'::\"'m \\<Rightarrow>\\<^sub>L 'n\"\n  assumes \"a \\<in> s\"\n      and \"open s\"\n      and g': \"g' o\\<^sub>L (f' a) = 1\\<^sub>L\"\n      and f': \"\\<And>x. x \\<in> s \\<Longrightarrow> (f has_derivative f' x) (at x)\"\n      and c: \"isCont f' a\"\n    obtains r where \"r > 0\" \"ball a r \\<subseteq> s\" \"inj_on f (ball a r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>0 < r; ball a r \\<subseteq> s; inj_on f (ball a r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>0 < r; ball a r \\<subseteq> s; inj_on f (ball a r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have bl: \"bounded_linear (blinfun_apply g')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_linear (blinfun_apply g')", "by (auto simp: blinfun.bounded_linear_right)"], ["proof (state)\nthis:\n  bounded_linear (blinfun_apply g')\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>0 < r; ball a r \\<subseteq> s; inj_on f (ball a r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from g'"], ["proof (chain)\npicking this:\n  g' o\\<^sub>L f' a = 1\\<^sub>L", "have g': \"blinfun_apply g' \\<circ> blinfun_apply (f' a) = id\""], ["proof (prove)\nusing this:\n  g' o\\<^sub>L f' a = 1\\<^sub>L\n\ngoal (1 subgoal):\n 1. blinfun_apply g' \\<circ> blinfun_apply (f' a) = id", "by transfer (simp add: id_def)"], ["proof (state)\nthis:\n  blinfun_apply g' \\<circ> blinfun_apply (f' a) = id\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>0 < r; ball a r \\<subseteq> s; inj_on f (ball a r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from has_derivative_locally_injective[OF \\<open>a \\<in> s\\<close> \\<open>open s\\<close> bl g' f' isCont_blinfunD[OF c]]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x. x \\<in> s \\<Longrightarrow> x \\<in> s;\n   \\<And>e. 0 < e \\<Longrightarrow> 0 < e;\n   \\<And>r.\n      \\<lbrakk>0 < r; ball a r \\<subseteq> s; inj_on f (ball a r)\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "obtain r where \"0 < r\" \"ball a r \\<subseteq> s\" \"inj_on f (ball a r)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x. x \\<in> s \\<Longrightarrow> x \\<in> s;\n   \\<And>e. 0 < e \\<Longrightarrow> 0 < e;\n   \\<And>r.\n      \\<lbrakk>0 < r; ball a r \\<subseteq> s; inj_on f (ball a r)\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>0 < r; ball a r \\<subseteq> s; inj_on f (ball a r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < r\n  ball a r \\<subseteq> s\n  inj_on f (ball a r)\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>0 < r; ball a r \\<subseteq> s; inj_on f (ball a r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  0 < r\n  ball a r \\<subseteq> s\n  inj_on f (ball a r)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < r\n  ball a r \\<subseteq> s\n  inj_on f (ball a r)\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lift_definition embed1_blinfun::\"'a::real_normed_vector \\<Rightarrow>\\<^sub>L ('a*'b::real_normed_vector)\" is \"\\<lambda>x. (x, 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_linear (\\<lambda>x. (x, 0::'b))", "by standard (auto intro!: exI[where x=1])"], ["", "lemma blinfun_apply_embed1_blinfun[simp]: \"blinfun_apply embed1_blinfun x = (x, 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply embed1_blinfun x = (x, 0::'b)", "by transfer simp"], ["", "lift_definition embed2_blinfun::\"'a::real_normed_vector \\<Rightarrow>\\<^sub>L ('b::real_normed_vector*'a)\" is \"\\<lambda>x. (0, x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_linear (Pair (0::'b))", "by standard (auto intro!: exI[where x=1])"], ["", "lemma blinfun_apply_embed2_blinfun[simp]: \"blinfun_apply embed2_blinfun x = (0, x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply embed2_blinfun x = (0::'a, x)", "by transfer simp"], ["", "lemma blinfun_inverseD: \"f o\\<^sub>L f' = 1\\<^sub>L \\<Longrightarrow> f (f' x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f o\\<^sub>L f' = 1\\<^sub>L \\<Longrightarrow>\n    blinfun_apply f (blinfun_apply f' x) = x", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f f' x.\n       \\<lbrakk>bounded_linear f; bounded_linear f';\n        f \\<circ> f' = (\\<lambda>x. x)\\<rbrakk>\n       \\<Longrightarrow> f (f' x) = x", "unfolding o_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f f' x.\n       \\<lbrakk>bounded_linear f; bounded_linear f';\n        (\\<lambda>x. f (f' x)) = (\\<lambda>x. x)\\<rbrakk>\n       \\<Longrightarrow> f (f' x) = x", "by meson"], ["", "lemmas continuous_on_open_vimageI = continuous_on_open_vimage[THEN iffD1, rule_format]"], ["", "lemmas continuous_on_closed_vimageI = continuous_on_closed_vimage[THEN iffD1, rule_format]"], ["", "lemma ball_times_subset: \"ball a (c/2) \\<times> ball b (c/2) \\<subseteq> ball (a, b) c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ball a (c / 2) \\<times> ball b (c / 2) \\<subseteq> ball (a, b) c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ball a (c / 2) \\<times> ball b (c / 2) \\<subseteq> ball (a, b) c", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. ball a (c / 2) \\<times> ball b (c / 2) \\<subseteq> ball (a, b) c", "fix a' b'"], ["proof (state)\ngoal (1 subgoal):\n 1. ball a (c / 2) \\<times> ball b (c / 2) \\<subseteq> ball (a, b) c", "have \"sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2) \\<le> dist a a' + dist b b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2)\n    \\<le> dist a a' + dist b b'", "by (rule real_le_lsqrt) (auto simp: power2_eq_square algebra_simps)"], ["proof (state)\nthis:\n  sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2)\n  \\<le> dist a a' + dist b b'\n\ngoal (1 subgoal):\n 1. ball a (c / 2) \\<times> ball b (c / 2) \\<subseteq> ball (a, b) c", "also"], ["proof (state)\nthis:\n  sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2)\n  \\<le> dist a a' + dist b b'\n\ngoal (1 subgoal):\n 1. ball a (c / 2) \\<times> ball b (c / 2) \\<subseteq> ball (a, b) c", "assume \"a' \\<in> ball a (c / 2)\""], ["proof (state)\nthis:\n  a' \\<in> ball a (c / 2)\n\ngoal (1 subgoal):\n 1. ball a (c / 2) \\<times> ball b (c / 2) \\<subseteq> ball (a, b) c", "then"], ["proof (chain)\npicking this:\n  a' \\<in> ball a (c / 2)", "have \"dist a a' < c / 2\""], ["proof (prove)\nusing this:\n  a' \\<in> ball a (c / 2)\n\ngoal (1 subgoal):\n 1. dist a a' < c / 2", "by (simp add:)"], ["proof (state)\nthis:\n  dist a a' < c / 2\n\ngoal (1 subgoal):\n 1. ball a (c / 2) \\<times> ball b (c / 2) \\<subseteq> ball (a, b) c", "also"], ["proof (state)\nthis:\n  dist a a' < c / 2\n\ngoal (1 subgoal):\n 1. ball a (c / 2) \\<times> ball b (c / 2) \\<subseteq> ball (a, b) c", "assume \"b' \\<in> ball b (c / 2)\""], ["proof (state)\nthis:\n  b' \\<in> ball b (c / 2)\n\ngoal (1 subgoal):\n 1. ball a (c / 2) \\<times> ball b (c / 2) \\<subseteq> ball (a, b) c", "then"], ["proof (chain)\npicking this:\n  b' \\<in> ball b (c / 2)", "have \"dist b b' < c / 2\""], ["proof (prove)\nusing this:\n  b' \\<in> ball b (c / 2)\n\ngoal (1 subgoal):\n 1. dist b b' < c / 2", "by (simp add:)"], ["proof (state)\nthis:\n  dist b b' < c / 2\n\ngoal (1 subgoal):\n 1. ball a (c / 2) \\<times> ball b (c / 2) \\<subseteq> ball (a, b) c", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x y. x < y \\<Longrightarrow> x + dist b b' < y + dist b b';\n   \\<And>x y. x < y \\<Longrightarrow> c / 2 + x < c / 2 + y\\<rbrakk>\n  \\<Longrightarrow> sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2)\n                    < c / 2 + c / 2", "have \"sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2) < c\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y. x < y \\<Longrightarrow> x + dist b b' < y + dist b b';\n   \\<And>x y. x < y \\<Longrightarrow> c / 2 + x < c / 2 + y\\<rbrakk>\n  \\<Longrightarrow> sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2)\n                    < c / 2 + c / 2\n\ngoal (1 subgoal):\n 1. sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2) < c", "by simp"], ["proof (state)\nthis:\n  sqrt ((dist a a')\\<^sup>2 + (dist b b')\\<^sup>2) < c\n\ngoal (1 subgoal):\n 1. ball a (c / 2) \\<times> ball b (c / 2) \\<subseteq> ball (a, b) c", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?a'2 \\<in> ball a (c / 2); ?b'2 \\<in> ball b (c / 2)\\<rbrakk>\n  \\<Longrightarrow> sqrt ((dist a ?a'2)\\<^sup>2 + (dist b ?b'2)\\<^sup>2) < c\n\ngoal (1 subgoal):\n 1. ball a (c / 2) \\<times> ball b (c / 2) \\<subseteq> ball (a, b) c", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a'2 \\<in> ball a (c / 2); ?b'2 \\<in> ball b (c / 2)\\<rbrakk>\n  \\<Longrightarrow> sqrt ((dist a ?a'2)\\<^sup>2 + (dist b ?b'2)\\<^sup>2) < c\n\ngoal (1 subgoal):\n 1. ball a (c / 2) \\<times> ball b (c / 2) \\<subseteq> ball (a, b) c", "by (auto simp: dist_prod_def mem_cball)"], ["proof (state)\nthis:\n  ball a (c / 2) \\<times> ball b (c / 2) \\<subseteq> ball (a, b) c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma linear_inverse_blinop_lemma:\n  fixes w::\"'a::{banach, perfect_space} blinop\"\n  assumes \"norm w < 1\"\n  shows\n    \"summable (\\<lambda>n. (-1)^n *\\<^sub>R w^n)\" (is ?C)\n    \"(\\<Sum>n. (-1)^n *\\<^sub>R w^n) * (1 + w) = 1\" (is ?I1)\n    \"(1 + w) * (\\<Sum>n. (-1)^n *\\<^sub>R w^n) = 1\" (is ?I2)\n    \"norm ((\\<Sum>n. (-1)^n *\\<^sub>R w^n) - 1 + w) \\<le> (norm w)\\<^sup>2/(1 - norm (w))\" (is ?L)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (summable (\\<lambda>n. (- 1) ^ n *\\<^sub>R w ^ n) &&&\n     (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1) &&&\n    (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1 &&&\n    norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "proof -"], ["proof (state)\ngoal (4 subgoals):\n 1. summable (\\<lambda>n. (- 1) ^ n *\\<^sub>R w ^ n)\n 2. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1\n 3. (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1\n 4. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "have \"summable (\\<lambda>n. norm w ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable ((^) (norm w))", "apply (rule summable_geometric)"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (norm w) < 1", "using assms"], ["proof (prove)\nusing this:\n  norm w < 1\n\ngoal (1 subgoal):\n 1. norm (norm w) < 1", "by auto"], ["proof (state)\nthis:\n  summable ((^) (norm w))\n\ngoal (4 subgoals):\n 1. summable (\\<lambda>n. (- 1) ^ n *\\<^sub>R w ^ n)\n 2. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1\n 3. (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1\n 4. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "then"], ["proof (chain)\npicking this:\n  summable ((^) (norm w))", "have \"summable (\\<lambda>n. norm (w ^ n))\""], ["proof (prove)\nusing this:\n  summable ((^) (norm w))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. norm (w ^ n))", "by (rule summable_comparison_test'[where N=0]) (auto intro!: norm_power_ineq)"], ["proof (state)\nthis:\n  summable (\\<lambda>n. norm (w ^ n))\n\ngoal (4 subgoals):\n 1. summable (\\<lambda>n. (- 1) ^ n *\\<^sub>R w ^ n)\n 2. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1\n 3. (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1\n 4. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "then"], ["proof (chain)\npicking this:\n  summable (\\<lambda>n. norm (w ^ n))", "show ?C"], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. norm (w ^ n))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. (- 1) ^ n *\\<^sub>R w ^ n)", "by (rule summable_comparison_test'[where N=0]) (auto simp: norm_power )"], ["proof (state)\nthis:\n  summable (\\<lambda>n. (- 1) ^ n *\\<^sub>R w ^ n)\n\ngoal (3 subgoals):\n 1. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1\n 2. (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1\n 3. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "{"], ["proof (state)\nthis:\n  summable (\\<lambda>n. (- 1) ^ n *\\<^sub>R w ^ n)\n\ngoal (3 subgoals):\n 1. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1\n 2. (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1\n 3. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "fix N"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1\n 2. (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1\n 3. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "have 1: \"(1 + w) * sum (\\<lambda>n. (-1)^n *\\<^sub>R w^n) {..<N} = sum (\\<lambda>n. (-1)^n *\\<^sub>R w^n) {..<N} * (1 + w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + w) * (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n) =\n    (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w)", "by (auto simp: algebra_simps sum_distrib_left sum_distrib_right sum.distrib power_commutes)"], ["proof (state)\nthis:\n  (1 + w) * (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n) =\n  (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w)\n\ngoal (3 subgoals):\n 1. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1\n 2. (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1\n 3. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "also"], ["proof (state)\nthis:\n  (1 + w) * (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n) =\n  (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w)\n\ngoal (3 subgoals):\n 1. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1\n 2. (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1\n 3. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "have \"\\<dots> = sum (\\<lambda>n. (-1)^n *\\<^sub>R w^n - (-1)^Suc n *\\<^sub>R w^ Suc n) {..<N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) =\n    (\\<Sum>n<N.\n        (- 1) ^ n *\\<^sub>R w ^ n - (- 1) ^ Suc n *\\<^sub>R w ^ Suc n)", "by (auto simp: algebra_simps sum_distrib_left sum_distrib_right sum.distrib power_commutes)"], ["proof (state)\nthis:\n  (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) =\n  (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n - (- 1) ^ Suc n *\\<^sub>R w ^ Suc n)\n\ngoal (3 subgoals):\n 1. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1\n 2. (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1\n 3. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "also"], ["proof (state)\nthis:\n  (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) =\n  (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n - (- 1) ^ Suc n *\\<^sub>R w ^ Suc n)\n\ngoal (3 subgoals):\n 1. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1\n 2. (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1\n 3. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "have \"\\<dots> = 1 - (-1)^N *\\<^sub>R w^N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n<N.\n        (- 1) ^ n *\\<^sub>R w ^ n - (- 1) ^ Suc n *\\<^sub>R w ^ Suc n) =\n    1 - (- 1) ^ N *\\<^sub>R w ^ N", "by (subst sum_lessThan_telescope') (auto simp: algebra_simps)"], ["proof (state)\nthis:\n  (\\<Sum>n<N.\n      (- 1) ^ n *\\<^sub>R w ^ n - (- 1) ^ Suc n *\\<^sub>R w ^ Suc n) =\n  1 - (- 1) ^ N *\\<^sub>R w ^ N\n\ngoal (3 subgoals):\n 1. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1\n 2. (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1\n 3. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "finally"], ["proof (chain)\npicking this:\n  (1 + w) * (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n) =\n  1 - (- 1) ^ N *\\<^sub>R w ^ N", "have \"(1 + w) * (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n) = 1 - (- 1) ^ N *\\<^sub>R w ^ N\""], ["proof (prove)\nusing this:\n  (1 + w) * (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n) =\n  1 - (- 1) ^ N *\\<^sub>R w ^ N\n\ngoal (1 subgoal):\n 1. (1 + w) * (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n) =\n    1 - (- 1) ^ N *\\<^sub>R w ^ N", "."], ["proof (state)\nthis:\n  (1 + w) * (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n) =\n  1 - (- 1) ^ N *\\<^sub>R w ^ N\n\ngoal (3 subgoals):\n 1. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1\n 2. (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1\n 3. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "note 1 this"], ["proof (state)\nthis:\n  (1 + w) * (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n) =\n  (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w)\n  (1 + w) * (\\<Sum>n<N. (- 1) ^ n *\\<^sub>R w ^ n) =\n  1 - (- 1) ^ N *\\<^sub>R w ^ N\n\ngoal (3 subgoals):\n 1. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1\n 2. (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1\n 3. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "}"], ["proof (state)\nthis:\n  (1 + w) * (\\<Sum>n<?N2. (- 1) ^ n *\\<^sub>R w ^ n) =\n  (\\<Sum>n<?N2. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w)\n  (1 + w) * (\\<Sum>n<?N2. (- 1) ^ n *\\<^sub>R w ^ n) =\n  1 - (- 1) ^ ?N2 *\\<^sub>R w ^ ?N2\n\ngoal (3 subgoals):\n 1. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1\n 2. (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1\n 3. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "note nu = this"], ["proof (state)\nthis:\n  (1 + w) * (\\<Sum>n<?N2. (- 1) ^ n *\\<^sub>R w ^ n) =\n  (\\<Sum>n<?N2. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w)\n  (1 + w) * (\\<Sum>n<?N2. (- 1) ^ n *\\<^sub>R w ^ n) =\n  1 - (- 1) ^ ?N2 *\\<^sub>R w ^ ?N2\n\ngoal (3 subgoals):\n 1. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1\n 2. (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1\n 3. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "show \"?I1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1", "apply (subst suminf_mult2, fact)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n * (1 + w)) = 1", "apply (subst suminf_eq_lim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. lim (\\<lambda>n. \\<Sum>i<n. (- 1) ^ i *\\<^sub>R w ^ i * (1 + w)) = 1", "apply (subst sum_distrib_right[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. lim (\\<lambda>n. (\\<Sum>i<n. (- 1) ^ i *\\<^sub>R w ^ i) * (1 + w)) = 1", "apply (rule limI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (\\<Sum>i<n. (- 1) ^ i *\\<^sub>R w ^ i) * (1 + w))\n    \\<longlonglongrightarrow> 1", "apply (subst nu(1)[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (1 + w) * (\\<Sum>n<n. (- 1) ^ n *\\<^sub>R w ^ n))\n    \\<longlonglongrightarrow> 1", "apply (subst nu(2))"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. 1 - (- 1) ^ n *\\<^sub>R w ^ n) \\<longlonglongrightarrow> 1", "apply (rule tendsto_eq_intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (\\<lambda>x. 1) \\<longlonglongrightarrow> ?a4\n 2. (\\<lambda>x. (- 1) ^ x *\\<^sub>R w ^ x) \\<longlonglongrightarrow> ?b4\n 3. ?a4 - ?b4 = 1", "apply (rule tendsto_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lambda>x. (- 1) ^ x *\\<^sub>R w ^ x) \\<longlonglongrightarrow> ?b4\n 2. 1 - ?b4 = 1", "apply (rule tendsto_norm_zero_cancel)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lambda>x. norm ((- 1) ^ x *\\<^sub>R w ^ x))\n    \\<longlonglongrightarrow> 0\n 2. 1 - 0 = 1", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (w ^ x)) \\<longlonglongrightarrow> 0", "apply (rule Lim_transform_bound[where g=\"\\<lambda>i. norm w ^ i\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       norm (norm (w ^ n)) \\<le> norm (norm w ^ n)\n 2. (^) (norm w) \\<longlonglongrightarrow> 0", "apply (rule eventuallyI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. norm (norm (w ^ x)) \\<le> norm (norm w ^ x)\n 2. (^) (norm w) \\<longlonglongrightarrow> 0", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. norm (w ^ x) \\<le> norm w ^ x\n 2. (^) (norm w) \\<longlonglongrightarrow> 0", "apply (rule norm_power_ineq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (^) (norm w) \\<longlonglongrightarrow> 0", "apply (auto intro!: LIMSEQ_power_zero assms)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) * (1 + w) = 1\n\ngoal (2 subgoals):\n 1. (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1\n 2. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "show \"?I2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1", "apply (subst suminf_mult[symmetric], fact)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. (1 + w) * (- 1) ^ n *\\<^sub>R w ^ n) = 1", "apply (subst suminf_eq_lim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. lim (\\<lambda>n. \\<Sum>i<n. (1 + w) * (- 1) ^ i *\\<^sub>R w ^ i) = 1", "apply (subst sum_distrib_left[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. lim (\\<lambda>n. (1 + w) * (\\<Sum>i<n. (- 1) ^ i *\\<^sub>R w ^ i)) = 1", "apply (rule limI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (1 + w) * (\\<Sum>i<n. (- 1) ^ i *\\<^sub>R w ^ i))\n    \\<longlonglongrightarrow> 1", "apply (subst nu(2))"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. 1 - (- 1) ^ n *\\<^sub>R w ^ n) \\<longlonglongrightarrow> 1", "apply (rule tendsto_eq_intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (\\<lambda>x. 1) \\<longlonglongrightarrow> ?a4\n 2. (\\<lambda>x. (- 1) ^ x *\\<^sub>R w ^ x) \\<longlonglongrightarrow> ?b4\n 3. ?a4 - ?b4 = 1", "apply (rule tendsto_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lambda>x. (- 1) ^ x *\\<^sub>R w ^ x) \\<longlonglongrightarrow> ?b4\n 2. 1 - ?b4 = 1", "apply (rule tendsto_norm_zero_cancel)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lambda>x. norm ((- 1) ^ x *\\<^sub>R w ^ x))\n    \\<longlonglongrightarrow> 0\n 2. 1 - 0 = 1", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (w ^ x)) \\<longlonglongrightarrow> 0", "apply (rule Lim_transform_bound[where g=\"\\<lambda>i. norm w ^ i\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       norm (norm (w ^ n)) \\<le> norm (norm w ^ n)\n 2. (^) (norm w) \\<longlonglongrightarrow> 0", "apply (rule eventuallyI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. norm (norm (w ^ x)) \\<le> norm (norm w ^ x)\n 2. (^) (norm w) \\<longlonglongrightarrow> 0", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. norm (w ^ x) \\<le> norm w ^ x\n 2. (^) (norm w) \\<longlonglongrightarrow> 0", "apply (rule norm_power_ineq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (^) (norm w) \\<longlonglongrightarrow> 0", "apply (auto intro!: LIMSEQ_power_zero assms)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (1 + w) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) = 1\n\ngoal (1 subgoal):\n 1. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "have *: \"(\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w = (w\\<^sup>2 * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w =\n    w\\<^sup>2 * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n)", "apply (subst suminf_split_initial_segment[where k=2], fact)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. (- 1) ^ (n + 2) *\\<^sub>R w ^ (n + 2)) +\n    (\\<Sum>i<2. (- 1) ^ i *\\<^sub>R w ^ i) -\n    1 +\n    w =\n    w\\<^sup>2 * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n)", "apply (subst suminf_mult[symmetric], fact)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. (- 1) ^ (n + 2) *\\<^sub>R w ^ (n + 2)) +\n    (\\<Sum>i<2. (- 1) ^ i *\\<^sub>R w ^ i) -\n    1 +\n    w =\n    (\\<Sum>n. w\\<^sup>2 * (- 1) ^ n *\\<^sub>R w ^ n)", "by (auto simp: power2_eq_square algebra_simps eval_nat_numeral)"], ["proof (state)\nthis:\n  (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w =\n  w\\<^sup>2 * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n)\n\ngoal (1 subgoal):\n 1. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "also"], ["proof (state)\nthis:\n  (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w =\n  w\\<^sup>2 * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n)\n\ngoal (1 subgoal):\n 1. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "have \"norm \\<dots> \\<le> (norm w)\\<^sup>2 / (1 - norm w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (w\\<^sup>2 * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n))\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. norm (w\\<^sup>2 * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n))\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "have \\<section>: \"norm (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) \\<le> 1 / (1 - norm w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) \\<le> 1 / (1 - norm w)", "apply (rule order_trans[OF summable_norm])"], ["proof (prove)\ngoal (2 subgoals):\n 1. summable (\\<lambda>n. norm ((- 1) ^ n *\\<^sub>R w ^ n))\n 2. (\\<Sum>n. norm ((- 1) ^ n *\\<^sub>R w ^ n)) \\<le> 1 / (1 - norm w)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. summable (\\<lambda>n. norm (w ^ n))\n 2. (\\<Sum>n. norm (w ^ n)) \\<le> 1 / (1 - norm w)", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. norm (w ^ n)) \\<le> 1 / (1 - norm w)", "apply (rule order_trans[OF suminf_le])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n. norm (w ^ n) \\<le> ?g6 n\n 2. summable (\\<lambda>n. norm (w ^ n))\n 3. summable ?g6\n 4. suminf ?g6 \\<le> 1 / (1 - norm w)", "apply (rule norm_power_ineq)"], ["proof (prove)\ngoal (3 subgoals):\n 1. summable (\\<lambda>n. norm (w ^ n))\n 2. summable ((^) (norm w))\n 3. (\\<Sum>n. norm w ^ n) \\<le> 1 / (1 - norm w)", "apply fact"], ["proof (prove)\ngoal (2 subgoals):\n 1. summable ((^) (norm w))\n 2. (\\<Sum>n. norm w ^ n) \\<le> 1 / (1 - norm w)", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. norm w ^ n) \\<le> 1 / (1 - norm w)", "by (auto simp: suminf_geometric assms)"], ["proof (state)\nthis:\n  norm (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) \\<le> 1 / (1 - norm w)\n\ngoal (1 subgoal):\n 1. norm (w\\<^sup>2 * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n))\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (w\\<^sup>2 * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n))\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "apply (rule order_trans[OF norm_mult_ineq])"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (w\\<^sup>2) * norm (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "apply (subst divide_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (w\\<^sup>2) * norm (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n)\n    \\<le> (norm w)\\<^sup>2 * inverse (1 - norm w)", "apply (rule mult_mono)"], ["proof (prove)\ngoal (4 subgoals):\n 1. norm (w\\<^sup>2) \\<le> (norm w)\\<^sup>2\n 2. norm (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) \\<le> inverse (1 - norm w)\n 3. 0 \\<le> (norm w)\\<^sup>2\n 4. 0 \\<le> norm (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n)", "apply (auto simp: norm_power_ineq inverse_eq_divide assms \\<section>)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  norm (w\\<^sup>2 * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n))\n  \\<le> (norm w)\\<^sup>2 / (1 - norm w)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  norm (w\\<^sup>2 * (\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n))\n  \\<le> (norm w)\\<^sup>2 / (1 - norm w)\n\ngoal (1 subgoal):\n 1. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "finally"], ["proof (chain)\npicking this:\n  norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n  \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "show ?L"], ["proof (prove)\nusing this:\n  norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n  \\<le> (norm w)\\<^sup>2 / (1 - norm w)\n\ngoal (1 subgoal):\n 1. norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n    \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "."], ["proof (state)\nthis:\n  norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R w ^ n) - 1 + w)\n  \\<le> (norm w)\\<^sup>2 / (1 - norm w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma linear_inverse_blinfun_lemma:\n  fixes w::\"'a \\<Rightarrow>\\<^sub>L 'a::{banach, perfect_space}\"\n  assumes \"norm w < 1\"\n  obtains I where\n    \"I o\\<^sub>L (1\\<^sub>L + w) = 1\\<^sub>L\" \"(1\\<^sub>L + w) o\\<^sub>L I = 1\\<^sub>L\"\n    \"norm (I - 1\\<^sub>L + w) \\<le> (norm w)\\<^sup>2/(1 - norm (w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I o\\<^sub>L 1\\<^sub>L + w = 1\\<^sub>L;\n         1\\<^sub>L + w o\\<^sub>L I = 1\\<^sub>L;\n         norm (I - 1\\<^sub>L + w)\n         \\<le> (norm w)\\<^sup>2 / (1 - norm w)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I o\\<^sub>L 1\\<^sub>L + w = 1\\<^sub>L;\n         1\\<^sub>L + w o\\<^sub>L I = 1\\<^sub>L;\n         norm (I - 1\\<^sub>L + w)\n         \\<le> (norm w)\\<^sup>2 / (1 - norm w)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define v::\"'a blinop\" where \"v = Blinop w\""], ["proof (state)\nthis:\n  v = Blinop (blinfun_apply w)\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I o\\<^sub>L 1\\<^sub>L + w = 1\\<^sub>L;\n         1\\<^sub>L + w o\\<^sub>L I = 1\\<^sub>L;\n         norm (I - 1\\<^sub>L + w)\n         \\<le> (norm w)\\<^sup>2 / (1 - norm w)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"norm v = norm w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm v = norm w", "unfolding v_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (Blinop (blinfun_apply w)) = norm w", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w. bounded_linear w \\<Longrightarrow> norm (Blinfun w) = onorm w", "by (simp add: bounded_linear_Blinfun_apply norm_blinfun.rep_eq)"], ["proof (state)\nthis:\n  norm v = norm w\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I o\\<^sub>L 1\\<^sub>L + w = 1\\<^sub>L;\n         1\\<^sub>L + w o\\<^sub>L I = 1\\<^sub>L;\n         norm (I - 1\\<^sub>L + w)\n         \\<le> (norm w)\\<^sup>2 / (1 - norm w)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with assms"], ["proof (chain)\npicking this:\n  norm w < 1\n  norm v = norm w", "have \"norm v < 1\""], ["proof (prove)\nusing this:\n  norm w < 1\n  norm v = norm w\n\ngoal (1 subgoal):\n 1. norm v < 1", "by simp"], ["proof (state)\nthis:\n  norm v < 1\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I o\\<^sub>L 1\\<^sub>L + w = 1\\<^sub>L;\n         1\\<^sub>L + w o\\<^sub>L I = 1\\<^sub>L;\n         norm (I - 1\\<^sub>L + w)\n         \\<le> (norm w)\\<^sup>2 / (1 - norm w)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from linear_inverse_blinop_lemma[OF this]"], ["proof (chain)\npicking this:\n  summable (\\<lambda>n. (- 1) ^ n *\\<^sub>R v ^ n)\n  (\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) * (1 + v) = 1\n  (1 + v) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) = 1\n  norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) - 1 + v)\n  \\<le> (norm v)\\<^sup>2 / (1 - norm v)", "have v: \"(\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) * (1 + v) = 1\"\n    \"(1 + v) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) = 1\"\n    \"norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) - 1 + v) \\<le> (norm v)\\<^sup>2 / (1 - norm v)\""], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. (- 1) ^ n *\\<^sub>R v ^ n)\n  (\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) * (1 + v) = 1\n  (1 + v) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) = 1\n  norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) - 1 + v)\n  \\<le> (norm v)\\<^sup>2 / (1 - norm v)\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) * (1 + v) = 1 &&&\n    (1 + v) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) = 1 &&&\n    norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) - 1 + v)\n    \\<le> (norm v)\\<^sup>2 / (1 - norm v)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) * (1 + v) = 1\n  (1 + v) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) = 1\n  norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) - 1 + v)\n  \\<le> (norm v)\\<^sup>2 / (1 - norm v)\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I o\\<^sub>L 1\\<^sub>L + w = 1\\<^sub>L;\n         1\\<^sub>L + w o\\<^sub>L I = 1\\<^sub>L;\n         norm (I - 1\\<^sub>L + w)\n         \\<le> (norm w)\\<^sup>2 / (1 - norm w)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define J::\"'a blinop\" where \"J = (\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n)\""], ["proof (state)\nthis:\n  J = (\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n)\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I o\\<^sub>L 1\\<^sub>L + w = 1\\<^sub>L;\n         1\\<^sub>L + w o\\<^sub>L I = 1\\<^sub>L;\n         norm (I - 1\\<^sub>L + w)\n         \\<le> (norm w)\\<^sup>2 / (1 - norm w)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define I::\"'a \\<Rightarrow>\\<^sub>L 'a\" where \"I = Blinfun J\""], ["proof (state)\nthis:\n  I = Blinfun (blinop_apply J)\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I o\\<^sub>L 1\\<^sub>L + w = 1\\<^sub>L;\n         1\\<^sub>L + w o\\<^sub>L I = 1\\<^sub>L;\n         norm (I - 1\\<^sub>L + w)\n         \\<le> (norm w)\\<^sup>2 / (1 - norm w)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"Blinfun (blinop_apply J) - 1\\<^sub>L + w = Rep_blinop (J - 1 + Blinop (blinfun_apply w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Blinfun (blinop_apply J) - 1\\<^sub>L + w =\n    Rep_blinop (J - 1 + Blinop (blinfun_apply w))", "by transfer' (auto simp: blinfun_apply_inverse)"], ["proof (state)\nthis:\n  Blinfun (blinop_apply J) - 1\\<^sub>L + w =\n  Rep_blinop (J - 1 + Blinop (blinfun_apply w))\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I o\\<^sub>L 1\\<^sub>L + w = 1\\<^sub>L;\n         1\\<^sub>L + w o\\<^sub>L I = 1\\<^sub>L;\n         norm (I - 1\\<^sub>L + w)\n         \\<le> (norm w)\\<^sup>2 / (1 - norm w)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  Blinfun (blinop_apply J) - 1\\<^sub>L + w =\n  Rep_blinop (J - 1 + Blinop (blinfun_apply w))", "have ne: \"norm (Blinfun (blinop_apply J) - 1\\<^sub>L + w) =\n    norm (J - 1 + Blinop (blinfun_apply w))\""], ["proof (prove)\nusing this:\n  Blinfun (blinop_apply J) - 1\\<^sub>L + w =\n  Rep_blinop (J - 1 + Blinop (blinfun_apply w))\n\ngoal (1 subgoal):\n 1. norm (Blinfun (blinop_apply J) - 1\\<^sub>L + w) =\n    norm (J - 1 + Blinop (blinfun_apply w))", "by (auto simp: norm_blinfun_def norm_blinop_def)"], ["proof (state)\nthis:\n  norm (Blinfun (blinop_apply J) - 1\\<^sub>L + w) =\n  norm (J - 1 + Blinop (blinfun_apply w))\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I o\\<^sub>L 1\\<^sub>L + w = 1\\<^sub>L;\n         1\\<^sub>L + w o\\<^sub>L I = 1\\<^sub>L;\n         norm (I - 1\\<^sub>L + w)\n         \\<le> (norm w)\\<^sup>2 / (1 - norm w)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from v"], ["proof (chain)\npicking this:\n  (\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) * (1 + v) = 1\n  (1 + v) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) = 1\n  norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) - 1 + v)\n  \\<le> (norm v)\\<^sup>2 / (1 - norm v)", "have\n    \"I o\\<^sub>L (1\\<^sub>L + w) = 1\\<^sub>L\" \"(1\\<^sub>L + w) o\\<^sub>L I = 1\\<^sub>L\"\n    \"norm (I - 1\\<^sub>L + w) \\<le> (norm w)\\<^sup>2/(1 - norm (w))\""], ["proof (prove)\nusing this:\n  (\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) * (1 + v) = 1\n  (1 + v) * (\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) = 1\n  norm ((\\<Sum>n. (- 1) ^ n *\\<^sub>R v ^ n) - 1 + v)\n  \\<le> (norm v)\\<^sup>2 / (1 - norm v)\n\ngoal (1 subgoal):\n 1. I o\\<^sub>L 1\\<^sub>L + w = 1\\<^sub>L &&&\n    1\\<^sub>L + w o\\<^sub>L I = 1\\<^sub>L &&&\n    norm (I - 1\\<^sub>L + w) \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "apply (auto simp: I_def J_def[symmetric])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>J * (1 + v) = 1; (1 + v) * J = 1;\n     norm (J - 1 + v) \\<le> (norm v)\\<^sup>2 / (1 - norm v)\\<rbrakk>\n    \\<Longrightarrow> Blinfun (blinop_apply J) o\\<^sub>L 1\\<^sub>L + w =\n                      1\\<^sub>L\n 2. \\<lbrakk>J * (1 + v) = 1; (1 + v) * J = 1;\n     norm (J - 1 + v) \\<le> (norm v)\\<^sup>2 / (1 - norm v)\\<rbrakk>\n    \\<Longrightarrow> 1\\<^sub>L + w o\\<^sub>L Blinfun (blinop_apply J) =\n                      1\\<^sub>L\n 3. \\<lbrakk>J * (1 + v) = 1; (1 + v) * J = 1;\n     norm (J - 1 + v) \\<le> (norm v)\\<^sup>2 / (1 - norm v)\\<rbrakk>\n    \\<Longrightarrow> norm (Blinfun (blinop_apply J) - 1\\<^sub>L + w)\n                      \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "unfolding v_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>J * (1 + Blinop (blinfun_apply w)) = 1;\n     (1 + Blinop (blinfun_apply w)) * J = 1;\n     norm (J - 1 + Blinop (blinfun_apply w))\n     \\<le> (norm (Blinop (blinfun_apply w)))\\<^sup>2 /\n           (1 - norm (Blinop (blinfun_apply w)))\\<rbrakk>\n    \\<Longrightarrow> Blinfun (blinop_apply J) o\\<^sub>L 1\\<^sub>L + w =\n                      1\\<^sub>L\n 2. \\<lbrakk>J * (1 + Blinop (blinfun_apply w)) = 1;\n     (1 + Blinop (blinfun_apply w)) * J = 1;\n     norm (J - 1 + Blinop (blinfun_apply w))\n     \\<le> (norm (Blinop (blinfun_apply w)))\\<^sup>2 /\n           (1 - norm (Blinop (blinfun_apply w)))\\<rbrakk>\n    \\<Longrightarrow> 1\\<^sub>L + w o\\<^sub>L Blinfun (blinop_apply J) =\n                      1\\<^sub>L\n 3. \\<lbrakk>J * (1 + Blinop (blinfun_apply w)) = 1;\n     (1 + Blinop (blinfun_apply w)) * J = 1;\n     norm (J - 1 + Blinop (blinfun_apply w))\n     \\<le> (norm (Blinop (blinfun_apply w)))\\<^sup>2 /\n           (1 - norm (Blinop (blinfun_apply w)))\\<rbrakk>\n    \\<Longrightarrow> norm (Blinfun (blinop_apply J) - 1\\<^sub>L + w)\n                      \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "apply (auto simp: blinop.bounded_linear_right bounded_linear_Blinfun_apply\n        intro!: blinfun_eqI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>J * (1 + Blinop (blinfun_apply w)) = 1;\n        (1 + Blinop (blinfun_apply w)) * J = 1;\n        norm (J - 1 + Blinop (blinfun_apply w))\n        \\<le> (norm (Blinop (blinfun_apply w)))\\<^sup>2 /\n              (1 - norm (Blinop (blinfun_apply w)))\\<rbrakk>\n       \\<Longrightarrow> blinop_apply J (blinfun_apply (1\\<^sub>L + w) i) =\n                         i\n 2. \\<And>i.\n       \\<lbrakk>J * (1 + Blinop (blinfun_apply w)) = 1;\n        (1 + Blinop (blinfun_apply w)) * J = 1;\n        norm (J - 1 + Blinop (blinfun_apply w))\n        \\<le> (norm (Blinop (blinfun_apply w)))\\<^sup>2 /\n              (1 - norm (Blinop (blinfun_apply w)))\\<rbrakk>\n       \\<Longrightarrow> blinfun_apply (1\\<^sub>L + w) (blinop_apply J i) =\n                         i\n 3. \\<lbrakk>J * (1 + Blinop (blinfun_apply w)) = 1;\n     (1 + Blinop (blinfun_apply w)) * J = 1;\n     norm (J - 1 + Blinop (blinfun_apply w))\n     \\<le> (norm (Blinop (blinfun_apply w)))\\<^sup>2 /\n           (1 - norm (Blinop (blinfun_apply w)))\\<rbrakk>\n    \\<Longrightarrow> norm (Blinfun (blinop_apply J) - 1\\<^sub>L + w)\n                      \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>J * (1 + Blinop (blinfun_apply w)) = 1;\n     (1 + Blinop (blinfun_apply w)) * J = 1;\n     norm (J - 1 + Blinop (blinfun_apply w))\n     \\<le> (norm (Blinop (blinfun_apply w)))\\<^sup>2 /\n           (1 - norm (Blinop (blinfun_apply w)))\\<rbrakk>\n    \\<Longrightarrow> blinop_apply J (blinfun_apply (1\\<^sub>L + w) i_) = i_", "by transfer\n       (auto simp: blinfun_ext blinfun.bilinear_simps bounded_linear_Blinfun_apply)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>J * (1 + Blinop (blinfun_apply w)) = 1;\n        (1 + Blinop (blinfun_apply w)) * J = 1;\n        norm (J - 1 + Blinop (blinfun_apply w))\n        \\<le> (norm (Blinop (blinfun_apply w)))\\<^sup>2 /\n              (1 - norm (Blinop (blinfun_apply w)))\\<rbrakk>\n       \\<Longrightarrow> blinfun_apply (1\\<^sub>L + w) (blinop_apply J i) =\n                         i\n 2. \\<lbrakk>J * (1 + Blinop (blinfun_apply w)) = 1;\n     (1 + Blinop (blinfun_apply w)) * J = 1;\n     norm (J - 1 + Blinop (blinfun_apply w))\n     \\<le> (norm (Blinop (blinfun_apply w)))\\<^sup>2 /\n           (1 - norm (Blinop (blinfun_apply w)))\\<rbrakk>\n    \\<Longrightarrow> norm (Blinfun (blinop_apply J) - 1\\<^sub>L + w)\n                      \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>J * (1 + Blinop (blinfun_apply w)) = 1;\n     (1 + Blinop (blinfun_apply w)) * J = 1;\n     norm (J - 1 + Blinop (blinfun_apply w))\n     \\<le> (norm (Blinop (blinfun_apply w)))\\<^sup>2 /\n           (1 - norm (Blinop (blinfun_apply w)))\\<rbrakk>\n    \\<Longrightarrow> blinfun_apply (1\\<^sub>L + w) (blinop_apply J i_) = i_", "by transfer (auto simp: Transfer.Rel_def\n          blinfun_ext blinfun.bilinear_simps bounded_linear_Blinfun_apply)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>J * (1 + Blinop (blinfun_apply w)) = 1;\n     (1 + Blinop (blinfun_apply w)) * J = 1;\n     norm (J - 1 + Blinop (blinfun_apply w))\n     \\<le> (norm (Blinop (blinfun_apply w)))\\<^sup>2 /\n           (1 - norm (Blinop (blinfun_apply w)))\\<rbrakk>\n    \\<Longrightarrow> norm (Blinfun (blinop_apply J) - 1\\<^sub>L + w)\n                      \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>J * (1 + Blinop (blinfun_apply w)) = 1;\n     (1 + Blinop (blinfun_apply w)) * J = 1;\n     norm (J - 1 + Blinop (blinfun_apply w))\n     \\<le> (norm (Blinop (blinfun_apply w)))\\<^sup>2 /\n           (1 - norm (Blinop (blinfun_apply w)))\\<rbrakk>\n    \\<Longrightarrow> norm (Blinfun (blinop_apply J) - 1\\<^sub>L + w)\n                      \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "apply (auto simp: ne)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>J * (1 + Blinop (blinfun_apply w)) = 1;\n     (1 + Blinop (blinfun_apply w)) * J = 1;\n     norm (J - 1 + Blinop (blinfun_apply w))\n     \\<le> (norm (Blinop (blinfun_apply w)))\\<^sup>2 /\n           (1 - norm (Blinop (blinfun_apply w)))\\<rbrakk>\n    \\<Longrightarrow> norm (J - 1 + Blinop (blinfun_apply w))\n                      \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>J w.\n       \\<lbrakk>bounded_linear w;\n        J o\\<^sub>L 1\\<^sub>L + Blinfun w = 1\\<^sub>L;\n        1\\<^sub>L + Blinfun w o\\<^sub>L J = 1\\<^sub>L;\n        norm (J - 1\\<^sub>L + Blinfun w)\n        \\<le> (norm (Blinfun w))\\<^sup>2 / (1 - norm (Blinfun w))\\<rbrakk>\n       \\<Longrightarrow> norm (J - 1\\<^sub>L + Blinfun w)\n                         \\<le> (onorm w)\\<^sup>2 / (1 - onorm w)", "by (auto simp: norm_blinfun_def bounded_linear_Blinfun_apply)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  I o\\<^sub>L 1\\<^sub>L + w = 1\\<^sub>L\n  1\\<^sub>L + w o\\<^sub>L I = 1\\<^sub>L\n  norm (I - 1\\<^sub>L + w) \\<le> (norm w)\\<^sup>2 / (1 - norm w)\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I o\\<^sub>L 1\\<^sub>L + w = 1\\<^sub>L;\n         1\\<^sub>L + w o\\<^sub>L I = 1\\<^sub>L;\n         norm (I - 1\\<^sub>L + w)\n         \\<le> (norm w)\\<^sup>2 / (1 - norm w)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  I o\\<^sub>L 1\\<^sub>L + w = 1\\<^sub>L\n  1\\<^sub>L + w o\\<^sub>L I = 1\\<^sub>L\n  norm (I - 1\\<^sub>L + w) \\<le> (norm w)\\<^sup>2 / (1 - norm w)", "show ?thesis"], ["proof (prove)\nusing this:\n  I o\\<^sub>L 1\\<^sub>L + w = 1\\<^sub>L\n  1\\<^sub>L + w o\\<^sub>L I = 1\\<^sub>L\n  norm (I - 1\\<^sub>L + w) \\<le> (norm w)\\<^sup>2 / (1 - norm w)\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"invertibles_blinfun = {w. \\<exists>wi. w o\\<^sub>L wi = 1\\<^sub>L \\<and> wi o\\<^sub>L w = 1\\<^sub>L}\""], ["", "lemma blinfun_inverse_open:\\<comment> \\<open>8.3.2 in Dieudonne, TODO: add continuity and derivative\\<close>\n  shows \"open (invertibles_blinfun::\n      ('a::{banach, perfect_space} \\<Rightarrow>\\<^sub>L 'b::banach) set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open invertibles_blinfun", "proof (rule openI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> invertibles_blinfun \\<Longrightarrow>\n       \\<exists>e>0. ball x e \\<subseteq> invertibles_blinfun", "fix u0::\"'a \\<Rightarrow>\\<^sub>L 'b\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> invertibles_blinfun \\<Longrightarrow>\n       \\<exists>e>0. ball x e \\<subseteq> invertibles_blinfun", "assume \"u0 \\<in> invertibles_blinfun\""], ["proof (state)\nthis:\n  u0 \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> invertibles_blinfun \\<Longrightarrow>\n       \\<exists>e>0. ball x e \\<subseteq> invertibles_blinfun", "then"], ["proof (chain)\npicking this:\n  u0 \\<in> invertibles_blinfun", "obtain u0i where u0i: \"u0 o\\<^sub>L u0i = 1\\<^sub>L\" \"u0i o\\<^sub>L u0 = 1\\<^sub>L\""], ["proof (prove)\nusing this:\n  u0 \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. (\\<And>u0i.\n        \\<lbrakk>u0 o\\<^sub>L u0i = 1\\<^sub>L;\n         u0i o\\<^sub>L u0 = 1\\<^sub>L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: invertibles_blinfun_def)"], ["proof (state)\nthis:\n  u0 o\\<^sub>L u0i = 1\\<^sub>L\n  u0i o\\<^sub>L u0 = 1\\<^sub>L\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> invertibles_blinfun \\<Longrightarrow>\n       \\<exists>e>0. ball x e \\<subseteq> invertibles_blinfun", "then"], ["proof (chain)\npicking this:\n  u0 o\\<^sub>L u0i = 1\\<^sub>L\n  u0i o\\<^sub>L u0 = 1\\<^sub>L", "have [simp]: \"u0i \\<noteq> 0\""], ["proof (prove)\nusing this:\n  u0 o\\<^sub>L u0i = 1\\<^sub>L\n  u0i o\\<^sub>L u0 = 1\\<^sub>L\n\ngoal (1 subgoal):\n 1. u0i \\<noteq> 0", "apply (auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1\\<^sub>L = 0; 1\\<^sub>L = 0; u0i = 0\\<rbrakk>\n    \\<Longrightarrow> False", "by (metis one_blinop.abs_eq zero_blinop.abs_eq zero_neq_one)"], ["proof (state)\nthis:\n  u0i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> invertibles_blinfun \\<Longrightarrow>\n       \\<exists>e>0. ball x e \\<subseteq> invertibles_blinfun", "let ?e = \"inverse (norm u0i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> invertibles_blinfun \\<Longrightarrow>\n       \\<exists>e>0. ball x e \\<subseteq> invertibles_blinfun", "show \"\\<exists>e>0. ball u0 e \\<subseteq> invertibles_blinfun\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e>0. ball u0 e \\<subseteq> invertibles_blinfun", "apply (clarsimp intro!: exI[where x = ?e] simp: invertibles_blinfun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       dist u0 x < inverse (norm u0i) \\<Longrightarrow>\n       \\<exists>wi.\n          x o\\<^sub>L wi = 1\\<^sub>L \\<and> wi o\\<^sub>L x = 1\\<^sub>L", "subgoal premises prems for u0s"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>wi.\n       u0s o\\<^sub>L wi = 1\\<^sub>L \\<and> wi o\\<^sub>L u0s = 1\\<^sub>L", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>wi.\n       u0s o\\<^sub>L wi = 1\\<^sub>L \\<and> wi o\\<^sub>L u0s = 1\\<^sub>L", "define s where \"s = u0s - u0\""], ["proof (state)\nthis:\n  s = u0s - u0\n\ngoal (1 subgoal):\n 1. \\<exists>wi.\n       u0s o\\<^sub>L wi = 1\\<^sub>L \\<and> wi o\\<^sub>L u0s = 1\\<^sub>L", "have u0s: \"u0s = u0 + s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u0s = u0 + s", "by (auto simp: s_def)"], ["proof (state)\nthis:\n  u0s = u0 + s\n\ngoal (1 subgoal):\n 1. \\<exists>wi.\n       u0s o\\<^sub>L wi = 1\\<^sub>L \\<and> wi o\\<^sub>L u0s = 1\\<^sub>L", "have \"norm (u0i o\\<^sub>L s) < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (u0i o\\<^sub>L s) < 1", "using prems"], ["proof (prove)\nusing this:\n  dist u0 u0s < inverse (norm u0i)\n\ngoal (1 subgoal):\n 1. norm (u0i o\\<^sub>L s) < 1", "by (auto simp: dist_norm u0s\n        divide_simps ac_simps intro!: le_less_trans[OF norm_blinfun_compose])"], ["proof (state)\nthis:\n  norm (u0i o\\<^sub>L s) < 1\n\ngoal (1 subgoal):\n 1. \\<exists>wi.\n       u0s o\\<^sub>L wi = 1\\<^sub>L \\<and> wi o\\<^sub>L u0s = 1\\<^sub>L", "from linear_inverse_blinfun_lemma[OF this]"], ["proof (chain)\npicking this:\n  (\\<And>I.\n      \\<lbrakk>I o\\<^sub>L 1\\<^sub>L + (u0i o\\<^sub>L s) = 1\\<^sub>L;\n       1\\<^sub>L + (u0i o\\<^sub>L s) o\\<^sub>L I = 1\\<^sub>L;\n       norm (I - 1\\<^sub>L + (u0i o\\<^sub>L s))\n       \\<le> (norm (u0i o\\<^sub>L s))\\<^sup>2 /\n             (1 - norm (u0i o\\<^sub>L s))\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain I where I:\n        \"I o\\<^sub>L 1\\<^sub>L + (u0i o\\<^sub>L s) = 1\\<^sub>L\"\n        \"1\\<^sub>L + (u0i o\\<^sub>L s) o\\<^sub>L I = 1\\<^sub>L\"\n        \"norm (I - 1\\<^sub>L + (u0i o\\<^sub>L s)) \\<le> (norm (u0i o\\<^sub>L s))\\<^sup>2 / (1 - norm (u0i o\\<^sub>L s))\""], ["proof (prove)\nusing this:\n  (\\<And>I.\n      \\<lbrakk>I o\\<^sub>L 1\\<^sub>L + (u0i o\\<^sub>L s) = 1\\<^sub>L;\n       1\\<^sub>L + (u0i o\\<^sub>L s) o\\<^sub>L I = 1\\<^sub>L;\n       norm (I - 1\\<^sub>L + (u0i o\\<^sub>L s))\n       \\<le> (norm (u0i o\\<^sub>L s))\\<^sup>2 /\n             (1 - norm (u0i o\\<^sub>L s))\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>I o\\<^sub>L 1\\<^sub>L + (u0i o\\<^sub>L s) = 1\\<^sub>L;\n         1\\<^sub>L + (u0i o\\<^sub>L s) o\\<^sub>L I = 1\\<^sub>L;\n         norm (I - 1\\<^sub>L + (u0i o\\<^sub>L s))\n         \\<le> (norm (u0i o\\<^sub>L s))\\<^sup>2 /\n               (1 - norm (u0i o\\<^sub>L s))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  I o\\<^sub>L 1\\<^sub>L + (u0i o\\<^sub>L s) = 1\\<^sub>L\n  1\\<^sub>L + (u0i o\\<^sub>L s) o\\<^sub>L I = 1\\<^sub>L\n  norm (I - 1\\<^sub>L + (u0i o\\<^sub>L s))\n  \\<le> (norm (u0i o\\<^sub>L s))\\<^sup>2 / (1 - norm (u0i o\\<^sub>L s))\n\ngoal (1 subgoal):\n 1. \\<exists>wi.\n       u0s o\\<^sub>L wi = 1\\<^sub>L \\<and> wi o\\<^sub>L u0s = 1\\<^sub>L", "have u0s_eq: \"u0s = u0 o\\<^sub>L (1\\<^sub>L + (u0i o\\<^sub>L s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u0s = u0 o\\<^sub>L 1\\<^sub>L + (u0i o\\<^sub>L s)", "using u0i"], ["proof (prove)\nusing this:\n  u0 o\\<^sub>L u0i = 1\\<^sub>L\n  u0i o\\<^sub>L u0 = 1\\<^sub>L\n\ngoal (1 subgoal):\n 1. u0s = u0 o\\<^sub>L 1\\<^sub>L + (u0i o\\<^sub>L s)", "by (auto simp: s_def blinfun.bilinear_simps blinfun_ext)"], ["proof (state)\nthis:\n  u0s = u0 o\\<^sub>L 1\\<^sub>L + (u0i o\\<^sub>L s)\n\ngoal (1 subgoal):\n 1. \\<exists>wi.\n       u0s o\\<^sub>L wi = 1\\<^sub>L \\<and> wi o\\<^sub>L u0s = 1\\<^sub>L", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>wi.\n       u0s o\\<^sub>L wi = 1\\<^sub>L \\<and> wi o\\<^sub>L u0s = 1\\<^sub>L", "apply (rule exI[where x=\"I o\\<^sub>L u0i\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. u0s o\\<^sub>L (I o\\<^sub>L u0i) = 1\\<^sub>L \\<and>\n    I o\\<^sub>L u0i o\\<^sub>L u0s = 1\\<^sub>L", "using I u0i"], ["proof (prove)\nusing this:\n  I o\\<^sub>L 1\\<^sub>L + (u0i o\\<^sub>L s) = 1\\<^sub>L\n  1\\<^sub>L + (u0i o\\<^sub>L s) o\\<^sub>L I = 1\\<^sub>L\n  norm (I - 1\\<^sub>L + (u0i o\\<^sub>L s))\n  \\<le> (norm (u0i o\\<^sub>L s))\\<^sup>2 / (1 - norm (u0i o\\<^sub>L s))\n  u0 o\\<^sub>L u0i = 1\\<^sub>L\n  u0i o\\<^sub>L u0 = 1\\<^sub>L\n\ngoal (1 subgoal):\n 1. u0s o\\<^sub>L (I o\\<^sub>L u0i) = 1\\<^sub>L \\<and>\n    I o\\<^sub>L u0i o\\<^sub>L u0s = 1\\<^sub>L", "apply (auto simp: u0s_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I o\\<^sub>L 1\\<^sub>L + (u0i o\\<^sub>L s) = 1\\<^sub>L;\n     1\\<^sub>L + (u0i o\\<^sub>L s) o\\<^sub>L I = 1\\<^sub>L;\n     norm (I - 1\\<^sub>L + (u0i o\\<^sub>L s))\n     \\<le> (norm (u0i o\\<^sub>L s))\\<^sup>2 / (1 - norm (u0i o\\<^sub>L s));\n     u0 o\\<^sub>L u0i = 1\\<^sub>L; u0i o\\<^sub>L u0 = 1\\<^sub>L\\<rbrakk>\n    \\<Longrightarrow> u0 o\\<^sub>L 1\\<^sub>L + (u0i o\\<^sub>L s) o\\<^sub>L\n                      (I o\\<^sub>L u0i) =\n                      1\\<^sub>L\n 2. \\<lbrakk>I o\\<^sub>L 1\\<^sub>L + (u0i o\\<^sub>L s) = 1\\<^sub>L;\n     1\\<^sub>L + (u0i o\\<^sub>L s) o\\<^sub>L I = 1\\<^sub>L;\n     norm (I - 1\\<^sub>L + (u0i o\\<^sub>L s))\n     \\<le> (norm (u0i o\\<^sub>L s))\\<^sup>2 / (1 - norm (u0i o\\<^sub>L s));\n     u0 o\\<^sub>L u0i = 1\\<^sub>L; u0i o\\<^sub>L u0 = 1\\<^sub>L\\<rbrakk>\n    \\<Longrightarrow> I o\\<^sub>L u0i o\\<^sub>L\n                      (u0 o\\<^sub>L 1\\<^sub>L + (u0i o\\<^sub>L s)) =\n                      1\\<^sub>L", "by (auto simp:  algebra_simps blinfun_ext blinfun.bilinear_simps)"], ["proof (state)\nthis:\n  \\<exists>wi.\n     u0s o\\<^sub>L wi = 1\\<^sub>L \\<and> wi o\\<^sub>L u0s = 1\\<^sub>L\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>e>0. ball u0 e \\<subseteq> invertibles_blinfun\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma blinfun_compose_assoc[ac_simps]: \"a o\\<^sub>L b o\\<^sub>L c = a o\\<^sub>L (b o\\<^sub>L c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a o\\<^sub>L b o\\<^sub>L c = a o\\<^sub>L (b o\\<^sub>L c)", "by (auto intro!: blinfun_eqI)"], ["", "text \\<open>TODO: move @{thm norm_minus_cancel} to class!\\<close>"], ["", "lemma (in real_normed_vector) norm_minus_cancel [simp]: \"norm (- x) = norm x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (- x) = norm x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. norm (- x) = norm x", "have scaleR_minus_left: \"- a *\\<^sub>R x = - (a *\\<^sub>R x)\" for a x"], ["proof (prove)\ngoal (1 subgoal):\n 1. - a *\\<^sub>R x = - (a *\\<^sub>R x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. - a *\\<^sub>R x = - (a *\\<^sub>R x)", "have \"\\<forall>x1 x2. (x2::real) + x1 = x1 + x2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x1 x2. x2 + x1 = x1 + x2", "by auto"], ["proof (state)\nthis:\n  \\<forall>x1 x2. x2 + x1 = x1 + x2\n\ngoal (1 subgoal):\n 1. - a *\\<^sub>R x = - (a *\\<^sub>R x)", "then"], ["proof (chain)\npicking this:\n  \\<forall>x1 x2. x2 + x1 = x1 + x2", "have f1: \"\\<forall>r ra a. (ra + r) *\\<^sub>R (a::'a) = r *\\<^sub>R a + ra *\\<^sub>R a\""], ["proof (prove)\nusing this:\n  \\<forall>x1 x2. x2 + x1 = x1 + x2\n\ngoal (1 subgoal):\n 1. \\<forall>r ra a. (ra + r) *\\<^sub>R a = r *\\<^sub>R a + ra *\\<^sub>R a", "using local.scaleR_add_left"], ["proof (prove)\nusing this:\n  \\<forall>x1 x2. x2 + x1 = x1 + x2\n  (?a + ?b) *\\<^sub>R ?x = ?a *\\<^sub>R ?x + ?b *\\<^sub>R ?x\n\ngoal (1 subgoal):\n 1. \\<forall>r ra a. (ra + r) *\\<^sub>R a = r *\\<^sub>R a + ra *\\<^sub>R a", "by presburger"], ["proof (state)\nthis:\n  \\<forall>r ra a. (ra + r) *\\<^sub>R a = r *\\<^sub>R a + ra *\\<^sub>R a\n\ngoal (1 subgoal):\n 1. - a *\\<^sub>R x = - (a *\\<^sub>R x)", "have f2: \"a + a = 2 * a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a + a = 2 * a", "by force"], ["proof (state)\nthis:\n  a + a = 2 * a\n\ngoal (1 subgoal):\n 1. - a *\\<^sub>R x = - (a *\\<^sub>R x)", "have f3: \"2 * a + - 1 * a = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * a + - 1 * a = a", "by auto"], ["proof (state)\nthis:\n  2 * a + - 1 * a = a\n\ngoal (1 subgoal):\n 1. - a *\\<^sub>R x = - (a *\\<^sub>R x)", "have \"- a = - 1 * a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - a = - 1 * a", "by auto"], ["proof (state)\nthis:\n  - a = - 1 * a\n\ngoal (1 subgoal):\n 1. - a *\\<^sub>R x = - (a *\\<^sub>R x)", "then"], ["proof (chain)\npicking this:\n  - a = - 1 * a", "show ?thesis"], ["proof (prove)\nusing this:\n  - a = - 1 * a\n\ngoal (1 subgoal):\n 1. - a *\\<^sub>R x = - (a *\\<^sub>R x)", "using f3 f2 f1"], ["proof (prove)\nusing this:\n  - a = - 1 * a\n  2 * a + - 1 * a = a\n  a + a = 2 * a\n  \\<forall>r ra a. (ra + r) *\\<^sub>R a = r *\\<^sub>R a + ra *\\<^sub>R a\n\ngoal (1 subgoal):\n 1. - a *\\<^sub>R x = - (a *\\<^sub>R x)", "by (metis local.add_minus_cancel local.add_right_imp_eq)"], ["proof (state)\nthis:\n  - a *\\<^sub>R x = - (a *\\<^sub>R x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  - ?a1 *\\<^sub>R ?x1 = - (?a1 *\\<^sub>R ?x1)\n\ngoal (1 subgoal):\n 1. norm (- x) = norm x", "have \"norm (- x) = norm (scaleR (- 1) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (- x) = norm (- 1 *\\<^sub>R x)", "by (simp only: scaleR_minus_left scaleR_one)"], ["proof (state)\nthis:\n  norm (- x) = norm (- 1 *\\<^sub>R x)\n\ngoal (1 subgoal):\n 1. norm (- x) = norm x", "also"], ["proof (state)\nthis:\n  norm (- x) = norm (- 1 *\\<^sub>R x)\n\ngoal (1 subgoal):\n 1. norm (- x) = norm x", "have \"\\<dots> = \\<bar>- 1\\<bar> * norm x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (- 1 *\\<^sub>R x) = \\<bar>- 1\\<bar> * norm x", "by (rule norm_scaleR)"], ["proof (state)\nthis:\n  norm (- 1 *\\<^sub>R x) = \\<bar>- 1\\<bar> * norm x\n\ngoal (1 subgoal):\n 1. norm (- x) = norm x", "finally"], ["proof (chain)\npicking this:\n  norm (- x) = \\<bar>- 1\\<bar> * norm x", "show ?thesis"], ["proof (prove)\nusing this:\n  norm (- x) = \\<bar>- 1\\<bar> * norm x\n\ngoal (1 subgoal):\n 1. norm (- x) = norm x", "by simp"], ["proof (state)\nthis:\n  norm (- x) = norm x\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>TODO: move @{thm norm_minus_commute} to class!\\<close>"], ["", "lemma (in real_normed_vector) norm_minus_commute: \"norm (a - b) = norm (b - a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (a - b) = norm (b - a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. norm (a - b) = norm (b - a)", "have \"norm (- (b - a)) = norm (b - a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (- (b - a)) = norm (b - a)", "by (rule norm_minus_cancel)"], ["proof (state)\nthis:\n  norm (- (b - a)) = norm (b - a)\n\ngoal (1 subgoal):\n 1. norm (a - b) = norm (b - a)", "then"], ["proof (chain)\npicking this:\n  norm (- (b - a)) = norm (b - a)", "show ?thesis"], ["proof (prove)\nusing this:\n  norm (- (b - a)) = norm (b - a)\n\ngoal (1 subgoal):\n 1. norm (a - b) = norm (b - a)", "by simp"], ["proof (state)\nthis:\n  norm (a - b) = norm (b - a)\n\ngoal:\nNo subgoals!", "qed"], ["", "instance euclidean_space \\<subseteq> banach"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a, banach_class)", "by standard"], ["", "lemma blinfun_apply_Pair_split:\n  \"blinfun_apply g (a, b) = blinfun_apply g (a, 0) + blinfun_apply g (0, b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply g (a, b) =\n    blinfun_apply g (a, 0::'c) + blinfun_apply g (0::'b, b)", "unfolding blinfun.bilinear_simps[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply g (a, b) = blinfun_apply g ((a, 0::'c) + (0::'b, b))", "by simp"], ["", "lemma blinfun_apply_Pair_add2: \"blinfun_apply f (0, a + b) = blinfun_apply f (0, a) + blinfun_apply f (0, b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply f (0::'b, a + b) =\n    blinfun_apply f (0::'b, a) + blinfun_apply f (0::'b, b)", "unfolding blinfun.bilinear_simps[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply f (0::'b, a + b) =\n    blinfun_apply f ((0::'b, a) + (0::'b, b))", "by simp"], ["", "lemma blinfun_apply_Pair_add1: \"blinfun_apply f (a + b, 0) = blinfun_apply f (a, 0) + blinfun_apply f (b, 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply f (a + b, 0::'c) =\n    blinfun_apply f (a, 0::'c) + blinfun_apply f (b, 0::'c)", "unfolding blinfun.bilinear_simps[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply f (a + b, 0::'c) =\n    blinfun_apply f ((a, 0::'c) + (b, 0::'c))", "by simp"], ["", "lemma blinfun_apply_Pair_minus2: \"blinfun_apply f (0, a - b) = blinfun_apply f (0, a) - blinfun_apply f (0, b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply f (0::'b, a - b) =\n    blinfun_apply f (0::'b, a) - blinfun_apply f (0::'b, b)", "unfolding blinfun.bilinear_simps[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply f (0::'b, a - b) =\n    blinfun_apply f ((0::'b, a) - (0::'b, b))", "by simp"], ["", "lemma blinfun_apply_Pair_minus1: \"blinfun_apply f (a - b, 0) = blinfun_apply f (a, 0) - blinfun_apply f (b, 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply f (a - b, 0::'c) =\n    blinfun_apply f (a, 0::'c) - blinfun_apply f (b, 0::'c)", "unfolding blinfun.bilinear_simps[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply f (a - b, 0::'c) =\n    blinfun_apply f ((a, 0::'c) - (b, 0::'c))", "by simp"], ["", "lemma implicit_function_theorem:\n  fixes f::\"'a::euclidean_space * 'b::euclidean_space \\<Rightarrow> 'c::euclidean_space\"\\<comment> \\<open>TODO: generalize?!\\<close>\n  assumes [derivative_intros]: \"\\<And>x. x \\<in> S \\<Longrightarrow> (f has_derivative blinfun_apply (f' x)) (at x)\"\n  assumes S: \"(x, y) \\<in> S\" \"open S\"\n  assumes \"DIM('c) \\<le> DIM('b)\"\n  assumes f'C: \"isCont f' (x, y)\"\n  assumes \"f (x, y) = 0\"\n  assumes T2: \"T o\\<^sub>L (f' (x, y) o\\<^sub>L embed2_blinfun) = 1\\<^sub>L\"\n  assumes T1: \"(f' (x, y) o\\<^sub>L embed2_blinfun) o\\<^sub>L T = 1\\<^sub>L\"\\<comment> \\<open>TODO: reduce?!\\<close>\n  obtains u e r\n  where \"f (x, u x) = 0\" \"u x = y\"\n    \"\\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = 0\"\n    \"continuous_on (cball x e) u\"\n    \"(\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S\"\n    \"e > 0\"\n    \"(u has_derivative - T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun) (at x)\"\n\n    \"r > 0\"\n    \"\\<And>U v s. v x = y \\<Longrightarrow> (\\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = 0) \\<Longrightarrow> U \\<subseteq> cball x e \\<Longrightarrow>\n      continuous_on U v \\<Longrightarrow> s \\<in> U \\<Longrightarrow> (s, v s) \\<in> ball (x, y) r \\<Longrightarrow> u s = v s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define H where \"H \\<equiv> \\<lambda>(x, y). (x, f (x, y))\""], ["proof (state)\nthis:\n  H \\<equiv> \\<lambda>(x, y). (x, f (x, y))\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define H' where \"H' \\<equiv> \\<lambda>x. (embed1_blinfun o\\<^sub>L fst_blinfun) + (embed2_blinfun o\\<^sub>L (f' x))\""], ["proof (state)\nthis:\n  H' \\<equiv>\n  \\<lambda>x.\n     (embed1_blinfun o\\<^sub>L fst_blinfun) +\n     (embed2_blinfun o\\<^sub>L f' x)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have f'_inv: \"f' (x, y) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f' (x, y) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun", "using T1 T2"], ["proof (prove)\nusing this:\n  f' (x, y) o\\<^sub>L embed2_blinfun o\\<^sub>L T = 1\\<^sub>L\n  T o\\<^sub>L (f' (x, y) o\\<^sub>L embed2_blinfun) = 1\\<^sub>L\n\ngoal (1 subgoal):\n 1. f' (x, y) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun", "by (auto simp: invertibles_blinfun_def ac_simps intro!: exI[where x=T])"], ["proof (state)\nthis:\n  f' (x, y) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from openE[OF blinfun_inverse_open this]"], ["proof (chain)\npicking this:\n  (\\<And>e.\n      \\<lbrakk>0 < e;\n       ball (f' (x, y) o\\<^sub>L embed2_blinfun) e\n       \\<subseteq> invertibles_blinfun\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain d0 where e0: \"0 < d0\"\n    \"ball (f' (x, y) o\\<^sub>L embed2_blinfun) d0 \\<subseteq> invertibles_blinfun\""], ["proof (prove)\nusing this:\n  (\\<And>e.\n      \\<lbrakk>0 < e;\n       ball (f' (x, y) o\\<^sub>L embed2_blinfun) e\n       \\<subseteq> invertibles_blinfun\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>d0.\n        \\<lbrakk>0 < d0;\n         ball (f' (x, y) o\\<^sub>L embed2_blinfun) d0\n         \\<subseteq> invertibles_blinfun\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < d0\n  ball (f' (x, y) o\\<^sub>L embed2_blinfun) d0\n  \\<subseteq> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"isCont (\\<lambda>s. f' s o\\<^sub>L embed2_blinfun) (x, y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (\\<lambda>s. f' s o\\<^sub>L embed2_blinfun) (x, y)", "by (auto intro!: continuous_intros f'C)"], ["proof (state)\nthis:\n  isCont (\\<lambda>s. f' s o\\<^sub>L embed2_blinfun) (x, y)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from this[unfolded isCont_def, THEN tendstoD, OF \\<open>0 < d0\\<close>]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F xa in at (x, y).\n     dist (f' xa o\\<^sub>L embed2_blinfun)\n      (f' (x, y) o\\<^sub>L embed2_blinfun)\n     < d0", "have \"\\<forall>\\<^sub>F s in at (x, y). f' s o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F xa in at (x, y).\n     dist (f' xa o\\<^sub>L embed2_blinfun)\n      (f' (x, y) o\\<^sub>L embed2_blinfun)\n     < d0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at (x, y).\n       f' s o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun", "apply eventually_elim"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       dist (f' s o\\<^sub>L embed2_blinfun)\n        (f' (x, y) o\\<^sub>L embed2_blinfun)\n       < d0 \\<Longrightarrow>\n       f' s o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun", "using e0"], ["proof (prove)\nusing this:\n  0 < d0\n  ball (f' (x, y) o\\<^sub>L embed2_blinfun) d0\n  \\<subseteq> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       dist (f' s o\\<^sub>L embed2_blinfun)\n        (f' (x, y) o\\<^sub>L embed2_blinfun)\n       < d0 \\<Longrightarrow>\n       f' s o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun", "by (auto simp: subset_iff dist_commute)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at (x, y).\n     f' s o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F s in at (x, y).\n     f' s o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun", "obtain e0 where \"e0 > 0\"\n      \"xa \\<noteq> (x, y) \\<Longrightarrow> dist xa (x, y) < e0 \\<Longrightarrow>\n        f' xa o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\" for xa"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s in at (x, y).\n     f' s o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. (\\<And>e0.\n        \\<lbrakk>0 < e0;\n         \\<And>xa.\n            \\<lbrakk>xa \\<noteq> (x, y); dist xa (x, y) < e0\\<rbrakk>\n            \\<Longrightarrow> f' xa o\\<^sub>L embed2_blinfun\n                              \\<in> invertibles_blinfun\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding eventually_at"], ["proof (prove)\nusing this:\n  \\<exists>d>0.\n     \\<forall>xa\\<in>UNIV.\n        xa \\<noteq> (x, y) \\<and> dist xa (x, y) < d \\<longrightarrow>\n        f' xa o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. (\\<And>e0.\n        \\<lbrakk>0 < e0;\n         \\<And>xa.\n            \\<lbrakk>xa \\<noteq> (x, y); dist xa (x, y) < e0\\<rbrakk>\n            \\<Longrightarrow> f' xa o\\<^sub>L embed2_blinfun\n                              \\<in> invertibles_blinfun\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < e0\n  \\<lbrakk>?xa \\<noteq> (x, y); dist ?xa (x, y) < e0\\<rbrakk>\n  \\<Longrightarrow> f' ?xa o\\<^sub>L embed2_blinfun\n                    \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  0 < e0\n  \\<lbrakk>?xa \\<noteq> (x, y); dist ?xa (x, y) < e0\\<rbrakk>\n  \\<Longrightarrow> f' ?xa o\\<^sub>L embed2_blinfun\n                    \\<in> invertibles_blinfun", "have e0: \"e0 > 0\"\n    \"dist xa (x, y) < e0 \\<Longrightarrow> f' xa o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\" for xa"], ["proof (prove)\nusing this:\n  0 < e0\n  \\<lbrakk>?xa \\<noteq> (x, y); dist ?xa (x, y) < e0\\<rbrakk>\n  \\<Longrightarrow> f' ?xa o\\<^sub>L embed2_blinfun\n                    \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. 0 < e0 &&&\n    (dist xa (x, y) < e0 \\<Longrightarrow>\n     f' xa o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun)", "apply -"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < e0;\n     \\<And>xa.\n        \\<lbrakk>xa \\<noteq> (x, y); dist xa (x, y) < e0\\<rbrakk>\n        \\<Longrightarrow> f' xa o\\<^sub>L embed2_blinfun\n                          \\<in> invertibles_blinfun\\<rbrakk>\n    \\<Longrightarrow> 0 < e0\n 2. \\<lbrakk>dist xa (x, y) < e0; 0 < e0;\n     \\<And>xa.\n        \\<lbrakk>xa \\<noteq> (x, y); dist xa (x, y) < e0\\<rbrakk>\n        \\<Longrightarrow> f' xa o\\<^sub>L embed2_blinfun\n                          \\<in> invertibles_blinfun\\<rbrakk>\n    \\<Longrightarrow> f' xa o\\<^sub>L embed2_blinfun\n                      \\<in> invertibles_blinfun", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < e0;\n     \\<And>xa.\n        \\<lbrakk>xa \\<noteq> (x, y); dist xa (x, y) < e0\\<rbrakk>\n        \\<Longrightarrow> f' xa o\\<^sub>L embed2_blinfun\n                          \\<in> invertibles_blinfun\\<rbrakk>\n    \\<Longrightarrow> 0 < e0", "by simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dist xa (x, y) < e0; 0 < e0;\n     \\<And>xa.\n        \\<lbrakk>xa \\<noteq> (x, y); dist xa (x, y) < e0\\<rbrakk>\n        \\<Longrightarrow> f' xa o\\<^sub>L embed2_blinfun\n                          \\<in> invertibles_blinfun\\<rbrakk>\n    \\<Longrightarrow> f' xa o\\<^sub>L embed2_blinfun\n                      \\<in> invertibles_blinfun", "using f'_inv"], ["proof (prove)\nusing this:\n  f' (x, y) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dist xa (x, y) < e0; 0 < e0;\n     \\<And>xa.\n        \\<lbrakk>xa \\<noteq> (x, y); dist xa (x, y) < e0\\<rbrakk>\n        \\<Longrightarrow> f' xa o\\<^sub>L embed2_blinfun\n                          \\<in> invertibles_blinfun\\<rbrakk>\n    \\<Longrightarrow> f' xa o\\<^sub>L embed2_blinfun\n                      \\<in> invertibles_blinfun", "apply (cases \"xa = (x, y)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>dist xa (x, y) < e0; 0 < e0;\n     \\<And>xa.\n        \\<lbrakk>xa \\<noteq> (x, y); dist xa (x, y) < e0\\<rbrakk>\n        \\<Longrightarrow> f' xa o\\<^sub>L embed2_blinfun\n                          \\<in> invertibles_blinfun;\n     f' (x, y) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n     xa = (x, y)\\<rbrakk>\n    \\<Longrightarrow> f' xa o\\<^sub>L embed2_blinfun\n                      \\<in> invertibles_blinfun\n 2. \\<lbrakk>dist xa (x, y) < e0; 0 < e0;\n     \\<And>xa.\n        \\<lbrakk>xa \\<noteq> (x, y); dist xa (x, y) < e0\\<rbrakk>\n        \\<Longrightarrow> f' xa o\\<^sub>L embed2_blinfun\n                          \\<in> invertibles_blinfun;\n     f' (x, y) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n     xa \\<noteq> (x, y)\\<rbrakk>\n    \\<Longrightarrow> f' xa o\\<^sub>L embed2_blinfun\n                      \\<in> invertibles_blinfun", "by auto"], ["proof (state)\nthis:\n  0 < e0\n  dist ?xa (x, y) < e0 \\<Longrightarrow>\n  f' ?xa o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have H': \"x \\<in> S \\<Longrightarrow> (H has_derivative H' x) (at x)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> S \\<Longrightarrow>\n    (H has_derivative blinfun_apply (H' x)) (at x)", "unfolding H_def  H'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> S \\<Longrightarrow>\n    ((\\<lambda>(x, y). (x, f (x, y))) has_derivative\n     blinfun_apply\n      ((embed1_blinfun o\\<^sub>L fst_blinfun) +\n       (embed2_blinfun o\\<^sub>L f' x)))\n     (at x)", "by (auto intro!: derivative_eq_intros ext simp: blinfun.bilinear_simps)"], ["proof (state)\nthis:\n  ?x \\<in> S \\<Longrightarrow>\n  (H has_derivative blinfun_apply (H' ?x)) (at ?x)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have cH': \"isCont H' (x, y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont H' (x, y)", "unfolding H'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont\n     (\\<lambda>x.\n         (embed1_blinfun o\\<^sub>L fst_blinfun) +\n         (embed2_blinfun o\\<^sub>L f' x))\n     (x, y)", "by (auto intro!: continuous_intros assms)"], ["proof (state)\nthis:\n  isCont H' (x, y)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have linear_H': \"\\<And>s. s \\<in> S \\<Longrightarrow> linear (H' s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> S \\<Longrightarrow> linear (blinfun_apply (H' s))", "using H' assms(2) has_derivative_linear"], ["proof (prove)\nusing this:\n  ?x \\<in> S \\<Longrightarrow>\n  (H has_derivative blinfun_apply (H' ?x)) (at ?x)\n  (x, y) \\<in> S\n  (?f has_derivative ?f') ?F \\<Longrightarrow> linear ?f'\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> S \\<Longrightarrow> linear (blinfun_apply (H' s))", "by blast"], ["proof (state)\nthis:\n  ?s \\<in> S \\<Longrightarrow> linear (blinfun_apply (H' ?s))\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have *: \"blinfun_apply T (blinfun_apply (f' (x, y)) (0, b)) = b\" for b"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply T (blinfun_apply (f' (x, y)) (0::'a, b)) = b", "using blinfun_inverseD[OF T2, of b]"], ["proof (prove)\nusing this:\n  blinfun_apply T (blinfun_apply (f' (x, y) o\\<^sub>L embed2_blinfun) b) = b\n\ngoal (1 subgoal):\n 1. blinfun_apply T (blinfun_apply (f' (x, y)) (0::'a, b)) = b", "by simp"], ["proof (state)\nthis:\n  blinfun_apply T (blinfun_apply (f' (x, y)) (0::'a, ?b)) = ?b\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"inj (f' (x, y) o\\<^sub>L embed2_blinfun)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj (blinfun_apply (f' (x, y) o\\<^sub>L embed2_blinfun))", "by (metis (no_types, lifting) \"*\" blinfun_apply_blinfun_compose embed2_blinfun.rep_eq injI)"], ["proof (state)\nthis:\n  inj (blinfun_apply (f' (x, y) o\\<^sub>L embed2_blinfun))\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  inj (blinfun_apply (f' (x, y) o\\<^sub>L embed2_blinfun))", "have [simp]: \"blinfun_apply (f' (x, y)) (0, b) = 0 \\<Longrightarrow> b = 0\" for b"], ["proof (prove)\nusing this:\n  inj (blinfun_apply (f' (x, y) o\\<^sub>L embed2_blinfun))\n\ngoal (1 subgoal):\n 1. blinfun_apply (f' (x, y)) (0::'a, b) = (0::'c) \\<Longrightarrow>\n    b = (0::'b)", "apply (subst (asm) linear_injective_0)"], ["proof (prove)\ngoal (2 subgoals):\n 1. blinfun_apply (f' (x, y)) (0::'a, b) = (0::'c) \\<Longrightarrow>\n    linear (blinfun_apply (f' (x, y) o\\<^sub>L embed2_blinfun))\n 2. \\<lbrakk>blinfun_apply (f' (x, y)) (0::'a, b) = (0::'c);\n     \\<forall>xa.\n        blinfun_apply (f' (x, y) o\\<^sub>L embed2_blinfun) xa =\n        (0::'c) \\<longrightarrow>\n        xa = (0::'b)\\<rbrakk>\n    \\<Longrightarrow> b = (0::'b)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply (f' (x, y)) (0::'a, b) = (0::'c) \\<Longrightarrow>\n    linear (blinfun_apply (f' (x, y) o\\<^sub>L embed2_blinfun))", "apply (rule bounded_linear.linear)"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply (f' (x, y)) (0::'a, b) = (0::'c) \\<Longrightarrow>\n    bounded_linear (blinfun_apply (f' (x, y) o\\<^sub>L embed2_blinfun))", "apply (rule blinfun.bounded_linear_right)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>blinfun_apply (f' (x, y)) (0::'a, b) = (0::'c);\n     \\<forall>xa.\n        blinfun_apply (f' (x, y) o\\<^sub>L embed2_blinfun) xa =\n        (0::'c) \\<longrightarrow>\n        xa = (0::'b)\\<rbrakk>\n    \\<Longrightarrow> b = (0::'b)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>blinfun_apply (f' (x, y)) (0::'a, b) = (0::'c);\n     \\<forall>xa.\n        blinfun_apply (f' (x, y) o\\<^sub>L embed2_blinfun) xa =\n        (0::'c) \\<longrightarrow>\n        xa = (0::'b)\\<rbrakk>\n    \\<Longrightarrow> b = (0::'b)", "by simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  blinfun_apply (f' (x, y)) (0::'a, ?b) = (0::'c) \\<Longrightarrow>\n  ?b = (0::'b)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"inj (H' (x, y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj (blinfun_apply (H' (x, y)))", "apply (subst linear_injective_0)"], ["proof (prove)\ngoal (2 subgoals):\n 1. linear (blinfun_apply (H' (x, y)))\n 2. \\<forall>xa. blinfun_apply (H' (x, y)) xa = 0 \\<longrightarrow> xa = 0", "apply (rule linear_H')"], ["proof (prove)\ngoal (2 subgoals):\n 1. (x, y) \\<in> S\n 2. \\<forall>xa. blinfun_apply (H' (x, y)) xa = 0 \\<longrightarrow> xa = 0", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xa. blinfun_apply (H' (x, y)) xa = 0 \\<longrightarrow> xa = 0", "apply (auto simp: H'_def blinfun.bilinear_simps zero_prod_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  inj (blinfun_apply (H' (x, y)))\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define Hi where \"Hi = (embed1_blinfun o\\<^sub>L fst_blinfun) + ((embed2_blinfun o\\<^sub>L T o\\<^sub>L (snd_blinfun - (f' (x, y) o\\<^sub>L embed1_blinfun o\\<^sub>L fst_blinfun))))\""], ["proof (state)\nthis:\n  Hi =\n  (embed1_blinfun o\\<^sub>L fst_blinfun) +\n  (embed2_blinfun o\\<^sub>L T o\\<^sub>L\n   snd_blinfun - (f' (x, y) o\\<^sub>L embed1_blinfun o\\<^sub>L fst_blinfun))\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have Hi': \"(\\<lambda>u. snd (blinfun_apply Hi (u, 0))) = - T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))) =\n    blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun)", "by (auto simp: Hi_def blinfun.bilinear_simps)"], ["proof (state)\nthis:\n  (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))) =\n  blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have Hi: \"Hi o\\<^sub>L H' (x, y) = 1\\<^sub>L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hi o\\<^sub>L H' (x, y) = 1\\<^sub>L", "apply (auto simp: H'_def fun_eq_iff blinfun.bilinear_simps Hi_def\n        intro!: ext blinfun_eqI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       blinfun_apply T (blinfun_apply (f' (x, y)) (a, b)) -\n       blinfun_apply T (blinfun_apply (f' (x, y)) (a, 0::'b)) =\n       b", "apply (subst blinfun_apply_Pair_split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       blinfun_apply T\n        (blinfun_apply (f' (x, y)) (a, 0::'b) +\n         blinfun_apply (f' (x, y)) (0::'a, b)) -\n       blinfun_apply T (blinfun_apply (f' (x, y)) (a, 0::'b)) =\n       b", "by (auto simp: * blinfun.bilinear_simps)"], ["proof (state)\nthis:\n  Hi o\\<^sub>L H' (x, y) = 1\\<^sub>L\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from has_derivative_locally_injective_blinfun[OF S this H' cH']"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> S;\n   \\<And>r.\n      \\<lbrakk>0 < r; ball (x, y) r \\<subseteq> S;\n       inj_on H (ball (x, y) r)\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "obtain r0 where r0: \"0 < r0\" \"ball (x, y) r0 \\<subseteq> S\" and inj: \"inj_on H (ball (x, y) r0)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> S;\n   \\<And>r.\n      \\<lbrakk>0 < r; ball (x, y) r \\<subseteq> S;\n       inj_on H (ball (x, y) r)\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>r0.\n        \\<lbrakk>0 < r0; ball (x, y) r0 \\<subseteq> S;\n         inj_on H (ball (x, y) r0)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < r0\n  ball (x, y) r0 \\<subseteq> S\n  inj_on H (ball (x, y) r0)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define r where \"r = min r0 e0\""], ["proof (state)\nthis:\n  r = min r0 e0\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have r: \"0 < r\" \"ball (x, y) r \\<subseteq> S\" and inj: \"inj_on H (ball (x, y) r)\"\n    and r_inv: \"\\<And>s. s \\<in> ball (x, y) r \\<Longrightarrow> f' s o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < r &&& ball (x, y) r \\<subseteq> S) &&&\n    inj_on H (ball (x, y) r) &&&\n    (\\<And>s.\n        s \\<in> ball (x, y) r \\<Longrightarrow>\n        f' s o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < r", "using e0 r0"], ["proof (prove)\nusing this:\n  0 < e0\n  dist ?xa (x, y) < e0 \\<Longrightarrow>\n  f' ?xa o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n  0 < r0\n  ball (x, y) r0 \\<subseteq> S\n\ngoal (1 subgoal):\n 1. 0 < r", "by (auto simp: r_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. ball (x, y) r \\<subseteq> S\n 2. inj_on H (ball (x, y) r)\n 3. \\<And>s.\n       s \\<in> ball (x, y) r \\<Longrightarrow>\n       f' s o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. ball (x, y) r \\<subseteq> S", "using e0 r0"], ["proof (prove)\nusing this:\n  0 < e0\n  dist ?xa (x, y) < e0 \\<Longrightarrow>\n  f' ?xa o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n  0 < r0\n  ball (x, y) r0 \\<subseteq> S\n\ngoal (1 subgoal):\n 1. ball (x, y) r \\<subseteq> S", "by (auto simp: r_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. inj_on H (ball (x, y) r)\n 2. \\<And>s.\n       s \\<in> ball (x, y) r \\<Longrightarrow>\n       f' s o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on H (ball (x, y) r)", "using inj"], ["proof (prove)\nusing this:\n  inj_on H (ball (x, y) r0)\n\ngoal (1 subgoal):\n 1. inj_on H (ball (x, y) r)", "apply (rule inj_on_subset)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ball (x, y) r \\<subseteq> ball (x, y) r0", "using e0 r0"], ["proof (prove)\nusing this:\n  0 < e0\n  dist ?xa (x, y) < e0 \\<Longrightarrow>\n  f' ?xa o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n  0 < r0\n  ball (x, y) r0 \\<subseteq> S\n\ngoal (1 subgoal):\n 1. ball (x, y) r \\<subseteq> ball (x, y) r0", "by (auto simp: r_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> ball (x, y) r \\<Longrightarrow>\n       f' s o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun", "subgoal for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> ball (x, y) r \\<Longrightarrow>\n    f' s o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun", "using e0 r0"], ["proof (prove)\nusing this:\n  0 < e0\n  dist ?xa (x, y) < e0 \\<Longrightarrow>\n  f' ?xa o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n  0 < r0\n  ball (x, y) r0 \\<subseteq> S\n\ngoal (1 subgoal):\n 1. s \\<in> ball (x, y) r \\<Longrightarrow>\n    f' s o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun", "by (auto simp: r_def dist_commute)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  0 < r\n  ball (x, y) r \\<subseteq> S\n  inj_on H (ball (x, y) r)\n  ?s \\<in> ball (x, y) r \\<Longrightarrow>\n  f' ?s o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain i::'a where \"i \\<in> Basis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i. i \\<in> Basis \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using nonempty_Basis"], ["proof (prove)\nusing this:\n  Basis \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>i. i \\<in> Basis \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i \\<in> Basis\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define undef where \"undef \\<equiv> (x, y) + r *\\<^sub>R (i, 0)\"\\<comment> \\<open>really??\\<close>"], ["proof (state)\nthis:\n  undef \\<equiv> (x, y) + r *\\<^sub>R (i, 0::'b)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have ud: \"\\<not> dist (x, y) undef < r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> dist (x, y) undef < r", "using \\<open>r > 0\\<close> \\<open>i \\<in> Basis\\<close>"], ["proof (prove)\nusing this:\n  0 < r\n  i \\<in> Basis\n\ngoal (1 subgoal):\n 1. \\<not> dist (x, y) undef < r", "by (auto simp: undef_def dist_norm)"], ["proof (state)\nthis:\n  \\<not> dist (x, y) undef < r\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define G where \"G \\<equiv> the_inv_into (ball (x, y) r) H\""], ["proof (state)\nthis:\n  G \\<equiv> the_inv_into (ball (x, y) r) H\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  G \\<equiv> the_inv_into (ball (x, y) r) H\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "fix u v"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume [simp]: \"(u, v) \\<in> H ` ball (x, y) r\""], ["proof (state)\nthis:\n  (u, v) \\<in> H ` ball (x, y) r\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note [simp] = inj"], ["proof (state)\nthis:\n  inj_on H (ball (x, y) r)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"(u, v) = H (G (u, v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u, v) = H (G (u, v))", "unfolding G_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (u, v) = H (the_inv_into (ball (x, y) r) H (u, v))", "by (subst f_the_inv_into_f[where f=H]) auto"], ["proof (state)\nthis:\n  (u, v) = H (G (u, v))\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  (u, v) = H (G (u, v))\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<dots> = H (G (u, v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H (G (u, v)) = H (G (u, v))", "by (auto simp: G_def)"], ["proof (state)\nthis:\n  H (G (u, v)) = H (G (u, v))\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  H (G (u, v)) = H (G (u, v))\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<dots> = (fst (G (u, v)), f (G (u, v)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H (G (u, v)) = (fst (G (u, v)), f (G (u, v)))", "by (auto simp: H_def split_beta')"], ["proof (state)\nthis:\n  H (G (u, v)) = (fst (G (u, v)), f (G (u, v)))\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  (u, v) = H (G (u, v))\n  H (G (u, v)) = H (G (u, v))\n  H (G (u, v)) = (fst (G (u, v)), f (G (u, v)))", "have \"u = fst (G (u, v))\" \"v = f (G (u, v))\""], ["proof (prove)\nusing this:\n  (u, v) = H (G (u, v))\n  H (G (u, v)) = H (G (u, v))\n  H (G (u, v)) = (fst (G (u, v)), f (G (u, v)))\n\ngoal (1 subgoal):\n 1. u = fst (G (u, v)) &&& v = f (G (u, v))", "by simp_all"], ["proof (state)\nthis:\n  u = fst (G (u, v))\n  v = f (G (u, v))\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  u = fst (G (u, v))\n  v = f (G (u, v))", "have \"f (u, snd (G(u, v))) = v\" \"u = fst (G (u, v))\""], ["proof (prove)\nusing this:\n  u = fst (G (u, v))\n  v = f (G (u, v))\n\ngoal (1 subgoal):\n 1. f (u, snd (G (u, v))) = v &&& u = fst (G (u, v))", "by (metis prod.collapse)+"], ["proof (state)\nthis:\n  f (u, snd (G (u, v))) = v\n  u = fst (G (u, v))\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  (?u2, ?v2) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n  f (?u2, snd (G (?u2, ?v2))) = ?v2\n  (?u2, ?v2) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n  ?u2 = fst (G (?u2, ?v2))\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note uvs = this"], ["proof (state)\nthis:\n  (?u2, ?v2) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n  f (?u2, snd (G (?u2, ?v2))) = ?v2\n  (?u2, ?v2) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n  ?u2 = fst (G (?u2, ?v2))\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note uv = uvs(1)"], ["proof (state)\nthis:\n  (?u2, ?v2) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n  f (?u2, snd (G (?u2, ?v2))) = ?v2\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  (?u2, ?v2) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n  f (?u2, snd (G (?u2, ?v2))) = ?v2\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"f (x, snd (G (x, 0))) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (x, snd (G (x, 0::'c))) = (0::'c)", "apply (rule uv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, 0::'c) \\<in> H ` ball (x, y) r", "by (metis (mono_tags, lifting) H_def assms(6) case_prod_beta' centre_in_ball fst_conv image_iff r(1) snd_conv)"], ["proof (state)\nthis:\n  f (x, snd (G (x, 0::'c))) = (0::'c)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  f (x, snd (G (x, 0::'c))) = (0::'c)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have cH: \"continuous_on S H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on S H", "apply (rule has_derivative_continuous_on)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow> (H has_derivative ?f' x) (at x within S)", "apply (subst at_within_open)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> S\n 2. \\<And>x. x \\<in> S \\<Longrightarrow> open S\n 3. \\<And>x. x \\<in> S \\<Longrightarrow> (H has_derivative ?f'2 x x) (at x)", "apply (auto intro!: H' assms)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  continuous_on S H\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have inj2: \"inj_on H (ball (x, y) (r / 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on H (ball (x, y) (r / 2))", "apply (rule inj_on_subset, rule inj)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ball (x, y) (r / 2) \\<subseteq> ball (x, y) r", "using r"], ["proof (prove)\nusing this:\n  0 < r\n  ball (x, y) r \\<subseteq> S\n\ngoal (1 subgoal):\n 1. ball (x, y) (r / 2) \\<subseteq> ball (x, y) r", "by auto"], ["proof (state)\nthis:\n  inj_on H (ball (x, y) (r / 2))\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have oH: \"open (H ` ball (x, y) (r/2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open (H ` ball (x, y) (r / 2))", "apply (rule invariance_of_domain_gen)"], ["proof (prove)\ngoal (4 subgoals):\n 1. open (ball (x, y) (r / 2))\n 2. continuous_on (ball (x, y) (r / 2)) H\n 3. inj_on H (ball (x, y) (r / 2))\n 4. DIM('a \\<times> 'c) \\<le> DIM('a \\<times> 'b)", "apply (auto simp: assms inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. continuous_on (ball (x, y) (r / 2)) H\n 2. inj_on H (ball (x, y) (r / 2))", "apply (rule continuous_on_subset)"], ["proof (prove)\ngoal (3 subgoals):\n 1. continuous_on ?s5 H\n 2. ball (x, y) (r / 2) \\<subseteq> ?s5\n 3. inj_on H (ball (x, y) (r / 2))", "apply fact"], ["proof (prove)\ngoal (2 subgoals):\n 1. ball (x, y) (r / 2) \\<subseteq> S\n 2. inj_on H (ball (x, y) (r / 2))", "using r"], ["proof (prove)\nusing this:\n  0 < r\n  ball (x, y) r \\<subseteq> S\n\ngoal (2 subgoals):\n 1. ball (x, y) (r / 2) \\<subseteq> S\n 2. inj_on H (ball (x, y) (r / 2))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; ball (x, y) r \\<subseteq> S\\<rbrakk>\n    \\<Longrightarrow> inj_on H (ball (x, y) (r / 2))", "using inj2"], ["proof (prove)\nusing this:\n  inj_on H (ball (x, y) (r / 2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; ball (x, y) r \\<subseteq> S\\<rbrakk>\n    \\<Longrightarrow> inj_on H (ball (x, y) (r / 2))", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  open (H ` ball (x, y) (r / 2))\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"(x, f (x, y)) \\<in> H ` ball (x, y) (r/2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, f (x, y)) \\<in> H ` ball (x, y) (r / 2)", "using \\<open>r > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < r\n\ngoal (1 subgoal):\n 1. (x, f (x, y)) \\<in> H ` ball (x, y) (r / 2)", "by (auto simp: H_def)"], ["proof (state)\nthis:\n  (x, f (x, y)) \\<in> H ` ball (x, y) (r / 2)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from open_contains_cball[THEN iffD1, OF oH, rule_format, OF this]"], ["proof (chain)\npicking this:\n  \\<exists>e>0. cball (x, f (x, y)) e \\<subseteq> H ` ball (x, y) (r / 2)", "obtain e' where e': \"e' > 0\" \"cball (x, f (x, y)) e' \\<subseteq> H ` ball (x, y) (r/2)\""], ["proof (prove)\nusing this:\n  \\<exists>e>0. cball (x, f (x, y)) e \\<subseteq> H ` ball (x, y) (r / 2)\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         cball (x, f (x, y)) e' \\<subseteq> H ` ball (x, y) (r / 2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < e'\n  cball (x, f (x, y)) e' \\<subseteq> H ` ball (x, y) (r / 2)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have inv_subset: \"the_inv_into (ball (x, y) r) H a = the_inv_into R H a\"\n    if \"a \\<in> H ` R\" \"R \\<subseteq> (ball (x, y) r)\"\n    for a R"], ["proof (prove)\ngoal (1 subgoal):\n 1. the_inv_into (ball (x, y) r) H a = the_inv_into R H a", "apply (rule the_inv_into_f_eq[OF inj])"], ["proof (prove)\ngoal (2 subgoals):\n 1. H (the_inv_into R H a) = a\n 2. the_inv_into R H a \\<in> ball (x, y) r", "apply (rule f_the_inv_into_f)"], ["proof (prove)\ngoal (3 subgoals):\n 1. inj_on H R\n 2. a \\<in> H ` R\n 3. the_inv_into R H a \\<in> ball (x, y) r", "apply (rule inj_on_subset[OF inj])"], ["proof (prove)\ngoal (3 subgoals):\n 1. R \\<subseteq> ball (x, y) r\n 2. a \\<in> H ` R\n 3. the_inv_into R H a \\<in> ball (x, y) r", "apply fact"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> H ` R\n 2. the_inv_into R H a \\<in> ball (x, y) r", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. the_inv_into R H a \\<in> ball (x, y) r", "apply (rule the_inv_into_into)"], ["proof (prove)\ngoal (3 subgoals):\n 1. inj_on H R\n 2. a \\<in> H ` R\n 3. R \\<subseteq> ball (x, y) r", "apply (rule inj_on_subset[OF inj])"], ["proof (prove)\ngoal (3 subgoals):\n 1. R \\<subseteq> ball (x, y) r\n 2. a \\<in> H ` R\n 3. R \\<subseteq> ball (x, y) r", "apply fact"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> H ` R\n 2. R \\<subseteq> ball (x, y) r", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<subseteq> ball (x, y) r", "apply (rule order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. R \\<subseteq> ?y18\n 2. ?y18 \\<subseteq> ball (x, y) r", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. ball (x, y) r \\<subseteq> ball (x, y) r", "using r"], ["proof (prove)\nusing this:\n  0 < r\n  ball (x, y) r \\<subseteq> S\n\ngoal (1 subgoal):\n 1. ball (x, y) r \\<subseteq> ball (x, y) r", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> H ` ?R; ?R \\<subseteq> ball (x, y) r\\<rbrakk>\n  \\<Longrightarrow> the_inv_into (ball (x, y) r) H ?a = the_inv_into ?R H ?a\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have GH: \"G (H z) = z\" if \"dist (x, y) z < r\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. G (H z) = z", "by (auto simp: G_def the_inv_into_f_f inj that)"], ["proof (state)\nthis:\n  dist (x, y) ?z < r \\<Longrightarrow> G (H ?z) = ?z\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define e where \"e = min (e' / 2) e0\""], ["proof (state)\nthis:\n  e = min (e' / 2) e0\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define r2 where \"r2 = r / 2\""], ["proof (state)\nthis:\n  r2 = r / 2\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have r2: \"r2 > 0\" \"r2 < r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < r2 &&& r2 < r", "using \\<open>r > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < r\n\ngoal (1 subgoal):\n 1. 0 < r2 &&& r2 < r", "by (auto simp: r2_def)"], ["proof (state)\nthis:\n  0 < r2\n  r2 < r\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"e > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < e", "using e' e0"], ["proof (prove)\nusing this:\n  0 < e'\n  cball (x, f (x, y)) e' \\<subseteq> H ` ball (x, y) (r / 2)\n  0 < e0\n  dist ?xa (x, y) < e0 \\<Longrightarrow>\n  f' ?xa o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. 0 < e", "by (auto simp: e_def)"], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from cball_times_subset[of \"x\" e' \"f (x, y)\"] e'"], ["proof (chain)\npicking this:\n  cball x (e' / 2) \\<times> cball (f (x, y)) (e' / 2)\n  \\<subseteq> cball (x, f (x, y)) e'\n  0 < e'\n  cball (x, f (x, y)) e' \\<subseteq> H ` ball (x, y) (r / 2)", "have \"cball x e \\<times> cball (f (x, y)) e \\<subseteq> H ` ball (x, y) (r/2)\""], ["proof (prove)\nusing this:\n  cball x (e' / 2) \\<times> cball (f (x, y)) (e' / 2)\n  \\<subseteq> cball (x, f (x, y)) e'\n  0 < e'\n  cball (x, f (x, y)) e' \\<subseteq> H ` ball (x, y) (r / 2)\n\ngoal (1 subgoal):\n 1. cball x e \\<times> cball (f (x, y)) e\n    \\<subseteq> H ` ball (x, y) (r / 2)", "by (force simp: e_def)"], ["proof (state)\nthis:\n  cball x e \\<times> cball (f (x, y)) e \\<subseteq> H ` ball (x, y) (r / 2)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  cball x e \\<times> cball (f (x, y)) e \\<subseteq> H ` ball (x, y) (r / 2)", "have e_r_subset: \"z \\<in> cball x e \\<Longrightarrow> (z, 0) \\<in> H ` ball (x, y) (r/2)\" for z"], ["proof (prove)\nusing this:\n  cball x e \\<times> cball (f (x, y)) e \\<subseteq> H ` ball (x, y) (r / 2)\n\ngoal (1 subgoal):\n 1. z \\<in> cball x e \\<Longrightarrow>\n    (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)", "using \\<open>0 < e\\<close> assms(6)"], ["proof (prove)\nusing this:\n  cball x e \\<times> cball (f (x, y)) e \\<subseteq> H ` ball (x, y) (r / 2)\n  0 < e\n  f (x, y) = (0::'c)\n\ngoal (1 subgoal):\n 1. z \\<in> cball x e \\<Longrightarrow>\n    (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)", "by (auto simp: H_def subset_iff)"], ["proof (state)\nthis:\n  ?z \\<in> cball x e \\<Longrightarrow>\n  (?z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have u0: \"(u, 0) \\<in> H ` ball (x, y) r\" if \"u \\<in> cball x e\" for u"], ["proof (prove)\ngoal (1 subgoal):\n 1. (u, 0::'c) \\<in> H ` ball (x, y) r", "apply (rule rev_subsetD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (u, 0::'c) \\<in> ?A\n 2. ?A \\<subseteq> H ` ball (x, y) r", "apply (rule e_r_subset)"], ["proof (prove)\ngoal (2 subgoals):\n 1. u \\<in> cball x e\n 2. H ` ball (x, y) (r / 2) \\<subseteq> H ` ball (x, y) r", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. H ` ball (x, y) (r / 2) \\<subseteq> H ` ball (x, y) r", "unfolding r2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. H ` ball (x, y) (r / 2) \\<subseteq> H ` ball (x, y) r", "using r2"], ["proof (prove)\nusing this:\n  0 < r2\n  r2 < r\n\ngoal (1 subgoal):\n 1. H ` ball (x, y) (r / 2) \\<subseteq> H ` ball (x, y) r", "by auto"], ["proof (state)\nthis:\n  ?u \\<in> cball x e \\<Longrightarrow> (?u, 0::'c) \\<in> H ` ball (x, y) r\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have G_r: \"G (u, 0) \\<in> ball (x, y) r\" if \"u \\<in> cball x e\" for u"], ["proof (prove)\ngoal (1 subgoal):\n 1. G (u, 0::'c) \\<in> ball (x, y) r", "unfolding G_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. the_inv_into (ball (x, y) r) H (u, 0::'c) \\<in> ball (x, y) r", "apply (rule the_inv_into_into)"], ["proof (prove)\ngoal (3 subgoals):\n 1. inj_on H (ball (x, y) r)\n 2. (u, 0::'c) \\<in> H ` ball (x, y) r\n 3. ball (x, y) r \\<subseteq> ball (x, y) r", "apply fact"], ["proof (prove)\ngoal (2 subgoals):\n 1. (u, 0::'c) \\<in> H ` ball (x, y) r\n 2. ball (x, y) r \\<subseteq> ball (x, y) r", "apply (auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (u, 0::'c) \\<in> H ` ball (x, y) r", "apply (rule u0, fact)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ?u \\<in> cball x e \\<Longrightarrow> G (?u, 0::'c) \\<in> ball (x, y) r\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note e_r_subset"], ["proof (state)\nthis:\n  ?z \\<in> cball x e \\<Longrightarrow>\n  (?z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  (?u2, ?v2) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n  f (?u2, snd (G (?u2, ?v2))) = ?v2\n  f (x, snd (G (x, 0::'c))) = (0::'c)\n  ?z \\<in> cball x e \\<Longrightarrow>\n  (?z, 0::'c) \\<in> H ` ball (x, y) (r / 2)", "have G2:\n    \"f (x, snd (G (x, 0))) = 0\" \"snd (G (x, 0)) = y\"\n    \"\\<And>u. u \\<in> cball x e \\<Longrightarrow> f (u, snd (G (u, 0))) = 0\"\n    \"continuous_on (cball x e) (\\<lambda>u. snd (G (u, 0)))\"\n    \"(\\<lambda>t. (t, snd (G (t, 0)))) ` cball x e \\<subseteq> S\"\n    \"e > 0\"\n    \"((\\<lambda>u. snd (G (u, 0))) has_derivative (\\<lambda>u. snd (Hi (u, 0)))) (at x)\""], ["proof (prove)\nusing this:\n  (?u2, ?v2) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n  f (?u2, snd (G (?u2, ?v2))) = ?v2\n  f (x, snd (G (x, 0::'c))) = (0::'c)\n  ?z \\<in> cball x e \\<Longrightarrow>\n  (?z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\n\ngoal (1 subgoal):\n 1. (f (x, snd (G (x, 0::'c))) = (0::'c) &&&\n     snd (G (x, 0::'c)) = y &&&\n     (\\<And>u.\n         u \\<in> cball x e \\<Longrightarrow>\n         f (u, snd (G (u, 0::'c))) = (0::'c))) &&&\n    (continuous_on (cball x e) (\\<lambda>u. snd (G (u, 0::'c))) &&&\n     (\\<lambda>t. (t, snd (G (t, 0::'c)))) ` cball x e \\<subseteq> S) &&&\n    0 < e &&&\n    ((\\<lambda>u. snd (G (u, 0::'c))) has_derivative\n     (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n     (at x)", "apply (auto simp: G_def split_beta'\n        intro!: continuous_intros continuous_on_compose2[OF cH])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> snd (the_inv_into (ball (x, y) r) H (x, 0::'c)) = y\n 2. \\<And>u.\n       \\<lbrakk>dist x u \\<le> e;\n        \\<And>u v.\n           (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n           f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n       \\<Longrightarrow> f (u, snd (the_inv_into (ball (x, y) r) H\n                                     (u, 0::'c))) =\n                         (0::'c)\n 3. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> continuous_on (cball x e)\n                       (\\<lambda>xa.\n                           the_inv_into (ball (x, y) r) H (xa, 0::'c))\n 4. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n        dist x xa \\<le> e\\<rbrakk>\n       \\<Longrightarrow> (xa,\n                          snd (the_inv_into (ball (x, y) r) H (xa, 0::'c)))\n                         \\<in> S\n 5. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> 0 < e\n 6. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>u.\n                           snd (the_inv_into (ball (x, y) r) H\n                                 (u, 0::'c))) has_derivative\n                       (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n                       (at x)", "subgoal premises prems"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (the_inv_into (ball (x, y) r) H (x, 0::'c)) = y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. snd (the_inv_into (ball (x, y) r) H (x, 0::'c)) = y", "have \"the_inv_into (ball (x, y) r) H (x, 0) = (x, y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_inv_into (ball (x, y) r) H (x, 0::'c) = (x, y)", "apply (rule the_inv_into_f_eq)"], ["proof (prove)\ngoal (3 subgoals):\n 1. inj_on H (ball (x, y) r)\n 2. H (x, y) = (x, 0::'c)\n 3. (x, y) \\<in> ball (x, y) r", "apply fact"], ["proof (prove)\ngoal (2 subgoals):\n 1. H (x, y) = (x, 0::'c)\n 2. (x, y) \\<in> ball (x, y) r", "by (auto simp: H_def assms \\<open>r > 0\\<close>)"], ["proof (state)\nthis:\n  the_inv_into (ball (x, y) r) H (x, 0::'c) = (x, y)\n\ngoal (1 subgoal):\n 1. snd (the_inv_into (ball (x, y) r) H (x, 0::'c)) = y", "then"], ["proof (chain)\npicking this:\n  the_inv_into (ball (x, y) r) H (x, 0::'c) = (x, y)", "show ?thesis"], ["proof (prove)\nusing this:\n  the_inv_into (ball (x, y) r) H (x, 0::'c) = (x, y)\n\ngoal (1 subgoal):\n 1. snd (the_inv_into (ball (x, y) r) H (x, 0::'c)) = y", "by auto"], ["proof (state)\nthis:\n  snd (the_inv_into (ball (x, y) r) H (x, 0::'c)) = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>u.\n       \\<lbrakk>dist x u \\<le> e;\n        \\<And>u v.\n           (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n           f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n       \\<Longrightarrow> f (u, snd (the_inv_into (ball (x, y) r) H\n                                     (u, 0::'c))) =\n                         (0::'c)\n 2. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> continuous_on (cball x e)\n                       (\\<lambda>xa.\n                           the_inv_into (ball (x, y) r) H (xa, 0::'c))\n 3. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n        dist x xa \\<le> e\\<rbrakk>\n       \\<Longrightarrow> (xa,\n                          snd (the_inv_into (ball (x, y) r) H (xa, 0::'c)))\n                         \\<in> S\n 4. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> 0 < e\n 5. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>u.\n                           snd (the_inv_into (ball (x, y) r) H\n                                 (u, 0::'c))) has_derivative\n                       (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n                       (at x)", "using r2(2) r2_def"], ["proof (prove)\nusing this:\n  r2 < r\n  r2 = r / 2\n\ngoal (5 subgoals):\n 1. \\<And>u.\n       \\<lbrakk>dist x u \\<le> e;\n        \\<And>u v.\n           (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n           f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n       \\<Longrightarrow> f (u, snd (the_inv_into (ball (x, y) r) H\n                                     (u, 0::'c))) =\n                         (0::'c)\n 2. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> continuous_on (cball x e)\n                       (\\<lambda>xa.\n                           the_inv_into (ball (x, y) r) H (xa, 0::'c))\n 3. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n        dist x xa \\<le> e\\<rbrakk>\n       \\<Longrightarrow> (xa,\n                          snd (the_inv_into (ball (x, y) r) H (xa, 0::'c)))\n                         \\<in> S\n 4. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> 0 < e\n 5. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>u.\n                           snd (the_inv_into (ball (x, y) r) H\n                                 (u, 0::'c))) has_derivative\n                       (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n                       (at x)", "apply fastforce"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> continuous_on (cball x e)\n                       (\\<lambda>xa.\n                           the_inv_into (ball (x, y) r) H (xa, 0::'c))\n 2. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n        dist x xa \\<le> e\\<rbrakk>\n       \\<Longrightarrow> (xa,\n                          snd (the_inv_into (ball (x, y) r) H (xa, 0::'c)))\n                         \\<in> S\n 3. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> 0 < e\n 4. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>u.\n                           snd (the_inv_into (ball (x, y) r) H\n                                 (u, 0::'c))) has_derivative\n                       (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n                       (at x)", "apply (subst continuous_on_cong[OF refl])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n        xa \\<in> cball x e\\<rbrakk>\n       \\<Longrightarrow> the_inv_into (ball (x, y) r) H (xa, 0::'c) =\n                         ?g81 xa\n 2. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> continuous_on (cball x e) ?g81\n 3. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n        dist x xa \\<le> e\\<rbrakk>\n       \\<Longrightarrow> (xa,\n                          snd (the_inv_into (ball (x, y) r) H (xa, 0::'c)))\n                         \\<in> S\n 4. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> 0 < e\n 5. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>u.\n                           snd (the_inv_into (ball (x, y) r) H\n                                 (u, 0::'c))) has_derivative\n                       (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n                       (at x)", "apply (rule inv_subset[where R=\"cball (x, y) r2\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n        xa \\<in> cball x e\\<rbrakk>\n       \\<Longrightarrow> (xa, 0::'c) \\<in> H ` cball (x, y) r2\n 2. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n        xa \\<in> cball x e\\<rbrakk>\n       \\<Longrightarrow> cball (x, y) r2 \\<subseteq> ball (x, y) r\n 3. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> continuous_on (cball x e)\n                       (\\<lambda>xa.\n                           the_inv_into (cball (x, y) r2) H (xa, 0::'c))\n 4. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n        dist x xa \\<le> e\\<rbrakk>\n       \\<Longrightarrow> (xa,\n                          snd (the_inv_into (ball (x, y) r) H (xa, 0::'c)))\n                         \\<in> S\n 5. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> 0 < e\n 6. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>u.\n                           snd (the_inv_into (ball (x, y) r) H\n                                 (u, 0::'c))) has_derivative\n                       (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n                       (at x)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n     xa_ \\<in> cball x e\\<rbrakk>\n    \\<Longrightarrow> (xa_, 0::'c) \\<in> H ` cball (x, y) r2", "using r2"], ["proof (prove)\nusing this:\n  0 < r2\n  r2 < r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n     xa_ \\<in> cball x e\\<rbrakk>\n    \\<Longrightarrow> (xa_, 0::'c) \\<in> H ` cball (x, y) r2", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n     dist x xa_ \\<le> e; 0 < r2; r2 < r\\<rbrakk>\n    \\<Longrightarrow> (xa_, 0::'c) \\<in> H ` cball (x, y) r2", "using r2_def"], ["proof (prove)\nusing this:\n  r2 = r / 2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n     dist x xa_ \\<le> e; 0 < r2; r2 < r\\<rbrakk>\n    \\<Longrightarrow> (xa_, 0::'c) \\<in> H ` cball (x, y) r2", "by force"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n        xa \\<in> cball x e\\<rbrakk>\n       \\<Longrightarrow> cball (x, y) r2 \\<subseteq> ball (x, y) r\n 2. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> continuous_on (cball x e)\n                       (\\<lambda>xa.\n                           the_inv_into (cball (x, y) r2) H (xa, 0::'c))\n 3. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n        dist x xa \\<le> e\\<rbrakk>\n       \\<Longrightarrow> (xa,\n                          snd (the_inv_into (ball (x, y) r) H (xa, 0::'c)))\n                         \\<in> S\n 4. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> 0 < e\n 5. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>u.\n                           snd (the_inv_into (ball (x, y) r) H\n                                 (u, 0::'c))) has_derivative\n                       (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n                       (at x)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n     xa_ \\<in> cball x e\\<rbrakk>\n    \\<Longrightarrow> cball (x, y) r2 \\<subseteq> ball (x, y) r", "using r2"], ["proof (prove)\nusing this:\n  0 < r2\n  r2 < r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n     xa_ \\<in> cball x e\\<rbrakk>\n    \\<Longrightarrow> cball (x, y) r2 \\<subseteq> ball (x, y) r", "by (force simp:)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> continuous_on (cball x e)\n                       (\\<lambda>xa.\n                           the_inv_into (cball (x, y) r2) H (xa, 0::'c))\n 2. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n        dist x xa \\<le> e\\<rbrakk>\n       \\<Longrightarrow> (xa,\n                          snd (the_inv_into (ball (x, y) r) H (xa, 0::'c)))\n                         \\<in> S\n 3. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> 0 < e\n 4. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>u.\n                           snd (the_inv_into (ball (x, y) r) H\n                                 (u, 0::'c))) has_derivative\n                       (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n                       (at x)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> continuous_on (cball x e)\n                       (\\<lambda>xa.\n                           the_inv_into (cball (x, y) r2) H (xa, 0::'c))", "apply (rule continuous_on_compose2[OF continuous_on_inv_into])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> continuous_on (cball (x, y) r2) H\n 2. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> compact (cball (x, y) r2)\n 3. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> inj_on H (cball (x, y) r2)\n 4. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> continuous_on (cball x e) (\\<lambda>x. (x, 0::'c))\n 5. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. (x, 0::'c)) ` cball x e\n                      \\<subseteq> H ` cball (x, y) r2", "using r(2) r2(2)"], ["proof (prove)\nusing this:\n  ball (x, y) r \\<subseteq> S\n  r2 < r\n\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> continuous_on (cball (x, y) r2) H\n 2. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> compact (cball (x, y) r2)\n 3. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> inj_on H (cball (x, y) r2)\n 4. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> continuous_on (cball x e) (\\<lambda>x. (x, 0::'c))\n 5. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. (x, 0::'c)) ` cball x e\n                      \\<subseteq> H ` cball (x, y) r2", "apply (auto simp: r2_def[symmetric]\n          intro!: continuous_on_compose2[OF cH] continuous_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) r2;\n     ball (x, y) r \\<subseteq> S; r2 < r\\<rbrakk>\n    \\<Longrightarrow> inj_on H (cball (x, y) r2)\n 2. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) r2;\n        ball (x, y) r \\<subseteq> S; r2 < r; dist x xa \\<le> e\\<rbrakk>\n       \\<Longrightarrow> (xa, 0::'c) \\<in> H ` cball (x, y) r2", "apply (rule inj_on_subset)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) r2;\n     ball (x, y) r \\<subseteq> S; r2 < r\\<rbrakk>\n    \\<Longrightarrow> inj_on H ?A37\n 2. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) r2;\n     ball (x, y) r \\<subseteq> S; r2 < r\\<rbrakk>\n    \\<Longrightarrow> cball (x, y) r2 \\<subseteq> ?A37\n 3. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) r2;\n        ball (x, y) r \\<subseteq> S; r2 < r; dist x xa \\<le> e\\<rbrakk>\n       \\<Longrightarrow> (xa, 0::'c) \\<in> H ` cball (x, y) r2", "apply (rule inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) r2;\n     ball (x, y) r \\<subseteq> S; r2 < r\\<rbrakk>\n    \\<Longrightarrow> cball (x, y) r2 \\<subseteq> ball (x, y) r\n 2. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) r2;\n        ball (x, y) r \\<subseteq> S; r2 < r; dist x xa \\<le> e\\<rbrakk>\n       \\<Longrightarrow> (xa, 0::'c) \\<in> H ` cball (x, y) r2", "using r(2) r2(2)"], ["proof (prove)\nusing this:\n  ball (x, y) r \\<subseteq> S\n  r2 < r\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) r2;\n     ball (x, y) r \\<subseteq> S; r2 < r\\<rbrakk>\n    \\<Longrightarrow> cball (x, y) r2 \\<subseteq> ball (x, y) r\n 2. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) r2;\n        ball (x, y) r \\<subseteq> S; r2 < r; dist x xa \\<le> e\\<rbrakk>\n       \\<Longrightarrow> (xa, 0::'c) \\<in> H ` cball (x, y) r2", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) r2;\n        ball (x, y) r \\<subseteq> S; r2 < r; dist x xa \\<le> e\\<rbrakk>\n       \\<Longrightarrow> (xa, 0::'c) \\<in> H ` cball (x, y) r2", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>\\<And>u v.\n                   (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                   f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n        f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n        \\<And>z.\n           dist x z \\<le> e \\<Longrightarrow>\n           (z, 0::'c) \\<in> H ` ball (x, y) (r / 2);\n        dist x xa \\<le> e\\<rbrakk>\n       \\<Longrightarrow> (xa,\n                          snd (the_inv_into (ball (x, y) r) H (xa, 0::'c)))\n                         \\<in> S\n 2. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> 0 < e\n 3. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>u.\n                           snd (the_inv_into (ball (x, y) r) H\n                                 (u, 0::'c))) has_derivative\n                       (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n                       (at x)", "subgoal premises prems for u"], ["proof (prove)\ngoal (1 subgoal):\n 1. (u, snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) \\<in> S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (u, snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) \\<in> S", "from prems"], ["proof (chain)\npicking this:\n  (?u, ?v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n  f (?u, snd (the_inv_into (ball (x, y) r) H (?u, ?v))) = ?v\n  f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c)\n  dist x ?z \\<le> e \\<Longrightarrow>\n  (?z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\n  dist x u \\<le> e", "have u: \"u \\<in> cball x e\""], ["proof (prove)\nusing this:\n  (?u, ?v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n  f (?u, snd (the_inv_into (ball (x, y) r) H (?u, ?v))) = ?v\n  f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c)\n  dist x ?z \\<le> e \\<Longrightarrow>\n  (?z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\n  dist x u \\<le> e\n\ngoal (1 subgoal):\n 1. u \\<in> cball x e", "by auto"], ["proof (state)\nthis:\n  u \\<in> cball x e\n\ngoal (1 subgoal):\n 1. (u, snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) \\<in> S", "note G_r[OF u]"], ["proof (state)\nthis:\n  G (u, 0::'c) \\<in> ball (x, y) r\n\ngoal (1 subgoal):\n 1. (u, snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) \\<in> S", "also"], ["proof (state)\nthis:\n  G (u, 0::'c) \\<in> ball (x, y) r\n\ngoal (1 subgoal):\n 1. (u, snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) \\<in> S", "have \"ball (x, y) r \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ball (x, y) r \\<subseteq> S", "using r"], ["proof (prove)\nusing this:\n  0 < r\n  ball (x, y) r \\<subseteq> S\n\ngoal (1 subgoal):\n 1. ball (x, y) r \\<subseteq> S", "by simp"], ["proof (state)\nthis:\n  ball (x, y) r \\<subseteq> S\n\ngoal (1 subgoal):\n 1. (u, snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) \\<in> S", "finally"], ["proof (chain)\npicking this:\n  G (u, 0::'c) \\<in> S", "have \"(G (u, 0)) \\<in> S\""], ["proof (prove)\nusing this:\n  G (u, 0::'c) \\<in> S\n\ngoal (1 subgoal):\n 1. G (u, 0::'c) \\<in> S", "."], ["proof (state)\nthis:\n  G (u, 0::'c) \\<in> S\n\ngoal (1 subgoal):\n 1. (u, snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) \\<in> S", "then"], ["proof (chain)\npicking this:\n  G (u, 0::'c) \\<in> S", "show ?thesis"], ["proof (prove)\nusing this:\n  G (u, 0::'c) \\<in> S\n\ngoal (1 subgoal):\n 1. (u, snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) \\<in> S", "unfolding G_def[symmetric]"], ["proof (prove)\nusing this:\n  G (u, 0::'c) \\<in> S\n\ngoal (1 subgoal):\n 1. (u, snd (G (u, 0::'c))) \\<in> S", "using uvs(2)[OF u0, OF u]"], ["proof (prove)\nusing this:\n  G (u, 0::'c) \\<in> S\n  u = fst (G (u, 0::'c))\n\ngoal (1 subgoal):\n 1. (u, snd (G (u, 0::'c))) \\<in> S", "by (metis prod.collapse)"], ["proof (state)\nthis:\n  (u, snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> 0 < e\n 2. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>u.\n                           snd (the_inv_into (ball (x, y) r) H\n                                 (u, 0::'c))) has_derivative\n                       (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n                       (at x)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> 0 < e", "using \\<open>e > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> 0 < e", "by simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>u v.\n                (u, v) \\<in> H ` ball (x, y) r \\<Longrightarrow>\n                f (u, snd (the_inv_into (ball (x, y) r) H (u, v))) = v;\n     f (x, snd (the_inv_into (ball (x, y) r) H (x, 0::'c))) = (0::'c);\n     \\<And>z.\n        dist x z \\<le> e \\<Longrightarrow>\n        (z, 0::'c) \\<in> H ` ball (x, y) (r / 2)\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>u.\n                           snd (the_inv_into (ball (x, y) r) H\n                                 (u, 0::'c))) has_derivative\n                       (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n                       (at x)", "subgoal premises prems"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>u.\n         snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) has_derivative\n     (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n     (at x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>u.\n         snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) has_derivative\n     (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n     (at x)", "have \"(x, y) \\<in> cball (x, y) r2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> cball (x, y) r2", "using r2"], ["proof (prove)\nusing this:\n  0 < r2\n  r2 < r\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> cball (x, y) r2", "by auto"], ["proof (state)\nthis:\n  (x, y) \\<in> cball (x, y) r2\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u.\n         snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) has_derivative\n     (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n     (at x)", "moreover"], ["proof (state)\nthis:\n  (x, y) \\<in> cball (x, y) r2\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u.\n         snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) has_derivative\n     (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n     (at x)", "have \"H (x, y) \\<in> interior (H ` cball (x, y) r2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H (x, y) \\<in> interior (H ` cball (x, y) r2)", "apply (rule interiorI[OF oH])"], ["proof (prove)\ngoal (2 subgoals):\n 1. H (x, y) \\<in> H ` ball (x, y) (r / 2)\n 2. H ` ball (x, y) (r / 2) \\<subseteq> H ` cball (x, y) r2", "using r2"], ["proof (prove)\nusing this:\n  0 < r2\n  r2 < r\n\ngoal (2 subgoals):\n 1. H (x, y) \\<in> H ` ball (x, y) (r / 2)\n 2. H ` ball (x, y) (r / 2) \\<subseteq> H ` cball (x, y) r2", "by (auto simp: r2_def)"], ["proof (state)\nthis:\n  H (x, y) \\<in> interior (H ` cball (x, y) r2)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u.\n         snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) has_derivative\n     (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n     (at x)", "moreover"], ["proof (state)\nthis:\n  H (x, y) \\<in> interior (H ` cball (x, y) r2)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u.\n         snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) has_derivative\n     (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n     (at x)", "have \"cball (x, y) r2 \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cball (x, y) r2 \\<subseteq> S", "using r r2"], ["proof (prove)\nusing this:\n  0 < r\n  ball (x, y) r \\<subseteq> S\n  0 < r2\n  r2 < r\n\ngoal (1 subgoal):\n 1. cball (x, y) r2 \\<subseteq> S", "by auto"], ["proof (state)\nthis:\n  cball (x, y) r2 \\<subseteq> S\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u.\n         snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) has_derivative\n     (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n     (at x)", "moreover"], ["proof (state)\nthis:\n  cball (x, y) r2 \\<subseteq> S\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u.\n         snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) has_derivative\n     (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n     (at x)", "have \"\\<And>z. z \\<in> cball (x, y) r2 \\<Longrightarrow> G (H z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z. z \\<in> cball (x, y) r2 \\<Longrightarrow> G (H z) = z", "using r2"], ["proof (prove)\nusing this:\n  0 < r2\n  r2 < r\n\ngoal (1 subgoal):\n 1. \\<And>z. z \\<in> cball (x, y) r2 \\<Longrightarrow> G (H z) = z", "by (auto intro!: GH)"], ["proof (state)\nthis:\n  ?z \\<in> cball (x, y) r2 \\<Longrightarrow> G (H ?z) = ?z\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u.\n         snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) has_derivative\n     (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n     (at x)", "ultimately"], ["proof (chain)\npicking this:\n  (x, y) \\<in> cball (x, y) r2\n  H (x, y) \\<in> interior (H ` cball (x, y) r2)\n  cball (x, y) r2 \\<subseteq> S\n  ?z \\<in> cball (x, y) r2 \\<Longrightarrow> G (H ?z) = ?z", "have \"(G has_derivative Hi) (at (H (x, y)))\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> cball (x, y) r2\n  H (x, y) \\<in> interior (H ` cball (x, y) r2)\n  cball (x, y) r2 \\<subseteq> S\n  ?z \\<in> cball (x, y) r2 \\<Longrightarrow> G (H ?z) = ?z\n\ngoal (1 subgoal):\n 1. (G has_derivative blinfun_apply Hi) (at (H (x, y)))", "proof (rule has_derivative_inverse[where g = G and f = H,\n              OF compact_cball _ _ continuous_on_subset[OF cH] _ H' _ _])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ya.\n       ya \\<in> cball (x, y) r2 \\<Longrightarrow> ya \\<in> cball (x, y) r2\n 2. (x, y) \\<in> S\n 3. bounded_linear (blinfun_apply Hi)\n 4. blinfun_apply Hi \\<circ> blinfun_apply (H' (x, y)) = id", "show \"blinfun_apply Hi \\<circ> blinfun_apply (H' (x, y)) = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply Hi \\<circ> blinfun_apply (H' (x, y)) = id", "using Hi"], ["proof (prove)\nusing this:\n  Hi o\\<^sub>L H' (x, y) = 1\\<^sub>L\n\ngoal (1 subgoal):\n 1. blinfun_apply Hi \\<circ> blinfun_apply (H' (x, y)) = id", "by transfer auto"], ["proof (state)\nthis:\n  blinfun_apply Hi \\<circ> blinfun_apply (H' (x, y)) = id\n\ngoal (3 subgoals):\n 1. \\<And>ya.\n       ya \\<in> cball (x, y) r2 \\<Longrightarrow> ya \\<in> cball (x, y) r2\n 2. (x, y) \\<in> S\n 3. bounded_linear (blinfun_apply Hi)", "qed (use S blinfun.bounded_linear_right in auto)"], ["proof (state)\nthis:\n  (G has_derivative blinfun_apply Hi) (at (H (x, y)))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u.\n         snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) has_derivative\n     (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n     (at x)", "then"], ["proof (chain)\npicking this:\n  (G has_derivative blinfun_apply Hi) (at (H (x, y)))", "have g': \"(G has_derivative Hi) (at (x, 0))\""], ["proof (prove)\nusing this:\n  (G has_derivative blinfun_apply Hi) (at (H (x, y)))\n\ngoal (1 subgoal):\n 1. (G has_derivative blinfun_apply Hi) (at (x, 0::'c))", "by (auto simp: H_def assms)"], ["proof (state)\nthis:\n  (G has_derivative blinfun_apply Hi) (at (x, 0::'c))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u.\n         snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) has_derivative\n     (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n     (at x)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>u.\n         snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) has_derivative\n     (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n     (at x)", "unfolding G_def[symmetric] H_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>u. snd (G (u, 0::'c))) has_derivative\n     (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n     (at x)", "apply (auto intro!: derivative_eq_intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. G (x, 0::'c)) has_derivative\n     (\\<lambda>u. blinfun_apply Hi (u, 0::'c)))\n     (at x)", "apply (rule has_derivative_compose[where g=G and f=\"\\<lambda>x. (x, 0)\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((\\<lambda>x. (x, 0::'c)) has_derivative (\\<lambda>x. (x, 0::'c)))\n     (at x)\n 2. (G has_derivative blinfun_apply Hi) (at (x, 0::'c))", "apply (auto intro!: g' derivative_eq_intros)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ((\\<lambda>u.\n       snd (the_inv_into (ball (x, y) r) H (u, 0::'c))) has_derivative\n   (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n   (at x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  f (x, snd (G (x, 0::'c))) = (0::'c)\n  snd (G (x, 0::'c)) = y\n  ?u \\<in> cball x e \\<Longrightarrow> f (?u, snd (G (?u, 0::'c))) = (0::'c)\n  continuous_on (cball x e) (\\<lambda>u. snd (G (u, 0::'c)))\n  (\\<lambda>t. (t, snd (G (t, 0::'c)))) ` cball x e \\<subseteq> S\n  0 < e\n  ((\\<lambda>u. snd (G (u, 0::'c))) has_derivative\n   (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n   (at x)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  f (x, snd (G (x, 0::'c))) = (0::'c)\n  snd (G (x, 0::'c)) = y\n  ?u \\<in> cball x e \\<Longrightarrow> f (?u, snd (G (?u, 0::'c))) = (0::'c)\n  continuous_on (cball x e) (\\<lambda>u. snd (G (u, 0::'c)))\n  (\\<lambda>t. (t, snd (G (t, 0::'c)))) ` cball x e \\<subseteq> S\n  0 < e\n  ((\\<lambda>u. snd (G (u, 0::'c))) has_derivative\n   (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n   (at x)\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note \\<open>r > 0\\<close>"], ["proof (state)\nthis:\n  0 < r\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  0 < r\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define u where \"u \\<equiv> \\<lambda>x. snd (G (x, 0))\""], ["proof (state)\nthis:\n  u \\<equiv> \\<lambda>x. snd (G (x, 0::'c))\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have local_unique: \"u s = v s\"\n    if solves: \"(\\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = 0)\"\n    and i: \"v x = y\"\n    and v: \"continuous_on U v\"\n    and s: \"s \\<in> U\"\n    and s': \"(s, v s) \\<in> ball (x, y) r\"\n    and U: \"U \\<subseteq> cball x e\"\n    for U v s"], ["proof (prove)\ngoal (1 subgoal):\n 1. u s = v s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u s = v s", "have H_eq: \"H (s, v s) = H (s, u s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H (s, v s) = H (s, u s)", "apply (auto simp: H_def solves[OF s])"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (s, u s) = (0::'c)", "unfolding u_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (s, snd (G (s, 0::'c))) = (0::'c)", "apply (rule G2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> cball x e", "apply (rule subsetD; fact)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  H (s, v s) = H (s, u s)\n\ngoal (1 subgoal):\n 1. u s = v s", "have \"(s, snd (G (s, 0))) = (G (s, 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s, snd (G (s, 0::'c))) = G (s, 0::'c)", "using GH H_def s s' solves"], ["proof (prove)\nusing this:\n  dist (x, y) ?z < r \\<Longrightarrow> G (H ?z) = ?z\n  H \\<equiv> \\<lambda>(x, y). (x, f (x, y))\n  s \\<in> U\n  (s, v s) \\<in> ball (x, y) r\n  ?s \\<in> U \\<Longrightarrow> f (?s, v ?s) = (0::'c)\n\ngoal (1 subgoal):\n 1. (s, snd (G (s, 0::'c))) = G (s, 0::'c)", "by fastforce"], ["proof (state)\nthis:\n  (s, snd (G (s, 0::'c))) = G (s, 0::'c)\n\ngoal (1 subgoal):\n 1. u s = v s", "also"], ["proof (state)\nthis:\n  (s, snd (G (s, 0::'c))) = G (s, 0::'c)\n\ngoal (1 subgoal):\n 1. u s = v s", "have \"\\<dots> \\<in> ball (x, y) r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G (s, 0::'c) \\<in> ball (x, y) r", "unfolding G_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. the_inv_into (ball (x, y) r) H (s, 0::'c) \\<in> ball (x, y) r", "apply (rule the_inv_into_into)"], ["proof (prove)\ngoal (3 subgoals):\n 1. inj_on H (ball (x, y) r)\n 2. (s, 0::'c) \\<in> H ` ball (x, y) r\n 3. ball (x, y) r \\<subseteq> ball (x, y) r", "apply fact"], ["proof (prove)\ngoal (2 subgoals):\n 1. (s, 0::'c) \\<in> H ` ball (x, y) r\n 2. ball (x, y) r \\<subseteq> ball (x, y) r", "apply (rule u0)"], ["proof (prove)\ngoal (2 subgoals):\n 1. s \\<in> cball x e\n 2. ball (x, y) r \\<subseteq> ball (x, y) r", "apply (rule subsetD; fact)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ball (x, y) r \\<subseteq> ball (x, y) r", "apply (rule order_refl)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  G (s, 0::'c) \\<in> ball (x, y) r\n\ngoal (1 subgoal):\n 1. u s = v s", "finally"], ["proof (chain)\npicking this:\n  (s, snd (G (s, 0::'c))) \\<in> ball (x, y) r", "have \"(s, u s) \\<in> ball (x, y) r\""], ["proof (prove)\nusing this:\n  (s, snd (G (s, 0::'c))) \\<in> ball (x, y) r\n\ngoal (1 subgoal):\n 1. (s, u s) \\<in> ball (x, y) r", "unfolding u_def"], ["proof (prove)\nusing this:\n  (s, snd (G (s, 0::'c))) \\<in> ball (x, y) r\n\ngoal (1 subgoal):\n 1. (s, snd (G (s, 0::'c))) \\<in> ball (x, y) r", "."], ["proof (state)\nthis:\n  (s, u s) \\<in> ball (x, y) r\n\ngoal (1 subgoal):\n 1. u s = v s", "from inj_onD[OF inj H_eq s' this]"], ["proof (chain)\npicking this:\n  (s, v s) = (s, u s)", "show \"u s = v s\""], ["proof (prove)\nusing this:\n  (s, v s) = (s, u s)\n\ngoal (1 subgoal):\n 1. u s = v s", "by auto"], ["proof (state)\nthis:\n  u s = v s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>s. s \\<in> ?U \\<Longrightarrow> f (s, ?v s) = (0::'c);\n   ?v x = y; continuous_on ?U ?v; ?s \\<in> ?U;\n   (?s, ?v ?s) \\<in> ball (x, y) r; ?U \\<subseteq> cball x e\\<rbrakk>\n  \\<Longrightarrow> u ?s = ?v ?s\n\ngoal (1 subgoal):\n 1. (\\<And>u e r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>U v s.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             U \\<subseteq> cball x e; continuous_on U v; s \\<in> U;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  f (x, snd (G (x, 0::'c))) = (0::'c)\n  snd (G (x, 0::'c)) = y\n  ?u \\<in> cball x e \\<Longrightarrow> f (?u, snd (G (?u, 0::'c))) = (0::'c)\n  continuous_on (cball x e) (\\<lambda>u. snd (G (u, 0::'c)))\n  (\\<lambda>t. (t, snd (G (t, 0::'c)))) ` cball x e \\<subseteq> S\n  0 < e\n  ((\\<lambda>u. snd (G (u, 0::'c))) has_derivative\n   (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n   (at x)\n  0 < r\n  \\<lbrakk>\\<And>s. s \\<in> ?U \\<Longrightarrow> f (s, ?v s) = (0::'c);\n   ?v x = y; continuous_on ?U ?v; ?s \\<in> ?U;\n   (?s, ?v ?s) \\<in> ball (x, y) r; ?U \\<subseteq> cball x e\\<rbrakk>\n  \\<Longrightarrow> u ?s = ?v ?s", "show ?thesis"], ["proof (prove)\nusing this:\n  f (x, snd (G (x, 0::'c))) = (0::'c)\n  snd (G (x, 0::'c)) = y\n  ?u \\<in> cball x e \\<Longrightarrow> f (?u, snd (G (?u, 0::'c))) = (0::'c)\n  continuous_on (cball x e) (\\<lambda>u. snd (G (u, 0::'c)))\n  (\\<lambda>t. (t, snd (G (t, 0::'c)))) ` cball x e \\<subseteq> S\n  0 < e\n  ((\\<lambda>u. snd (G (u, 0::'c))) has_derivative\n   (\\<lambda>u. snd (blinfun_apply Hi (u, 0::'c))))\n   (at x)\n  0 < r\n  \\<lbrakk>\\<And>s. s \\<in> ?U \\<Longrightarrow> f (s, ?v s) = (0::'c);\n   ?v x = y; continuous_on ?U ?v; ?s \\<in> ?U;\n   (?s, ?v ?s) \\<in> ball (x, y) r; ?U \\<subseteq> cball x e\\<rbrakk>\n  \\<Longrightarrow> u ?s = ?v ?s\n\ngoal (1 subgoal):\n 1. thesis", "unfolding u_def Hi'"], ["proof (prove)\nusing this:\n  f (x, snd (G (x, 0::'c))) = (0::'c)\n  snd (G (x, 0::'c)) = y\n  ?u \\<in> cball x e \\<Longrightarrow> f (?u, snd (G (?u, 0::'c))) = (0::'c)\n  continuous_on (cball x e) (\\<lambda>u. snd (G (u, 0::'c)))\n  (\\<lambda>t. (t, snd (G (t, 0::'c)))) ` cball x e \\<subseteq> S\n  0 < e\n  ((\\<lambda>u. snd (G (u, 0::'c))) has_derivative\n   blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n   (at x)\n  0 < r\n  \\<lbrakk>\\<And>s. s \\<in> ?U \\<Longrightarrow> f (s, ?v s) = (0::'c);\n   ?v x = y; continuous_on ?U ?v; ?s \\<in> ?U;\n   (?s, ?v ?s) \\<in> ball (x, y) r; ?U \\<subseteq> cball x e\\<rbrakk>\n  \\<Longrightarrow> snd (G (?s, 0::'c)) = ?v ?s\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma implicit_function_theorem_unique:\n  fixes f::\"'a::euclidean_space * 'b::euclidean_space \\<Rightarrow> 'c::euclidean_space\"\\<comment> \\<open>TODO: generalize?!\\<close>\n  assumes f'[derivative_intros]: \"\\<And>x. x \\<in> S \\<Longrightarrow> (f has_derivative blinfun_apply (f' x)) (at x)\"\n  assumes S: \"(x, y) \\<in> S\" \"open S\"\n  assumes D: \"DIM('c) \\<le> DIM('b)\"\n  assumes f'C: \"continuous_on S f'\"\n  assumes z: \"f (x, y) = 0\"\n  assumes T2: \"T o\\<^sub>L (f' (x, y) o\\<^sub>L embed2_blinfun) = 1\\<^sub>L\"\n  assumes T1: \"(f' (x, y) o\\<^sub>L embed2_blinfun) o\\<^sub>L T = 1\\<^sub>L\"\\<comment> \\<open>TODO: reduce?!\\<close>\n  obtains u e\n  where \"f (x, u x) = 0\" \"u x = y\"\n    \"\\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = 0\"\n    \"continuous_on (cball x e) u\"\n    \"(\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S\"\n    \"e > 0\"\n    \"(u has_derivative (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun)) (at x)\"\n    \"\\<And>s. s \\<in> cball x e \\<Longrightarrow> f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\"\n    \"\\<And>U v s. (\\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = 0) \\<Longrightarrow>\n      u x = v x \\<Longrightarrow>\n      continuous_on U v \\<Longrightarrow> s \\<in> U \\<Longrightarrow> x \\<in> U \\<Longrightarrow> U \\<subseteq> cball x e \\<Longrightarrow> connected U \\<Longrightarrow> open U \\<Longrightarrow> u s = v s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from T1 T2"], ["proof (chain)\npicking this:\n  f' (x, y) o\\<^sub>L embed2_blinfun o\\<^sub>L T = 1\\<^sub>L\n  T o\\<^sub>L (f' (x, y) o\\<^sub>L embed2_blinfun) = 1\\<^sub>L", "have f'I: \"f' (x, y) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\""], ["proof (prove)\nusing this:\n  f' (x, y) o\\<^sub>L embed2_blinfun o\\<^sub>L T = 1\\<^sub>L\n  T o\\<^sub>L (f' (x, y) o\\<^sub>L embed2_blinfun) = 1\\<^sub>L\n\ngoal (1 subgoal):\n 1. f' (x, y) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun", "by (auto simp: invertibles_blinfun_def)"], ["proof (state)\nthis:\n  f' (x, y) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  ?x \\<in> S \\<Longrightarrow>\n  (f has_derivative blinfun_apply (f' ?x)) (at ?x)\n  (x, y) \\<in> S\n  open S\n  DIM('c) \\<le> DIM('b)\n  continuous_on S f'\n  f (x, y) = (0::'c)\n  T o\\<^sub>L (f' (x, y) o\\<^sub>L embed2_blinfun) = 1\\<^sub>L\n  f' (x, y) o\\<^sub>L embed2_blinfun o\\<^sub>L T = 1\\<^sub>L", "have f'Cg: \"s \\<in> S \\<Longrightarrow> isCont f' s\" for s"], ["proof (prove)\nusing this:\n  ?x \\<in> S \\<Longrightarrow>\n  (f has_derivative blinfun_apply (f' ?x)) (at ?x)\n  (x, y) \\<in> S\n  open S\n  DIM('c) \\<le> DIM('b)\n  continuous_on S f'\n  f (x, y) = (0::'c)\n  T o\\<^sub>L (f' (x, y) o\\<^sub>L embed2_blinfun) = 1\\<^sub>L\n  f' (x, y) o\\<^sub>L embed2_blinfun o\\<^sub>L T = 1\\<^sub>L\n\ngoal (1 subgoal):\n 1. s \\<in> S \\<Longrightarrow> isCont f' s", "by (auto simp: continuous_on_eq_continuous_at[OF \\<open>open S\\<close>])"], ["proof (state)\nthis:\n  ?s \\<in> S \\<Longrightarrow> isCont f' ?s\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  ?s \\<in> S \\<Longrightarrow> isCont f' ?s", "have f'C: \"isCont f' (x, y)\""], ["proof (prove)\nusing this:\n  ?s \\<in> S \\<Longrightarrow> isCont f' ?s\n\ngoal (1 subgoal):\n 1. isCont f' (x, y)", "by (auto simp: S)"], ["proof (state)\nthis:\n  isCont f' (x, y)\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain u e1 r\n    where u: \"f (x, u x) = 0\" \"u x = y\"\n      \"\\<And>s. s \\<in> cball x e1 \\<Longrightarrow> f (s, u s) = 0\"\n      \"continuous_on (cball x e1) u\"\n      \"(\\<lambda>t. (t, u t)) ` cball x e1 \\<subseteq> S\"\n      \"e1 > 0\"\n    \"(u has_derivative (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun)) (at x)\"\n    and unique_u: \"r > 0\"\n      \"(\\<And>v s U. v x = y \\<Longrightarrow>\n        (\\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = 0) \\<Longrightarrow>\n        continuous_on U v \\<Longrightarrow> s \\<in> U \\<Longrightarrow> U \\<subseteq> cball x e1 \\<Longrightarrow> (s, v s) \\<in> ball (x, y) r \\<Longrightarrow> u s = v s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u e1 r.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e1 \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e1) u;\n         (\\<lambda>t. (t, u t)) ` cball x e1 \\<subseteq> S; 0 < e1;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         0 < r;\n         \\<And>v s U.\n            \\<lbrakk>v x = y;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             continuous_on U v; s \\<in> U; U \\<subseteq> cball x e1;\n             (s, v s) \\<in> ball (x, y) r\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule implicit_function_theorem[OF f' S D f'C z T2 T1]; blast)"], ["proof (state)\nthis:\n  f (x, u x) = (0::'c)\n  u x = y\n  ?s \\<in> cball x e1 \\<Longrightarrow> f (?s, u ?s) = (0::'c)\n  continuous_on (cball x e1) u\n  (\\<lambda>t. (t, u t)) ` cball x e1 \\<subseteq> S\n  0 < e1\n  (u has_derivative\n   blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n   (at x)\n  0 < r\n  \\<lbrakk>?v x = y;\n   \\<And>s. s \\<in> ?U \\<Longrightarrow> f (s, ?v s) = (0::'c);\n   continuous_on ?U ?v; ?s \\<in> ?U; ?U \\<subseteq> cball x e1;\n   (?s, ?v ?s) \\<in> ball (x, y) r\\<rbrakk>\n  \\<Longrightarrow> u ?s = ?v ?s\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from openE[OF blinfun_inverse_open f'I]"], ["proof (chain)\npicking this:\n  (\\<And>e.\n      \\<lbrakk>0 < e;\n       ball (f' (x, y) o\\<^sub>L embed2_blinfun) e\n       \\<subseteq> invertibles_blinfun\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain d where d:\n    \"0 < d\" \"ball (f' (x, y) o\\<^sub>L embed2_blinfun) d \\<subseteq> invertibles_blinfun\""], ["proof (prove)\nusing this:\n  (\\<And>e.\n      \\<lbrakk>0 < e;\n       ball (f' (x, y) o\\<^sub>L embed2_blinfun) e\n       \\<subseteq> invertibles_blinfun\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>0 < d;\n         ball (f' (x, y) o\\<^sub>L embed2_blinfun) d\n         \\<subseteq> invertibles_blinfun\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < d\n  ball (f' (x, y) o\\<^sub>L embed2_blinfun) d\n  \\<subseteq> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note [continuous_intros] = continuous_at_compose[OF _ f'Cg, unfolded o_def]"], ["proof (state)\nthis:\n  \\<lbrakk>isCont ?f ?a; ?f ?a \\<in> S\\<rbrakk>\n  \\<Longrightarrow> isCont (\\<lambda>x. f' (?f x)) ?a\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>continuous_on _ u\\<close>"], ["proof (chain)\npicking this:\n  continuous_on (cball x e1) u", "have \"continuous_on (ball x e1) u\""], ["proof (prove)\nusing this:\n  continuous_on (cball x e1) u\n\ngoal (1 subgoal):\n 1. continuous_on (ball x e1) u", "by (rule continuous_on_subset) auto"], ["proof (state)\nthis:\n  continuous_on (ball x e1) u\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  continuous_on (ball x e1) u", "have \"\\<And>s. s \\<in> ball x e1 \\<Longrightarrow> isCont u s\""], ["proof (prove)\nusing this:\n  continuous_on (ball x e1) u\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> ball x e1 \\<Longrightarrow> isCont u s", "unfolding continuous_on_eq_continuous_at[OF open_ball]"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>ball x e1. isCont u x\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> ball x e1 \\<Longrightarrow> isCont u s", "by auto"], ["proof (state)\nthis:\n  ?s \\<in> ball x e1 \\<Longrightarrow> isCont u ?s\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note [continuous_intros] = continuous_at_compose[OF _ this, unfolded o_def]"], ["proof (state)\nthis:\n  \\<lbrakk>isCont ?f ?a; ?f ?a \\<in> ball x e1\\<rbrakk>\n  \\<Longrightarrow> isCont (\\<lambda>x. u (?f x)) ?a\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  ?x \\<in> S \\<Longrightarrow>\n  (f has_derivative blinfun_apply (f' ?x)) (at ?x)\n  (x, y) \\<in> S\n  open S\n  DIM('c) \\<le> DIM('b)\n  continuous_on S f'\n  f (x, y) = (0::'c)\n  T o\\<^sub>L (f' (x, y) o\\<^sub>L embed2_blinfun) = 1\\<^sub>L\n  f' (x, y) o\\<^sub>L embed2_blinfun o\\<^sub>L T = 1\\<^sub>L", "have f'Ce: \"isCont (\\<lambda>s. f' (s, u s) o\\<^sub>L embed2_blinfun) x\""], ["proof (prove)\nusing this:\n  ?x \\<in> S \\<Longrightarrow>\n  (f has_derivative blinfun_apply (f' ?x)) (at ?x)\n  (x, y) \\<in> S\n  open S\n  DIM('c) \\<le> DIM('b)\n  continuous_on S f'\n  f (x, y) = (0::'c)\n  T o\\<^sub>L (f' (x, y) o\\<^sub>L embed2_blinfun) = 1\\<^sub>L\n  f' (x, y) o\\<^sub>L embed2_blinfun o\\<^sub>L T = 1\\<^sub>L\n\ngoal (1 subgoal):\n 1. isCont (\\<lambda>s. f' (s, u s) o\\<^sub>L embed2_blinfun) x", "by (auto simp: u intro!: continuous_intros)"], ["proof (state)\nthis:\n  isCont (\\<lambda>s. f' (s, u s) o\\<^sub>L embed2_blinfun) x\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from f'Ce[unfolded isCont_def, THEN tendstoD, OF \\<open>0 < d\\<close>] d"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F xa in at x.\n     dist (f' (xa, u xa) o\\<^sub>L embed2_blinfun)\n      (f' (x, u x) o\\<^sub>L embed2_blinfun)\n     < d\n  0 < d\n  ball (f' (x, y) o\\<^sub>L embed2_blinfun) d\n  \\<subseteq> invertibles_blinfun", "obtain e0 where \"e0 > 0\" \"\\<And>s. s \\<noteq> x \\<Longrightarrow> s \\<in> ball x e0 \\<Longrightarrow>\n      (f' (s, u s) o\\<^sub>L embed2_blinfun) \\<in> invertibles_blinfun\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F xa in at x.\n     dist (f' (xa, u xa) o\\<^sub>L embed2_blinfun)\n      (f' (x, u x) o\\<^sub>L embed2_blinfun)\n     < d\n  0 < d\n  ball (f' (x, y) o\\<^sub>L embed2_blinfun) d\n  \\<subseteq> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. (\\<And>e0.\n        \\<lbrakk>0 < e0;\n         \\<And>s.\n            \\<lbrakk>s \\<noteq> x; s \\<in> ball x e0\\<rbrakk>\n            \\<Longrightarrow> f' (s, u s) o\\<^sub>L embed2_blinfun\n                              \\<in> invertibles_blinfun\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at dist_commute subset_iff u)"], ["proof (state)\nthis:\n  0 < e0\n  \\<lbrakk>?s \\<noteq> x; ?s \\<in> ball x e0\\<rbrakk>\n  \\<Longrightarrow> f' (?s, u ?s) o\\<^sub>L embed2_blinfun\n                    \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  0 < e0\n  \\<lbrakk>?s \\<noteq> x; ?s \\<in> ball x e0\\<rbrakk>\n  \\<Longrightarrow> f' (?s, u ?s) o\\<^sub>L embed2_blinfun\n                    \\<in> invertibles_blinfun", "have e0: \"s \\<in> ball x e0 \\<Longrightarrow> (f' (s, u s) o\\<^sub>L embed2_blinfun) \\<in> invertibles_blinfun\" for s"], ["proof (prove)\nusing this:\n  0 < e0\n  \\<lbrakk>?s \\<noteq> x; ?s \\<in> ball x e0\\<rbrakk>\n  \\<Longrightarrow> f' (?s, u ?s) o\\<^sub>L embed2_blinfun\n                    \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. s \\<in> ball x e0 \\<Longrightarrow>\n    f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun", "by (cases \"s = x\") (auto simp: f'I \\<open>0 < d\\<close> u)"], ["proof (state)\nthis:\n  ?s \\<in> ball x e0 \\<Longrightarrow>\n  f' (?s, u ?s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define e where \"e = min (e0/2) (e1/2)\""], ["proof (state)\nthis:\n  e = min (e0 / 2) (e1 / 2)\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have e: \"f (x, u x) = 0\"\n      \"u x = y\"\n      \"\\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = 0\"\n      \"continuous_on (cball x e) u\"\n      \"(\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S\"\n      \"e > 0\"\n      \"(u has_derivative (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun)) (at x)\"\n      \"\\<And>s. s \\<in> cball x e \\<Longrightarrow> f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((f (x, u x) = (0::'c) &&& u x = y) &&&\n     (\\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c)) &&&\n     continuous_on (cball x e) u) &&&\n    ((\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S &&& 0 < e) &&&\n    (u has_derivative\n     blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n     (at x) &&&\n    (\\<And>s.\n        s \\<in> cball x e \\<Longrightarrow>\n        f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun)", "using e0 u \\<open>e0 > 0\\<close>"], ["proof (prove)\nusing this:\n  ?s \\<in> ball x e0 \\<Longrightarrow>\n  f' (?s, u ?s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n  f (x, u x) = (0::'c)\n  u x = y\n  ?s \\<in> cball x e1 \\<Longrightarrow> f (?s, u ?s) = (0::'c)\n  continuous_on (cball x e1) u\n  (\\<lambda>t. (t, u t)) ` cball x e1 \\<subseteq> S\n  0 < e1\n  (u has_derivative\n   blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n   (at x)\n  0 < e0\n\ngoal (1 subgoal):\n 1. ((f (x, u x) = (0::'c) &&& u x = y) &&&\n     (\\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c)) &&&\n     continuous_on (cball x e) u) &&&\n    ((\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S &&& 0 < e) &&&\n    (u has_derivative\n     blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n     (at x) &&&\n    (\\<And>s.\n        s \\<in> cball x e \\<Longrightarrow>\n        f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun)", "by (auto simp: e_def intro: continuous_on_subset)"], ["proof (state)\nthis:\n  f (x, u x) = (0::'c)\n  u x = y\n  ?s \\<in> cball x e \\<Longrightarrow> f (?s, u ?s) = (0::'c)\n  continuous_on (cball x e) u\n  (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S\n  0 < e\n  (u has_derivative\n   blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n   (at x)\n  ?s \\<in> cball x e \\<Longrightarrow>\n  f' (?s, u ?s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from u(4)"], ["proof (chain)\npicking this:\n  continuous_on (cball x e1) u", "have \"continuous_on (ball x e1) u\""], ["proof (prove)\nusing this:\n  continuous_on (cball x e1) u\n\ngoal (1 subgoal):\n 1. continuous_on (ball x e1) u", "apply (rule continuous_on_subset)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ball x e1 \\<subseteq> cball x e1", "using \\<open>e1 > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < e1\n\ngoal (1 subgoal):\n 1. ball x e1 \\<subseteq> cball x e1", "by (auto simp: e_def)"], ["proof (state)\nthis:\n  continuous_on (ball x e1) u\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  continuous_on (ball x e1) u", "have \"\\<And>s. s \\<in> cball x e \\<Longrightarrow> isCont u s\""], ["proof (prove)\nusing this:\n  continuous_on (ball x e1) u\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> cball x e \\<Longrightarrow> isCont u s", "using \\<open>e0 > 0\\<close> \\<open>e1 > 0\\<close>"], ["proof (prove)\nusing this:\n  continuous_on (ball x e1) u\n  0 < e0\n  0 < e1\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> cball x e \\<Longrightarrow> isCont u s", "unfolding continuous_on_eq_continuous_at[OF open_ball]"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>ball x e1. isCont u x\n  0 < e0\n  0 < e1\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> cball x e \\<Longrightarrow> isCont u s", "by (auto simp: e_def Ball_def dist_commute)"], ["proof (state)\nthis:\n  ?s \\<in> cball x e \\<Longrightarrow> isCont u ?s\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note [continuous_intros] = continuous_at_compose[OF _ this, unfolded o_def]"], ["proof (state)\nthis:\n  \\<lbrakk>isCont ?f ?a; ?f ?a \\<in> cball x e\\<rbrakk>\n  \\<Longrightarrow> isCont (\\<lambda>x. u (?f x)) ?a\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"u s = v s\"\n    if solves: \"(\\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = 0)\"\n    and i: \"u x = v x\"\n    and v: \"continuous_on U v\"\n    and s: \"s \\<in> U\" and U: \"x \\<in> U\" \"U \\<subseteq> cball x e\" \"connected U\" \"open U\"\n    for U v s"], ["proof (prove)\ngoal (1 subgoal):\n 1. u s = v s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u s = v s", "define M where \"M = {s \\<in> U. u s = v s}\""], ["proof (state)\nthis:\n  M = {s \\<in> U. u s = v s}\n\ngoal (1 subgoal):\n 1. u s = v s", "have \"x \\<in> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> M", "using i U"], ["proof (prove)\nusing this:\n  u x = v x\n  x \\<in> U\n  U \\<subseteq> cball x e\n  connected U\n  open U\n\ngoal (1 subgoal):\n 1. x \\<in> M", "by (auto simp: M_def)"], ["proof (state)\nthis:\n  x \\<in> M\n\ngoal (1 subgoal):\n 1. u s = v s", "moreover"], ["proof (state)\nthis:\n  x \\<in> M\n\ngoal (1 subgoal):\n 1. u s = v s", "have \"continuous_on U (\\<lambda>s. u s - v s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on U (\\<lambda>s. u s - v s)", "by (auto intro!: continuous_intros v continuous_on_subset[OF e(4) U(2)])"], ["proof (state)\nthis:\n  continuous_on U (\\<lambda>s. u s - v s)\n\ngoal (1 subgoal):\n 1. u s = v s", "from continuous_closedin_preimage[OF this closed_singleton[where a=0]]"], ["proof (chain)\npicking this:\n  closedin (top_of_set U) (U \\<inter> (\\<lambda>s. u s - v s) -` {0::'b})", "have \"closedin (top_of_set U) M\""], ["proof (prove)\nusing this:\n  closedin (top_of_set U) (U \\<inter> (\\<lambda>s. u s - v s) -` {0::'b})\n\ngoal (1 subgoal):\n 1. closedin (top_of_set U) M", "by (auto simp: M_def vimage_def Collect_conj_eq)"], ["proof (state)\nthis:\n  closedin (top_of_set U) M\n\ngoal (1 subgoal):\n 1. u s = v s", "moreover"], ["proof (state)\nthis:\n  closedin (top_of_set U) M\n\ngoal (1 subgoal):\n 1. u s = v s", "have \"\\<And>s. s \\<in> U  \\<Longrightarrow> isCont v s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> U \\<Longrightarrow> isCont v s", "using v"], ["proof (prove)\nusing this:\n  continuous_on U v\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> U \\<Longrightarrow> isCont v s", "unfolding continuous_on_eq_continuous_at[OF \\<open>open U\\<close>]"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>U. isCont v x\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> U \\<Longrightarrow> isCont v s", "by auto"], ["proof (state)\nthis:\n  ?s \\<in> U \\<Longrightarrow> isCont v ?s\n\ngoal (1 subgoal):\n 1. u s = v s", "note [continuous_intros] = continuous_at_compose[OF _ this, unfolded o_def]"], ["proof (state)\nthis:\n  \\<lbrakk>isCont ?f ?a; ?f ?a \\<in> U\\<rbrakk>\n  \\<Longrightarrow> isCont (\\<lambda>x. v (?f x)) ?a\n\ngoal (1 subgoal):\n 1. u s = v s", "{"], ["proof (state)\nthis:\n  \\<lbrakk>isCont ?f ?a; ?f ?a \\<in> U\\<rbrakk>\n  \\<Longrightarrow> isCont (\\<lambda>x. v (?f x)) ?a\n\ngoal (1 subgoal):\n 1. u s = v s", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. u s = v s", "assume \"a \\<in> M\""], ["proof (state)\nthis:\n  a \\<in> M\n\ngoal (1 subgoal):\n 1. u s = v s", "then"], ["proof (chain)\npicking this:\n  a \\<in> M", "have aU: \"a \\<in> U\" and u_v: \"u a = v a\""], ["proof (prove)\nusing this:\n  a \\<in> M\n\ngoal (1 subgoal):\n 1. a \\<in> U &&& u a = v a", "by (auto simp: M_def)"], ["proof (state)\nthis:\n  a \\<in> U\n  u a = v a\n\ngoal (1 subgoal):\n 1. u s = v s", "then"], ["proof (chain)\npicking this:\n  a \\<in> U\n  u a = v a", "have a_ball: \"a \\<in> cball x e\" and a_dist: \"dist x a \\<le> e\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  u a = v a\n\ngoal (1 subgoal):\n 1. a \\<in> cball x e &&& dist x a \\<le> e", "using U"], ["proof (prove)\nusing this:\n  a \\<in> U\n  u a = v a\n  x \\<in> U\n  U \\<subseteq> cball x e\n  connected U\n  open U\n\ngoal (1 subgoal):\n 1. a \\<in> cball x e &&& dist x a \\<le> e", "by auto"], ["proof (state)\nthis:\n  a \\<in> cball x e\n  dist x a \\<le> e\n\ngoal (1 subgoal):\n 1. u s = v s", "then"], ["proof (chain)\npicking this:\n  a \\<in> cball x e\n  dist x a \\<le> e", "have a_S: \"(a, u a) \\<in> S\""], ["proof (prove)\nusing this:\n  a \\<in> cball x e\n  dist x a \\<le> e\n\ngoal (1 subgoal):\n 1. (a, u a) \\<in> S", "using e"], ["proof (prove)\nusing this:\n  a \\<in> cball x e\n  dist x a \\<le> e\n  f (x, u x) = (0::'c)\n  u x = y\n  ?s \\<in> cball x e \\<Longrightarrow> f (?s, u ?s) = (0::'c)\n  continuous_on (cball x e) u\n  (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S\n  0 < e\n  (u has_derivative\n   blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n   (at x)\n  ?s \\<in> cball x e \\<Longrightarrow>\n  f' (?s, u ?s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. (a, u a) \\<in> S", "by auto"], ["proof (state)\nthis:\n  (a, u a) \\<in> S\n\ngoal (1 subgoal):\n 1. u s = v s", "have fa_z: \"f (a, u a) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (a, u a) = (0::'c)", "using \\<open>a \\<in> cball x e\\<close>"], ["proof (prove)\nusing this:\n  a \\<in> cball x e\n\ngoal (1 subgoal):\n 1. f (a, u a) = (0::'c)", "by (auto intro!: e)"], ["proof (state)\nthis:\n  f (a, u a) = (0::'c)\n\ngoal (1 subgoal):\n 1. u s = v s", "from e(8)[OF \\<open>a \\<in> cball _ _\\<close>]"], ["proof (chain)\npicking this:\n  f' (a, u a) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun", "obtain Ta where Ta: \"Ta o\\<^sub>L (f' (a, u a) o\\<^sub>L embed2_blinfun) = 1\\<^sub>L\" \"f' (a, u a) o\\<^sub>L embed2_blinfun o\\<^sub>L Ta = 1\\<^sub>L\""], ["proof (prove)\nusing this:\n  f' (a, u a) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n\ngoal (1 subgoal):\n 1. (\\<And>Ta.\n        \\<lbrakk>Ta o\\<^sub>L (f' (a, u a) o\\<^sub>L embed2_blinfun) =\n                 1\\<^sub>L;\n         f' (a, u a) o\\<^sub>L embed2_blinfun o\\<^sub>L Ta =\n         1\\<^sub>L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: invertibles_blinfun_def ac_simps)"], ["proof (state)\nthis:\n  Ta o\\<^sub>L (f' (a, u a) o\\<^sub>L embed2_blinfun) = 1\\<^sub>L\n  f' (a, u a) o\\<^sub>L embed2_blinfun o\\<^sub>L Ta = 1\\<^sub>L\n\ngoal (1 subgoal):\n 1. u s = v s", "obtain u' e' r'\n        where \"r' > 0\" \"e' > 0\"\n        and u': \"\\<And>v s U. v a = u a \\<Longrightarrow>\n             (\\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = 0) \\<Longrightarrow>\n             continuous_on U v \\<Longrightarrow> s \\<in> U \\<Longrightarrow> U \\<subseteq> cball a e' \\<Longrightarrow> (s, v s) \\<in> ball (a, u a) r' \\<Longrightarrow> u' s = v s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r' e' u'.\n        \\<lbrakk>0 < r'; 0 < e';\n         \\<And>v s U.\n            \\<lbrakk>v a = u a;\n             \\<And>s. s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             continuous_on U v; s \\<in> U; U \\<subseteq> cball a e';\n             (s, v s) \\<in> ball (a, u a) r'\\<rbrakk>\n            \\<Longrightarrow> u' s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule implicit_function_theorem[OF f' a_S \\<open>open S\\<close> D f'Cg[OF a_S] fa_z Ta]; blast)"], ["proof (state)\nthis:\n  0 < r'\n  0 < e'\n  \\<lbrakk>?v a = u a;\n   \\<And>s. s \\<in> ?U \\<Longrightarrow> f (s, ?v s) = (0::'c);\n   continuous_on ?U ?v; ?s \\<in> ?U; ?U \\<subseteq> cball a e';\n   (?s, ?v ?s) \\<in> ball (a, u a) r'\\<rbrakk>\n  \\<Longrightarrow> u' ?s = ?v ?s\n\ngoal (1 subgoal):\n 1. u s = v s", "from openE[OF \\<open>open U\\<close> aU]"], ["proof (chain)\npicking this:\n  (\\<And>e.\n      \\<lbrakk>0 < e; ball a e \\<subseteq> U\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain dU where dU: \"dU > 0\" \"\\<And>s. s \\<in> ball a dU \\<Longrightarrow> s \\<in> U\""], ["proof (prove)\nusing this:\n  (\\<And>e.\n      \\<lbrakk>0 < e; ball a e \\<subseteq> U\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>dU.\n        \\<lbrakk>0 < dU;\n         \\<And>s. s \\<in> ball a dU \\<Longrightarrow> s \\<in> U\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: dist_commute subset_iff)"], ["proof (state)\nthis:\n  0 < dU\n  ?s \\<in> ball a dU \\<Longrightarrow> ?s \\<in> U\n\ngoal (1 subgoal):\n 1. u s = v s", "have v_tendsto: \"((\\<lambda>s. (s, v s)) \\<longlongrightarrow> (a, u a)) (at a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. (s, v s)) \\<midarrow>a\\<rightarrow> (a, u a)", "unfolding u_v"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. (s, v s)) \\<midarrow>a\\<rightarrow> (a, v a)", "by (subst continuous_at[symmetric]) (auto intro!: continuous_intros aU)"], ["proof (state)\nthis:\n  (\\<lambda>s. (s, v s)) \\<midarrow>a\\<rightarrow> (a, u a)\n\ngoal (1 subgoal):\n 1. u s = v s", "from tendstoD[OF v_tendsto \\<open>0 < r'\\<close>, unfolded eventually_at]"], ["proof (chain)\npicking this:\n  \\<exists>d>0.\n     \\<forall>x\\<in>UNIV.\n        x \\<noteq> a \\<and> dist x a < d \\<longrightarrow>\n        dist (x, v x) (a, u a) < r'", "obtain dv where \"dv > 0\" \"s \\<noteq> a \\<Longrightarrow> dist s a < dv \\<Longrightarrow> (s, v s) \\<in> ball (a, u a) r'\" for s"], ["proof (prove)\nusing this:\n  \\<exists>d>0.\n     \\<forall>x\\<in>UNIV.\n        x \\<noteq> a \\<and> dist x a < d \\<longrightarrow>\n        dist (x, v x) (a, u a) < r'\n\ngoal (1 subgoal):\n 1. (\\<And>dv.\n        \\<lbrakk>0 < dv;\n         \\<And>s.\n            \\<lbrakk>s \\<noteq> a; dist s a < dv\\<rbrakk>\n            \\<Longrightarrow> (s, v s) \\<in> ball (a, u a) r'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: dist_commute)"], ["proof (state)\nthis:\n  0 < dv\n  \\<lbrakk>?s \\<noteq> a; dist ?s a < dv\\<rbrakk>\n  \\<Longrightarrow> (?s, v ?s) \\<in> ball (a, u a) r'\n\ngoal (1 subgoal):\n 1. u s = v s", "then"], ["proof (chain)\npicking this:\n  0 < dv\n  \\<lbrakk>?s \\<noteq> a; dist ?s a < dv\\<rbrakk>\n  \\<Longrightarrow> (?s, v ?s) \\<in> ball (a, u a) r'", "have dv: \"dist s a < dv \\<Longrightarrow> (s, v s) \\<in> ball (a, u a) r'\" for s"], ["proof (prove)\nusing this:\n  0 < dv\n  \\<lbrakk>?s \\<noteq> a; dist ?s a < dv\\<rbrakk>\n  \\<Longrightarrow> (?s, v ?s) \\<in> ball (a, u a) r'\n\ngoal (1 subgoal):\n 1. dist s a < dv \\<Longrightarrow> (s, v s) \\<in> ball (a, u a) r'", "by (cases \"s = a\") (auto simp: u_v \\<open>0 < r'\\<close>)"], ["proof (state)\nthis:\n  dist ?s a < dv \\<Longrightarrow> (?s, v ?s) \\<in> ball (a, u a) r'\n\ngoal (1 subgoal):\n 1. u s = v s", "have v_tendsto: \"((\\<lambda>s. (s, u s)) \\<longlongrightarrow> (a, u a)) (at a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. (s, u s)) \\<midarrow>a\\<rightarrow> (a, u a)", "using a_dist"], ["proof (prove)\nusing this:\n  dist x a \\<le> e\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. (s, u s)) \\<midarrow>a\\<rightarrow> (a, u a)", "by (subst continuous_at[symmetric]) (auto intro!: continuous_intros)"], ["proof (state)\nthis:\n  (\\<lambda>s. (s, u s)) \\<midarrow>a\\<rightarrow> (a, u a)\n\ngoal (1 subgoal):\n 1. u s = v s", "from tendstoD[OF v_tendsto \\<open>0 < r'\\<close>, unfolded eventually_at]"], ["proof (chain)\npicking this:\n  \\<exists>d>0.\n     \\<forall>x\\<in>UNIV.\n        x \\<noteq> a \\<and> dist x a < d \\<longrightarrow>\n        dist (x, u x) (a, u a) < r'", "obtain du where \"du > 0\" \"s \\<noteq> a \\<Longrightarrow> dist s a < du \\<Longrightarrow> (s, u s) \\<in> ball (a, u a) r'\" for s"], ["proof (prove)\nusing this:\n  \\<exists>d>0.\n     \\<forall>x\\<in>UNIV.\n        x \\<noteq> a \\<and> dist x a < d \\<longrightarrow>\n        dist (x, u x) (a, u a) < r'\n\ngoal (1 subgoal):\n 1. (\\<And>du.\n        \\<lbrakk>0 < du;\n         \\<And>s.\n            \\<lbrakk>s \\<noteq> a; dist s a < du\\<rbrakk>\n            \\<Longrightarrow> (s, u s) \\<in> ball (a, u a) r'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: dist_commute)"], ["proof (state)\nthis:\n  0 < du\n  \\<lbrakk>?s \\<noteq> a; dist ?s a < du\\<rbrakk>\n  \\<Longrightarrow> (?s, u ?s) \\<in> ball (a, u a) r'\n\ngoal (1 subgoal):\n 1. u s = v s", "then"], ["proof (chain)\npicking this:\n  0 < du\n  \\<lbrakk>?s \\<noteq> a; dist ?s a < du\\<rbrakk>\n  \\<Longrightarrow> (?s, u ?s) \\<in> ball (a, u a) r'", "have du: \"dist s a < du \\<Longrightarrow> (s, u s) \\<in> ball (a, u a) r'\" for s"], ["proof (prove)\nusing this:\n  0 < du\n  \\<lbrakk>?s \\<noteq> a; dist ?s a < du\\<rbrakk>\n  \\<Longrightarrow> (?s, u ?s) \\<in> ball (a, u a) r'\n\ngoal (1 subgoal):\n 1. dist s a < du \\<Longrightarrow> (s, u s) \\<in> ball (a, u a) r'", "by (cases \"s = a\") (auto simp: u_v \\<open>0 < r'\\<close>)"], ["proof (state)\nthis:\n  dist ?s a < du \\<Longrightarrow> (?s, u ?s) \\<in> ball (a, u a) r'\n\ngoal (1 subgoal):\n 1. u s = v s", "{"], ["proof (state)\nthis:\n  dist ?s a < du \\<Longrightarrow> (?s, u ?s) \\<in> ball (a, u a) r'\n\ngoal (1 subgoal):\n 1. u s = v s", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. u s__ = v s__", "assume s: \"s \\<in> ball a (Min {dU, e', dv, du})\""], ["proof (state)\nthis:\n  s \\<in> ball a (Min {dU, e', dv, du})\n\ngoal (1 subgoal):\n 1. u s__ = v s__", "let ?U = \"ball a (Min {dU, e', dv, du})\""], ["proof (state)\ngoal (1 subgoal):\n 1. u s__ = v s__", "have balls: \"ball a (Min {dU, e', dv, du}) \\<subseteq> cball a e'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ball a (Min {dU, e', dv, du}) \\<subseteq> cball a e'", "by auto"], ["proof (state)\nthis:\n  ball a (Min {dU, e', dv, du}) \\<subseteq> cball a e'\n\ngoal (1 subgoal):\n 1. u s__ = v s__", "have dsadv: \"dist s a < dv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist s a < dv", "using s"], ["proof (prove)\nusing this:\n  s \\<in> ball a (Min {dU, e', dv, du})\n\ngoal (1 subgoal):\n 1. dist s a < dv", "by (auto simp: dist_commute)"], ["proof (state)\nthis:\n  dist s a < dv\n\ngoal (1 subgoal):\n 1. u s__ = v s__", "have dsadu: \"dist s a < du\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist s a < du", "using s"], ["proof (prove)\nusing this:\n  s \\<in> ball a (Min {dU, e', dv, du})\n\ngoal (1 subgoal):\n 1. dist s a < du", "by (auto simp: dist_commute)"], ["proof (state)\nthis:\n  dist s a < du\n\ngoal (1 subgoal):\n 1. u s__ = v s__", "have U_U: \"\\<And>s. s \\<in> ball a (Min {dU, e', dv, du}) \\<Longrightarrow> s \\<in> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> ball a (Min {dU, e', dv, du}) \\<Longrightarrow> s \\<in> U", "using dU"], ["proof (prove)\nusing this:\n  0 < dU\n  ?s \\<in> ball a dU \\<Longrightarrow> ?s \\<in> U\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> ball a (Min {dU, e', dv, du}) \\<Longrightarrow> s \\<in> U", "by auto"], ["proof (state)\nthis:\n  ?s \\<in> ball a (Min {dU, e', dv, du}) \\<Longrightarrow> ?s \\<in> U\n\ngoal (1 subgoal):\n 1. u s__ = v s__", "have U_e: \"\\<And>s. s \\<in> ball a (Min {dU, e', dv, du}) \\<Longrightarrow> s \\<in> cball x e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> ball a (Min {dU, e', dv, du}) \\<Longrightarrow>\n       s \\<in> cball x e", "using dU U"], ["proof (prove)\nusing this:\n  0 < dU\n  ?s \\<in> ball a dU \\<Longrightarrow> ?s \\<in> U\n  x \\<in> U\n  U \\<subseteq> cball x e\n  connected U\n  open U\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> ball a (Min {dU, e', dv, du}) \\<Longrightarrow>\n       s \\<in> cball x e", "by (auto simp: dist_commute subset_iff)"], ["proof (state)\nthis:\n  ?s \\<in> ball a (Min {dU, e', dv, du}) \\<Longrightarrow>\n  ?s \\<in> cball x e\n\ngoal (1 subgoal):\n 1. u s__ = v s__", "have cv: \"continuous_on ?U v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on (ball a (Min {dU, e', dv, du})) v", "using v"], ["proof (prove)\nusing this:\n  continuous_on U v\n\ngoal (1 subgoal):\n 1. continuous_on (ball a (Min {dU, e', dv, du})) v", "apply (rule continuous_on_subset)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ball a (Min {dU, e', dv, du}) \\<subseteq> U", "using dU"], ["proof (prove)\nusing this:\n  0 < dU\n  ?s \\<in> ball a dU \\<Longrightarrow> ?s \\<in> U\n\ngoal (1 subgoal):\n 1. ball a (Min {dU, e', dv, du}) \\<subseteq> U", "by auto"], ["proof (state)\nthis:\n  continuous_on (ball a (Min {dU, e', dv, du})) v\n\ngoal (1 subgoal):\n 1. u s__ = v s__", "have cu: \"continuous_on ?U u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on (ball a (Min {dU, e', dv, du})) u", "using e(4)"], ["proof (prove)\nusing this:\n  continuous_on (cball x e) u\n\ngoal (1 subgoal):\n 1. continuous_on (ball a (Min {dU, e', dv, du})) u", "apply (rule continuous_on_subset)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ball a (Min {dU, e', dv, du}) \\<subseteq> cball x e", "using dU U(2)"], ["proof (prove)\nusing this:\n  0 < dU\n  ?s \\<in> ball a dU \\<Longrightarrow> ?s \\<in> U\n  U \\<subseteq> cball x e\n\ngoal (1 subgoal):\n 1. ball a (Min {dU, e', dv, du}) \\<subseteq> cball x e", "by auto"], ["proof (state)\nthis:\n  continuous_on (ball a (Min {dU, e', dv, du})) u\n\ngoal (1 subgoal):\n 1. u s__ = v s__", "from u'[where v=v, OF u_v[symmetric] solves[OF U_U] cv s balls dv[OF dsadv]]\n          u'[where v=u, OF refl              e(3)[OF U_e]   cu s balls du[OF dsadu]]"], ["proof (chain)\npicking this:\n  (\\<And>s.\n      s \\<in> ball a (Min {dU, e', dv, du}) \\<Longrightarrow>\n      s \\<in> ball a (Min {dU, e', dv, du})) \\<Longrightarrow>\n  u' s = v s\n  (\\<And>s.\n      s \\<in> ball a (Min {dU, e', dv, du}) \\<Longrightarrow>\n      s \\<in> ball a (Min {dU, e', dv, du})) \\<Longrightarrow>\n  u' s = u s", "have \"v s = u s\""], ["proof (prove)\nusing this:\n  (\\<And>s.\n      s \\<in> ball a (Min {dU, e', dv, du}) \\<Longrightarrow>\n      s \\<in> ball a (Min {dU, e', dv, du})) \\<Longrightarrow>\n  u' s = v s\n  (\\<And>s.\n      s \\<in> ball a (Min {dU, e', dv, du}) \\<Longrightarrow>\n      s \\<in> ball a (Min {dU, e', dv, du})) \\<Longrightarrow>\n  u' s = u s\n\ngoal (1 subgoal):\n 1. v s = u s", "by auto"], ["proof (state)\nthis:\n  v s = u s\n\ngoal (1 subgoal):\n 1. u s__ = v s__", "}"], ["proof (state)\nthis:\n  ?sa2 \\<in> ball a (Min {dU, e', dv, du}) \\<Longrightarrow> v ?sa2 = u ?sa2\n\ngoal (1 subgoal):\n 1. u s = v s", "then"], ["proof (chain)\npicking this:\n  ?sa2 \\<in> ball a (Min {dU, e', dv, du}) \\<Longrightarrow> v ?sa2 = u ?sa2", "have \"\\<exists>dv>0. \\<forall>s \\<in> ball a dv. v s = u s\""], ["proof (prove)\nusing this:\n  ?sa2 \\<in> ball a (Min {dU, e', dv, du}) \\<Longrightarrow> v ?sa2 = u ?sa2\n\ngoal (1 subgoal):\n 1. \\<exists>dv>0. \\<forall>s\\<in>ball a dv. v s = u s", "using \\<open>0 < dU\\<close> \\<open>0 < e'\\<close> \\<open>0 < dv\\<close> \\<open>0 < du\\<close>"], ["proof (prove)\nusing this:\n  ?sa2 \\<in> ball a (Min {dU, e', dv, du}) \\<Longrightarrow> v ?sa2 = u ?sa2\n  0 < dU\n  0 < e'\n  0 < dv\n  0 < du\n\ngoal (1 subgoal):\n 1. \\<exists>dv>0. \\<forall>s\\<in>ball a dv. v s = u s", "by (auto intro!: exI[where x=\"(Min {dU, e', dv, du})\"])"], ["proof (state)\nthis:\n  \\<exists>dv>0. \\<forall>s\\<in>ball a dv. v s = u s\n\ngoal (1 subgoal):\n 1. u s = v s", "}"], ["proof (state)\nthis:\n  ?a2 \\<in> M \\<Longrightarrow>\n  \\<exists>dv>0. \\<forall>s\\<in>ball ?a2 dv. v s = u s\n\ngoal (1 subgoal):\n 1. u s = v s", "note ex = this"], ["proof (state)\nthis:\n  ?a2 \\<in> M \\<Longrightarrow>\n  \\<exists>dv>0. \\<forall>s\\<in>ball ?a2 dv. v s = u s\n\ngoal (1 subgoal):\n 1. u s = v s", "have \"openin (top_of_set U) M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. openin (top_of_set U) M", "unfolding openin_contains_ball"], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<subseteq> U \\<and>\n    (\\<forall>x\\<in>M. \\<exists>e>0. ball x e \\<inter> U \\<subseteq> M)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. M \\<subseteq> U\n 2. \\<forall>x\\<in>M. \\<exists>e>0. ball x e \\<inter> U \\<subseteq> M", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<subseteq> U", "using U"], ["proof (prove)\nusing this:\n  x \\<in> U\n  U \\<subseteq> cball x e\n  connected U\n  open U\n\ngoal (1 subgoal):\n 1. M \\<subseteq> U", "by (auto simp: M_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>M. \\<exists>e>0. ball x e \\<inter> U \\<subseteq> M", "apply (auto simp:)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> M \\<Longrightarrow>\n       \\<exists>e>0. ball x e \\<inter> U \\<subseteq> M", "apply (drule ex)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>dv>0. \\<forall>s\\<in>ball x dv. v s = u s \\<Longrightarrow>\n       \\<exists>e>0. ball x e \\<inter> U \\<subseteq> M", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x dv.\n       \\<lbrakk>0 < dv; \\<forall>s\\<in>ball x dv. v s = u s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e>0. ball x e \\<inter> U \\<subseteq> M", "subgoal for x d"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < d; \\<forall>s\\<in>ball x d. v s = u s\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e>0. ball x e \\<inter> U \\<subseteq> M", "by (rule exI[where x=d]) (auto simp: M_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  openin (top_of_set U) M\n\ngoal (1 subgoal):\n 1. u s = v s", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> M\n  closedin (top_of_set U) M\n  openin (top_of_set U) M", "have \"M = U\""], ["proof (prove)\nusing this:\n  x \\<in> M\n  closedin (top_of_set U) M\n  openin (top_of_set U) M\n\ngoal (1 subgoal):\n 1. M = U", "using \\<open>connected U\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> M\n  closedin (top_of_set U) M\n  openin (top_of_set U) M\n  connected U\n\ngoal (1 subgoal):\n 1. M = U", "by (auto simp: connected_clopen)"], ["proof (state)\nthis:\n  M = U\n\ngoal (1 subgoal):\n 1. u s = v s", "with \\<open>s \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> U\n  M = U", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> U\n  M = U\n\ngoal (1 subgoal):\n 1. u s = v s", "by (auto simp: M_def)"], ["proof (state)\nthis:\n  u s = v s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>s. s \\<in> ?U \\<Longrightarrow> f (s, ?v s) = (0::'c);\n   u x = ?v x; continuous_on ?U ?v; ?s \\<in> ?U; x \\<in> ?U;\n   ?U \\<subseteq> cball x e; connected ?U; open ?U\\<rbrakk>\n  \\<Longrightarrow> u ?s = ?v ?s\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>f (x, u x) = (0::'c); u x = y;\n         \\<And>s. s \\<in> cball x e \\<Longrightarrow> f (s, u s) = (0::'c);\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S; 0 < e;\n         (u has_derivative\n          blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            f' (s, u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun;\n         \\<And>U v s.\n            \\<lbrakk>\\<And>s.\n                        s \\<in> U \\<Longrightarrow> f (s, v s) = (0::'c);\n             u x = v x; continuous_on U v; s \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u s = v s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from e this"], ["proof (chain)\npicking this:\n  f (x, u x) = (0::'c)\n  u x = y\n  ?s \\<in> cball x e \\<Longrightarrow> f (?s, u ?s) = (0::'c)\n  continuous_on (cball x e) u\n  (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S\n  0 < e\n  (u has_derivative\n   blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n   (at x)\n  ?s \\<in> cball x e \\<Longrightarrow>\n  f' (?s, u ?s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n  \\<lbrakk>\\<And>s. s \\<in> ?U \\<Longrightarrow> f (s, ?v s) = (0::'c);\n   u x = ?v x; continuous_on ?U ?v; ?s \\<in> ?U; x \\<in> ?U;\n   ?U \\<subseteq> cball x e; connected ?U; open ?U\\<rbrakk>\n  \\<Longrightarrow> u ?s = ?v ?s", "show ?thesis"], ["proof (prove)\nusing this:\n  f (x, u x) = (0::'c)\n  u x = y\n  ?s \\<in> cball x e \\<Longrightarrow> f (?s, u ?s) = (0::'c)\n  continuous_on (cball x e) u\n  (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> S\n  0 < e\n  (u has_derivative\n   blinfun_apply (- T o\\<^sub>L f' (x, y) o\\<^sub>L embed1_blinfun))\n   (at x)\n  ?s \\<in> cball x e \\<Longrightarrow>\n  f' (?s, u ?s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun\n  \\<lbrakk>\\<And>s. s \\<in> ?U \\<Longrightarrow> f (s, ?v s) = (0::'c);\n   u x = ?v x; continuous_on ?U ?v; ?s \\<in> ?U; x \\<in> ?U;\n   ?U \\<subseteq> cball x e; connected ?U; open ?U\\<rbrakk>\n  \\<Longrightarrow> u ?s = ?v ?s\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma uniform_limit_compose:\n  assumes ul: \"uniform_limit T f l F\"\n  assumes uc: \"uniformly_continuous_on S s\"\n  assumes ev: \"\\<forall>\\<^sub>F x in F. f x ` T \\<subseteq> S\"\n  assumes subs: \"l ` T \\<subseteq> S\"\n  shows  \"uniform_limit T (\\<lambda>i x. s (f i x)) (\\<lambda>x. s (l x)) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit T (\\<lambda>i x. s (f i x)) (\\<lambda>x. s (l x)) F", "proof (rule uniform_limitI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in F.\n          \\<forall>x\\<in>T. dist (s (f n x)) (s (l x)) < e", "fix e::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in F.\n          \\<forall>x\\<in>T. dist (s (f n x)) (s (l x)) < e", "assume \"e > 0\""], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in F.\n          \\<forall>x\\<in>T. dist (s (f n x)) (s (l x)) < e", "from uniformly_continuous_onE[OF uc \\<open>e > 0\\<close>]"], ["proof (chain)\npicking this:\n  (\\<And>d.\n      \\<lbrakk>0 < d;\n       \\<And>x x'.\n          \\<lbrakk>x \\<in> S; x' \\<in> S; dist x' x < d\\<rbrakk>\n          \\<Longrightarrow> dist (s x') (s x) < e\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain d where d: \"0 < d\" \"\\<And>t t'. t \\<in> S \\<Longrightarrow> t' \\<in> S \\<Longrightarrow> dist t' t < d \\<Longrightarrow> dist (s t') (s t) < e\""], ["proof (prove)\nusing this:\n  (\\<And>d.\n      \\<lbrakk>0 < d;\n       \\<And>x x'.\n          \\<lbrakk>x \\<in> S; x' \\<in> S; dist x' x < d\\<rbrakk>\n          \\<Longrightarrow> dist (s x') (s x) < e\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>0 < d;\n         \\<And>t t'.\n            \\<lbrakk>t \\<in> S; t' \\<in> S; dist t' t < d\\<rbrakk>\n            \\<Longrightarrow> dist (s t') (s t) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < d\n  \\<lbrakk>?t \\<in> S; ?t' \\<in> S; dist ?t' ?t < d\\<rbrakk>\n  \\<Longrightarrow> dist (s ?t') (s ?t) < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in F.\n          \\<forall>x\\<in>T. dist (s (f n x)) (s (l x)) < e", "from uniform_limitD[OF ul \\<open>0 < d\\<close>]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in F. \\<forall>x\\<in>T. dist (f n x) (l x) < d", "have \"\\<forall>\\<^sub>F n in F. \\<forall>x\\<in>T. dist (f n x) (l x) < d\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in F. \\<forall>x\\<in>T. dist (f n x) (l x) < d\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F. \\<forall>x\\<in>T. dist (f n x) (l x) < d", "."], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in F. \\<forall>x\\<in>T. dist (f n x) (l x) < d\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in F.\n          \\<forall>x\\<in>T. dist (s (f n x)) (s (l x)) < e", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in F. \\<forall>x\\<in>T. dist (f n x) (l x) < d", "show \"\\<forall>\\<^sub>F n in F. \\<forall>x\\<in>T. dist (s (f n x)) (s (l x)) < e\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in F. \\<forall>x\\<in>T. dist (f n x) (l x) < d\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F.\n       \\<forall>x\\<in>T. dist (s (f n x)) (s (l x)) < e", "using ev"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in F. \\<forall>x\\<in>T. dist (f n x) (l x) < d\n  \\<forall>\\<^sub>F x in F. f x ` T \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F.\n       \\<forall>x\\<in>T. dist (s (f n x)) (s (l x)) < e", "by eventually_elim (use d subs in force)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in F. \\<forall>x\\<in>T. dist (s (f n x)) (s (l x)) < e\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  uniform_limit_in_open:\n  fixes l::\"'a::topological_space\\<Rightarrow>'b::heine_borel\"\n  assumes ul: \"uniform_limit T f l (at x)\"\n  assumes cont: \"continuous_on T l\"\n  assumes compact: \"compact T\" and T_ne: \"T \\<noteq> {}\"\n  assumes B: \"open B\"\n  assumes mem: \"l ` T \\<subseteq> B\"\n  shows \"\\<forall>\\<^sub>F y in at x. \\<forall>t \\<in> T. f y t \\<in> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<in> B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<in> B", "have l_ne: \"l ` T \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l ` T \\<noteq> {}", "using T_ne"], ["proof (prove)\nusing this:\n  T \\<noteq> {}\n\ngoal (1 subgoal):\n 1. l ` T \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  l ` T \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<in> B", "have \"compact (l ` T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact (l ` T)", "by (auto intro!: compact_continuous_image cont compact)"], ["proof (state)\nthis:\n  compact (l ` T)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<in> B", "from compact_in_open_separated[OF l_ne this B mem]"], ["proof (chain)\npicking this:\n  (\\<And>e.\n      \\<lbrakk>0 < e; {x. infdist x (l ` T) \\<le> e} \\<subseteq> B\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain e where \"e > 0\" \"{x. infdist x (l ` T) \\<le> e} \\<subseteq> B\""], ["proof (prove)\nusing this:\n  (\\<And>e.\n      \\<lbrakk>0 < e; {x. infdist x (l ` T) \\<le> e} \\<subseteq> B\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         {x. infdist x (l ` T) \\<le> e} \\<subseteq> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < e\n  {x. infdist x (l ` T) \\<le> e} \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<in> B", "from uniform_limitD[OF ul \\<open>0 < e\\<close>]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in at x. \\<forall>x\\<in>T. dist (f n x) (l x) < e", "have \"\\<forall>\\<^sub>F n in at x. \\<forall>x\\<in>T. dist (f n x) (l x) < e\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in at x. \\<forall>x\\<in>T. dist (f n x) (l x) < e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in at x. \\<forall>x\\<in>T. dist (f n x) (l x) < e", "."], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in at x. \\<forall>x\\<in>T. dist (f n x) (l x) < e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<in> B", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in at x. \\<forall>x\\<in>T. dist (f n x) (l x) < e", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in at x. \\<forall>x\\<in>T. dist (f n x) (l x) < e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<in> B", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<forall>ya\\<in>T. dist (f y ya) (l ya) < e \\<Longrightarrow>\n       \\<forall>t\\<in>T. f y t \\<in> B", "case (elim y)"], ["proof (state)\nthis:\n  \\<forall>ya\\<in>T. dist (f y ya) (l ya) < e\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<forall>ya\\<in>T. dist (f y ya) (l ya) < e \\<Longrightarrow>\n       \\<forall>t\\<in>T. f y t \\<in> B", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>T. f y t \\<in> B", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> T \\<Longrightarrow> f y t \\<in> B", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> T \\<Longrightarrow> f y t \\<in> B", "assume \"t \\<in> T\""], ["proof (state)\nthis:\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> T \\<Longrightarrow> f y t \\<in> B", "have \"infdist (f y t) (l ` T) \\<le> dist (f y t) (l t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist (f y t) (l ` T) \\<le> dist (f y t) (l t)", "by (rule infdist_le) (use \\<open>t \\<in> T\\<close> in auto)"], ["proof (state)\nthis:\n  infdist (f y t) (l ` T) \\<le> dist (f y t) (l t)\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> T \\<Longrightarrow> f y t \\<in> B", "also"], ["proof (state)\nthis:\n  infdist (f y t) (l ` T) \\<le> dist (f y t) (l t)\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> T \\<Longrightarrow> f y t \\<in> B", "have \"\\<dots> < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f y t) (l t) < e", "using elim \\<open>t \\<in> T\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>ya\\<in>T. dist (f y ya) (l ya) < e\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. dist (f y t) (l t) < e", "by auto"], ["proof (state)\nthis:\n  dist (f y t) (l t) < e\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> T \\<Longrightarrow> f y t \\<in> B", "finally"], ["proof (chain)\npicking this:\n  infdist (f y t) (l ` T) < e", "have \"infdist (f y t) (l ` T) \\<le> e\""], ["proof (prove)\nusing this:\n  infdist (f y t) (l ` T) < e\n\ngoal (1 subgoal):\n 1. infdist (f y t) (l ` T) \\<le> e", "by simp"], ["proof (state)\nthis:\n  infdist (f y t) (l ` T) \\<le> e\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> T \\<Longrightarrow> f y t \\<in> B", "then"], ["proof (chain)\npicking this:\n  infdist (f y t) (l ` T) \\<le> e", "have \"(f y t) \\<in> {x. infdist x (l ` T) \\<le> e}\""], ["proof (prove)\nusing this:\n  infdist (f y t) (l ` T) \\<le> e\n\ngoal (1 subgoal):\n 1. f y t \\<in> {x. infdist x (l ` T) \\<le> e}", "by (auto )"], ["proof (state)\nthis:\n  f y t \\<in> {x. infdist x (l ` T) \\<le> e}\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> T \\<Longrightarrow> f y t \\<in> B", "also"], ["proof (state)\nthis:\n  f y t \\<in> {x. infdist x (l ` T) \\<le> e}\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> T \\<Longrightarrow> f y t \\<in> B", "note \\<open>\\<dots> \\<subseteq> B\\<close>"], ["proof (state)\nthis:\n  {x. infdist x (l ` T) \\<le> e} \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> T \\<Longrightarrow> f y t \\<in> B", "finally"], ["proof (chain)\npicking this:\n  f y t \\<in> B", "show \"f y t \\<in> B\""], ["proof (prove)\nusing this:\n  f y t \\<in> B\n\ngoal (1 subgoal):\n 1. f y t \\<in> B", "."], ["proof (state)\nthis:\n  f y t \\<in> B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>t\\<in>T. f y t \\<in> B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<in> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  order_uniform_limitD1:\n  fixes l::\"'a::topological_space\\<Rightarrow>real\"\\<comment> \\<open>TODO: generalize?!\\<close>\n  assumes ul: \"uniform_limit T f l (at x)\"\n  assumes cont: \"continuous_on T l\"\n  assumes compact: \"compact T\"\n  assumes less: \"\\<And>t. t \\<in> T \\<Longrightarrow> l t < b\"\n  shows \"\\<forall>\\<^sub>F y in at x. \\<forall>t \\<in> T. f y t < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b", "assume ne: \"T \\<noteq> {}\""], ["proof (state)\nthis:\n  T \\<noteq> {}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b", "from compact_attains_sup[OF compact_continuous_image[OF cont compact], unfolded image_is_empty, OF ne]"], ["proof (chain)\npicking this:\n  \\<exists>s\\<in>l ` T. \\<forall>t\\<in>l ` T. t \\<le> s", "obtain tmax where tmax: \"tmax \\<in> T\" \"\\<And>s. s \\<in> T \\<Longrightarrow> l s \\<le> l tmax\""], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>l ` T. \\<forall>t\\<in>l ` T. t \\<le> s\n\ngoal (1 subgoal):\n 1. (\\<And>tmax.\n        \\<lbrakk>tmax \\<in> T;\n         \\<And>s. s \\<in> T \\<Longrightarrow> l s \\<le> l tmax\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  tmax \\<in> T\n  ?s \\<in> T \\<Longrightarrow> l ?s \\<le> l tmax\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b", "have \"b - l tmax > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < b - l tmax", "using ne tmax less"], ["proof (prove)\nusing this:\n  T \\<noteq> {}\n  tmax \\<in> T\n  ?s \\<in> T \\<Longrightarrow> l ?s \\<le> l tmax\n  ?t \\<in> T \\<Longrightarrow> l ?t < b\n\ngoal (1 subgoal):\n 1. 0 < b - l tmax", "by auto"], ["proof (state)\nthis:\n  0 < b - l tmax\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b", "from uniform_limitD[OF ul this]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in at x.\n     \\<forall>x\\<in>T. dist (f n x) (l x) < b - l tmax", "have \"\\<forall>\\<^sub>F n in at x. \\<forall>x\\<in>T. dist (f n x) (l x) < b - l tmax\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in at x.\n     \\<forall>x\\<in>T. dist (f n x) (l x) < b - l tmax\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in at x.\n       \\<forall>x\\<in>T. dist (f n x) (l x) < b - l tmax", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in at x.\n     \\<forall>x\\<in>T. dist (f n x) (l x) < b - l tmax\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in at x.\n     \\<forall>x\\<in>T. dist (f n x) (l x) < b - l tmax", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in at x.\n     \\<forall>x\\<in>T. dist (f n x) (l x) < b - l tmax\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b", "apply eventually_elim"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<forall>ya\\<in>T.\n          dist (f y ya) (l ya) < b - l tmax \\<Longrightarrow>\n       \\<forall>t\\<in>T. f y t < b", "using tmax"], ["proof (prove)\nusing this:\n  tmax \\<in> T\n  ?s \\<in> T \\<Longrightarrow> l ?s \\<le> l tmax\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<forall>ya\\<in>T.\n          dist (f y ya) (l ya) < b - l tmax \\<Longrightarrow>\n       \\<forall>t\\<in>T. f y t < b", "by (force simp: dist_real_def abs_real_def split: if_splits)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b\n\ngoal (1 subgoal):\n 1. \\<not> T \\<noteq> {} \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b", "qed auto"], ["", "lemma\n  order_uniform_limitD2:\n  fixes l::\"'a::topological_space\\<Rightarrow>real\"\\<comment> \\<open>TODO: generalize?!\\<close>\n  assumes ul: \"uniform_limit T f l (at x)\"\n  assumes cont: \"continuous_on T l\"\n  assumes compact: \"compact T\"\n  assumes less: \"\\<And>t. t \\<in> T \\<Longrightarrow> l t > b\"\n  shows \"\\<forall>\\<^sub>F y in at x. \\<forall>t \\<in> T. f y t > b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. b < f y t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. b < f y t", "have \"\\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. (- f) y t < - b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. (- f) y t < - b", "by (rule order_uniform_limitD1[of \"- f\" T \"-l\" x \"- b\"])\n      (auto simp: assms fun_Compl_def intro!: uniform_limit_eq_intros continuous_intros)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. (- f) y t < - b\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. b < f y t", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. (- f) y t < - b", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. (- f) y t < - b\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. b < f y t", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. b < f y t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma continuous_on_avoid_cases:\n  fixes l::\"'b::topological_space \\<Rightarrow> 'a::linear_continuum_topology\"\\<comment> \\<open>TODO: generalize!\\<close>\n  assumes cont: \"continuous_on T l\" and conn: \"connected T\"\n  assumes avoid: \"\\<And>t. t \\<in> T \\<Longrightarrow> l t \\<noteq> b\"\n  obtains \"\\<And>t. t \\<in> T \\<Longrightarrow> l t < b\" | \"\\<And>t. t \\<in> T \\<Longrightarrow> l t > b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<And>t.\n                 t \\<in> T \\<Longrightarrow> l t < b) \\<Longrightarrow>\n             thesis;\n     (\\<And>t. t \\<in> T \\<Longrightarrow> b < l t) \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply atomize_elim"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>t. t \\<in> T \\<longrightarrow> l t < b) \\<or>\n    (\\<forall>t. t \\<in> T \\<longrightarrow> b < l t)", "using connected_continuous_image[OF cont conn]"], ["proof (prove)\nusing this:\n  connected (l ` T)\n\ngoal (1 subgoal):\n 1. (\\<forall>t. t \\<in> T \\<longrightarrow> l t < b) \\<or>\n    (\\<forall>t. t \\<in> T \\<longrightarrow> b < l t)", "using avoid"], ["proof (prove)\nusing this:\n  connected (l ` T)\n  ?t \\<in> T \\<Longrightarrow> l ?t \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<forall>t. t \\<in> T \\<longrightarrow> l t < b) \\<or>\n    (\\<forall>t. t \\<in> T \\<longrightarrow> b < l t)", "unfolding connected_iff_interval"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>l ` T.\n     \\<forall>y\\<in>l ` T.\n        \\<forall>z\\<ge>x. z \\<le> y \\<longrightarrow> z \\<in> l ` T\n  ?t \\<in> T \\<Longrightarrow> l ?t \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<forall>t. t \\<in> T \\<longrightarrow> l t < b) \\<or>\n    (\\<forall>t. t \\<in> T \\<longrightarrow> b < l t)", "apply (auto simp: image_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t ta.\n       \\<lbrakk>\\<forall>x\\<in>T.\n                   \\<forall>y\\<in>T.\n                      \\<forall>z\\<ge>l x.\n                         z \\<le> l y \\<longrightarrow>\n                         (\\<exists>x\\<in>T. z = l x);\n        \\<And>t. t \\<in> T \\<Longrightarrow> l t \\<noteq> b; t \\<in> T;\n        \\<not> b < l t; ta \\<in> T\\<rbrakk>\n       \\<Longrightarrow> l ta < b", "using leI"], ["proof (prove)\nusing this:\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n\ngoal (1 subgoal):\n 1. \\<And>t ta.\n       \\<lbrakk>\\<forall>x\\<in>T.\n                   \\<forall>y\\<in>T.\n                      \\<forall>z\\<ge>l x.\n                         z \\<le> l y \\<longrightarrow>\n                         (\\<exists>x\\<in>T. z = l x);\n        \\<And>t. t \\<in> T \\<Longrightarrow> l t \\<noteq> b; t \\<in> T;\n        \\<not> b < l t; ta \\<in> T\\<rbrakk>\n       \\<Longrightarrow> l ta < b", "by blast"], ["", "lemma\n  order_uniform_limit_ne:\n  fixes l::\"'a::topological_space\\<Rightarrow>real\"\\<comment> \\<open>TODO: generalize?!\\<close>\n  assumes ul: \"uniform_limit T f l (at x)\"\n  assumes cont: \"continuous_on T l\"\n  assumes compact: \"compact T\" and conn: \"connected T\"\n  assumes ne: \"\\<And>t. t \\<in> T \\<Longrightarrow> l t \\<noteq> b\"\n  shows \"\\<forall>\\<^sub>F y in at x. \\<forall>t \\<in> T. f y t \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b", "from continuous_on_avoid_cases[OF cont conn ne]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>t. t \\<in> T \\<Longrightarrow> t \\<in> T;\n   (\\<And>t. t \\<in> T \\<Longrightarrow> l t < b) \\<Longrightarrow> ?thesis;\n   (\\<And>t. t \\<in> T \\<Longrightarrow> b < l t) \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "consider \"(\\<And>t. t \\<in> T \\<Longrightarrow> l t < b)\" | \"(\\<And>t. t \\<in> T \\<Longrightarrow> l t > b)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>t. t \\<in> T \\<Longrightarrow> t \\<in> T;\n   (\\<And>t. t \\<in> T \\<Longrightarrow> l t < b) \\<Longrightarrow> ?thesis;\n   (\\<And>t. t \\<in> T \\<Longrightarrow> b < l t) \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<And>t.\n                 t \\<in> T \\<Longrightarrow> l t < b) \\<Longrightarrow>\n             thesis;\n     (\\<And>t. t \\<in> T \\<Longrightarrow> b < l t) \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>(\\<And>t. t \\<in> T \\<Longrightarrow> l t < b) \\<Longrightarrow>\n           ?thesis;\n   (\\<And>t. t \\<in> T \\<Longrightarrow> b < l t) \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>(\\<And>t. t \\<in> T \\<Longrightarrow> l t < b) \\<Longrightarrow>\n           ?thesis;\n   (\\<And>t. t \\<in> T \\<Longrightarrow> b < l t) \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>(\\<And>t. t \\<in> T \\<Longrightarrow> l t < b) \\<Longrightarrow>\n           ?thesis;\n   (\\<And>t. t \\<in> T \\<Longrightarrow> b < l t) \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>t. t \\<in> T \\<Longrightarrow> l t < b) \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b\n 2. (\\<And>t. t \\<in> T \\<Longrightarrow> b < l t) \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b", "case 1"], ["proof (state)\nthis:\n  ?t \\<in> T \\<Longrightarrow> l ?t < b\n\ngoal (2 subgoals):\n 1. (\\<And>t. t \\<in> T \\<Longrightarrow> l t < b) \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b\n 2. (\\<And>t. t \\<in> T \\<Longrightarrow> b < l t) \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b", "from order_uniform_limitD1[OF ul cont compact 1]"], ["proof (chain)\npicking this:\n  (\\<And>t. t \\<in> T \\<Longrightarrow> t \\<in> T) \\<Longrightarrow>\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b", "have \"\\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b\""], ["proof (prove)\nusing this:\n  (\\<And>t. t \\<in> T \\<Longrightarrow> t \\<in> T) \\<Longrightarrow>\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b", "by simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b\n\ngoal (2 subgoals):\n 1. (\\<And>t. t \\<in> T \\<Longrightarrow> l t < b) \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b\n 2. (\\<And>t. t \\<in> T \\<Longrightarrow> b < l t) \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t < b\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<And>t. t \\<in> T \\<Longrightarrow> b < l t) \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>t. t \\<in> T \\<Longrightarrow> b < l t) \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b", "case 2"], ["proof (state)\nthis:\n  ?t \\<in> T \\<Longrightarrow> b < l ?t\n\ngoal (1 subgoal):\n 1. (\\<And>t. t \\<in> T \\<Longrightarrow> b < l t) \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b", "from order_uniform_limitD2[OF ul cont compact 2]"], ["proof (chain)\npicking this:\n  (\\<And>t. t \\<in> T \\<Longrightarrow> t \\<in> T) \\<Longrightarrow>\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. b < f y t", "have \"\\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t > b\""], ["proof (prove)\nusing this:\n  (\\<And>t. t \\<in> T \\<Longrightarrow> t \\<in> T) \\<Longrightarrow>\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. b < f y t\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. b < f y t", "by simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. b < f y t\n\ngoal (1 subgoal):\n 1. (\\<And>t. t \\<in> T \\<Longrightarrow> b < l t) \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. b < f y t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. b < f y t\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>T. f y t \\<noteq> b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma open_cballE:\n  assumes \"open S\" \"x\\<in>S\"\n  obtains e where \"e>0\" \"cball x e \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; cball x e \\<subseteq> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  open S\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; cball x e \\<subseteq> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding open_contains_cball"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>S. \\<exists>e>0. cball x e \\<subseteq> S\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; cball x e \\<subseteq> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "lemma pos_half_less: fixes x::real shows \"x > 0 \\<Longrightarrow> x / 2 < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow> x / 2 < x", "by auto"], ["", "lemma closed_levelset: \"closed {x. s x = (c::'a::t1_space)}\" if \"continuous_on UNIV s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed {x. s x = c}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. closed {x. s x = c}", "have \"{x. s x = c} = s -` {c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. s x = c} = s -` {c}", "by auto"], ["proof (state)\nthis:\n  {x. s x = c} = s -` {c}\n\ngoal (1 subgoal):\n 1. closed {x. s x = c}", "also"], ["proof (state)\nthis:\n  {x. s x = c} = s -` {c}\n\ngoal (1 subgoal):\n 1. closed {x. s x = c}", "have \"closed \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed (s -` {c})", "apply (rule closed_vimage)"], ["proof (prove)\ngoal (2 subgoals):\n 1. closed {c}\n 2. continuous_on UNIV s", "apply (rule closed_singleton)"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV s", "apply (rule that)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  closed (s -` {c})\n\ngoal (1 subgoal):\n 1. closed {x. s x = c}", "finally"], ["proof (chain)\npicking this:\n  closed {x. s x = c}", "show ?thesis"], ["proof (prove)\nusing this:\n  closed {x. s x = c}\n\ngoal (1 subgoal):\n 1. closed {x. s x = c}", "."], ["proof (state)\nthis:\n  closed {x. s x = c}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma closed_levelset_within: \"closed {x \\<in> S. s x = (c::'a::t1_space)}\" if \"continuous_on S s\" \"closed S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed {x \\<in> S. s x = c}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. closed {x \\<in> S. s x = c}", "have \"{x \\<in> S. s x = c} = s -` {c} \\<inter> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> S. s x = c} = s -` {c} \\<inter> S", "by auto"], ["proof (state)\nthis:\n  {x \\<in> S. s x = c} = s -` {c} \\<inter> S\n\ngoal (1 subgoal):\n 1. closed {x \\<in> S. s x = c}", "also"], ["proof (state)\nthis:\n  {x \\<in> S. s x = c} = s -` {c} \\<inter> S\n\ngoal (1 subgoal):\n 1. closed {x \\<in> S. s x = c}", "have \"closed \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed (s -` {c} \\<inter> S)", "apply (rule continuous_on_closed_vimageI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. closed S\n 2. continuous_on S s\n 3. closed {c}", "apply (rule that)"], ["proof (prove)\ngoal (2 subgoals):\n 1. continuous_on S s\n 2. closed {c}", "apply (rule that)"], ["proof (prove)\ngoal (1 subgoal):\n 1. closed {c}", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  closed (s -` {c} \\<inter> S)\n\ngoal (1 subgoal):\n 1. closed {x \\<in> S. s x = c}", "finally"], ["proof (chain)\npicking this:\n  closed {x \\<in> S. s x = c}", "show ?thesis"], ["proof (prove)\nusing this:\n  closed {x \\<in> S. s x = c}\n\ngoal (1 subgoal):\n 1. closed {x \\<in> S. s x = c}", "."], ["proof (state)\nthis:\n  closed {x \\<in> S. s x = c}\n\ngoal:\nNo subgoals!", "qed"], ["", "context c1_on_open_euclidean\nbegin"], ["", "lemma open_existence_ivlE:\n  assumes \"t \\<in> existence_ivl0 x\" \"t \\<ge> 0\"\n  obtains e where \"e > 0\" \"cball x e \\<times> {0 .. t + e} \\<subseteq> Sigma X existence_ivl0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         cball x e \\<times> {0..t + e}\n         \\<subseteq> Sigma X existence_ivl0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         cball x e \\<times> {0..t + e}\n         \\<subseteq> Sigma X existence_ivl0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  t \\<in> existence_ivl0 x\n  0 \\<le> t", "have \"(x, t) \\<in> Sigma X existence_ivl0\""], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl0 x\n  0 \\<le> t\n\ngoal (1 subgoal):\n 1. (x, t) \\<in> Sigma X existence_ivl0", "by auto"], ["proof (state)\nthis:\n  (x, t) \\<in> Sigma X existence_ivl0\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         cball x e \\<times> {0..t + e}\n         \\<subseteq> Sigma X existence_ivl0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from open_cballE[OF open_state_space this]"], ["proof (chain)\npicking this:\n  (\\<And>e.\n      \\<lbrakk>0 < e;\n       cball (x, t) e \\<subseteq> Sigma X existence_ivl0\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain e0' where e0: \"0 < e0'\" \"cball (x, t) e0' \\<subseteq> Sigma X existence_ivl0\""], ["proof (prove)\nusing this:\n  (\\<And>e.\n      \\<lbrakk>0 < e;\n       cball (x, t) e \\<subseteq> Sigma X existence_ivl0\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>e0'.\n        \\<lbrakk>0 < e0';\n         cball (x, t) e0' \\<subseteq> Sigma X existence_ivl0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < e0'\n  cball (x, t) e0' \\<subseteq> Sigma X existence_ivl0\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         cball x e \\<times> {0..t + e}\n         \\<subseteq> Sigma X existence_ivl0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define e0 where \"e0 = (e0' / 2)\""], ["proof (state)\nthis:\n  e0 = e0' / 2\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         cball x e \\<times> {0..t + e}\n         \\<subseteq> Sigma X existence_ivl0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from cball_times_subset[of x e0' t] pos_half_less[OF \\<open>0 < e0'\\<close>] half_gt_zero[OF \\<open>0 < e0'\\<close>] e0"], ["proof (chain)\npicking this:\n  cball x (e0' / 2) \\<times> cball t (e0' / 2) \\<subseteq> cball (x, t) e0'\n  e0' / 2 < e0'\n  0 < e0' / 2\n  0 < e0'\n  cball (x, t) e0' \\<subseteq> Sigma X existence_ivl0", "have \"cball x e0 \\<times> cball t e0 \\<subseteq> Sigma X existence_ivl0\" \"0 < e0\" \"e0 < e0'\""], ["proof (prove)\nusing this:\n  cball x (e0' / 2) \\<times> cball t (e0' / 2) \\<subseteq> cball (x, t) e0'\n  e0' / 2 < e0'\n  0 < e0' / 2\n  0 < e0'\n  cball (x, t) e0' \\<subseteq> Sigma X existence_ivl0\n\ngoal (1 subgoal):\n 1. cball x e0 \\<times> cball t e0 \\<subseteq> Sigma X existence_ivl0 &&&\n    0 < e0 &&& e0 < e0'", "unfolding e0_def"], ["proof (prove)\nusing this:\n  cball x (e0' / 2) \\<times> cball t (e0' / 2) \\<subseteq> cball (x, t) e0'\n  e0' / 2 < e0'\n  0 < e0' / 2\n  0 < e0'\n  cball (x, t) e0' \\<subseteq> Sigma X existence_ivl0\n\ngoal (1 subgoal):\n 1. cball x (e0' / 2) \\<times> cball t (e0' / 2)\n    \\<subseteq> Sigma X existence_ivl0 &&&\n    0 < e0' / 2 &&& e0' / 2 < e0'", "by auto"], ["proof (state)\nthis:\n  cball x e0 \\<times> cball t e0 \\<subseteq> Sigma X existence_ivl0\n  0 < e0\n  e0 < e0'\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         cball x e \\<times> {0..t + e}\n         \\<subseteq> Sigma X existence_ivl0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  cball x e0 \\<times> cball t e0 \\<subseteq> Sigma X existence_ivl0\n  0 < e0\n  e0 < e0'", "have \"e0 > 0\" \"cball x e0 \\<times> {0..t + e0} \\<subseteq> Sigma X existence_ivl0\""], ["proof (prove)\nusing this:\n  cball x e0 \\<times> cball t e0 \\<subseteq> Sigma X existence_ivl0\n  0 < e0\n  e0 < e0'\n\ngoal (1 subgoal):\n 1. 0 < e0 &&&\n    cball x e0 \\<times> {0..t + e0} \\<subseteq> Sigma X existence_ivl0", "apply (auto simp: subset_iff dest!: spec[where x=t])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<forall>a b.\n                   dist x a \\<le> e0 \\<and>\n                   dist t b \\<le> e0 \\<longrightarrow>\n                   a \\<in> X \\<and> b \\<in> existence_ivl0 a;\n        0 < e0; e0 < e0'; dist x a \\<le> e0; 0 \\<le> b;\n        b \\<le> t + e0\\<rbrakk>\n       \\<Longrightarrow> b \\<in> existence_ivl0 a", "subgoal for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a b.\n                dist x a \\<le> e0 \\<and> dist t b \\<le> e0 \\<longrightarrow>\n                a \\<in> X \\<and> b \\<in> existence_ivl0 a;\n     0 < e0; e0 < e0'; dist x a \\<le> e0; 0 \\<le> b; b \\<le> t + e0\\<rbrakk>\n    \\<Longrightarrow> b \\<in> existence_ivl0 a", "apply (rule in_existence_between_zeroI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>a b.\n                dist x a \\<le> e0 \\<and> dist t b \\<le> e0 \\<longrightarrow>\n                a \\<in> X \\<and> b \\<in> existence_ivl0 a;\n     0 < e0; e0 < e0'; dist x a \\<le> e0; 0 \\<le> b; b \\<le> t + e0\\<rbrakk>\n    \\<Longrightarrow> ?t \\<in> existence_ivl0 a\n 2. \\<lbrakk>\\<forall>a b.\n                dist x a \\<le> e0 \\<and> dist t b \\<le> e0 \\<longrightarrow>\n                a \\<in> X \\<and> b \\<in> existence_ivl0 a;\n     0 < e0; e0 < e0'; dist x a \\<le> e0; 0 \\<le> b; b \\<le> t + e0\\<rbrakk>\n    \\<Longrightarrow> b \\<in> {0--?t}", "apply (drule spec[where x=a])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < e0; e0 < e0'; dist x a \\<le> e0; 0 \\<le> b; b \\<le> t + e0;\n     \\<forall>b.\n        dist x a \\<le> e0 \\<and> dist t b \\<le> e0 \\<longrightarrow>\n        a \\<in> X \\<and> b \\<in> existence_ivl0 a\\<rbrakk>\n    \\<Longrightarrow> ?t \\<in> existence_ivl0 a\n 2. \\<lbrakk>\\<forall>a b.\n                dist x a \\<le> e0 \\<and> dist t b \\<le> e0 \\<longrightarrow>\n                a \\<in> X \\<and> b \\<in> existence_ivl0 a;\n     0 < e0; e0 < e0'; dist x a \\<le> e0; 0 \\<le> b; b \\<le> t + e0\\<rbrakk>\n    \\<Longrightarrow> b \\<in> {0--?t}", "apply (drule spec[where x=\"t + e0\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < e0; e0 < e0'; dist x a \\<le> e0; 0 \\<le> b; b \\<le> t + e0;\n     dist x a \\<le> e0 \\<and> dist t (t + e0) \\<le> e0 \\<longrightarrow>\n     a \\<in> X \\<and> t + e0 \\<in> existence_ivl0 a\\<rbrakk>\n    \\<Longrightarrow> ?t \\<in> existence_ivl0 a\n 2. \\<lbrakk>\\<forall>a b.\n                dist x a \\<le> e0 \\<and> dist t b \\<le> e0 \\<longrightarrow>\n                a \\<in> X \\<and> b \\<in> existence_ivl0 a;\n     0 < e0; e0 < e0'; dist x a \\<le> e0; 0 \\<le> b; b \\<le> t + e0\\<rbrakk>\n    \\<Longrightarrow> b \\<in> {0--?t}", "apply (auto simp: dist_real_def closed_segment_eq_real_ivl)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  0 < e0\n  cball x e0 \\<times> {0..t + e0} \\<subseteq> Sigma X existence_ivl0\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         cball x e \\<times> {0..t + e}\n         \\<subseteq> Sigma X existence_ivl0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  0 < e0\n  cball x e0 \\<times> {0..t + e0} \\<subseteq> Sigma X existence_ivl0", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < e0\n  cball x e0 \\<times> {0..t + e0} \\<subseteq> Sigma X existence_ivl0\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [derivative_intros] = flow0_comp_has_derivative"], ["", "lemma flow_isCont_state_space_comp[continuous_intros]:\n  \"t x \\<in> existence_ivl0 (s x) \\<Longrightarrow> isCont s x \\<Longrightarrow> isCont t x \\<Longrightarrow> isCont (\\<lambda>x. flow0 (s x) (t x)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t x \\<in> existence_ivl0 (s x); isCont s x; isCont t x\\<rbrakk>\n    \\<Longrightarrow> isCont (\\<lambda>x. flow0 (s x) (t x)) x", "using continuous_within_compose3[where g=\"\\<lambda>(x, t). flow0 x t\"\n      and f=\"\\<lambda>x. (s x, t x)\" and x = x and s = UNIV]\n  flow_isCont_state_space"], ["proof (prove)\nusing this:\n  \\<lbrakk>isCont (\\<lambda>(x, y). flow0 x y) (s x, t x);\n   isCont (\\<lambda>x. (s x, t x)) x\\<rbrakk>\n  \\<Longrightarrow> isCont\n                     (\\<lambda>x.\n                         case (s x, t x) of\n                         (x, xa) \\<Rightarrow> flow0 x xa)\n                     x\n  ?t \\<in> existence_ivl0 ?x0.0 \\<Longrightarrow>\n  isCont (\\<lambda>(x, y). flow0 x y) (?x0.0, ?t)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t x \\<in> existence_ivl0 (s x); isCont s x; isCont t x\\<rbrakk>\n    \\<Longrightarrow> isCont (\\<lambda>x. flow0 (s x) (t x)) x", "by auto"], ["", "lemma closed_plane[simp]: \"closed {x. x \\<bullet> i = c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed (plane i c)", "using closed_hyperplane[of i c]"], ["proof (prove)\nusing this:\n  closed {x. i \\<bullet> x = c}\n\ngoal (1 subgoal):\n 1. closed (plane i c)", "by (auto simp: inner_commute)"], ["", "lemma flow_tendsto_compose[tendsto_intros]:\n  assumes \"(x \\<longlongrightarrow> xs) F\" \"(t \\<longlongrightarrow> ts) F\"\n  assumes \"ts \\<in> existence_ivl0 xs\"\n  shows \"((\\<lambda>s. flow0 (x s) (t s)) \\<longlongrightarrow> flow0 xs ts) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>s. flow0 (x s) (t s)) \\<longlongrightarrow> flow0 xs ts) F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>s. flow0 (x s) (t s)) \\<longlongrightarrow> flow0 xs ts) F", "have ev: \"\\<forall>\\<^sub>F s in F. (x s, t s) \\<in> Sigma X existence_ivl0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in F. (x s, t s) \\<in> Sigma X existence_ivl0", "using tendsto_Pair[OF assms(1,2), THEN topological_tendstoD, OF open_state_space]\n      assms"], ["proof (prove)\nusing this:\n  (xs, ts) \\<in> Sigma X existence_ivl0 \\<Longrightarrow>\n  \\<forall>\\<^sub>F xa in F. (x xa, t xa) \\<in> Sigma X existence_ivl0\n  (x \\<longlongrightarrow> xs) F\n  (t \\<longlongrightarrow> ts) F\n  ts \\<in> existence_ivl0 xs\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in F. (x s, t s) \\<in> Sigma X existence_ivl0", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in F. (x s, t s) \\<in> Sigma X existence_ivl0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>s. flow0 (x s) (t s)) \\<longlongrightarrow> flow0 xs ts) F", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>s. flow0 (x s) (t s)) \\<longlongrightarrow> flow0 xs ts) F", "by (rule continuous_on_tendsto_compose[OF flow_continuous_on_state_space tendsto_Pair, unfolded split_beta' fst_conv snd_conv])\n      (use assms ev in auto)"], ["proof (state)\nthis:\n  ((\\<lambda>s. flow0 (x s) (t s)) \\<longlongrightarrow> flow0 xs ts) F\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma returns_to_implicit_function:\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes rt: \"returns_to {x \\<in> S. s x = 0} x\" (is \"returns_to ?P x\")\n  assumes cS: \"closed S\"\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n  assumes DsC: \"isCont Ds (poincare_map ?P x)\"\n  assumes nz: \"Ds (poincare_map ?P x) (f (poincare_map ?P x)) \\<noteq> 0\"\n  obtains u e\n  where \"s (flow0 x (u x)) = 0\"\n      \"u x = return_time ?P x\"\n      \"(\\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0)\"\n      \"continuous_on (cball x e) u\"\n      \"(\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> Sigma X existence_ivl0\"\n      \"0 < e\" \"(u has_derivative (- blinfun_scaleR_left\n                   (inverse (blinfun_apply (Ds (poincare_map ?P x)) (f (poincare_map ?P x)))) o\\<^sub>L\n                      (Ds (poincare_map ?P x) o\\<^sub>L flowderiv x (return_time ?P x)) o\\<^sub>L embed1_blinfun)) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note [derivative_intros] = has_derivative_compose[OF _ Ds]"], ["proof (state)\nthis:\n  (?f has_derivative ?f') (at ?x within ?s) \\<Longrightarrow>\n  ((\\<lambda>x. s (?f x)) has_derivative\n   (\\<lambda>x. blinfun_apply (Ds (?f ?x)) (?f' x)))\n   (at ?x within ?s)\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have cont_s: \"continuous_on UNIV s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV s", "by (rule has_derivative_continuous_on[OF Ds])"], ["proof (state)\nthis:\n  continuous_on UNIV s\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note cls[simp, intro] = closed_levelset[OF cont_s]"], ["proof (state)\nthis:\n  closed {x. s x = ?c}\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?t1 = \"return_time ?P x\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have cls[simp, intro]: \"closed {x \\<in> S. s x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed {x \\<in> S. s x = 0}", "by (rule closed_levelset_within) (auto intro!: cS continuous_on_subset[OF cont_s])"], ["proof (state)\nthis:\n  closed {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  closed {x \\<in> S. s x = 0}", "have xt1: \"(x, ?t1) \\<in> Sigma X existence_ivl0\""], ["proof (prove)\nusing this:\n  closed {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. (x, return_time {x \\<in> S. s x = 0} x) \\<in> Sigma X existence_ivl0", "by (auto intro!: return_time_exivl rt)"], ["proof (state)\nthis:\n  (x, return_time {x \\<in> S. s x = 0} x) \\<in> Sigma X existence_ivl0\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have D: \"(\\<And>x. x \\<in> Sigma X existence_ivl0 \\<Longrightarrow>\n      ((\\<lambda>(x, t). s (flow0 x t)) has_derivative\n       blinfun_apply (Ds (flow0 (fst x) (snd x)) o\\<^sub>L (flowderiv (fst x) (snd x))))\n       (at x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Sigma X existence_ivl0 \\<Longrightarrow>\n       ((\\<lambda>(x, t). s (flow0 x t)) has_derivative\n        blinfun_apply\n         (Ds (flow0 (fst x) (snd x)) o\\<^sub>L flowderiv (fst x) (snd x)))\n        (at x)", "by (auto intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  ?x1 \\<in> Sigma X existence_ivl0 \\<Longrightarrow>\n  ((\\<lambda>(x, t). s (flow0 x t)) has_derivative\n   blinfun_apply\n    (Ds (flow0 (fst ?x1) (snd ?x1)) o\\<^sub>L\n     flowderiv (fst ?x1) (snd ?x1)))\n   (at ?x1)\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have C: \"isCont (\\<lambda>x. Ds (flow0 (fst x) (snd x)) o\\<^sub>L flowderiv (fst x) (snd x))\n   (x, ?t1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont\n     (\\<lambda>x.\n         Ds (flow0 (fst x) (snd x)) o\\<^sub>L flowderiv (fst x) (snd x))\n     (x, return_time {x \\<in> S. s x = 0} x)", "using flowderiv_continuous_on[unfolded continuous_on_eq_continuous_within,\n        rule_format, OF xt1]"], ["proof (prove)\nusing this:\n  continuous\n   (at (x, return_time {x \\<in> S. s x = 0} x)\n    within Sigma X existence_ivl0)\n   (\\<lambda>(x, y). flowderiv x y)\n\ngoal (1 subgoal):\n 1. isCont\n     (\\<lambda>x.\n         Ds (flow0 (fst x) (snd x)) o\\<^sub>L flowderiv (fst x) (snd x))\n     (x, return_time {x \\<in> S. s x = 0} x)", "using at_within_open[OF xt1 open_state_space]"], ["proof (prove)\nusing this:\n  continuous\n   (at (x, return_time {x \\<in> S. s x = 0} x)\n    within Sigma X existence_ivl0)\n   (\\<lambda>(x, y). flowderiv x y)\n  at (x, return_time {x \\<in> S. s x = 0} x) within Sigma X existence_ivl0 =\n  at (x, return_time {x \\<in> S. s x = 0} x)\n\ngoal (1 subgoal):\n 1. isCont\n     (\\<lambda>x.\n         Ds (flow0 (fst x) (snd x)) o\\<^sub>L flowderiv (fst x) (snd x))\n     (x, return_time {x \\<in> S. s x = 0} x)", "by (auto intro!: continuous_intros tendsto_eq_intros return_time_exivl rt\n          isCont_tendsto_compose[OF DsC, unfolded poincare_map_def]\n        simp: split_beta' isCont_def)"], ["proof (state)\nthis:\n  isCont\n   (\\<lambda>x.\n       Ds (flow0 (fst x) (snd x)) o\\<^sub>L flowderiv (fst x) (snd x))\n   (x, return_time {x \\<in> S. s x = 0} x)\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from return_time_returns[OF rt cls]"], ["proof (chain)\npicking this:\n  flow0 x (return_time {x \\<in> S. s x = 0} x) \\<in> {x \\<in> S. s x = 0}", "have Z: \"(case (x, ?t1) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0\""], ["proof (prove)\nusing this:\n  flow0 x (return_time {x \\<in> S. s x = 0} x) \\<in> {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. (case (x, return_time {x \\<in> S. s x = 0} x) of\n     (x, t) \\<Rightarrow> s (flow0 x t)) =\n    0", "by (auto simp: )"], ["proof (state)\nthis:\n  (case (x, return_time {x \\<in> S. s x = 0} x) of\n   (x, t) \\<Rightarrow> s (flow0 x t)) =\n  0\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have I1: \"blinfun_scaleR_left (inverse (Ds (flow0 x (?t1))(f (flow0 x (?t1))))) o\\<^sub>L \n    ((Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n            (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n       flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n        (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n      embed2_blinfun)\n     = 1\\<^sub>L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_scaleR_left\n     (inverse\n       (blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n         (f (flow0 x (return_time {x \\<in> S. s x = 0} x))))) o\\<^sub>L\n    (Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n          (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n     flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n      (snd (x, return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n     embed2_blinfun) =\n    1\\<^sub>L", "using nz"], ["proof (prove)\nusing this:\n  blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n   (f (poincare_map {x \\<in> S. s x = 0} x)) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. blinfun_scaleR_left\n     (inverse\n       (blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n         (f (flow0 x (return_time {x \\<in> S. s x = 0} x))))) o\\<^sub>L\n    (Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n          (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n     flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n      (snd (x, return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n     embed2_blinfun) =\n    1\\<^sub>L", "by (auto intro!: blinfun_eqI\n        simp: rt flowderiv_def blinfun.bilinear_simps inverse_eq_divide poincare_map_def)"], ["proof (state)\nthis:\n  blinfun_scaleR_left\n   (inverse\n     (blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n       (f (flow0 x (return_time {x \\<in> S. s x = 0} x))))) o\\<^sub>L\n  (Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n        (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n   flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n    (snd (x, return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n   embed2_blinfun) =\n  1\\<^sub>L\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have I2: \"((Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n            (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n       flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n        (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n      embed2_blinfun) o\\<^sub>L blinfun_scaleR_left (inverse (Ds (flow0 x (?t1))(f (flow0 x (?t1)))))\n     = 1\\<^sub>L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n         (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n    flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n     (snd (x, return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n    embed2_blinfun o\\<^sub>L\n    blinfun_scaleR_left\n     (inverse\n       (blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n         (f (flow0 x (return_time {x \\<in> S. s x = 0} x))))) =\n    1\\<^sub>L", "using nz"], ["proof (prove)\nusing this:\n  blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n   (f (poincare_map {x \\<in> S. s x = 0} x)) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n         (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n    flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n     (snd (x, return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n    embed2_blinfun o\\<^sub>L\n    blinfun_scaleR_left\n     (inverse\n       (blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n         (f (flow0 x (return_time {x \\<in> S. s x = 0} x))))) =\n    1\\<^sub>L", "by (auto intro!: blinfun_eqI\n        simp: rt flowderiv_def blinfun.bilinear_simps inverse_eq_divide poincare_map_def)"], ["proof (state)\nthis:\n  Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n       (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n  flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n   (snd (x, return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n  embed2_blinfun o\\<^sub>L\n  blinfun_scaleR_left\n   (inverse\n     (blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n       (f (flow0 x (return_time {x \\<in> S. s x = 0} x))))) =\n  1\\<^sub>L\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "apply (rule implicit_function_theorem[where f=\"\\<lambda>(x, t). s (flow0 x t)\"\n          and S=\"Sigma X existence_ivl0\", OF D xt1 open_state_space order_refl C Z I1 I2])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> Sigma X existence_ivl0 \\<Longrightarrow>\n       x \\<in> Sigma X existence_ivl0\n 2. \\<And>u e r.\n       \\<lbrakk>(case (x, u x) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0;\n        u x = return_time {x \\<in> S. s x = 0} x;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow>\n           (case (sa, u sa) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma X existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply\n                  (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n                  (f (flow0 x\n                       (return_time {x \\<in> S. s x = 0} x))))) o\\<^sub>L\n           (Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n                 (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n            flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n             (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        0 < r;\n        \\<And>U v sa.\n           \\<lbrakk>v x = return_time {x \\<in> S. s x = 0} x;\n            \\<And>sa.\n               sa \\<in> U \\<Longrightarrow>\n               (case (sa, v sa) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0;\n            U \\<subseteq> cball x e; continuous_on U v; sa \\<in> U;\n            (sa, v sa)\n            \\<in> ball (x, return_time {x \\<in> S. s x = 0} x) r\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa\\<rbrakk>\n       \\<Longrightarrow> thesis", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u e r.\n       \\<lbrakk>(case (x, u x) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0;\n        u x = return_time {x \\<in> S. s x = 0} x;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow>\n           (case (sa, u sa) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma X existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply\n                  (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n                  (f (flow0 x\n                       (return_time {x \\<in> S. s x = 0} x))))) o\\<^sub>L\n           (Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n                 (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n            flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n             (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        0 < r;\n        \\<And>U v sa.\n           \\<lbrakk>v x = return_time {x \\<in> S. s x = 0} x;\n            \\<And>sa.\n               sa \\<in> U \\<Longrightarrow>\n               (case (sa, v sa) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0;\n            U \\<subseteq> cball x e; continuous_on U v; sa \\<in> U;\n            (sa, v sa)\n            \\<in> ball (x, return_time {x \\<in> S. s x = 0} x) r\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa\\<rbrakk>\n       \\<Longrightarrow> thesis", "unfolding split_beta' fst_conv snd_conv poincare_map_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u e r.\n       \\<lbrakk>s (flow0 x (u x)) = 0;\n        u x = return_time {x \\<in> S. s x = 0} x;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow> s (flow0 sa (u sa)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma X existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                  (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n           (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n            flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        0 < r;\n        \\<And>U v sa.\n           \\<lbrakk>v x = return_time {x \\<in> S. s x = 0} x;\n            \\<And>sa. sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n            U \\<subseteq> cball x e; continuous_on U v; sa \\<in> U;\n            (sa, v sa)\n            \\<in> ball (x, return_time {x \\<in> S. s x = 0} x) r\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa\\<rbrakk>\n       \\<Longrightarrow> thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in auto_ll_on_open) f_tendsto[tendsto_intros]:\n  assumes g1: \"(g1 \\<longlongrightarrow> b1) (at s within S)\" and \"b1 \\<in> X\"\n  shows \"((\\<lambda>x. f (g1 x)) \\<longlongrightarrow> f b1) (at s within S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f (g1 x)) \\<longlongrightarrow> f b1) (at s within S)", "apply (rule continuous_on_tendsto_compose[OF continuous tendsto_Pair[OF tendsto_const],\n      unfolded split_beta fst_conv snd_conv, OF g1])"], ["proof (prove)\ngoal (2 subgoals):\n 1. (?a1, b1) \\<in> UNIV \\<times> X\n 2. \\<forall>\\<^sub>F x in at s within S. (?a1, g1 x) \\<in> UNIV \\<times> X", "by (auto simp: \\<open>b1 \\<in> X\\<close> intro!: topological_tendstoD[OF g1])"], ["", "lemma flow_avoids_surface_eventually_at_right_pos:\n  assumes \"s x > 0 \\<or> s x = 0 \\<and> blinfun_apply (Ds x) (f x) > 0\"\n  assumes x: \"x \\<in> X\"\n  assumes Ds: \"\\<And>x. (s has_derivative Ds x) (at x)\"\n  assumes DsC: \"\\<And>x. isCont Ds x\"\n  shows \"\\<forall>\\<^sub>F t in at_right 0. s (flow0 x t) > (0::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "have cont_s: \"continuous_on UNIV s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV s", "by (rule has_derivative_continuous_on[OF Ds])"], ["proof (state)\nthis:\n  continuous_on UNIV s\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "then"], ["proof (chain)\npicking this:\n  continuous_on UNIV s", "have [THEN continuous_on_compose2, continuous_intros]: \"continuous_on S s\" for S"], ["proof (prove)\nusing this:\n  continuous_on UNIV s\n\ngoal (1 subgoal):\n 1. continuous_on S s", "by (rule continuous_on_subset) simp"], ["proof (state)\nthis:\n  \\<lbrakk>continuous_on ?s ?f; ?f ` ?s \\<subseteq> ?t\\<rbrakk>\n  \\<Longrightarrow> continuous_on ?s (\\<lambda>x. s (?f x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "note [derivative_intros] = has_derivative_compose[OF _ Ds]"], ["proof (state)\nthis:\n  (?f has_derivative ?f') (at ?x within ?s) \\<Longrightarrow>\n  ((\\<lambda>x. s (?f x)) has_derivative\n   (\\<lambda>x. blinfun_apply (Ds (?f ?x)) (?f' x)))\n   (at ?x within ?s)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "note [tendsto_intros] = continuous_on_tendsto_compose[OF cont_s]\n    isCont_tendsto_compose[OF DsC]"], ["proof (state)\nthis:\n  \\<lbrakk>(?g \\<longlongrightarrow> ?l) ?F; ?l \\<in> UNIV;\n   \\<forall>\\<^sub>F x in ?F. ?g x \\<in> UNIV\\<rbrakk>\n  \\<Longrightarrow> ((\\<lambda>x. s (?g x)) \\<longlongrightarrow> s ?l) ?F\n  (?f \\<longlongrightarrow> ?l) ?F \\<Longrightarrow>\n  ((\\<lambda>x. Ds (?f x)) \\<longlongrightarrow> Ds ?l) ?F\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "from assms(1)"], ["proof (chain)\npicking this:\n  0 < s x \\<or> s x = 0 \\<and> 0 < blinfun_apply (Ds x) (f x)", "consider \"s x > 0\" | \"s x = 0\" \"blinfun_apply (Ds x) (f x) > 0\""], ["proof (prove)\nusing this:\n  0 < s x \\<or> s x = 0 \\<and> 0 < blinfun_apply (Ds x) (f x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s x \\<Longrightarrow> thesis;\n     \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>0 < s x \\<Longrightarrow> ?thesis;\n   \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < s x \\<Longrightarrow> ?thesis;\n   \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < s x \\<Longrightarrow> ?thesis;\n   \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < s x \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)\n 2. \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "assume s: \"s x > 0\""], ["proof (state)\nthis:\n  0 < s x\n\ngoal (2 subgoals):\n 1. 0 < s x \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)\n 2. \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "then"], ["proof (chain)\npicking this:\n  0 < s x", "have \"((\\<lambda>t. s (flow0 x t)) \\<longlongrightarrow> s x) (at_right 0)\""], ["proof (prove)\nusing this:\n  0 < s x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. s (flow0 x t)) \\<longlongrightarrow> s x) (at_right 0)", "by (auto intro!: tendsto_eq_intros simp: split_beta' x)"], ["proof (state)\nthis:\n  ((\\<lambda>t. s (flow0 x t)) \\<longlongrightarrow> s x) (at_right 0)\n\ngoal (2 subgoals):\n 1. 0 < s x \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)\n 2. \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "from order_tendstoD(1)[OF this s]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F xa in at_right 0. 0 < s (flow0 x xa)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F xa in at_right 0. 0 < s (flow0 x xa)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "."], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "assume sz: \"s x = 0\" and pos: \"blinfun_apply (Ds x) (f x) > 0\""], ["proof (state)\nthis:\n  s x = 0\n  0 < blinfun_apply (Ds x) (f x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "from x"], ["proof (chain)\npicking this:\n  x \\<in> X", "have \"0 \\<in> existence_ivl0 x\" \"open (existence_ivl0 x)\""], ["proof (prove)\nusing this:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. 0 \\<in> existence_ivl0 x &&& open (existence_ivl0 x)", "by simp_all"], ["proof (state)\nthis:\n  0 \\<in> existence_ivl0 x\n  open (existence_ivl0 x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "then"], ["proof (chain)\npicking this:\n  0 \\<in> existence_ivl0 x\n  open (existence_ivl0 x)", "have evex: \"\\<forall>\\<^sub>F t in at_right 0. t \\<in> existence_ivl0 x\""], ["proof (prove)\nusing this:\n  0 \\<in> existence_ivl0 x\n  open (existence_ivl0 x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. t \\<in> existence_ivl0 x", "using eventually_at_topological"], ["proof (prove)\nusing this:\n  0 \\<in> existence_ivl0 x\n  open (existence_ivl0 x)\n  eventually ?P (at ?a within ?s) =\n  (\\<exists>S.\n      open S \\<and>\n      ?a \\<in> S \\<and>\n      (\\<forall>x\\<in>S.\n          x \\<noteq> ?a \\<longrightarrow>\n          x \\<in> ?s \\<longrightarrow> ?P x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. t \\<in> existence_ivl0 x", "by blast"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. t \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. t \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "from evex"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F t in at_right 0. t \\<in> existence_ivl0 x", "have \"\\<forall>\\<^sub>F xa in at_right 0. flow0 x xa \\<in> X\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at_right 0. t \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in at_right 0. flow0 x xa \\<in> X", "by (eventually_elim) (auto intro!: )"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F xa in at_right 0. flow0 x xa \\<in> X\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F xa in at_right 0. flow0 x xa \\<in> X", "have \"((\\<lambda>t. (Ds (flow0 x t)) (f (flow0 x t))) \\<longlongrightarrow> blinfun_apply (Ds x) (f x)) (at_right 0)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F xa in at_right 0. flow0 x xa \\<in> X\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         blinfun_apply (Ds (flow0 x t))\n          (f (flow0 x t))) \\<longlongrightarrow>\n     blinfun_apply (Ds x) (f x))\n     (at_right 0)", "by (auto intro!: tendsto_eq_intros simp: split_beta' x)"], ["proof (state)\nthis:\n  ((\\<lambda>t.\n       blinfun_apply (Ds (flow0 x t)) (f (flow0 x t))) \\<longlongrightarrow>\n   blinfun_apply (Ds x) (f x))\n   (at_right 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "from order_tendstoD(1)[OF this pos]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F xa in at_right 0.\n     0 < blinfun_apply (Ds (flow0 x xa)) (f (flow0 x xa))", "have \"\\<forall>\\<^sub>F z in at_right 0. blinfun_apply (Ds (flow0 x z)) (f (flow0 x z)) > 0\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F xa in at_right 0.\n     0 < blinfun_apply (Ds (flow0 x xa)) (f (flow0 x xa))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in at_right 0.\n       0 < blinfun_apply (Ds (flow0 x z)) (f (flow0 x z))", "."], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in at_right 0.\n     0 < blinfun_apply (Ds (flow0 x z)) (f (flow0 x z))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F z in at_right 0.\n     0 < blinfun_apply (Ds (flow0 x z)) (f (flow0 x z))", "obtain t where t: \"t > 0\" \"\\<And>z. 0 < z \\<Longrightarrow> z < t \\<Longrightarrow> blinfun_apply (Ds (flow0 x z)) (f (flow0 x z)) > 0\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F z in at_right 0.\n     0 < blinfun_apply (Ds (flow0 x z)) (f (flow0 x z))\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>0 < t;\n         \\<And>z.\n            \\<lbrakk>0 < z; z < t\\<rbrakk>\n            \\<Longrightarrow> 0 < blinfun_apply (Ds (flow0 x z))\n                                   (f (flow0 x z))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at)"], ["proof (state)\nthis:\n  0 < t\n  \\<lbrakk>0 < ?z; ?z < t\\<rbrakk>\n  \\<Longrightarrow> 0 < blinfun_apply (Ds (flow0 x ?z)) (f (flow0 x ?z))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "have \"\\<forall>\\<^sub>F z in at_right 0. z < t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in at_right 0. z < t", "using \\<open>t > 0\\<close> order_tendstoD(2)[OF tendsto_ident_at \\<open>0 < t\\<close>]"], ["proof (prove)\nusing this:\n  0 < t\n  \\<forall>\\<^sub>F x in at 0 within ?s1. x < t\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in at_right 0. z < t", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in at_right 0. z < t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in at_right 0. z < t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "have \"\\<forall>\\<^sub>F z in at_right 0. 0 < z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually ((<) (0::'b)) (at_right (0::'b))", "by (simp add: eventually_at_filter)"], ["proof (state)\nthis:\n  eventually ((<) (0::?'b1)) (at_right (0::?'b1))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s x = 0; 0 < blinfun_apply (Ds x) (f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F t in at_right 0. t \\<in> existence_ivl0 x\n  \\<forall>\\<^sub>F z in at_right 0. z < t\n  eventually ((<) (0::?'b1)) (at_right (0::?'b1))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at_right 0. t \\<in> existence_ivl0 x\n  \\<forall>\\<^sub>F z in at_right 0. z < t\n  eventually ((<) (0::?'b1)) (at_right (0::?'b1))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ta.\n       \\<lbrakk>ta \\<in> existence_ivl0 x; ta < t; 0 < ta\\<rbrakk>\n       \\<Longrightarrow> 0 < s (flow0 x ta)", "case (elim z)"], ["proof (state)\nthis:\n  z \\<in> existence_ivl0 x\n  z < t\n  0 < z\n\ngoal (1 subgoal):\n 1. \\<And>ta.\n       \\<lbrakk>ta \\<in> existence_ivl0 x; ta < t; 0 < ta\\<rbrakk>\n       \\<Longrightarrow> 0 < s (flow0 x ta)", "from closed_segment_subset_existence_ivl[OF \\<open>z \\<in> existence_ivl0 x\\<close>]"], ["proof (chain)\npicking this:\n  {0--z} \\<subseteq> existence_ivl0 x", "have csi: \"{0..z} \\<subseteq> existence_ivl0 x\""], ["proof (prove)\nusing this:\n  {0--z} \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. {0..z} \\<subseteq> existence_ivl0 x", "by (auto simp add: closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  {0..z} \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<And>ta.\n       \\<lbrakk>ta \\<in> existence_ivl0 x; ta < t; 0 < ta\\<rbrakk>\n       \\<Longrightarrow> 0 < s (flow0 x ta)", "then"], ["proof (chain)\npicking this:\n  {0..z} \\<subseteq> existence_ivl0 x", "have cont: \"continuous_on {0..z} (\\<lambda>t. s (flow0 x t))\""], ["proof (prove)\nusing this:\n  {0..z} \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. continuous_on {0..z} (\\<lambda>t. s (flow0 x t))", "by (auto intro!: continuous_intros)"], ["proof (state)\nthis:\n  continuous_on {0..z} (\\<lambda>t. s (flow0 x t))\n\ngoal (1 subgoal):\n 1. \\<And>ta.\n       \\<lbrakk>ta \\<in> existence_ivl0 x; ta < t; 0 < ta\\<rbrakk>\n       \\<Longrightarrow> 0 < s (flow0 x ta)", "have \"\\<And>u. \\<lbrakk>0 < u; u < z\\<rbrakk> \\<Longrightarrow> ((\\<lambda>t. s (flow0 x t)) has_derivative (\\<lambda>t. t * blinfun_apply (Ds (flow0 x u)) (f (flow0 x u)))) (at u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<lbrakk>0 < u; u < z\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t. s (flow0 x t)) has_derivative\n                          (\\<lambda>t.\n                              t *\n                              blinfun_apply (Ds (flow0 x u))\n                               (f (flow0 x u))))\n                          (at u)", "using csi"], ["proof (prove)\nusing this:\n  {0..z} \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<lbrakk>0 < u; u < z\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t. s (flow0 x t)) has_derivative\n                          (\\<lambda>t.\n                              t *\n                              blinfun_apply (Ds (flow0 x u))\n                               (f (flow0 x u))))\n                          (at u)", "by (auto intro!: derivative_eq_intros simp: flowderiv_def blinfun.bilinear_simps)"], ["proof (state)\nthis:\n  \\<lbrakk>0 < ?u1; ?u1 < z\\<rbrakk>\n  \\<Longrightarrow> ((\\<lambda>t. s (flow0 x t)) has_derivative\n                     (\\<lambda>t.\n                         t *\n                         blinfun_apply (Ds (flow0 x ?u1))\n                          (f (flow0 x ?u1))))\n                     (at ?u1)\n\ngoal (1 subgoal):\n 1. \\<And>ta.\n       \\<lbrakk>ta \\<in> existence_ivl0 x; ta < t; 0 < ta\\<rbrakk>\n       \\<Longrightarrow> 0 < s (flow0 x ta)", "from mvt[OF \\<open>0 < z\\<close> cont this]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x. \\<lbrakk>0 < x; x < z\\<rbrakk> \\<Longrightarrow> 0 < x;\n   \\<And>x. \\<lbrakk>0 < x; x < z\\<rbrakk> \\<Longrightarrow> x < z;\n   \\<And>\\<xi>.\n      \\<lbrakk>0 < \\<xi>; \\<xi> < z;\n       s (flow0 x z) - s (flow0 x 0) =\n       (z - 0) *\n       blinfun_apply (Ds (flow0 x \\<xi>)) (f (flow0 x \\<xi>))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "obtain w where w: \"0 < w\" \"w < z\" and sDs: \"s (flow0 x z) = z * blinfun_apply (Ds (flow0 x w)) (f (flow0 x w))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x. \\<lbrakk>0 < x; x < z\\<rbrakk> \\<Longrightarrow> 0 < x;\n   \\<And>x. \\<lbrakk>0 < x; x < z\\<rbrakk> \\<Longrightarrow> x < z;\n   \\<And>\\<xi>.\n      \\<lbrakk>0 < \\<xi>; \\<xi> < z;\n       s (flow0 x z) - s (flow0 x 0) =\n       (z - 0) *\n       blinfun_apply (Ds (flow0 x \\<xi>)) (f (flow0 x \\<xi>))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>0 < w; w < z;\n         s (flow0 x z) =\n         z * blinfun_apply (Ds (flow0 x w)) (f (flow0 x w))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using x sz"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x. \\<lbrakk>0 < x; x < z\\<rbrakk> \\<Longrightarrow> 0 < x;\n   \\<And>x. \\<lbrakk>0 < x; x < z\\<rbrakk> \\<Longrightarrow> x < z;\n   \\<And>\\<xi>.\n      \\<lbrakk>0 < \\<xi>; \\<xi> < z;\n       s (flow0 x z) - s (flow0 x 0) =\n       (z - 0) *\n       blinfun_apply (Ds (flow0 x \\<xi>)) (f (flow0 x \\<xi>))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  x \\<in> X\n  s x = 0\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>0 < w; w < z;\n         s (flow0 x z) =\n         z * blinfun_apply (Ds (flow0 x w)) (f (flow0 x w))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < w\n  w < z\n  s (flow0 x z) = z * blinfun_apply (Ds (flow0 x w)) (f (flow0 x w))\n\ngoal (1 subgoal):\n 1. \\<And>ta.\n       \\<lbrakk>ta \\<in> existence_ivl0 x; ta < t; 0 < ta\\<rbrakk>\n       \\<Longrightarrow> 0 < s (flow0 x ta)", "note sDs"], ["proof (state)\nthis:\n  s (flow0 x z) = z * blinfun_apply (Ds (flow0 x w)) (f (flow0 x w))\n\ngoal (1 subgoal):\n 1. \\<And>ta.\n       \\<lbrakk>ta \\<in> existence_ivl0 x; ta < t; 0 < ta\\<rbrakk>\n       \\<Longrightarrow> 0 < s (flow0 x ta)", "also"], ["proof (state)\nthis:\n  s (flow0 x z) = z * blinfun_apply (Ds (flow0 x w)) (f (flow0 x w))\n\ngoal (1 subgoal):\n 1. \\<And>ta.\n       \\<lbrakk>ta \\<in> existence_ivl0 x; ta < t; 0 < ta\\<rbrakk>\n       \\<Longrightarrow> 0 < s (flow0 x ta)", "have \"\\<dots> > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < z * blinfun_apply (Ds (flow0 x w)) (f (flow0 x w))", "using elim t(2)[of w] w"], ["proof (prove)\nusing this:\n  z \\<in> existence_ivl0 x\n  z < t\n  0 < z\n  \\<lbrakk>0 < w; w < t\\<rbrakk>\n  \\<Longrightarrow> 0 < blinfun_apply (Ds (flow0 x w)) (f (flow0 x w))\n  0 < w\n  w < z\n\ngoal (1 subgoal):\n 1. 0 < z * blinfun_apply (Ds (flow0 x w)) (f (flow0 x w))", "by simp"], ["proof (state)\nthis:\n  0 < z * blinfun_apply (Ds (flow0 x w)) (f (flow0 x w))\n\ngoal (1 subgoal):\n 1. \\<And>ta.\n       \\<lbrakk>ta \\<in> existence_ivl0 x; ta < t; 0 < ta\\<rbrakk>\n       \\<Longrightarrow> 0 < s (flow0 x ta)", "finally"], ["proof (chain)\npicking this:\n  0 < s (flow0 x z)", "show ?case"], ["proof (prove)\nusing this:\n  0 < s (flow0 x z)\n\ngoal (1 subgoal):\n 1. 0 < s (flow0 x z)", "."], ["proof (state)\nthis:\n  0 < s (flow0 x z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma flow_avoids_surface_eventually_at_right_neg:\n  assumes \"s x < 0 \\<or> s x = 0 \\<and> blinfun_apply (Ds x) (f x) < 0\"\n  assumes x: \"x \\<in> X\"\n  assumes Ds: \"\\<And>x. (s has_derivative Ds x) (at x)\"\n  assumes DsC: \"\\<And>x. isCont Ds x\"\n  shows \"\\<forall>\\<^sub>F t in at_right 0. s (flow0 x t) < (0::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. s (flow0 x t) < 0", "apply (rule flow_avoids_surface_eventually_at_right_pos[of \"-s\" x \"-Ds\", simplified])"], ["proof (prove)\ngoal (4 subgoals):\n 1. s x < 0 \\<or> s x = 0 \\<and> 0 < blinfun_apply (- Ds x) (f x)\n 2. x \\<in> X\n 3. \\<And>x. (- s has_derivative blinfun_apply (- Ds x)) (at x)\n 4. \\<And>x. isCont (- Ds) x", "using assms"], ["proof (prove)\nusing this:\n  s x < 0 \\<or> s x = 0 \\<and> blinfun_apply (Ds x) (f x) < 0\n  x \\<in> X\n  (s has_derivative blinfun_apply (Ds ?x)) (at ?x)\n  isCont Ds ?x\n\ngoal (4 subgoals):\n 1. s x < 0 \\<or> s x = 0 \\<and> 0 < blinfun_apply (- Ds x) (f x)\n 2. x \\<in> X\n 3. \\<And>x. (- s has_derivative blinfun_apply (- Ds x)) (at x)\n 4. \\<And>x. isCont (- Ds) x", "by (auto intro!: derivative_eq_intros simp: blinfun.bilinear_simps fun_Compl_def)"], ["", "lemma flow_avoids_surface_eventually_at_right:\n  assumes \"x \\<notin> S \\<or> s x \\<noteq> 0 \\<or> blinfun_apply (Ds x) (f x) \\<noteq> 0\"\n  assumes x: \"x \\<in> X\" and cS: \"closed S\"\n  assumes Ds: \"\\<And>x. (s has_derivative Ds x) (at x)\"\n  assumes DsC: \"\\<And>x. isCont Ds x\"\n  shows \"\\<forall>\\<^sub>F t in at_right 0. (flow0 x t) \\<notin> {x \\<in> S. s x = (0::real)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}", "from assms(1)"], ["proof (chain)\npicking this:\n  x \\<notin> S \\<or>\n  s x \\<noteq> 0 \\<or> blinfun_apply (Ds x) (f x) \\<noteq> 0", "consider\n      \"s x > 0 \\<or> s x = 0 \\<and> blinfun_apply (Ds x) (f x) > 0\"\n    | \"s x < 0 \\<or> s x = 0 \\<and> blinfun_apply (Ds x) (f x) < 0\"\n    | \"x \\<notin> S\""], ["proof (prove)\nusing this:\n  x \\<notin> S \\<or>\n  s x \\<noteq> 0 \\<or> blinfun_apply (Ds x) (f x) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s x \\<or>\n             s x = 0 \\<and> 0 < blinfun_apply (Ds x) (f x) \\<Longrightarrow>\n             thesis;\n     s x < 0 \\<or>\n     s x = 0 \\<and> blinfun_apply (Ds x) (f x) < 0 \\<Longrightarrow>\n     thesis;\n     x \\<notin> S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by arith"], ["proof (state)\nthis:\n  \\<lbrakk>0 < s x \\<or>\n           s x = 0 \\<and> 0 < blinfun_apply (Ds x) (f x) \\<Longrightarrow>\n           ?thesis;\n   s x < 0 \\<or>\n   s x = 0 \\<and> blinfun_apply (Ds x) (f x) < 0 \\<Longrightarrow>\n   ?thesis;\n   x \\<notin> S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < s x \\<or>\n           s x = 0 \\<and> 0 < blinfun_apply (Ds x) (f x) \\<Longrightarrow>\n           ?thesis;\n   s x < 0 \\<or>\n   s x = 0 \\<and> blinfun_apply (Ds x) (f x) < 0 \\<Longrightarrow>\n   ?thesis;\n   x \\<notin> S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < s x \\<or>\n           s x = 0 \\<and> 0 < blinfun_apply (Ds x) (f x) \\<Longrightarrow>\n           ?thesis;\n   s x < 0 \\<or>\n   s x = 0 \\<and> blinfun_apply (Ds x) (f x) < 0 \\<Longrightarrow>\n   ?thesis;\n   x \\<notin> S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. 0 < s x \\<or>\n    s x = 0 \\<and> 0 < blinfun_apply (Ds x) (f x) \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}\n 2. s x < 0 \\<or>\n    s x = 0 \\<and> blinfun_apply (Ds x) (f x) < 0 \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}\n 3. x \\<notin> S \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}", "case 1"], ["proof (state)\nthis:\n  0 < s x \\<or> s x = 0 \\<and> 0 < blinfun_apply (Ds x) (f x)\n\ngoal (3 subgoals):\n 1. 0 < s x \\<or>\n    s x = 0 \\<and> 0 < blinfun_apply (Ds x) (f x) \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}\n 2. s x < 0 \\<or>\n    s x = 0 \\<and> blinfun_apply (Ds x) (f x) < 0 \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}\n 3. x \\<notin> S \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}", "from flow_avoids_surface_eventually_at_right_pos[of s x Ds, OF 1 x Ds DsC]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at_right 0. 0 < s (flow0 x t)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> {x \\<in> S. s x = 0}\n\ngoal (2 subgoals):\n 1. s x < 0 \\<or>\n    s x = 0 \\<and> blinfun_apply (Ds x) (f x) < 0 \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}\n 2. x \\<notin> S \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. s x < 0 \\<or>\n    s x = 0 \\<and> blinfun_apply (Ds x) (f x) < 0 \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}\n 2. x \\<notin> S \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}", "case 2"], ["proof (state)\nthis:\n  s x < 0 \\<or> s x = 0 \\<and> blinfun_apply (Ds x) (f x) < 0\n\ngoal (2 subgoals):\n 1. s x < 0 \\<or>\n    s x = 0 \\<and> blinfun_apply (Ds x) (f x) < 0 \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}\n 2. x \\<notin> S \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}", "from flow_avoids_surface_eventually_at_right_neg[of s x Ds, OF 2 x Ds DsC]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F t in at_right 0. s (flow0 x t) < 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at_right 0. s (flow0 x t) < 0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. x \\<notin> S \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> S \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}", "case 3"], ["proof (state)\nthis:\n  x \\<notin> S\n\ngoal (1 subgoal):\n 1. x \\<notin> S \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}", "then"], ["proof (chain)\npicking this:\n  x \\<notin> S", "have nS: \"open (- S)\" \"x \\<in> - S\""], ["proof (prove)\nusing this:\n  x \\<notin> S\n\ngoal (1 subgoal):\n 1. open (- S) &&& x \\<in> - S", "using cS"], ["proof (prove)\nusing this:\n  x \\<notin> S\n  closed S\n\ngoal (1 subgoal):\n 1. open (- S) &&& x \\<in> - S", "by auto"], ["proof (state)\nthis:\n  open (- S)\n  x \\<in> - S\n\ngoal (1 subgoal):\n 1. x \\<notin> S \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}", "have \"\\<forall>\\<^sub>F t in at_right 0. (flow0 x t) \\<in> - S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<in> - S", "by (rule topological_tendstoD[OF _ nS]) (auto intro!: tendsto_eq_intros simp: x)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<in> - S\n\ngoal (1 subgoal):\n 1. x \\<notin> S \\<Longrightarrow>\n    \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<in> - S", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<in> - S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0.\n       flow0 x t \\<notin> {x \\<in> S. s x = 0}", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> {x \\<in> S. s x = 0}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> {x \\<in> S. s x = 0}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma eventually_returns_to:\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes rt: \"returns_to {x \\<in> S. s x = 0} x\" (is \"returns_to ?P x\")\n  assumes cS: \"closed S\"\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n  assumes DsC: \"\\<And>x. isCont Ds x\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map ?P x). s x = 0 \\<longrightarrow> x \\<in> S\"\n  assumes nz: \"Ds (poincare_map ?P x) (f (poincare_map ?P x)) \\<noteq> 0\"\n  assumes nz0: \"x \\<notin> S \\<or> s x \\<noteq> 0 \\<or> Ds x (f x) \\<noteq> 0\"\n  shows \"\\<forall>\\<^sub>F x in at x. returns_to ?P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "let ?t1 = \"return_time ?P x\""], ["proof (state)\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "have cont_s: \"continuous_on UNIV s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV s", "by (rule has_derivative_continuous_on[OF Ds])"], ["proof (state)\nthis:\n  continuous_on UNIV s\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "have cont_s': \"continuous_on S s\" for S"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on S s", "by (rule continuous_on_subset[OF cont_s subset_UNIV])"], ["proof (state)\nthis:\n  continuous_on ?S1 s\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "note s_tendsto[tendsto_intros] = continuous_on_tendsto_compose[OF cont_s, THEN tendsto_eq_rhs]"], ["proof (state)\nthis:\n  \\<lbrakk>(?g1 \\<longlongrightarrow> ?l1) ?F; ?l1 \\<in> UNIV;\n   \\<forall>\\<^sub>F x in ?F. ?g1 x \\<in> UNIV; s ?l1 = ?y\\<rbrakk>\n  \\<Longrightarrow> ((\\<lambda>x. s (?g1 x)) \\<longlongrightarrow> ?y) ?F\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "note cls[simp, intro] = closed_levelset_within[OF cont_s' cS, of 0]"], ["proof (state)\nthis:\n  closed {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "note [tendsto_intros] = continuous_on_tendsto_compose[OF cont_s]\n    isCont_tendsto_compose[OF DsC]"], ["proof (state)\nthis:\n  \\<lbrakk>(?g \\<longlongrightarrow> ?l) ?F; ?l \\<in> UNIV;\n   \\<forall>\\<^sub>F x in ?F. ?g x \\<in> UNIV\\<rbrakk>\n  \\<Longrightarrow> ((\\<lambda>x. s (?g x)) \\<longlongrightarrow> s ?l) ?F\n  (?f \\<longlongrightarrow> ?l) ?F \\<Longrightarrow>\n  ((\\<lambda>x. Ds (?f x)) \\<longlongrightarrow> Ds ?l) ?F\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "obtain u e\n    where \"s (flow0 x (u x)) = 0\"\n      \"u x = return_time ?P x\"\n      \"(\\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0)\"\n      \"continuous_on (cball x e) u\"\n      \"(\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> Sigma X existence_ivl0\"\n      \"0 < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule returns_to_implicit_function[OF rt cS Ds DsC nz]; blast)"], ["proof (state)\nthis:\n  s (flow0 x (u x)) = 0\n  u x = return_time {x \\<in> S. s x = 0} x\n  ?y1 \\<in> cball x e \\<Longrightarrow> s (flow0 ?y1 (u ?y1)) = 0\n  continuous_on (cball x e) u\n  (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> Sigma X existence_ivl0\n  0 < e\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "then"], ["proof (chain)\npicking this:\n  s (flow0 x (u x)) = 0\n  u x = return_time {x \\<in> S. s x = 0} x\n  ?y1 \\<in> cball x e \\<Longrightarrow> s (flow0 ?y1 (u ?y1)) = 0\n  continuous_on (cball x e) u\n  (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> Sigma X existence_ivl0\n  0 < e", "have u:\n    \"s (flow0 x (u x)) = 0\" \"u x = ?t1\"\n    \"(\\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0)\"\n    \"continuous_on (cball x e) u\"\n    \"\\<And>z. z \\<in> cball x e \\<Longrightarrow> u z \\<in> existence_ivl0 z\"\n    \"e > 0\""], ["proof (prove)\nusing this:\n  s (flow0 x (u x)) = 0\n  u x = return_time {x \\<in> S. s x = 0} x\n  ?y1 \\<in> cball x e \\<Longrightarrow> s (flow0 ?y1 (u ?y1)) = 0\n  continuous_on (cball x e) u\n  (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> Sigma X existence_ivl0\n  0 < e\n\ngoal (1 subgoal):\n 1. (s (flow0 x (u x)) = 0 &&&\n     u x = return_time {x \\<in> S. s x = 0} x &&&\n     (\\<And>y.\n         y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0)) &&&\n    continuous_on (cball x e) u &&&\n    (\\<And>z.\n        z \\<in> cball x e \\<Longrightarrow> u z \\<in> existence_ivl0 z) &&&\n    0 < e", "by (force simp: split_beta')+"], ["proof (state)\nthis:\n  s (flow0 x (u x)) = 0\n  u x = return_time {x \\<in> S. s x = 0} x\n  ?y1 \\<in> cball x e \\<Longrightarrow> s (flow0 ?y1 (u ?y1)) = 0\n  continuous_on (cball x e) u\n  ?z1 \\<in> cball x e \\<Longrightarrow> u ?z1 \\<in> existence_ivl0 ?z1\n  0 < e\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "have \"\\<forall>\\<^sub>F y in at x. y \\<in> ball x e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. y \\<in> ball x e", "using eventually_at_ball[OF \\<open>0 < e\\<close>]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at ?z within ?A.\n     t \\<in> ball ?z e \\<and> t \\<in> ?A\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. y \\<in> ball x e", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. y \\<in> ball x e\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> ball x e", "have ev_cball: \"\\<forall>\\<^sub>F y in at x. y \\<in> cball x e\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> ball x e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. y \\<in> cball x e", "by eventually_elim (use \\<open>e > 0\\<close> in auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x e\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x e\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "have \"continuous_on (ball x e) u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on (ball x e) u", "using u"], ["proof (prove)\nusing this:\n  s (flow0 x (u x)) = 0\n  u x = return_time {x \\<in> S. s x = 0} x\n  ?y1 \\<in> cball x e \\<Longrightarrow> s (flow0 ?y1 (u ?y1)) = 0\n  continuous_on (cball x e) u\n  ?z1 \\<in> cball x e \\<Longrightarrow> u ?z1 \\<in> existence_ivl0 ?z1\n  0 < e\n\ngoal (1 subgoal):\n 1. continuous_on (ball x e) u", "by (auto simp: continuous_on_subset)"], ["proof (state)\nthis:\n  continuous_on (ball x e) u\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "then"], ["proof (chain)\npicking this:\n  continuous_on (ball x e) u", "have [tendsto_intros]: \"(u \\<longlongrightarrow> u x) (at x)\""], ["proof (prove)\nusing this:\n  continuous_on (ball x e) u\n\ngoal (1 subgoal):\n 1. u \\<midarrow>x\\<rightarrow> u x", "using \\<open>e > 0\\<close> at_within_open[of y \"ball x e\" for y]"], ["proof (prove)\nusing this:\n  continuous_on (ball x e) u\n  0 < e\n  \\<lbrakk>?y3 \\<in> ball x e; open (ball x e)\\<rbrakk>\n  \\<Longrightarrow> at ?y3 within ball x e = at ?y3\n\ngoal (1 subgoal):\n 1. u \\<midarrow>x\\<rightarrow> u x", "by (auto simp: continuous_on_def)"], ["proof (state)\nthis:\n  u \\<midarrow>x\\<rightarrow> u x\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "then"], ["proof (chain)\npicking this:\n  u \\<midarrow>x\\<rightarrow> u x", "have flow0_u_tendsto: \"(\\<lambda>x. flow0 x (u x)) \\<midarrow>x\\<rightarrow> poincare_map ?P x\""], ["proof (prove)\nusing this:\n  u \\<midarrow>x\\<rightarrow> u x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. flow0 x (u x)) \\<midarrow>x\n    \\<rightarrow> poincare_map {x \\<in> S. s x = 0} x", "by (auto intro!: tendsto_eq_intros u return_time_exivl rt simp: poincare_map_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. flow0 x (u x)) \\<midarrow>x\n  \\<rightarrow> poincare_map {x \\<in> S. s x = 0} x\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "have s_imp: \"s (poincare_map {x \\<in> S. s x = 0} x) = 0 \\<longrightarrow> poincare_map {x \\<in> S. s x = 0} x \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s (poincare_map {x \\<in> S. s x = 0} x) = 0 \\<longrightarrow>\n    poincare_map {x \\<in> S. s x = 0} x \\<in> S", "using poincare_map_returns[OF rt]"], ["proof (prove)\nusing this:\n  closed {x \\<in> S. s x = 0} \\<Longrightarrow>\n  poincare_map {x \\<in> S. s x = 0} x \\<in> {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. s (poincare_map {x \\<in> S. s x = 0} x) = 0 \\<longrightarrow>\n    poincare_map {x \\<in> S. s x = 0} x \\<in> S", "by auto"], ["proof (state)\nthis:\n  s (poincare_map {x \\<in> S. s x = 0} x) = 0 \\<longrightarrow>\n  poincare_map {x \\<in> S. s x = 0} x \\<in> S\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "from eventually_tendsto_compose_within[OF eventually_inside s_imp flow0_u_tendsto]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> UNIV \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at x.\n     s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S", "have \"\\<forall>\\<^sub>F x in at x. s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> UNIV \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at x.\n     s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x.\n       s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x.\n     s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "with ev_cball"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x e\n  \\<forall>\\<^sub>F x in at x.\n     s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S", "have \"\\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> S\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x e\n  \\<forall>\\<^sub>F x in at x.\n     s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> S", "by eventually_elim (auto simp: u)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> S\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> S\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "{"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> S\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "have \"x \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> X", "using u(5) u(6)"], ["proof (prove)\nusing this:\n  ?z1 \\<in> cball x e \\<Longrightarrow> u ?z1 \\<in> existence_ivl0 ?z1\n  0 < e\n\ngoal (1 subgoal):\n 1. x \\<in> X", "by force"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "from ev_cball"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x e", "have ev_X: \"\\<forall>\\<^sub>F y in at x. y \\<in> X\"\\<comment> \\<open>eigentlich ist das \\<open>open X\\<close>\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. y \\<in> X", "apply eventually_elim"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> cball x e \\<Longrightarrow> y \\<in> X", "apply (rule)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> cball x e \\<Longrightarrow> ?t3 y \\<in> existence_ivl0 y", "by (rule u)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. y \\<in> X\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. y \\<in> X\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "{"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. y \\<in> X\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "{"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. y \\<in> X\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "assume a: \"x \\<notin> S\""], ["proof (state)\nthis:\n  x \\<notin> S\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "then"], ["proof (chain)\npicking this:\n  x \\<notin> S", "have \"open (-S)\" \"x \\<in> - S\""], ["proof (prove)\nusing this:\n  x \\<notin> S\n\ngoal (1 subgoal):\n 1. open (- S) &&& x \\<in> - S", "using cS"], ["proof (prove)\nusing this:\n  x \\<notin> S\n  closed S\n\ngoal (1 subgoal):\n 1. open (- S) &&& x \\<in> - S", "by auto"], ["proof (state)\nthis:\n  open (- S)\n  x \\<in> - S\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "from topological_tendstoD[OF tendsto_ident_at this]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x within ?s1. x \\<in> - S", "have \"(\\<forall>\\<^sub>F y in at x. y \\<notin> S)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x within ?s1. x \\<in> - S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. y \\<notin> S", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. y \\<notin> S\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "}"], ["proof (state)\nthis:\n  x \\<notin> S \\<Longrightarrow> \\<forall>\\<^sub>F y in at x. y \\<notin> S\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "moreover"], ["proof (state)\nthis:\n  x \\<notin> S \\<Longrightarrow> \\<forall>\\<^sub>F y in at x. y \\<notin> S\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "{"], ["proof (state)\nthis:\n  x \\<notin> S \\<Longrightarrow> \\<forall>\\<^sub>F y in at x. y \\<notin> S\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "assume a: \"s x \\<noteq> 0\""], ["proof (state)\nthis:\n  s x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "have \"(\\<forall>\\<^sub>F y in at x. s y \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. s y \\<noteq> 0", "by (rule tendsto_imp_eventually_ne[OF _ a]) (auto intro!: tendsto_eq_intros)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. s y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "}"], ["proof (state)\nthis:\n  s x \\<noteq> 0 \\<Longrightarrow>\n  \\<forall>\\<^sub>F y in at x. s y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "moreover"], ["proof (state)\nthis:\n  s x \\<noteq> 0 \\<Longrightarrow>\n  \\<forall>\\<^sub>F y in at x. s y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "{"], ["proof (state)\nthis:\n  s x \\<noteq> 0 \\<Longrightarrow>\n  \\<forall>\\<^sub>F y in at x. s y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "assume a: \"(Ds x) (f x) \\<noteq> 0\""], ["proof (state)\nthis:\n  blinfun_apply (Ds x) (f x) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "have \"(\\<forall>\\<^sub>F y in at x. blinfun_apply (Ds y) (f y) \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. blinfun_apply (Ds y) (f y) \\<noteq> 0", "by (rule tendsto_imp_eventually_ne[OF _ a]) (auto intro!: tendsto_eq_intros ev_X \\<open>x \\<in> X\\<close>)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. blinfun_apply (Ds y) (f y) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "}"], ["proof (state)\nthis:\n  blinfun_apply (Ds x) (f x) \\<noteq> 0 \\<Longrightarrow>\n  \\<forall>\\<^sub>F y in at x. blinfun_apply (Ds y) (f y) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "ultimately"], ["proof (chain)\npicking this:\n  x \\<notin> S \\<Longrightarrow> \\<forall>\\<^sub>F y in at x. y \\<notin> S\n  s x \\<noteq> 0 \\<Longrightarrow>\n  \\<forall>\\<^sub>F y in at x. s y \\<noteq> 0\n  blinfun_apply (Ds x) (f x) \\<noteq> 0 \\<Longrightarrow>\n  \\<forall>\\<^sub>F y in at x. blinfun_apply (Ds y) (f y) \\<noteq> 0", "have \"(\\<forall>\\<^sub>F y in at x. y \\<notin> S) \\<or> (\\<forall>\\<^sub>F y in at x. s y \\<noteq> 0) \\<or> (\\<forall>\\<^sub>F y in at x. blinfun_apply (Ds y) (f y) \\<noteq> 0)\""], ["proof (prove)\nusing this:\n  x \\<notin> S \\<Longrightarrow> \\<forall>\\<^sub>F y in at x. y \\<notin> S\n  s x \\<noteq> 0 \\<Longrightarrow>\n  \\<forall>\\<^sub>F y in at x. s y \\<noteq> 0\n  blinfun_apply (Ds x) (f x) \\<noteq> 0 \\<Longrightarrow>\n  \\<forall>\\<^sub>F y in at x. blinfun_apply (Ds y) (f y) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<forall>\\<^sub>F y in at x. y \\<notin> S) \\<or>\n    (\\<forall>\\<^sub>F y in at x. s y \\<noteq> 0) \\<or>\n    (\\<forall>\\<^sub>F y in at x. blinfun_apply (Ds y) (f y) \\<noteq> 0)", "using nz0"], ["proof (prove)\nusing this:\n  x \\<notin> S \\<Longrightarrow> \\<forall>\\<^sub>F y in at x. y \\<notin> S\n  s x \\<noteq> 0 \\<Longrightarrow>\n  \\<forall>\\<^sub>F y in at x. s y \\<noteq> 0\n  blinfun_apply (Ds x) (f x) \\<noteq> 0 \\<Longrightarrow>\n  \\<forall>\\<^sub>F y in at x. blinfun_apply (Ds y) (f y) \\<noteq> 0\n  x \\<notin> S \\<or>\n  s x \\<noteq> 0 \\<or> blinfun_apply (Ds x) (f x) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<forall>\\<^sub>F y in at x. y \\<notin> S) \\<or>\n    (\\<forall>\\<^sub>F y in at x. s y \\<noteq> 0) \\<or>\n    (\\<forall>\\<^sub>F y in at x. blinfun_apply (Ds y) (f y) \\<noteq> 0)", "by auto"], ["proof (state)\nthis:\n  (\\<forall>\\<^sub>F y in at x. y \\<notin> S) \\<or>\n  (\\<forall>\\<^sub>F y in at x. s y \\<noteq> 0) \\<or>\n  (\\<forall>\\<^sub>F y in at x. blinfun_apply (Ds y) (f y) \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "then"], ["proof (chain)\npicking this:\n  (\\<forall>\\<^sub>F y in at x. y \\<notin> S) \\<or>\n  (\\<forall>\\<^sub>F y in at x. s y \\<noteq> 0) \\<or>\n  (\\<forall>\\<^sub>F y in at x. blinfun_apply (Ds y) (f y) \\<noteq> 0)", "have \"\\<forall>\\<^sub>F y in at x. y \\<notin> S \\<or> s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  (\\<forall>\\<^sub>F y in at x. y \\<notin> S) \\<or>\n  (\\<forall>\\<^sub>F y in at x. s y \\<noteq> 0) \\<or>\n  (\\<forall>\\<^sub>F y in at x. blinfun_apply (Ds y) (f y) \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       y \\<notin> S \\<or>\n       s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>\\<^sub>F y in at x. y \\<notin> S) \\<or>\n    (\\<forall>\\<^sub>F y in at x. s y \\<noteq> 0) \\<or>\n    (\\<forall>\\<^sub>F y in at x.\n        blinfun_apply (Ds y) (f y) \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x.\n       y \\<notin> S \\<or>\n       s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F y in at x. y \\<notin> S \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x.\n       y \\<notin> S \\<or>\n       s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0\n 2. (\\<forall>\\<^sub>F y in at x. s y \\<noteq> 0) \\<or>\n    (\\<forall>\\<^sub>F y in at x.\n        blinfun_apply (Ds y) (f y) \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x.\n       y \\<notin> S \\<or>\n       s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. y \\<notin> S \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x.\n       y \\<notin> S \\<or>\n       s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0", "by (rule eventually_elim2, assumption, assumption, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>\\<^sub>F y in at x. s y \\<noteq> 0) \\<or>\n    (\\<forall>\\<^sub>F y in at x.\n        blinfun_apply (Ds y) (f y) \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x.\n       y \\<notin> S \\<or>\n       s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>\\<^sub>F y in at x. s y \\<noteq> 0) \\<or>\n    (\\<forall>\\<^sub>F y in at x.\n        blinfun_apply (Ds y) (f y) \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x.\n       y \\<notin> S \\<or>\n       s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F y in at x. s y \\<noteq> 0 \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x.\n       y \\<notin> S \\<or>\n       s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0\n 2. \\<forall>\\<^sub>F y in at x.\n       blinfun_apply (Ds y) (f y) \\<noteq> 0 \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x.\n       y \\<notin> S \\<or>\n       s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. s y \\<noteq> 0 \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x.\n       y \\<notin> S \\<or>\n       s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0", "by (rule eventually_elim2, assumption, assumption, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       blinfun_apply (Ds y) (f y) \\<noteq> 0 \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x.\n       y \\<notin> S \\<or>\n       s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       blinfun_apply (Ds y) (f y) \\<noteq> 0 \\<Longrightarrow>\n    \\<forall>\\<^sub>F y in at x.\n       y \\<notin> S \\<or>\n       s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0", "by (rule eventually_elim2, assumption, assumption, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x.\n     y \\<notin> S \\<or>\n     s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "}"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x.\n     y \\<notin> S \\<or>\n     s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> X\n  \\<forall>\\<^sub>F y in at x.\n     y \\<notin> S \\<or>\n     s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0", "have \"\\<forall>\\<^sub>F y in at x. (y \\<notin> S \\<or> s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0) \\<and> y \\<in> X\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> X\n  \\<forall>\\<^sub>F y in at x.\n     y \\<notin> S \\<or>\n     s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       (y \\<notin> S \\<or>\n        s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0) \\<and>\n       y \\<in> X", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x.\n     (y \\<notin> S \\<or>\n      s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0) \\<and>\n     y \\<in> X\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "}"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x.\n     (y \\<notin> S \\<or>\n      s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0) \\<and>\n     y \\<in> X\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x.\n     (y \\<notin> S \\<or>\n      s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0) \\<and>\n     y \\<in> X", "have \"\\<forall>\\<^sub>F y in at x. \\<forall>\\<^sub>F t in at_right 0. flow0 y t \\<notin> {x \\<in> S. s x = 0}\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x.\n     (y \\<notin> S \\<or>\n      s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0) \\<and>\n     y \\<in> X\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       \\<forall>\\<^sub>F t in at_right 0.\n          flow0 y t \\<notin> {x \\<in> S. s x = 0}", "apply eventually_elim"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       (y \\<notin> S \\<or>\n        s y \\<noteq> 0 \\<or> blinfun_apply (Ds y) (f y) \\<noteq> 0) \\<and>\n       y \\<in> X \\<Longrightarrow>\n       \\<forall>\\<^sub>F t in at_right 0.\n          flow0 y t \\<notin> {x \\<in> S. s x = 0}", "by (rule flow_avoids_surface_eventually_at_right[where Ds=Ds]) (auto intro!: Ds DsC cS)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x.\n     \\<forall>\\<^sub>F t in at_right 0.\n        flow0 y t \\<notin> {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x.\n     \\<forall>\\<^sub>F t in at_right 0.\n        flow0 y t \\<notin> {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "have at_eq: \"(at x within cball x e) = at x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at x within cball x e = at x", "apply (rule at_within_interior)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> interior (cball x e)", "apply (auto simp: \\<open>e > 0\\<close>)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  at x within cball x e = at x\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "have \"u x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < u x", "using u(1)"], ["proof (prove)\nusing this:\n  s (flow0 x (u x)) = 0\n\ngoal (1 subgoal):\n 1. 0 < u x", "by (auto simp: u rt cont_s' intro!: return_time_pos closed_levelset_within cS)"], ["proof (state)\nthis:\n  0 < u x\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "then"], ["proof (chain)\npicking this:\n  0 < u x", "have \"\\<forall>\\<^sub>F y in at x. u y > 0\""], ["proof (prove)\nusing this:\n  0 < u x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. 0 < u y", "apply (rule order_tendstoD[rotated])"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<midarrow>x\\<rightarrow> u x", "using u(4)"], ["proof (prove)\nusing this:\n  continuous_on (cball x e) u\n\ngoal (1 subgoal):\n 1. u \\<midarrow>x\\<rightarrow> u x", "apply (auto simp: continuous_on_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>cball x e.\n       (u \\<longlongrightarrow> u xa)\n        (at xa within cball x e) \\<Longrightarrow>\n    u \\<midarrow>x\\<rightarrow> u x", "apply (drule bspec[where x=x])"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<in> cball x e\n 2. (u \\<longlongrightarrow> u x) (at x within cball x e) \\<Longrightarrow>\n    u \\<midarrow>x\\<rightarrow> u x", "using \\<open>e > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (2 subgoals):\n 1. x \\<in> cball x e\n 2. (u \\<longlongrightarrow> u x) (at x within cball x e) \\<Longrightarrow>\n    u \\<midarrow>x\\<rightarrow> u x", "by (auto simp: at_eq)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. 0 < u y\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x e\n  \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> S\n  \\<forall>\\<^sub>F y in at x.\n     \\<forall>\\<^sub>F t in at_right 0.\n        flow0 y t \\<notin> {x \\<in> S. s x = 0}\n  \\<forall>\\<^sub>F y in at x. 0 < u y", "show \"\\<forall>\\<^sub>F y in at x. returns_to ?P y\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x e\n  \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> S\n  \\<forall>\\<^sub>F y in at x.\n     \\<forall>\\<^sub>F t in at_right 0.\n        flow0 y t \\<notin> {x \\<in> S. s x = 0}\n  \\<forall>\\<^sub>F y in at x. 0 < u y\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "apply eventually_elim"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> cball x e; flow0 y (u y) \\<in> S;\n        \\<forall>\\<^sub>F t in at_right 0.\n           flow0 y t \\<notin> {y \\<in> S. s y = 0};\n        0 < u y\\<rbrakk>\n       \\<Longrightarrow> returns_to {x \\<in> S. s x = 0} y", "subgoal premises prems for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. returns_to {x \\<in> S. s x = 0} y", "apply (rule returns_toI[where t=\"u y\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. 0 < u y\n 2. u y \\<in> existence_ivl0 y\n 3. flow0 y (u y) \\<in> {x \\<in> S. s x = 0}\n 4. \\<forall>\\<^sub>F t in at_right 0.\n       flow0 y t \\<notin> {x \\<in> S. s x = 0}\n 5. closed {x \\<in> S. s x = 0}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < u y", "using prems"], ["proof (prove)\nusing this:\n  y \\<in> cball x e\n  flow0 y (u y) \\<in> S\n  \\<forall>\\<^sub>F t in at_right 0. flow0 y t \\<notin> {y \\<in> S. s y = 0}\n  0 < u y\n\ngoal (1 subgoal):\n 1. 0 < u y", "by auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. u y \\<in> existence_ivl0 y\n 2. flow0 y (u y) \\<in> {x \\<in> S. s x = 0}\n 3. \\<forall>\\<^sub>F t in at_right 0.\n       flow0 y t \\<notin> {x \\<in> S. s x = 0}\n 4. closed {x \\<in> S. s x = 0}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. u y \\<in> existence_ivl0 y", "apply (rule u)"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> cball x e", "apply (rule prems)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (3 subgoals):\n 1. flow0 y (u y) \\<in> {x \\<in> S. s x = 0}\n 2. \\<forall>\\<^sub>F t in at_right 0.\n       flow0 y t \\<notin> {x \\<in> S. s x = 0}\n 3. closed {x \\<in> S. s x = 0}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 y (u y) \\<in> {x \\<in> S. s x = 0}", "using u(3)[of y] prems"], ["proof (prove)\nusing this:\n  y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0\n  y \\<in> cball x e\n  flow0 y (u y) \\<in> S\n  \\<forall>\\<^sub>F t in at_right 0. flow0 y t \\<notin> {y \\<in> S. s y = 0}\n  0 < u y\n\ngoal (1 subgoal):\n 1. flow0 y (u y) \\<in> {x \\<in> S. s x = 0}", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F t in at_right 0.\n       flow0 y t \\<notin> {x \\<in> S. s x = 0}\n 2. closed {x \\<in> S. s x = 0}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0.\n       flow0 y t \\<notin> {x \\<in> S. s x = 0}", "using prems(3)"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at_right 0. flow0 y t \\<notin> {y \\<in> S. s y = 0}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0.\n       flow0 y t \\<notin> {x \\<in> S. s x = 0}", "by eventually_elim auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. closed {x \\<in> S. s x = 0}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. closed {x \\<in> S. s x = 0}", "by simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  eventually (returns_to {x \\<in> S. s x = 0}) (at x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  return_time_isCont_outside:\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes rt: \"returns_to {x \\<in> S. s x = 0} x\" (is \"returns_to ?P x\")\n  assumes cS: \"closed S\"\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n  assumes DsC: \"\\<And>x. isCont Ds x\"\n  assumes through: \"(Ds (poincare_map ?P x)) (f (poincare_map ?P x)) \\<noteq> 0\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map ?P x). s x = 0 \\<longrightarrow> x \\<in> S\"\n  assumes outside: \"x \\<notin> S \\<or> s x \\<noteq> 0\"\n  shows \"isCont (return_time ?P) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (return_time {x \\<in> S. s x = 0}) x", "unfolding isCont_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time {x \\<in> S. s x = 0} \\<midarrow>x\n    \\<rightarrow> return_time {x \\<in> S. s x = 0} x", "proof (rule tendstoI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "fix e_orig::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "assume \"e_orig > 0\""], ["proof (state)\nthis:\n  0 < e_orig\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "define e where \"e = e_orig / 2\""], ["proof (state)\nthis:\n  e = e_orig / 2\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"e > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < e", "using \\<open>e_orig > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < e_orig\n\ngoal (1 subgoal):\n 1. 0 < e", "by (simp add: e_def)"], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have cont_s: \"continuous_on UNIV s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV s", "by (rule has_derivative_continuous_on[OF Ds])"], ["proof (state)\nthis:\n  continuous_on UNIV s\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "then"], ["proof (chain)\npicking this:\n  continuous_on UNIV s", "have s_tendsto: \"(s \\<longlongrightarrow> s x) (at x)\" for x"], ["proof (prove)\nusing this:\n  continuous_on UNIV s\n\ngoal (1 subgoal):\n 1. s \\<midarrow>x\\<rightarrow> s x", "by (auto simp: continuous_on_def)"], ["proof (state)\nthis:\n  s \\<midarrow>?x1\\<rightarrow> s ?x1\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have cont_s': \"continuous_on S s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on S s", "by (rule continuous_on_subset[OF cont_s subset_UNIV])"], ["proof (state)\nthis:\n  continuous_on S s\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "note cls[simp, intro] = closed_levelset_within[OF cont_s' cS(1)]"], ["proof (state)\nthis:\n  closed {x \\<in> S. s x = ?c}\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"{x. s x = 0} = s -` {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. s x = 0} = s -` {0}", "by auto"], ["proof (state)\nthis:\n  {x. s x = 0} = s -` {0}\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have ret_exivl: \"return_time ?P x \\<in> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x", "by (rule return_time_exivl; fact)"], ["proof (state)\nthis:\n  return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "then"], ["proof (chain)\npicking this:\n  return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x", "have [intro, simp]: \"x \\<in> X\""], ["proof (prove)\nusing this:\n  return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. x \\<in> X", "by auto"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have isCont_Ds_f: \"isCont (\\<lambda>s. Ds s (f s)) (poincare_map ?P x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (\\<lambda>s. blinfun_apply (Ds s) (f s))\n     (poincare_map {x \\<in> S. s x = 0} x)", "apply (auto intro!: continuous_intros DsC)"], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont f (poincare_map {x \\<in> S. s x = 0} x)", "apply (rule has_derivative_continuous)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f has_derivative ?f'3) (at (poincare_map {x \\<in> S. s x = 0} x))", "apply (rule derivative_rhs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. poincare_map {x \\<in> S. s x = 0} x \\<in> X", "by (auto simp: poincare_map_def intro!: flow_in_domain return_time_exivl assms)"], ["proof (state)\nthis:\n  isCont (\\<lambda>s. blinfun_apply (Ds s) (f s))\n   (poincare_map {x \\<in> S. s x = 0} x)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "obtain u eu where u:\n      \"s (flow0 x (u x)) = 0\"\n      \"u x = return_time ?P x\"\n      \"(\\<And>y. y \\<in> cball x eu \\<Longrightarrow> s (flow0 y (u y)) = 0)\"\n      \"continuous_on (cball x eu) u\"\n      \"(\\<lambda>t. (t, u t)) ` cball x eu \\<subseteq> Sigma X existence_ivl0\"\n      \"0 < eu\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u eu.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y.\n            y \\<in> cball x eu \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x eu) u;\n         (\\<lambda>t. (t, u t)) ` cball x eu\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < eu\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule returns_to_implicit_function[OF rt cS(1) Ds DsC through]; blast)"], ["proof (state)\nthis:\n  s (flow0 x (u x)) = 0\n  u x = return_time {x \\<in> S. s x = 0} x\n  ?y1 \\<in> cball x eu \\<Longrightarrow> s (flow0 ?y1 (u ?y1)) = 0\n  continuous_on (cball x eu) u\n  (\\<lambda>t. (t, u t)) ` cball x eu \\<subseteq> Sigma X existence_ivl0\n  0 < eu\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have u_tendsto: \"(u \\<longlongrightarrow> u x) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<midarrow>x\\<rightarrow> u x", "unfolding isCont_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont u x", "apply (rule continuous_on_interior[OF u(4)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> interior (cball x eu)", "using \\<open>0 < eu\\<close>"], ["proof (prove)\nusing this:\n  0 < eu\n\ngoal (1 subgoal):\n 1. x \\<in> interior (cball x eu)", "by auto"], ["proof (state)\nthis:\n  u \\<midarrow>x\\<rightarrow> u x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"u x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < u x", "by (auto simp: u intro!: return_time_pos rt)"], ["proof (state)\nthis:\n  0 < u x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "from order_tendstoD(1)[OF u_tendsto this]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x. 0 < u x", "have \"\\<forall>\\<^sub>F x in at x. 0 < u x\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x. 0 < u x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x. 0 < u x", "."], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x. 0 < u x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x. 0 < u x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"\\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu", "using eventually_at_ball[OF \\<open>0 < eu\\<close>, of x]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at x within ?A. t \\<in> ball x eu \\<and> t \\<in> ?A\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"x \\<notin> S \\<or> s x \\<noteq> 0 \\<or> blinfun_apply (Ds x) (f x) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> S \\<or>\n    s x \\<noteq> 0 \\<or> blinfun_apply (Ds x) (f x) \\<noteq> 0", "using outside"], ["proof (prove)\nusing this:\n  x \\<notin> S \\<or> s x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x \\<notin> S \\<or>\n    s x \\<noteq> 0 \\<or> blinfun_apply (Ds x) (f x) \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  x \\<notin> S \\<or>\n  s x \\<noteq> 0 \\<or> blinfun_apply (Ds x) (f x) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have returns: \"\\<forall>\\<^sub>F y in at x. returns_to ?P y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "by (rule eventually_returns_to; fact)"], ["proof (state)\nthis:\n  eventually (returns_to {x \\<in> S. s x = 0}) (at x)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "moreover"], ["proof (state)\nthis:\n  eventually (returns_to {x \\<in> S. s x = 0}) (at x)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"\\<forall>\\<^sub>F y in at x. y \\<in> ball x eu\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. y \\<in> ball x eu", "using eventually_at_ball[OF \\<open>0 < eu\\<close>]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at ?z within ?A.\n     t \\<in> ball ?z eu \\<and> t \\<in> ?A\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. y \\<in> ball x eu", "by eventually_elim simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. y \\<in> ball x eu\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> ball x eu", "have ev_cball: \"\\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> ball x eu\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu", "by eventually_elim (use \\<open>e > 0\\<close> in auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"continuous_on (ball x eu) u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on (ball x eu) u", "using u"], ["proof (prove)\nusing this:\n  s (flow0 x (u x)) = 0\n  u x = return_time {x \\<in> S. s x = 0} x\n  ?y1 \\<in> cball x eu \\<Longrightarrow> s (flow0 ?y1 (u ?y1)) = 0\n  continuous_on (cball x eu) u\n  (\\<lambda>t. (t, u t)) ` cball x eu \\<subseteq> Sigma X existence_ivl0\n  0 < eu\n\ngoal (1 subgoal):\n 1. continuous_on (ball x eu) u", "by (auto simp: continuous_on_subset)"], ["proof (state)\nthis:\n  continuous_on (ball x eu) u\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "then"], ["proof (chain)\npicking this:\n  continuous_on (ball x eu) u", "have [tendsto_intros]: \"(u \\<longlongrightarrow> u x) (at x)\""], ["proof (prove)\nusing this:\n  continuous_on (ball x eu) u\n\ngoal (1 subgoal):\n 1. u \\<midarrow>x\\<rightarrow> u x", "using \\<open>eu > 0\\<close> at_within_open[of y \"ball x eu\" for y]"], ["proof (prove)\nusing this:\n  continuous_on (ball x eu) u\n  0 < eu\n  \\<lbrakk>?y3 \\<in> ball x eu; open (ball x eu)\\<rbrakk>\n  \\<Longrightarrow> at ?y3 within ball x eu = at ?y3\n\ngoal (1 subgoal):\n 1. u \\<midarrow>x\\<rightarrow> u x", "by (auto simp: continuous_on_def)"], ["proof (state)\nthis:\n  u \\<midarrow>x\\<rightarrow> u x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "then"], ["proof (chain)\npicking this:\n  u \\<midarrow>x\\<rightarrow> u x", "have flow0_u_tendsto: \"(\\<lambda>x. flow0 x (u x)) \\<midarrow>x\\<rightarrow> poincare_map ?P x\""], ["proof (prove)\nusing this:\n  u \\<midarrow>x\\<rightarrow> u x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. flow0 x (u x)) \\<midarrow>x\n    \\<rightarrow> poincare_map {x \\<in> S. s x = 0} x", "by (auto intro!: tendsto_eq_intros u return_time_exivl rt simp: poincare_map_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. flow0 x (u x)) \\<midarrow>x\n  \\<rightarrow> poincare_map {x \\<in> S. s x = 0} x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have s_imp: \"s (poincare_map {x \\<in> S. s x = 0} x) = 0 \\<longrightarrow> poincare_map {x \\<in> S. s x = 0} x \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s (poincare_map {x \\<in> S. s x = 0} x) = 0 \\<longrightarrow>\n    poincare_map {x \\<in> S. s x = 0} x \\<in> S", "using poincare_map_returns[OF rt]"], ["proof (prove)\nusing this:\n  closed {x \\<in> S. s x = 0} \\<Longrightarrow>\n  poincare_map {x \\<in> S. s x = 0} x \\<in> {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. s (poincare_map {x \\<in> S. s x = 0} x) = 0 \\<longrightarrow>\n    poincare_map {x \\<in> S. s x = 0} x \\<in> S", "by auto"], ["proof (state)\nthis:\n  s (poincare_map {x \\<in> S. s x = 0} x) = 0 \\<longrightarrow>\n  poincare_map {x \\<in> S. s x = 0} x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "from eventually_tendsto_compose_within[OF eventually_inside s_imp flow0_u_tendsto]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> UNIV \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at x.\n     s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S", "have \"\\<forall>\\<^sub>F x in at x. s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> UNIV \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at x.\n     s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x.\n       s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x.\n     s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "with ev_cball"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\n  \\<forall>\\<^sub>F x in at x.\n     s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S", "have \"\\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> S\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\n  \\<forall>\\<^sub>F x in at x.\n     s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> S", "by eventually_elim (auto simp: u)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x. 0 < u x\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\n  eventually (returns_to {x \\<in> S. s x = 0}) (at x)\n  \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> S", "have u_returns_ge: \"\\<forall>\\<^sub>F y in at x. returns_to ?P y \\<and> return_time ?P y \\<le> u y\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x. 0 < u x\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\n  eventually (returns_to {x \\<in> S. s x = 0}) (at x)\n  \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       returns_to {x \\<in> S. s x = 0} y \\<and>\n       return_time {x \\<in> S. s x = 0} y \\<le> u y", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>0 < u y; y \\<in> cball x eu;\n        returns_to {y \\<in> S. s y = 0} y; flow0 y (u y) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> returns_to {x \\<in> S. s x = 0} y \\<and>\n                         return_time {x \\<in> S. s x = 0} y \\<le> u y", "case (elim y)"], ["proof (state)\nthis:\n  0 < u y\n  y \\<in> cball x eu\n  returns_to {y \\<in> S. s y = 0} y\n  flow0 y (u y) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>0 < u y; y \\<in> cball x eu;\n        returns_to {y \\<in> S. s y = 0} y; flow0 y (u y) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> returns_to {x \\<in> S. s x = 0} y \\<and>\n                         return_time {x \\<in> S. s x = 0} y \\<le> u y", "then"], ["proof (chain)\npicking this:\n  0 < u y\n  y \\<in> cball x eu\n  returns_to {y \\<in> S. s y = 0} y\n  flow0 y (u y) \\<in> S", "show ?case"], ["proof (prove)\nusing this:\n  0 < u y\n  y \\<in> cball x eu\n  returns_to {y \\<in> S. s y = 0} y\n  flow0 y (u y) \\<in> S\n\ngoal (1 subgoal):\n 1. returns_to {x \\<in> S. s x = 0} y \\<and>\n    return_time {x \\<in> S. s x = 0} y \\<le> u y", "using u elim"], ["proof (prove)\nusing this:\n  0 < u y\n  y \\<in> cball x eu\n  returns_to {y \\<in> S. s y = 0} y\n  flow0 y (u y) \\<in> S\n  s (flow0 x (u x)) = 0\n  u x = return_time {x \\<in> S. s x = 0} x\n  ?y1 \\<in> cball x eu \\<Longrightarrow> s (flow0 ?y1 (u ?y1)) = 0\n  continuous_on (cball x eu) u\n  (\\<lambda>t. (t, u t)) ` cball x eu \\<subseteq> Sigma X existence_ivl0\n  0 < eu\n  0 < u y\n  y \\<in> cball x eu\n  returns_to {y \\<in> S. s y = 0} y\n  flow0 y (u y) \\<in> S\n\ngoal (1 subgoal):\n 1. returns_to {x \\<in> S. s x = 0} y \\<and>\n    return_time {x \\<in> S. s x = 0} y \\<le> u y", "by (auto intro!: return_time_le[OF _ cls])"], ["proof (state)\nthis:\n  returns_to {x \\<in> S. s x = 0} y \\<and>\n  return_time {x \\<in> S. s x = 0} y \\<le> u y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x.\n     returns_to {x \\<in> S. s x = 0} y \\<and>\n     return_time {x \\<in> S. s x = 0} y \\<le> u y\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x.\n     returns_to {x \\<in> S. s x = 0} y \\<and>\n     return_time {x \\<in> S. s x = 0} y \\<le> u y\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"\\<forall>\\<^sub>F y in at x. u y - return_time ?P x < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       u y - return_time {x \\<in> S. s x = 0} x < e", "using tendstoD[OF u_tendsto \\<open>0 < e\\<close>, unfolded u] u_returns_ge"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F xa in at x.\n     dist (u xa) (return_time {x \\<in> S. s x = 0} x) < e\n  \\<forall>\\<^sub>F y in at x.\n     returns_to {x \\<in> S. s x = 0} y \\<and>\n     return_time {x \\<in> S. s x = 0} y \\<le> u y\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       u y - return_time {x \\<in> S. s x = 0} x < e", "by eventually_elim (auto simp: dist_real_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. u y - return_time {x \\<in> S. s x = 0} x < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. u y - return_time {x \\<in> S. s x = 0} x < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "note 1 = outside"], ["proof (state)\nthis:\n  x \\<notin> S \\<or> s x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "define ml where \"ml = max (return_time ?P x / 2) (return_time ?P x - e)\""], ["proof (state)\nthis:\n  ml =\n  max (return_time {x \\<in> S. s x = 0} x / 2)\n   (return_time {x \\<in> S. s x = 0} x - e)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have [intro, simp, arith]: \"0 < ml\" \"ml < return_time ?P x\" \"ml \\<le> return_time ?P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < ml &&&\n    ml < return_time {x \\<in> S. s x = 0} x &&&\n    ml \\<le> return_time {x \\<in> S. s x = 0} x", "using return_time_pos[OF rt cls] \\<open>0 < e\\<close>"], ["proof (prove)\nusing this:\n  0 < return_time {x \\<in> S. s x = 0} x\n  0 < e\n\ngoal (1 subgoal):\n 1. 0 < ml &&&\n    ml < return_time {x \\<in> S. s x = 0} x &&&\n    ml \\<le> return_time {x \\<in> S. s x = 0} x", "by (auto simp: ml_def)"], ["proof (state)\nthis:\n  0 < ml\n  ml < return_time {x \\<in> S. s x = 0} x\n  ml \\<le> return_time {x \\<in> S. s x = 0} x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have mt_in: \"ml \\<in> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ml \\<in> existence_ivl0 x", "using \\<open>0 < e\\<close>"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. ml \\<in> existence_ivl0 x", "by (auto intro!: mem_existence_ivl_iv_defined in_existence_between_zeroI[OF ret_exivl]\n        simp: closed_segment_eq_real_ivl ml_def)"], ["proof (state)\nthis:\n  ml \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "from open_existence_ivlE[OF mt_in]"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 \\<le> ml;\n   \\<And>e.\n      \\<lbrakk>0 < e;\n       cball x e \\<times> {0..ml + e}\n       \\<subseteq> Sigma X existence_ivl0\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "obtain e0 where e0: \"e0 > 0\" \"cball x e0 \\<times> {0..ml + e0} \\<subseteq> Sigma X existence_ivl0\" (is \"?D \\<subseteq> _\")"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> ml;\n   \\<And>e.\n      \\<lbrakk>0 < e;\n       cball x e \\<times> {0..ml + e}\n       \\<subseteq> Sigma X existence_ivl0\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>e0.\n        \\<lbrakk>0 < e0;\n         cball x e0 \\<times> {0..ml + e0}\n         \\<subseteq> Sigma X existence_ivl0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < e0\n  cball x e0 \\<times> {0..ml + e0} \\<subseteq> Sigma X existence_ivl0\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have uc: \"uniformly_continuous_on ((\\<lambda>(x, t). flow0 x t) ` ?D) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniformly_continuous_on\n     ((\\<lambda>(x, y). flow0 x y) ` (cball x e0 \\<times> {0..ml + e0})) s", "apply (auto intro!: compact_uniformly_continuous continuous_on_subset[OF cont_s])"], ["proof (prove)\ngoal (1 subgoal):\n 1. compact\n     ((\\<lambda>x. case x of (x, xa) \\<Rightarrow> flow0 x xa) `\n      (cball x e0 \\<times> {0..ml + e0}))", "apply (rule compact_continuous_image)"], ["proof (prove)\ngoal (2 subgoals):\n 1. continuous_on (cball x e0 \\<times> {0..ml + e0})\n     (\\<lambda>x. case x of (x, xa) \\<Rightarrow> flow0 x xa)\n 2. compact (cball x e0 \\<times> {0..ml + e0})", "apply (rule continuous_on_subset)"], ["proof (prove)\ngoal (3 subgoals):\n 1. continuous_on ?s20\n     (\\<lambda>x. case x of (x, xa) \\<Rightarrow> flow0 x xa)\n 2. cball x e0 \\<times> {0..ml + e0} \\<subseteq> ?s20\n 3. compact (cball x e0 \\<times> {0..ml + e0})", "apply (rule flow_continuous_on_state_space)"], ["proof (prove)\ngoal (2 subgoals):\n 1. cball x e0 \\<times> {0..ml + e0} \\<subseteq> Sigma X existence_ivl0\n 2. compact (cball x e0 \\<times> {0..ml + e0})", "apply (rule e0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. compact (cball x e0 \\<times> {0..ml + e0})", "apply (rule compact_Times)"], ["proof (prove)\ngoal (2 subgoals):\n 1. compact (cball x e0)\n 2. compact {0..ml + e0}", "apply (rule compact_cball)"], ["proof (prove)\ngoal (1 subgoal):\n 1. compact {0..ml + e0}", "apply (rule compact_Icc)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  uniformly_continuous_on\n   ((\\<lambda>(x, y). flow0 x y) ` (cball x e0 \\<times> {0..ml + e0})) s\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "let ?T = \"{0..ml}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have ul: \"uniform_limit ?T flow0 (flow0 x) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit {0..ml} flow0 (flow0 x) (at x)", "using \\<open>0 < e\\<close>"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. uniform_limit {0..ml} flow0 (flow0 x) (at x)", "by (intro uniform_limit_flow)\n      (auto intro!: mem_existence_ivl_iv_defined in_existence_between_zeroI[OF ret_exivl]\n        simp: closed_segment_eq_real_ivl )"], ["proof (state)\nthis:\n  uniform_limit {0..ml} flow0 (flow0 x) (at x)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"\\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>{0..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       \\<forall>t\\<in>{0..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}", "apply (rule uniform_limit_in_open)"], ["proof (prove)\ngoal (6 subgoals):\n 1. uniform_limit {0..ml} flow0 ?l (at x)\n 2. continuous_on {0..ml} ?l\n 3. compact {0..ml}\n 4. {0..ml} \\<noteq> {}\n 5. open (- {x \\<in> S. s x = 0})\n 6. ?l ` {0..ml} \\<subseteq> - {x \\<in> S. s x = 0}", "apply (rule ul)"], ["proof (prove)\ngoal (5 subgoals):\n 1. continuous_on {0..ml} (flow0 x)\n 2. compact {0..ml}\n 3. {0..ml} \\<noteq> {}\n 4. open (- {x \\<in> S. s x = 0})\n 5. flow0 x ` {0..ml} \\<subseteq> - {x \\<in> S. s x = 0}", "apply (auto intro!: continuous_intros continuous_on_compose2[OF cont_s] simp:\n        split: if_splits)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa \\<le> ml\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> existence_ivl0 x\n 2. \\<And>xa.\n       \\<lbrakk>flow0 x xa \\<in> S; s (flow0 x xa) = 0; 0 \\<le> xa;\n        xa \\<le> ml\\<rbrakk>\n       \\<Longrightarrow> False", "apply (meson atLeastAtMost_iff contra_subsetD local.ivl_subset_existence_ivl mt_in)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>flow0 x xa \\<in> S; s (flow0 x xa) = 0; 0 \\<le> xa;\n        xa \\<le> ml\\<rbrakk>\n       \\<Longrightarrow> False", "subgoal for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>flow0 x t \\<in> S; s (flow0 x t) = 0; 0 \\<le> t;\n     t \\<le> ml\\<rbrakk>\n    \\<Longrightarrow> False", "apply (cases \"t = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>flow0 x t \\<in> S; s (flow0 x t) = 0; 0 \\<le> t; t \\<le> ml;\n     t = 0\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>flow0 x t \\<in> S; s (flow0 x t) = 0; 0 \\<le> t; t \\<le> ml;\n     t \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> False", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>flow0 x t \\<in> S; s (flow0 x t) = 0; 0 \\<le> t; t \\<le> ml;\n     t = 0\\<rbrakk>\n    \\<Longrightarrow> False", "using 1"], ["proof (prove)\nusing this:\n  x \\<notin> S \\<or> s x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>flow0 x t \\<in> S; s (flow0 x t) = 0; 0 \\<le> t; t \\<le> ml;\n     t = 0\\<rbrakk>\n    \\<Longrightarrow> False", "by (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>flow0 x t \\<in> S; s (flow0 x t) = 0; 0 \\<le> t; t \\<le> ml;\n     t \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> False", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>flow0 x t \\<in> S; s (flow0 x t) = 0; 0 \\<le> t; t \\<le> ml;\n     t \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> False", "using return_time_least[OF rt cls, of t] \\<open>ml < return_time {x \\<in> S. s x = 0} x\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < t; t < return_time {x \\<in> S. s x = 0} x\\<rbrakk>\n  \\<Longrightarrow> flow0 x t \\<notin> {x \\<in> S. s x = 0}\n  ml < return_time {x \\<in> S. s x = 0} x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>flow0 x t \\<in> S; s (flow0 x t) = 0; 0 \\<le> t; t \\<le> ml;\n     t \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> False", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x.\n     \\<forall>t\\<in>{0..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x.\n     \\<forall>t\\<in>{0..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}", "have \"\\<forall>\\<^sub>F y in at x. return_time ?P y \\<ge> return_time ?P x - e\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x.\n     \\<forall>t\\<in>{0..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       return_time {x \\<in> S. s x = 0} x - e\n       \\<le> return_time {x \\<in> S. s x = 0} y", "using u_returns_ge"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x.\n     \\<forall>t\\<in>{0..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}\n  \\<forall>\\<^sub>F y in at x.\n     returns_to {x \\<in> S. s x = 0} y \\<and>\n     return_time {x \\<in> S. s x = 0} y \\<le> u y\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       return_time {x \\<in> S. s x = 0} x - e\n       \\<le> return_time {x \\<in> S. s x = 0} y", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>\\<forall>t\\<in>{0..ml}.\n                   flow0 y t \\<in> - {y \\<in> S. s y = 0};\n        returns_to {y \\<in> S. s y = 0} y \\<and>\n        return_time {y \\<in> S. s y = 0} y \\<le> u y\\<rbrakk>\n       \\<Longrightarrow> return_time {x \\<in> S. s x = 0} x - e\n                         \\<le> return_time {x \\<in> S. s x = 0} y", "case (elim y)"], ["proof (state)\nthis:\n  \\<forall>t\\<in>{0..ml}. flow0 y t \\<in> - {y \\<in> S. s y = 0}\n  returns_to {y \\<in> S. s y = 0} y \\<and>\n  return_time {y \\<in> S. s y = 0} y \\<le> u y\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>\\<forall>t\\<in>{0..ml}.\n                   flow0 y t \\<in> - {y \\<in> S. s y = 0};\n        returns_to {y \\<in> S. s y = 0} y \\<and>\n        return_time {y \\<in> S. s y = 0} y \\<le> u y\\<rbrakk>\n       \\<Longrightarrow> return_time {x \\<in> S. s x = 0} x - e\n                         \\<le> return_time {x \\<in> S. s x = 0} y", "have \"return_time ?P x - e \\<le> ml\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time {x \\<in> S. s x = 0} x - e \\<le> ml", "by (auto simp: ml_def)"], ["proof (state)\nthis:\n  return_time {x \\<in> S. s x = 0} x - e \\<le> ml\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>\\<forall>t\\<in>{0..ml}.\n                   flow0 y t \\<in> - {y \\<in> S. s y = 0};\n        returns_to {y \\<in> S. s y = 0} y \\<and>\n        return_time {y \\<in> S. s y = 0} y \\<le> u y\\<rbrakk>\n       \\<Longrightarrow> return_time {x \\<in> S. s x = 0} x - e\n                         \\<le> return_time {x \\<in> S. s x = 0} y", "also"], ["proof (state)\nthis:\n  return_time {x \\<in> S. s x = 0} x - e \\<le> ml\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>\\<forall>t\\<in>{0..ml}.\n                   flow0 y t \\<in> - {y \\<in> S. s y = 0};\n        returns_to {y \\<in> S. s y = 0} y \\<and>\n        return_time {y \\<in> S. s y = 0} y \\<le> u y\\<rbrakk>\n       \\<Longrightarrow> return_time {x \\<in> S. s x = 0} x - e\n                         \\<le> return_time {x \\<in> S. s x = 0} y", "have ry: \"returns_to ?P y\" \"return_time ?P y \\<le> u y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. returns_to {x \\<in> S. s x = 0} y &&&\n    return_time {x \\<in> S. s x = 0} y \\<le> u y", "using elim"], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>{0..ml}. flow0 y t \\<in> - {y \\<in> S. s y = 0}\n  returns_to {y \\<in> S. s y = 0} y \\<and>\n  return_time {y \\<in> S. s y = 0} y \\<le> u y\n\ngoal (1 subgoal):\n 1. returns_to {x \\<in> S. s x = 0} y &&&\n    return_time {x \\<in> S. s x = 0} y \\<le> u y", "by auto"], ["proof (state)\nthis:\n  returns_to {x \\<in> S. s x = 0} y\n  return_time {x \\<in> S. s x = 0} y \\<le> u y\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>\\<forall>t\\<in>{0..ml}.\n                   flow0 y t \\<in> - {y \\<in> S. s y = 0};\n        returns_to {y \\<in> S. s y = 0} y \\<and>\n        return_time {y \\<in> S. s y = 0} y \\<le> u y\\<rbrakk>\n       \\<Longrightarrow> return_time {x \\<in> S. s x = 0} x - e\n                         \\<le> return_time {x \\<in> S. s x = 0} y", "have \"ml < return_time ?P y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ml < return_time {x \\<in> S. s x = 0} y", "apply (rule return_time_gt[OF ry(1) cls])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>0 < sa; sa \\<le> ml\\<rbrakk>\n       \\<Longrightarrow> flow0 y sa \\<notin> {x \\<in> S. s x = 0}", "using elim"], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>{0..ml}. flow0 y t \\<in> - {y \\<in> S. s y = 0}\n  returns_to {y \\<in> S. s y = 0} y \\<and>\n  return_time {y \\<in> S. s y = 0} y \\<le> u y\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>0 < sa; sa \\<le> ml\\<rbrakk>\n       \\<Longrightarrow> flow0 y sa \\<notin> {x \\<in> S. s x = 0}", "by (auto simp: Ball_def)"], ["proof (state)\nthis:\n  ml < return_time {x \\<in> S. s x = 0} y\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>\\<forall>t\\<in>{0..ml}.\n                   flow0 y t \\<in> - {y \\<in> S. s y = 0};\n        returns_to {y \\<in> S. s y = 0} y \\<and>\n        return_time {y \\<in> S. s y = 0} y \\<le> u y\\<rbrakk>\n       \\<Longrightarrow> return_time {x \\<in> S. s x = 0} x - e\n                         \\<le> return_time {x \\<in> S. s x = 0} y", "finally"], ["proof (chain)\npicking this:\n  return_time {x \\<in> S. s x = 0} x - e\n  < return_time {x \\<in> S. s x = 0} y", "show ?case"], ["proof (prove)\nusing this:\n  return_time {x \\<in> S. s x = 0} x - e\n  < return_time {x \\<in> S. s x = 0} y\n\ngoal (1 subgoal):\n 1. return_time {x \\<in> S. s x = 0} x - e\n    \\<le> return_time {x \\<in> S. s x = 0} y", "by simp"], ["proof (state)\nthis:\n  return_time {x \\<in> S. s x = 0} x - e\n  \\<le> return_time {x \\<in> S. s x = 0} y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x.\n     return_time {x \\<in> S. s x = 0} x - e\n     \\<le> return_time {x \\<in> S. s x = 0} y\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x.\n     returns_to {x \\<in> S. s x = 0} y \\<and>\n     return_time {x \\<in> S. s x = 0} y \\<le> u y\n  \\<forall>\\<^sub>F y in at x. u y - return_time {x \\<in> S. s x = 0} x < e\n  \\<forall>\\<^sub>F y in at x.\n     return_time {x \\<in> S. s x = 0} x - e\n     \\<le> return_time {x \\<in> S. s x = 0} y", "have \"\\<forall>\\<^sub>F y in at x. dist (return_time ?P y) (return_time ?P x) \\<le> e\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x.\n     returns_to {x \\<in> S. s x = 0} y \\<and>\n     return_time {x \\<in> S. s x = 0} y \\<le> u y\n  \\<forall>\\<^sub>F y in at x. u y - return_time {x \\<in> S. s x = 0} x < e\n  \\<forall>\\<^sub>F y in at x.\n     return_time {x \\<in> S. s x = 0} x - e\n     \\<le> return_time {x \\<in> S. s x = 0} y\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       dist (return_time {x \\<in> S. s x = 0} y)\n        (return_time {x \\<in> S. s x = 0} x)\n       \\<le> e", "by eventually_elim (auto simp: dist_real_def abs_real_def algebra_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x.\n     dist (return_time {x \\<in> S. s x = 0} y)\n      (return_time {x \\<in> S. s x = 0} x)\n     \\<le> e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x.\n     dist (return_time {x \\<in> S. s x = 0} y)\n      (return_time {x \\<in> S. s x = 0} x)\n     \\<le> e", "show \"\\<forall>\\<^sub>F y in at x. dist (return_time ?P y) (return_time ?P x) < e_orig\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x.\n     dist (return_time {x \\<in> S. s x = 0} y)\n      (return_time {x \\<in> S. s x = 0} x)\n     \\<le> e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       dist (return_time {x \\<in> S. s x = 0} y)\n        (return_time {x \\<in> S. s x = 0} x)\n       < e_orig", "by eventually_elim (use \\<open>e_orig > 0\\<close> in \\<open>auto simp: e_def\\<close>)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x.\n     dist (return_time {x \\<in> S. s x = 0} y)\n      (return_time {x \\<in> S. s x = 0} x)\n     < e_orig\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isCont_poincare_map:\n  assumes \"isCont (return_time P) x\"\n    \"returns_to P x\" \"closed P\"\n  shows \"isCont (poincare_map P) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (poincare_map P) x", "unfolding poincare_map_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (\\<lambda>x. flow0 x (return_time P x)) x", "by (auto intro!: continuous_intros assms return_time_exivl)"], ["", "lemma poincare_map_tendsto:\n  assumes \"(return_time P \\<longlongrightarrow> return_time P x) (at x within S)\"\n    \"returns_to P x\" \"closed P\"\n  shows \"(poincare_map P \\<longlongrightarrow> poincare_map P x) (at x within S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (poincare_map P \\<longlongrightarrow> poincare_map P x) (at x within S)", "unfolding poincare_map_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. flow0 x (return_time P x)) \\<longlongrightarrow>\n     flow0 x (return_time P x))\n     (at x within S)", "by (rule tendsto_eq_intros refl assms return_time_exivl)+"], ["", "lemma\n  return_time_continuous_below:\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes rt: \"returns_to {x \\<in> S. s x = 0} x\" (is \"returns_to ?P x\")\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n  assumes cS: \"closed S\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map ?P x). s x = 0 \\<longrightarrow> x \\<in> S\"\n  assumes DsC: \"\\<And>x. isCont Ds x\"\n  assumes through: \"(Ds (poincare_map ?P x)) (f (poincare_map ?P x)) \\<noteq> 0\"\n  assumes inside: \"x \\<in> S\" \"s x = 0\" \"Ds x (f x) < 0\"\n  shows \"continuous (at x within {x. s x \\<le> 0}) (return_time ?P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous (at x within {x. s x \\<le> 0})\n     (return_time {x \\<in> S. s x = 0})", "unfolding continuous_within"], ["proof (prove)\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. s x = 0} \\<longlongrightarrow>\n     return_time {x \\<in> S. s x = 0} x)\n     (at x within {x. s x \\<le> 0})", "proof (rule tendstoI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "fix e_orig::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "assume \"e_orig > 0\""], ["proof (state)\nthis:\n  0 < e_orig\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "define e where \"e = e_orig / 2\""], ["proof (state)\nthis:\n  e = e_orig / 2\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"e > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < e", "using \\<open>e_orig > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < e_orig\n\ngoal (1 subgoal):\n 1. 0 < e", "by (simp add: e_def)"], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "note DsC_tendso[tendsto_intros] = isCont_tendsto_compose[OF DsC]"], ["proof (state)\nthis:\n  (?f \\<longlongrightarrow> ?l) ?F \\<Longrightarrow>\n  ((\\<lambda>x. Ds (?f x)) \\<longlongrightarrow> Ds ?l) ?F\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have cont_s: \"continuous_on UNIV s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV s", "by (rule has_derivative_continuous_on[OF Ds])"], ["proof (state)\nthis:\n  continuous_on UNIV s\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "then"], ["proof (chain)\npicking this:\n  continuous_on UNIV s", "have s_tendsto: \"(s \\<longlongrightarrow> s x) (at x)\" for x"], ["proof (prove)\nusing this:\n  continuous_on UNIV s\n\ngoal (1 subgoal):\n 1. s \\<midarrow>x\\<rightarrow> s x", "by (auto simp: continuous_on_def)"], ["proof (state)\nthis:\n  s \\<midarrow>?x1\\<rightarrow> s ?x1\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "note [continuous_intros] = continuous_on_compose2[OF cont_s _ subset_UNIV]"], ["proof (state)\nthis:\n  continuous_on ?s ?f \\<Longrightarrow>\n  continuous_on ?s (\\<lambda>x. s (?f x))\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "note [derivative_intros] = has_derivative_compose[OF _ Ds]"], ["proof (state)\nthis:\n  (?f has_derivative ?f') (at ?x within ?s) \\<Longrightarrow>\n  ((\\<lambda>x. s (?f x)) has_derivative\n   (\\<lambda>x. blinfun_apply (Ds (?f ?x)) (?f' x)))\n   (at ?x within ?s)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have cont_s': \"continuous_on S s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on S s", "by (rule continuous_on_subset[OF cont_s subset_UNIV])"], ["proof (state)\nthis:\n  continuous_on S s\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "note cls[simp, intro] = closed_levelset_within[OF cont_s' cS(1)]"], ["proof (state)\nthis:\n  closed {x \\<in> S. s x = ?c}\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"{x. s x = 0} = s -` {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. s x = 0} = s -` {0}", "by auto"], ["proof (state)\nthis:\n  {x. s x = 0} = s -` {0}\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have ret_exivl: \"return_time ?P x \\<in> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x", "by (rule return_time_exivl; fact)"], ["proof (state)\nthis:\n  return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "then"], ["proof (chain)\npicking this:\n  return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x", "have [intro, simp]: \"x \\<in> X\""], ["proof (prove)\nusing this:\n  return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. x \\<in> X", "by auto"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have isCont_Ds_f: \"isCont (\\<lambda>s. Ds s (f s)) (poincare_map ?P x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (\\<lambda>s. blinfun_apply (Ds s) (f s))\n     (poincare_map {x \\<in> S. s x = 0} x)", "apply (auto intro!: continuous_intros DsC)"], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont f (poincare_map {x \\<in> S. s x = 0} x)", "apply (rule has_derivative_continuous)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f has_derivative ?f'4) (at (poincare_map {x \\<in> S. s x = 0} x))", "apply (rule derivative_rhs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. poincare_map {x \\<in> S. s x = 0} x \\<in> X", "by (auto simp: poincare_map_def intro!: flow_in_domain return_time_exivl assms)"], ["proof (state)\nthis:\n  isCont (\\<lambda>s. blinfun_apply (Ds s) (f s))\n   (poincare_map {x \\<in> S. s x = 0} x)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"\\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}. (Ds (flow0 (fst yt) (snd yt))) (f (flow0 (fst yt) (snd yt))) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}.\n       blinfun_apply (Ds (flow0 (fst yt) (snd yt)))\n        (f (flow0 (fst yt) (snd yt)))\n       < 0", "by (rule order_tendstoD) (auto intro!: tendsto_eq_intros inside)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}.\n     blinfun_apply (Ds (flow0 (fst yt) (snd yt)))\n      (f (flow0 (fst yt) (snd yt)))\n     < 0\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}.\n     blinfun_apply (Ds (flow0 (fst yt) (snd yt)))\n      (f (flow0 (fst yt) (snd yt)))\n     < 0\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"(x, 0) \\<in> Sigma X existence_ivl0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, 0) \\<in> Sigma X existence_ivl0", "by auto"], ["proof (state)\nthis:\n  (x, 0) \\<in> Sigma X existence_ivl0\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "from topological_tendstoD[OF tendsto_ident_at open_state_space this, of \"UNIV \\<times> {0<..}\"]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at (x, 0) within UNIV \\<times> {0<..}.\n     x \\<in> Sigma X existence_ivl0", "have \"\\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}. snd yt \\<in> existence_ivl0 (fst yt)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at (x, 0) within UNIV \\<times> {0<..}.\n     x \\<in> Sigma X existence_ivl0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}.\n       snd yt \\<in> existence_ivl0 (fst yt)", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}.\n     snd yt \\<in> existence_ivl0 (fst yt)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}.\n     snd yt \\<in> existence_ivl0 (fst yt)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "from topological_tendstoD[OF tendsto_ident_at open_Times[OF open_dom open_UNIV], of \"(x, 0)\" \"UNIV \\<times> {0<..}\"]"], ["proof (chain)\npicking this:\n  (x, 0::?'b5) \\<in> X \\<times> UNIV \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at (x, 0::?'b5) within UNIV \\<times> {0::?'b5<..}.\n     x \\<in> X \\<times> UNIV", "have \"\\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}. fst yt \\<in> X\""], ["proof (prove)\nusing this:\n  (x, 0::?'b5) \\<in> X \\<times> UNIV \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at (x, 0::?'b5) within UNIV \\<times> {0::?'b5<..}.\n     x \\<in> X \\<times> UNIV\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F yt in at (x, 0::'b) within UNIV \\<times> {0::'b<..}.\n       fst yt \\<in> X", "by (auto simp: mem_Times_iff)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F yt in at (x, 0::?'b2) within UNIV \\<times> {0::?'b2<..}.\n     fst yt \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}.\n     blinfun_apply (Ds (flow0 (fst yt) (snd yt)))\n      (f (flow0 (fst yt) (snd yt)))\n     < 0\n  \\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}.\n     snd yt \\<in> existence_ivl0 (fst yt)\n  \\<forall>\\<^sub>F yt in at (x, 0::?'b2) within UNIV \\<times> {0::?'b2<..}.\n     fst yt \\<in> X", "have \"\\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}. (Ds (flow0 (fst yt) (snd yt))) (f (flow0 (fst yt) (snd yt))) < 0 \\<and>\n    snd yt \\<in> existence_ivl0 (fst yt) \\<and>\n    0 \\<in> existence_ivl0 (fst yt)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}.\n     blinfun_apply (Ds (flow0 (fst yt) (snd yt)))\n      (f (flow0 (fst yt) (snd yt)))\n     < 0\n  \\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}.\n     snd yt \\<in> existence_ivl0 (fst yt)\n  \\<forall>\\<^sub>F yt in at (x, 0::?'b2) within UNIV \\<times> {0::?'b2<..}.\n     fst yt \\<in> X\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}.\n       blinfun_apply (Ds (flow0 (fst yt) (snd yt)))\n        (f (flow0 (fst yt) (snd yt)))\n       < 0 \\<and>\n       snd yt \\<in> existence_ivl0 (fst yt) \\<and>\n       0 \\<in> existence_ivl0 (fst yt)", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}.\n     blinfun_apply (Ds (flow0 (fst yt) (snd yt)))\n      (f (flow0 (fst yt) (snd yt)))\n     < 0 \\<and>\n     snd yt \\<in> existence_ivl0 (fst yt) \\<and>\n     0 \\<in> existence_ivl0 (fst yt)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}.\n     blinfun_apply (Ds (flow0 (fst yt) (snd yt)))\n      (f (flow0 (fst yt) (snd yt)))\n     < 0 \\<and>\n     snd yt \\<in> existence_ivl0 (fst yt) \\<and>\n     0 \\<in> existence_ivl0 (fst yt)", "obtain d2 where \"0 < d2\" and\n    d2_neg: \"\\<And>y t. (y, t) \\<in> cball (x, 0) d2 \\<Longrightarrow> 0 < t \\<Longrightarrow> (Ds (flow0 y t)) (f (flow0 y t)) < 0\"\n    and d2_ex: \"\\<And>y t. (y, t) \\<in> cball (x, 0) d2 \\<Longrightarrow> 0 < t \\<Longrightarrow> t \\<in> existence_ivl0 y\"\n    and d2_ex0: \"\\<And>y t. (y, t::real) \\<in> cball (x, 0) d2 \\<Longrightarrow> 0 < t \\<Longrightarrow> y \\<in> X\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F yt in at (x, 0) within UNIV \\<times> {0<..}.\n     blinfun_apply (Ds (flow0 (fst yt) (snd yt)))\n      (f (flow0 (fst yt) (snd yt)))\n     < 0 \\<and>\n     snd yt \\<in> existence_ivl0 (fst yt) \\<and>\n     0 \\<in> existence_ivl0 (fst yt)\n\ngoal (1 subgoal):\n 1. (\\<And>d2.\n        \\<lbrakk>0 < d2;\n         \\<And>y t.\n            \\<lbrakk>(y, t) \\<in> cball (x, 0) d2; 0 < t\\<rbrakk>\n            \\<Longrightarrow> blinfun_apply (Ds (flow0 y t)) (f (flow0 y t))\n                              < 0;\n         \\<And>y t.\n            \\<lbrakk>(y, t) \\<in> cball (x, 0) d2; 0 < t\\<rbrakk>\n            \\<Longrightarrow> t \\<in> existence_ivl0 y;\n         \\<And>y t.\n            \\<lbrakk>(y, t) \\<in> cball (x, 0) d2; 0 < t\\<rbrakk>\n            \\<Longrightarrow> y \\<in> X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at_le dist_commute)"], ["proof (state)\nthis:\n  0 < d2\n  \\<lbrakk>(?y2, ?t2) \\<in> cball (x, 0) d2; 0 < ?t2\\<rbrakk>\n  \\<Longrightarrow> blinfun_apply (Ds (flow0 ?y2 ?t2)) (f (flow0 ?y2 ?t2))\n                    < 0\n  \\<lbrakk>(?y2, ?t2) \\<in> cball (x, 0) d2; 0 < ?t2\\<rbrakk>\n  \\<Longrightarrow> ?t2 \\<in> existence_ivl0 ?y2\n  \\<lbrakk>(?y2, ?t2) \\<in> cball (x, 0) d2; 0 < ?t2\\<rbrakk>\n  \\<Longrightarrow> ?y2 \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "define d where \"d \\<equiv> d2 / 2\""], ["proof (state)\nthis:\n  d \\<equiv> d2 / 2\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "from \\<open>0 < d2\\<close>"], ["proof (chain)\npicking this:\n  0 < d2", "have \"d > 0\""], ["proof (prove)\nusing this:\n  0 < d2\n\ngoal (1 subgoal):\n 1. 0 < d", "by (simp add: d_def)"], ["proof (state)\nthis:\n  0 < d\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have d_neg: \"dist y x< d \\<Longrightarrow> 0 < t \\<Longrightarrow> t \\<le> d \\<Longrightarrow> (Ds (flow0 y t)) (f (flow0 y t)) < 0\" for y t"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dist y x < d; 0 < t; t \\<le> d\\<rbrakk>\n    \\<Longrightarrow> blinfun_apply (Ds (flow0 y t)) (f (flow0 y t)) < 0", "using d2_neg[of y t, OF subsetD[OF cball_times_subset[of x d2 0]]]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(y, t) \\<in> cball x (d2 / 2) \\<times> cball 0 (d2 / 2);\n   0 < t\\<rbrakk>\n  \\<Longrightarrow> blinfun_apply (Ds (flow0 y t)) (f (flow0 y t)) < 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dist y x < d; 0 < t; t \\<le> d\\<rbrakk>\n    \\<Longrightarrow> blinfun_apply (Ds (flow0 y t)) (f (flow0 y t)) < 0", "by (auto simp: d_def dist_commute)"], ["proof (state)\nthis:\n  \\<lbrakk>dist ?y2 x < d; 0 < ?t2; ?t2 \\<le> d\\<rbrakk>\n  \\<Longrightarrow> blinfun_apply (Ds (flow0 ?y2 ?t2)) (f (flow0 ?y2 ?t2))\n                    < 0\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have d_ex: \"t \\<in> existence_ivl0 y\" if \"dist y x< d\" \"0 \\<le> t\" \"t \\<le> d\" for y t"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl0 y", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> t \\<in> existence_ivl0 y\n 2. \\<not> ?P \\<Longrightarrow> t \\<in> existence_ivl0 y", "assume \"t = 0\""], ["proof (state)\nthis:\n  t = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> t \\<in> existence_ivl0 y\n 2. \\<not> ?P \\<Longrightarrow> t \\<in> existence_ivl0 y", "have \"sqrt ((dist x y)\\<^sup>2 + (d2 / 2)\\<^sup>2) \\<le> dist x y + d2/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt ((dist x y)\\<^sup>2 + (d2 / 2)\\<^sup>2) \\<le> dist x y + d2 / 2", "using \\<open>0 < d2\\<close>"], ["proof (prove)\nusing this:\n  0 < d2\n\ngoal (1 subgoal):\n 1. sqrt ((dist x y)\\<^sup>2 + (d2 / 2)\\<^sup>2) \\<le> dist x y + d2 / 2", "by (intro sqrt_sum_squares_le_sum) auto"], ["proof (state)\nthis:\n  sqrt ((dist x y)\\<^sup>2 + (d2 / 2)\\<^sup>2) \\<le> dist x y + d2 / 2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> t \\<in> existence_ivl0 y\n 2. \\<not> ?P \\<Longrightarrow> t \\<in> existence_ivl0 y", "also"], ["proof (state)\nthis:\n  sqrt ((dist x y)\\<^sup>2 + (d2 / 2)\\<^sup>2) \\<le> dist x y + d2 / 2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> t \\<in> existence_ivl0 y\n 2. \\<not> ?P \\<Longrightarrow> t \\<in> existence_ivl0 y", "have \"dist x y \\<le> d2 / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x y \\<le> d2 / 2", "using that"], ["proof (prove)\nusing this:\n  dist y x < d\n  0 \\<le> t\n  t \\<le> d\n\ngoal (1 subgoal):\n 1. dist x y \\<le> d2 / 2", "by (simp add: d_def dist_commute)"], ["proof (state)\nthis:\n  dist x y \\<le> d2 / 2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> t \\<in> existence_ivl0 y\n 2. \\<not> ?P \\<Longrightarrow> t \\<in> existence_ivl0 y", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x + d2 / 2 \\<le> y + d2 / 2) \\<Longrightarrow>\n  sqrt ((dist x y)\\<^sup>2 + (d2 / 2)\\<^sup>2) \\<le> d2 / 2 + d2 / 2", "have \"sqrt ((dist x y)\\<^sup>2 + (d2 / 2)\\<^sup>2) \\<le> d2\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x + d2 / 2 \\<le> y + d2 / 2) \\<Longrightarrow>\n  sqrt ((dist x y)\\<^sup>2 + (d2 / 2)\\<^sup>2) \\<le> d2 / 2 + d2 / 2\n\ngoal (1 subgoal):\n 1. sqrt ((dist x y)\\<^sup>2 + (d2 / 2)\\<^sup>2) \\<le> d2", "by simp"], ["proof (state)\nthis:\n  sqrt ((dist x y)\\<^sup>2 + (d2 / 2)\\<^sup>2) \\<le> d2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> t \\<in> existence_ivl0 y\n 2. \\<not> ?P \\<Longrightarrow> t \\<in> existence_ivl0 y", "with \\<open>t = 0\\<close>"], ["proof (chain)\npicking this:\n  t = 0\n  sqrt ((dist x y)\\<^sup>2 + (d2 / 2)\\<^sup>2) \\<le> d2", "show ?thesis"], ["proof (prove)\nusing this:\n  t = 0\n  sqrt ((dist x y)\\<^sup>2 + (d2 / 2)\\<^sup>2) \\<le> d2\n\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl0 y", "using d2_ex[of y t, OF subsetD[OF cball_times_subset[of x d2 0]]] d2_ex0[of y d] \\<open>0 < d2\\<close>"], ["proof (prove)\nusing this:\n  t = 0\n  sqrt ((dist x y)\\<^sup>2 + (d2 / 2)\\<^sup>2) \\<le> d2\n  \\<lbrakk>(y, t) \\<in> cball x (d2 / 2) \\<times> cball 0 (d2 / 2);\n   0 < t\\<rbrakk>\n  \\<Longrightarrow> t \\<in> existence_ivl0 y\n  \\<lbrakk>(y, d) \\<in> cball (x, 0) d2; 0 < d\\<rbrakk>\n  \\<Longrightarrow> y \\<in> X\n  0 < d2\n\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl0 y", "by (auto simp: d_def dist_commute dist_prod_def)"], ["proof (state)\nthis:\n  t \\<in> existence_ivl0 y\n\ngoal (1 subgoal):\n 1. t \\<noteq> 0 \\<Longrightarrow> t \\<in> existence_ivl0 y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<noteq> 0 \\<Longrightarrow> t \\<in> existence_ivl0 y", "assume \"t \\<noteq> 0\""], ["proof (state)\nthis:\n  t \\<noteq> 0\n\ngoal (1 subgoal):\n 1. t \\<noteq> 0 \\<Longrightarrow> t \\<in> existence_ivl0 y", "then"], ["proof (chain)\npicking this:\n  t \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  t \\<noteq> 0\n\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl0 y", "using d2_ex[of y t, OF subsetD[OF cball_times_subset[of x d2 0]]] that"], ["proof (prove)\nusing this:\n  t \\<noteq> 0\n  \\<lbrakk>(y, t) \\<in> cball x (d2 / 2) \\<times> cball 0 (d2 / 2);\n   0 < t\\<rbrakk>\n  \\<Longrightarrow> t \\<in> existence_ivl0 y\n  dist y x < d\n  0 \\<le> t\n  t \\<le> d\n\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl0 y", "by (auto simp: d_def dist_commute)"], ["proof (state)\nthis:\n  t \\<in> existence_ivl0 y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>dist ?y2 x < d; 0 \\<le> ?t2; ?t2 \\<le> d\\<rbrakk>\n  \\<Longrightarrow> ?t2 \\<in> existence_ivl0 ?y2\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have d_mvt: \"s (flow0 y t) < s y\" if \"0 < t\" \"t \\<le> d\" \"dist y x < d\" for y t"], ["proof (prove)\ngoal (1 subgoal):\n 1. s (flow0 y t) < s y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s (flow0 y t) < s y", "have c: \"continuous_on {0 .. t} (\\<lambda>t. s (flow0 y t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {0..t} (\\<lambda>t. s (flow0 y t))", "using that"], ["proof (prove)\nusing this:\n  0 < t\n  t \\<le> d\n  dist y x < d\n\ngoal (1 subgoal):\n 1. continuous_on {0..t} (\\<lambda>t. s (flow0 y t))", "by (auto intro!: continuous_intros d_ex)"], ["proof (state)\nthis:\n  continuous_on {0..t} (\\<lambda>t. s (flow0 y t))\n\ngoal (1 subgoal):\n 1. s (flow0 y t) < s y", "have d: \"\\<And>x. \\<lbrakk>0 < x; x < t\\<rbrakk> \\<Longrightarrow> ((\\<lambda>t. s (flow0 y t)) has_derivative (\\<lambda>t. t * blinfun_apply (Ds (flow0 y x)) (f (flow0 y x)))) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < x; x < t\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t. s (flow0 y t)) has_derivative\n                          (\\<lambda>t.\n                              t *\n                              blinfun_apply (Ds (flow0 y x))\n                               (f (flow0 y x))))\n                          (at x)", "using that"], ["proof (prove)\nusing this:\n  0 < t\n  t \\<le> d\n  dist y x < d\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < x; x < t\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t. s (flow0 y t)) has_derivative\n                          (\\<lambda>t.\n                              t *\n                              blinfun_apply (Ds (flow0 y x))\n                               (f (flow0 y x))))\n                          (at x)", "by (auto intro!: derivative_eq_intros d_ex simp: flowderiv_def blinfun.bilinear_simps)"], ["proof (state)\nthis:\n  \\<lbrakk>0 < ?x2; ?x2 < t\\<rbrakk>\n  \\<Longrightarrow> ((\\<lambda>t. s (flow0 y t)) has_derivative\n                     (\\<lambda>t.\n                         t *\n                         blinfun_apply (Ds (flow0 y ?x2))\n                          (f (flow0 y ?x2))))\n                     (at ?x2)\n\ngoal (1 subgoal):\n 1. s (flow0 y t) < s y", "from mvt[OF \\<open>0 < t\\<close> c d]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x. \\<lbrakk>0 < x; x < t\\<rbrakk> \\<Longrightarrow> 0 < x;\n   \\<And>x. \\<lbrakk>0 < x; x < t\\<rbrakk> \\<Longrightarrow> x < t;\n   \\<And>\\<xi>.\n      \\<lbrakk>0 < \\<xi>; \\<xi> < t;\n       s (flow0 y t) - s (flow0 y 0) =\n       (t - 0) *\n       blinfun_apply (Ds (flow0 y \\<xi>)) (f (flow0 y \\<xi>))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "obtain xi where xi: \"0 < xi\" \"xi < t\" and \"s (flow0 y t) - s (flow0 y 0) = t * blinfun_apply (Ds (flow0 y xi)) (f (flow0 y xi))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x. \\<lbrakk>0 < x; x < t\\<rbrakk> \\<Longrightarrow> 0 < x;\n   \\<And>x. \\<lbrakk>0 < x; x < t\\<rbrakk> \\<Longrightarrow> x < t;\n   \\<And>\\<xi>.\n      \\<lbrakk>0 < \\<xi>; \\<xi> < t;\n       s (flow0 y t) - s (flow0 y 0) =\n       (t - 0) *\n       blinfun_apply (Ds (flow0 y \\<xi>)) (f (flow0 y \\<xi>))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>xi.\n        \\<lbrakk>0 < xi; xi < t;\n         s (flow0 y t) - s (flow0 y 0) =\n         t * blinfun_apply (Ds (flow0 y xi)) (f (flow0 y xi))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < xi\n  xi < t\n  s (flow0 y t) - s (flow0 y 0) =\n  t * blinfun_apply (Ds (flow0 y xi)) (f (flow0 y xi))\n\ngoal (1 subgoal):\n 1. s (flow0 y t) < s y", "note this(3)"], ["proof (state)\nthis:\n  s (flow0 y t) - s (flow0 y 0) =\n  t * blinfun_apply (Ds (flow0 y xi)) (f (flow0 y xi))\n\ngoal (1 subgoal):\n 1. s (flow0 y t) < s y", "also"], ["proof (state)\nthis:\n  s (flow0 y t) - s (flow0 y 0) =\n  t * blinfun_apply (Ds (flow0 y xi)) (f (flow0 y xi))\n\ngoal (1 subgoal):\n 1. s (flow0 y t) < s y", "have \"\\<dots> < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t * blinfun_apply (Ds (flow0 y xi)) (f (flow0 y xi)) < 0", "using \\<open>0 < t\\<close>"], ["proof (prove)\nusing this:\n  0 < t\n\ngoal (1 subgoal):\n 1. t * blinfun_apply (Ds (flow0 y xi)) (f (flow0 y xi)) < 0", "apply (rule mult_pos_neg)"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply (Ds (flow0 y xi)) (f (flow0 y xi)) < 0", "apply (rule d_neg)"], ["proof (prove)\ngoal (3 subgoals):\n 1. dist y x < d\n 2. 0 < xi\n 3. xi \\<le> d", "using that xi"], ["proof (prove)\nusing this:\n  0 < t\n  t \\<le> d\n  dist y x < d\n  0 < xi\n  xi < t\n\ngoal (3 subgoals):\n 1. dist y x < d\n 2. 0 < xi\n 3. xi \\<le> d", "by auto"], ["proof (state)\nthis:\n  t * blinfun_apply (Ds (flow0 y xi)) (f (flow0 y xi)) < 0\n\ngoal (1 subgoal):\n 1. s (flow0 y t) < s y", "also"], ["proof (state)\nthis:\n  t * blinfun_apply (Ds (flow0 y xi)) (f (flow0 y xi)) < 0\n\ngoal (1 subgoal):\n 1. s (flow0 y t) < s y", "have \"flow0 y 0 = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 y 0 = y", "apply (rule flow_initial_time)"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 \\<in> UNIV\n 2. y \\<in> X", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> X", "using \\<open>0 < d\\<close> d_ex that(3)"], ["proof (prove)\nusing this:\n  0 < d\n  \\<lbrakk>dist ?y2 x < d; 0 \\<le> ?t2; ?t2 \\<le> d\\<rbrakk>\n  \\<Longrightarrow> ?t2 \\<in> existence_ivl0 ?y2\n  dist y x < d\n\ngoal (1 subgoal):\n 1. y \\<in> X", "by fastforce"], ["proof (state)\nthis:\n  flow0 y 0 = y\n\ngoal (1 subgoal):\n 1. s (flow0 y t) < s y", "finally"], ["proof (chain)\npicking this:\n  s (flow0 y t) - s y < 0", "show ?thesis"], ["proof (prove)\nusing this:\n  s (flow0 y t) - s y < 0\n\ngoal (1 subgoal):\n 1. s (flow0 y t) < s y", "by (auto simp: )"], ["proof (state)\nthis:\n  s (flow0 y t) < s y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>0 < ?t2; ?t2 \\<le> d; dist ?y2 x < d\\<rbrakk>\n  \\<Longrightarrow> s (flow0 ?y2 ?t2) < s ?y2\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "obtain u eu where u:\n      \"s (flow0 x (u x)) = 0\"\n      \"u x = return_time ?P x\"\n      \"(\\<And>y. y \\<in> cball x eu \\<Longrightarrow> s (flow0 y (u y)) = 0)\"\n      \"continuous_on (cball x eu) u\"\n      \"(\\<lambda>t. (t, u t)) ` cball x eu \\<subseteq> Sigma X existence_ivl0\"\n      \"0 < eu\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u eu.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y.\n            y \\<in> cball x eu \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x eu) u;\n         (\\<lambda>t. (t, u t)) ` cball x eu\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < eu\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule returns_to_implicit_function[OF rt cS(1) Ds DsC through]; blast)"], ["proof (state)\nthis:\n  s (flow0 x (u x)) = 0\n  u x = return_time {x \\<in> S. s x = 0} x\n  ?y2 \\<in> cball x eu \\<Longrightarrow> s (flow0 ?y2 (u ?y2)) = 0\n  continuous_on (cball x eu) u\n  (\\<lambda>t. (t, u t)) ` cball x eu \\<subseteq> Sigma X existence_ivl0\n  0 < eu\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have u_tendsto: \"(u \\<longlongrightarrow> u x) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<midarrow>x\\<rightarrow> u x", "unfolding isCont_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont u x", "apply (rule continuous_on_interior[OF u(4)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> interior (cball x eu)", "using \\<open>0 < eu\\<close>"], ["proof (prove)\nusing this:\n  0 < eu\n\ngoal (1 subgoal):\n 1. x \\<in> interior (cball x eu)", "by auto"], ["proof (state)\nthis:\n  u \\<midarrow>x\\<rightarrow> u x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"u x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < u x", "by (auto simp: u intro!: return_time_pos rt)"], ["proof (state)\nthis:\n  0 < u x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "from order_tendstoD(1)[OF u_tendsto this]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x. 0 < u x", "have \"\\<forall>\\<^sub>F x in at x. 0 < u x\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x. 0 < u x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x. 0 < u x", "."], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x. 0 < u x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x. 0 < u x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"\\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu", "using eventually_at_ball[OF \\<open>0 < eu\\<close>, of x]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at x within ?A. t \\<in> ball x eu \\<and> t \\<in> ?A\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"x \\<notin> S \\<or> s x \\<noteq> 0 \\<or> blinfun_apply (Ds x) (f x) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> S \\<or>\n    s x \\<noteq> 0 \\<or> blinfun_apply (Ds x) (f x) \\<noteq> 0", "using inside"], ["proof (prove)\nusing this:\n  x \\<in> S\n  s x = 0\n  blinfun_apply (Ds x) (f x) < 0\n\ngoal (1 subgoal):\n 1. x \\<notin> S \\<or>\n    s x \\<noteq> 0 \\<or> blinfun_apply (Ds x) (f x) \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  x \\<notin> S \\<or>\n  s x \\<noteq> 0 \\<or> blinfun_apply (Ds x) (f x) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have returns: \"\\<forall>\\<^sub>F y in at x. returns_to ?P y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "by (rule eventually_returns_to; fact)"], ["proof (state)\nthis:\n  eventually (returns_to {x \\<in> S. s x = 0}) (at x)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "moreover"], ["proof (state)\nthis:\n  eventually (returns_to {x \\<in> S. s x = 0}) (at x)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"\\<forall>\\<^sub>F y in at x. y \\<in> ball x eu\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. y \\<in> ball x eu", "using eventually_at_ball[OF \\<open>0 < eu\\<close>]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at ?z within ?A.\n     t \\<in> ball ?z eu \\<and> t \\<in> ?A\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. y \\<in> ball x eu", "by eventually_elim simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. y \\<in> ball x eu\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> ball x eu", "have ev_cball: \"\\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> ball x eu\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu", "by eventually_elim (use \\<open>e > 0\\<close> in auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"continuous_on (ball x eu) u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on (ball x eu) u", "using u"], ["proof (prove)\nusing this:\n  s (flow0 x (u x)) = 0\n  u x = return_time {x \\<in> S. s x = 0} x\n  ?y2 \\<in> cball x eu \\<Longrightarrow> s (flow0 ?y2 (u ?y2)) = 0\n  continuous_on (cball x eu) u\n  (\\<lambda>t. (t, u t)) ` cball x eu \\<subseteq> Sigma X existence_ivl0\n  0 < eu\n\ngoal (1 subgoal):\n 1. continuous_on (ball x eu) u", "by (auto simp: continuous_on_subset)"], ["proof (state)\nthis:\n  continuous_on (ball x eu) u\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "then"], ["proof (chain)\npicking this:\n  continuous_on (ball x eu) u", "have [tendsto_intros]: \"(u \\<longlongrightarrow> u x) (at x)\""], ["proof (prove)\nusing this:\n  continuous_on (ball x eu) u\n\ngoal (1 subgoal):\n 1. u \\<midarrow>x\\<rightarrow> u x", "using \\<open>eu > 0\\<close> at_within_open[of y \"ball x eu\" for y]"], ["proof (prove)\nusing this:\n  continuous_on (ball x eu) u\n  0 < eu\n  \\<lbrakk>?y4 \\<in> ball x eu; open (ball x eu)\\<rbrakk>\n  \\<Longrightarrow> at ?y4 within ball x eu = at ?y4\n\ngoal (1 subgoal):\n 1. u \\<midarrow>x\\<rightarrow> u x", "by (auto simp: continuous_on_def)"], ["proof (state)\nthis:\n  u \\<midarrow>x\\<rightarrow> u x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "then"], ["proof (chain)\npicking this:\n  u \\<midarrow>x\\<rightarrow> u x", "have flow0_u_tendsto: \"(\\<lambda>x. flow0 x (u x)) \\<midarrow>x\\<rightarrow> poincare_map ?P x\""], ["proof (prove)\nusing this:\n  u \\<midarrow>x\\<rightarrow> u x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. flow0 x (u x)) \\<midarrow>x\n    \\<rightarrow> poincare_map {x \\<in> S. s x = 0} x", "by (auto intro!: tendsto_eq_intros u return_time_exivl rt simp: poincare_map_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. flow0 x (u x)) \\<midarrow>x\n  \\<rightarrow> poincare_map {x \\<in> S. s x = 0} x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have s_imp: \"s (poincare_map {x \\<in> S. s x = 0} x) = 0 \\<longrightarrow> poincare_map {x \\<in> S. s x = 0} x \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s (poincare_map {x \\<in> S. s x = 0} x) = 0 \\<longrightarrow>\n    poincare_map {x \\<in> S. s x = 0} x \\<in> S", "using poincare_map_returns[OF rt]"], ["proof (prove)\nusing this:\n  closed {x \\<in> S. s x = 0} \\<Longrightarrow>\n  poincare_map {x \\<in> S. s x = 0} x \\<in> {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. s (poincare_map {x \\<in> S. s x = 0} x) = 0 \\<longrightarrow>\n    poincare_map {x \\<in> S. s x = 0} x \\<in> S", "by auto"], ["proof (state)\nthis:\n  s (poincare_map {x \\<in> S. s x = 0} x) = 0 \\<longrightarrow>\n  poincare_map {x \\<in> S. s x = 0} x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "from eventually_tendsto_compose_within[OF eventually_inside s_imp flow0_u_tendsto]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> UNIV \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at x.\n     s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S", "have \"\\<forall>\\<^sub>F x in at x. s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> UNIV \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at x.\n     s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x.\n       s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x.\n     s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "with ev_cball"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\n  \\<forall>\\<^sub>F x in at x.\n     s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S", "have \"\\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> S\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\n  \\<forall>\\<^sub>F x in at x.\n     s (flow0 x (u x)) = 0 \\<longrightarrow> flow0 x (u x) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> S", "by eventually_elim (auto simp: u)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x. 0 < u x\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\n  eventually (returns_to {x \\<in> S. s x = 0}) (at x)\n  \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> S", "have u_returns_ge: \"\\<forall>\\<^sub>F y in at x. returns_to ?P y \\<and> return_time ?P y \\<le> u y\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x. 0 < u x\n  \\<forall>\\<^sub>F y in at x. y \\<in> cball x eu\n  eventually (returns_to {x \\<in> S. s x = 0}) (at x)\n  \\<forall>\\<^sub>F x in at x. flow0 x (u x) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       returns_to {x \\<in> S. s x = 0} y \\<and>\n       return_time {x \\<in> S. s x = 0} y \\<le> u y", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>0 < u y; y \\<in> cball x eu;\n        returns_to {y \\<in> S. s y = 0} y; flow0 y (u y) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> returns_to {x \\<in> S. s x = 0} y \\<and>\n                         return_time {x \\<in> S. s x = 0} y \\<le> u y", "case (elim y)"], ["proof (state)\nthis:\n  0 < u y\n  y \\<in> cball x eu\n  returns_to {y \\<in> S. s y = 0} y\n  flow0 y (u y) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>0 < u y; y \\<in> cball x eu;\n        returns_to {y \\<in> S. s y = 0} y; flow0 y (u y) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> returns_to {x \\<in> S. s x = 0} y \\<and>\n                         return_time {x \\<in> S. s x = 0} y \\<le> u y", "then"], ["proof (chain)\npicking this:\n  0 < u y\n  y \\<in> cball x eu\n  returns_to {y \\<in> S. s y = 0} y\n  flow0 y (u y) \\<in> S", "show ?case"], ["proof (prove)\nusing this:\n  0 < u y\n  y \\<in> cball x eu\n  returns_to {y \\<in> S. s y = 0} y\n  flow0 y (u y) \\<in> S\n\ngoal (1 subgoal):\n 1. returns_to {x \\<in> S. s x = 0} y \\<and>\n    return_time {x \\<in> S. s x = 0} y \\<le> u y", "using u elim"], ["proof (prove)\nusing this:\n  0 < u y\n  y \\<in> cball x eu\n  returns_to {y \\<in> S. s y = 0} y\n  flow0 y (u y) \\<in> S\n  s (flow0 x (u x)) = 0\n  u x = return_time {x \\<in> S. s x = 0} x\n  ?y2 \\<in> cball x eu \\<Longrightarrow> s (flow0 ?y2 (u ?y2)) = 0\n  continuous_on (cball x eu) u\n  (\\<lambda>t. (t, u t)) ` cball x eu \\<subseteq> Sigma X existence_ivl0\n  0 < eu\n  0 < u y\n  y \\<in> cball x eu\n  returns_to {y \\<in> S. s y = 0} y\n  flow0 y (u y) \\<in> S\n\ngoal (1 subgoal):\n 1. returns_to {x \\<in> S. s x = 0} y \\<and>\n    return_time {x \\<in> S. s x = 0} y \\<le> u y", "by (auto intro!: return_time_le[OF _ cls])"], ["proof (state)\nthis:\n  returns_to {x \\<in> S. s x = 0} y \\<and>\n  return_time {x \\<in> S. s x = 0} y \\<le> u y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x.\n     returns_to {x \\<in> S. s x = 0} y \\<and>\n     return_time {x \\<in> S. s x = 0} y \\<le> u y\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x.\n     returns_to {x \\<in> S. s x = 0} y \\<and>\n     return_time {x \\<in> S. s x = 0} y \\<le> u y\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"\\<forall>\\<^sub>F y in at x. u y - return_time ?P x < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       u y - return_time {x \\<in> S. s x = 0} x < e", "using tendstoD[OF u_tendsto \\<open>0 < e\\<close>, unfolded u] u_returns_ge"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F xa in at x.\n     dist (u xa) (return_time {x \\<in> S. s x = 0} x) < e\n  \\<forall>\\<^sub>F y in at x.\n     returns_to {x \\<in> S. s x = 0} y \\<and>\n     return_time {x \\<in> S. s x = 0} y \\<le> u y\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       u y - return_time {x \\<in> S. s x = 0} x < e", "by eventually_elim (auto simp: dist_real_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. u y - return_time {x \\<in> S. s x = 0} x < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x. u y - return_time {x \\<in> S. s x = 0} x < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have d_less: \"d < return_time ?P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d < return_time {x \\<in> S. s x = 0} x", "apply (rule return_time_gt)"], ["proof (prove)\ngoal (3 subgoals):\n 1. returns_to {x \\<in> S. s x = 0} x\n 2. closed {x \\<in> S. s x = 0}\n 3. \\<And>sa.\n       \\<lbrakk>0 < sa; sa \\<le> d\\<rbrakk>\n       \\<Longrightarrow> flow0 x sa \\<notin> {x \\<in> S. s x = 0}", "apply fact"], ["proof (prove)\ngoal (2 subgoals):\n 1. closed {x \\<in> S. s x = 0}\n 2. \\<And>sa.\n       \\<lbrakk>0 < sa; sa \\<le> d\\<rbrakk>\n       \\<Longrightarrow> flow0 x sa \\<notin> {x \\<in> S. s x = 0}", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>0 < sa; sa \\<le> d\\<rbrakk>\n       \\<Longrightarrow> flow0 x sa \\<notin> {x \\<in> S. s x = 0}", "subgoal for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < t; t \\<le> d\\<rbrakk>\n    \\<Longrightarrow> flow0 x t \\<notin> {x \\<in> S. s x = 0}", "using d_mvt[of t x] \\<open>s x = 0\\<close> \\<open>0 < d\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < t; t \\<le> d; dist x x < d\\<rbrakk>\n  \\<Longrightarrow> s (flow0 x t) < s x\n  s x = 0\n  0 < d\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < t; t \\<le> d\\<rbrakk>\n    \\<Longrightarrow> flow0 x t \\<notin> {x \\<in> S. s x = 0}", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  d < return_time {x \\<in> S. s x = 0} x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "note 1 = inside"], ["proof (state)\nthis:\n  x \\<in> S\n  s x = 0\n  blinfun_apply (Ds x) (f x) < 0\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "define ml where \"ml = Max {return_time ?P x / 2, return_time ?P x - e, d}\""], ["proof (state)\nthis:\n  ml =\n  Max {return_time {x \\<in> S. s x = 0} x / 2,\n       return_time {x \\<in> S. s x = 0} x - e, d}\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have [intro, simp, arith]: \"0 < ml\" \"ml < return_time ?P x\" \"ml \\<le> return_time ?P x\" \"d \\<le> ml\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < ml &&& ml < return_time {x \\<in> S. s x = 0} x) &&&\n    ml \\<le> return_time {x \\<in> S. s x = 0} x &&& d \\<le> ml", "using return_time_pos[OF rt cls] \\<open>0 < e\\<close> d_less"], ["proof (prove)\nusing this:\n  0 < return_time {x \\<in> S. s x = 0} x\n  0 < e\n  d < return_time {x \\<in> S. s x = 0} x\n\ngoal (1 subgoal):\n 1. (0 < ml &&& ml < return_time {x \\<in> S. s x = 0} x) &&&\n    ml \\<le> return_time {x \\<in> S. s x = 0} x &&& d \\<le> ml", "by (auto simp: ml_def)"], ["proof (state)\nthis:\n  0 < ml\n  ml < return_time {x \\<in> S. s x = 0} x\n  ml \\<le> return_time {x \\<in> S. s x = 0} x\n  d \\<le> ml\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have mt_in: \"ml \\<in> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ml \\<in> existence_ivl0 x", "using \\<open>0 < e\\<close> \\<open>0 < d\\<close> d_less"], ["proof (prove)\nusing this:\n  0 < e\n  0 < d\n  d < return_time {x \\<in> S. s x = 0} x\n\ngoal (1 subgoal):\n 1. ml \\<in> existence_ivl0 x", "by (auto intro!: mem_existence_ivl_iv_defined in_existence_between_zeroI[OF ret_exivl]\n        simp: closed_segment_eq_real_ivl ml_def)"], ["proof (state)\nthis:\n  ml \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "from open_existence_ivlE[OF mt_in]"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 \\<le> ml;\n   \\<And>e.\n      \\<lbrakk>0 < e;\n       cball x e \\<times> {0..ml + e}\n       \\<subseteq> Sigma X existence_ivl0\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "obtain e0 where e0: \"e0 > 0\" \"cball x e0 \\<times> {0..ml + e0} \\<subseteq> Sigma X existence_ivl0\" (is \"?D \\<subseteq> _\")"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> ml;\n   \\<And>e.\n      \\<lbrakk>0 < e;\n       cball x e \\<times> {0..ml + e}\n       \\<subseteq> Sigma X existence_ivl0\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>e0.\n        \\<lbrakk>0 < e0;\n         cball x e0 \\<times> {0..ml + e0}\n         \\<subseteq> Sigma X existence_ivl0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < e0\n  cball x e0 \\<times> {0..ml + e0} \\<subseteq> Sigma X existence_ivl0\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have uc: \"uniformly_continuous_on ((\\<lambda>(x, t). flow0 x t) ` ?D) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniformly_continuous_on\n     ((\\<lambda>(x, y). flow0 x y) ` (cball x e0 \\<times> {0..ml + e0})) s", "apply (auto intro!: compact_uniformly_continuous continuous_on_subset[OF cont_s])"], ["proof (prove)\ngoal (1 subgoal):\n 1. compact\n     ((\\<lambda>x. case x of (x, xa) \\<Rightarrow> flow0 x xa) `\n      (cball x e0 \\<times> {0..ml + e0}))", "apply (rule compact_continuous_image)"], ["proof (prove)\ngoal (2 subgoals):\n 1. continuous_on (cball x e0 \\<times> {0..ml + e0})\n     (\\<lambda>x. case x of (x, xa) \\<Rightarrow> flow0 x xa)\n 2. compact (cball x e0 \\<times> {0..ml + e0})", "apply (rule continuous_on_subset)"], ["proof (prove)\ngoal (3 subgoals):\n 1. continuous_on ?s20\n     (\\<lambda>x. case x of (x, xa) \\<Rightarrow> flow0 x xa)\n 2. cball x e0 \\<times> {0..ml + e0} \\<subseteq> ?s20\n 3. compact (cball x e0 \\<times> {0..ml + e0})", "apply (rule flow_continuous_on_state_space)"], ["proof (prove)\ngoal (2 subgoals):\n 1. cball x e0 \\<times> {0..ml + e0} \\<subseteq> Sigma X existence_ivl0\n 2. compact (cball x e0 \\<times> {0..ml + e0})", "apply (rule e0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. compact (cball x e0 \\<times> {0..ml + e0})", "apply (rule compact_Times)"], ["proof (prove)\ngoal (2 subgoals):\n 1. compact (cball x e0)\n 2. compact {0..ml + e0}", "apply (rule compact_cball)"], ["proof (prove)\ngoal (1 subgoal):\n 1. compact {0..ml + e0}", "apply (rule compact_Icc)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  uniformly_continuous_on\n   ((\\<lambda>(x, y). flow0 x y) ` (cball x e0 \\<times> {0..ml + e0})) s\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "let ?T = \"{d..ml}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have ul: \"uniform_limit ?T flow0 (flow0 x) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit {d..ml} flow0 (flow0 x) (at x)", "using \\<open>0 < e\\<close> \\<open>0 < d\\<close> d_less"], ["proof (prove)\nusing this:\n  0 < e\n  0 < d\n  d < return_time {x \\<in> S. s x = 0} x\n\ngoal (1 subgoal):\n 1. uniform_limit {d..ml} flow0 (flow0 x) (at x)", "by (intro uniform_limit_flow)\n      (auto intro!: mem_existence_ivl_iv_defined in_existence_between_zeroI[OF ret_exivl]\n        simp: closed_segment_eq_real_ivl )"], ["proof (state)\nthis:\n  uniform_limit {d..ml} flow0 (flow0 x) (at x)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "{"], ["proof (state)\nthis:\n  uniform_limit {d..ml} flow0 (flow0 x) (at x)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"\\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. y \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. y \\<in> X", "by (rule topological_tendstoD[OF tendsto_ident_at open_dom \\<open>x \\<in> X\\<close>])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. y \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. y \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"\\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. s y \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. s y \\<le> 0", "by (auto simp: eventually_at)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. s y \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. s y \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"\\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. Ds y (f y) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n       blinfun_apply (Ds y) (f y) < 0", "by (rule order_tendstoD) (auto intro!: tendsto_eq_intros inside)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     blinfun_apply (Ds y) (f y) < 0\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     blinfun_apply (Ds y) (f y) < 0\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "from tendstoD[OF tendsto_ident_at \\<open>0 < d\\<close>]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at ?l within ?s1. dist x ?l < d", "have \"\\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. dist y x < d\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at ?l within ?s1. dist x ?l < d\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. dist y x < d", "by (auto simp: )"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. dist y x < d\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. dist y x < d\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"d \\<in> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<in> existence_ivl0 x", "using d_ex[of x d] \\<open>0 < d\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>dist x x < d; 0 \\<le> d; d \\<le> d\\<rbrakk>\n  \\<Longrightarrow> d \\<in> existence_ivl0 x\n  0 < d\n\ngoal (1 subgoal):\n 1. d \\<in> existence_ivl0 x", "by auto"], ["proof (state)\nthis:\n  d \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have dret: \"returns_to {x\\<in>S. s x = 0} (flow0 x d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. returns_to {x \\<in> S. s x = 0} (flow0 x d)", "apply (rule returns_to_laterI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. returns_to {x \\<in> S. s x = 0} x\n 2. closed {x \\<in> S. s x = 0}\n 3. 0 < d\n 4. d \\<in> existence_ivl0 x\n 5. \\<And>sa.\n       \\<lbrakk>0 < sa; sa \\<le> d\\<rbrakk>\n       \\<Longrightarrow> flow0 x sa \\<notin> {x \\<in> S. s x = 0}", "apply fact+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>0 < sa; sa \\<le> d\\<rbrakk>\n       \\<Longrightarrow> flow0 x sa \\<notin> {x \\<in> S. s x = 0}", "subgoal for u"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < u; u \\<le> d\\<rbrakk>\n    \\<Longrightarrow> flow0 x u \\<notin> {x \\<in> S. s x = 0}", "using d_mvt[of u x] \\<open>s x = 0\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < u; u \\<le> d; dist x x < d\\<rbrakk>\n  \\<Longrightarrow> s (flow0 x u) < s x\n  s x = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < u; u \\<le> d\\<rbrakk>\n    \\<Longrightarrow> flow0 x u \\<notin> {x \\<in> S. s x = 0}", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  returns_to {x \\<in> S. s x = 0} (flow0 x d)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"\\<forall>\\<^sub>F y in at x. \\<forall>t\\<in>{d..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       \\<forall>t\\<in>{d..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}", "apply (rule uniform_limit_in_open)"], ["proof (prove)\ngoal (6 subgoals):\n 1. uniform_limit {d..ml} flow0 ?l (at x)\n 2. continuous_on {d..ml} ?l\n 3. compact {d..ml}\n 4. {d..ml} \\<noteq> {}\n 5. open (- {x \\<in> S. s x = 0})\n 6. ?l ` {d..ml} \\<subseteq> - {x \\<in> S. s x = 0}", "apply (rule ul)"], ["proof (prove)\ngoal (5 subgoals):\n 1. continuous_on {d..ml} (flow0 x)\n 2. compact {d..ml}\n 3. {d..ml} \\<noteq> {}\n 4. open (- {x \\<in> S. s x = 0})\n 5. flow0 x ` {d..ml} \\<subseteq> - {x \\<in> S. s x = 0}", "apply (auto intro!: continuous_intros continuous_on_compose2[OF cont_s] simp:\n          split: if_splits)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>d \\<le> xa; xa \\<le> ml\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> existence_ivl0 x\n 2. \\<And>xa.\n       \\<lbrakk>flow0 x xa \\<in> S; s (flow0 x xa) = 0; d \\<le> xa;\n        xa \\<le> ml\\<rbrakk>\n       \\<Longrightarrow> False", "using \\<open>d \\<in> existence_ivl0 x\\<close> mem_is_interval_1_I mt_in"], ["proof (prove)\nusing this:\n  d \\<in> existence_ivl0 x\n  \\<lbrakk>is_interval ?S; ?a \\<in> ?S; ?c \\<in> ?S; ?a \\<le> ?b;\n   ?b \\<le> ?c\\<rbrakk>\n  \\<Longrightarrow> ?b \\<in> ?S\n  ml \\<in> existence_ivl0 x\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>d \\<le> xa; xa \\<le> ml\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> existence_ivl0 x\n 2. \\<And>xa.\n       \\<lbrakk>flow0 x xa \\<in> S; s (flow0 x xa) = 0; d \\<le> xa;\n        xa \\<le> ml\\<rbrakk>\n       \\<Longrightarrow> False", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>flow0 x xa \\<in> S; s (flow0 x xa) = 0; d \\<le> xa;\n        xa \\<le> ml\\<rbrakk>\n       \\<Longrightarrow> False", "subgoal for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>flow0 x t \\<in> S; s (flow0 x t) = 0; d \\<le> t;\n     t \\<le> ml\\<rbrakk>\n    \\<Longrightarrow> False", "using return_time_least[OF rt cls, of t] \\<open>ml < return_time {x \\<in> S. s x = 0} x\\<close> \\<open>0 < d\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < t; t < return_time {x \\<in> S. s x = 0} x\\<rbrakk>\n  \\<Longrightarrow> flow0 x t \\<notin> {x \\<in> S. s x = 0}\n  ml < return_time {x \\<in> S. s x = 0} x\n  0 < d\n\ngoal (1 subgoal):\n 1. \\<lbrakk>flow0 x t \\<in> S; s (flow0 x t) = 0; d \\<le> t;\n     t \\<le> ml\\<rbrakk>\n    \\<Longrightarrow> False", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x.\n     \\<forall>t\\<in>{d..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x.\n     \\<forall>t\\<in>{d..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}", "have \"\\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. \\<forall>t\\<in>{d .. ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x.\n     \\<forall>t\\<in>{d..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n       \\<forall>t\\<in>{d..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}", "by (auto simp add: eventually_at; force)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     \\<forall>t\\<in>{d..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. y \\<in> X\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. s y \\<le> 0\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     blinfun_apply (Ds y) (f y) < 0\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. dist y x < d\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     \\<forall>t\\<in>{d..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}", "have \"\\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. \\<forall>t\\<in>{0<..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. y \\<in> X\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. s y \\<le> 0\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     blinfun_apply (Ds y) (f y) < 0\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. dist y x < d\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     \\<forall>t\\<in>{d..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n       \\<forall>t\\<in>{0<..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}", "apply eventually_elim"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> X; s y \\<le> 0; blinfun_apply (Ds y) (f y) < 0;\n        dist y x < d;\n        \\<forall>t\\<in>{d..ml}.\n           flow0 y t \\<in> - {y \\<in> S. s y = 0}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>t\\<in>{0<..ml}.\n                            flow0 y t \\<in> - {x \\<in> S. s x = 0}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y t.\n       \\<lbrakk>y \\<in> X; s y \\<le> 0; blinfun_apply (Ds y) (f y) < 0;\n        dist y x < d;\n        \\<forall>t\\<in>{d..ml}.\n           flow0 y t \\<in> S \\<longrightarrow> s (flow0 y t) \\<noteq> 0;\n        flow0 y t \\<in> S; s (flow0 y t) = 0; 0 < t; t \\<le> ml\\<rbrakk>\n       \\<Longrightarrow> False", "using d_mvt"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?t2; ?t2 \\<le> d; dist ?y2 x < d\\<rbrakk>\n  \\<Longrightarrow> s (flow0 ?y2 ?t2) < s ?y2\n\ngoal (1 subgoal):\n 1. \\<And>y t.\n       \\<lbrakk>y \\<in> X; s y \\<le> 0; blinfun_apply (Ds y) (f y) < 0;\n        dist y x < d;\n        \\<forall>t\\<in>{d..ml}.\n           flow0 y t \\<in> S \\<longrightarrow> s (flow0 y t) \\<noteq> 0;\n        flow0 y t \\<in> S; s (flow0 y t) = 0; 0 < t; t \\<le> ml\\<rbrakk>\n       \\<Longrightarrow> False", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     \\<forall>t\\<in>{0<..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     \\<forall>t\\<in>{0<..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "have \"\\<forall>\\<^sub>F y in at x. returns_to ?P y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "by fact"], ["proof (state)\nthis:\n  eventually (returns_to {x \\<in> S. s x = 0}) (at x)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "then"], ["proof (chain)\npicking this:\n  eventually (returns_to {x \\<in> S. s x = 0}) (at x)", "have \"\\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. returns_to ?P y\""], ["proof (prove)\nusing this:\n  eventually (returns_to {x \\<in> S. s x = 0}) (at x)\n\ngoal (1 subgoal):\n 1. eventually (returns_to {x \\<in> S. s x = 0})\n     (at x within {x. s x \\<le> 0})", "by (auto simp: eventually_at)"], ["proof (state)\nthis:\n  eventually (returns_to {x \\<in> S. s x = 0})\n   (at x within {x. s x \\<le> 0})\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     \\<forall>t\\<in>{0<..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}\n  eventually (returns_to {x \\<in> S. s x = 0})\n   (at x within {x. s x \\<le> 0})", "have \"\\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. return_time ?P y > ml\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     \\<forall>t\\<in>{0<..ml}. flow0 y t \\<in> - {x \\<in> S. s x = 0}\n  eventually (returns_to {x \\<in> S. s x = 0})\n   (at x within {x. s x \\<le> 0})\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n       ml < return_time {x \\<in> S. s x = 0} y", "apply eventually_elim"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>\\<forall>t\\<in>{0<..ml}.\n                   flow0 y t \\<in> - {y \\<in> S. s y = 0};\n        returns_to {y \\<in> S. s y = 0} y\\<rbrakk>\n       \\<Longrightarrow> ml < return_time {x \\<in> S. s x = 0} y", "apply (rule return_time_gt)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>\\<forall>t\\<in>{0<..ml}.\n                   flow0 y t \\<in> - {y \\<in> S. s y = 0};\n        returns_to {y \\<in> S. s y = 0} y\\<rbrakk>\n       \\<Longrightarrow> returns_to {x \\<in> S. s x = 0} y\n 2. \\<And>y.\n       \\<lbrakk>\\<forall>t\\<in>{0<..ml}.\n                   flow0 y t \\<in> - {y \\<in> S. s y = 0};\n        returns_to {y \\<in> S. s y = 0} y\\<rbrakk>\n       \\<Longrightarrow> closed {x \\<in> S. s x = 0}\n 3. \\<And>y sa.\n       \\<lbrakk>\\<forall>t\\<in>{0<..ml}.\n                   flow0 y t \\<in> - {y \\<in> S. s y = 0};\n        returns_to {y \\<in> S. s y = 0} y; 0 < sa; sa \\<le> ml\\<rbrakk>\n       \\<Longrightarrow> flow0 y sa \\<notin> {x \\<in> S. s x = 0}", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     ml < return_time {x \\<in> S. s x = 0} y\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "}"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     ml < return_time {x \\<in> S. s x = 0} y\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     ml < return_time {x \\<in> S. s x = 0} y", "have \"\\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. return_time ?P y \\<ge> return_time ?P x - e\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     ml < return_time {x \\<in> S. s x = 0} y\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n       return_time {x \\<in> S. s x = 0} x - e\n       \\<le> return_time {x \\<in> S. s x = 0} y", "by eventually_elim (auto simp: ml_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     return_time {x \\<in> S. s x = 0} x - e\n     \\<le> return_time {x \\<in> S. s x = 0} y\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x.\n     returns_to {x \\<in> S. s x = 0} y \\<and>\n     return_time {x \\<in> S. s x = 0} y \\<le> u y\n  \\<forall>\\<^sub>F y in at x. u y - return_time {x \\<in> S. s x = 0} x < e\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     return_time {x \\<in> S. s x = 0} x - e\n     \\<le> return_time {x \\<in> S. s x = 0} y", "have \"\\<forall>\\<^sub>F y in at x within {x . s x \\<le> 0}. dist (return_time ?P y) (return_time ?P x) \\<le> e\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x.\n     returns_to {x \\<in> S. s x = 0} y \\<and>\n     return_time {x \\<in> S. s x = 0} y \\<le> u y\n  \\<forall>\\<^sub>F y in at x. u y - return_time {x \\<in> S. s x = 0} x < e\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     return_time {x \\<in> S. s x = 0} x - e\n     \\<le> return_time {x \\<in> S. s x = 0} y\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n       dist (return_time {x \\<in> S. s x = 0} y)\n        (return_time {x \\<in> S. s x = 0} x)\n       \\<le> e", "unfolding eventually_at_filter"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F xa in nhds x.\n     xa \\<noteq> x \\<longrightarrow>\n     xa \\<in> UNIV \\<longrightarrow>\n     returns_to {x \\<in> S. s x = 0} xa \\<and>\n     return_time {x \\<in> S. s x = 0} xa \\<le> u xa\n  \\<forall>\\<^sub>F xa in nhds x.\n     xa \\<noteq> x \\<longrightarrow>\n     xa \\<in> UNIV \\<longrightarrow>\n     u xa - return_time {x \\<in> S. s x = 0} x < e\n  \\<forall>\\<^sub>F xa in nhds x.\n     xa \\<noteq> x \\<longrightarrow>\n     xa \\<in> {x. s x \\<le> 0} \\<longrightarrow>\n     return_time {x \\<in> S. s x = 0} x - e\n     \\<le> return_time {x \\<in> S. s x = 0} xa\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in nhds x.\n       xa \\<noteq> x \\<longrightarrow>\n       xa \\<in> {x. s x \\<le> 0} \\<longrightarrow>\n       dist (return_time {x \\<in> S. s x = 0} xa)\n        (return_time {x \\<in> S. s x = 0} x)\n       \\<le> e", "by eventually_elim (auto simp: dist_real_def abs_real_def algebra_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     dist (return_time {x \\<in> S. s x = 0} y)\n      (return_time {x \\<in> S. s x = 0} x)\n     \\<le> e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in at x within {x. s x \\<le> 0}.\n          dist (return_time {x \\<in> S. s x = 0} xa)\n           (return_time {x \\<in> S. s x = 0} x)\n          < e", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     dist (return_time {x \\<in> S. s x = 0} y)\n      (return_time {x \\<in> S. s x = 0} x)\n     \\<le> e", "show \"\\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}. dist (return_time ?P y) (return_time ?P x) < e_orig\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     dist (return_time {x \\<in> S. s x = 0} y)\n      (return_time {x \\<in> S. s x = 0} x)\n     \\<le> e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n       dist (return_time {x \\<in> S. s x = 0} y)\n        (return_time {x \\<in> S. s x = 0} x)\n       < e_orig", "by eventually_elim (use \\<open>e_orig > 0\\<close> in \\<open>auto simp: e_def\\<close>)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x within {x. s x \\<le> 0}.\n     dist (return_time {x \\<in> S. s x = 0} y)\n      (return_time {x \\<in> S. s x = 0} x)\n     < e_orig\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  return_time_continuous_below_plane:\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes rt: \"returns_to {x \\<in> R. x \\<bullet> n = c} x\" (is \"returns_to ?P x\")\n  assumes cR: \"closed R\"\n  assumes through: \"f (poincare_map ?P x) \\<bullet> n \\<noteq> 0\"\n  assumes R: \"x \\<in> R\"\n  assumes inside: \"x \\<bullet> n = c\" \"f x \\<bullet> n < 0\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map ?P x). x \\<bullet> n = c \\<longrightarrow> x \\<in> R\"\n  shows \"continuous (at x within {x. x \\<bullet> n \\<le> c}) (return_time ?P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous (at x within {x. x \\<bullet> n \\<le> c})\n     (return_time {x \\<in> R. x \\<bullet> n = c})", "apply (rule return_time_continuous_below[of R \"\\<lambda>x. x \\<bullet> n - c\", simplified])"], ["proof (prove)\ngoal (9 subgoals):\n 1. returns_to {x \\<in> R. x \\<bullet> n = c} x\n 2. \\<And>x.\n       ((\\<lambda>x. x \\<bullet> n - c) has_derivative\n        blinfun_apply (?Ds x))\n        (at x)\n 3. closed R\n 4. \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> R. x \\<bullet> n = c}\n                                x).\n       x \\<bullet> n = c \\<longrightarrow> x \\<in> R\n 5. \\<And>x. isCont ?Ds x\n 6. blinfun_apply (?Ds (poincare_map {x \\<in> R. x \\<bullet> n = c} x))\n     (f (poincare_map {x \\<in> R. x \\<bullet> n = c} x)) \\<noteq>\n    0\n 7. x \\<in> R\n 8. x \\<bullet> n = c\n 9. blinfun_apply (?Ds x) (f x) < 0", "using through rt inside cR R eventually_inside"], ["proof (prove)\nusing this:\n  f (poincare_map {x \\<in> R. x \\<bullet> n = c} x) \\<bullet> n \\<noteq> 0\n  returns_to {x \\<in> R. x \\<bullet> n = c} x\n  x \\<bullet> n = c\n  f x \\<bullet> n < 0\n  closed R\n  x \\<in> R\n  \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> R. x \\<bullet> n = c} x).\n     x \\<bullet> n = c \\<longrightarrow> x \\<in> R\n\ngoal (9 subgoals):\n 1. returns_to {x \\<in> R. x \\<bullet> n = c} x\n 2. \\<And>x.\n       ((\\<lambda>x. x \\<bullet> n - c) has_derivative\n        blinfun_apply (?Ds x))\n        (at x)\n 3. closed R\n 4. \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> R. x \\<bullet> n = c}\n                                x).\n       x \\<bullet> n = c \\<longrightarrow> x \\<in> R\n 5. \\<And>x. isCont ?Ds x\n 6. blinfun_apply (?Ds (poincare_map {x \\<in> R. x \\<bullet> n = c} x))\n     (f (poincare_map {x \\<in> R. x \\<bullet> n = c} x)) \\<noteq>\n    0\n 7. x \\<in> R\n 8. x \\<bullet> n = c\n 9. blinfun_apply (?Ds x) (f x) < 0", "by (auto intro!: derivative_eq_intros blinfun_inner_left.rep_eq[symmetric])"], ["", "lemma\n  poincare_map_in_interior_eventually_return_time_equal:\n  assumes RP: \"R \\<subseteq> P\"\n  assumes cP: \"closed P\"\n  assumes cR: \"closed R\"\n  assumes ret: \"returns_to P x\"\n  assumes evret: \"\\<forall>\\<^sub>F x in at x within S. returns_to P x\"\n  assumes evR: \"\\<forall>\\<^sub>F x in at x within S. poincare_map P x \\<in> R\"\n  shows \"\\<forall>\\<^sub>F x in at x within S. returns_to R x \\<and> return_time P x = return_time R x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x within S.\n       returns_to R x \\<and> return_time P x = return_time R x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x within S.\n       returns_to R x \\<and> return_time P x = return_time R x", "from evret evR"], ["proof (chain)\npicking this:\n  eventually (returns_to P) (at x within S)\n  \\<forall>\\<^sub>F x in at x within S. poincare_map P x \\<in> R", "show ?thesis"], ["proof (prove)\nusing this:\n  eventually (returns_to P) (at x within S)\n  \\<forall>\\<^sub>F x in at x within S. poincare_map P x \\<in> R\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x within S.\n       returns_to R x \\<and> return_time P x = return_time R x", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>returns_to P x; poincare_map P x \\<in> R\\<rbrakk>\n       \\<Longrightarrow> returns_to R x \\<and>\n                         return_time P x = return_time R x", "case (elim x)"], ["proof (state)\nthis:\n  returns_to P x\n  poincare_map P x \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>returns_to P x; poincare_map P x \\<in> R\\<rbrakk>\n       \\<Longrightarrow> returns_to R x \\<and>\n                         return_time P x = return_time R x", "from return_time_least[OF elim(1) cP] RP"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < ?s; ?s < return_time P x\\<rbrakk>\n  \\<Longrightarrow> flow0 x ?s \\<notin> P\n  R \\<subseteq> P", "have rtl: \"\\<And>s. 0 < s \\<Longrightarrow> s < return_time P x \\<Longrightarrow> flow0 x s \\<notin> R\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?s; ?s < return_time P x\\<rbrakk>\n  \\<Longrightarrow> flow0 x ?s \\<notin> P\n  R \\<subseteq> P\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>0 < s; s < return_time P x\\<rbrakk>\n       \\<Longrightarrow> flow0 x s \\<notin> R", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>0 < ?s; ?s < return_time P x\\<rbrakk>\n  \\<Longrightarrow> flow0 x ?s \\<notin> R\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>returns_to P x; poincare_map P x \\<in> R\\<rbrakk>\n       \\<Longrightarrow> returns_to R x \\<and>\n                         return_time P x = return_time R x", "from elim(2)"], ["proof (chain)\npicking this:\n  poincare_map P x \\<in> R", "have pR: \"poincare_map P x \\<in> R\""], ["proof (prove)\nusing this:\n  poincare_map P x \\<in> R\n\ngoal (1 subgoal):\n 1. poincare_map P x \\<in> R", "by auto"], ["proof (state)\nthis:\n  poincare_map P x \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>returns_to P x; poincare_map P x \\<in> R\\<rbrakk>\n       \\<Longrightarrow> returns_to R x \\<and>\n                         return_time P x = return_time R x", "have \"\\<forall>\\<^sub>F t in at_right 0. 0 < t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually ((<) (0::'b)) (at_right (0::'b))", "by (simp add: eventually_at_filter)"], ["proof (state)\nthis:\n  eventually ((<) (0::?'b1)) (at_right (0::?'b1))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>returns_to P x; poincare_map P x \\<in> R\\<rbrakk>\n       \\<Longrightarrow> returns_to R x \\<and>\n                         return_time P x = return_time R x", "moreover"], ["proof (state)\nthis:\n  eventually ((<) (0::?'b1)) (at_right (0::?'b1))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>returns_to P x; poincare_map P x \\<in> R\\<rbrakk>\n       \\<Longrightarrow> returns_to R x \\<and>\n                         return_time P x = return_time R x", "have \"\\<forall>\\<^sub>F t in at_right 0. t < return_time P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. t < return_time P x", "using return_time_pos[OF elim(1) cP]"], ["proof (prove)\nusing this:\n  0 < return_time P x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. t < return_time P x", "by (rule order_tendstoD[OF tendsto_ident_at])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. t < return_time P x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>returns_to P x; poincare_map P x \\<in> R\\<rbrakk>\n       \\<Longrightarrow> returns_to R x \\<and>\n                         return_time P x = return_time R x", "ultimately"], ["proof (chain)\npicking this:\n  eventually ((<) (0::?'b1)) (at_right (0::?'b1))\n  \\<forall>\\<^sub>F t in at_right 0. t < return_time P x", "have evR: \"\\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> R\""], ["proof (prove)\nusing this:\n  eventually ((<) (0::?'b1)) (at_right (0::?'b1))\n  \\<forall>\\<^sub>F t in at_right 0. t < return_time P x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> R", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>0 < t; t < return_time P x\\<rbrakk>\n       \\<Longrightarrow> flow0 x t \\<notin> R", "case et: (elim t)"], ["proof (state)\nthis:\n  0 < t\n  t < return_time P x\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>0 < t; t < return_time P x\\<rbrakk>\n       \\<Longrightarrow> flow0 x t \\<notin> R", "from return_time_least[OF elim(1) cP et]"], ["proof (chain)\npicking this:\n  flow0 x t \\<notin> P", "show ?case"], ["proof (prove)\nusing this:\n  flow0 x t \\<notin> P\n\ngoal (1 subgoal):\n 1. flow0 x t \\<notin> R", "using RP"], ["proof (prove)\nusing this:\n  flow0 x t \\<notin> P\n  R \\<subseteq> P\n\ngoal (1 subgoal):\n 1. flow0 x t \\<notin> R", "by auto"], ["proof (state)\nthis:\n  flow0 x t \\<notin> R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. flow0 x t \\<notin> R\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>returns_to P x; poincare_map P x \\<in> R\\<rbrakk>\n       \\<Longrightarrow> returns_to R x \\<and>\n                         return_time P x = return_time R x", "have rtp: \"0 < return_time P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < return_time P x", "by (intro return_time_pos cP elim)"], ["proof (state)\nthis:\n  0 < return_time P x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>returns_to P x; poincare_map P x \\<in> R\\<rbrakk>\n       \\<Longrightarrow> returns_to R x \\<and>\n                         return_time P x = return_time R x", "have rtex: \"return_time P x \\<in> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time P x \\<in> existence_ivl0 x", "by (intro return_time_exivl elim cP)"], ["proof (state)\nthis:\n  return_time P x \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>returns_to P x; poincare_map P x \\<in> R\\<rbrakk>\n       \\<Longrightarrow> returns_to R x \\<and>\n                         return_time P x = return_time R x", "have frR: \"flow0 x (return_time P x) \\<in> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 x (return_time P x) \\<in> R", "unfolding poincare_map_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. poincare_map P x \\<in> R", "by (rule pR)"], ["proof (state)\nthis:\n  flow0 x (return_time P x) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>returns_to P x; poincare_map P x \\<in> R\\<rbrakk>\n       \\<Longrightarrow> returns_to R x \\<and>\n                         return_time P x = return_time R x", "have \"returns_to R x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. returns_to R x", "by (rule returns_toI[where t=\"return_time P x\"]; fact)"], ["proof (state)\nthis:\n  returns_to R x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>returns_to P x; poincare_map P x \\<in> R\\<rbrakk>\n       \\<Longrightarrow> returns_to R x \\<and>\n                         return_time P x = return_time R x", "moreover"], ["proof (state)\nthis:\n  returns_to R x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>returns_to P x; poincare_map P x \\<in> R\\<rbrakk>\n       \\<Longrightarrow> returns_to R x \\<and>\n                         return_time P x = return_time R x", "have \"return_time R x = return_time P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time R x = return_time P x", "by (rule return_time_eqI) fact+"], ["proof (state)\nthis:\n  return_time R x = return_time P x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>returns_to P x; poincare_map P x \\<in> R\\<rbrakk>\n       \\<Longrightarrow> returns_to R x \\<and>\n                         return_time P x = return_time R x", "ultimately"], ["proof (chain)\npicking this:\n  returns_to R x\n  return_time R x = return_time P x", "show ?case"], ["proof (prove)\nusing this:\n  returns_to R x\n  return_time R x = return_time P x\n\ngoal (1 subgoal):\n 1. returns_to R x \\<and> return_time P x = return_time R x", "by auto"], ["proof (state)\nthis:\n  returns_to R x \\<and> return_time P x = return_time R x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x within S.\n     returns_to R x \\<and> return_time P x = return_time R x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poincare_map_in_planeI:\n  assumes \"returns_to (plane n c) x0\"\n  shows \"poincare_map (plane n c) x0 \\<bullet> n = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poincare_map (plane n c) x0 \\<bullet> n = c", "using poincare_map_returns[OF assms]"], ["proof (prove)\nusing this:\n  closed (plane n c) \\<Longrightarrow>\n  poincare_map (plane n c) x0 \\<in> plane n c\n\ngoal (1 subgoal):\n 1. poincare_map (plane n c) x0 \\<bullet> n = c", "by fastforce"], ["", "lemma less_return_time_imp_exivl:\n  \"h \\<in> existence_ivl0 x'\" if \"h \\<le> return_time P x'\" \"returns_to P x'\" \"closed P\" \"0 \\<le> h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<in> existence_ivl0 x'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. h \\<in> existence_ivl0 x'", "from return_time_exivl[OF that(2,3)]"], ["proof (chain)\npicking this:\n  return_time P x' \\<in> existence_ivl0 x'", "have \"return_time P x' \\<in> existence_ivl0 x'\""], ["proof (prove)\nusing this:\n  return_time P x' \\<in> existence_ivl0 x'\n\ngoal (1 subgoal):\n 1. return_time P x' \\<in> existence_ivl0 x'", "by auto"], ["proof (state)\nthis:\n  return_time P x' \\<in> existence_ivl0 x'\n\ngoal (1 subgoal):\n 1. h \\<in> existence_ivl0 x'", "from ivl_subset_existence_ivl[OF this] that"], ["proof (chain)\npicking this:\n  {0..return_time P x'} \\<subseteq> existence_ivl0 x'\n  h \\<le> return_time P x'\n  returns_to P x'\n  closed P\n  0 \\<le> h", "show ?thesis"], ["proof (prove)\nusing this:\n  {0..return_time P x'} \\<subseteq> existence_ivl0 x'\n  h \\<le> return_time P x'\n  returns_to P x'\n  closed P\n  0 \\<le> h\n\ngoal (1 subgoal):\n 1. h \\<in> existence_ivl0 x'", "by auto"], ["proof (state)\nthis:\n  h \\<in> existence_ivl0 x'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma eventually_returns_to_continuousI:\n  assumes \"returns_to P x\"\n  assumes \"closed P\"\n  assumes \"continuous (at x within S) (return_time P)\"\n  shows \"\\<forall>\\<^sub>F x in at x within S. returns_to P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually (returns_to P) (at x within S)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eventually (returns_to P) (at x within S)", "have \"return_time P x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < return_time P x", "using assms"], ["proof (prove)\nusing this:\n  returns_to P x\n  closed P\n  continuous (at x within S) (return_time P)\n\ngoal (1 subgoal):\n 1. 0 < return_time P x", "by (auto simp: return_time_pos)"], ["proof (state)\nthis:\n  0 < return_time P x\n\ngoal (1 subgoal):\n 1. eventually (returns_to P) (at x within S)", "from order_tendstoD(1)[OF assms(3)[unfolded continuous_within] this]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x within S. 0 < return_time P x", "have \"\\<forall>\\<^sub>F x in at x within S. 0 < return_time P x\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x within S. 0 < return_time P x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x within S. 0 < return_time P x", "."], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x within S. 0 < return_time P x\n\ngoal (1 subgoal):\n 1. eventually (returns_to P) (at x within S)", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x within S. 0 < return_time P x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x within S. 0 < return_time P x\n\ngoal (1 subgoal):\n 1. eventually (returns_to P) (at x within S)", "by eventually_elim (auto simp: return_time_pos_returns_to)"], ["proof (state)\nthis:\n  eventually (returns_to P) (at x within S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma return_time_implicit_functionE:\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes rt: \"returns_to {x \\<in> S. s x = 0} x\" (is \"returns_to ?P _\")\n  assumes cS: \"closed S\"\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n  assumes DsC: \"\\<And>x. isCont Ds x\"\n  assumes Ds_through: \"(Ds (poincare_map ?P x)) (f (poincare_map ?P x)) \\<noteq> 0\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map ?P x). s x = 0 \\<longrightarrow> x \\<in> S\"\n  assumes outside: \"x \\<notin> S \\<or> s x \\<noteq> 0\"\n  obtains e' where\n    \"0 < e'\"\n    \"\\<And>y. y \\<in> ball x e' \\<Longrightarrow> returns_to ?P y\"\n    \"\\<And>y. y \\<in> ball x e' \\<Longrightarrow> s (flow0 y (return_time ?P y)) = 0\"\n    \"continuous_on (ball x e') (return_time ?P)\"\n    \"(\\<And>y. y \\<in> ball x e' \\<Longrightarrow> Ds (poincare_map ?P y) o\\<^sub>L flowderiv y (return_time ?P y) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun)\"\n    \"(\\<And>U v sa.\n       (\\<And>sa. sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0) \\<Longrightarrow>\n       return_time ?P x = v x \\<Longrightarrow>\n       continuous_on U v \\<Longrightarrow> sa \\<in> U \\<Longrightarrow> x \\<in> U \\<Longrightarrow> U \\<subseteq> ball x e' \\<Longrightarrow> connected U \\<Longrightarrow> open U \\<Longrightarrow> return_time ?P sa = v sa)\"\n    \"(return_time ?P has_derivative\n        - blinfun_scaleR_left (inverse ((Ds (poincare_map ?P x)) (f (poincare_map ?P x)))) o\\<^sub>L\n              (Ds (poincare_map ?P x) o\\<^sub>L Dflow x (return_time ?P x)))\n            (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have cont_s: \"continuous_on UNIV s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV s", "by (rule has_derivative_continuous_on[OF Ds])"], ["proof (state)\nthis:\n  continuous_on UNIV s\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  continuous_on UNIV s", "have s_tendsto: \"(s \\<longlongrightarrow> s x) (at x)\" for x"], ["proof (prove)\nusing this:\n  continuous_on UNIV s\n\ngoal (1 subgoal):\n 1. s \\<midarrow>x\\<rightarrow> s x", "by (auto simp: continuous_on_def)"], ["proof (state)\nthis:\n  s \\<midarrow>?x1\\<rightarrow> s ?x1\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have cls[simp, intro]: \"closed {x \\<in> S. s x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed {x \\<in> S. s x = 0}", "by (rule closed_levelset_within) (auto intro!: cS continuous_on_subset[OF cont_s])"], ["proof (state)\nthis:\n  closed {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have cont_Ds: \"continuous_on UNIV Ds\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV Ds", "using DsC"], ["proof (prove)\nusing this:\n  isCont Ds ?x\n\ngoal (1 subgoal):\n 1. continuous_on UNIV Ds", "by (auto simp: continuous_on_def isCont_def)"], ["proof (state)\nthis:\n  continuous_on UNIV Ds\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note [tendsto_intros] = continuous_on_tendsto_compose[OF cont_Ds _ UNIV_I, simplified]"], ["proof (state)\nthis:\n  (?g \\<longlongrightarrow> ?l) ?F \\<Longrightarrow>\n  ((\\<lambda>x. Ds (?g x)) \\<longlongrightarrow> Ds ?l) ?F\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note [continuous_intros] = continuous_on_compose2[OF cont_Ds _ subset_UNIV]"], ["proof (state)\nthis:\n  continuous_on ?s ?f \\<Longrightarrow>\n  continuous_on ?s (\\<lambda>x. Ds (?f x))\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<forall>\\<^sub>F x in at (poincare_map ?P x). s x = 0 \\<longrightarrow> x \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n       s x = 0 \\<longrightarrow> x \\<in> S", "using eventually_inside"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n     s x = 0 \\<longrightarrow> x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n       s x = 0 \\<longrightarrow> x \\<in> S", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n     s x = 0 \\<longrightarrow> x \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n     s x = 0 \\<longrightarrow> x \\<in> S", "obtain U where \"open U\" \"poincare_map ?P x \\<in> U\" \"\\<And>x. x \\<in> U \\<Longrightarrow> s x = 0 \\<Longrightarrow> x \\<in> S\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n     s x = 0 \\<longrightarrow> x \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>open U; poincare_map {x \\<in> S. s x = 0} x \\<in> U;\n         \\<And>x.\n            \\<lbrakk>x \\<in> U; s x = 0\\<rbrakk>\n            \\<Longrightarrow> x \\<in> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using poincare_map_returns[OF rt cls]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n     s x = 0 \\<longrightarrow> x \\<in> S\n  poincare_map {x \\<in> S. s x = 0} x \\<in> {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>open U; poincare_map {x \\<in> S. s x = 0} x \\<in> U;\n         \\<And>x.\n            \\<lbrakk>x \\<in> U; s x = 0\\<rbrakk>\n            \\<Longrightarrow> x \\<in> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force simp: eventually_at_topological)"], ["proof (state)\nthis:\n  open U\n  poincare_map {x \\<in> S. s x = 0} x \\<in> U\n  \\<lbrakk>?x1 \\<in> U; s ?x1 = 0\\<rbrakk> \\<Longrightarrow> ?x1 \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have s_imp: \"s (poincare_map ?P x) = 0 \\<longrightarrow> poincare_map ?P x \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s (poincare_map {x \\<in> S. s x = 0} x) = 0 \\<longrightarrow>\n    poincare_map {x \\<in> S. s x = 0} x \\<in> S", "using poincare_map_returns[OF rt cls]"], ["proof (prove)\nusing this:\n  poincare_map {x \\<in> S. s x = 0} x \\<in> {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. s (poincare_map {x \\<in> S. s x = 0} x) = 0 \\<longrightarrow>\n    poincare_map {x \\<in> S. s x = 0} x \\<in> S", "by auto"], ["proof (state)\nthis:\n  s (poincare_map {x \\<in> S. s x = 0} x) = 0 \\<longrightarrow>\n  poincare_map {x \\<in> S. s x = 0} x \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have outside_disj: \"x \\<notin> S \\<or> s x \\<noteq> 0 \\<or> blinfun_apply (Ds x) (f x) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> S \\<or>\n    s x \\<noteq> 0 \\<or> blinfun_apply (Ds x) (f x) \\<noteq> 0", "using outside"], ["proof (prove)\nusing this:\n  x \\<notin> S \\<or> s x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x \\<notin> S \\<or>\n    s x \\<noteq> 0 \\<or> blinfun_apply (Ds x) (f x) \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  x \\<notin> S \\<or>\n  s x \\<noteq> 0 \\<or> blinfun_apply (Ds x) (f x) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have pm_tendsto: \"(poincare_map ?P \\<longlongrightarrow> poincare_map ?P x) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poincare_map {x \\<in> S. s x = 0} \\<midarrow>x\n    \\<rightarrow> poincare_map {x \\<in> S. s x = 0} x", "apply (rule poincare_map_tendsto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. return_time {x \\<in> S. s x = 0} \\<midarrow>x\n    \\<rightarrow> return_time {x \\<in> S. s x = 0} x\n 2. returns_to {x \\<in> S. s x = 0} x\n 3. closed {x \\<in> S. s x = 0}", "unfolding isCont_def[symmetric]"], ["proof (prove)\ngoal (3 subgoals):\n 1. isCont (return_time {x \\<in> S. s x = 0}) x\n 2. returns_to {x \\<in> S. s x = 0} x\n 3. closed {x \\<in> S. s x = 0}", "apply (rule return_time_isCont_outside)"], ["proof (prove)\ngoal (9 subgoals):\n 1. returns_to {x \\<in> S. s x = 0} x\n 2. closed S\n 3. \\<And>x. (s has_derivative blinfun_apply (?Ds4 x)) (at x)\n 4. \\<And>x. isCont ?Ds4 x\n 5. blinfun_apply (?Ds4 (poincare_map {x \\<in> S. s x = 0} x))\n     (f (poincare_map {x \\<in> S. s x = 0} x)) \\<noteq>\n    0\n 6. \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n       s x = 0 \\<longrightarrow> x \\<in> S\n 7. x \\<notin> S \\<or> s x \\<noteq> 0\n 8. returns_to {x \\<in> S. s x = 0} x\n 9. closed {x \\<in> S. s x = 0}", "using assms"], ["proof (prove)\nusing this:\n  returns_to {x \\<in> S. s x = 0} x\n  closed S\n  (s has_derivative blinfun_apply (Ds ?x)) (at ?x)\n  isCont Ds ?x\n  blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n   (f (poincare_map {x \\<in> S. s x = 0} x)) \\<noteq>\n  0\n  \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n     s x = 0 \\<longrightarrow> x \\<in> S\n  x \\<notin> S \\<or> s x \\<noteq> 0\n\ngoal (9 subgoals):\n 1. returns_to {x \\<in> S. s x = 0} x\n 2. closed S\n 3. \\<And>x. (s has_derivative blinfun_apply (?Ds4 x)) (at x)\n 4. \\<And>x. isCont ?Ds4 x\n 5. blinfun_apply (?Ds4 (poincare_map {x \\<in> S. s x = 0} x))\n     (f (poincare_map {x \\<in> S. s x = 0} x)) \\<noteq>\n    0\n 6. \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n       s x = 0 \\<longrightarrow> x \\<in> S\n 7. x \\<notin> S \\<or> s x \\<noteq> 0\n 8. returns_to {x \\<in> S. s x = 0} x\n 9. closed {x \\<in> S. s x = 0}", "by (auto intro!: cls )"], ["proof (state)\nthis:\n  poincare_map {x \\<in> S. s x = 0} \\<midarrow>x\n  \\<rightarrow> poincare_map {x \\<in> S. s x = 0} x\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have evmemS: \"\\<forall>\\<^sub>F x in at x. poincare_map ?P x \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x. poincare_map {x \\<in> S. s x = 0} x \\<in> S", "using eventually_returns_to[OF rt cS Ds DsC eventually_inside Ds_through outside_disj]"], ["proof (prove)\nusing this:\n  eventually (returns_to {x \\<in> S. s x = 0}) (at x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x. poincare_map {x \\<in> S. s x = 0} x \\<in> S", "apply eventually_elim"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       returns_to {x \\<in> S. s x = 0} x \\<Longrightarrow>\n       poincare_map {x \\<in> S. s x = 0} x \\<in> S", "using poincare_map_returns"], ["proof (prove)\nusing this:\n  \\<lbrakk>returns_to ?P ?x; closed ?P\\<rbrakk>\n  \\<Longrightarrow> poincare_map ?P ?x \\<in> ?P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       returns_to {x \\<in> S. s x = 0} x \\<Longrightarrow>\n       poincare_map {x \\<in> S. s x = 0} x \\<in> S", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x. poincare_map {x \\<in> S. s x = 0} x \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<forall>\\<^sub>F x in at x. \\<forall>\\<^sub>F x in at (poincare_map ?P x). s x = 0 \\<longrightarrow> x \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x.\n       \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n          s x = 0 \\<longrightarrow> x \\<in> S", "apply (rule eventually_tendsto_compose_within[OF _ _ pm_tendsto])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F a in at (poincare_map {x \\<in> S. s x = 0} x)\n       within ?S.\n       \\<forall>\\<^sub>F x in at a. s x = 0 \\<longrightarrow> x \\<in> S\n 2. \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n       s x = 0 \\<longrightarrow> x \\<in> S\n 3. \\<forall>\\<^sub>F x in at x.\n       poincare_map {x \\<in> S. s x = 0} x \\<in> ?S", "apply (rule eventually_eventually_withinI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n       s x = 0 \\<longrightarrow> x \\<in> S\n 2. s (poincare_map {x \\<in> S. s x = 0} x) = 0 \\<longrightarrow>\n    poincare_map {x \\<in> S. s x = 0} x \\<in> S\n 3. \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n       s x = 0 \\<longrightarrow> x \\<in> S\n 4. \\<forall>\\<^sub>F x in at x.\n       poincare_map {x \\<in> S. s x = 0} x \\<in> ?S", "apply (rule eventually_inside)"], ["proof (prove)\ngoal (3 subgoals):\n 1. s (poincare_map {x \\<in> S. s x = 0} x) = 0 \\<longrightarrow>\n    poincare_map {x \\<in> S. s x = 0} x \\<in> S\n 2. \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n       s x = 0 \\<longrightarrow> x \\<in> S\n 3. \\<forall>\\<^sub>F x in at x.\n       poincare_map {x \\<in> S. s x = 0} x \\<in> ?S", "apply (rule s_imp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n       s x = 0 \\<longrightarrow> x \\<in> S\n 2. \\<forall>\\<^sub>F x in at x.\n       poincare_map {x \\<in> S. s x = 0} x \\<in> ?S", "apply (rule eventually_inside)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x.\n       poincare_map {x \\<in> S. s x = 0} x \\<in> ?S", "apply (rule evmemS)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x.\n     \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n        s x = 0 \\<longrightarrow> x \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x.\n     \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n        s x = 0 \\<longrightarrow> x \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"eventually (\\<lambda>x. x \\<in> - ?P) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x. x \\<in> - {x \\<in> S. s x = 0}", "apply (rule topological_tendstoD)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (\\<lambda>x. x) \\<midarrow>x\\<rightarrow> ?l\n 2. open (- {x \\<in> S. s x = 0})\n 3. ?l \\<in> - {x \\<in> S. s x = 0}", "using outside"], ["proof (prove)\nusing this:\n  x \\<notin> S \\<or> s x \\<noteq> 0\n\ngoal (3 subgoals):\n 1. (\\<lambda>x. x) \\<midarrow>x\\<rightarrow> ?l\n 2. open (- {x \\<in> S. s x = 0})\n 3. ?l \\<in> - {x \\<in> S. s x = 0}", "by (auto intro!: )"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x. x \\<in> - {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x. x \\<in> - {x \\<in> S. s x = 0}", "have \"eventually (\\<lambda>x. x \\<notin> S \\<or> s x \\<noteq> 0) (at x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x. x \\<in> - {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x. x \\<notin> S \\<or> s x \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x. x \\<notin> S \\<or> s x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x. x \\<notin> S \\<or> s x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"eventually (\\<lambda>x. (Ds (poincare_map ?P x)) (f (poincare_map ?P x)) \\<noteq> 0) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x.\n       blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n        (f (poincare_map {x \\<in> S. s x = 0} x)) \\<noteq>\n       0", "apply (rule tendsto_imp_eventually_ne)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lambda>z.\n        blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} z))\n         (f (poincare_map {x \\<in> S. s x = 0} z)))\n    \\<midarrow>x\\<rightarrow> ?c\n 2. ?c \\<noteq> 0", "apply (rule tendsto_intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (\\<lambda>x. Ds (poincare_map {x \\<in> S. s x = 0} x)) \\<midarrow>x\n    \\<rightarrow> ?a3\n 2. (\\<lambda>x. f (poincare_map {x \\<in> S. s x = 0} x)) \\<midarrow>x\n    \\<rightarrow> ?b3\n 3. blinfun_apply ?a3 ?b3 \\<noteq> 0", "apply (rule tendsto_intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. poincare_map {x \\<in> S. s x = 0} \\<midarrow>x\\<rightarrow> ?l7\n 2. (\\<lambda>x. f (poincare_map {x \\<in> S. s x = 0} x)) \\<midarrow>x\n    \\<rightarrow> ?b3\n 3. blinfun_apply (Ds ?l7) ?b3 \\<noteq> 0", "unfolding poincare_map_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. (\\<lambda>x. flow0 x (return_time {x \\<in> S. s x = 0} x)) \\<midarrow>x\n    \\<rightarrow> ?l7\n 2. (\\<lambda>x. f (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n    \\<midarrow>x\\<rightarrow> ?b3\n 3. blinfun_apply (Ds ?l7) ?b3 \\<noteq> 0", "apply (rule tendsto_intros)"], ["proof (prove)\ngoal (5 subgoals):\n 1. (\\<lambda>s. s) \\<midarrow>x\\<rightarrow> ?xs11\n 2. return_time {x \\<in> S. s x = 0} \\<midarrow>x\\<rightarrow> ?ts11\n 3. ?ts11 \\<in> existence_ivl0 ?xs11\n 4. (\\<lambda>x. f (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n    \\<midarrow>x\\<rightarrow> ?b3\n 5. blinfun_apply (Ds (flow0 ?xs11 ?ts11)) ?b3 \\<noteq> 0", "apply (rule tendsto_intros)"], ["proof (prove)\ngoal (4 subgoals):\n 1. return_time {x \\<in> S. s x = 0} \\<midarrow>x\\<rightarrow> ?ts11\n 2. ?ts11 \\<in> existence_ivl0 x\n 3. (\\<lambda>x. f (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n    \\<midarrow>x\\<rightarrow> ?b3\n 4. blinfun_apply (Ds (flow0 x ?ts11)) ?b3 \\<noteq> 0", "apply (subst isCont_def[symmetric])"], ["proof (prove)\ngoal (4 subgoals):\n 1. isCont (return_time {x \\<in> S. s x = 0}) x\n 2. return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x\n 3. (\\<lambda>x. f (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n    \\<midarrow>x\\<rightarrow> ?b3\n 4. blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n     ?b3 \\<noteq>\n    0", "apply (rule return_time_isCont_outside[OF rt cS Ds DsC Ds_through eventually_inside outside])"], ["proof (prove)\ngoal (3 subgoals):\n 1. return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x\n 2. (\\<lambda>x. f (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n    \\<midarrow>x\\<rightarrow> ?b3\n 3. blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n     ?b3 \\<noteq>\n    0", "apply (rule return_time_exivl[OF rt cls])"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lambda>x. f (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n    \\<midarrow>x\\<rightarrow> ?b3\n 2. blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n     ?b3 \\<noteq>\n    0", "apply (rule tendsto_intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (\\<lambda>x. flow0 x (return_time {x \\<in> S. s x = 0} x)) \\<midarrow>x\n    \\<rightarrow> ?b1.22\n 2. ?b1.22 \\<in> X\n 3. blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n     (f ?b1.22) \\<noteq>\n    0", "apply (rule tendsto_intros)"], ["proof (prove)\ngoal (5 subgoals):\n 1. (\\<lambda>s. s) \\<midarrow>x\\<rightarrow> ?xs25\n 2. return_time {x \\<in> S. s x = 0} \\<midarrow>x\\<rightarrow> ?ts25\n 3. ?ts25 \\<in> existence_ivl0 ?xs25\n 4. flow0 ?xs25 ?ts25 \\<in> X\n 5. blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n     (f (flow0 ?xs25 ?ts25)) \\<noteq>\n    0", "apply (rule tendsto_intros)"], ["proof (prove)\ngoal (4 subgoals):\n 1. return_time {x \\<in> S. s x = 0} \\<midarrow>x\\<rightarrow> ?ts25\n 2. ?ts25 \\<in> existence_ivl0 x\n 3. flow0 x ?ts25 \\<in> X\n 4. blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n     (f (flow0 x ?ts25)) \\<noteq>\n    0", "apply (subst isCont_def[symmetric])"], ["proof (prove)\ngoal (4 subgoals):\n 1. isCont (return_time {x \\<in> S. s x = 0}) x\n 2. return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x\n 3. flow0 x (return_time {x \\<in> S. s x = 0} x) \\<in> X\n 4. blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n     (f (flow0 x (return_time {x \\<in> S. s x = 0} x))) \\<noteq>\n    0", "apply (rule return_time_isCont_outside[OF rt cS Ds DsC Ds_through eventually_inside outside])"], ["proof (prove)\ngoal (3 subgoals):\n 1. return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x\n 2. flow0 x (return_time {x \\<in> S. s x = 0} x) \\<in> X\n 3. blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n     (f (flow0 x (return_time {x \\<in> S. s x = 0} x))) \\<noteq>\n    0", "apply (rule return_time_exivl[OF rt cls])"], ["proof (prove)\ngoal (2 subgoals):\n 1. flow0 x (return_time {x \\<in> S. s x = 0} x) \\<in> X\n 2. blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n     (f (flow0 x (return_time {x \\<in> S. s x = 0} x))) \\<noteq>\n    0", "apply (rule flow_in_domain)"], ["proof (prove)\ngoal (2 subgoals):\n 1. return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x\n 2. blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n     (f (flow0 x (return_time {x \\<in> S. s x = 0} x))) \\<noteq>\n    0", "apply (rule return_time_exivl[OF rt cls])"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n     (f (flow0 x (return_time {x \\<in> S. s x = 0} x))) \\<noteq>\n    0", "unfolding poincare_map_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n     (f (poincare_map {x \\<in> S. s x = 0} x)) \\<noteq>\n    0", "apply (rule Ds_through)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x.\n     blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n      (f (poincare_map {x \\<in> S. s x = 0} x)) \\<noteq>\n     0\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x.\n     \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n        s x = 0 \\<longrightarrow> x \\<in> S\n  \\<forall>\\<^sub>F x in at x. x \\<notin> S \\<or> s x \\<noteq> 0\n  \\<forall>\\<^sub>F x in at x.\n     blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n      (f (poincare_map {x \\<in> S. s x = 0} x)) \\<noteq>\n     0", "have \"eventually (\\<lambda>y. returns_to ?P y \\<and> (\\<forall>\\<^sub>F x in at (poincare_map ?P y). s x = 0 \\<longrightarrow> x \\<in> S) \\<and>\n    (y \\<notin> S \\<or> s y \\<noteq> 0) \\<and> (Ds (poincare_map ?P y)) (f (poincare_map ?P y)) \\<noteq> 0) (at x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x.\n     \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n        s x = 0 \\<longrightarrow> x \\<in> S\n  \\<forall>\\<^sub>F x in at x. x \\<notin> S \\<or> s x \\<noteq> 0\n  \\<forall>\\<^sub>F x in at x.\n     blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n      (f (poincare_map {x \\<in> S. s x = 0} x)) \\<noteq>\n     0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       returns_to {x \\<in> S. s x = 0} y \\<and>\n       (\\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} y).\n           s x = 0 \\<longrightarrow> x \\<in> S) \\<and>\n       (y \\<notin> S \\<or> s y \\<noteq> 0) \\<and>\n       blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} y))\n        (f (poincare_map {x \\<in> S. s x = 0} y)) \\<noteq>\n       0", "using eventually_returns_to[OF rt cS Ds DsC eventually_inside Ds_through outside_disj]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x.\n     \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n        s x = 0 \\<longrightarrow> x \\<in> S\n  \\<forall>\\<^sub>F x in at x. x \\<notin> S \\<or> s x \\<noteq> 0\n  \\<forall>\\<^sub>F x in at x.\n     blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n      (f (poincare_map {x \\<in> S. s x = 0} x)) \\<noteq>\n     0\n  eventually (returns_to {x \\<in> S. s x = 0}) (at x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at x.\n       returns_to {x \\<in> S. s x = 0} y \\<and>\n       (\\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} y).\n           s x = 0 \\<longrightarrow> x \\<in> S) \\<and>\n       (y \\<notin> S \\<or> s y \\<noteq> 0) \\<and>\n       blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} y))\n        (f (poincare_map {x \\<in> S. s x = 0} y)) \\<noteq>\n       0", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at x.\n     returns_to {x \\<in> S. s x = 0} y \\<and>\n     (\\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} y).\n         s x = 0 \\<longrightarrow> x \\<in> S) \\<and>\n     (y \\<notin> S \\<or> s y \\<noteq> 0) \\<and>\n     blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} y))\n      (f (poincare_map {x \\<in> S. s x = 0} y)) \\<noteq>\n     0\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F y in at x.\n     returns_to {x \\<in> S. s x = 0} y \\<and>\n     (\\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} y).\n         s x = 0 \\<longrightarrow> x \\<in> S) \\<and>\n     (y \\<notin> S \\<or> s y \\<noteq> 0) \\<and>\n     blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} y))\n      (f (poincare_map {x \\<in> S. s x = 0} y)) \\<noteq>\n     0", "obtain Y' where Y': \"open Y'\" \"x \\<in> Y'\" \"\\<And>y. y \\<in> Y' \\<Longrightarrow> returns_to ?P y\"\n      \"\\<And>y. y \\<in> Y' \\<Longrightarrow> (\\<forall>\\<^sub>F x in at (poincare_map ?P y). s x = 0 \\<longrightarrow> x \\<in> S)\"\n      \"\\<And>y. y \\<in> Y' \\<Longrightarrow> y \\<notin> S \\<or> s y \\<noteq> 0\"\n      \"\\<And>y. y \\<in> Y' \\<Longrightarrow> blinfun_apply (Ds (poincare_map ?P y)) (f (poincare_map ?P y)) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in at x.\n     returns_to {x \\<in> S. s x = 0} y \\<and>\n     (\\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} y).\n         s x = 0 \\<longrightarrow> x \\<in> S) \\<and>\n     (y \\<notin> S \\<or> s y \\<noteq> 0) \\<and>\n     blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} y))\n      (f (poincare_map {x \\<in> S. s x = 0} y)) \\<noteq>\n     0\n\ngoal (1 subgoal):\n 1. (\\<And>Y'.\n        \\<lbrakk>open Y'; x \\<in> Y';\n         \\<And>y.\n            y \\<in> Y' \\<Longrightarrow> returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> Y' \\<Longrightarrow>\n            \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} y).\n               s x = 0 \\<longrightarrow> x \\<in> S;\n         \\<And>y.\n            y \\<in> Y' \\<Longrightarrow> y \\<notin> S \\<or> s y \\<noteq> 0;\n         \\<And>y.\n            y \\<in> Y' \\<Longrightarrow>\n            blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} y))\n             (f (poincare_map {x \\<in> S. s x = 0} y)) \\<noteq>\n            0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply (subst (asm) (3) eventually_at_topological)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Y'.\n                \\<lbrakk>open Y'; x \\<in> Y';\n                 \\<And>y.\n                    y \\<in> Y' \\<Longrightarrow>\n                    returns_to {x \\<in> S. s x = 0} y;\n                 \\<And>y.\n                    y \\<in> Y' \\<Longrightarrow>\n                    \\<forall>\\<^sub>F x in at\n      (poincare_map {x \\<in> S. s x = 0} y).\n                       s x = 0 \\<longrightarrow> x \\<in> S;\n                 \\<And>y.\n                    y \\<in> Y' \\<Longrightarrow>\n                    y \\<notin> S \\<or> s y \\<noteq> 0;\n                 \\<And>y.\n                    y \\<in> Y' \\<Longrightarrow>\n                    blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} y))\n                     (f (poincare_map {x \\<in> S. s x = 0} y)) \\<noteq>\n                    0\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<exists>Sa.\n        open Sa \\<and>\n        x \\<in> Sa \\<and>\n        (\\<forall>xa\\<in>Sa.\n            xa \\<noteq> x \\<longrightarrow>\n            xa \\<in> UNIV \\<longrightarrow>\n            returns_to {x \\<in> S. s x = 0} xa \\<and>\n            (\\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0}\n   xa).\n                s x = 0 \\<longrightarrow> x \\<in> S) \\<and>\n            (xa \\<notin> S \\<or> s xa \\<noteq> 0) \\<and>\n            blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} xa))\n             (f (poincare_map {x \\<in> S. s x = 0} xa)) \\<noteq>\n            0)\\<rbrakk>\n    \\<Longrightarrow> thesis", "using rt outside Ds_through eventually_inside"], ["proof (prove)\nusing this:\n  returns_to {x \\<in> S. s x = 0} x\n  x \\<notin> S \\<or> s x \\<noteq> 0\n  blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n   (f (poincare_map {x \\<in> S. s x = 0} x)) \\<noteq>\n  0\n  \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x).\n     s x = 0 \\<longrightarrow> x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Y'.\n                \\<lbrakk>open Y'; x \\<in> Y';\n                 \\<And>y.\n                    y \\<in> Y' \\<Longrightarrow>\n                    returns_to {x \\<in> S. s x = 0} y;\n                 \\<And>y.\n                    y \\<in> Y' \\<Longrightarrow>\n                    \\<forall>\\<^sub>F x in at\n      (poincare_map {x \\<in> S. s x = 0} y).\n                       s x = 0 \\<longrightarrow> x \\<in> S;\n                 \\<And>y.\n                    y \\<in> Y' \\<Longrightarrow>\n                    y \\<notin> S \\<or> s y \\<noteq> 0;\n                 \\<And>y.\n                    y \\<in> Y' \\<Longrightarrow>\n                    blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} y))\n                     (f (poincare_map {x \\<in> S. s x = 0} y)) \\<noteq>\n                    0\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<exists>Sa.\n        open Sa \\<and>\n        x \\<in> Sa \\<and>\n        (\\<forall>xa\\<in>Sa.\n            xa \\<noteq> x \\<longrightarrow>\n            xa \\<in> UNIV \\<longrightarrow>\n            returns_to {x \\<in> S. s x = 0} xa \\<and>\n            (\\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0}\n   xa).\n                s x = 0 \\<longrightarrow> x \\<in> S) \\<and>\n            (xa \\<notin> S \\<or> s xa \\<noteq> 0) \\<and>\n            blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} xa))\n             (f (poincare_map {x \\<in> S. s x = 0} xa)) \\<noteq>\n            0)\\<rbrakk>\n    \\<Longrightarrow> thesis", "by fastforce"], ["proof (state)\nthis:\n  open Y'\n  x \\<in> Y'\n  ?y1 \\<in> Y' \\<Longrightarrow> returns_to {x \\<in> S. s x = 0} ?y1\n  ?y1 \\<in> Y' \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} ?y1).\n     s x = 0 \\<longrightarrow> x \\<in> S\n  ?y1 \\<in> Y' \\<Longrightarrow> ?y1 \\<notin> S \\<or> s ?y1 \\<noteq> 0\n  ?y1 \\<in> Y' \\<Longrightarrow>\n  blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} ?y1))\n   (f (poincare_map {x \\<in> S. s x = 0} ?y1)) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from openE[OF \\<open>open Y'\\<close> \\<open>x \\<in> Y'\\<close>]"], ["proof (chain)\npicking this:\n  (\\<And>e.\n      \\<lbrakk>0 < e; ball x e \\<subseteq> Y'\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain eY where eY: \"0 < eY\" \"ball x eY \\<subseteq> Y'\""], ["proof (prove)\nusing this:\n  (\\<And>e.\n      \\<lbrakk>0 < e; ball x e \\<subseteq> Y'\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>eY.\n        \\<lbrakk>0 < eY; ball x eY \\<subseteq> Y'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < eY\n  ball x eY \\<subseteq> Y'\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define Y where \"Y = ball x eY\""], ["proof (state)\nthis:\n  Y = ball x eY\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  Y = ball x eY", "have Y: \"open Y\" and x: \"x \\<in> Y\"\n      and Yr: \"\\<And>y. y \\<in> Y \\<Longrightarrow> returns_to ?P y\"\n      and Y_mem: \"\\<And>y. y \\<in> Y \\<Longrightarrow> (\\<forall>\\<^sub>F x in at (poincare_map ?P y). s x = 0 \\<longrightarrow> x \\<in> S)\"\n      and Y_nz: \"\\<And>y. y \\<in> Y \\<Longrightarrow> y \\<notin> S \\<or> s y \\<noteq> 0\"\n      and Y_fnz: \"\\<And>y. y \\<in> Y \\<Longrightarrow> Ds (poincare_map ?P y) (f (poincare_map ?P y)) \\<noteq> 0\"\n      and Y_convex: \"convex Y\""], ["proof (prove)\nusing this:\n  Y = ball x eY\n\ngoal (1 subgoal):\n 1. (open Y &&&\n     x \\<in> Y &&&\n     (\\<And>y.\n         y \\<in> Y \\<Longrightarrow> returns_to {x \\<in> S. s x = 0} y)) &&&\n    ((\\<And>y.\n         y \\<in> Y \\<Longrightarrow>\n         \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} y).\n            s x = 0 \\<longrightarrow> x \\<in> S) &&&\n     (\\<And>y.\n         y \\<in> Y \\<Longrightarrow> y \\<notin> S \\<or> s y \\<noteq> 0)) &&&\n    (\\<And>y.\n        y \\<in> Y \\<Longrightarrow>\n        blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} y))\n         (f (poincare_map {x \\<in> S. s x = 0} y)) \\<noteq>\n        0) &&&\n    convex Y", "using Y' eY"], ["proof (prove)\nusing this:\n  Y = ball x eY\n  open Y'\n  x \\<in> Y'\n  ?y1 \\<in> Y' \\<Longrightarrow> returns_to {x \\<in> S. s x = 0} ?y1\n  ?y1 \\<in> Y' \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} ?y1).\n     s x = 0 \\<longrightarrow> x \\<in> S\n  ?y1 \\<in> Y' \\<Longrightarrow> ?y1 \\<notin> S \\<or> s ?y1 \\<noteq> 0\n  ?y1 \\<in> Y' \\<Longrightarrow>\n  blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} ?y1))\n   (f (poincare_map {x \\<in> S. s x = 0} ?y1)) \\<noteq>\n  0\n  0 < eY\n  ball x eY \\<subseteq> Y'\n\ngoal (1 subgoal):\n 1. (open Y &&&\n     x \\<in> Y &&&\n     (\\<And>y.\n         y \\<in> Y \\<Longrightarrow> returns_to {x \\<in> S. s x = 0} y)) &&&\n    ((\\<And>y.\n         y \\<in> Y \\<Longrightarrow>\n         \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} y).\n            s x = 0 \\<longrightarrow> x \\<in> S) &&&\n     (\\<And>y.\n         y \\<in> Y \\<Longrightarrow> y \\<notin> S \\<or> s y \\<noteq> 0)) &&&\n    (\\<And>y.\n        y \\<in> Y \\<Longrightarrow>\n        blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} y))\n         (f (poincare_map {x \\<in> S. s x = 0} y)) \\<noteq>\n        0) &&&\n    convex Y", "by (auto simp: subset_iff dist_commute)"], ["proof (state)\nthis:\n  open Y\n  x \\<in> Y\n  ?y1 \\<in> Y \\<Longrightarrow> returns_to {x \\<in> S. s x = 0} ?y1\n  ?y1 \\<in> Y \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} ?y1).\n     s x = 0 \\<longrightarrow> x \\<in> S\n  ?y1 \\<in> Y \\<Longrightarrow> ?y1 \\<notin> S \\<or> s ?y1 \\<noteq> 0\n  ?y1 \\<in> Y \\<Longrightarrow>\n  blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} ?y1))\n   (f (poincare_map {x \\<in> S. s x = 0} ?y1)) \\<noteq>\n  0\n  convex Y\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"isCont (return_time ?P) y\" if \"y \\<in> Y\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (return_time {x \\<in> S. s x = 0}) y", "using return_time_isCont_outside[OF Yr[OF that] cS Ds DsC Y_fnz Y_mem Y_nz, OF that that that]"], ["proof (prove)\nusing this:\n  isCont (return_time {x \\<in> S. s x = 0}) y\n\ngoal (1 subgoal):\n 1. isCont (return_time {x \\<in> S. s x = 0}) y", "."], ["proof (state)\nthis:\n  ?y1 \\<in> Y \\<Longrightarrow>\n  isCont (return_time {x \\<in> S. s x = 0}) ?y1\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  ?y1 \\<in> Y \\<Longrightarrow>\n  isCont (return_time {x \\<in> S. s x = 0}) ?y1", "have cY: \"continuous_on Y (return_time ?P)\""], ["proof (prove)\nusing this:\n  ?y1 \\<in> Y \\<Longrightarrow>\n  isCont (return_time {x \\<in> S. s x = 0}) ?y1\n\ngoal (1 subgoal):\n 1. continuous_on Y (return_time {x \\<in> S. s x = 0})", "by (auto simp: continuous_on_def isCont_def Lim_at_imp_Lim_at_within)"], ["proof (state)\nthis:\n  continuous_on Y (return_time {x \\<in> S. s x = 0})\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note [derivative_intros] = has_derivative_compose[OF _ Ds]"], ["proof (state)\nthis:\n  (?f has_derivative ?f') (at ?x within ?s) \\<Longrightarrow>\n  ((\\<lambda>x. s (?f x)) has_derivative\n   (\\<lambda>x. blinfun_apply (Ds (?f ?x)) (?f' x)))\n   (at ?x within ?s)\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?t1 = \"return_time ?P x\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have t1_exivl: \"?t1 \\<in> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x", "by (auto intro!: return_time_exivl rt)"], ["proof (state)\nthis:\n  return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x", "have [simp]: \"x \\<in> X\""], ["proof (prove)\nusing this:\n  return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. x \\<in> X", "by auto"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have xt1: \"(x, ?t1) \\<in> Sigma Y existence_ivl0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, return_time {x \\<in> S. s x = 0} x) \\<in> Sigma Y existence_ivl0", "by (auto intro!: return_time_exivl rt x)"], ["proof (state)\nthis:\n  (x, return_time {x \\<in> S. s x = 0} x) \\<in> Sigma Y existence_ivl0\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"Sigma Y existence_ivl0 = Sigma X existence_ivl0 \\<inter> fst -` Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sigma Y existence_ivl0 = Sigma X existence_ivl0 \\<inter> fst -` Y", "by auto"], ["proof (state)\nthis:\n  Sigma Y existence_ivl0 = Sigma X existence_ivl0 \\<inter> fst -` Y\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  Sigma Y existence_ivl0 = Sigma X existence_ivl0 \\<inter> fst -` Y\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"open \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open (Sigma X existence_ivl0 \\<inter> fst -` Y)", "by (rule open_Int[OF open_state_space open_vimage_fst[OF \\<open>open Y\\<close>]])"], ["proof (state)\nthis:\n  open (Sigma X existence_ivl0 \\<inter> fst -` Y)\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  open (Sigma Y existence_ivl0)", "have \"open (Sigma Y existence_ivl0)\""], ["proof (prove)\nusing this:\n  open (Sigma Y existence_ivl0)\n\ngoal (1 subgoal):\n 1. open (Sigma Y existence_ivl0)", "."], ["proof (state)\nthis:\n  open (Sigma Y existence_ivl0)\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have D: \"(\\<And>x. x \\<in> Sigma Y existence_ivl0 \\<Longrightarrow>\n      ((\\<lambda>(x, t). s (flow0 x t)) has_derivative\n       blinfun_apply (Ds (flow0 (fst x) (snd x)) o\\<^sub>L (flowderiv (fst x) (snd x))))\n       (at x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Sigma Y existence_ivl0 \\<Longrightarrow>\n       ((\\<lambda>(x, t). s (flow0 x t)) has_derivative\n        blinfun_apply\n         (Ds (flow0 (fst x) (snd x)) o\\<^sub>L flowderiv (fst x) (snd x)))\n        (at x)", "by (auto intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  ?x1 \\<in> Sigma Y existence_ivl0 \\<Longrightarrow>\n  ((\\<lambda>(x, t). s (flow0 x t)) has_derivative\n   blinfun_apply\n    (Ds (flow0 (fst ?x1) (snd ?x1)) o\\<^sub>L\n     flowderiv (fst ?x1) (snd ?x1)))\n   (at ?x1)\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have C: \"continuous_on (Sigma Y existence_ivl0) (\\<lambda>x. Ds (flow0 (fst x) (snd x)) o\\<^sub>L flowderiv (fst x) (snd x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on (Sigma Y existence_ivl0)\n     (\\<lambda>x.\n         Ds (flow0 (fst x) (snd x)) o\\<^sub>L flowderiv (fst x) (snd x))", "by (auto intro!: continuous_intros)"], ["proof (state)\nthis:\n  continuous_on (Sigma Y existence_ivl0)\n   (\\<lambda>x.\n       Ds (flow0 (fst x) (snd x)) o\\<^sub>L flowderiv (fst x) (snd x))\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from return_time_returns[OF rt cls]"], ["proof (chain)\npicking this:\n  flow0 x (return_time {x \\<in> S. s x = 0} x) \\<in> {x \\<in> S. s x = 0}", "have Z: \"(case (x, ?t1) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0\""], ["proof (prove)\nusing this:\n  flow0 x (return_time {x \\<in> S. s x = 0} x) \\<in> {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. (case (x, return_time {x \\<in> S. s x = 0} x) of\n     (x, t) \\<Rightarrow> s (flow0 x t)) =\n    0", "by (auto simp: x)"], ["proof (state)\nthis:\n  (case (x, return_time {x \\<in> S. s x = 0} x) of\n   (x, t) \\<Rightarrow> s (flow0 x t)) =\n  0\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have I1: \"blinfun_scaleR_left (inverse (Ds (flow0 x (?t1))(f (flow0 x (?t1))))) o\\<^sub>L \n    ((Ds (flow0 (fst (x, return_time ?P x))\n            (snd (x, return_time ?P x))) o\\<^sub>L\n       flowderiv (fst (x, return_time ?P x))\n        (snd (x, return_time ?P x))) o\\<^sub>L\n      embed2_blinfun)\n     = 1\\<^sub>L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_scaleR_left\n     (inverse\n       (blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n         (f (flow0 x (return_time {x \\<in> S. s x = 0} x))))) o\\<^sub>L\n    (Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n          (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n     flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n      (snd (x, return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n     embed2_blinfun) =\n    1\\<^sub>L", "using Ds_through"], ["proof (prove)\nusing this:\n  blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n   (f (poincare_map {x \\<in> S. s x = 0} x)) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. blinfun_scaleR_left\n     (inverse\n       (blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n         (f (flow0 x (return_time {x \\<in> S. s x = 0} x))))) o\\<^sub>L\n    (Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n          (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n     flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n      (snd (x, return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n     embed2_blinfun) =\n    1\\<^sub>L", "by (auto intro!: blinfun_eqI\n        simp: rt flowderiv_def blinfun.bilinear_simps inverse_eq_divide poincare_map_def)"], ["proof (state)\nthis:\n  blinfun_scaleR_left\n   (inverse\n     (blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n       (f (flow0 x (return_time {x \\<in> S. s x = 0} x))))) o\\<^sub>L\n  (Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n        (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n   flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n    (snd (x, return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n   embed2_blinfun) =\n  1\\<^sub>L\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have I2: \"((Ds (flow0 (fst (x, return_time ?P x))\n            (snd (x, return_time ?P x))) o\\<^sub>L\n       flowderiv (fst (x, return_time ?P x))\n        (snd (x, return_time ?P x))) o\\<^sub>L\n      embed2_blinfun) o\\<^sub>L blinfun_scaleR_left (inverse (Ds (flow0 x (?t1))(f (flow0 x (?t1)))))\n     = 1\\<^sub>L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n         (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n    flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n     (snd (x, return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n    embed2_blinfun o\\<^sub>L\n    blinfun_scaleR_left\n     (inverse\n       (blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n         (f (flow0 x (return_time {x \\<in> S. s x = 0} x))))) =\n    1\\<^sub>L", "using Ds_through"], ["proof (prove)\nusing this:\n  blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n   (f (poincare_map {x \\<in> S. s x = 0} x)) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n         (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n    flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n     (snd (x, return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n    embed2_blinfun o\\<^sub>L\n    blinfun_scaleR_left\n     (inverse\n       (blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n         (f (flow0 x (return_time {x \\<in> S. s x = 0} x))))) =\n    1\\<^sub>L", "by (auto intro!: blinfun_eqI\n        simp: rt flowderiv_def blinfun.bilinear_simps inverse_eq_divide poincare_map_def)"], ["proof (state)\nthis:\n  Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n       (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n  flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n   (snd (x, return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n  embed2_blinfun o\\<^sub>L\n  blinfun_scaleR_left\n   (inverse\n     (blinfun_apply (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n       (f (flow0 x (return_time {x \\<in> S. s x = 0} x))))) =\n  1\\<^sub>L\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain u e where u:\n      \"s (flow0 x (u x)) = 0\"\n       \"u x = return_time ?P x\"\n       \"(\\<And>sa. sa \\<in> cball x e \\<Longrightarrow> s (flow0 sa (u sa)) = 0)\"\n       \"continuous_on (cball x e) u\"\n       \"(\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> Sigma Y existence_ivl0\"\n       \"0 < e\"\n       \"(u has_derivative\n            blinfun_apply\n             (- blinfun_scaleR_left\n                 (inverse (blinfun_apply (Ds (poincare_map ?P x)) (f (poincare_map ?P x)))) o\\<^sub>L\n              (Ds (poincare_map ?P x) o\\<^sub>L flowderiv x (return_time ?P x)) o\\<^sub>L\n              embed1_blinfun))\n            (at x)\"\n       \"(\\<And>s. s \\<in> cball x e \\<Longrightarrow>\n         Ds (flow0 s (u s)) o\\<^sub>L flowderiv s (u s) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun)\"\n      and unique: \"(\\<And>U v sa.\n               (\\<And>sa. sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0) \\<Longrightarrow>\n               u x = v x \\<Longrightarrow>\n               continuous_on U v \\<Longrightarrow> sa \\<in> U \\<Longrightarrow> x \\<in> U \\<Longrightarrow> U \\<subseteq> cball x e \\<Longrightarrow> connected U \\<Longrightarrow> open U \\<Longrightarrow> u sa = v sa)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>sa.\n            sa \\<in> cball x e \\<Longrightarrow> s (flow0 sa (u sa)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma Y existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x);\n         \\<And>s.\n            s \\<in> cball x e \\<Longrightarrow>\n            Ds (flow0 s (u s)) o\\<^sub>L flowderiv s (u s) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n             U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n            \\<Longrightarrow> u sa = v sa\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply (rule implicit_function_theorem_unique[where f=\"\\<lambda>(x, t). s (flow0 x t)\"\n          and S=\"Sigma Y existence_ivl0\", OF D xt1 \\<open>open (Sigma Y _)\\<close> order_refl C Z I1 I2])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>\\<And>u e.\n                   \\<lbrakk>s (flow0 x (u x)) = 0;\n                    u x = return_time {x \\<in> S. s x = 0} x;\n                    \\<And>sa.\n                       sa \\<in> cball x e \\<Longrightarrow>\n                       s (flow0 sa (u sa)) = 0;\n                    continuous_on (cball x e) u;\n                    (\\<lambda>t. (t, u t)) ` cball x e\n                    \\<subseteq> Sigma Y existence_ivl0;\n                    0 < e;\n                    (u has_derivative\n                     blinfun_apply\n                      (- blinfun_scaleR_left\n                          (inverse\n                            (blinfun_apply\n                              (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                              (f (poincare_map {x \\<in> S. s x = 0}\n                                   x)))) o\\<^sub>L\n                       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n                        flowderiv x\n                         (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n                       embed1_blinfun))\n                     (at x);\n                    \\<And>s.\n                       s \\<in> cball x e \\<Longrightarrow>\n                       Ds (flow0 s (u s)) o\\<^sub>L\n                       flowderiv s (u s) o\\<^sub>L\n                       embed2_blinfun\n                       \\<in> invertibles_blinfun;\n                    \\<And>U v sa.\n                       \\<lbrakk>\\<And>sa.\n                                   sa \\<in> U \\<Longrightarrow>\n                                   s (flow0 sa (v sa)) = 0;\n                        u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n                        U \\<subseteq> cball x e; connected U;\n                        open U\\<rbrakk>\n                       \\<Longrightarrow> u sa = v sa\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        xa \\<in> Sigma Y existence_ivl0\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> Sigma Y existence_ivl0\n 2. \\<And>u e.\n       \\<lbrakk>\\<And>u e.\n                   \\<lbrakk>s (flow0 x (u x)) = 0;\n                    u x = return_time {x \\<in> S. s x = 0} x;\n                    \\<And>sa.\n                       sa \\<in> cball x e \\<Longrightarrow>\n                       s (flow0 sa (u sa)) = 0;\n                    continuous_on (cball x e) u;\n                    (\\<lambda>t. (t, u t)) ` cball x e\n                    \\<subseteq> Sigma Y existence_ivl0;\n                    0 < e;\n                    (u has_derivative\n                     blinfun_apply\n                      (- blinfun_scaleR_left\n                          (inverse\n                            (blinfun_apply\n                              (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                              (f (poincare_map {x \\<in> S. s x = 0}\n                                   x)))) o\\<^sub>L\n                       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n                        flowderiv x\n                         (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n                       embed1_blinfun))\n                     (at x);\n                    \\<And>s.\n                       s \\<in> cball x e \\<Longrightarrow>\n                       Ds (flow0 s (u s)) o\\<^sub>L\n                       flowderiv s (u s) o\\<^sub>L\n                       embed2_blinfun\n                       \\<in> invertibles_blinfun;\n                    \\<And>U v sa.\n                       \\<lbrakk>\\<And>sa.\n                                   sa \\<in> U \\<Longrightarrow>\n                                   s (flow0 sa (v sa)) = 0;\n                        u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n                        U \\<subseteq> cball x e; connected U;\n                        open U\\<rbrakk>\n                       \\<Longrightarrow> u sa = v sa\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (case (x, u x) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0;\n        u x = return_time {x \\<in> S. s x = 0} x;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow>\n           (case (sa, u sa) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma Y existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply\n                  (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n                  (f (flow0 x\n                       (return_time {x \\<in> S. s x = 0} x))))) o\\<^sub>L\n           (Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n                 (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n            flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n             (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        \\<And>s.\n           s \\<in> cball x e \\<Longrightarrow>\n           Ds (flow0 (fst (s, u s)) (snd (s, u s))) o\\<^sub>L\n           flowderiv (fst (s, u s)) (snd (s, u s)) o\\<^sub>L\n           embed2_blinfun\n           \\<in> invertibles_blinfun;\n        \\<And>U v sa.\n           \\<lbrakk>\\<And>sa.\n                       sa \\<in> U \\<Longrightarrow>\n                       (case (sa, v sa) of\n                        (x, t) \\<Rightarrow> s (flow0 x t)) =\n                       0;\n            u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n            U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa\\<rbrakk>\n       \\<Longrightarrow> thesis", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u e.\n       \\<lbrakk>\\<And>u e.\n                   \\<lbrakk>s (flow0 x (u x)) = 0;\n                    u x = return_time {x \\<in> S. s x = 0} x;\n                    \\<And>sa.\n                       sa \\<in> cball x e \\<Longrightarrow>\n                       s (flow0 sa (u sa)) = 0;\n                    continuous_on (cball x e) u;\n                    (\\<lambda>t. (t, u t)) ` cball x e\n                    \\<subseteq> Sigma Y existence_ivl0;\n                    0 < e;\n                    (u has_derivative\n                     blinfun_apply\n                      (- blinfun_scaleR_left\n                          (inverse\n                            (blinfun_apply\n                              (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                              (f (poincare_map {x \\<in> S. s x = 0}\n                                   x)))) o\\<^sub>L\n                       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n                        flowderiv x\n                         (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n                       embed1_blinfun))\n                     (at x);\n                    \\<And>s.\n                       s \\<in> cball x e \\<Longrightarrow>\n                       Ds (flow0 s (u s)) o\\<^sub>L\n                       flowderiv s (u s) o\\<^sub>L\n                       embed2_blinfun\n                       \\<in> invertibles_blinfun;\n                    \\<And>U v sa.\n                       \\<lbrakk>\\<And>sa.\n                                   sa \\<in> U \\<Longrightarrow>\n                                   s (flow0 sa (v sa)) = 0;\n                        u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n                        U \\<subseteq> cball x e; connected U;\n                        open U\\<rbrakk>\n                       \\<Longrightarrow> u sa = v sa\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (case (x, u x) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0;\n        u x = return_time {x \\<in> S. s x = 0} x;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow>\n           (case (sa, u sa) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma Y existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply\n                  (Ds (flow0 x (return_time {x \\<in> S. s x = 0} x)))\n                  (f (flow0 x\n                       (return_time {x \\<in> S. s x = 0} x))))) o\\<^sub>L\n           (Ds (flow0 (fst (x, return_time {x \\<in> S. s x = 0} x))\n                 (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n            flowderiv (fst (x, return_time {x \\<in> S. s x = 0} x))\n             (snd (x, return_time {x \\<in> S. s x = 0} x))) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        \\<And>s.\n           s \\<in> cball x e \\<Longrightarrow>\n           Ds (flow0 (fst (s, u s)) (snd (s, u s))) o\\<^sub>L\n           flowderiv (fst (s, u s)) (snd (s, u s)) o\\<^sub>L\n           embed2_blinfun\n           \\<in> invertibles_blinfun;\n        \\<And>U v sa.\n           \\<lbrakk>\\<And>sa.\n                       sa \\<in> U \\<Longrightarrow>\n                       (case (sa, v sa) of\n                        (x, t) \\<Rightarrow> s (flow0 x t)) =\n                       0;\n            u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n            U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa\\<rbrakk>\n       \\<Longrightarrow> thesis", "unfolding split_beta' fst_conv snd_conv poincare_map_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u e.\n       \\<lbrakk>\\<And>u e.\n                   \\<lbrakk>s (flow0 x (u x)) = 0;\n                    u x = return_time {x \\<in> S. s x = 0} x;\n                    \\<And>sa.\n                       sa \\<in> cball x e \\<Longrightarrow>\n                       s (flow0 sa (u sa)) = 0;\n                    continuous_on (cball x e) u;\n                    (\\<lambda>t. (t, u t)) ` cball x e\n                    \\<subseteq> Sigma Y existence_ivl0;\n                    0 < e;\n                    (u has_derivative\n                     blinfun_apply\n                      (- blinfun_scaleR_left\n                          (inverse\n                            (blinfun_apply\n                              (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                              (f (poincare_map {x \\<in> S. s x = 0}\n                                   x)))) o\\<^sub>L\n                       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n                        flowderiv x\n                         (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n                       embed1_blinfun))\n                     (at x);\n                    \\<And>s.\n                       s \\<in> cball x e \\<Longrightarrow>\n                       Ds (flow0 s (u s)) o\\<^sub>L\n                       flowderiv s (u s) o\\<^sub>L\n                       embed2_blinfun\n                       \\<in> invertibles_blinfun;\n                    \\<And>U v sa.\n                       \\<lbrakk>\\<And>sa.\n                                   sa \\<in> U \\<Longrightarrow>\n                                   s (flow0 sa (v sa)) = 0;\n                        u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n                        U \\<subseteq> cball x e; connected U;\n                        open U\\<rbrakk>\n                       \\<Longrightarrow> u sa = v sa\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        s (flow0 x (u x)) = 0; u x = return_time {x \\<in> S. s x = 0} x;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow> s (flow0 sa (u sa)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma Y existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                  (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n           (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n            flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        \\<And>s.\n           s \\<in> cball x e \\<Longrightarrow>\n           Ds (flow0 s (u s)) o\\<^sub>L flowderiv s (u s) o\\<^sub>L\n           embed2_blinfun\n           \\<in> invertibles_blinfun;\n        \\<And>U v sa.\n           \\<lbrakk>\\<And>sa.\n                       sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n            u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n            U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa\\<rbrakk>\n       \\<Longrightarrow> thesis", "apply (rule)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>u e.\n       \\<lbrakk>\\<And>u e.\n                   \\<lbrakk>s (flow0 x (u x)) = 0;\n                    u x = return_time {x \\<in> S. s x = 0} x;\n                    \\<And>sa.\n                       sa \\<in> cball x e \\<Longrightarrow>\n                       s (flow0 sa (u sa)) = 0;\n                    continuous_on (cball x e) u;\n                    (\\<lambda>t. (t, u t)) ` cball x e\n                    \\<subseteq> Sigma Y existence_ivl0;\n                    0 < e;\n                    (u has_derivative\n                     blinfun_apply\n                      (- blinfun_scaleR_left\n                          (inverse\n                            (blinfun_apply\n                              (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                              (f (poincare_map {x \\<in> S. s x = 0}\n                                   x)))) o\\<^sub>L\n                       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n                        flowderiv x\n                         (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n                       embed1_blinfun))\n                     (at x);\n                    \\<And>s.\n                       s \\<in> cball x e \\<Longrightarrow>\n                       Ds (flow0 s (u s)) o\\<^sub>L\n                       flowderiv s (u s) o\\<^sub>L\n                       embed2_blinfun\n                       \\<in> invertibles_blinfun;\n                    \\<And>U v sa.\n                       \\<lbrakk>\\<And>sa.\n                                   sa \\<in> U \\<Longrightarrow>\n                                   s (flow0 sa (v sa)) = 0;\n                        u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n                        U \\<subseteq> cball x e; connected U;\n                        open U\\<rbrakk>\n                       \\<Longrightarrow> u sa = v sa\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        s (flow0 x (u x)) = 0; u x = return_time {x \\<in> S. s x = 0} x;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow> s (flow0 sa (u sa)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma Y existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                  (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n           (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n            flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        \\<And>s.\n           s \\<in> cball x e \\<Longrightarrow>\n           Ds (flow0 s (u s)) o\\<^sub>L flowderiv s (u s) o\\<^sub>L\n           embed2_blinfun\n           \\<in> invertibles_blinfun;\n        \\<And>U v sa.\n           \\<lbrakk>\\<And>sa.\n                       sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n            u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n            U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa\\<rbrakk>\n       \\<Longrightarrow> s (flow0 x (?u12 u e x)) = 0\n 2. \\<And>u e.\n       \\<lbrakk>\\<And>u e.\n                   \\<lbrakk>s (flow0 x (u x)) = 0;\n                    u x = return_time {x \\<in> S. s x = 0} x;\n                    \\<And>sa.\n                       sa \\<in> cball x e \\<Longrightarrow>\n                       s (flow0 sa (u sa)) = 0;\n                    continuous_on (cball x e) u;\n                    (\\<lambda>t. (t, u t)) ` cball x e\n                    \\<subseteq> Sigma Y existence_ivl0;\n                    0 < e;\n                    (u has_derivative\n                     blinfun_apply\n                      (- blinfun_scaleR_left\n                          (inverse\n                            (blinfun_apply\n                              (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                              (f (poincare_map {x \\<in> S. s x = 0}\n                                   x)))) o\\<^sub>L\n                       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n                        flowderiv x\n                         (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n                       embed1_blinfun))\n                     (at x);\n                    \\<And>s.\n                       s \\<in> cball x e \\<Longrightarrow>\n                       Ds (flow0 s (u s)) o\\<^sub>L\n                       flowderiv s (u s) o\\<^sub>L\n                       embed2_blinfun\n                       \\<in> invertibles_blinfun;\n                    \\<And>U v sa.\n                       \\<lbrakk>\\<And>sa.\n                                   sa \\<in> U \\<Longrightarrow>\n                                   s (flow0 sa (v sa)) = 0;\n                        u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n                        U \\<subseteq> cball x e; connected U;\n                        open U\\<rbrakk>\n                       \\<Longrightarrow> u sa = v sa\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        s (flow0 x (u x)) = 0; u x = return_time {x \\<in> S. s x = 0} x;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow> s (flow0 sa (u sa)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma Y existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                  (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n           (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n            flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        \\<And>s.\n           s \\<in> cball x e \\<Longrightarrow>\n           Ds (flow0 s (u s)) o\\<^sub>L flowderiv s (u s) o\\<^sub>L\n           embed2_blinfun\n           \\<in> invertibles_blinfun;\n        \\<And>U v sa.\n           \\<lbrakk>\\<And>sa.\n                       sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n            u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n            U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa\\<rbrakk>\n       \\<Longrightarrow> ?u12 u e x = return_time {x \\<in> S. s x = 0} x\n 3. \\<And>u e sa.\n       \\<lbrakk>\\<And>u e.\n                   \\<lbrakk>s (flow0 x (u x)) = 0;\n                    u x = return_time {x \\<in> S. s x = 0} x;\n                    \\<And>sa.\n                       sa \\<in> cball x e \\<Longrightarrow>\n                       s (flow0 sa (u sa)) = 0;\n                    continuous_on (cball x e) u;\n                    (\\<lambda>t. (t, u t)) ` cball x e\n                    \\<subseteq> Sigma Y existence_ivl0;\n                    0 < e;\n                    (u has_derivative\n                     blinfun_apply\n                      (- blinfun_scaleR_left\n                          (inverse\n                            (blinfun_apply\n                              (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                              (f (poincare_map {x \\<in> S. s x = 0}\n                                   x)))) o\\<^sub>L\n                       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n                        flowderiv x\n                         (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n                       embed1_blinfun))\n                     (at x);\n                    \\<And>s.\n                       s \\<in> cball x e \\<Longrightarrow>\n                       Ds (flow0 s (u s)) o\\<^sub>L\n                       flowderiv s (u s) o\\<^sub>L\n                       embed2_blinfun\n                       \\<in> invertibles_blinfun;\n                    \\<And>U v sa.\n                       \\<lbrakk>\\<And>sa.\n                                   sa \\<in> U \\<Longrightarrow>\n                                   s (flow0 sa (v sa)) = 0;\n                        u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n                        U \\<subseteq> cball x e; connected U;\n                        open U\\<rbrakk>\n                       \\<Longrightarrow> u sa = v sa\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        s (flow0 x (u x)) = 0; u x = return_time {x \\<in> S. s x = 0} x;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow> s (flow0 sa (u sa)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma Y existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                  (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n           (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n            flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        \\<And>s.\n           s \\<in> cball x e \\<Longrightarrow>\n           Ds (flow0 s (u s)) o\\<^sub>L flowderiv s (u s) o\\<^sub>L\n           embed2_blinfun\n           \\<in> invertibles_blinfun;\n        \\<And>U v sa.\n           \\<lbrakk>\\<And>sa.\n                       sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n            u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n            U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa;\n        sa \\<in> cball x (?e12 u e)\\<rbrakk>\n       \\<Longrightarrow> s (flow0 sa (?u12 u e sa)) = 0\n 4. \\<And>u e.\n       \\<lbrakk>\\<And>u e.\n                   \\<lbrakk>s (flow0 x (u x)) = 0;\n                    u x = return_time {x \\<in> S. s x = 0} x;\n                    \\<And>sa.\n                       sa \\<in> cball x e \\<Longrightarrow>\n                       s (flow0 sa (u sa)) = 0;\n                    continuous_on (cball x e) u;\n                    (\\<lambda>t. (t, u t)) ` cball x e\n                    \\<subseteq> Sigma Y existence_ivl0;\n                    0 < e;\n                    (u has_derivative\n                     blinfun_apply\n                      (- blinfun_scaleR_left\n                          (inverse\n                            (blinfun_apply\n                              (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                              (f (poincare_map {x \\<in> S. s x = 0}\n                                   x)))) o\\<^sub>L\n                       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n                        flowderiv x\n                         (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n                       embed1_blinfun))\n                     (at x);\n                    \\<And>s.\n                       s \\<in> cball x e \\<Longrightarrow>\n                       Ds (flow0 s (u s)) o\\<^sub>L\n                       flowderiv s (u s) o\\<^sub>L\n                       embed2_blinfun\n                       \\<in> invertibles_blinfun;\n                    \\<And>U v sa.\n                       \\<lbrakk>\\<And>sa.\n                                   sa \\<in> U \\<Longrightarrow>\n                                   s (flow0 sa (v sa)) = 0;\n                        u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n                        U \\<subseteq> cball x e; connected U;\n                        open U\\<rbrakk>\n                       \\<Longrightarrow> u sa = v sa\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        s (flow0 x (u x)) = 0; u x = return_time {x \\<in> S. s x = 0} x;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow> s (flow0 sa (u sa)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma Y existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                  (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n           (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n            flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        \\<And>s.\n           s \\<in> cball x e \\<Longrightarrow>\n           Ds (flow0 s (u s)) o\\<^sub>L flowderiv s (u s) o\\<^sub>L\n           embed2_blinfun\n           \\<in> invertibles_blinfun;\n        \\<And>U v sa.\n           \\<lbrakk>\\<And>sa.\n                       sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n            u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n            U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa\\<rbrakk>\n       \\<Longrightarrow> continuous_on (cball x (?e12 u e)) (?u12 u e)\n 5. \\<And>u e.\n       \\<lbrakk>\\<And>u e.\n                   \\<lbrakk>s (flow0 x (u x)) = 0;\n                    u x = return_time {x \\<in> S. s x = 0} x;\n                    \\<And>sa.\n                       sa \\<in> cball x e \\<Longrightarrow>\n                       s (flow0 sa (u sa)) = 0;\n                    continuous_on (cball x e) u;\n                    (\\<lambda>t. (t, u t)) ` cball x e\n                    \\<subseteq> Sigma Y existence_ivl0;\n                    0 < e;\n                    (u has_derivative\n                     blinfun_apply\n                      (- blinfun_scaleR_left\n                          (inverse\n                            (blinfun_apply\n                              (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                              (f (poincare_map {x \\<in> S. s x = 0}\n                                   x)))) o\\<^sub>L\n                       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n                        flowderiv x\n                         (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n                       embed1_blinfun))\n                     (at x);\n                    \\<And>s.\n                       s \\<in> cball x e \\<Longrightarrow>\n                       Ds (flow0 s (u s)) o\\<^sub>L\n                       flowderiv s (u s) o\\<^sub>L\n                       embed2_blinfun\n                       \\<in> invertibles_blinfun;\n                    \\<And>U v sa.\n                       \\<lbrakk>\\<And>sa.\n                                   sa \\<in> U \\<Longrightarrow>\n                                   s (flow0 sa (v sa)) = 0;\n                        u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n                        U \\<subseteq> cball x e; connected U;\n                        open U\\<rbrakk>\n                       \\<Longrightarrow> u sa = v sa\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        s (flow0 x (u x)) = 0; u x = return_time {x \\<in> S. s x = 0} x;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow> s (flow0 sa (u sa)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma Y existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                  (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n           (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n            flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        \\<And>s.\n           s \\<in> cball x e \\<Longrightarrow>\n           Ds (flow0 s (u s)) o\\<^sub>L flowderiv s (u s) o\\<^sub>L\n           embed2_blinfun\n           \\<in> invertibles_blinfun;\n        \\<And>U v sa.\n           \\<lbrakk>\\<And>sa.\n                       sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n            u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n            U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t. (t, ?u12 u e t)) ` cball x (?e12 u e)\n                         \\<subseteq> Sigma Y existence_ivl0\n 6. \\<And>u e.\n       \\<lbrakk>\\<And>u e.\n                   \\<lbrakk>s (flow0 x (u x)) = 0;\n                    u x = return_time {x \\<in> S. s x = 0} x;\n                    \\<And>sa.\n                       sa \\<in> cball x e \\<Longrightarrow>\n                       s (flow0 sa (u sa)) = 0;\n                    continuous_on (cball x e) u;\n                    (\\<lambda>t. (t, u t)) ` cball x e\n                    \\<subseteq> Sigma Y existence_ivl0;\n                    0 < e;\n                    (u has_derivative\n                     blinfun_apply\n                      (- blinfun_scaleR_left\n                          (inverse\n                            (blinfun_apply\n                              (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                              (f (poincare_map {x \\<in> S. s x = 0}\n                                   x)))) o\\<^sub>L\n                       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n                        flowderiv x\n                         (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n                       embed1_blinfun))\n                     (at x);\n                    \\<And>s.\n                       s \\<in> cball x e \\<Longrightarrow>\n                       Ds (flow0 s (u s)) o\\<^sub>L\n                       flowderiv s (u s) o\\<^sub>L\n                       embed2_blinfun\n                       \\<in> invertibles_blinfun;\n                    \\<And>U v sa.\n                       \\<lbrakk>\\<And>sa.\n                                   sa \\<in> U \\<Longrightarrow>\n                                   s (flow0 sa (v sa)) = 0;\n                        u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n                        U \\<subseteq> cball x e; connected U;\n                        open U\\<rbrakk>\n                       \\<Longrightarrow> u sa = v sa\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        s (flow0 x (u x)) = 0; u x = return_time {x \\<in> S. s x = 0} x;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow> s (flow0 sa (u sa)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma Y existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                  (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n           (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n            flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        \\<And>s.\n           s \\<in> cball x e \\<Longrightarrow>\n           Ds (flow0 s (u s)) o\\<^sub>L flowderiv s (u s) o\\<^sub>L\n           embed2_blinfun\n           \\<in> invertibles_blinfun;\n        \\<And>U v sa.\n           \\<lbrakk>\\<And>sa.\n                       sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n            u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n            U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa\\<rbrakk>\n       \\<Longrightarrow> 0 < ?e12 u e\n 7. \\<And>u e.\n       \\<lbrakk>\\<And>u e.\n                   \\<lbrakk>s (flow0 x (u x)) = 0;\n                    u x = return_time {x \\<in> S. s x = 0} x;\n                    \\<And>sa.\n                       sa \\<in> cball x e \\<Longrightarrow>\n                       s (flow0 sa (u sa)) = 0;\n                    continuous_on (cball x e) u;\n                    (\\<lambda>t. (t, u t)) ` cball x e\n                    \\<subseteq> Sigma Y existence_ivl0;\n                    0 < e;\n                    (u has_derivative\n                     blinfun_apply\n                      (- blinfun_scaleR_left\n                          (inverse\n                            (blinfun_apply\n                              (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                              (f (poincare_map {x \\<in> S. s x = 0}\n                                   x)))) o\\<^sub>L\n                       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n                        flowderiv x\n                         (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n                       embed1_blinfun))\n                     (at x);\n                    \\<And>s.\n                       s \\<in> cball x e \\<Longrightarrow>\n                       Ds (flow0 s (u s)) o\\<^sub>L\n                       flowderiv s (u s) o\\<^sub>L\n                       embed2_blinfun\n                       \\<in> invertibles_blinfun;\n                    \\<And>U v sa.\n                       \\<lbrakk>\\<And>sa.\n                                   sa \\<in> U \\<Longrightarrow>\n                                   s (flow0 sa (v sa)) = 0;\n                        u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n                        U \\<subseteq> cball x e; connected U;\n                        open U\\<rbrakk>\n                       \\<Longrightarrow> u sa = v sa\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        s (flow0 x (u x)) = 0; u x = return_time {x \\<in> S. s x = 0} x;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow> s (flow0 sa (u sa)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma Y existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                  (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n           (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n            flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        \\<And>s.\n           s \\<in> cball x e \\<Longrightarrow>\n           Ds (flow0 s (u s)) o\\<^sub>L flowderiv s (u s) o\\<^sub>L\n           embed2_blinfun\n           \\<in> invertibles_blinfun;\n        \\<And>U v sa.\n           \\<lbrakk>\\<And>sa.\n                       sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n            u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n            U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa\\<rbrakk>\n       \\<Longrightarrow> (?u12 u e has_derivative\n                          blinfun_apply\n                           (- blinfun_scaleR_left\n                               (inverse\n                                 (blinfun_apply\n                                   (Ds (poincare_map {x \\<in> S. s x = 0}\n   x))\n                                   (f (poincare_map {x \\<in> S. s x = 0}\n  x)))) o\\<^sub>L\n                            (Ds (poincare_map {x \\<in> S. s x = 0}\n                                  x) o\\<^sub>L\n                             flowderiv x\n                              (return_time {x \\<in> S. s x = 0}\n                                x)) o\\<^sub>L\n                            embed1_blinfun))\n                          (at x)\n 8. \\<And>u e sa.\n       \\<lbrakk>\\<And>u e.\n                   \\<lbrakk>s (flow0 x (u x)) = 0;\n                    u x = return_time {x \\<in> S. s x = 0} x;\n                    \\<And>sa.\n                       sa \\<in> cball x e \\<Longrightarrow>\n                       s (flow0 sa (u sa)) = 0;\n                    continuous_on (cball x e) u;\n                    (\\<lambda>t. (t, u t)) ` cball x e\n                    \\<subseteq> Sigma Y existence_ivl0;\n                    0 < e;\n                    (u has_derivative\n                     blinfun_apply\n                      (- blinfun_scaleR_left\n                          (inverse\n                            (blinfun_apply\n                              (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                              (f (poincare_map {x \\<in> S. s x = 0}\n                                   x)))) o\\<^sub>L\n                       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n                        flowderiv x\n                         (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n                       embed1_blinfun))\n                     (at x);\n                    \\<And>s.\n                       s \\<in> cball x e \\<Longrightarrow>\n                       Ds (flow0 s (u s)) o\\<^sub>L\n                       flowderiv s (u s) o\\<^sub>L\n                       embed2_blinfun\n                       \\<in> invertibles_blinfun;\n                    \\<And>U v sa.\n                       \\<lbrakk>\\<And>sa.\n                                   sa \\<in> U \\<Longrightarrow>\n                                   s (flow0 sa (v sa)) = 0;\n                        u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n                        U \\<subseteq> cball x e; connected U;\n                        open U\\<rbrakk>\n                       \\<Longrightarrow> u sa = v sa\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        s (flow0 x (u x)) = 0; u x = return_time {x \\<in> S. s x = 0} x;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow> s (flow0 sa (u sa)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma Y existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                  (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n           (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n            flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        \\<And>s.\n           s \\<in> cball x e \\<Longrightarrow>\n           Ds (flow0 s (u s)) o\\<^sub>L flowderiv s (u s) o\\<^sub>L\n           embed2_blinfun\n           \\<in> invertibles_blinfun;\n        \\<And>U v sa.\n           \\<lbrakk>\\<And>sa.\n                       sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n            u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n            U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa;\n        sa \\<in> cball x (?e12 u e)\\<rbrakk>\n       \\<Longrightarrow> Ds (flow0 sa (?u12 u e sa)) o\\<^sub>L\n                         flowderiv sa (?u12 u e sa) o\\<^sub>L\n                         embed2_blinfun\n                         \\<in> invertibles_blinfun\n 9. \\<And>u e U v sa.\n       \\<lbrakk>\\<And>u e.\n                   \\<lbrakk>s (flow0 x (u x)) = 0;\n                    u x = return_time {x \\<in> S. s x = 0} x;\n                    \\<And>sa.\n                       sa \\<in> cball x e \\<Longrightarrow>\n                       s (flow0 sa (u sa)) = 0;\n                    continuous_on (cball x e) u;\n                    (\\<lambda>t. (t, u t)) ` cball x e\n                    \\<subseteq> Sigma Y existence_ivl0;\n                    0 < e;\n                    (u has_derivative\n                     blinfun_apply\n                      (- blinfun_scaleR_left\n                          (inverse\n                            (blinfun_apply\n                              (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                              (f (poincare_map {x \\<in> S. s x = 0}\n                                   x)))) o\\<^sub>L\n                       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n                        flowderiv x\n                         (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n                       embed1_blinfun))\n                     (at x);\n                    \\<And>s.\n                       s \\<in> cball x e \\<Longrightarrow>\n                       Ds (flow0 s (u s)) o\\<^sub>L\n                       flowderiv s (u s) o\\<^sub>L\n                       embed2_blinfun\n                       \\<in> invertibles_blinfun;\n                    \\<And>U v sa.\n                       \\<lbrakk>\\<And>sa.\n                                   sa \\<in> U \\<Longrightarrow>\n                                   s (flow0 sa (v sa)) = 0;\n                        u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n                        U \\<subseteq> cball x e; connected U;\n                        open U\\<rbrakk>\n                       \\<Longrightarrow> u sa = v sa\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        s (flow0 x (u x)) = 0; u x = return_time {x \\<in> S. s x = 0} x;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow> s (flow0 sa (u sa)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma Y existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                  (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n           (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n            flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        \\<And>s.\n           s \\<in> cball x e \\<Longrightarrow>\n           Ds (flow0 s (u s)) o\\<^sub>L flowderiv s (u s) o\\<^sub>L\n           embed2_blinfun\n           \\<in> invertibles_blinfun;\n        \\<And>U v sa.\n           \\<lbrakk>\\<And>sa.\n                       sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n            u x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n            U \\<subseteq> cball x e; connected U; open U\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa;\n        \\<And>sa. sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n        ?u12 u e x = v x; continuous_on U v; sa \\<in> U; x \\<in> U;\n        U \\<subseteq> cball x (?e12 u e); connected U; open U\\<rbrakk>\n       \\<Longrightarrow> ?u12 u e sa = v sa", "by (assumption+, blast)"], ["proof (state)\nthis:\n  s (flow0 x (u x)) = 0\n  u x = return_time {x \\<in> S. s x = 0} x\n  ?sa1 \\<in> cball x e \\<Longrightarrow> s (flow0 ?sa1 (u ?sa1)) = 0\n  continuous_on (cball x e) u\n  (\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> Sigma Y existence_ivl0\n  0 < e\n  (u has_derivative\n   blinfun_apply\n    (- blinfun_scaleR_left\n        (inverse\n          (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n            (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n     (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n      flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n     embed1_blinfun))\n   (at x)\n  ?s1 \\<in> cball x e \\<Longrightarrow>\n  Ds (flow0 ?s1 (u ?s1)) o\\<^sub>L flowderiv ?s1 (u ?s1) o\\<^sub>L\n  embed2_blinfun\n  \\<in> invertibles_blinfun\n  \\<lbrakk>\\<And>sa.\n              sa \\<in> ?U1 \\<Longrightarrow> s (flow0 sa (?v1 sa)) = 0;\n   u x = ?v1 x; continuous_on ?U1 ?v1; ?sa1 \\<in> ?U1; x \\<in> ?U1;\n   ?U1 \\<subseteq> cball x e; connected ?U1; open ?U1\\<rbrakk>\n  \\<Longrightarrow> u ?sa1 = ?v1 ?sa1\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have u_rt: \"u y = return_time ?P y\" if \"y \\<in> ball x e \\<inter> Y\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. u y = return_time {x \\<in> S. s x = 0} y", "apply (rule unique[of \"ball x e \\<inter> Y\" \"return_time ?P\"])"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>sa.\n       sa \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n       s (flow0 sa (return_time {x \\<in> S. s x = 0} sa)) = 0\n 2. u x = return_time {x \\<in> S. s x = 0} x\n 3. continuous_on (ball x e \\<inter> Y) (return_time {x \\<in> S. s x = 0})\n 4. y \\<in> ball x e \\<inter> Y\n 5. x \\<in> ball x e \\<inter> Y\n 6. ball x e \\<inter> Y \\<subseteq> cball x e\n 7. connected (ball x e \\<inter> Y)\n 8. open (ball x e \\<inter> Y)", "subgoal for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n    s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0", "unfolding poincare_map_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n    s (poincare_map {x \\<in> S. s x = 0} y) = 0", "using poincare_map_returns[OF Yr cls]"], ["proof (prove)\nusing this:\n  ?x \\<in> Y \\<Longrightarrow>\n  poincare_map {x \\<in> S. s x = 0} ?x \\<in> {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. y \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n    s (poincare_map {x \\<in> S. s x = 0} y) = 0", "by auto"], ["proof (prove)\ngoal (7 subgoals):\n 1. u x = return_time {x \\<in> S. s x = 0} x\n 2. continuous_on (ball x e \\<inter> Y) (return_time {x \\<in> S. s x = 0})\n 3. y \\<in> ball x e \\<inter> Y\n 4. x \\<in> ball x e \\<inter> Y\n 5. ball x e \\<inter> Y \\<subseteq> cball x e\n 6. connected (ball x e \\<inter> Y)\n 7. open (ball x e \\<inter> Y)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. u x = return_time {x \\<in> S. s x = 0} x", "by (auto simp: u)"], ["proof (prove)\ngoal (6 subgoals):\n 1. continuous_on (ball x e \\<inter> Y) (return_time {x \\<in> S. s x = 0})\n 2. y \\<in> ball x e \\<inter> Y\n 3. x \\<in> ball x e \\<inter> Y\n 4. ball x e \\<inter> Y \\<subseteq> cball x e\n 5. connected (ball x e \\<inter> Y)\n 6. open (ball x e \\<inter> Y)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on (ball x e \\<inter> Y) (return_time {x \\<in> S. s x = 0})", "using cY"], ["proof (prove)\nusing this:\n  continuous_on Y (return_time {x \\<in> S. s x = 0})\n\ngoal (1 subgoal):\n 1. continuous_on (ball x e \\<inter> Y) (return_time {x \\<in> S. s x = 0})", "by (rule continuous_on_subset) auto"], ["proof (prove)\ngoal (5 subgoals):\n 1. y \\<in> ball x e \\<inter> Y\n 2. x \\<in> ball x e \\<inter> Y\n 3. ball x e \\<inter> Y \\<subseteq> cball x e\n 4. connected (ball x e \\<inter> Y)\n 5. open (ball x e \\<inter> Y)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> ball x e \\<inter> Y", "using that"], ["proof (prove)\nusing this:\n  y \\<in> ball x e \\<inter> Y\n\ngoal (1 subgoal):\n 1. y \\<in> ball x e \\<inter> Y", "by auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. x \\<in> ball x e \\<inter> Y\n 2. ball x e \\<inter> Y \\<subseteq> cball x e\n 3. connected (ball x e \\<inter> Y)\n 4. open (ball x e \\<inter> Y)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> ball x e \\<inter> Y", "using x \\<open>0 < e\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> Y\n  0 < e\n\ngoal (1 subgoal):\n 1. x \\<in> ball x e \\<inter> Y", "by auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. ball x e \\<inter> Y \\<subseteq> cball x e\n 2. connected (ball x e \\<inter> Y)\n 3. open (ball x e \\<inter> Y)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. ball x e \\<inter> Y \\<subseteq> cball x e", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. connected (ball x e \\<inter> Y)\n 2. open (ball x e \\<inter> Y)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. connected (ball x e \\<inter> Y)", "apply (rule convex_connected)"], ["proof (prove)\ngoal (1 subgoal):\n 1. convex (ball x e \\<inter> Y)", "apply (rule convex_Int)"], ["proof (prove)\ngoal (2 subgoals):\n 1. convex (ball x e)\n 2. convex Y", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. convex Y", "apply fact"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. open (ball x e \\<inter> Y)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. open (ball x e \\<inter> Y)", "by (auto intro!: open_Int \\<open>open Y\\<close>)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ?y1 \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n  u ?y1 = return_time {x \\<in> S. s x = 0} ?y1\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have *: \"(- blinfun_scaleR_left\n                 (inverse (blinfun_apply (Ds (poincare_map ?P x)) (f (poincare_map ?P x)))) o\\<^sub>L\n              (Ds (poincare_map ?P x) o\\<^sub>L flowderiv x (return_time ?P x)) o\\<^sub>L\n              embed1_blinfun) =\n    - blinfun_scaleR_left (inverse (blinfun_apply (Ds (poincare_map ?P x)) (f (poincare_map ?P x)))) o\\<^sub>L\n              (Ds (poincare_map ?P x) o\\<^sub>L Dflow x (return_time ?P x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - blinfun_scaleR_left\n       (inverse\n         (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n           (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n    (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n     flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n    embed1_blinfun =\n    - blinfun_scaleR_left\n       (inverse\n         (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n           (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n    (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n     Dflow x (return_time {x \\<in> S. s x = 0} x))", "by (auto intro!: blinfun_eqI simp: flowderiv_def)"], ["proof (state)\nthis:\n  - blinfun_scaleR_left\n     (inverse\n       (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n         (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n  (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n   flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n  embed1_blinfun =\n  - blinfun_scaleR_left\n     (inverse\n       (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n         (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n  (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n   Dflow x (return_time {x \\<in> S. s x = 0} x))\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define e' where \"e' = min e eY\""], ["proof (state)\nthis:\n  e' = min e eY\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have e'_eq: \"ball x e' = ball x e \\<inter> Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ball x e' = ball x e \\<inter> Y", "by (auto simp: e'_def Y_def)"], ["proof (state)\nthis:\n  ball x e' = ball x e \\<inter> Y\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have\n    \"0 < e'\"\n    \"\\<And>y. y \\<in> ball x e' \\<Longrightarrow> returns_to ?P y\"\n    \"\\<And>y. y \\<in> ball x e' \\<Longrightarrow> s (flow0 y (return_time ?P y)) = 0\"\n    \"continuous_on (ball x e') (return_time ?P)\"\n    \"(\\<And>y. y \\<in> ball x e' \\<Longrightarrow> Ds (poincare_map ?P y) o\\<^sub>L flowderiv y (return_time ?P y) o\\<^sub>L embed2_blinfun \\<in> invertibles_blinfun)\"\n    \"(\\<And>U v sa.\n       (\\<And>sa. sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0) \\<Longrightarrow>\n       return_time ?P x = v x \\<Longrightarrow>\n       continuous_on U v \\<Longrightarrow> sa \\<in> U \\<Longrightarrow> x \\<in> U \\<Longrightarrow> U \\<subseteq> ball x e' \\<Longrightarrow> connected U \\<Longrightarrow> open U \\<Longrightarrow> return_time ?P sa = v sa)\"\n    \"(return_time ?P has_derivative blinfun_apply\n             (- blinfun_scaleR_left\n                 (inverse (blinfun_apply (Ds (poincare_map ?P x)) (f (poincare_map ?P x)))) o\\<^sub>L\n              (Ds (poincare_map ?P x) o\\<^sub>L flowderiv x (return_time ?P x)) o\\<^sub>L\n              embed1_blinfun))\n            (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < e' &&&\n     (\\<And>y.\n         y \\<in> ball x e' \\<Longrightarrow>\n         returns_to {x \\<in> S. s x = 0} y) &&&\n     (\\<And>y.\n         y \\<in> ball x e' \\<Longrightarrow>\n         s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0)) &&&\n    (continuous_on (ball x e') (return_time {x \\<in> S. s x = 0}) &&&\n     (\\<And>y.\n         y \\<in> ball x e' \\<Longrightarrow>\n         Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n         flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n         embed2_blinfun\n         \\<in> invertibles_blinfun)) &&&\n    (\\<And>U v sa.\n        \\<lbrakk>\\<And>sa.\n                    sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n         return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n         sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n         open U\\<rbrakk>\n        \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa) &&&\n    (return_time {x \\<in> S. s x = 0} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n              (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n        flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n       embed1_blinfun))\n     (at x)", "unfolding e'_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < e' &&&\n     (\\<And>y.\n         y \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n         returns_to {x \\<in> S. s x = 0} y) &&&\n     (\\<And>y.\n         y \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n         s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0)) &&&\n    (continuous_on (ball x e \\<inter> Y)\n      (return_time {x \\<in> S. s x = 0}) &&&\n     (\\<And>y.\n         y \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n         Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n         flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n         embed2_blinfun\n         \\<in> invertibles_blinfun)) &&&\n    (\\<And>U v sa.\n        \\<lbrakk>\\<And>sa.\n                    sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n         return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n         sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e \\<inter> Y;\n         connected U; open U\\<rbrakk>\n        \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa) &&&\n    (return_time {x \\<in> S. s x = 0} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n              (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n        flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n       embed1_blinfun))\n     (at x)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < e'", "by (auto simp: e'_def \\<open>0 < e\\<close> \\<open>0 < eY\\<close>)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y.\n       y \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n       returns_to {x \\<in> S. s x = 0} y\n 2. \\<And>y.\n       y \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n       s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0\n 3. continuous_on (ball x e \\<inter> Y) (return_time {x \\<in> S. s x = 0})\n 4. \\<And>y.\n       y \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n       Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n       flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n       embed2_blinfun\n       \\<in> invertibles_blinfun\n 5. \\<And>U v sa.\n       \\<lbrakk>\\<And>sa.\n                   sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n        return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n        sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e \\<inter> Y;\n        connected U; open U\\<rbrakk>\n       \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa\n 6. (return_time {x \\<in> S. s x = 0} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n              (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n        flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n       embed1_blinfun))\n     (at x)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. y_ \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n    returns_to {x \\<in> S. s x = 0} y_", "by (rule Yr) auto"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>y.\n       y \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n       s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0\n 2. continuous_on (ball x e \\<inter> Y) (return_time {x \\<in> S. s x = 0})\n 3. \\<And>y.\n       y \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n       Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n       flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n       embed2_blinfun\n       \\<in> invertibles_blinfun\n 4. \\<And>U v sa.\n       \\<lbrakk>\\<And>sa.\n                   sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n        return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n        sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e \\<inter> Y;\n        connected U; open U\\<rbrakk>\n       \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa\n 5. (return_time {x \\<in> S. s x = 0} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n              (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n        flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n       embed1_blinfun))\n     (at x)", "subgoal for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n    s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0", "unfolding poincare_map_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n    s (poincare_map {x \\<in> S. s x = 0} y) = 0", "using poincare_map_returns[OF Yr cls]"], ["proof (prove)\nusing this:\n  ?x \\<in> Y \\<Longrightarrow>\n  poincare_map {x \\<in> S. s x = 0} ?x \\<in> {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. y \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n    s (poincare_map {x \\<in> S. s x = 0} y) = 0", "by auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. continuous_on (ball x e \\<inter> Y) (return_time {x \\<in> S. s x = 0})\n 2. \\<And>y.\n       y \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n       Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n       flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n       embed2_blinfun\n       \\<in> invertibles_blinfun\n 3. \\<And>U v sa.\n       \\<lbrakk>\\<And>sa.\n                   sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n        return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n        sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e \\<inter> Y;\n        connected U; open U\\<rbrakk>\n       \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa\n 4. (return_time {x \\<in> S. s x = 0} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n              (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n        flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n       embed1_blinfun))\n     (at x)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on (ball x e \\<inter> Y) (return_time {x \\<in> S. s x = 0})", "using cY"], ["proof (prove)\nusing this:\n  continuous_on Y (return_time {x \\<in> S. s x = 0})\n\ngoal (1 subgoal):\n 1. continuous_on (ball x e \\<inter> Y) (return_time {x \\<in> S. s x = 0})", "by (rule continuous_on_subset) auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       y \\<in> ball x e \\<inter> Y \\<Longrightarrow>\n       Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n       flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n       embed2_blinfun\n       \\<in> invertibles_blinfun\n 2. \\<And>U v sa.\n       \\<lbrakk>\\<And>sa.\n                   sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n        return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n        sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e \\<inter> Y;\n        connected U; open U\\<rbrakk>\n       \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa\n 3. (return_time {x \\<in> S. s x = 0} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n              (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n        flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n       embed1_blinfun))\n     (at x)", "subgoal premises prems for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n    flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n    embed2_blinfun\n    \\<in> invertibles_blinfun", "unfolding poincare_map_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ds (flow0 y (return_time {x \\<in> S. s x = 0} y)) o\\<^sub>L\n    flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n    embed2_blinfun\n    \\<in> invertibles_blinfun", "unfolding u_rt[OF prems, symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ds (flow0 y (u y)) o\\<^sub>L flowderiv y (u y) o\\<^sub>L embed2_blinfun\n    \\<in> invertibles_blinfun", "apply (rule u)"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> cball x e", "using prems"], ["proof (prove)\nusing this:\n  y \\<in> ball x e \\<inter> Y\n\ngoal (1 subgoal):\n 1. y \\<in> cball x e", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U v sa.\n       \\<lbrakk>\\<And>sa.\n                   sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n        return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n        sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e \\<inter> Y;\n        connected U; open U\\<rbrakk>\n       \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa\n 2. (return_time {x \\<in> S. s x = 0} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n              (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n        flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n       embed1_blinfun))\n     (at x)", "subgoal premises prems for U v t"], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time {x \\<in> S. s x = 0} t = v t", "apply (subst u_rt[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. t \\<in> ball x e \\<inter> Y\n 2. u t = v t", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> ball x e \\<inter> Y", "using prems"], ["proof (prove)\nusing this:\n  ?sa1 \\<in> U \\<Longrightarrow> s (flow0 ?sa1 (v ?sa1)) = 0\n  return_time {x \\<in> S. s x = 0} x = v x\n  continuous_on U v\n  t \\<in> U\n  x \\<in> U\n  U \\<subseteq> ball x e \\<inter> Y\n  connected U\n  open U\n\ngoal (1 subgoal):\n 1. t \\<in> ball x e \\<inter> Y", "by force"], ["proof (prove)\ngoal (1 subgoal):\n 1. u t = v t", "apply (rule unique[of U v])"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>sa. sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0\n 2. u x = v x\n 3. continuous_on U v\n 4. t \\<in> U\n 5. x \\<in> U\n 6. U \\<subseteq> cball x e\n 7. connected U\n 8. open U", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. sa_ \\<in> U \\<Longrightarrow> s (flow0 sa_ (v sa_)) = 0", "by fact"], ["proof (prove)\ngoal (7 subgoals):\n 1. u x = v x\n 2. continuous_on U v\n 3. t \\<in> U\n 4. x \\<in> U\n 5. U \\<subseteq> cball x e\n 6. connected U\n 7. open U", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. u x = v x", "by (auto simp: u prems)"], ["proof (prove)\ngoal (6 subgoals):\n 1. continuous_on U v\n 2. t \\<in> U\n 3. x \\<in> U\n 4. U \\<subseteq> cball x e\n 5. connected U\n 6. open U", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on U v", "by fact"], ["proof (prove)\ngoal (5 subgoals):\n 1. t \\<in> U\n 2. x \\<in> U\n 3. U \\<subseteq> cball x e\n 4. connected U\n 5. open U", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> U", "by fact"], ["proof (prove)\ngoal (4 subgoals):\n 1. x \\<in> U\n 2. U \\<subseteq> cball x e\n 3. connected U\n 4. open U", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> U", "by fact"], ["proof (prove)\ngoal (3 subgoals):\n 1. U \\<subseteq> cball x e\n 2. connected U\n 3. open U", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<subseteq> cball x e", "using prems"], ["proof (prove)\nusing this:\n  ?sa1 \\<in> U \\<Longrightarrow> s (flow0 ?sa1 (v ?sa1)) = 0\n  return_time {x \\<in> S. s x = 0} x = v x\n  continuous_on U v\n  t \\<in> U\n  x \\<in> U\n  U \\<subseteq> ball x e \\<inter> Y\n  connected U\n  open U\n\ngoal (1 subgoal):\n 1. U \\<subseteq> cball x e", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. connected U\n 2. open U", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. connected U", "by fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. open U", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. open U", "by fact"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. s x = 0} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n              (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n        flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n       embed1_blinfun))\n     (at x)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. s x = 0} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n              (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n        flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n       embed1_blinfun))\n     (at x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. s x = 0} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n              (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n        flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n       embed1_blinfun))\n     (at x)", "have \"\\<forall>\\<^sub>F x' in at x. x' \\<in> ball x e'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x' in at x. x' \\<in> ball x e'", "using eventually_at_ball[OF \\<open>0 < e'\\<close>]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at ?z within ?A.\n     t \\<in> ball ?z e' \\<and> t \\<in> ?A\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x' in at x. x' \\<in> ball x e'", "by eventually_elim simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x' in at x. x' \\<in> ball x e'\n\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. s x = 0} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n              (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n        flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n       embed1_blinfun))\n     (at x)", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x' in at x. x' \\<in> ball x e'", "have \"\\<forall>\\<^sub>F x' in at x. u x' = return_time ?P x'\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x' in at x. x' \\<in> ball x e'\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x' in at x. u x' = return_time {x \\<in> S. s x = 0} x'", "unfolding e'_eq"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x' in at x. x' \\<in> ball x e \\<inter> Y\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x' in at x. u x' = return_time {x \\<in> S. s x = 0} x'", "by eventually_elim (rule u_rt, auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x' in at x. u x' = return_time {x \\<in> S. s x = 0} x'\n\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. s x = 0} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n              (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n        flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n       embed1_blinfun))\n     (at x)", "from u(7) this"], ["proof (chain)\npicking this:\n  (u has_derivative\n   blinfun_apply\n    (- blinfun_scaleR_left\n        (inverse\n          (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n            (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n     (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n      flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n     embed1_blinfun))\n   (at x)\n  \\<forall>\\<^sub>F x' in at x. u x' = return_time {x \\<in> S. s x = 0} x'", "show ?thesis"], ["proof (prove)\nusing this:\n  (u has_derivative\n   blinfun_apply\n    (- blinfun_scaleR_left\n        (inverse\n          (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n            (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n     (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n      flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n     embed1_blinfun))\n   (at x)\n  \\<forall>\\<^sub>F x' in at x. u x' = return_time {x \\<in> S. s x = 0} x'\n\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. s x = 0} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n              (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n        flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n       embed1_blinfun))\n     (at x)", "by (rule has_derivative_transform_eventually) (auto simp: u)"], ["proof (state)\nthis:\n  (return_time {x \\<in> S. s x = 0} has_derivative\n   blinfun_apply\n    (- blinfun_scaleR_left\n        (inverse\n          (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n            (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n     (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n      flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n     embed1_blinfun))\n   (at x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  0 < e'\n  ?y1 \\<in> ball x e' \\<Longrightarrow> returns_to {x \\<in> S. s x = 0} ?y1\n  ?y1 \\<in> ball x e' \\<Longrightarrow>\n  s (flow0 ?y1 (return_time {x \\<in> S. s x = 0} ?y1)) = 0\n  continuous_on (ball x e') (return_time {x \\<in> S. s x = 0})\n  ?y1 \\<in> ball x e' \\<Longrightarrow>\n  Ds (poincare_map {x \\<in> S. s x = 0} ?y1) o\\<^sub>L\n  flowderiv ?y1 (return_time {x \\<in> S. s x = 0} ?y1) o\\<^sub>L\n  embed2_blinfun\n  \\<in> invertibles_blinfun\n  \\<lbrakk>\\<And>sa.\n              sa \\<in> ?U1 \\<Longrightarrow> s (flow0 sa (?v1 sa)) = 0;\n   return_time {x \\<in> S. s x = 0} x = ?v1 x; continuous_on ?U1 ?v1;\n   ?sa1 \\<in> ?U1; x \\<in> ?U1; ?U1 \\<subseteq> ball x e'; connected ?U1;\n   open ?U1\\<rbrakk>\n  \\<Longrightarrow> return_time {x \\<in> S. s x = 0} ?sa1 = ?v1 ?sa1\n  (return_time {x \\<in> S. s x = 0} has_derivative\n   blinfun_apply\n    (- blinfun_scaleR_left\n        (inverse\n          (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n            (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n     (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n      flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n     embed1_blinfun))\n   (at x)\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lbrakk>0 < e';\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            returns_to {x \\<in> S. s x = 0} y;\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n         continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n         \\<And>y.\n            y \\<in> ball x e' \\<Longrightarrow>\n            Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n            flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n            embed2_blinfun\n            \\<in> invertibles_blinfun;\n         \\<And>U v sa.\n            \\<lbrakk>\\<And>sa.\n                        sa \\<in> U \\<Longrightarrow>\n                        s (flow0 sa (v sa)) = 0;\n             return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n             sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n             open U\\<rbrakk>\n            \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n         (return_time {x \\<in> S. s x = 0} has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             Dflow x (return_time {x \\<in> S. s x = 0} x))))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  0 < e'\n  ?y1 \\<in> ball x e' \\<Longrightarrow> returns_to {x \\<in> S. s x = 0} ?y1\n  ?y1 \\<in> ball x e' \\<Longrightarrow>\n  s (flow0 ?y1 (return_time {x \\<in> S. s x = 0} ?y1)) = 0\n  continuous_on (ball x e') (return_time {x \\<in> S. s x = 0})\n  ?y1 \\<in> ball x e' \\<Longrightarrow>\n  Ds (poincare_map {x \\<in> S. s x = 0} ?y1) o\\<^sub>L\n  flowderiv ?y1 (return_time {x \\<in> S. s x = 0} ?y1) o\\<^sub>L\n  embed2_blinfun\n  \\<in> invertibles_blinfun\n  \\<lbrakk>\\<And>sa.\n              sa \\<in> ?U1 \\<Longrightarrow> s (flow0 sa (?v1 sa)) = 0;\n   return_time {x \\<in> S. s x = 0} x = ?v1 x; continuous_on ?U1 ?v1;\n   ?sa1 \\<in> ?U1; x \\<in> ?U1; ?U1 \\<subseteq> ball x e'; connected ?U1;\n   open ?U1\\<rbrakk>\n  \\<Longrightarrow> return_time {x \\<in> S. s x = 0} ?sa1 = ?v1 ?sa1\n  (return_time {x \\<in> S. s x = 0} has_derivative\n   blinfun_apply\n    (- blinfun_scaleR_left\n        (inverse\n          (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n            (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n     (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n      flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n     embed1_blinfun))\n   (at x)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < e'\n  ?y1 \\<in> ball x e' \\<Longrightarrow> returns_to {x \\<in> S. s x = 0} ?y1\n  ?y1 \\<in> ball x e' \\<Longrightarrow>\n  s (flow0 ?y1 (return_time {x \\<in> S. s x = 0} ?y1)) = 0\n  continuous_on (ball x e') (return_time {x \\<in> S. s x = 0})\n  ?y1 \\<in> ball x e' \\<Longrightarrow>\n  Ds (poincare_map {x \\<in> S. s x = 0} ?y1) o\\<^sub>L\n  flowderiv ?y1 (return_time {x \\<in> S. s x = 0} ?y1) o\\<^sub>L\n  embed2_blinfun\n  \\<in> invertibles_blinfun\n  \\<lbrakk>\\<And>sa.\n              sa \\<in> ?U1 \\<Longrightarrow> s (flow0 sa (?v1 sa)) = 0;\n   return_time {x \\<in> S. s x = 0} x = ?v1 x; continuous_on ?U1 ?v1;\n   ?sa1 \\<in> ?U1; x \\<in> ?U1; ?U1 \\<subseteq> ball x e'; connected ?U1;\n   open ?U1\\<rbrakk>\n  \\<Longrightarrow> return_time {x \\<in> S. s x = 0} ?sa1 = ?v1 ?sa1\n  (return_time {x \\<in> S. s x = 0} has_derivative\n   blinfun_apply\n    (- blinfun_scaleR_left\n        (inverse\n          (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n            (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n     (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n      flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n     embed1_blinfun))\n   (at x)\n\ngoal (1 subgoal):\n 1. thesis", "unfolding *"], ["proof (prove)\nusing this:\n  0 < e'\n  ?y1 \\<in> ball x e' \\<Longrightarrow> returns_to {x \\<in> S. s x = 0} ?y1\n  ?y1 \\<in> ball x e' \\<Longrightarrow>\n  s (flow0 ?y1 (return_time {x \\<in> S. s x = 0} ?y1)) = 0\n  continuous_on (ball x e') (return_time {x \\<in> S. s x = 0})\n  ?y1 \\<in> ball x e' \\<Longrightarrow>\n  Ds (poincare_map {x \\<in> S. s x = 0} ?y1) o\\<^sub>L\n  flowderiv ?y1 (return_time {x \\<in> S. s x = 0} ?y1) o\\<^sub>L\n  embed2_blinfun\n  \\<in> invertibles_blinfun\n  \\<lbrakk>\\<And>sa.\n              sa \\<in> ?U1 \\<Longrightarrow> s (flow0 sa (?v1 sa)) = 0;\n   return_time {x \\<in> S. s x = 0} x = ?v1 x; continuous_on ?U1 ?v1;\n   ?sa1 \\<in> ?U1; x \\<in> ?U1; ?U1 \\<subseteq> ball x e'; connected ?U1;\n   open ?U1\\<rbrakk>\n  \\<Longrightarrow> return_time {x \\<in> S. s x = 0} ?sa1 = ?v1 ?sa1\n  (return_time {x \\<in> S. s x = 0} has_derivative\n   blinfun_apply\n    (- blinfun_scaleR_left\n        (inverse\n          (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n            (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n     (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n      Dflow x (return_time {x \\<in> S. s x = 0} x))))\n   (at x)\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma return_time_has_derivative:\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes rt: \"returns_to {x \\<in> S. s x = 0} x\" (is \"returns_to ?P _\")\n  assumes cS: \"closed S\"\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n  assumes DsC: \"\\<And>x. isCont Ds x\"\n  assumes Ds_through: \"(Ds (poincare_map ?P x)) (f (poincare_map ?P x)) \\<noteq> 0\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. s x = 0} x). s x = 0 \\<longrightarrow> x \\<in> S\"\n  assumes outside: \"x \\<notin> S \\<or> s x \\<noteq> 0\"\n  shows \"(return_time ?P has_derivative\n  - blinfun_scaleR_left (inverse ((Ds (poincare_map ?P x)) (f (poincare_map ?P x)))) o\\<^sub>L\n      (Ds (poincare_map ?P x) o\\<^sub>L Dflow x (return_time ?P x)))\n            (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. s x = 0} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n              (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n        Dflow x (return_time {x \\<in> S. s x = 0} x))))\n     (at x)", "using return_time_implicit_functionE[OF assms]"], ["proof (prove)\nusing this:\n  (\\<And>e'.\n      \\<lbrakk>0 < e';\n       \\<And>y.\n          y \\<in> ball x e' \\<Longrightarrow>\n          returns_to {x \\<in> S. s x = 0} y;\n       \\<And>y.\n          y \\<in> ball x e' \\<Longrightarrow>\n          s (flow0 y (return_time {x \\<in> S. s x = 0} y)) = 0;\n       continuous_on (ball x e') (return_time {x \\<in> S. s x = 0});\n       \\<And>y.\n          y \\<in> ball x e' \\<Longrightarrow>\n          Ds (poincare_map {x \\<in> S. s x = 0} y) o\\<^sub>L\n          flowderiv y (return_time {x \\<in> S. s x = 0} y) o\\<^sub>L\n          embed2_blinfun\n          \\<in> invertibles_blinfun;\n       \\<And>U v sa.\n          \\<lbrakk>\\<And>sa.\n                      sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n           return_time {x \\<in> S. s x = 0} x = v x; continuous_on U v;\n           sa \\<in> U; x \\<in> U; U \\<subseteq> ball x e'; connected U;\n           open U\\<rbrakk>\n          \\<Longrightarrow> return_time {x \\<in> S. s x = 0} sa = v sa;\n       (return_time {x \\<in> S. s x = 0} has_derivative\n        blinfun_apply\n         (- blinfun_scaleR_left\n             (inverse\n               (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                 (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n          (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n           Dflow x (return_time {x \\<in> S. s x = 0} x))))\n        (at x)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. s x = 0} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n              (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n       (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n        Dflow x (return_time {x \\<in> S. s x = 0} x))))\n     (at x)", "by blast"], ["", "lemma return_time_plane_has_derivative_blinfun:\n  assumes rt: \"returns_to {x \\<in> S. x \\<bullet> i = c} x\" (is \"returns_to ?P _\")\n  assumes cS: \"closed S\"\n  assumes fnz: \"f (poincare_map ?P x) \\<bullet> i \\<noteq> 0\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map ?P x). x \\<bullet> i = c \\<longrightarrow> x \\<in> S\"\n  assumes outside: \"x \\<notin> S \\<or> x \\<bullet> i \\<noteq> c\"\n  shows \"(return_time ?P has_derivative\n    (- blinfun_scaleR_left (inverse ((blinfun_inner_left i) (f (poincare_map ?P x)))) o\\<^sub>L\n      (blinfun_inner_left i o\\<^sub>L Dflow x (return_time ?P x)))) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. x \\<bullet> i = c} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (blinfun_inner_left i)\n              (f (poincare_map {x \\<in> S. x \\<bullet> i = c}\n                   x)))) o\\<^sub>L\n       (blinfun_inner_left i o\\<^sub>L\n        Dflow x (return_time {x \\<in> S. x \\<bullet> i = c} x))))\n     (at x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. x \\<bullet> i = c} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (blinfun_inner_left i)\n              (f (poincare_map {x \\<in> S. x \\<bullet> i = c}\n                   x)))) o\\<^sub>L\n       (blinfun_inner_left i o\\<^sub>L\n        Dflow x (return_time {x \\<in> S. x \\<bullet> i = c} x))))\n     (at x)", "have rt: \"returns_to {x \\<in> S. x \\<bullet> i - c = 0} x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. returns_to {x \\<in> S. x \\<bullet> i - c = 0} x", "using rt"], ["proof (prove)\nusing this:\n  returns_to {x \\<in> S. x \\<bullet> i = c} x\n\ngoal (1 subgoal):\n 1. returns_to {x \\<in> S. x \\<bullet> i - c = 0} x", "by auto"], ["proof (state)\nthis:\n  returns_to {x \\<in> S. x \\<bullet> i - c = 0} x\n\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. x \\<bullet> i = c} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (blinfun_inner_left i)\n              (f (poincare_map {x \\<in> S. x \\<bullet> i = c}\n                   x)))) o\\<^sub>L\n       (blinfun_inner_left i o\\<^sub>L\n        Dflow x (return_time {x \\<in> S. x \\<bullet> i = c} x))))\n     (at x)", "have D: \"((\\<lambda>x. x \\<bullet> i - c) has_derivative blinfun_inner_left i) (at x)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. x \\<bullet> i - c) has_derivative\n     blinfun_apply (blinfun_inner_left i))\n     (at x)", "by (auto intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>x. x \\<bullet> i - c) has_derivative\n   blinfun_apply (blinfun_inner_left i))\n   (at ?x1)\n\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. x \\<bullet> i = c} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (blinfun_inner_left i)\n              (f (poincare_map {x \\<in> S. x \\<bullet> i = c}\n                   x)))) o\\<^sub>L\n       (blinfun_inner_left i o\\<^sub>L\n        Dflow x (return_time {x \\<in> S. x \\<bullet> i = c} x))))\n     (at x)", "have DC: \"(\\<And>x. isCont (\\<lambda>x. blinfun_inner_left i) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. isCont (\\<lambda>x. blinfun_inner_left i) x", "by (auto intro!: continuous_intros)"], ["proof (state)\nthis:\n  isCont (\\<lambda>x. blinfun_inner_left i) ?x1\n\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. x \\<bullet> i = c} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (blinfun_inner_left i)\n              (f (poincare_map {x \\<in> S. x \\<bullet> i = c}\n                   x)))) o\\<^sub>L\n       (blinfun_inner_left i o\\<^sub>L\n        Dflow x (return_time {x \\<in> S. x \\<bullet> i = c} x))))\n     (at x)", "have nz: \"blinfun_apply (blinfun_inner_left i) (f (poincare_map {x \\<in> S. x \\<bullet> i - c = 0} x)) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply (blinfun_inner_left i)\n     (f (poincare_map {x \\<in> S. x \\<bullet> i - c = 0} x)) \\<noteq>\n    0", "using fnz"], ["proof (prove)\nusing this:\n  f (poincare_map {x \\<in> S. x \\<bullet> i = c} x) \\<bullet> i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. blinfun_apply (blinfun_inner_left i)\n     (f (poincare_map {x \\<in> S. x \\<bullet> i - c = 0} x)) \\<noteq>\n    0", "by (auto )"], ["proof (state)\nthis:\n  blinfun_apply (blinfun_inner_left i)\n   (f (poincare_map {x \\<in> S. x \\<bullet> i - c = 0} x)) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. x \\<bullet> i = c} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (blinfun_inner_left i)\n              (f (poincare_map {x \\<in> S. x \\<bullet> i = c}\n                   x)))) o\\<^sub>L\n       (blinfun_inner_left i o\\<^sub>L\n        Dflow x (return_time {x \\<in> S. x \\<bullet> i = c} x))))\n     (at x)", "from cS"], ["proof (chain)\npicking this:\n  closed S", "have cS: \"closed S\""], ["proof (prove)\nusing this:\n  closed S\n\ngoal (1 subgoal):\n 1. closed S", "by auto"], ["proof (state)\nthis:\n  closed S\n\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. x \\<bullet> i = c} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (blinfun_inner_left i)\n              (f (poincare_map {x \\<in> S. x \\<bullet> i = c}\n                   x)))) o\\<^sub>L\n       (blinfun_inner_left i o\\<^sub>L\n        Dflow x (return_time {x \\<in> S. x \\<bullet> i = c} x))))\n     (at x)", "have out: \"x \\<notin> S \\<or> x \\<bullet> i - c \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> S \\<or> x \\<bullet> i - c \\<noteq> 0", "using outside"], ["proof (prove)\nusing this:\n  x \\<notin> S \\<or> x \\<bullet> i \\<noteq> c\n\ngoal (1 subgoal):\n 1. x \\<notin> S \\<or> x \\<bullet> i - c \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  x \\<notin> S \\<or> x \\<bullet> i - c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. x \\<bullet> i = c} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (blinfun_inner_left i)\n              (f (poincare_map {x \\<in> S. x \\<bullet> i = c}\n                   x)))) o\\<^sub>L\n       (blinfun_inner_left i o\\<^sub>L\n        Dflow x (return_time {x \\<in> S. x \\<bullet> i = c} x))))\n     (at x)", "from eventually_inside"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. x \\<bullet> i = c} x).\n     x \\<bullet> i = c \\<longrightarrow> x \\<in> S", "have eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. x \\<bullet> i - c = 0} x). x \\<bullet> i - c = 0 \\<longrightarrow> x \\<in> S\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. x \\<bullet> i = c} x).\n     x \\<bullet> i = c \\<longrightarrow> x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at (poincare_map\n                                {x \\<in> S. x \\<bullet> i - c = 0} x).\n       x \\<bullet> i - c = 0 \\<longrightarrow> x \\<in> S", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at (poincare_map {x \\<in> S. x \\<bullet> i - c = 0}\n                              x).\n     x \\<bullet> i - c = 0 \\<longrightarrow> x \\<in> S\n\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. x \\<bullet> i = c} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (blinfun_inner_left i)\n              (f (poincare_map {x \\<in> S. x \\<bullet> i = c}\n                   x)))) o\\<^sub>L\n       (blinfun_inner_left i o\\<^sub>L\n        Dflow x (return_time {x \\<in> S. x \\<bullet> i = c} x))))\n     (at x)", "from return_time_has_derivative[OF rt cS D DC nz eventually_inside out]"], ["proof (chain)\npicking this:\n  (return_time {x \\<in> S. x \\<bullet> i - c = 0} has_derivative\n   blinfun_apply\n    (- blinfun_scaleR_left\n        (inverse\n          (blinfun_apply (blinfun_inner_left i)\n            (f (poincare_map {x \\<in> S. x \\<bullet> i - c = 0}\n                 x)))) o\\<^sub>L\n     (blinfun_inner_left i o\\<^sub>L\n      Dflow x (return_time {x \\<in> S. x \\<bullet> i - c = 0} x))))\n   (at x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (return_time {x \\<in> S. x \\<bullet> i - c = 0} has_derivative\n   blinfun_apply\n    (- blinfun_scaleR_left\n        (inverse\n          (blinfun_apply (blinfun_inner_left i)\n            (f (poincare_map {x \\<in> S. x \\<bullet> i - c = 0}\n                 x)))) o\\<^sub>L\n     (blinfun_inner_left i o\\<^sub>L\n      Dflow x (return_time {x \\<in> S. x \\<bullet> i - c = 0} x))))\n   (at x)\n\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. x \\<bullet> i = c} has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left\n          (inverse\n            (blinfun_apply (blinfun_inner_left i)\n              (f (poincare_map {x \\<in> S. x \\<bullet> i = c}\n                   x)))) o\\<^sub>L\n       (blinfun_inner_left i o\\<^sub>L\n        Dflow x (return_time {x \\<in> S. x \\<bullet> i = c} x))))\n     (at x)", "by auto"], ["proof (state)\nthis:\n  (return_time {x \\<in> S. x \\<bullet> i = c} has_derivative\n   blinfun_apply\n    (- blinfun_scaleR_left\n        (inverse\n          (blinfun_apply (blinfun_inner_left i)\n            (f (poincare_map {x \\<in> S. x \\<bullet> i = c} x)))) o\\<^sub>L\n     (blinfun_inner_left i o\\<^sub>L\n      Dflow x (return_time {x \\<in> S. x \\<bullet> i = c} x))))\n   (at x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma return_time_plane_has_derivative:\n  assumes rt: \"returns_to {x \\<in> S. x \\<bullet> i = c} x\" (is \"returns_to ?P _\")\n  assumes cS: \"closed S\"\n  assumes fnz: \"f (poincare_map ?P x) \\<bullet> i \\<noteq> 0\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map ?P x). x \\<bullet> i = c \\<longrightarrow> x \\<in> S\"\n  assumes outside: \"x \\<notin> S \\<or> x \\<bullet> i \\<noteq> c\"\n  shows \"(return_time ?P has_derivative\n    (\\<lambda>h. - (Dflow x (return_time ?P x)) h \\<bullet> i / (f (poincare_map ?P x) \\<bullet> i))) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (return_time {x \\<in> S. x \\<bullet> i = c} has_derivative\n     (\\<lambda>h.\n         - blinfun_apply\n            (Dflow x (return_time {x \\<in> S. x \\<bullet> i = c} x))\n            h \\<bullet>\n         i /\n         (f (poincare_map {x \\<in> S. x \\<bullet> i = c} x) \\<bullet> i)))\n     (at x)", "by (rule return_time_plane_has_derivative_blinfun[OF assms, THEN has_derivative_eq_rhs])\n    (auto simp: blinfun.bilinear_simps flowderiv_def inverse_eq_divide intro!: ext)"], ["", "definition \"Dpoincare_map i c S x =\n  (\\<lambda>h. (Dflow x (return_time {x \\<in> S. x \\<bullet> i = c} x)) h -\n      ((Dflow x (return_time {x \\<in> S. x \\<bullet> i = c} x)) h \\<bullet> i /\n        (f (poincare_map {x \\<in> S. x \\<bullet> i = c} x) \\<bullet> i)) *\\<^sub>R f (poincare_map {x \\<in> S. x \\<bullet> i = c} x))\""], ["", "definition \"Dpoincare_map' i c S x =\n  Dflow x (return_time {x \\<in> S. x \\<bullet> i - c = 0} x) -\n  (blinfun_scaleR_left (f (poincare_map {x \\<in> S. x \\<bullet> i = c} x)) o\\<^sub>L\n    (blinfun_scaleR_left (inverse ((f (poincare_map {x \\<in> S. x \\<bullet> i = c} x) \\<bullet> i))) o\\<^sub>L\n    (blinfun_inner_left i o\\<^sub>L Dflow x (return_time {x \\<in> S. x \\<bullet> i - c = 0} x))))\""], ["", "theorem poincare_map_plane_has_derivative:\n  assumes rt: \"returns_to {x \\<in> S. x \\<bullet> i = c} x\" (is \"returns_to ?P _\")\n  assumes cS: \"closed S\"\n  assumes fnz: \"f (poincare_map ?P x) \\<bullet> i \\<noteq> 0\"\n  assumes eventually_inside: \"\\<forall>\\<^sub>F x in at (poincare_map ?P x). x \\<bullet> i = c \\<longrightarrow> x \\<in> S\"\n  assumes outside: \"x \\<notin> S \\<or> x \\<bullet> i \\<noteq> c\"\n  notes [derivative_intros] = return_time_plane_has_derivative[OF rt cS fnz eventually_inside outside]\n  shows \"(poincare_map ?P has_derivative Dpoincare_map' i c S x) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (poincare_map {x \\<in> S. x \\<bullet> i = c} has_derivative\n     blinfun_apply (Dpoincare_map' i c S x))\n     (at x)", "unfolding poincare_map_def Dpoincare_map'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         flow0 x\n          (return_time {x \\<in> S. x \\<bullet> i = c} x)) has_derivative\n     blinfun_apply\n      (Dflow x (return_time {x \\<in> S. x \\<bullet> i - c = 0} x) -\n       (blinfun_scaleR_left\n         (f (flow0 x\n              (return_time {x \\<in> S. x \\<bullet> i = c} x))) o\\<^sub>L\n        (blinfun_scaleR_left\n          (inverse\n            (f (flow0 x\n                 (return_time {x \\<in> S. x \\<bullet> i = c} x)) \\<bullet>\n             i)) o\\<^sub>L\n         (blinfun_inner_left i o\\<^sub>L\n          Dflow x (return_time {x \\<in> S. x \\<bullet> i - c = 0} x))))))\n     (at x)", "using fnz outside"], ["proof (prove)\nusing this:\n  f (poincare_map {x \\<in> S. x \\<bullet> i = c} x) \\<bullet> i \\<noteq> 0\n  x \\<notin> S \\<or> x \\<bullet> i \\<noteq> c\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         flow0 x\n          (return_time {x \\<in> S. x \\<bullet> i = c} x)) has_derivative\n     blinfun_apply\n      (Dflow x (return_time {x \\<in> S. x \\<bullet> i - c = 0} x) -\n       (blinfun_scaleR_left\n         (f (flow0 x\n              (return_time {x \\<in> S. x \\<bullet> i = c} x))) o\\<^sub>L\n        (blinfun_scaleR_left\n          (inverse\n            (f (flow0 x\n                 (return_time {x \\<in> S. x \\<bullet> i = c} x)) \\<bullet>\n             i)) o\\<^sub>L\n         (blinfun_inner_left i o\\<^sub>L\n          Dflow x (return_time {x \\<in> S. x \\<bullet> i - c = 0} x))))))\n     (at x)", "by (auto intro!: derivative_eq_intros return_time_exivl assms ext closed_levelset_within\n      continuous_intros\n      simp: flowderiv_eq poincare_map_def blinfun.bilinear_simps inverse_eq_divide algebra_simps)"], ["", "end"], ["", "end"]]}