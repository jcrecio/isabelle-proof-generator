{"file_name": "/home/qj213/afp-2021-10-22/thys/LatticeProperties/Complete_Lattice_Prop.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LatticeProperties", "problem_names": ["lemma inf_Inf: assumes nonempty: \"A \\<noteq> {}\"\n   shows \"inf x (Inf A) = Inf ((inf x) ` A)\"", "theorem lfp_mono [simp]:\n  \"mono_mono F \\<Longrightarrow> mono (lfp F)\"", "lemma gfp_ordinal_induct:\n  fixes f :: \"'a::complete_lattice => 'a\"\n  assumes mono: \"mono f\"\n  and P_f: \"!!S. P S ==> P (f S)\"\n  and P_Union: \"!!M. \\<forall>S\\<in>M. P S ==> P (Inf M)\"\n  shows \"P (gfp f)\"", "theorem gfp_mono [simp]:\n  \"mono_mono F \\<Longrightarrow> mono (gfp F)\"", "lemma Sup_less_upper:\n  \"v < w \\<Longrightarrow> P v \\<le> Sup_less P w\"", "lemma Sup_less_least:\n  \"(!! v . v < w \\<Longrightarrow> P v \\<le> Q) \\<Longrightarrow> Sup_less P w \\<le> Q\"", "lemma Sup_less_fun_eq:\n  \"((Sup_less P w) i) = (Sup_less (\\<lambda> v . P v i)) w\"", "theorem fp_wf_induction:\n  \"f x  = x \\<Longrightarrow> mono f \\<Longrightarrow> (\\<forall> w . (y w) \\<le> f (Sup_less y w)) \\<Longrightarrow> Sup (range y) \\<le> x\""], "translations": [["", "lemma inf_Inf: assumes nonempty: \"A \\<noteq> {}\"\n   shows \"inf x (Inf A) = Inf ((inf x) ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inf x (Inf A) = Inf (inf x ` A)", "apply (rule antisym, simp_all)"], ["proof (prove)\ngoal (2 subgoals):\n 1. inf x (Inf A) \\<le> Inf (inf x ` A)\n 2. Inf (inf x ` A) \\<le> x \\<and> Inf (inf x ` A) \\<le> Inf A", "apply (rule INF_greatest)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa. xa \\<in> A \\<Longrightarrow> inf x (Inf A) \\<le> inf x xa\n 2. Inf (inf x ` A) \\<le> x \\<and> Inf (inf x ` A) \\<le> Inf A", "apply (safe, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa. xa \\<in> A \\<Longrightarrow> inf x (Inf A) \\<le> xa\n 2. Inf (inf x ` A) \\<le> x\n 3. Inf (inf x ` A) \\<le> Inf A", "apply (rule_tac y = \"Inf A\" in order_trans, simp_all)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> Inf A \\<le> x\n 2. Inf (inf x ` A) \\<le> x\n 3. Inf (inf x ` A) \\<le> Inf A", "apply (rule Inf_lower, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Inf (inf x ` A) \\<le> x\n 2. Inf (inf x ` A) \\<le> Inf A", "apply (cut_tac nonempty)"], ["proof (prove)\ngoal (2 subgoals):\n 1. A \\<noteq> {} \\<Longrightarrow> Inf (inf x ` A) \\<le> x\n 2. Inf (inf x ` A) \\<le> Inf A", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>\\<not> Inf (inf x ` A) \\<le> x; xa \\<in> A\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {}\n 2. Inf (inf x ` A) \\<le> Inf A", "apply (erule notE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa. xa \\<in> A \\<Longrightarrow> Inf (inf x ` A) \\<le> x\n 2. Inf (inf x ` A) \\<le> Inf A", "apply (rule_tac y = \"inf x xa\" in order_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa. xa \\<in> A \\<Longrightarrow> Inf (inf x ` A) \\<le> inf x xa\n 2. \\<And>xa. xa \\<in> A \\<Longrightarrow> inf x xa \\<le> x\n 3. Inf (inf x ` A) \\<le> Inf A", "apply (rule INF_lower, blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa. xa \\<in> A \\<Longrightarrow> inf x xa \\<le> x\n 2. Inf (inf x ` A) \\<le> Inf A", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf (inf x ` A) \\<le> Inf A", "apply (rule Inf_greatest)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> A \\<Longrightarrow> Inf (inf x ` A) \\<le> xa", "apply (rule_tac y = \"inf x xa\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa. xa \\<in> A \\<Longrightarrow> Inf (inf x ` A) \\<le> inf x xa\n 2. \\<And>xa. xa \\<in> A \\<Longrightarrow> inf x xa \\<le> xa", "apply (rule INF_lower)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> A\n 2. \\<And>xa. xa \\<in> A \\<Longrightarrow> inf x xa \\<le> xa", "apply (simp add: image_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> A \\<Longrightarrow> inf x xa \\<le> xa", "by auto"], ["", "end"], ["", "(*\nMonotonic applications which map monotonic to monotonic have monotonic fixpoints\n*)"], ["", "definition\n  \"mono_mono F = (mono F \\<and> (\\<forall> f . mono f \\<longrightarrow> mono (F f)))\""], ["", "theorem lfp_mono [simp]:\n  \"mono_mono F \\<Longrightarrow> mono (lfp F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono_mono F \\<Longrightarrow> mono (lfp F)", "apply (simp add: mono_mono_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. mono F \\<and>\n    (\\<forall>f. mono f \\<longrightarrow> mono (F f)) \\<Longrightarrow>\n    mono (lfp F)", "apply (rule_tac f=\"F\" and P = \"mono\" in lfp_ordinal_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. mono F \\<and>\n    (\\<forall>f. mono f \\<longrightarrow> mono (F f)) \\<Longrightarrow>\n    mono F\n 2. \\<And>S.\n       \\<lbrakk>mono F \\<and>\n                (\\<forall>f. mono f \\<longrightarrow> mono (F f));\n        mono S; S \\<le> lfp F\\<rbrakk>\n       \\<Longrightarrow> mono (F S)\n 3. \\<And>M.\n       \\<lbrakk>mono F \\<and>\n                (\\<forall>f. mono f \\<longrightarrow> mono (F f));\n        \\<forall>S\\<in>M. mono S\\<rbrakk>\n       \\<Longrightarrow> mono (Sup M)", "apply (simp_all add: mono_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<lbrakk>(\\<forall>x y.\n                    x \\<le> y \\<longrightarrow> F x \\<le> F y) \\<and>\n                (\\<forall>f.\n                    (\\<forall>x y.\n                        x \\<le> y \\<longrightarrow>\n                        f x \\<le> f y) \\<longrightarrow>\n                    (\\<forall>x y.\n                        x \\<le> y \\<longrightarrow> F f x \\<le> F f y));\n        \\<forall>S\\<in>M.\n           \\<forall>x y. x \\<le> y \\<longrightarrow> S x \\<le> S y\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x \\<le> y \\<longrightarrow>\n                            (SUP f\\<in>M. f x) \\<le> (SUP f\\<in>M. f y)", "apply (intro allI impI SUP_least)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M x y f.\n       \\<lbrakk>(\\<forall>x y.\n                    x \\<le> y \\<longrightarrow> F x \\<le> F y) \\<and>\n                (\\<forall>f.\n                    (\\<forall>x y.\n                        x \\<le> y \\<longrightarrow>\n                        f x \\<le> f y) \\<longrightarrow>\n                    (\\<forall>x y.\n                        x \\<le> y \\<longrightarrow> F f x \\<le> F f y));\n        \\<forall>S\\<in>M.\n           \\<forall>x y. x \\<le> y \\<longrightarrow> S x \\<le> S y;\n        x \\<le> y; f \\<in> M\\<rbrakk>\n       \\<Longrightarrow> f x \\<le> (SUP f\\<in>M. f y)", "apply (rule_tac y = \"f y\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>M x y f.\n       \\<lbrakk>(\\<forall>x y.\n                    x \\<le> y \\<longrightarrow> F x \\<le> F y) \\<and>\n                (\\<forall>f.\n                    (\\<forall>x y.\n                        x \\<le> y \\<longrightarrow>\n                        f x \\<le> f y) \\<longrightarrow>\n                    (\\<forall>x y.\n                        x \\<le> y \\<longrightarrow> F f x \\<le> F f y));\n        \\<forall>S\\<in>M.\n           \\<forall>x y. x \\<le> y \\<longrightarrow> S x \\<le> S y;\n        x \\<le> y; f \\<in> M\\<rbrakk>\n       \\<Longrightarrow> f x \\<le> f y\n 2. \\<And>M x y f.\n       \\<lbrakk>(\\<forall>x y.\n                    x \\<le> y \\<longrightarrow> F x \\<le> F y) \\<and>\n                (\\<forall>f.\n                    (\\<forall>x y.\n                        x \\<le> y \\<longrightarrow>\n                        f x \\<le> f y) \\<longrightarrow>\n                    (\\<forall>x y.\n                        x \\<le> y \\<longrightarrow> F f x \\<le> F f y));\n        \\<forall>S\\<in>M.\n           \\<forall>x y. x \\<le> y \\<longrightarrow> S x \\<le> S y;\n        x \\<le> y; f \\<in> M\\<rbrakk>\n       \\<Longrightarrow> f y \\<le> (SUP f\\<in>M. f y)", "apply (auto intro: SUP_upper)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma gfp_ordinal_induct:\n  fixes f :: \"'a::complete_lattice => 'a\"\n  assumes mono: \"mono f\"\n  and P_f: \"!!S. P S ==> P (f S)\"\n  and P_Union: \"!!M. \\<forall>S\\<in>M. P S ==> P (Inf M)\"\n  shows \"P (gfp f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (gfp f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P (gfp f)", "let ?M = \"{S. gfp f \\<le> S \\<and> P S}\""], ["proof (state)\ngoal (1 subgoal):\n 1. P (gfp f)", "have \"P (Inf ?M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (Inf {S. gfp f \\<le> S \\<and> P S})", "using P_Union"], ["proof (prove)\nusing this:\n  \\<forall>S\\<in>?M. P S \\<Longrightarrow> P (Inf ?M)\n\ngoal (1 subgoal):\n 1. P (Inf {S. gfp f \\<le> S \\<and> P S})", "by simp"], ["proof (state)\nthis:\n  P (Inf {S. gfp f \\<le> S \\<and> P S})\n\ngoal (1 subgoal):\n 1. P (gfp f)", "also"], ["proof (state)\nthis:\n  P (Inf {S. gfp f \\<le> S \\<and> P S})\n\ngoal (1 subgoal):\n 1. P (gfp f)", "have \"Inf ?M = gfp f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf {S. gfp f \\<le> S \\<and> P S} = gfp f", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. Inf {S. gfp f \\<le> S \\<and> P S} \\<le> gfp f\n 2. gfp f \\<le> Inf {S. gfp f \\<le> S \\<and> P S}", "show \"gfp f \\<le> Inf ?M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gfp f \\<le> Inf {S. gfp f \\<le> S \\<and> P S}", "by (blast intro: Inf_greatest)"], ["proof (state)\nthis:\n  gfp f \\<le> Inf {S. gfp f \\<le> S \\<and> P S}\n\ngoal (1 subgoal):\n 1. Inf {S. gfp f \\<le> S \\<and> P S} \\<le> gfp f", "hence \"f (gfp f) \\<le> f (Inf ?M)\""], ["proof (prove)\nusing this:\n  gfp f \\<le> Inf {S. gfp f \\<le> S \\<and> P S}\n\ngoal (1 subgoal):\n 1. f (gfp f) \\<le> f (Inf {S. gfp f \\<le> S \\<and> P S})", "by (rule mono [THEN monoD])"], ["proof (state)\nthis:\n  f (gfp f) \\<le> f (Inf {S. gfp f \\<le> S \\<and> P S})\n\ngoal (1 subgoal):\n 1. Inf {S. gfp f \\<le> S \\<and> P S} \\<le> gfp f", "hence \"gfp f \\<le> f (Inf ?M)\""], ["proof (prove)\nusing this:\n  f (gfp f) \\<le> f (Inf {S. gfp f \\<le> S \\<and> P S})\n\ngoal (1 subgoal):\n 1. gfp f \\<le> f (Inf {S. gfp f \\<le> S \\<and> P S})", "using mono [THEN gfp_unfold]"], ["proof (prove)\nusing this:\n  f (gfp f) \\<le> f (Inf {S. gfp f \\<le> S \\<and> P S})\n  gfp f = f (gfp f)\n\ngoal (1 subgoal):\n 1. gfp f \\<le> f (Inf {S. gfp f \\<le> S \\<and> P S})", "by simp"], ["proof (state)\nthis:\n  gfp f \\<le> f (Inf {S. gfp f \\<le> S \\<and> P S})\n\ngoal (1 subgoal):\n 1. Inf {S. gfp f \\<le> S \\<and> P S} \\<le> gfp f", "hence \"f (Inf ?M) \\<in> ?M\""], ["proof (prove)\nusing this:\n  gfp f \\<le> f (Inf {S. gfp f \\<le> S \\<and> P S})\n\ngoal (1 subgoal):\n 1. f (Inf {S. gfp f \\<le> S \\<and> P S})\n    \\<in> {S. gfp f \\<le> S \\<and> P S}", "using P_f P_Union"], ["proof (prove)\nusing this:\n  gfp f \\<le> f (Inf {S. gfp f \\<le> S \\<and> P S})\n  P ?S \\<Longrightarrow> P (f ?S)\n  \\<forall>S\\<in>?M. P S \\<Longrightarrow> P (Inf ?M)\n\ngoal (1 subgoal):\n 1. f (Inf {S. gfp f \\<le> S \\<and> P S})\n    \\<in> {S. gfp f \\<le> S \\<and> P S}", "by simp"], ["proof (state)\nthis:\n  f (Inf {S. gfp f \\<le> S \\<and> P S}) \\<in> {S. gfp f \\<le> S \\<and> P S}\n\ngoal (1 subgoal):\n 1. Inf {S. gfp f \\<le> S \\<and> P S} \\<le> gfp f", "hence \"Inf ?M \\<le> f (Inf ?M)\""], ["proof (prove)\nusing this:\n  f (Inf {S. gfp f \\<le> S \\<and> P S}) \\<in> {S. gfp f \\<le> S \\<and> P S}\n\ngoal (1 subgoal):\n 1. Inf {S. gfp f \\<le> S \\<and> P S}\n    \\<le> f (Inf {S. gfp f \\<le> S \\<and> P S})", "by (rule Inf_lower)"], ["proof (state)\nthis:\n  Inf {S. gfp f \\<le> S \\<and> P S}\n  \\<le> f (Inf {S. gfp f \\<le> S \\<and> P S})\n\ngoal (1 subgoal):\n 1. Inf {S. gfp f \\<le> S \\<and> P S} \\<le> gfp f", "thus \"Inf ?M \\<le> gfp f\""], ["proof (prove)\nusing this:\n  Inf {S. gfp f \\<le> S \\<and> P S}\n  \\<le> f (Inf {S. gfp f \\<le> S \\<and> P S})\n\ngoal (1 subgoal):\n 1. Inf {S. gfp f \\<le> S \\<and> P S} \\<le> gfp f", "by (rule gfp_upperbound)"], ["proof (state)\nthis:\n  Inf {S. gfp f \\<le> S \\<and> P S} \\<le> gfp f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Inf {S. gfp f \\<le> S \\<and> P S} = gfp f\n\ngoal (1 subgoal):\n 1. P (gfp f)", "finally"], ["proof (chain)\npicking this:\n  P (gfp f)", "show ?thesis"], ["proof (prove)\nusing this:\n  P (gfp f)\n\ngoal (1 subgoal):\n 1. P (gfp f)", "."], ["proof (state)\nthis:\n  P (gfp f)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem gfp_mono [simp]:\n  \"mono_mono F \\<Longrightarrow> mono (gfp F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono_mono F \\<Longrightarrow> mono (gfp F)", "apply (simp add: mono_mono_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. mono F \\<and>\n    (\\<forall>f. mono f \\<longrightarrow> mono (F f)) \\<Longrightarrow>\n    mono (gfp F)", "apply (rule_tac f=\"F\" and P = \"mono\" in gfp_ordinal_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. mono F \\<and>\n    (\\<forall>f. mono f \\<longrightarrow> mono (F f)) \\<Longrightarrow>\n    mono F\n 2. \\<And>S.\n       \\<lbrakk>mono F \\<and>\n                (\\<forall>f. mono f \\<longrightarrow> mono (F f));\n        mono S\\<rbrakk>\n       \\<Longrightarrow> mono (F S)\n 3. \\<And>M.\n       \\<lbrakk>mono F \\<and>\n                (\\<forall>f. mono f \\<longrightarrow> mono (F f));\n        \\<forall>S\\<in>M. mono S\\<rbrakk>\n       \\<Longrightarrow> mono (Inf M)", "apply (simp_all, safe)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<lbrakk>\\<forall>S\\<in>M. mono S; mono F;\n        \\<forall>f. mono f \\<longrightarrow> mono (F f)\\<rbrakk>\n       \\<Longrightarrow> mono (Inf M)", "apply (simp_all add: mono_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<lbrakk>\\<forall>S\\<in>M.\n                   \\<forall>x y. x \\<le> y \\<longrightarrow> S x \\<le> S y;\n        \\<forall>x y. x \\<le> y \\<longrightarrow> F x \\<le> F y;\n        \\<forall>f.\n           (\\<forall>x y.\n               x \\<le> y \\<longrightarrow> f x \\<le> f y) \\<longrightarrow>\n           (\\<forall>x y.\n               x \\<le> y \\<longrightarrow> F f x \\<le> F f y)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x \\<le> y \\<longrightarrow>\n                            (INF f\\<in>M. f x) \\<le> (INF f\\<in>M. f y)", "apply (intro allI impI INF_greatest)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M x y f.\n       \\<lbrakk>\\<forall>S\\<in>M.\n                   \\<forall>x y. x \\<le> y \\<longrightarrow> S x \\<le> S y;\n        \\<forall>x y. x \\<le> y \\<longrightarrow> F x \\<le> F y;\n        \\<forall>f.\n           (\\<forall>x y.\n               x \\<le> y \\<longrightarrow> f x \\<le> f y) \\<longrightarrow>\n           (\\<forall>x y. x \\<le> y \\<longrightarrow> F f x \\<le> F f y);\n        x \\<le> y; f \\<in> M\\<rbrakk>\n       \\<Longrightarrow> (INF f\\<in>M. f x) \\<le> f y", "apply (rule_tac y = \"f x\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>M x y f.\n       \\<lbrakk>\\<forall>S\\<in>M.\n                   \\<forall>x y. x \\<le> y \\<longrightarrow> S x \\<le> S y;\n        \\<forall>x y. x \\<le> y \\<longrightarrow> F x \\<le> F y;\n        \\<forall>f.\n           (\\<forall>x y.\n               x \\<le> y \\<longrightarrow> f x \\<le> f y) \\<longrightarrow>\n           (\\<forall>x y. x \\<le> y \\<longrightarrow> F f x \\<le> F f y);\n        x \\<le> y; f \\<in> M\\<rbrakk>\n       \\<Longrightarrow> (INF f\\<in>M. f x) \\<le> f x\n 2. \\<And>M x y f.\n       \\<lbrakk>\\<forall>S\\<in>M.\n                   \\<forall>x y. x \\<le> y \\<longrightarrow> S x \\<le> S y;\n        \\<forall>x y. x \\<le> y \\<longrightarrow> F x \\<le> F y;\n        \\<forall>f.\n           (\\<forall>x y.\n               x \\<le> y \\<longrightarrow> f x \\<le> f y) \\<longrightarrow>\n           (\\<forall>x y. x \\<le> y \\<longrightarrow> F f x \\<le> F f y);\n        x \\<le> y; f \\<in> M\\<rbrakk>\n       \\<Longrightarrow> f x \\<le> f y", "apply (auto intro: INF_lower)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "context complete_lattice begin"], ["", "definition\n  \"Sup_less x (w::'b::well_founded) = Sup {y ::'a . \\<exists> v < w . y = x v}\""], ["", "lemma Sup_less_upper:\n  \"v < w \\<Longrightarrow> P v \\<le> Sup_less P w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v < w \\<Longrightarrow> P v \\<le> Sup_less P w", "by (simp add: Sup_less_def, rule Sup_upper, blast)"], ["", "lemma Sup_less_least:\n  \"(!! v . v < w \\<Longrightarrow> P v \\<le> Q) \\<Longrightarrow> Sup_less P w \\<le> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v. v < w \\<Longrightarrow> P v \\<le> Q) \\<Longrightarrow>\n    Sup_less P w \\<le> Q", "by (simp add: Sup_less_def, rule Sup_least, blast)"], ["", "end"], ["", "lemma Sup_less_fun_eq:\n  \"((Sup_less P w) i) = (Sup_less (\\<lambda> v . P v i)) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_less P w i = Sup_less (\\<lambda>v. P v i) w", "apply (simp add: Sup_less_def fun_eq_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (SUP f\\<in>{y. \\<exists>v<w. \\<forall>x. y x = P v x}. f i) =\n    Sup {y. \\<exists>v<w. y = P v i}", "apply (rule arg_cong [of _ _ Sup])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>f. f i) ` {y. \\<exists>v<w. \\<forall>x. y x = P v x} =\n    {y. \\<exists>v<w. y = P v i}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "theorem fp_wf_induction:\n  \"f x  = x \\<Longrightarrow> mono f \\<Longrightarrow> (\\<forall> w . (y w) \\<le> f (Sup_less y w)) \\<Longrightarrow> Sup (range y) \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f x = x; mono f;\n     \\<forall>w. y w \\<le> f (Sup_less y w)\\<rbrakk>\n    \\<Longrightarrow> Sup (range y) \\<le> x", "apply (rule Sup_least)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>f x = x; mono f; \\<forall>w. y w \\<le> f (Sup_less y w);\n        xa \\<in> range y\\<rbrakk>\n       \\<Longrightarrow> xa \\<le> x", "apply (simp add: image_def, safe, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>f x = x; mono f;\n        \\<forall>w. y w \\<le> f (Sup_less y w)\\<rbrakk>\n       \\<Longrightarrow> y xa \\<le> x", "apply (rule less_induct1, simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>f x = x; mono f; \\<forall>w. y w \\<le> f (Sup_less y w);\n        \\<And>ya. ya < xa \\<Longrightarrow> y ya \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y xa \\<le> x", "apply (rule_tac y = \"f (Sup_less y xa)\" in order_trans, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>f x = x; mono f; \\<forall>w. y w \\<le> f (Sup_less y w);\n        \\<And>ya. ya < xa \\<Longrightarrow> y ya \\<le> x\\<rbrakk>\n       \\<Longrightarrow> f (Sup_less y xa) \\<le> x", "apply (drule_tac x = \"Sup_less y xa\" and y = \"x\" in monoD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>f x = x; \\<forall>w. y w \\<le> f (Sup_less y w);\n        \\<And>ya. ya < xa \\<Longrightarrow> y ya \\<le> x\\<rbrakk>\n       \\<Longrightarrow> Sup_less y xa \\<le> x\n 2. \\<And>xa.\n       \\<lbrakk>f x = x; \\<forall>w. y w \\<le> f (Sup_less y w);\n        \\<And>ya. ya < xa \\<Longrightarrow> y ya \\<le> x;\n        f (Sup_less y xa) \\<le> f x\\<rbrakk>\n       \\<Longrightarrow> f (Sup_less y xa) \\<le> x", "by (simp add: Sup_less_least, auto)"], ["", "end"]]}