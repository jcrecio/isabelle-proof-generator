{"file_name": "/home/qj213/afp-2021-10-22/thys/LatticeProperties/Lattice_Ordered_Group.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LatticeProperties", "problem_names": ["lemma add_order_preserving_left: \"a \\<le> b \\<Longrightarrow> u + a \\<le> u + b\"", "lemma add_order_preserving_right: \"a \\<le> b \\<Longrightarrow> a + v \\<le> b + v\"", "lemma minus_order: \"-a \\<le> -b \\<Longrightarrow> b \\<le> a\"", "lemma right_move_to_left: \"a + - c \\<le> b \\<Longrightarrow> a \\<le> b + c\"", "lemma right_move_to_right: \"a \\<le> b + -c \\<Longrightarrow> a + c \\<le> b\"", "lemma [simp]: \"(a \\<sqinter> b) + c = (a + c) \\<sqinter> (b + c)\"", "lemma [simp]: \"(a \\<sqinter> b) - c = (a - c) \\<sqinter> (b - c)\"", "lemma left_move_to_left: \"-c + a \\<le> b \\<Longrightarrow> a \\<le> c + b\"", "lemma left_move_to_right: \"a \\<le> - c + b \\<Longrightarrow> c + a \\<le> b\"", "lemma [simp]: \"c + (a \\<sqinter> b) = (c + a) \\<sqinter> (c + b)\"", "lemma [simp]: \"- (a \\<sqinter> b) = (- a) \\<squnion> (- b)\"", "lemma [simp]: \"(a \\<squnion> b) + c = (a + c) \\<squnion> (b + c)\"", "lemma [simp]: \"c + (a \\<squnion> b) = (c + a) \\<squnion> (c + b)\"", "lemma [simp]: \"c - (a \\<sqinter> b) = (c - a) \\<squnion> (c - b)\"", "lemma [simp]: \"(a \\<squnion> b) - c = (a - c) \\<squnion>  (b - c)\"", "lemma [simp]: \"- (a \\<squnion> b) = (- a) \\<sqinter> (- b)\"", "lemma [simp]: \"c - (a \\<squnion> b) = (c - a) \\<sqinter> (c - b)\"", "lemma add_pos: \"0 \\<le> a \\<Longrightarrow> b \\<le> b + a\"", "lemma add_pos_left: \"0 \\<le> a \\<Longrightarrow> b \\<le> a + b\"", "lemma inf_sup: \"a - (a \\<sqinter> b) + b = a \\<squnion> b\"", "lemma inf_sup_2: \"b = (a \\<sqinter> b) - a + (a \\<squnion> b)\""], "translations": [["", "lemma add_order_preserving_left: \"a \\<le> b \\<Longrightarrow> u + a \\<le> u + b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> u + a \\<le> u + b", "apply (cut_tac a = a and b = b and u = u and v = 0 in add_order_preserving)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<le> b \\<Longrightarrow> a \\<le> b\n 2. \\<lbrakk>a \\<le> b; u + a + (0::'a) \\<le> u + b + (0::'a)\\<rbrakk>\n    \\<Longrightarrow> u + a \\<le> u + b", "by simp_all"], ["", "lemma add_order_preserving_right: \"a \\<le> b \\<Longrightarrow> a + v \\<le> b + v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> a + v \\<le> b + v", "apply (cut_tac a = a and b = b and u = 0 and v = v in add_order_preserving)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<le> b \\<Longrightarrow> a \\<le> b\n 2. \\<lbrakk>a \\<le> b; (0::'a) + a + v \\<le> (0::'a) + b + v\\<rbrakk>\n    \\<Longrightarrow> a + v \\<le> b + v", "by simp_all"], ["", "lemma minus_order: \"-a \\<le> -b \\<Longrightarrow> b \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - a \\<le> - b \\<Longrightarrow> b \\<le> a", "apply (cut_tac a = \"-a\" and b = \"-b\" and u = a and v = b in add_order_preserving)"], ["proof (prove)\ngoal (2 subgoals):\n 1. - a \\<le> - b \\<Longrightarrow> - a \\<le> - b\n 2. \\<lbrakk>- a \\<le> - b; a + - a + b \\<le> a + - b + b\\<rbrakk>\n    \\<Longrightarrow> b \\<le> a", "by simp_all"], ["", "lemma right_move_to_left: \"a + - c \\<le> b \\<Longrightarrow> a \\<le> b + c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a + - c \\<le> b \\<Longrightarrow> a \\<le> b + c", "apply (drule_tac v = \"c\" in add_order_preserving_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a + - c + c \\<le> b + c \\<Longrightarrow> a \\<le> b + c", "by (simp add: add.assoc)"], ["", "lemma right_move_to_right: \"a \\<le> b + -c \\<Longrightarrow> a + c \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b + - c \\<Longrightarrow> a + c \\<le> b", "apply (drule_tac v = \"c\" in add_order_preserving_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a + c \\<le> b + - c + c \\<Longrightarrow> a + c \\<le> b", "by (simp add: add.assoc)"], ["", "lemma [simp]: \"(a \\<sqinter> b) + c = (a + c) \\<sqinter> (b + c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sqinter> b + c = (a + c) \\<sqinter> (b + c)", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<sqinter> b + c \\<le> (a + c) \\<sqinter> (b + c)\n 2. (a + c) \\<sqinter> (b + c) \\<le> a \\<sqinter> b + c", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<sqinter> b + c \\<le> a + c \\<and> a \\<sqinter> b + c \\<le> b + c\n 2. (a + c) \\<sqinter> (b + c) \\<le> a \\<sqinter> b + c", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. a \\<sqinter> b + c \\<le> a + c\n 2. a \\<sqinter> b + c \\<le> b + c\n 3. (a + c) \\<sqinter> (b + c) \\<le> a \\<sqinter> b + c", "apply (rule add_order_preserving_right)"], ["proof (prove)\ngoal (3 subgoals):\n 1. a \\<sqinter> b \\<le> a\n 2. a \\<sqinter> b + c \\<le> b + c\n 3. (a + c) \\<sqinter> (b + c) \\<le> a \\<sqinter> b + c", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<sqinter> b + c \\<le> b + c\n 2. (a + c) \\<sqinter> (b + c) \\<le> a \\<sqinter> b + c", "apply (rule add_order_preserving_right)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<sqinter> b \\<le> b\n 2. (a + c) \\<sqinter> (b + c) \\<le> a \\<sqinter> b + c", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a + c) \\<sqinter> (b + c) \\<le> a \\<sqinter> b + c", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a + c) \\<sqinter> (b + c) + - c \\<le> a \\<sqinter> b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a + c) \\<sqinter> (b + c) - c \\<le> a \\<and>\n    (a + c) \\<sqinter> (b + c) - c \\<le> b", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. (a + c) \\<sqinter> (b + c) - c \\<le> a\n 2. (a + c) \\<sqinter> (b + c) - c \\<le> b", "apply (simp_all only: diff_conv_add_uminus)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (a + c) \\<sqinter> (b + c) + - c \\<le> a\n 2. (a + c) \\<sqinter> (b + c) + - c \\<le> b", "apply (rule right_move_to_right)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (a + c) \\<sqinter> (b + c) \\<le> a + - (- c)\n 2. (a + c) \\<sqinter> (b + c) + - c \\<le> b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a + c) \\<sqinter> (b + c) + - c \\<le> b", "apply (rule right_move_to_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a + c) \\<sqinter> (b + c) \\<le> b + - (- c)", "by simp"], ["", "lemma [simp]: \"(a \\<sqinter> b) - c = (a - c) \\<sqinter> (b - c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sqinter> b - c = (a - c) \\<sqinter> (b - c)", "by (simp add: diff_conv_add_uminus del: add_uminus_conv_diff)"], ["", "lemma left_move_to_left: \"-c + a \\<le> b \\<Longrightarrow> a \\<le> c + b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - c + a \\<le> b \\<Longrightarrow> a \\<le> c + b", "apply (drule_tac u = \"c\" in add_order_preserving_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. c + (- c + a) \\<le> c + b \\<Longrightarrow> a \\<le> c + b", "by (simp add: add.assoc [THEN sym])"], ["", "lemma left_move_to_right: \"a \\<le> - c + b \\<Longrightarrow> c + a \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> - c + b \\<Longrightarrow> c + a \\<le> b", "apply (drule_tac u = \"c\" in add_order_preserving_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. c + a \\<le> c + (- c + b) \\<Longrightarrow> c + a \\<le> b", "by (simp add: add.assoc [THEN sym])"], ["", "lemma [simp]: \"c + (a \\<sqinter> b) = (c + a) \\<sqinter> (c + b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c + a \\<sqinter> b = (c + a) \\<sqinter> (c + b)", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. c + a \\<sqinter> b \\<le> (c + a) \\<sqinter> (c + b)\n 2. (c + a) \\<sqinter> (c + b) \\<le> c + a \\<sqinter> b", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. c + a \\<sqinter> b \\<le> c + a \\<and> c + a \\<sqinter> b \\<le> c + b\n 2. (c + a) \\<sqinter> (c + b) \\<le> c + a \\<sqinter> b", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. c + a \\<sqinter> b \\<le> c + a\n 2. c + a \\<sqinter> b \\<le> c + b\n 3. (c + a) \\<sqinter> (c + b) \\<le> c + a \\<sqinter> b", "apply (rule add_order_preserving_left)"], ["proof (prove)\ngoal (3 subgoals):\n 1. a \\<sqinter> b \\<le> a\n 2. c + a \\<sqinter> b \\<le> c + b\n 3. (c + a) \\<sqinter> (c + b) \\<le> c + a \\<sqinter> b", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. c + a \\<sqinter> b \\<le> c + b\n 2. (c + a) \\<sqinter> (c + b) \\<le> c + a \\<sqinter> b", "apply (rule add_order_preserving_left)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<sqinter> b \\<le> b\n 2. (c + a) \\<sqinter> (c + b) \\<le> c + a \\<sqinter> b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (c + a) \\<sqinter> (c + b) \\<le> c + a \\<sqinter> b", "apply (rule left_move_to_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. - c + (c + a) \\<sqinter> (c + b) \\<le> a \\<sqinter> b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. - c + (c + a) \\<sqinter> (c + b) \\<le> a \\<and>\n    - c + (c + a) \\<sqinter> (c + b) \\<le> b", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. - c + (c + a) \\<sqinter> (c + b) \\<le> a\n 2. - c + (c + a) \\<sqinter> (c + b) \\<le> b", "apply (rule left_move_to_right)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (c + a) \\<sqinter> (c + b) \\<le> - (- c) + a\n 2. - c + (c + a) \\<sqinter> (c + b) \\<le> b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. - c + (c + a) \\<sqinter> (c + b) \\<le> b", "apply (rule left_move_to_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (c + a) \\<sqinter> (c + b) \\<le> - (- c) + b", "by simp"], ["", "lemma [simp]: \"- (a \\<sqinter> b) = (- a) \\<squnion> (- b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (a \\<sqinter> b) = - a \\<squnion> - b", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. - (a \\<sqinter> b) \\<le> - a \\<squnion> - b\n 2. - a \\<squnion> - b \\<le> - (a \\<sqinter> b)", "apply (rule minus_order)"], ["proof (prove)\ngoal (2 subgoals):\n 1. - (- a \\<squnion> - b) \\<le> - (- (a \\<sqinter> b))\n 2. - a \\<squnion> - b \\<le> - (a \\<sqinter> b)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. - (- a \\<squnion> - b) \\<le> a \\<and> - (- a \\<squnion> - b) \\<le> b\n 2. - a \\<squnion> - b \\<le> - (a \\<sqinter> b)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. - (- a \\<squnion> - b) \\<le> a\n 2. - (- a \\<squnion> - b) \\<le> b\n 3. - a \\<squnion> - b \\<le> - (a \\<sqinter> b)", "apply (rule minus_order)"], ["proof (prove)\ngoal (3 subgoals):\n 1. - a \\<le> - (- (- a \\<squnion> - b))\n 2. - (- a \\<squnion> - b) \\<le> b\n 3. - a \\<squnion> - b \\<le> - (a \\<sqinter> b)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. - (- a \\<squnion> - b) \\<le> b\n 2. - a \\<squnion> - b \\<le> - (a \\<sqinter> b)", "apply (rule minus_order)"], ["proof (prove)\ngoal (2 subgoals):\n 1. - b \\<le> - (- (- a \\<squnion> - b))\n 2. - a \\<squnion> - b \\<le> - (a \\<sqinter> b)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. - a \\<squnion> - b \\<le> - (a \\<sqinter> b)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. - a \\<le> - (a \\<sqinter> b) \\<and> - b \\<le> - (a \\<sqinter> b)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. - a \\<le> - (a \\<sqinter> b)\n 2. - b \\<le> - (a \\<sqinter> b)", "apply (rule minus_order)"], ["proof (prove)\ngoal (2 subgoals):\n 1. - (- (a \\<sqinter> b)) \\<le> - (- a)\n 2. - b \\<le> - (a \\<sqinter> b)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. - b \\<le> - (a \\<sqinter> b)", "apply (rule minus_order)"], ["proof (prove)\ngoal (1 subgoal):\n 1. - (- (a \\<sqinter> b)) \\<le> - (- b)", "by simp"], ["", "lemma [simp]: \"(a \\<squnion> b) + c = (a + c) \\<squnion> (b + c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<squnion> b + c = a + c \\<squnion> (b + c)", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<squnion> b + c \\<le> a + c \\<squnion> (b + c)\n 2. a + c \\<squnion> (b + c) \\<le> a \\<squnion> b + c", "apply (rule right_move_to_right)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<squnion> b \\<le> a + c \\<squnion> (b + c) + - c\n 2. a + c \\<squnion> (b + c) \\<le> a \\<squnion> b + c", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<le> a + c \\<squnion> (b + c) - c \\<and>\n    b \\<le> a + c \\<squnion> (b + c) - c\n 2. a + c \\<squnion> (b + c) \\<le> a \\<squnion> b + c", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. a \\<le> a + c \\<squnion> (b + c) - c\n 2. b \\<le> a + c \\<squnion> (b + c) - c\n 3. a + c \\<squnion> (b + c) \\<le> a \\<squnion> b + c", "apply (simp_all only: diff_conv_add_uminus)"], ["proof (prove)\ngoal (3 subgoals):\n 1. a \\<le> a + c \\<squnion> (b + c) + - c\n 2. b \\<le> a + c \\<squnion> (b + c) + - c\n 3. a + c \\<squnion> (b + c) \\<le> a \\<squnion> b + c", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (3 subgoals):\n 1. a + - (- c) \\<le> a + c \\<squnion> (b + c)\n 2. b \\<le> a + c \\<squnion> (b + c) + - c\n 3. a + c \\<squnion> (b + c) \\<le> a \\<squnion> b + c", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. b \\<le> a + c \\<squnion> (b + c) + - c\n 2. a + c \\<squnion> (b + c) \\<le> a \\<squnion> b + c", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (2 subgoals):\n 1. b + - (- c) \\<le> a + c \\<squnion> (b + c)\n 2. a + c \\<squnion> (b + c) \\<le> a \\<squnion> b + c", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. a + c \\<squnion> (b + c) \\<le> a \\<squnion> b + c", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. a + c \\<le> a \\<squnion> b + c \\<and> b + c \\<le> a \\<squnion> b + c", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. a + c \\<le> a \\<squnion> b + c\n 2. b + c \\<le> a \\<squnion> b + c", "apply (rule add_order_preserving_right)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<le> a \\<squnion> b\n 2. b + c \\<le> a \\<squnion> b + c", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. b + c \\<le> a \\<squnion> b + c", "apply (rule add_order_preserving_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<le> a \\<squnion> b", "by simp"], ["", "lemma [simp]: \"c + (a \\<squnion> b) = (c + a) \\<squnion> (c + b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c + (a \\<squnion> b) = c + a \\<squnion> (c + b)", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. c + (a \\<squnion> b) \\<le> c + a \\<squnion> (c + b)\n 2. c + a \\<squnion> (c + b) \\<le> c + (a \\<squnion> b)", "apply (rule left_move_to_right)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<squnion> b \\<le> - c + (c + a \\<squnion> (c + b))\n 2. c + a \\<squnion> (c + b) \\<le> c + (a \\<squnion> b)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<le> - c + (c + a \\<squnion> (c + b)) \\<and>\n    b \\<le> - c + (c + a \\<squnion> (c + b))\n 2. c + a \\<squnion> (c + b) \\<le> c + (a \\<squnion> b)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. a \\<le> - c + (c + a \\<squnion> (c + b))\n 2. b \\<le> - c + (c + a \\<squnion> (c + b))\n 3. c + a \\<squnion> (c + b) \\<le> c + (a \\<squnion> b)", "apply (rule left_move_to_left)"], ["proof (prove)\ngoal (3 subgoals):\n 1. - (- c) + a \\<le> c + a \\<squnion> (c + b)\n 2. b \\<le> - c + (c + a \\<squnion> (c + b))\n 3. c + a \\<squnion> (c + b) \\<le> c + (a \\<squnion> b)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. b \\<le> - c + (c + a \\<squnion> (c + b))\n 2. c + a \\<squnion> (c + b) \\<le> c + (a \\<squnion> b)", "apply (rule left_move_to_left)"], ["proof (prove)\ngoal (2 subgoals):\n 1. - (- c) + b \\<le> c + a \\<squnion> (c + b)\n 2. c + a \\<squnion> (c + b) \\<le> c + (a \\<squnion> b)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. c + a \\<squnion> (c + b) \\<le> c + (a \\<squnion> b)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. c + a \\<le> c + (a \\<squnion> b) \\<and> c + b \\<le> c + (a \\<squnion> b)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. c + a \\<le> c + (a \\<squnion> b)\n 2. c + b \\<le> c + (a \\<squnion> b)", "apply (rule add_order_preserving_left)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<le> a \\<squnion> b\n 2. c + b \\<le> c + (a \\<squnion> b)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. c + b \\<le> c + (a \\<squnion> b)", "apply (rule add_order_preserving_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<le> a \\<squnion> b", "by simp"], ["", "lemma [simp]: \"c - (a \\<sqinter> b) = (c - a) \\<squnion> (c - b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c - a \\<sqinter> b = c - a \\<squnion> (c - b)", "by (simp add: diff_conv_add_uminus del: add_uminus_conv_diff)"], ["", "lemma [simp]: \"(a \\<squnion> b) - c = (a - c) \\<squnion>  (b - c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<squnion> b - c = a - c \\<squnion> (b - c)", "by (simp add: diff_conv_add_uminus del: add_uminus_conv_diff)"], ["", "lemma [simp]: \"- (a \\<squnion> b) = (- a) \\<sqinter> (- b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (a \\<squnion> b) = - a \\<sqinter> - b", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. - (a \\<squnion> b) \\<le> - a \\<sqinter> - b\n 2. - a \\<sqinter> - b \\<le> - (a \\<squnion> b)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. - (a \\<squnion> b) \\<le> - a \\<and> - (a \\<squnion> b) \\<le> - b\n 2. - a \\<sqinter> - b \\<le> - (a \\<squnion> b)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. - (a \\<squnion> b) \\<le> - a\n 2. - (a \\<squnion> b) \\<le> - b\n 3. - a \\<sqinter> - b \\<le> - (a \\<squnion> b)", "apply (rule minus_order)"], ["proof (prove)\ngoal (3 subgoals):\n 1. - (- a) \\<le> - (- (a \\<squnion> b))\n 2. - (a \\<squnion> b) \\<le> - b\n 3. - a \\<sqinter> - b \\<le> - (a \\<squnion> b)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. - (a \\<squnion> b) \\<le> - b\n 2. - a \\<sqinter> - b \\<le> - (a \\<squnion> b)", "apply (rule minus_order)"], ["proof (prove)\ngoal (2 subgoals):\n 1. - (- b) \\<le> - (- (a \\<squnion> b))\n 2. - a \\<sqinter> - b \\<le> - (a \\<squnion> b)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. - a \\<sqinter> - b \\<le> - (a \\<squnion> b)", "apply (rule minus_order)"], ["proof (prove)\ngoal (1 subgoal):\n 1. - (- (a \\<squnion> b)) \\<le> - (- a \\<sqinter> - b)", "by simp"], ["", "lemma [simp]: \"c - (a \\<squnion> b) = (c - a) \\<sqinter> (c - b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c - (a \\<squnion> b) = (c - a) \\<sqinter> (c - b)", "by (simp add: diff_conv_add_uminus del: add_uminus_conv_diff)"], ["", "lemma add_pos: \"0 \\<le> a \\<Longrightarrow> b \\<le> b + a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> a \\<Longrightarrow> b \\<le> b + a", "apply (cut_tac a = 0 and b = a and u = b and v = 0 in add_order_preserving)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (0::'a) \\<le> a \\<Longrightarrow> (0::'a) \\<le> a\n 2. \\<lbrakk>(0::'a) \\<le> a;\n     b + (0::'a) + (0::'a) \\<le> b + a + (0::'a)\\<rbrakk>\n    \\<Longrightarrow> b \\<le> b + a", "by simp_all"], ["", "lemma add_pos_left: \"0 \\<le> a \\<Longrightarrow> b \\<le> a + b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> a \\<Longrightarrow> b \\<le> a + b", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> a \\<Longrightarrow> b + - b \\<le> a", "by simp"], ["", "lemma inf_sup: \"a - (a \\<sqinter> b) + b = a \\<squnion> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a - a \\<sqinter> b + b = a \\<squnion> b", "by (simp add: add.assoc sup_commute)"], ["", "lemma inf_sup_2: \"b = (a \\<sqinter> b) - a + (a \\<squnion> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b = a \\<sqinter> b - a + (a \\<squnion> b)", "apply (unfold inf_sup [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. b = a \\<sqinter> b - a + (a - a \\<sqinter> b + b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b = a \\<sqinter> b - a + (a - a \\<sqinter> b + b)", "fix a b:: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. b = a \\<sqinter> b - a + (a - a \\<sqinter> b + b)", "have \"b = (a \\<sqinter> b) + (- a + a) + - (a \\<sqinter> b) + b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b = a \\<sqinter> b + (- a + a) + - (a \\<sqinter> b) + b", "by (simp only: right_minus left_minus add_0_right add_0_left)"], ["proof (state)\nthis:\n  b = a \\<sqinter> b + (- a + a) + - (a \\<sqinter> b) + b\n\ngoal (1 subgoal):\n 1. b = a \\<sqinter> b - a + (a - a \\<sqinter> b + b)", "also"], ["proof (state)\nthis:\n  b = a \\<sqinter> b + (- a + a) + - (a \\<sqinter> b) + b\n\ngoal (1 subgoal):\n 1. b = a \\<sqinter> b - a + (a - a \\<sqinter> b + b)", "have \"\\<dots> = (a \\<sqinter> b) + - a + (a + - (a \\<sqinter> b) + b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sqinter> b + (- a + a) + - (a \\<sqinter> b) + b =\n    a \\<sqinter> b + - a + (a + - (a \\<sqinter> b) + b)", "by (unfold add.assoc, simp)"], ["proof (state)\nthis:\n  a \\<sqinter> b + (- a + a) + - (a \\<sqinter> b) + b =\n  a \\<sqinter> b + - a + (a + - (a \\<sqinter> b) + b)\n\ngoal (1 subgoal):\n 1. b = a \\<sqinter> b - a + (a - a \\<sqinter> b + b)", "also"], ["proof (state)\nthis:\n  a \\<sqinter> b + (- a + a) + - (a \\<sqinter> b) + b =\n  a \\<sqinter> b + - a + (a + - (a \\<sqinter> b) + b)\n\ngoal (1 subgoal):\n 1. b = a \\<sqinter> b - a + (a - a \\<sqinter> b + b)", "have \"\\<dots> = (a \\<sqinter> b) - a + (a - (a \\<sqinter> b) + b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sqinter> b + - a + (a + - (a \\<sqinter> b) + b) =\n    a \\<sqinter> b - a + (a - a \\<sqinter> b + b)", "by simp"], ["proof (state)\nthis:\n  a \\<sqinter> b + - a + (a + - (a \\<sqinter> b) + b) =\n  a \\<sqinter> b - a + (a - a \\<sqinter> b + b)\n\ngoal (1 subgoal):\n 1. b = a \\<sqinter> b - a + (a - a \\<sqinter> b + b)", "finally"], ["proof (chain)\npicking this:\n  b = a \\<sqinter> b - a + (a - a \\<sqinter> b + b)", "show \"b = (a \\<sqinter> b) - a + (a - (a \\<sqinter> b) + b)\""], ["proof (prove)\nusing this:\n  b = a \\<sqinter> b - a + (a - a \\<sqinter> b + b)\n\ngoal (1 subgoal):\n 1. b = a \\<sqinter> b - a + (a - a \\<sqinter> b + b)", "."], ["proof (state)\nthis:\n  b = a \\<sqinter> b - a + (a - a \\<sqinter> b + b)\n\ngoal:\nNo subgoals!", "qed"], ["", "subclass inf_sup_eq_lattice"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.inf_sup_eq_lattice (\\<sqinter>) (\\<le>) (<) (\\<squnion>)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x z y.\n       \\<lbrakk>x \\<sqinter> z = y \\<sqinter> z;\n        x \\<squnion> z = y \\<squnion> z\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix x y z:: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x z y.\n       \\<lbrakk>x \\<sqinter> z = y \\<sqinter> z;\n        x \\<squnion> z = y \\<squnion> z\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume A: \"x \\<sqinter> z = y \\<sqinter> z\""], ["proof (state)\nthis:\n  x \\<sqinter> z = y \\<sqinter> z\n\ngoal (1 subgoal):\n 1. \\<And>x z y.\n       \\<lbrakk>x \\<sqinter> z = y \\<sqinter> z;\n        x \\<squnion> z = y \\<squnion> z\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume B: \"x \\<squnion> z = y \\<squnion> z\""], ["proof (state)\nthis:\n  x \\<squnion> z = y \\<squnion> z\n\ngoal (1 subgoal):\n 1. \\<And>x z y.\n       \\<lbrakk>x \\<sqinter> z = y \\<sqinter> z;\n        x \\<squnion> z = y \\<squnion> z\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"x = (z \\<sqinter> x) - z + (z \\<squnion> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = z \\<sqinter> x - z + (z \\<squnion> x)", "by (rule inf_sup_2)"], ["proof (state)\nthis:\n  x = z \\<sqinter> x - z + (z \\<squnion> x)\n\ngoal (1 subgoal):\n 1. \\<And>x z y.\n       \\<lbrakk>x \\<sqinter> z = y \\<sqinter> z;\n        x \\<squnion> z = y \\<squnion> z\\<rbrakk>\n       \\<Longrightarrow> x = y", "also"], ["proof (state)\nthis:\n  x = z \\<sqinter> x - z + (z \\<squnion> x)\n\ngoal (1 subgoal):\n 1. \\<And>x z y.\n       \\<lbrakk>x \\<sqinter> z = y \\<sqinter> z;\n        x \\<squnion> z = y \\<squnion> z\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"\\<dots> = (z \\<sqinter> y) - z + (z \\<squnion> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<sqinter> x - z + (z \\<squnion> x) =\n    z \\<sqinter> y - z + (z \\<squnion> y)", "by (simp add: sup_commute inf_commute A B)"], ["proof (state)\nthis:\n  z \\<sqinter> x - z + (z \\<squnion> x) =\n  z \\<sqinter> y - z + (z \\<squnion> y)\n\ngoal (1 subgoal):\n 1. \\<And>x z y.\n       \\<lbrakk>x \\<sqinter> z = y \\<sqinter> z;\n        x \\<squnion> z = y \\<squnion> z\\<rbrakk>\n       \\<Longrightarrow> x = y", "also"], ["proof (state)\nthis:\n  z \\<sqinter> x - z + (z \\<squnion> x) =\n  z \\<sqinter> y - z + (z \\<squnion> y)\n\ngoal (1 subgoal):\n 1. \\<And>x z y.\n       \\<lbrakk>x \\<sqinter> z = y \\<sqinter> z;\n        x \\<squnion> z = y \\<squnion> z\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"\\<dots> = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<sqinter> y - z + (z \\<squnion> y) = y", "by (simp only: inf_sup_2 [THEN sym])"], ["proof (state)\nthis:\n  z \\<sqinter> y - z + (z \\<squnion> y) = y\n\ngoal (1 subgoal):\n 1. \\<And>x z y.\n       \\<lbrakk>x \\<sqinter> z = y \\<sqinter> z;\n        x \\<squnion> z = y \\<squnion> z\\<rbrakk>\n       \\<Longrightarrow> x = y", "finally"], ["proof (chain)\npicking this:\n  x = y", "show \"x = y\""], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. x = y", "."], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}