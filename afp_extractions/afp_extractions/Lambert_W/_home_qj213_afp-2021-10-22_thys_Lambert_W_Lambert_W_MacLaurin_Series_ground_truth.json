{"file_name": "/home/qj213/afp-2021-10-22/thys/Lambert_W/Lambert_W_MacLaurin_Series.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Lambert_W", "problem_names": ["lemma Stirling_Suc_n_n: \"Stirling (Suc n) n = (Suc n choose 2)\"", "lemma Stirling_n_n_minus_1: \"n > 0 \\<Longrightarrow> Stirling n (n - 1) = (n choose 2)\"", "lemma fps_compose_Lambert_W: \"fps_compose fps_Lambert_W (fps_X * fps_exp 1) = fps_X\"", "lemma fps_compose_Lambert_W': \"fps_compose (fps_X * fps_exp 1) fps_Lambert_W  = fps_X\"", "lemma fps_nth_Lambert_W_0 [simp]: \"fps_nth fps_Lambert_W 0 = 0\"", "lemma fps_nth_Lambert_W_1 [simp]: \"fps_nth fps_Lambert_W 1 = 1\"", "lemma fps_Lambert_W_over_X:\n  \"fps_Lambert_W = fps_X * fps_compose (fps_exp (-1)) fps_Lambert_W\"", "lemma fps_nth_Lambert_W: \"fps_nth fps_Lambert_W n = (if n = 0 then 0 else ((-n)^(n-1) / fact n))\"", "lemma summable_comparison_test_bigo:\n  fixes f :: \"nat \\<Rightarrow> real\"\n  assumes \"summable (\\<lambda>n. norm (g n))\" \"f \\<in> O(g)\"\n  shows   \"summable f\"", "lemma summable_comparison_test_bigo':\n  assumes \"summable (\\<lambda>n. norm (g n))\"\n  assumes \"(\\<lambda>n. norm (f n :: 'a :: banach)) \\<in> O(\\<lambda>n. norm (g n))\"\n  shows   \"summable f\"", "lemma conv_radius_conv_Sup':\n  fixes f :: \"nat \\<Rightarrow> 'a :: {banach, real_normed_div_algebra}\"\n  shows \"conv_radius f = Sup {r. \\<forall>z. ereal (norm z) < r \\<longrightarrow> summable (\\<lambda>n. norm (f n * z ^ n))}\"", "lemma bigo_imp_conv_radius_ge:\n  fixes f g :: \"nat \\<Rightarrow> 'a :: {banach, real_normed_field}\"\n  assumes \"f \\<in> O(g)\"\n  shows   \"conv_radius f \\<ge> conv_radius g\"", "lemma conv_radius_cong_bigtheta:\n  assumes \"f \\<in> \\<Theta>(g)\"\n  shows   \"conv_radius f = conv_radius g\"", "lemma conv_radius_eqI_smallomega_smallo:\n  fixes f :: \"nat \\<Rightarrow> 'a :: {real_normed_div_algebra, banach}\"\n  assumes \"\\<And>\\<epsilon>. \\<epsilon> > l \\<Longrightarrow> \\<epsilon> < inverse C \\<Longrightarrow> (\\<lambda>n. norm (f n)) \\<in> \\<omega>(\\<lambda>n. \\<epsilon> ^ n)\"\n  assumes \"\\<And>\\<epsilon>. \\<epsilon> < u \\<Longrightarrow> \\<epsilon> > inverse C \\<Longrightarrow> (\\<lambda>n. norm (f n)) \\<in> o(\\<lambda>n. \\<epsilon> ^ n)\"\n  assumes C: \"C > 0\" and lu: \"l > 0\" \"l < inverse C\" \"u > inverse C\"\n  shows   \"conv_radius f = ereal C\"", "lemma fps_conv_radius_Lambert_W: \"fps_conv_radius fps_Lambert_W = exp (-1)\""], "translations": [["", "lemma Stirling_Suc_n_n: \"Stirling (Suc n) n = (Suc n choose 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Stirling (Suc n) n = Suc n choose 2", "by (induction n) (auto simp: choose_two)"], ["", "lemma Stirling_n_n_minus_1: \"n > 0 \\<Longrightarrow> Stirling n (n - 1) = (n choose 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> Stirling n (n - 1) = n choose 2", "using Stirling_Suc_n_n[of \"n - 1\"]"], ["proof (prove)\nusing this:\n  Stirling (Suc (n - 1)) (n - 1) = Suc (n - 1) choose 2\n\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> Stirling n (n - 1) = n choose 2", "by (cases n) auto"], ["", "text \\<open>\n  The following defines the power series $W(X)$ as the formal inverse of the\n  formal power series $X e^X$:\n\\<close>"], ["", "definition fps_Lambert_W :: \"real fps\" where\n  \"fps_Lambert_W = fps_inv (fps_X * fps_exp 1)\""], ["", "text \\<open>\n  The formal composition of $W(X)$ and $X e^X$ is, in fact, the identity (in both directions).\n\\<close>"], ["", "lemma fps_compose_Lambert_W: \"fps_compose fps_Lambert_W (fps_X * fps_exp 1) = fps_X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fps_Lambert_W oo fps_X * fps_exp 1 = fps_X", "unfolding fps_Lambert_W_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fps_inv (fps_X * fps_exp 1) oo fps_X * fps_exp 1 = fps_X", "by (rule fps_inv) auto"], ["", "lemma fps_compose_Lambert_W': \"fps_compose (fps_X * fps_exp 1) fps_Lambert_W  = fps_X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fps_X * fps_exp 1 oo fps_Lambert_W = fps_X", "unfolding fps_Lambert_W_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fps_X * fps_exp 1 oo fps_inv (fps_X * fps_exp 1) = fps_X", "by (rule fps_inv_right) auto"], ["", "text \\<open>\n  We have $W(0) = 0$, which shows that $W(X)$ indeed represents the branch $W_0$.\n\\<close>"], ["", "lemma fps_nth_Lambert_W_0 [simp]: \"fps_nth fps_Lambert_W 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fps_Lambert_W $ 0 = 0", "by (simp add: fps_Lambert_W_def fps_inv_def)"], ["", "lemma fps_nth_Lambert_W_1 [simp]: \"fps_nth fps_Lambert_W 1 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fps_Lambert_W $ 1 = 1", "by (simp add: fps_Lambert_W_def fps_inv_def)"], ["", "text \\<open>\n  All the equalities that hold for the analytic Lambert $W$ function in a neighbourhood of 0\n  also hold formally for the formal power series, e.g. $W(X) = X e^{-W(X)}$:  \n\\<close>"], ["", "lemma fps_Lambert_W_over_X:\n  \"fps_Lambert_W = fps_X * fps_compose (fps_exp (-1)) fps_Lambert_W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fps_Lambert_W = fps_X * (fps_exp (- 1) oo fps_Lambert_W)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fps_Lambert_W = fps_X * (fps_exp (- 1) oo fps_Lambert_W)", "have \"fps_nth (fps_exp 1 oo fps_Lambert_W) 0 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fps_exp 1 oo fps_Lambert_W) $ 0 = 1", "by simp"], ["proof (state)\nthis:\n  (fps_exp 1 oo fps_Lambert_W) $ 0 = 1\n\ngoal (1 subgoal):\n 1. fps_Lambert_W = fps_X * (fps_exp (- 1) oo fps_Lambert_W)", "hence nz: \"fps_exp 1 oo fps_Lambert_W \\<noteq> 0\""], ["proof (prove)\nusing this:\n  (fps_exp 1 oo fps_Lambert_W) $ 0 = 1\n\ngoal (1 subgoal):\n 1. fps_exp 1 oo fps_Lambert_W \\<noteq> 0", "by force"], ["proof (state)\nthis:\n  fps_exp 1 oo fps_Lambert_W \\<noteq> 0\n\ngoal (1 subgoal):\n 1. fps_Lambert_W = fps_X * (fps_exp (- 1) oo fps_Lambert_W)", "have \"fps_Lambert_W * fps_compose (fps_exp 1) fps_Lambert_W =\n          fps_compose (fps_X * fps_exp 1) fps_Lambert_W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fps_Lambert_W * (fps_exp 1 oo fps_Lambert_W) =\n    fps_X * fps_exp 1 oo fps_Lambert_W", "by (simp add: fps_compose_mult_distrib)"], ["proof (state)\nthis:\n  fps_Lambert_W * (fps_exp 1 oo fps_Lambert_W) =\n  fps_X * fps_exp 1 oo fps_Lambert_W\n\ngoal (1 subgoal):\n 1. fps_Lambert_W = fps_X * (fps_exp (- 1) oo fps_Lambert_W)", "also"], ["proof (state)\nthis:\n  fps_Lambert_W * (fps_exp 1 oo fps_Lambert_W) =\n  fps_X * fps_exp 1 oo fps_Lambert_W\n\ngoal (1 subgoal):\n 1. fps_Lambert_W = fps_X * (fps_exp (- 1) oo fps_Lambert_W)", "have \"\\<dots> = fps_X * fps_compose 1 fps_Lambert_W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fps_X * fps_exp 1 oo fps_Lambert_W = fps_X * (1 oo fps_Lambert_W)", "by (simp add: fps_compose_Lambert_W')"], ["proof (state)\nthis:\n  fps_X * fps_exp 1 oo fps_Lambert_W = fps_X * (1 oo fps_Lambert_W)\n\ngoal (1 subgoal):\n 1. fps_Lambert_W = fps_X * (fps_exp (- 1) oo fps_Lambert_W)", "also"], ["proof (state)\nthis:\n  fps_X * fps_exp 1 oo fps_Lambert_W = fps_X * (1 oo fps_Lambert_W)\n\ngoal (1 subgoal):\n 1. fps_Lambert_W = fps_X * (fps_exp (- 1) oo fps_Lambert_W)", "have \"1 = fps_exp (-1) * fps_exp (1 :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 = fps_exp (- 1) * fps_exp 1", "by (simp flip: fps_exp_add_mult)"], ["proof (state)\nthis:\n  1 = fps_exp (- 1) * fps_exp 1\n\ngoal (1 subgoal):\n 1. fps_Lambert_W = fps_X * (fps_exp (- 1) oo fps_Lambert_W)", "also"], ["proof (state)\nthis:\n  1 = fps_exp (- 1) * fps_exp 1\n\ngoal (1 subgoal):\n 1. fps_Lambert_W = fps_X * (fps_exp (- 1) oo fps_Lambert_W)", "have \"fps_X * fps_compose \\<dots> fps_Lambert_W =\n               fps_X * fps_compose (fps_exp (-1)) fps_Lambert_W *\n                 fps_compose (fps_exp 1) fps_Lambert_W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fps_X * (fps_exp (- 1) * fps_exp 1 oo fps_Lambert_W) =\n    fps_X * (fps_exp (- 1) oo fps_Lambert_W) * (fps_exp 1 oo fps_Lambert_W)", "by (simp add: fps_compose_mult_distrib mult_ac)"], ["proof (state)\nthis:\n  fps_X * (fps_exp (- 1) * fps_exp 1 oo fps_Lambert_W) =\n  fps_X * (fps_exp (- 1) oo fps_Lambert_W) * (fps_exp 1 oo fps_Lambert_W)\n\ngoal (1 subgoal):\n 1. fps_Lambert_W = fps_X * (fps_exp (- 1) oo fps_Lambert_W)", "finally"], ["proof (chain)\npicking this:\n  fps_Lambert_W * (fps_exp 1 oo fps_Lambert_W) =\n  fps_X * (fps_exp (- 1) oo fps_Lambert_W) * (fps_exp 1 oo fps_Lambert_W)", "show ?thesis"], ["proof (prove)\nusing this:\n  fps_Lambert_W * (fps_exp 1 oo fps_Lambert_W) =\n  fps_X * (fps_exp (- 1) oo fps_Lambert_W) * (fps_exp 1 oo fps_Lambert_W)\n\ngoal (1 subgoal):\n 1. fps_Lambert_W = fps_X * (fps_exp (- 1) oo fps_Lambert_W)", "using nz"], ["proof (prove)\nusing this:\n  fps_Lambert_W * (fps_exp 1 oo fps_Lambert_W) =\n  fps_X * (fps_exp (- 1) oo fps_Lambert_W) * (fps_exp 1 oo fps_Lambert_W)\n  fps_exp 1 oo fps_Lambert_W \\<noteq> 0\n\ngoal (1 subgoal):\n 1. fps_Lambert_W = fps_X * (fps_exp (- 1) oo fps_Lambert_W)", "by simp"], ["proof (state)\nthis:\n  fps_Lambert_W = fps_X * (fps_exp (- 1) oo fps_Lambert_W)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We now derive the closed-form expression\n  \\[W(X) = \\sum_{n=1}^\\infty \\frac{(-n)^{n-1}}{n!} X^n\\ .\\]\n\\<close>"], ["", "lemma fps_nth_Lambert_W: \"fps_nth fps_Lambert_W n = (if n = 0 then 0 else ((-n)^(n-1) / fact n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fps_Lambert_W $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fps_Lambert_W $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "define F :: \"real fps\" where \"F = fps_X * fps_exp 1\""], ["proof (state)\nthis:\n  F = fps_X * fps_exp 1\n\ngoal (1 subgoal):\n 1. fps_Lambert_W $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "have fps_nth_eq: \"fps_nth F n = 1 / fact (n - 1)\" if \"n > 0\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. F $ n = 1 / fact (n - 1)", "using that"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. F $ n = 1 / fact (n - 1)", "unfolding F_def"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. (fps_X * fps_exp 1) $ n = 1 / fact (n - 1)", "by simp"], ["proof (state)\nthis:\n  0 < ?n \\<Longrightarrow> F $ ?n = 1 / fact (?n - 1)\n\ngoal (1 subgoal):\n 1. fps_Lambert_W $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "have F_power: \"F ^ n = fps_X ^ n * fps_exp (of_nat n)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. F ^ n = fps_X ^ n * fps_exp (real n)", "by (simp add: F_def power_mult_distrib fps_exp_power_mult)"], ["proof (state)\nthis:\n  F ^ ?n = fps_X ^ ?n * fps_exp (real ?n)\n\ngoal (1 subgoal):\n 1. fps_Lambert_W $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "have \"fps_nth (fps_inv F) n = (if n = 0 then 0 else ((-n)^(n-1) / fact n))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "proof (induction n rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y.\n           y < x \\<Longrightarrow>\n           fps_inv F $ y =\n           (if y = 0 then 0\n            else (- real y) ^ (y - 1) / fact y)) \\<Longrightarrow>\n       fps_inv F $ x = (if x = 0 then 0 else (- real x) ^ (x - 1) / fact x)", "case (less n)"], ["proof (state)\nthis:\n  ?y < n \\<Longrightarrow>\n  fps_inv F $ ?y = (if ?y = 0 then 0 else (- real ?y) ^ (?y - 1) / fact ?y)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y.\n           y < x \\<Longrightarrow>\n           fps_inv F $ y =\n           (if y = 0 then 0\n            else (- real y) ^ (y - 1) / fact y)) \\<Longrightarrow>\n       fps_inv F $ x = (if x = 0 then 0 else (- real x) ^ (x - 1) / fact x)", "consider \"n = 0\" | \"n = 1\" | \"n > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = 0 \\<Longrightarrow> thesis; n = 1 \\<Longrightarrow> thesis;\n     1 < n \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by force"], ["proof (state)\nthis:\n  \\<lbrakk>n = 0 \\<Longrightarrow> ?thesis; n = 1 \\<Longrightarrow> ?thesis;\n   1 < n \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y.\n           y < x \\<Longrightarrow>\n           fps_inv F $ y =\n           (if y = 0 then 0\n            else (- real y) ^ (y - 1) / fact y)) \\<Longrightarrow>\n       fps_inv F $ x = (if x = 0 then 0 else (- real x) ^ (x - 1) / fact x)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>n = 0 \\<Longrightarrow> ?thesis; n = 1 \\<Longrightarrow> ?thesis;\n   1 < n \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "case 3"], ["proof (state)\nthis:\n  1 < n\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "hence \"fps_nth (fps_inv F) n = -(\\<Sum>i=0..n-1. fps_nth (fps_inv F) i * fps_nth (F ^ i) n)\"\n        (is \"_ = -?S\")"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. fps_inv F $ n = - (\\<Sum>i = 0..n - 1. fps_inv F $ i * F ^ i $ n)", "by (cases n) (auto simp: fps_inv_def F_def)"], ["proof (state)\nthis:\n  fps_inv F $ n = - (\\<Sum>i = 0..n - 1. fps_inv F $ i * F ^ i $ n)\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "also"], ["proof (state)\nthis:\n  fps_inv F $ n = - (\\<Sum>i = 0..n - 1. fps_inv F $ i * F ^ i $ n)\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "have \"?S = (\\<Sum>i=1..<n. fps_nth (fps_inv F) i * fps_nth (F ^ i) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..n - 1. fps_inv F $ i * F ^ i $ n) =\n    (\\<Sum>i = 1..<n. fps_inv F $ i * F ^ i $ n)", "using less[of 1] 3"], ["proof (prove)\nusing this:\n  1 < n \\<Longrightarrow>\n  fps_inv F $ 1 = (if 1 = 0 then 0 else (- real 1) ^ (1 - 1) / fact 1)\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..n - 1. fps_inv F $ i * F ^ i $ n) =\n    (\\<Sum>i = 1..<n. fps_inv F $ i * F ^ i $ n)", "by (intro sum.mono_neutral_right) (auto simp: not_le)"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..n - 1. fps_inv F $ i * F ^ i $ n) =\n  (\\<Sum>i = 1..<n. fps_inv F $ i * F ^ i $ n)\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..n - 1. fps_inv F $ i * F ^ i $ n) =\n  (\\<Sum>i = 1..<n. fps_inv F $ i * F ^ i $ n)\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "have \"\\<dots> = (-1) ^ (n+1) / fact n *\n                        (\\<Sum>i=1..<n. ((-1)^(n - i) * real (n choose i) * real i ^ (n - 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..<n. fps_inv F $ i * F ^ i $ n) =\n    (- 1) ^ (n + 1) / fact n *\n    (\\<Sum>i = 1..<n.\n        (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1))", "unfolding sum_divide_distrib sum_distrib_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..<n. fps_inv F $ i * F ^ i $ n) =\n    (\\<Sum>n = 1..<n.\n        (- 1) ^ (n + 1) / fact n *\n        ((- 1) ^ (n - n) * real (n choose n) * real n ^ (n - 1)))", "proof (intro sum.cong, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. {1..<n} = {1..<n}\n 2. \\<And>x.\n       x \\<in> {1..<n} \\<Longrightarrow>\n       fps_inv F $ x * F ^ x $ n =\n       (- 1) ^ (n + 1) / fact n *\n       ((- 1) ^ (n - x) * real (n choose x) * real x ^ (n - 1))", "case (2 i)"], ["proof (state)\nthis:\n  i \\<in> {1..<n}\n\ngoal (2 subgoals):\n 1. {1..<n} = {1..<n}\n 2. \\<And>x.\n       x \\<in> {1..<n} \\<Longrightarrow>\n       fps_inv F $ x * F ^ x $ n =\n       (- 1) ^ (n + 1) / fact n *\n       ((- 1) ^ (n - x) * real (n choose x) * real x ^ (n - 1))", "hence \"fps_nth (fps_inv F) i * fps_nth (F ^ i) n =\n                 (-1) ^ (i - 1) * real (i ^ (i - 1) * i ^ (n - i)) *\n                 (fact n / (fact i * fact (n - i)) / fact n)\""], ["proof (prove)\nusing this:\n  i \\<in> {1..<n}\n\ngoal (1 subgoal):\n 1. fps_inv F $ i * F ^ i $ n =\n    (- 1) ^ (i - 1) * real (i ^ (i - 1) * i ^ (n - i)) *\n    (fact n / (fact i * fact (n - i)) / fact n)", "using less.IH[of i]"], ["proof (prove)\nusing this:\n  i \\<in> {1..<n}\n  i < n \\<Longrightarrow>\n  fps_inv F $ i = (if i = 0 then 0 else (- real i) ^ (i - 1) / fact i)\n\ngoal (1 subgoal):\n 1. fps_inv F $ i * F ^ i $ n =\n    (- 1) ^ (i - 1) * real (i ^ (i - 1) * i ^ (n - i)) *\n    (fact n / (fact i * fact (n - i)) / fact n)", "by (simp add: F_power less fps_X_power_mult_nth power_minus')"], ["proof (state)\nthis:\n  fps_inv F $ i * F ^ i $ n =\n  (- 1) ^ (i - 1) * real (i ^ (i - 1) * i ^ (n - i)) *\n  (fact n / (fact i * fact (n - i)) / fact n)\n\ngoal (2 subgoals):\n 1. {1..<n} = {1..<n}\n 2. \\<And>x.\n       x \\<in> {1..<n} \\<Longrightarrow>\n       fps_inv F $ x * F ^ x $ n =\n       (- 1) ^ (n + 1) / fact n *\n       ((- 1) ^ (n - x) * real (n choose x) * real x ^ (n - 1))", "also"], ["proof (state)\nthis:\n  fps_inv F $ i * F ^ i $ n =\n  (- 1) ^ (i - 1) * real (i ^ (i - 1) * i ^ (n - i)) *\n  (fact n / (fact i * fact (n - i)) / fact n)\n\ngoal (2 subgoals):\n 1. {1..<n} = {1..<n}\n 2. \\<And>x.\n       x \\<in> {1..<n} \\<Longrightarrow>\n       fps_inv F $ x * F ^ x $ n =\n       (- 1) ^ (n + 1) / fact n *\n       ((- 1) ^ (n - x) * real (n choose x) * real x ^ (n - 1))", "have \"(fact n / (fact i * fact (n - i))) = real (n choose i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fact n / (fact i * fact (n - i)) = real (n choose i)", "using 2"], ["proof (prove)\nusing this:\n  i \\<in> {1..<n}\n\ngoal (1 subgoal):\n 1. fact n / (fact i * fact (n - i)) = real (n choose i)", "by (subst binomial_fact) auto"], ["proof (state)\nthis:\n  fact n / (fact i * fact (n - i)) = real (n choose i)\n\ngoal (2 subgoals):\n 1. {1..<n} = {1..<n}\n 2. \\<And>x.\n       x \\<in> {1..<n} \\<Longrightarrow>\n       fps_inv F $ x * F ^ x $ n =\n       (- 1) ^ (n + 1) / fact n *\n       ((- 1) ^ (n - x) * real (n choose x) * real x ^ (n - 1))", "also"], ["proof (state)\nthis:\n  fact n / (fact i * fact (n - i)) = real (n choose i)\n\ngoal (2 subgoals):\n 1. {1..<n} = {1..<n}\n 2. \\<And>x.\n       x \\<in> {1..<n} \\<Longrightarrow>\n       fps_inv F $ x * F ^ x $ n =\n       (- 1) ^ (n + 1) / fact n *\n       ((- 1) ^ (n - x) * real (n choose x) * real x ^ (n - 1))", "have \"i ^ (i - 1) * i ^ (n - i) = i ^ (n - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i ^ (i - 1) * i ^ (n - i) = i ^ (n - 1)", "using 2"], ["proof (prove)\nusing this:\n  i \\<in> {1..<n}\n\ngoal (1 subgoal):\n 1. i ^ (i - 1) * i ^ (n - i) = i ^ (n - 1)", "by (subst power_add [symmetric]) auto"], ["proof (state)\nthis:\n  i ^ (i - 1) * i ^ (n - i) = i ^ (n - 1)\n\ngoal (2 subgoals):\n 1. {1..<n} = {1..<n}\n 2. \\<And>x.\n       x \\<in> {1..<n} \\<Longrightarrow>\n       fps_inv F $ x * F ^ x $ n =\n       (- 1) ^ (n + 1) / fact n *\n       ((- 1) ^ (n - x) * real (n choose x) * real x ^ (n - 1))", "also"], ["proof (state)\nthis:\n  i ^ (i - 1) * i ^ (n - i) = i ^ (n - 1)\n\ngoal (2 subgoals):\n 1. {1..<n} = {1..<n}\n 2. \\<And>x.\n       x \\<in> {1..<n} \\<Longrightarrow>\n       fps_inv F $ x * F ^ x $ n =\n       (- 1) ^ (n + 1) / fact n *\n       ((- 1) ^ (n - x) * real (n choose x) * real x ^ (n - 1))", "have \"(-1) ^ (i - 1) = ((-1) ^ (n+1) * (-1)^(n-i) :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- 1) ^ (i - 1) = (- 1) ^ (n + 1) * (- 1) ^ (n - i)", "using 2"], ["proof (prove)\nusing this:\n  i \\<in> {1..<n}\n\ngoal (1 subgoal):\n 1. (- 1) ^ (i - 1) = (- 1) ^ (n + 1) * (- 1) ^ (n - i)", "by (subst power_add [symmetric]) (auto simp: minus_one_power_iff)"], ["proof (state)\nthis:\n  (- 1) ^ (i - 1) = (- 1) ^ (n + 1) * (- 1) ^ (n - i)\n\ngoal (2 subgoals):\n 1. {1..<n} = {1..<n}\n 2. \\<And>x.\n       x \\<in> {1..<n} \\<Longrightarrow>\n       fps_inv F $ x * F ^ x $ n =\n       (- 1) ^ (n + 1) / fact n *\n       ((- 1) ^ (n - x) * real (n choose x) * real x ^ (n - 1))", "finally"], ["proof (chain)\npicking this:\n  fps_inv F $ i * F ^ i $ n =\n  (- 1) ^ (n + 1) * (- 1) ^ (n - i) * real (i ^ (n - 1)) *\n  (real (n choose i) / fact n)", "show ?case"], ["proof (prove)\nusing this:\n  fps_inv F $ i * F ^ i $ n =\n  (- 1) ^ (n + 1) * (- 1) ^ (n - i) * real (i ^ (n - 1)) *\n  (real (n choose i) / fact n)\n\ngoal (1 subgoal):\n 1. fps_inv F $ i * F ^ i $ n =\n    (- 1) ^ (n + 1) / fact n *\n    ((- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1))", "by simp"], ["proof (state)\nthis:\n  fps_inv F $ i * F ^ i $ n =\n  (- 1) ^ (n + 1) / fact n *\n  ((- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1))\n\ngoal (1 subgoal):\n 1. {1..<n} = {1..<n}", "qed auto"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..<n. fps_inv F $ i * F ^ i $ n) =\n  (- 1) ^ (n + 1) / fact n *\n  (\\<Sum>i = 1..<n. (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1))\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..<n. fps_inv F $ i * F ^ i $ n) =\n  (- 1) ^ (n + 1) / fact n *\n  (\\<Sum>i = 1..<n. (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1))\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "have \"(\\<Sum>i=1..<n. ((-1)^(n - i) * real (n choose i) * real i ^ (n - 1))) =\n                 (\\<Sum>i\\<in>{..n}-{n}. ((-1)^(n - i) * real (n choose i) * real i ^ (n - 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..<n.\n        (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1)) =\n    (\\<Sum>i\\<in>{..n} - {n}.\n       (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1))", "using 3"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..<n.\n        (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1)) =\n    (\\<Sum>i\\<in>{..n} - {n}.\n       (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1))", "by (intro sum.mono_neutral_left) auto"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..<n.\n      (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1)) =\n  (\\<Sum>i\\<in>{..n} - {n}.\n     (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1))\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..<n.\n      (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1)) =\n  (\\<Sum>i\\<in>{..n} - {n}.\n     (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1))\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "have \"\\<dots> = (\\<Sum>i\\<le>n. ((-1)^(n - i) * real (n choose i) * real i ^ (n - 1))) -\n                      real n ^ (n - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{..n} - {n}.\n       (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1)) =\n    (\\<Sum>i\\<le>n.\n        (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1)) -\n    real n ^ (n - 1)", "by (subst (2) sum.remove[of _ n]) auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{..n} - {n}.\n     (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1)) =\n  (\\<Sum>i\\<le>n. (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1)) -\n  real n ^ (n - 1)\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{..n} - {n}.\n     (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1)) =\n  (\\<Sum>i\\<le>n. (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1)) -\n  real n ^ (n - 1)\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "have \"(\\<Sum>i\\<le>n. ((-1)^(n - i) * real (n choose i) * real i ^ (n - 1))) =\n                   real (Stirling (n - 1) n) * fact n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<le>n.\n        (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1)) =\n    real (Stirling (n - 1) n) * fact n", "by (subst Stirling_closed_form) auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<le>n. (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1)) =\n  real (Stirling (n - 1) n) * fact n\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<le>n. (- 1) ^ (n - i) * real (n choose i) * real i ^ (n - 1)) =\n  real (Stirling (n - 1) n) * fact n\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "have \"Stirling (n - 1) n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Stirling (n - 1) n = 0", "using 3"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. Stirling (n - 1) n = 0", "by (subst Stirling_less) auto"], ["proof (state)\nthis:\n  Stirling (n - 1) n = 0\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "finally"], ["proof (chain)\npicking this:\n  fps_inv F $ n =\n  - ((- 1) ^ (n + 1) / fact n * (real 0 * fact n - real n ^ (n - 1)))", "have \"fps_nth (fps_inv F) n = -((-1) ^ n * real n ^ (n - 1) / fact n)\""], ["proof (prove)\nusing this:\n  fps_inv F $ n =\n  - ((- 1) ^ (n + 1) / fact n * (real 0 * fact n - real n ^ (n - 1)))\n\ngoal (1 subgoal):\n 1. fps_inv F $ n = - ((- 1) ^ n * real n ^ (n - 1) / fact n)", "by simp"], ["proof (state)\nthis:\n  fps_inv F $ n = - ((- 1) ^ n * real n ^ (n - 1) / fact n)\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "also"], ["proof (state)\nthis:\n  fps_inv F $ n = - ((- 1) ^ n * real n ^ (n - 1) / fact n)\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "have \"\\<dots> = (-real n) ^ (n - 1) / fact n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - ((- 1) ^ n * real n ^ (n - 1) / fact n) =\n    (- real n) ^ (n - 1) / fact n", "using 3"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. - ((- 1) ^ n * real n ^ (n - 1) / fact n) =\n    (- real n) ^ (n - 1) / fact n", "by (subst power_minus) (auto simp: minus_one_power_iff)"], ["proof (state)\nthis:\n  - ((- 1) ^ n * real n ^ (n - 1) / fact n) = (- real n) ^ (n - 1) / fact n\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 3. 1 < n \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "finally"], ["proof (chain)\npicking this:\n  fps_inv F $ n = (- real n) ^ (n - 1) / fact n", "show ?thesis"], ["proof (prove)\nusing this:\n  fps_inv F $ n = (- real n) ^ (n - 1) / fact n\n\ngoal (1 subgoal):\n 1. fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "using 3"], ["proof (prove)\nusing this:\n  fps_inv F $ n = (- real n) ^ (n - 1) / fact n\n  1 < n\n\ngoal (1 subgoal):\n 1. fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "by simp"], ["proof (state)\nthis:\n  fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n 2. n = 1 \\<Longrightarrow>\n    fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "qed (auto simp: fps_inv_def F_def)"], ["proof (state)\nthis:\n  fps_inv F $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fps_inv F $ ?n = (if ?n = 0 then 0 else (- real ?n) ^ (?n - 1) / fact ?n)\n\ngoal (1 subgoal):\n 1. fps_Lambert_W $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  fps_inv F $ ?n = (if ?n = 0 then 0 else (- real ?n) ^ (?n - 1) / fact ?n)\n\ngoal (1 subgoal):\n 1. fps_Lambert_W $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)", "by (simp add: F_def fps_Lambert_W_def)"], ["proof (state)\nthis:\n  fps_Lambert_W $ n = (if n = 0 then 0 else (- real n) ^ (n - 1) / fact n)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* TODO: Move *)"], ["", "text \\<open>\n  Next, we need a few auxiliary lemmas about summability and convergence radii that should\n  go into Isabelle's standard library at some point:\n\\<close>"], ["", "lemma summable_comparison_test_bigo:\n  fixes f :: \"nat \\<Rightarrow> real\"\n  assumes \"summable (\\<lambda>n. norm (g n))\" \"f \\<in> O(g)\"\n  shows   \"summable f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summable f", "from \\<open>f \\<in> O(g)\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> O(g)", "obtain C where C: \"eventually (\\<lambda>x. norm (f x) \\<le> C * norm (g x)) at_top\""], ["proof (prove)\nusing this:\n  f \\<in> O(g)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<forall>\\<^sub>F x in sequentially.\n           norm (f x) \\<le> C * norm (g x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: landau_o.bigE)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in sequentially. norm (f x) \\<le> C * norm (g x)\n\ngoal (1 subgoal):\n 1. summable f", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially. norm (f x) \\<le> C * norm (g x)\n\ngoal (1 subgoal):\n 1. summable f", "by (rule summable_comparison_test_ev) (insert assms, auto intro: summable_mult)"], ["proof (state)\nthis:\n  summable f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma summable_comparison_test_bigo':\n  assumes \"summable (\\<lambda>n. norm (g n))\"\n  assumes \"(\\<lambda>n. norm (f n :: 'a :: banach)) \\<in> O(\\<lambda>n. norm (g n))\"\n  shows   \"summable f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable f", "proof (rule summable_norm_cancel, rule summable_comparison_test_bigo)"], ["proof (state)\ngoal (2 subgoals):\n 1. summable (\\<lambda>n. norm (?g2 n))\n 2. (\\<lambda>n. norm (f n)) \\<in> O(?g2)", "show \"summable (\\<lambda>n. norm (norm (g n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. norm (norm (g n)))", "using assms"], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. norm (g n))\n  (\\<lambda>n. norm (f n)) \\<in> O(\\<lambda>n. norm (g n))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. norm (norm (g n)))", "by simp"], ["proof (state)\nthis:\n  summable (\\<lambda>n. norm (norm (g n)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. norm (f n)) \\<in> O(\\<lambda>n. norm (g n))", "qed fact+"], ["", "lemma conv_radius_conv_Sup':\n  fixes f :: \"nat \\<Rightarrow> 'a :: {banach, real_normed_div_algebra}\"\n  shows \"conv_radius f = Sup {r. \\<forall>z. ereal (norm z) < r \\<longrightarrow> summable (\\<lambda>n. norm (f n * z ^ n))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_radius f =\n    Sup {r. \\<forall>z.\n               ereal (norm z) < r \\<longrightarrow>\n               summable (\\<lambda>n. norm (f n * z ^ n))}", "proof (rule Sup_eqI [symmetric], goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {r. \\<forall>z.\n                      ereal (norm z) < r \\<longrightarrow>\n                      summable\n                       (\\<lambda>n. norm (f n * z ^ n))} \\<Longrightarrow>\n       y \\<le> conv_radius f\n 2. \\<And>y.\n       (\\<And>z.\n           z \\<in> {r. \\<forall>z.\n                          ereal (norm z) < r \\<longrightarrow>\n                          summable\n                           (\\<lambda>n.\n                               norm (f n * z ^ n))} \\<Longrightarrow>\n           z \\<le> y) \\<Longrightarrow>\n       conv_radius f \\<le> y", "case (1 r)"], ["proof (state)\nthis:\n  r \\<in> {r. \\<forall>z.\n                 ereal (norm z) < r \\<longrightarrow>\n                 summable (\\<lambda>n. norm (f n * z ^ n))}\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {r. \\<forall>z.\n                      ereal (norm z) < r \\<longrightarrow>\n                      summable\n                       (\\<lambda>n. norm (f n * z ^ n))} \\<Longrightarrow>\n       y \\<le> conv_radius f\n 2. \\<And>y.\n       (\\<And>z.\n           z \\<in> {r. \\<forall>z.\n                          ereal (norm z) < r \\<longrightarrow>\n                          summable\n                           (\\<lambda>n.\n                               norm (f n * z ^ n))} \\<Longrightarrow>\n           z \\<le> y) \\<Longrightarrow>\n       conv_radius f \\<le> y", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<le> conv_radius f", "proof (rule conv_radius_geI_ex')"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ra.\n       \\<lbrakk>0 < ra; ereal ra < r\\<rbrakk>\n       \\<Longrightarrow> summable (\\<lambda>n. f n * of_real ra ^ n)", "fix r' :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ra.\n       \\<lbrakk>0 < ra; ereal ra < r\\<rbrakk>\n       \\<Longrightarrow> summable (\\<lambda>n. f n * of_real ra ^ n)", "assume r': \"r' > 0\" \"ereal r' < r\""], ["proof (state)\nthis:\n  0 < r'\n  ereal r' < r\n\ngoal (1 subgoal):\n 1. \\<And>ra.\n       \\<lbrakk>0 < ra; ereal ra < r\\<rbrakk>\n       \\<Longrightarrow> summable (\\<lambda>n. f n * of_real ra ^ n)", "show \"summable (\\<lambda>n. f n * of_real r' ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. f n * of_real r' ^ n)", "by (rule summable_norm_cancel) (use 1 r' in auto)"], ["proof (state)\nthis:\n  summable (\\<lambda>n. f n * of_real r' ^ n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r \\<le> conv_radius f\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       (\\<And>z.\n           z \\<in> {r. \\<forall>z.\n                          ereal (norm z) < r \\<longrightarrow>\n                          summable\n                           (\\<lambda>n.\n                               norm (f n * z ^ n))} \\<Longrightarrow>\n           z \\<le> y) \\<Longrightarrow>\n       conv_radius f \\<le> y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       (\\<And>z.\n           z \\<in> {r. \\<forall>z.\n                          ereal (norm z) < r \\<longrightarrow>\n                          summable\n                           (\\<lambda>n.\n                               norm (f n * z ^ n))} \\<Longrightarrow>\n           z \\<le> y) \\<Longrightarrow>\n       conv_radius f \\<le> y", "case (2 r)"], ["proof (state)\nthis:\n  ?z \\<in> {r. \\<forall>z.\n                  ereal (norm z) < r \\<longrightarrow>\n                  summable\n                   (\\<lambda>n. norm (f n * z ^ n))} \\<Longrightarrow>\n  ?z \\<le> r\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       (\\<And>z.\n           z \\<in> {r. \\<forall>z.\n                          ereal (norm z) < r \\<longrightarrow>\n                          summable\n                           (\\<lambda>n.\n                               norm (f n * z ^ n))} \\<Longrightarrow>\n           z \\<le> y) \\<Longrightarrow>\n       conv_radius f \\<le> y", "from 2[of 0]"], ["proof (chain)\npicking this:\n  0 \\<in> {r. \\<forall>z.\n                 ereal (norm z) < r \\<longrightarrow>\n                 summable\n                  (\\<lambda>n. norm (f n * z ^ n))} \\<Longrightarrow>\n  0 \\<le> r", "have r: \"r \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<in> {r. \\<forall>z.\n                 ereal (norm z) < r \\<longrightarrow>\n                 summable\n                  (\\<lambda>n. norm (f n * z ^ n))} \\<Longrightarrow>\n  0 \\<le> r\n\ngoal (1 subgoal):\n 1. 0 \\<le> r", "by auto"], ["proof (state)\nthis:\n  0 \\<le> r\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       (\\<And>z.\n           z \\<in> {r. \\<forall>z.\n                          ereal (norm z) < r \\<longrightarrow>\n                          summable\n                           (\\<lambda>n.\n                               norm (f n * z ^ n))} \\<Longrightarrow>\n           z \\<le> y) \\<Longrightarrow>\n       conv_radius f \\<le> y", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_radius f \\<le> r", "proof (intro conv_radius_leI_ex' r)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ra.\n       \\<lbrakk>0 < ra; r < ereal ra\\<rbrakk>\n       \\<Longrightarrow> \\<not> summable (\\<lambda>n. f n * of_real ra ^ n)", "fix R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ra.\n       \\<lbrakk>0 < ra; r < ereal ra\\<rbrakk>\n       \\<Longrightarrow> \\<not> summable (\\<lambda>n. f n * of_real ra ^ n)", "assume R: \"R > 0\" \"ereal R > r\""], ["proof (state)\nthis:\n  0 < R\n  r < ereal R\n\ngoal (1 subgoal):\n 1. \\<And>ra.\n       \\<lbrakk>0 < ra; r < ereal ra\\<rbrakk>\n       \\<Longrightarrow> \\<not> summable (\\<lambda>n. f n * of_real ra ^ n)", "with r"], ["proof (chain)\npicking this:\n  0 \\<le> r\n  0 < R\n  r < ereal R", "obtain r' where [simp]: \"r = ereal r'\""], ["proof (prove)\nusing this:\n  0 \\<le> r\n  0 < R\n  r < ereal R\n\ngoal (1 subgoal):\n 1. (\\<And>r'. r = ereal r' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases r) auto"], ["proof (state)\nthis:\n  r = ereal r'\n\ngoal (1 subgoal):\n 1. \\<And>ra.\n       \\<lbrakk>0 < ra; r < ereal ra\\<rbrakk>\n       \\<Longrightarrow> \\<not> summable (\\<lambda>n. f n * of_real ra ^ n)", "show \"\\<not>summable (\\<lambda>n. f n * of_real R ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> summable (\\<lambda>n. f n * of_real R ^ n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. f n * of_real R ^ n) \\<Longrightarrow> False", "assume *: \"summable (\\<lambda>n. f n * of_real R ^ n)\""], ["proof (state)\nthis:\n  summable (\\<lambda>n. f n * of_real R ^ n)\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. f n * of_real R ^ n) \\<Longrightarrow> False", "define R' where \"R' = (R + r') / 2\""], ["proof (state)\nthis:\n  R' = (R + r') / 2\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. f n * of_real R ^ n) \\<Longrightarrow> False", "from R"], ["proof (chain)\npicking this:\n  0 < R\n  r < ereal R", "have R': \"R' > r'\" \"R' < R\""], ["proof (prove)\nusing this:\n  0 < R\n  r < ereal R\n\ngoal (1 subgoal):\n 1. r' < R' &&& R' < R", "by (simp_all add: R'_def)"], ["proof (state)\nthis:\n  r' < R'\n  R' < R\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. f n * of_real R ^ n) \\<Longrightarrow> False", "hence \"\\<forall>z. norm z < R' \\<longrightarrow> summable (\\<lambda>n. norm (f n * z ^ n))\""], ["proof (prove)\nusing this:\n  r' < R'\n  R' < R\n\ngoal (1 subgoal):\n 1. \\<forall>z.\n       norm z < R' \\<longrightarrow>\n       summable (\\<lambda>n. norm (f n * z ^ n))", "using powser_insidea[OF *]"], ["proof (prove)\nusing this:\n  r' < R'\n  R' < R\n  norm ?z < norm (of_real R) \\<Longrightarrow>\n  summable (\\<lambda>n. norm (f n * ?z ^ n))\n\ngoal (1 subgoal):\n 1. \\<forall>z.\n       norm z < R' \\<longrightarrow>\n       summable (\\<lambda>n. norm (f n * z ^ n))", "by auto"], ["proof (state)\nthis:\n  \\<forall>z.\n     norm z < R' \\<longrightarrow> summable (\\<lambda>n. norm (f n * z ^ n))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. f n * of_real R ^ n) \\<Longrightarrow> False", "from 2[of R'] and this"], ["proof (chain)\npicking this:\n  ereal R'\n  \\<in> {r. \\<forall>z.\n               ereal (norm z) < r \\<longrightarrow>\n               summable (\\<lambda>n. norm (f n * z ^ n))} \\<Longrightarrow>\n  ereal R' \\<le> r\n  \\<forall>z.\n     norm z < R' \\<longrightarrow> summable (\\<lambda>n. norm (f n * z ^ n))", "have \"R' \\<le> r'\""], ["proof (prove)\nusing this:\n  ereal R'\n  \\<in> {r. \\<forall>z.\n               ereal (norm z) < r \\<longrightarrow>\n               summable (\\<lambda>n. norm (f n * z ^ n))} \\<Longrightarrow>\n  ereal R' \\<le> r\n  \\<forall>z.\n     norm z < R' \\<longrightarrow> summable (\\<lambda>n. norm (f n * z ^ n))\n\ngoal (1 subgoal):\n 1. R' \\<le> r'", "by auto"], ["proof (state)\nthis:\n  R' \\<le> r'\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. f n * of_real R ^ n) \\<Longrightarrow> False", "with \\<open>R' > r'\\<close>"], ["proof (chain)\npicking this:\n  r' < R'\n  R' \\<le> r'", "show False"], ["proof (prove)\nusing this:\n  r' < R'\n  R' \\<le> r'\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> summable (\\<lambda>n. f n * of_real R ^ n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  conv_radius f \\<le> r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bigo_imp_conv_radius_ge:\n  fixes f g :: \"nat \\<Rightarrow> 'a :: {banach, real_normed_field}\"\n  assumes \"f \\<in> O(g)\"\n  shows   \"conv_radius f \\<ge> conv_radius g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_radius g \\<le> conv_radius f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. conv_radius g \\<le> conv_radius f", "have \"conv_radius g = Sup {r. \\<forall>z. ereal (norm z) < r \\<longrightarrow> summable (\\<lambda>n. norm (g n * z ^ n))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_radius g =\n    Sup {r. \\<forall>z.\n               ereal (norm z) < r \\<longrightarrow>\n               summable (\\<lambda>n. norm (g n * z ^ n))}", "by (simp add: conv_radius_conv_Sup')"], ["proof (state)\nthis:\n  conv_radius g =\n  Sup {r. \\<forall>z.\n             ereal (norm z) < r \\<longrightarrow>\n             summable (\\<lambda>n. norm (g n * z ^ n))}\n\ngoal (1 subgoal):\n 1. conv_radius g \\<le> conv_radius f", "also"], ["proof (state)\nthis:\n  conv_radius g =\n  Sup {r. \\<forall>z.\n             ereal (norm z) < r \\<longrightarrow>\n             summable (\\<lambda>n. norm (g n * z ^ n))}\n\ngoal (1 subgoal):\n 1. conv_radius g \\<le> conv_radius f", "have \"\\<dots> \\<le> Sup {r. \\<forall>z. ereal (norm z) < r \\<longrightarrow> summable (\\<lambda>n. f n * z ^ n)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup {r. \\<forall>z.\n               ereal (norm z) < r \\<longrightarrow>\n               summable (\\<lambda>n. norm (g n * z ^ n))}\n    \\<le> Sup {r. \\<forall>z.\n                     ereal (norm z) < r \\<longrightarrow>\n                     summable (\\<lambda>n. f n * z ^ n)}", "proof (rule Sup_subset_mono, safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>\\<forall>z.\n                   ereal (norm z) < x \\<longrightarrow>\n                   summable (\\<lambda>n. norm (g n * z ^ n));\n        ereal (norm z) < x\\<rbrakk>\n       \\<Longrightarrow> summable (\\<lambda>n. f n * z ^ n)", "fix r :: ereal and z :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>\\<forall>z.\n                   ereal (norm z) < x \\<longrightarrow>\n                   summable (\\<lambda>n. norm (g n * z ^ n));\n        ereal (norm z) < x\\<rbrakk>\n       \\<Longrightarrow> summable (\\<lambda>n. f n * z ^ n)", "assume g: \"\\<forall>z. ereal (norm z) < r \\<longrightarrow> summable (\\<lambda>n. norm (g n * z ^ n))\""], ["proof (state)\nthis:\n  \\<forall>z.\n     ereal (norm z) < r \\<longrightarrow>\n     summable (\\<lambda>n. norm (g n * z ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>\\<forall>z.\n                   ereal (norm z) < x \\<longrightarrow>\n                   summable (\\<lambda>n. norm (g n * z ^ n));\n        ereal (norm z) < x\\<rbrakk>\n       \\<Longrightarrow> summable (\\<lambda>n. f n * z ^ n)", "assume z: \"ereal (norm z) < r\""], ["proof (state)\nthis:\n  ereal (norm z) < r\n\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>\\<forall>z.\n                   ereal (norm z) < x \\<longrightarrow>\n                   summable (\\<lambda>n. norm (g n * z ^ n));\n        ereal (norm z) < x\\<rbrakk>\n       \\<Longrightarrow> summable (\\<lambda>n. f n * z ^ n)", "from g z"], ["proof (chain)\npicking this:\n  \\<forall>z.\n     ereal (norm z) < r \\<longrightarrow>\n     summable (\\<lambda>n. norm (g n * z ^ n))\n  ereal (norm z) < r", "have \"summable (\\<lambda>n. norm (g n * z ^ n))\""], ["proof (prove)\nusing this:\n  \\<forall>z.\n     ereal (norm z) < r \\<longrightarrow>\n     summable (\\<lambda>n. norm (g n * z ^ n))\n  ereal (norm z) < r\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. norm (g n * z ^ n))", "by blast"], ["proof (state)\nthis:\n  summable (\\<lambda>n. norm (g n * z ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>\\<forall>z.\n                   ereal (norm z) < x \\<longrightarrow>\n                   summable (\\<lambda>n. norm (g n * z ^ n));\n        ereal (norm z) < x\\<rbrakk>\n       \\<Longrightarrow> summable (\\<lambda>n. f n * z ^ n)", "moreover"], ["proof (state)\nthis:\n  summable (\\<lambda>n. norm (g n * z ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>\\<forall>z.\n                   ereal (norm z) < x \\<longrightarrow>\n                   summable (\\<lambda>n. norm (g n * z ^ n));\n        ereal (norm z) < x\\<rbrakk>\n       \\<Longrightarrow> summable (\\<lambda>n. f n * z ^ n)", "have \"(\\<lambda>n. norm (f n * z ^ n)) \\<in> O(\\<lambda>n. norm (g n * z ^ n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. norm (f n * z ^ n)) \\<in> O(\\<lambda>n. norm (g n * z ^ n))", "unfolding landau_o.big.norm_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. f n * z ^ n) \\<in> O(\\<lambda>n. g n * z ^ n)", "by (intro landau_o.big.mult assms) auto"], ["proof (state)\nthis:\n  (\\<lambda>n. norm (f n * z ^ n)) \\<in> O(\\<lambda>n. norm (g n * z ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>\\<forall>z.\n                   ereal (norm z) < x \\<longrightarrow>\n                   summable (\\<lambda>n. norm (g n * z ^ n));\n        ereal (norm z) < x\\<rbrakk>\n       \\<Longrightarrow> summable (\\<lambda>n. f n * z ^ n)", "ultimately"], ["proof (chain)\npicking this:\n  summable (\\<lambda>n. norm (g n * z ^ n))\n  (\\<lambda>n. norm (f n * z ^ n)) \\<in> O(\\<lambda>n. norm (g n * z ^ n))", "show \"summable (\\<lambda>n. f n * z ^ n)\""], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. norm (g n * z ^ n))\n  (\\<lambda>n. norm (f n * z ^ n)) \\<in> O(\\<lambda>n. norm (g n * z ^ n))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. f n * z ^ n)", "by (rule summable_comparison_test_bigo')"], ["proof (state)\nthis:\n  summable (\\<lambda>n. f n * z ^ n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Sup {r. \\<forall>z.\n             ereal (norm z) < r \\<longrightarrow>\n             summable (\\<lambda>n. norm (g n * z ^ n))}\n  \\<le> Sup {r. \\<forall>z.\n                   ereal (norm z) < r \\<longrightarrow>\n                   summable (\\<lambda>n. f n * z ^ n)}\n\ngoal (1 subgoal):\n 1. conv_radius g \\<le> conv_radius f", "also"], ["proof (state)\nthis:\n  Sup {r. \\<forall>z.\n             ereal (norm z) < r \\<longrightarrow>\n             summable (\\<lambda>n. norm (g n * z ^ n))}\n  \\<le> Sup {r. \\<forall>z.\n                   ereal (norm z) < r \\<longrightarrow>\n                   summable (\\<lambda>n. f n * z ^ n)}\n\ngoal (1 subgoal):\n 1. conv_radius g \\<le> conv_radius f", "have \"\\<dots> = conv_radius f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup {r. \\<forall>z.\n               ereal (norm z) < r \\<longrightarrow>\n               summable (\\<lambda>n. f n * z ^ n)} =\n    conv_radius f", "by (simp add: conv_radius_conv_Sup)"], ["proof (state)\nthis:\n  Sup {r. \\<forall>z.\n             ereal (norm z) < r \\<longrightarrow>\n             summable (\\<lambda>n. f n * z ^ n)} =\n  conv_radius f\n\ngoal (1 subgoal):\n 1. conv_radius g \\<le> conv_radius f", "finally"], ["proof (chain)\npicking this:\n  conv_radius g \\<le> conv_radius f", "show ?thesis"], ["proof (prove)\nusing this:\n  conv_radius g \\<le> conv_radius f\n\ngoal (1 subgoal):\n 1. conv_radius g \\<le> conv_radius f", "."], ["proof (state)\nthis:\n  conv_radius g \\<le> conv_radius f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conv_radius_cong_bigtheta:\n  assumes \"f \\<in> \\<Theta>(g)\"\n  shows   \"conv_radius f = conv_radius g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_radius f = conv_radius g", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> \\<Theta>(g)\n\ngoal (1 subgoal):\n 1. conv_radius f = conv_radius g", "by (intro antisym bigo_imp_conv_radius_ge) (auto simp: bigtheta_def bigomega_iff_bigo)"], ["", "lemma conv_radius_eqI_smallomega_smallo:\n  fixes f :: \"nat \\<Rightarrow> 'a :: {real_normed_div_algebra, banach}\"\n  assumes \"\\<And>\\<epsilon>. \\<epsilon> > l \\<Longrightarrow> \\<epsilon> < inverse C \\<Longrightarrow> (\\<lambda>n. norm (f n)) \\<in> \\<omega>(\\<lambda>n. \\<epsilon> ^ n)\"\n  assumes \"\\<And>\\<epsilon>. \\<epsilon> < u \\<Longrightarrow> \\<epsilon> > inverse C \\<Longrightarrow> (\\<lambda>n. norm (f n)) \\<in> o(\\<lambda>n. \\<epsilon> ^ n)\"\n  assumes C: \"C > 0\" and lu: \"l > 0\" \"l < inverse C\" \"u > inverse C\"\n  shows   \"conv_radius f = ereal C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_radius f = ereal C", "proof (intro antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. conv_radius f \\<le> ereal C\n 2. ereal C \\<le> conv_radius f", "have \"0 < inverse C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < inverse C", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>l < ?\\<epsilon>; ?\\<epsilon> < inverse C\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n. norm (f n)) \\<in> \\<omega>((^) ?\\<epsilon>)\n  \\<lbrakk>?\\<epsilon> < u; inverse C < ?\\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n. norm (f n)) \\<in> o((^) ?\\<epsilon>)\n  0 < C\n  0 < l\n  l < inverse C\n  inverse C < u\n\ngoal (1 subgoal):\n 1. 0 < inverse C", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  0 < inverse C\n\ngoal (2 subgoals):\n 1. conv_radius f \\<le> ereal C\n 2. ereal C \\<le> conv_radius f", "also"], ["proof (state)\nthis:\n  0 < inverse C\n\ngoal (2 subgoals):\n 1. conv_radius f \\<le> ereal C\n 2. ereal C \\<le> conv_radius f", "have \"\\<dots> < u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse C < u", "by fact"], ["proof (state)\nthis:\n  inverse C < u\n\ngoal (2 subgoals):\n 1. conv_radius f \\<le> ereal C\n 2. ereal C \\<le> conv_radius f", "finally"], ["proof (chain)\npicking this:\n  0 < u", "have \"u > 0\""], ["proof (prove)\nusing this:\n  0 < u\n\ngoal (1 subgoal):\n 1. 0 < u", "by simp"], ["proof (state)\nthis:\n  0 < u\n\ngoal (2 subgoals):\n 1. conv_radius f \\<le> ereal C\n 2. ereal C \\<le> conv_radius f", "show \"conv_radius f \\<ge> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ereal C \\<le> conv_radius f", "unfolding conv_radius_altdef le_Liminf_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y<ereal C.\n       \\<forall>\\<^sub>F x in sequentially.\n          y < inverse (ereal (root x (norm (f x))))", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal C \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < inverse (ereal (root x (norm (f x))))", "fix c :: ereal"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal C \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < inverse (ereal (root x (norm (f x))))", "assume c: \"c < C\""], ["proof (state)\nthis:\n  c < ereal C\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal C \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < inverse (ereal (root x (norm (f x))))", "hence \"max c (inverse u) < ereal C\""], ["proof (prove)\nusing this:\n  c < ereal C\n\ngoal (1 subgoal):\n 1. max c (ereal (inverse u)) < ereal C", "using lu C \\<open>u > 0\\<close>"], ["proof (prove)\nusing this:\n  c < ereal C\n  0 < l\n  l < inverse C\n  inverse C < u\n  0 < C\n  0 < u\n\ngoal (1 subgoal):\n 1. max c (ereal (inverse u)) < ereal C", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  max c (ereal (inverse u)) < ereal C\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal C \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < inverse (ereal (root x (norm (f x))))", "from ereal_dense2[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>z. max c (ereal (inverse u)) < ereal z \\<and> ereal z < ereal C", "obtain c' where c': \"c < ereal c'\" \"inverse u < c'\" \"c' < C\""], ["proof (prove)\nusing this:\n  \\<exists>z. max c (ereal (inverse u)) < ereal z \\<and> ereal z < ereal C\n\ngoal (1 subgoal):\n 1. (\\<And>c'.\n        \\<lbrakk>c < ereal c'; inverse u < c'; c' < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c < ereal c'\n  inverse u < c'\n  c' < C\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal C \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < inverse (ereal (root x (norm (f x))))", "have \"inverse u > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < inverse u", "using \\<open>u > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < u\n\ngoal (1 subgoal):\n 1. 0 < inverse u", "by simp"], ["proof (state)\nthis:\n  0 < inverse u\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal C \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < inverse (ereal (root x (norm (f x))))", "also"], ["proof (state)\nthis:\n  0 < inverse u\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal C \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < inverse (ereal (root x (norm (f x))))", "have \"\\<dots> < c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse u < c'", "by fact"], ["proof (state)\nthis:\n  inverse u < c'\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal C \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < inverse (ereal (root x (norm (f x))))", "finally"], ["proof (chain)\npicking this:\n  0 < c'", "have \"c' > 0\""], ["proof (prove)\nusing this:\n  0 < c'\n\ngoal (1 subgoal):\n 1. 0 < c'", "."], ["proof (state)\nthis:\n  0 < c'\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal C \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < inverse (ereal (root x (norm (f x))))", "have \"\\<forall>\\<^sub>F x in sequentially. norm (norm (f x)) \\<le> 1/2 * norm (inverse c' ^ x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially.\n       norm (norm (f x)) \\<le> 1 / 2 * norm (inverse c' ^ x)", "using landau_o.smallD[OF assms(2)[of \"inverse c'\"], of \"1/2\"] c' C lu \\<open>c' > 0\\<close> c"], ["proof (prove)\nusing this:\n  \\<lbrakk>inverse c' < u; inverse C < inverse c'; 0 < 1 / 2\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F x in sequentially.\n                       norm (norm (f x)) \\<le> 1 / 2 * norm (inverse c' ^ x)\n  c < ereal c'\n  inverse u < c'\n  c' < C\n  0 < C\n  0 < l\n  l < inverse C\n  inverse C < u\n  0 < c'\n  c < ereal C\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially.\n       norm (norm (f x)) \\<le> 1 / 2 * norm (inverse c' ^ x)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in sequentially.\n     norm (norm (f x)) \\<le> 1 / 2 * norm (inverse c' ^ x)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal C \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < inverse (ereal (root x (norm (f x))))", "thus \"\\<forall>\\<^sub>F n in sequentially. c < inverse (ereal (root n (norm (f n))))\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially.\n     norm (norm (f x)) \\<le> 1 / 2 * norm (inverse c' ^ x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       c < inverse (ereal (root n (norm (f n))))", "using eventually_gt_at_top[of 0]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially.\n     norm (norm (f x)) \\<le> 1 / 2 * norm (inverse c' ^ x)\n  eventually ((<) (0::?'b1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       c < inverse (ereal (root n (norm (f n))))", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>norm (norm (f n)) \\<le> 1 / 2 * norm (inverse c' ^ n);\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> c < inverse (ereal (root n (norm (f n))))", "case (elim n)"], ["proof (state)\nthis:\n  norm (norm (f n)) \\<le> 1 / 2 * norm (inverse c' ^ n)\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>norm (norm (f n)) \\<le> 1 / 2 * norm (inverse c' ^ n);\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> c < inverse (ereal (root n (norm (f n))))", "have \"norm (f n) \\<le> 1/2 * norm (inverse c' ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f n) \\<le> 1 / 2 * norm (inverse c' ^ n)", "using c'"], ["proof (prove)\nusing this:\n  c < ereal c'\n  inverse u < c'\n  c' < C\n\ngoal (1 subgoal):\n 1. norm (f n) \\<le> 1 / 2 * norm (inverse c' ^ n)", "using elim"], ["proof (prove)\nusing this:\n  c < ereal c'\n  inverse u < c'\n  c' < C\n  norm (norm (f n)) \\<le> 1 / 2 * norm (inverse c' ^ n)\n  0 < n\n\ngoal (1 subgoal):\n 1. norm (f n) \\<le> 1 / 2 * norm (inverse c' ^ n)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  norm (f n) \\<le> 1 / 2 * norm (inverse c' ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>norm (norm (f n)) \\<le> 1 / 2 * norm (inverse c' ^ n);\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> c < inverse (ereal (root n (norm (f n))))", "also"], ["proof (state)\nthis:\n  norm (f n) \\<le> 1 / 2 * norm (inverse c' ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>norm (norm (f n)) \\<le> 1 / 2 * norm (inverse c' ^ n);\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> c < inverse (ereal (root n (norm (f n))))", "have \"\\<dots> < norm (inverse c' ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / 2 * norm (inverse c' ^ n) < norm (inverse c' ^ n)", "using \\<open>c' > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < c'\n\ngoal (1 subgoal):\n 1. 1 / 2 * norm (inverse c' ^ n) < norm (inverse c' ^ n)", "by simp"], ["proof (state)\nthis:\n  1 / 2 * norm (inverse c' ^ n) < norm (inverse c' ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>norm (norm (f n)) \\<le> 1 / 2 * norm (inverse c' ^ n);\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> c < inverse (ereal (root n (norm (f n))))", "finally"], ["proof (chain)\npicking this:\n  norm (f n) < norm (inverse c' ^ n)", "have \"root n (norm (f n)) < root n (norm (inverse c' ^ n))\""], ["proof (prove)\nusing this:\n  norm (f n) < norm (inverse c' ^ n)\n\ngoal (1 subgoal):\n 1. root n (norm (f n)) < root n (norm (inverse c' ^ n))", "using \\<open>n > 0\\<close> c'"], ["proof (prove)\nusing this:\n  norm (f n) < norm (inverse c' ^ n)\n  0 < n\n  c < ereal c'\n  inverse u < c'\n  c' < C\n\ngoal (1 subgoal):\n 1. root n (norm (f n)) < root n (norm (inverse c' ^ n))", "by (intro real_root_less_mono) auto"], ["proof (state)\nthis:\n  root n (norm (f n)) < root n (norm (inverse c' ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>norm (norm (f n)) \\<le> 1 / 2 * norm (inverse c' ^ n);\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> c < inverse (ereal (root n (norm (f n))))", "also"], ["proof (state)\nthis:\n  root n (norm (f n)) < root n (norm (inverse c' ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>norm (norm (f n)) \\<le> 1 / 2 * norm (inverse c' ^ n);\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> c < inverse (ereal (root n (norm (f n))))", "have \"root n (norm (inverse c' ^ n)) = inverse c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. root n (norm (inverse c' ^ n)) = inverse c'", "using \\<open>n > 0\\<close> \\<open>c' > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < n\n  0 < c'\n\ngoal (1 subgoal):\n 1. root n (norm (inverse c' ^ n)) = inverse c'", "by (simp add: norm_power real_root_power)"], ["proof (state)\nthis:\n  root n (norm (inverse c' ^ n)) = inverse c'\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>norm (norm (f n)) \\<le> 1 / 2 * norm (inverse c' ^ n);\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> c < inverse (ereal (root n (norm (f n))))", "finally"], ["proof (chain)\npicking this:\n  root n (norm (f n)) < inverse c'", "have \"ereal (root n (norm (f n))) < ereal (inverse c')\""], ["proof (prove)\nusing this:\n  root n (norm (f n)) < inverse c'\n\ngoal (1 subgoal):\n 1. ereal (root n (norm (f n))) < ereal (inverse c')", "by simp"], ["proof (state)\nthis:\n  ereal (root n (norm (f n))) < ereal (inverse c')\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>norm (norm (f n)) \\<le> 1 / 2 * norm (inverse c' ^ n);\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> c < inverse (ereal (root n (norm (f n))))", "also"], ["proof (state)\nthis:\n  ereal (root n (norm (f n))) < ereal (inverse c')\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>norm (norm (f n)) \\<le> 1 / 2 * norm (inverse c' ^ n);\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> c < inverse (ereal (root n (norm (f n))))", "have \"\\<dots> = inverse (ereal c')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ereal (inverse c') = inverse (ereal c')", "using \\<open>c' > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < c'\n\ngoal (1 subgoal):\n 1. ereal (inverse c') = inverse (ereal c')", "by auto"], ["proof (state)\nthis:\n  ereal (inverse c') = inverse (ereal c')\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>norm (norm (f n)) \\<le> 1 / 2 * norm (inverse c' ^ n);\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> c < inverse (ereal (root n (norm (f n))))", "finally"], ["proof (chain)\npicking this:\n  ereal (root n (norm (f n))) < inverse (ereal c')", "have \"inverse (inverse (ereal c')) < inverse (ereal (root n (norm (f n))))\""], ["proof (prove)\nusing this:\n  ereal (root n (norm (f n))) < inverse (ereal c')\n\ngoal (1 subgoal):\n 1. inverse (inverse (ereal c')) < inverse (ereal (root n (norm (f n))))", "using c' \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  ereal (root n (norm (f n))) < inverse (ereal c')\n  c < ereal c'\n  inverse u < c'\n  c' < C\n  0 < n\n\ngoal (1 subgoal):\n 1. inverse (inverse (ereal c')) < inverse (ereal (root n (norm (f n))))", "by (intro ereal_inverse_antimono_strict) auto"], ["proof (state)\nthis:\n  inverse (inverse (ereal c')) < inverse (ereal (root n (norm (f n))))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>norm (norm (f n)) \\<le> 1 / 2 * norm (inverse c' ^ n);\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> c < inverse (ereal (root n (norm (f n))))", "also"], ["proof (state)\nthis:\n  inverse (inverse (ereal c')) < inverse (ereal (root n (norm (f n))))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>norm (norm (f n)) \\<le> 1 / 2 * norm (inverse c' ^ n);\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> c < inverse (ereal (root n (norm (f n))))", "have \"inverse (inverse (ereal c')) = ereal c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse (inverse (ereal c')) = ereal c'", "using c'"], ["proof (prove)\nusing this:\n  c < ereal c'\n  inverse u < c'\n  c' < C\n\ngoal (1 subgoal):\n 1. inverse (inverse (ereal c')) = ereal c'", "by simp"], ["proof (state)\nthis:\n  inverse (inverse (ereal c')) = ereal c'\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>norm (norm (f n)) \\<le> 1 / 2 * norm (inverse c' ^ n);\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> c < inverse (ereal (root n (norm (f n))))", "finally"], ["proof (chain)\npicking this:\n  ereal c' < inverse (ereal (root n (norm (f n))))", "show ?case"], ["proof (prove)\nusing this:\n  ereal c' < inverse (ereal (root n (norm (f n))))\n\ngoal (1 subgoal):\n 1. c < inverse (ereal (root n (norm (f n))))", "using \\<open>c < c'\\<close>"], ["proof (prove)\nusing this:\n  ereal c' < inverse (ereal (root n (norm (f n))))\n  c < ereal c'\n\ngoal (1 subgoal):\n 1. c < inverse (ereal (root n (norm (f n))))", "by simp"], ["proof (state)\nthis:\n  c < inverse (ereal (root n (norm (f n))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     c < inverse (ereal (root n (norm (f n))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ereal C \\<le> conv_radius f\n\ngoal (1 subgoal):\n 1. conv_radius f \\<le> ereal C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. conv_radius f \\<le> ereal C", "show \"conv_radius f \\<le> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_radius f \\<le> ereal C", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> conv_radius f \\<le> ereal C \\<Longrightarrow> False", "assume \"\\<not>(conv_radius f \\<le> C)\""], ["proof (state)\nthis:\n  \\<not> conv_radius f \\<le> ereal C\n\ngoal (1 subgoal):\n 1. \\<not> conv_radius f \\<le> ereal C \\<Longrightarrow> False", "hence \"conv_radius f > C\""], ["proof (prove)\nusing this:\n  \\<not> conv_radius f \\<le> ereal C\n\ngoal (1 subgoal):\n 1. ereal C < conv_radius f", "by auto"], ["proof (state)\nthis:\n  ereal C < conv_radius f\n\ngoal (1 subgoal):\n 1. \\<not> conv_radius f \\<le> ereal C \\<Longrightarrow> False", "hence \"min (conv_radius f) (inverse l) > ereal C\""], ["proof (prove)\nusing this:\n  ereal C < conv_radius f\n\ngoal (1 subgoal):\n 1. ereal C < min (conv_radius f) (ereal (inverse l))", "using lu C \\<open>l > 0\\<close>"], ["proof (prove)\nusing this:\n  ereal C < conv_radius f\n  0 < l\n  l < inverse C\n  inverse C < u\n  0 < C\n  0 < l\n\ngoal (1 subgoal):\n 1. ereal C < min (conv_radius f) (ereal (inverse l))", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  ereal C < min (conv_radius f) (ereal (inverse l))\n\ngoal (1 subgoal):\n 1. \\<not> conv_radius f \\<le> ereal C \\<Longrightarrow> False", "from ereal_dense2[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>z.\n     ereal C < ereal z \\<and>\n     ereal z < min (conv_radius f) (ereal (inverse l))", "obtain c where c: \"C < ereal c\" \"inverse l > c\" \"c < conv_radius f\""], ["proof (prove)\nusing this:\n  \\<exists>z.\n     ereal C < ereal z \\<and>\n     ereal z < min (conv_radius f) (ereal (inverse l))\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>ereal C < ereal c; c < inverse l;\n         ereal c < conv_radius f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ereal C < ereal c\n  c < inverse l\n  ereal c < conv_radius f\n\ngoal (1 subgoal):\n 1. \\<not> conv_radius f \\<le> ereal C \\<Longrightarrow> False", "hence \"c > 0\""], ["proof (prove)\nusing this:\n  ereal C < ereal c\n  c < inverse l\n  ereal c < conv_radius f\n\ngoal (1 subgoal):\n 1. 0 < c", "using lu C"], ["proof (prove)\nusing this:\n  ereal C < ereal c\n  c < inverse l\n  ereal c < conv_radius f\n  0 < l\n  l < inverse C\n  inverse C < u\n  0 < C\n\ngoal (1 subgoal):\n 1. 0 < c", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<not> conv_radius f \\<le> ereal C \\<Longrightarrow> False", "have \"\\<forall>\\<^sub>F n in sequentially. ereal c < inverse (ereal (root n (norm (f n))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       ereal c < inverse (ereal (root n (norm (f n))))", "using less_LiminfD[OF c(3)[unfolded conv_radius_altdef]]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially.\n     ereal c < inverse (ereal (root x (norm (f x))))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       ereal c < inverse (ereal (root n (norm (f n))))", "by simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     ereal c < inverse (ereal (root n (norm (f n))))\n\ngoal (1 subgoal):\n 1. \\<not> conv_radius f \\<le> ereal C \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     ereal c < inverse (ereal (root n (norm (f n))))\n\ngoal (1 subgoal):\n 1. \\<not> conv_radius f \\<le> ereal C \\<Longrightarrow> False", "have \"\\<forall>\\<^sub>F n in sequentially. norm (f n) \\<ge> 2 * norm (inverse c ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       2 * norm (inverse c ^ n) \\<le> norm (f n)", "using landau_omega.smallD[OF assms(1)[of \"inverse c\"], of 2] c C \\<open>c > 0\\<close> lu"], ["proof (prove)\nusing this:\n  \\<lbrakk>l < inverse c; inverse c < inverse C; 0 < 2\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F x in sequentially.\n                       2 * norm (inverse c ^ x) \\<le> norm (norm (f x))\n  ereal C < ereal c\n  c < inverse l\n  ereal c < conv_radius f\n  0 < C\n  0 < c\n  0 < l\n  l < inverse C\n  inverse C < u\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       2 * norm (inverse c ^ n) \\<le> norm (f n)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     2 * norm (inverse c ^ n) \\<le> norm (f n)\n\ngoal (1 subgoal):\n 1. \\<not> conv_radius f \\<le> ereal C \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially.\n     ereal c < inverse (ereal (root n (norm (f n))))\n  \\<forall>\\<^sub>F n in sequentially.\n     2 * norm (inverse c ^ n) \\<le> norm (f n)", "have \"eventually (\\<lambda>n. False) sequentially\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     ereal c < inverse (ereal (root n (norm (f n))))\n  \\<forall>\\<^sub>F n in sequentially.\n     2 * norm (inverse c ^ n) \\<le> norm (f n)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. False", "using eventually_gt_at_top[of 0]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     ereal c < inverse (ereal (root n (norm (f n))))\n  \\<forall>\\<^sub>F n in sequentially.\n     2 * norm (inverse c ^ n) \\<le> norm (f n)\n  eventually ((<) (0::?'b1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. False", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ereal c < inverse (ereal (root n (norm (f n))));\n        2 * norm (inverse c ^ n) \\<le> norm (f n); 0 < n\\<rbrakk>\n       \\<Longrightarrow> False", "case (elim n)"], ["proof (state)\nthis:\n  ereal c < inverse (ereal (root n (norm (f n))))\n  2 * norm (inverse c ^ n) \\<le> norm (f n)\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ereal c < inverse (ereal (root n (norm (f n))));\n        2 * norm (inverse c ^ n) \\<le> norm (f n); 0 < n\\<rbrakk>\n       \\<Longrightarrow> False", "have \"norm (inverse c ^ n) < 2 * norm (inverse c ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (inverse c ^ n) < 2 * norm (inverse c ^ n)", "using c \\<open>n > 0\\<close> C"], ["proof (prove)\nusing this:\n  ereal C < ereal c\n  c < inverse l\n  ereal c < conv_radius f\n  0 < n\n  0 < C\n\ngoal (1 subgoal):\n 1. norm (inverse c ^ n) < 2 * norm (inverse c ^ n)", "by simp"], ["proof (state)\nthis:\n  norm (inverse c ^ n) < 2 * norm (inverse c ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ereal c < inverse (ereal (root n (norm (f n))));\n        2 * norm (inverse c ^ n) \\<le> norm (f n); 0 < n\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  norm (inverse c ^ n) < 2 * norm (inverse c ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ereal c < inverse (ereal (root n (norm (f n))));\n        2 * norm (inverse c ^ n) \\<le> norm (f n); 0 < n\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<dots> \\<le> norm (f n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * norm (inverse c ^ n) \\<le> norm (f n)", "using elim"], ["proof (prove)\nusing this:\n  ereal c < inverse (ereal (root n (norm (f n))))\n  2 * norm (inverse c ^ n) \\<le> norm (f n)\n  0 < n\n\ngoal (1 subgoal):\n 1. 2 * norm (inverse c ^ n) \\<le> norm (f n)", "by simp"], ["proof (state)\nthis:\n  2 * norm (inverse c ^ n) \\<le> norm (f n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ereal c < inverse (ereal (root n (norm (f n))));\n        2 * norm (inverse c ^ n) \\<le> norm (f n); 0 < n\\<rbrakk>\n       \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  norm (inverse c ^ n) < norm (f n)", "have \"root n (inverse c ^ n) < root n (norm (f n))\""], ["proof (prove)\nusing this:\n  norm (inverse c ^ n) < norm (f n)\n\ngoal (1 subgoal):\n 1. root n (inverse c ^ n) < root n (norm (f n))", "using \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  norm (inverse c ^ n) < norm (f n)\n  0 < n\n\ngoal (1 subgoal):\n 1. root n (inverse c ^ n) < root n (norm (f n))", "by (intro real_root_less_mono) auto"], ["proof (state)\nthis:\n  root n (inverse c ^ n) < root n (norm (f n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ereal c < inverse (ereal (root n (norm (f n))));\n        2 * norm (inverse c ^ n) \\<le> norm (f n); 0 < n\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  root n (inverse c ^ n) < root n (norm (f n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ereal c < inverse (ereal (root n (norm (f n))));\n        2 * norm (inverse c ^ n) \\<le> norm (f n); 0 < n\\<rbrakk>\n       \\<Longrightarrow> False", "have \"root n (inverse c ^ n) = inverse c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. root n (inverse c ^ n) = inverse c", "using \\<open>n > 0\\<close> c C"], ["proof (prove)\nusing this:\n  0 < n\n  ereal C < ereal c\n  c < inverse l\n  ereal c < conv_radius f\n  0 < C\n\ngoal (1 subgoal):\n 1. root n (inverse c ^ n) = inverse c", "by (subst real_root_power) auto"], ["proof (state)\nthis:\n  root n (inverse c ^ n) = inverse c\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ereal c < inverse (ereal (root n (norm (f n))));\n        2 * norm (inverse c ^ n) \\<le> norm (f n); 0 < n\\<rbrakk>\n       \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  inverse c < root n (norm (f n))", "have \"ereal (inverse c) < ereal (root n (norm (f n)))\""], ["proof (prove)\nusing this:\n  inverse c < root n (norm (f n))\n\ngoal (1 subgoal):\n 1. ereal (inverse c) < ereal (root n (norm (f n)))", "by simp"], ["proof (state)\nthis:\n  ereal (inverse c) < ereal (root n (norm (f n)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ereal c < inverse (ereal (root n (norm (f n))));\n        2 * norm (inverse c ^ n) \\<le> norm (f n); 0 < n\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  ereal (inverse c) < ereal (root n (norm (f n)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ereal c < inverse (ereal (root n (norm (f n))));\n        2 * norm (inverse c ^ n) \\<le> norm (f n); 0 < n\\<rbrakk>\n       \\<Longrightarrow> False", "have \"ereal (inverse c) = inverse (ereal c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ereal (inverse c) = inverse (ereal c)", "using c C"], ["proof (prove)\nusing this:\n  ereal C < ereal c\n  c < inverse l\n  ereal c < conv_radius f\n  0 < C\n\ngoal (1 subgoal):\n 1. ereal (inverse c) = inverse (ereal c)", "by auto"], ["proof (state)\nthis:\n  ereal (inverse c) = inverse (ereal c)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ereal c < inverse (ereal (root n (norm (f n))));\n        2 * norm (inverse c ^ n) \\<le> norm (f n); 0 < n\\<rbrakk>\n       \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  inverse (ereal c) < ereal (root n (norm (f n)))", "have \"inverse (ereal (root n (norm (f n)))) < inverse (inverse (ereal c))\""], ["proof (prove)\nusing this:\n  inverse (ereal c) < ereal (root n (norm (f n)))\n\ngoal (1 subgoal):\n 1. inverse (ereal (root n (norm (f n)))) < inverse (inverse (ereal c))", "using c C"], ["proof (prove)\nusing this:\n  inverse (ereal c) < ereal (root n (norm (f n)))\n  ereal C < ereal c\n  c < inverse l\n  ereal c < conv_radius f\n  0 < C\n\ngoal (1 subgoal):\n 1. inverse (ereal (root n (norm (f n)))) < inverse (inverse (ereal c))", "by (intro ereal_inverse_antimono_strict) auto"], ["proof (state)\nthis:\n  inverse (ereal (root n (norm (f n)))) < inverse (inverse (ereal c))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ereal c < inverse (ereal (root n (norm (f n))));\n        2 * norm (inverse c ^ n) \\<le> norm (f n); 0 < n\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  inverse (ereal (root n (norm (f n)))) < inverse (inverse (ereal c))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ereal c < inverse (ereal (root n (norm (f n))));\n        2 * norm (inverse c ^ n) \\<le> norm (f n); 0 < n\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<dots> = ereal c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse (inverse (ereal c)) = ereal c", "using c C"], ["proof (prove)\nusing this:\n  ereal C < ereal c\n  c < inverse l\n  ereal c < conv_radius f\n  0 < C\n\ngoal (1 subgoal):\n 1. inverse (inverse (ereal c)) = ereal c", "by auto"], ["proof (state)\nthis:\n  inverse (inverse (ereal c)) = ereal c\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ereal c < inverse (ereal (root n (norm (f n))));\n        2 * norm (inverse c ^ n) \\<le> norm (f n); 0 < n\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  inverse (inverse (ereal c)) = ereal c\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ereal c < inverse (ereal (root n (norm (f n))));\n        2 * norm (inverse c ^ n) \\<le> norm (f n); 0 < n\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<dots> < inverse (ereal (root n (norm (f n))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ereal c < inverse (ereal (root n (norm (f n))))", "using elim"], ["proof (prove)\nusing this:\n  ereal c < inverse (ereal (root n (norm (f n))))\n  2 * norm (inverse c ^ n) \\<le> norm (f n)\n  0 < n\n\ngoal (1 subgoal):\n 1. ereal c < inverse (ereal (root n (norm (f n))))", "by simp"], ["proof (state)\nthis:\n  ereal c < inverse (ereal (root n (norm (f n))))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ereal c < inverse (ereal (root n (norm (f n))));\n        2 * norm (inverse c ^ n) \\<le> norm (f n); 0 < n\\<rbrakk>\n       \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  ?P", "show False"], ["proof (prove)\nusing this:\n  ?P\n\ngoal (1 subgoal):\n 1. False", "."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. False\n\ngoal (1 subgoal):\n 1. \\<not> conv_radius f \\<le> ereal C \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. False\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  conv_radius f \\<le> ereal C\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Finally, we show that the radius of convergence of $W(X)$ is $e^{-1}$ by directly computing\n  \\[\\lim\\limits_{n\\to\\infty} \\sqrt[n]{|[X^n]\\,W(X)|} = e\\]\n  using Stirling's formula for $n!$:\n\\<close>"], ["", "lemma fps_conv_radius_Lambert_W: \"fps_conv_radius fps_Lambert_W = exp (-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fps_conv_radius fps_Lambert_W = ereal (exp (- 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fps_conv_radius fps_Lambert_W = ereal (exp (- 1))", "have \"conv_radius (fps_nth fps_Lambert_W) = conv_radius (\\<lambda>n. exp 1 ^ n * n powr (-3/2) :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_radius (($) fps_Lambert_W) =\n    conv_radius (\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2))", "proof (rule conv_radius_cong_bigtheta)"], ["proof (state)\ngoal (1 subgoal):\n 1. ($) fps_Lambert_W\n    \\<in> \\<Theta>(\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2))", "have \"fps_nth fps_Lambert_W \\<in> \\<Theta>(\\<lambda>n. (-real n) ^ (n - 1) / fact n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) fps_Lambert_W\n    \\<in> \\<Theta>(\\<lambda>n. (- real n) ^ (n - 1) / fact n)", "by (intro bigthetaI_cong eventually_mono[OF eventually_gt_at_top[of 0]])\n         (auto simp: fps_nth_Lambert_W)"], ["proof (state)\nthis:\n  ($) fps_Lambert_W\n  \\<in> \\<Theta>(\\<lambda>n. (- real n) ^ (n - 1) / fact n)\n\ngoal (1 subgoal):\n 1. ($) fps_Lambert_W\n    \\<in> \\<Theta>(\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2))", "also"], ["proof (state)\nthis:\n  ($) fps_Lambert_W\n  \\<in> \\<Theta>(\\<lambda>n. (- real n) ^ (n - 1) / fact n)\n\ngoal (1 subgoal):\n 1. ($) fps_Lambert_W\n    \\<in> \\<Theta>(\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2))", "have \"(\\<lambda>n. (-real n) ^ (n - 1) / fact n) \\<in> \\<Theta>(\\<lambda>n. real n ^ (n - 1) / fact n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (- real n) ^ (n - 1) / fact n)\n    \\<in> \\<Theta>(\\<lambda>n. real n ^ (n - 1) / fact n)", "by (subst landau_theta.norm_iff [symmetric], subst norm_divide) auto"], ["proof (state)\nthis:\n  (\\<lambda>n. (- real n) ^ (n - 1) / fact n)\n  \\<in> \\<Theta>(\\<lambda>n. real n ^ (n - 1) / fact n)\n\ngoal (1 subgoal):\n 1. ($) fps_Lambert_W\n    \\<in> \\<Theta>(\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2))", "also"], ["proof (state)\nthis:\n  (\\<lambda>n. (- real n) ^ (n - 1) / fact n)\n  \\<in> \\<Theta>(\\<lambda>n. real n ^ (n - 1) / fact n)\n\ngoal (1 subgoal):\n 1. ($) fps_Lambert_W\n    \\<in> \\<Theta>(\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2))", "have \"(\\<lambda>n. (real n) ^ (n - 1) / fact n) \\<in>\n                 \\<Theta>(\\<lambda>n. (real n) ^ (n - 1) / (sqrt (2 * pi * real n) * (real n / exp 1) ^ n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. real n ^ (n - 1) / fact n)\n    \\<in> \\<Theta>(\\<lambda>n.\n                      real n ^ (n - 1) /\n                      (sqrt (2 * pi * real n) * (real n / exp 1) ^ n))", "by (intro asymp_equiv_imp_bigtheta asymp_equiv_intros fact_asymp_equiv)"], ["proof (state)\nthis:\n  (\\<lambda>n. real n ^ (n - 1) / fact n)\n  \\<in> \\<Theta>(\\<lambda>n.\n                    real n ^ (n - 1) /\n                    (sqrt (2 * pi * real n) * (real n / exp 1) ^ n))\n\ngoal (1 subgoal):\n 1. ($) fps_Lambert_W\n    \\<in> \\<Theta>(\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2))", "also"], ["proof (state)\nthis:\n  (\\<lambda>n. real n ^ (n - 1) / fact n)\n  \\<in> \\<Theta>(\\<lambda>n.\n                    real n ^ (n - 1) /\n                    (sqrt (2 * pi * real n) * (real n / exp 1) ^ n))\n\ngoal (1 subgoal):\n 1. ($) fps_Lambert_W\n    \\<in> \\<Theta>(\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2))", "have \"(\\<lambda>n. (real n) ^ (n - 1) / (sqrt (2 * pi * real n) * (real n / exp 1) ^ n)) \\<in>\n                 \\<Theta>(\\<lambda>n. exp 1 ^ n * n powr (-3/2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        real n ^ (n - 1) / (sqrt (2 * pi * real n) * (real n / exp 1) ^ n))\n    \\<in> \\<Theta>(\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2))", "by (real_asymp simp: ln_inverse)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      real n ^ (n - 1) / (sqrt (2 * pi * real n) * (real n / exp 1) ^ n))\n  \\<in> \\<Theta>(\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2))\n\ngoal (1 subgoal):\n 1. ($) fps_Lambert_W\n    \\<in> \\<Theta>(\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2))", "finally"], ["proof (chain)\npicking this:\n  ($) fps_Lambert_W\n  \\<in> \\<Theta>(\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2))", "show \"fps_nth fps_Lambert_W \\<in> \\<Theta>(\\<lambda>n. exp 1 ^ n * n powr (-3/2) :: real)\""], ["proof (prove)\nusing this:\n  ($) fps_Lambert_W\n  \\<in> \\<Theta>(\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2))\n\ngoal (1 subgoal):\n 1. ($) fps_Lambert_W\n    \\<in> \\<Theta>(\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2))", "."], ["proof (state)\nthis:\n  ($) fps_Lambert_W\n  \\<in> \\<Theta>(\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  conv_radius (($) fps_Lambert_W) =\n  conv_radius (\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2))\n\ngoal (1 subgoal):\n 1. fps_conv_radius fps_Lambert_W = ereal (exp (- 1))", "also"], ["proof (state)\nthis:\n  conv_radius (($) fps_Lambert_W) =\n  conv_radius (\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2))\n\ngoal (1 subgoal):\n 1. fps_conv_radius fps_Lambert_W = ereal (exp (- 1))", "have \"\\<dots> = inverse (limsup (\\<lambda>n. ereal (root n (exp 1 ^ n * real n powr - (3 / 2)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_radius (\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2)) =\n    inverse\n     (limsup\n       (\\<lambda>n. ereal (root n (exp 1 ^ n * real n powr - (3 / 2)))))", "by (simp add: conv_radius_def)"], ["proof (state)\nthis:\n  conv_radius (\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2)) =\n  inverse\n   (limsup (\\<lambda>n. ereal (root n (exp 1 ^ n * real n powr - (3 / 2)))))\n\ngoal (1 subgoal):\n 1. fps_conv_radius fps_Lambert_W = ereal (exp (- 1))", "also"], ["proof (state)\nthis:\n  conv_radius (\\<lambda>n. exp 1 ^ n * real n powr (- 3 / 2)) =\n  inverse\n   (limsup (\\<lambda>n. ereal (root n (exp 1 ^ n * real n powr - (3 / 2)))))\n\ngoal (1 subgoal):\n 1. fps_conv_radius fps_Lambert_W = ereal (exp (- 1))", "have \"limsup (\\<lambda>n. ereal (root n (exp 1 ^ n * real n powr - (3 / 2)))) = exp 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. limsup\n     (\\<lambda>n. ereal (root n (exp 1 ^ n * real n powr - (3 / 2)))) =\n    ereal (exp 1)", "proof (intro lim_imp_Limsup tendsto_intros)\n    \\<comment> \\<open>real\\_asymp does not support \\<^const>\\<open>root\\<close> for a variable basis natively, so\n        we need to convert it to \\<^const>\\<open>powr\\<close> first.\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. sequentially \\<noteq> bot\n 2. (\\<lambda>x. root x (exp 1 ^ x * real x powr - (3 / 2)))\n    \\<longlonglongrightarrow> exp 1", "(* TODO add better \"root\" support to real_asymp *)"], ["proof (state)\ngoal (2 subgoals):\n 1. sequentially \\<noteq> bot\n 2. (\\<lambda>x. root x (exp 1 ^ x * real x powr - (3 / 2)))\n    \\<longlonglongrightarrow> exp 1", "have \"(\\<lambda>n. (exp 1 ^ n * real n powr -(3/2)) powr (1 / real n)) \\<longlonglongrightarrow> exp 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (exp 1 ^ n * real n powr - (3 / 2)) powr (1 / real n))\n    \\<longlonglongrightarrow> exp 1", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>n. (exp 1 ^ n * real n powr - (3 / 2)) powr (1 / real n))\n  \\<longlonglongrightarrow> exp 1\n\ngoal (2 subgoals):\n 1. sequentially \\<noteq> bot\n 2. (\\<lambda>x. root x (exp 1 ^ x * real x powr - (3 / 2)))\n    \\<longlonglongrightarrow> exp 1", "also"], ["proof (state)\nthis:\n  (\\<lambda>n. (exp 1 ^ n * real n powr - (3 / 2)) powr (1 / real n))\n  \\<longlonglongrightarrow> exp 1\n\ngoal (2 subgoals):\n 1. sequentially \\<noteq> bot\n 2. (\\<lambda>x. root x (exp 1 ^ x * real x powr - (3 / 2)))\n    \\<longlonglongrightarrow> exp 1", "have \"?this \\<longleftrightarrow> (\\<lambda>x. root x (exp 1 ^ x * real x powr - (3 / 2))) \\<longlonglongrightarrow> exp 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (exp 1 ^ n * real n powr - (3 / 2)) powr (1 / real n))\n    \\<longlonglongrightarrow> exp 1 =\n    (\\<lambda>x. root x (exp 1 ^ x * real x powr - (3 / 2)))\n    \\<longlonglongrightarrow> exp 1", "by (intro filterlim_cong eventually_mono[OF eventually_gt_at_top[of 0]])\n         (auto simp: root_powr_inverse)"], ["proof (state)\nthis:\n  (\\<lambda>n. (exp 1 ^ n * real n powr - (3 / 2)) powr (1 / real n))\n  \\<longlonglongrightarrow> exp 1 =\n  (\\<lambda>x. root x (exp 1 ^ x * real x powr - (3 / 2)))\n  \\<longlonglongrightarrow> exp 1\n\ngoal (2 subgoals):\n 1. sequentially \\<noteq> bot\n 2. (\\<lambda>x. root x (exp 1 ^ x * real x powr - (3 / 2)))\n    \\<longlonglongrightarrow> exp 1", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. root x (exp 1 ^ x * real x powr - (3 / 2)))\n  \\<longlonglongrightarrow> exp 1", "show \\<dots>"], ["proof (prove)\nusing this:\n  (\\<lambda>x. root x (exp 1 ^ x * real x powr - (3 / 2)))\n  \\<longlonglongrightarrow> exp 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. root x (exp 1 ^ x * real x powr - (3 / 2)))\n    \\<longlonglongrightarrow> exp 1", "."], ["proof (state)\nthis:\n  (\\<lambda>x. root x (exp 1 ^ x * real x powr - (3 / 2)))\n  \\<longlonglongrightarrow> exp 1\n\ngoal (1 subgoal):\n 1. sequentially \\<noteq> bot", "qed auto"], ["proof (state)\nthis:\n  limsup (\\<lambda>n. ereal (root n (exp 1 ^ n * real n powr - (3 / 2)))) =\n  ereal (exp 1)\n\ngoal (1 subgoal):\n 1. fps_conv_radius fps_Lambert_W = ereal (exp (- 1))", "finally"], ["proof (chain)\npicking this:\n  conv_radius (($) fps_Lambert_W) = inverse (ereal (exp 1))", "show ?thesis"], ["proof (prove)\nusing this:\n  conv_radius (($) fps_Lambert_W) = inverse (ereal (exp 1))\n\ngoal (1 subgoal):\n 1. fps_conv_radius fps_Lambert_W = ereal (exp (- 1))", "by (simp add: fps_conv_radius_def exp_minus)"], ["proof (state)\nthis:\n  fps_conv_radius fps_Lambert_W = ereal (exp (- 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}