{"file_name": "/home/qj213/afp-2021-10-22/thys/Transition_Systems_and_Automata/Automata/NBA/NBA_Refine.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Transition_Systems_and_Automata", "problem_names": ["lemma nba_param[param]:\n    \"(nba, nba) \\<in> \\<langle>L\\<rangle> set_rel \\<rightarrow> \\<langle>S\\<rangle> set_rel \\<rightarrow> (L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> set_rel) \\<rightarrow> (S \\<rightarrow> bool_rel) \\<rightarrow>\n      \\<langle>L, S\\<rangle> nba_rel\"\n    \"(alphabet, alphabet) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> \\<langle>L\\<rangle> set_rel\"\n    \"(initial, initial) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> \\<langle>S\\<rangle> set_rel\"\n    \"(transition, transition) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> set_rel\"\n    \"(accepting, accepting) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> S \\<rightarrow> bool_rel\"", "lemma nba_rel_id[simp]: \"\\<langle>Id, Id\\<rangle> nba_rel = Id\"", "lemma nba_rel_comp[trans]:\n    assumes [param]: \"(A, B) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle> nba_rel\" \"(B, C) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle> nba_rel\"\n    shows \"(A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2, S\\<^sub>1 O S\\<^sub>2\\<rangle> nba_rel\"", "lemma nba_rel_converse[simp]: \"(\\<langle>L, S\\<rangle> nba_rel)\\<inverse> = \\<langle>L\\<inverse>, S\\<inverse>\\<rangle> nba_rel\"", "lemma nba_rel_eq: \"(A, A) \\<in> \\<langle>Id_on (alphabet A), Id_on (nodes A)\\<rangle> nba_rel\"", "lemma enableds_param[param]: \"(nba.enableds, nba.enableds) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> S \\<rightarrow> \\<langle>L \\<times>\\<^sub>r S\\<rangle> set_rel\"", "lemma paths_param[param]: \"(nba.paths, nba.paths) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> S \\<rightarrow> \\<langle>\\<langle>L \\<times>\\<^sub>r S\\<rangle> list_rel\\<rangle> set_rel\"", "lemma runs_param[param]: \"(nba.runs, nba.runs) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> S \\<rightarrow> \\<langle>\\<langle>L \\<times>\\<^sub>r S\\<rangle> stream_rel\\<rangle> set_rel\"", "lemma reachable_param[param]: \"(reachable, reachable) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> set_rel\"", "lemma nodes_param[param]: \"(nodes, nodes) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> \\<langle>S\\<rangle> set_rel\"", "lemma language_param[param]: \"(language, language) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> \\<langle>\\<langle>L\\<rangle> stream_rel\\<rangle> set_rel\""], "translations": [["", "lemma nba_param[param]:\n    \"(nba, nba) \\<in> \\<langle>L\\<rangle> set_rel \\<rightarrow> \\<langle>S\\<rangle> set_rel \\<rightarrow> (L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> set_rel) \\<rightarrow> (S \\<rightarrow> bool_rel) \\<rightarrow>\n      \\<langle>L, S\\<rangle> nba_rel\"\n    \"(alphabet, alphabet) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> \\<langle>L\\<rangle> set_rel\"\n    \"(initial, initial) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> \\<langle>S\\<rangle> set_rel\"\n    \"(transition, transition) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> set_rel\"\n    \"(accepting, accepting) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> S \\<rightarrow> bool_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((nba, nba)\n     \\<in> \\<langle>L\\<rangle>set_rel \\<rightarrow>\n           \\<langle>S\\<rangle>set_rel \\<rightarrow>\n           (L \\<rightarrow>\n            S \\<rightarrow> \\<langle>S\\<rangle>set_rel) \\<rightarrow>\n           (S \\<rightarrow> bool_rel) \\<rightarrow> \\<langle>L,\n           S\\<rangle>nba_rel &&&\n     (alphabet, alphabet)\n     \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n           \\<langle>L\\<rangle>set_rel) &&&\n    (initial, initial)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          \\<langle>S\\<rangle>set_rel &&&\n    (transition, transition)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle>set_rel &&&\n    (accepting, accepting)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          S \\<rightarrow> bool_rel", "unfolding nba_rel_def fun_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((nba, nba)\n     \\<in> {(f, f').\n            \\<forall>(a, a')\\<in>\\<langle>L\\<rangle>set_rel.\n               (f a, f' a')\n               \\<in> {(f, f').\n                      \\<forall>(a, a')\\<in>\\<langle>S\\<rangle>set_rel.\n                         (f a, f' a')\n                         \\<in> {(f, f').\n                                \\<forall>(a, a')\n   \\<in>{(f, f').\n         \\<forall>(a, a')\\<in>L.\n            (f a, f' a')\n            \\<in> {(f, f').\n                   \\<forall>(a, a')\\<in>S.\n                      (f a, f' a') \\<in> \\<langle>S\\<rangle>set_rel}}.\n                                   (f a, f' a')\n                                   \\<in> {(f, f').\n    \\<forall>(a, a')\n             \\<in>{(f, f').\n                   \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}.\n       (f a, f' a')\n       \\<in> {(A\\<^sub>1, A\\<^sub>2).\n              (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n              \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n              (initial A\\<^sub>1, initial A\\<^sub>2)\n              \\<in> \\<langle>S\\<rangle>set_rel \\<and>\n              (transition A\\<^sub>1, transition A\\<^sub>2)\n              \\<in> {(f, f').\n                     \\<forall>(a, a')\\<in>L.\n                        (f a, f' a')\n                        \\<in> {(f, f').\n                               \\<forall>(a, a')\\<in>S.\n                                  (f a, f' a')\n                                  \\<in> \\<langle>S\\<rangle>set_rel}} \\<and>\n              (accepting A\\<^sub>1, accepting A\\<^sub>2)\n              \\<in> {(f, f').\n                     \\<forall>(a, a')\\<in>S.\n                        (f a, f' a') \\<in> bool_rel}}}}}} &&&\n     (alphabet, alphabet)\n     \\<in> {(f, f').\n            \\<forall>(a, a')\n                     \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                           (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n                           \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n                           (initial A\\<^sub>1, initial A\\<^sub>2)\n                           \\<in> \\<langle>S\\<rangle>set_rel \\<and>\n                           (transition A\\<^sub>1, transition A\\<^sub>2)\n                           \\<in> {(f, f').\n                                  \\<forall>(a, a')\\<in>L.\n                                     (f a, f' a')\n                                     \\<in> {(f, f').\n      \\<forall>(a, a')\\<in>S.\n         (f a, f' a') \\<in> \\<langle>S\\<rangle>set_rel}} \\<and>\n                           (accepting A\\<^sub>1, accepting A\\<^sub>2)\n                           \\<in> {(f, f').\n                                  \\<forall>(a, a')\\<in>S.\n                                     (f a, f' a') \\<in> bool_rel}}.\n               (f a, f' a') \\<in> \\<langle>L\\<rangle>set_rel}) &&&\n    (initial, initial)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n                          (initial A\\<^sub>1, initial A\\<^sub>2)\n                          \\<in> \\<langle>S\\<rangle>set_rel \\<and>\n                          (transition A\\<^sub>1, transition A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S.\n        (f a, f' a') \\<in> \\<langle>S\\<rangle>set_rel}} \\<and>\n                          (accepting A\\<^sub>1, accepting A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>S.\n                                    (f a, f' a') \\<in> bool_rel}}.\n              (f a, f' a') \\<in> \\<langle>S\\<rangle>set_rel} &&&\n    (transition, transition)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n                          (initial A\\<^sub>1, initial A\\<^sub>2)\n                          \\<in> \\<langle>S\\<rangle>set_rel \\<and>\n                          (transition A\\<^sub>1, transition A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S.\n        (f a, f' a') \\<in> \\<langle>S\\<rangle>set_rel}} \\<and>\n                          (accepting A\\<^sub>1, accepting A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>S.\n                                    (f a, f' a') \\<in> bool_rel}}.\n              (f a, f' a')\n              \\<in> {(f, f').\n                     \\<forall>(a, a')\\<in>L.\n                        (f a, f' a')\n                        \\<in> {(f, f').\n                               \\<forall>(a, a')\\<in>S.\n                                  (f a, f' a')\n                                  \\<in> \\<langle>S\\<rangle>set_rel}}} &&&\n    (accepting, accepting)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n                          (initial A\\<^sub>1, initial A\\<^sub>2)\n                          \\<in> \\<langle>S\\<rangle>set_rel \\<and>\n                          (transition A\\<^sub>1, transition A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S.\n        (f a, f' a') \\<in> \\<langle>S\\<rangle>set_rel}} \\<and>\n                          (accepting A\\<^sub>1, accepting A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>S.\n                                    (f a, f' a') \\<in> bool_rel}}.\n              (f a, f' a')\n              \\<in> {(f, f').\n                     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}}", "by auto"], ["", "lemma nba_rel_id[simp]: \"\\<langle>Id, Id\\<rangle> nba_rel = Id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>Id, Id\\<rangle>nba_rel = Id", "unfolding nba_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(A\\<^sub>1, A\\<^sub>2).\n     (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n     \\<in> \\<langle>Id\\<rangle>set_rel \\<and>\n     (initial A\\<^sub>1, initial A\\<^sub>2)\n     \\<in> \\<langle>Id\\<rangle>set_rel \\<and>\n     (transition A\\<^sub>1, transition A\\<^sub>2)\n     \\<in> Id \\<rightarrow>\n           Id \\<rightarrow> \\<langle>Id\\<rangle>set_rel \\<and>\n     (accepting A\\<^sub>1, accepting A\\<^sub>2)\n     \\<in> Id \\<rightarrow> bool_rel} =\n    Id", "using nba.expand"], ["proof (prove)\nusing this:\n  alphabet ?nba = alphabet ?nba' \\<and>\n  initial ?nba = initial ?nba' \\<and>\n  transition ?nba = transition ?nba' \\<and>\n  accepting ?nba = accepting ?nba' \\<Longrightarrow>\n  ?nba = ?nba'\n\ngoal (1 subgoal):\n 1. {(A\\<^sub>1, A\\<^sub>2).\n     (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n     \\<in> \\<langle>Id\\<rangle>set_rel \\<and>\n     (initial A\\<^sub>1, initial A\\<^sub>2)\n     \\<in> \\<langle>Id\\<rangle>set_rel \\<and>\n     (transition A\\<^sub>1, transition A\\<^sub>2)\n     \\<in> Id \\<rightarrow>\n           Id \\<rightarrow> \\<langle>Id\\<rangle>set_rel \\<and>\n     (accepting A\\<^sub>1, accepting A\\<^sub>2)\n     \\<in> Id \\<rightarrow> bool_rel} =\n    Id", "by auto"], ["", "lemma nba_rel_comp[trans]:\n    assumes [param]: \"(A, B) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle> nba_rel\" \"(B, C) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle> nba_rel\"\n    shows \"(A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2, S\\<^sub>1 O S\\<^sub>2\\<rangle> nba_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>nba_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>nba_rel", "have \"(accepting A, accepting B) \\<in> S\\<^sub>1 \\<rightarrow> bool_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (accepting A, accepting B) \\<in> S\\<^sub>1 \\<rightarrow> bool_rel", "by parametricity"], ["proof (state)\nthis:\n  (accepting A, accepting B) \\<in> S\\<^sub>1 \\<rightarrow> bool_rel\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>nba_rel", "also"], ["proof (state)\nthis:\n  (accepting A, accepting B) \\<in> S\\<^sub>1 \\<rightarrow> bool_rel\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>nba_rel", "have \"(accepting B, accepting C) \\<in> S\\<^sub>2 \\<rightarrow> bool_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (accepting B, accepting C) \\<in> S\\<^sub>2 \\<rightarrow> bool_rel", "by parametricity"], ["proof (state)\nthis:\n  (accepting B, accepting C) \\<in> S\\<^sub>2 \\<rightarrow> bool_rel\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>nba_rel", "finally"], ["proof (chain)\npicking this:\n  (accepting A, accepting C)\n  \\<in> S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> bool_rel O bool_rel", "have 1: \"(accepting A, accepting C) \\<in> S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> bool_rel\""], ["proof (prove)\nusing this:\n  (accepting A, accepting C)\n  \\<in> S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> bool_rel O bool_rel\n\ngoal (1 subgoal):\n 1. (accepting A, accepting C)\n    \\<in> S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> bool_rel", "by simp"], ["proof (state)\nthis:\n  (accepting A, accepting C)\n  \\<in> S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> bool_rel\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>nba_rel", "have \"(transition A, transition B) \\<in> L\\<^sub>1 \\<rightarrow> S\\<^sub>1 \\<rightarrow> \\<langle>S\\<^sub>1\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (transition A, transition B)\n    \\<in> L\\<^sub>1 \\<rightarrow>\n          S\\<^sub>1 \\<rightarrow> \\<langle>S\\<^sub>1\\<rangle>set_rel", "by parametricity"], ["proof (state)\nthis:\n  (transition A, transition B)\n  \\<in> L\\<^sub>1 \\<rightarrow>\n        S\\<^sub>1 \\<rightarrow> \\<langle>S\\<^sub>1\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>nba_rel", "also"], ["proof (state)\nthis:\n  (transition A, transition B)\n  \\<in> L\\<^sub>1 \\<rightarrow>\n        S\\<^sub>1 \\<rightarrow> \\<langle>S\\<^sub>1\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>nba_rel", "have \"(transition B, transition C) \\<in> L\\<^sub>2 \\<rightarrow> S\\<^sub>2 \\<rightarrow> \\<langle>S\\<^sub>2\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (transition B, transition C)\n    \\<in> L\\<^sub>2 \\<rightarrow>\n          S\\<^sub>2 \\<rightarrow> \\<langle>S\\<^sub>2\\<rangle>set_rel", "by parametricity"], ["proof (state)\nthis:\n  (transition B, transition C)\n  \\<in> L\\<^sub>2 \\<rightarrow>\n        S\\<^sub>2 \\<rightarrow> \\<langle>S\\<^sub>2\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>nba_rel", "finally"], ["proof (chain)\npicking this:\n  (transition A, transition C)\n  \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n        S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n        \\<langle>S\\<^sub>1\\<rangle>set_rel O\n        \\<langle>S\\<^sub>2\\<rangle>set_rel", "have 2: \"(transition A, transition C) \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow> S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> \\<langle>S\\<^sub>1\\<rangle> set_rel O \\<langle>S\\<^sub>2\\<rangle> set_rel\""], ["proof (prove)\nusing this:\n  (transition A, transition C)\n  \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n        S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n        \\<langle>S\\<^sub>1\\<rangle>set_rel O\n        \\<langle>S\\<^sub>2\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (transition A, transition C)\n    \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n          S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n          \\<langle>S\\<^sub>1\\<rangle>set_rel O\n          \\<langle>S\\<^sub>2\\<rangle>set_rel", "by simp"], ["proof (state)\nthis:\n  (transition A, transition C)\n  \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n        S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n        \\<langle>S\\<^sub>1\\<rangle>set_rel O\n        \\<langle>S\\<^sub>2\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>nba_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>nba_rel", "unfolding nba_rel_def mem_Collect_eq prod.case set_rel_compp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (alphabet A, alphabet C)\n    \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel O\n          \\<langle>L\\<^sub>2\\<rangle>set_rel \\<and>\n    (initial A, initial C)\n    \\<in> \\<langle>S\\<^sub>1\\<rangle>set_rel O\n          \\<langle>S\\<^sub>2\\<rangle>set_rel \\<and>\n    (transition A, transition C)\n    \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n          S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n          \\<langle>S\\<^sub>1\\<rangle>set_rel O\n          \\<langle>S\\<^sub>2\\<rangle>set_rel \\<and>\n    (accepting A, accepting C)\n    \\<in> S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> bool_rel", "using 1 2"], ["proof (prove)\nusing this:\n  (accepting A, accepting C)\n  \\<in> S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> bool_rel\n  (transition A, transition C)\n  \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n        S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n        \\<langle>S\\<^sub>1\\<rangle>set_rel O\n        \\<langle>S\\<^sub>2\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (alphabet A, alphabet C)\n    \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel O\n          \\<langle>L\\<^sub>2\\<rangle>set_rel \\<and>\n    (initial A, initial C)\n    \\<in> \\<langle>S\\<^sub>1\\<rangle>set_rel O\n          \\<langle>S\\<^sub>2\\<rangle>set_rel \\<and>\n    (transition A, transition C)\n    \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n          S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n          \\<langle>S\\<^sub>1\\<rangle>set_rel O\n          \\<langle>S\\<^sub>2\\<rangle>set_rel \\<and>\n    (accepting A, accepting C)\n    \\<in> S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> bool_rel", "using nba_param(2 - 5)[THEN fun_relD, OF assms(1)]"], ["proof (prove)\nusing this:\n  (accepting A, accepting C)\n  \\<in> S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> bool_rel\n  (transition A, transition C)\n  \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n        S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n        \\<langle>S\\<^sub>1\\<rangle>set_rel O\n        \\<langle>S\\<^sub>2\\<rangle>set_rel\n  (alphabet A, alphabet B) \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel\n  (initial A, initial B) \\<in> \\<langle>S\\<^sub>1\\<rangle>set_rel\n  (transition A, transition B)\n  \\<in> L\\<^sub>1 \\<rightarrow>\n        S\\<^sub>1 \\<rightarrow> \\<langle>S\\<^sub>1\\<rangle>set_rel\n  (accepting A, accepting B) \\<in> S\\<^sub>1 \\<rightarrow> bool_rel\n\ngoal (1 subgoal):\n 1. (alphabet A, alphabet C)\n    \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel O\n          \\<langle>L\\<^sub>2\\<rangle>set_rel \\<and>\n    (initial A, initial C)\n    \\<in> \\<langle>S\\<^sub>1\\<rangle>set_rel O\n          \\<langle>S\\<^sub>2\\<rangle>set_rel \\<and>\n    (transition A, transition C)\n    \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n          S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n          \\<langle>S\\<^sub>1\\<rangle>set_rel O\n          \\<langle>S\\<^sub>2\\<rangle>set_rel \\<and>\n    (accepting A, accepting C)\n    \\<in> S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> bool_rel", "using nba_param(2 - 5)[THEN fun_relD, OF assms(2)]"], ["proof (prove)\nusing this:\n  (accepting A, accepting C)\n  \\<in> S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> bool_rel\n  (transition A, transition C)\n  \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n        S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n        \\<langle>S\\<^sub>1\\<rangle>set_rel O\n        \\<langle>S\\<^sub>2\\<rangle>set_rel\n  (alphabet A, alphabet B) \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel\n  (initial A, initial B) \\<in> \\<langle>S\\<^sub>1\\<rangle>set_rel\n  (transition A, transition B)\n  \\<in> L\\<^sub>1 \\<rightarrow>\n        S\\<^sub>1 \\<rightarrow> \\<langle>S\\<^sub>1\\<rangle>set_rel\n  (accepting A, accepting B) \\<in> S\\<^sub>1 \\<rightarrow> bool_rel\n  (alphabet B, alphabet C) \\<in> \\<langle>L\\<^sub>2\\<rangle>set_rel\n  (initial B, initial C) \\<in> \\<langle>S\\<^sub>2\\<rangle>set_rel\n  (transition B, transition C)\n  \\<in> L\\<^sub>2 \\<rightarrow>\n        S\\<^sub>2 \\<rightarrow> \\<langle>S\\<^sub>2\\<rangle>set_rel\n  (accepting B, accepting C) \\<in> S\\<^sub>2 \\<rightarrow> bool_rel\n\ngoal (1 subgoal):\n 1. (alphabet A, alphabet C)\n    \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel O\n          \\<langle>L\\<^sub>2\\<rangle>set_rel \\<and>\n    (initial A, initial C)\n    \\<in> \\<langle>S\\<^sub>1\\<rangle>set_rel O\n          \\<langle>S\\<^sub>2\\<rangle>set_rel \\<and>\n    (transition A, transition C)\n    \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n          S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n          \\<langle>S\\<^sub>1\\<rangle>set_rel O\n          \\<langle>S\\<^sub>2\\<rangle>set_rel \\<and>\n    (accepting A, accepting C)\n    \\<in> S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> bool_rel", "by auto"], ["proof (state)\nthis:\n  (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n  S\\<^sub>1 O S\\<^sub>2\\<rangle>nba_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nba_rel_converse[simp]: \"(\\<langle>L, S\\<rangle> nba_rel)\\<inverse> = \\<langle>L\\<inverse>, S\\<inverse>\\<rangle> nba_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>L, S\\<rangle>nba_rel)\\<inverse> = \\<langle>L\\<inverse>,\n    S\\<inverse>\\<rangle>nba_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<langle>L, S\\<rangle>nba_rel)\\<inverse> = \\<langle>L\\<inverse>,\n    S\\<inverse>\\<rangle>nba_rel", "have 1: \"\\<langle>L\\<rangle> set_rel = (\\<langle>L\\<inverse>\\<rangle> set_rel)\\<inverse>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>L\\<rangle>set_rel =\n    (\\<langle>L\\<inverse>\\<rangle>set_rel)\\<inverse>", "by simp"], ["proof (state)\nthis:\n  \\<langle>L\\<rangle>set_rel =\n  (\\<langle>L\\<inverse>\\<rangle>set_rel)\\<inverse>\n\ngoal (1 subgoal):\n 1. (\\<langle>L, S\\<rangle>nba_rel)\\<inverse> = \\<langle>L\\<inverse>,\n    S\\<inverse>\\<rangle>nba_rel", "have 2: \"\\<langle>S\\<rangle> set_rel = (\\<langle>S\\<inverse>\\<rangle> set_rel)\\<inverse>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>S\\<rangle>set_rel =\n    (\\<langle>S\\<inverse>\\<rangle>set_rel)\\<inverse>", "by simp"], ["proof (state)\nthis:\n  \\<langle>S\\<rangle>set_rel =\n  (\\<langle>S\\<inverse>\\<rangle>set_rel)\\<inverse>\n\ngoal (1 subgoal):\n 1. (\\<langle>L, S\\<rangle>nba_rel)\\<inverse> = \\<langle>L\\<inverse>,\n    S\\<inverse>\\<rangle>nba_rel", "have 3: \"L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> set_rel = (L\\<inverse> \\<rightarrow> S\\<inverse> \\<rightarrow> \\<langle>S\\<inverse>\\<rangle> set_rel)\\<inverse>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle>set_rel =\n    (L\\<inverse> \\<rightarrow>\n     S\\<inverse> \\<rightarrow>\n     \\<langle>S\\<inverse>\\<rangle>set_rel)\\<inverse>", "by simp"], ["proof (state)\nthis:\n  L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle>set_rel =\n  (L\\<inverse> \\<rightarrow>\n   S\\<inverse> \\<rightarrow> \\<langle>S\\<inverse>\\<rangle>set_rel)\\<inverse>\n\ngoal (1 subgoal):\n 1. (\\<langle>L, S\\<rangle>nba_rel)\\<inverse> = \\<langle>L\\<inverse>,\n    S\\<inverse>\\<rangle>nba_rel", "have 4: \"S \\<rightarrow> bool_rel = (S\\<inverse> \\<rightarrow> bool_rel)\\<inverse>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<rightarrow> bool_rel =\n    (S\\<inverse> \\<rightarrow> bool_rel)\\<inverse>", "by simp"], ["proof (state)\nthis:\n  S \\<rightarrow> bool_rel = (S\\<inverse> \\<rightarrow> bool_rel)\\<inverse>\n\ngoal (1 subgoal):\n 1. (\\<langle>L, S\\<rangle>nba_rel)\\<inverse> = \\<langle>L\\<inverse>,\n    S\\<inverse>\\<rangle>nba_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>L, S\\<rangle>nba_rel)\\<inverse> = \\<langle>L\\<inverse>,\n    S\\<inverse>\\<rangle>nba_rel", "unfolding nba_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(A\\<^sub>1, A\\<^sub>2).\n     (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n     \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n     (initial A\\<^sub>1, initial A\\<^sub>2)\n     \\<in> \\<langle>S\\<rangle>set_rel \\<and>\n     (transition A\\<^sub>1, transition A\\<^sub>2)\n     \\<in> L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle>set_rel \\<and>\n     (accepting A\\<^sub>1, accepting A\\<^sub>2)\n     \\<in> S \\<rightarrow> bool_rel}\\<inverse> =\n    {(A\\<^sub>1, A\\<^sub>2).\n     (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n     \\<in> \\<langle>L\\<inverse>\\<rangle>set_rel \\<and>\n     (initial A\\<^sub>1, initial A\\<^sub>2)\n     \\<in> \\<langle>S\\<inverse>\\<rangle>set_rel \\<and>\n     (transition A\\<^sub>1, transition A\\<^sub>2)\n     \\<in> L\\<inverse> \\<rightarrow>\n           S\\<inverse> \\<rightarrow>\n           \\<langle>S\\<inverse>\\<rangle>set_rel \\<and>\n     (accepting A\\<^sub>1, accepting A\\<^sub>2)\n     \\<in> S\\<inverse> \\<rightarrow> bool_rel}", "unfolding 3"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(A\\<^sub>1, A\\<^sub>2).\n     (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n     \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n     (initial A\\<^sub>1, initial A\\<^sub>2)\n     \\<in> \\<langle>S\\<rangle>set_rel \\<and>\n     (transition A\\<^sub>1, transition A\\<^sub>2)\n     \\<in> (L\\<inverse> \\<rightarrow>\n            S\\<inverse> \\<rightarrow>\n            \\<langle>S\\<inverse>\\<rangle>set_rel)\\<inverse> \\<and>\n     (accepting A\\<^sub>1, accepting A\\<^sub>2)\n     \\<in> S \\<rightarrow> bool_rel}\\<inverse> =\n    {(A\\<^sub>1, A\\<^sub>2).\n     (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n     \\<in> \\<langle>L\\<inverse>\\<rangle>set_rel \\<and>\n     (initial A\\<^sub>1, initial A\\<^sub>2)\n     \\<in> \\<langle>S\\<inverse>\\<rangle>set_rel \\<and>\n     (transition A\\<^sub>1, transition A\\<^sub>2)\n     \\<in> L\\<inverse> \\<rightarrow>\n           S\\<inverse> \\<rightarrow>\n           \\<langle>S\\<inverse>\\<rangle>set_rel \\<and>\n     (accepting A\\<^sub>1, accepting A\\<^sub>2)\n     \\<in> S\\<inverse> \\<rightarrow> bool_rel}", "unfolding 1 2 4"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(A\\<^sub>1, A\\<^sub>2).\n     (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n     \\<in> (\\<langle>L\\<inverse>\\<rangle>set_rel)\\<inverse> \\<and>\n     (initial A\\<^sub>1, initial A\\<^sub>2)\n     \\<in> (\\<langle>S\\<inverse>\\<rangle>set_rel)\\<inverse> \\<and>\n     (transition A\\<^sub>1, transition A\\<^sub>2)\n     \\<in> (L\\<inverse> \\<rightarrow>\n            S\\<inverse> \\<rightarrow>\n            \\<langle>S\\<inverse>\\<rangle>set_rel)\\<inverse> \\<and>\n     (accepting A\\<^sub>1, accepting A\\<^sub>2)\n     \\<in> (S\\<inverse> \\<rightarrow> bool_rel)\\<inverse>}\\<inverse> =\n    {(A\\<^sub>1, A\\<^sub>2).\n     (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n     \\<in> \\<langle>L\\<inverse>\\<rangle>set_rel \\<and>\n     (initial A\\<^sub>1, initial A\\<^sub>2)\n     \\<in> \\<langle>S\\<inverse>\\<rangle>set_rel \\<and>\n     (transition A\\<^sub>1, transition A\\<^sub>2)\n     \\<in> L\\<inverse> \\<rightarrow>\n           S\\<inverse> \\<rightarrow>\n           \\<langle>S\\<inverse>\\<rangle>set_rel \\<and>\n     (accepting A\\<^sub>1, accepting A\\<^sub>2)\n     \\<in> S\\<inverse> \\<rightarrow> bool_rel}", "by fastforce"], ["proof (state)\nthis:\n  (\\<langle>L, S\\<rangle>nba_rel)\\<inverse> = \\<langle>L\\<inverse>,\n  S\\<inverse>\\<rangle>nba_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nba_rel_eq: \"(A, A) \\<in> \\<langle>Id_on (alphabet A), Id_on (nodes A)\\<rangle> nba_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, A) \\<in> \\<langle>Id_on (alphabet A),\n    Id_on (nodes A)\\<rangle>nba_rel", "unfolding nba_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, A)\n    \\<in> {(A\\<^sub>1, A\\<^sub>2).\n           (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n           \\<in> \\<langle>Id_on (alphabet A)\\<rangle>set_rel \\<and>\n           (initial A\\<^sub>1, initial A\\<^sub>2)\n           \\<in> \\<langle>Id_on (nodes A)\\<rangle>set_rel \\<and>\n           (transition A\\<^sub>1, transition A\\<^sub>2)\n           \\<in> Id_on (alphabet A) \\<rightarrow>\n                 Id_on (nodes A) \\<rightarrow>\n                 \\<langle>Id_on (nodes A)\\<rangle>set_rel \\<and>\n           (accepting A\\<^sub>1, accepting A\\<^sub>2)\n           \\<in> Id_on (nodes A) \\<rightarrow> bool_rel}", "by auto"], ["", "lemma enableds_param[param]: \"(nba.enableds, nba.enableds) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> S \\<rightarrow> \\<langle>L \\<times>\\<^sub>r S\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (nba.enableds, nba.enableds)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          S \\<rightarrow> \\<langle>L \\<times>\\<^sub>r S\\<rangle>set_rel", "using nba_param(2, 4)"], ["proof (prove)\nusing this:\n  (alphabet, alphabet)\n  \\<in> \\<langle>?L, ?S\\<rangle>nba_rel \\<rightarrow>\n        \\<langle>?L\\<rangle>set_rel\n  (transition, transition)\n  \\<in> \\<langle>?L, ?S\\<rangle>nba_rel \\<rightarrow>\n        ?L \\<rightarrow> ?S \\<rightarrow> \\<langle>?S\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (nba.enableds, nba.enableds)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          S \\<rightarrow> \\<langle>L \\<times>\\<^sub>r S\\<rangle>set_rel", "unfolding nba.enableds_def fun_rel_def set_rel_def"], ["proof (prove)\nusing this:\n  (alphabet, alphabet)\n  \\<in> {(f, f').\n         \\<forall>(a, a')\\<in>\\<langle>?L, ?S\\<rangle>nba_rel.\n            (f a, f' a')\n            \\<in> {(A, B).\n                   (\\<forall>x\\<in>A.\n                       \\<exists>y\\<in>B. (x, y) \\<in> ?L) \\<and>\n                   (\\<forall>y\\<in>B. \\<exists>x\\<in>A. (x, y) \\<in> ?L)}}\n  (transition, transition)\n  \\<in> {(f, f').\n         \\<forall>(a, a')\\<in>\\<langle>?L, ?S\\<rangle>nba_rel.\n            (f a, f' a')\n            \\<in> {(f, f').\n                   \\<forall>(a, a')\\<in>?L.\n                      (f a, f' a')\n                      \\<in> {(f, f').\n                             \\<forall>(a, a')\\<in>?S.\n                                (f a, f' a')\n                                \\<in> {(A, B).\n (\\<forall>x\\<in>A. \\<exists>y\\<in>B. (x, y) \\<in> ?S) \\<and>\n (\\<forall>y\\<in>B. \\<exists>x\\<in>A. (x, y) \\<in> ?S)}}}}\n\ngoal (1 subgoal):\n 1. (\\<lambda>A p.\n        {a. fst a \\<in> alphabet A \\<and>\n            snd a \\<in> transition A (fst a) p},\n     \\<lambda>A p.\n        {a. fst a \\<in> alphabet A \\<and>\n            snd a \\<in> transition A (fst a) p})\n    \\<in> {(f, f').\n           \\<forall>(a, a')\\<in>\\<langle>L, S\\<rangle>nba_rel.\n              (f a, f' a')\n              \\<in> {(f, f').\n                     \\<forall>(a, a')\\<in>S.\n                        (f a, f' a')\n                        \\<in> {(A, B).\n                               (\\<forall>x\\<in>A.\n                                   \\<exists>y\\<in>B.\n(x, y) \\<in> L \\<times>\\<^sub>r S) \\<and>\n                               (\\<forall>y\\<in>B.\n                                   \\<exists>x\\<in>A.\n(x, y) \\<in> L \\<times>\\<^sub>r S)}}}", "by fastforce"], ["", "lemma paths_param[param]: \"(nba.paths, nba.paths) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> S \\<rightarrow> \\<langle>\\<langle>L \\<times>\\<^sub>r S\\<rangle> list_rel\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (nba.paths, nba.paths)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          S \\<rightarrow>\n          \\<langle>\\<langle>L \\<times>\\<^sub>r\n                            S\\<rangle>list_rel\\<rangle>set_rel", "using enableds_param[param_fo]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x1, ?x'1) \\<in> \\<langle>?L2, ?A\\<rangle>nba_rel;\n   (?x, ?x') \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> (nba.enableds ?x1 ?x, nba.enableds ?x'1 ?x')\n                    \\<in> \\<langle>?L2 \\<times>\\<^sub>r ?A\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (nba.paths, nba.paths)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          S \\<rightarrow>\n          \\<langle>\\<langle>L \\<times>\\<^sub>r\n                            S\\<rangle>list_rel\\<rangle>set_rel", "by parametricity"], ["", "lemma runs_param[param]: \"(nba.runs, nba.runs) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> S \\<rightarrow> \\<langle>\\<langle>L \\<times>\\<^sub>r S\\<rangle> stream_rel\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (nba.runs, nba.runs)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          S \\<rightarrow>\n          \\<langle>\\<langle>L \\<times>\\<^sub>r\n                            S\\<rangle>stream_rel\\<rangle>set_rel", "using enableds_param[param_fo]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x1, ?x'1) \\<in> \\<langle>?L2, ?A\\<rangle>nba_rel;\n   (?x, ?x') \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> (nba.enableds ?x1 ?x, nba.enableds ?x'1 ?x')\n                    \\<in> \\<langle>?L2 \\<times>\\<^sub>r ?A\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (nba.runs, nba.runs)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          S \\<rightarrow>\n          \\<langle>\\<langle>L \\<times>\\<^sub>r\n                            S\\<rangle>stream_rel\\<rangle>set_rel", "by parametricity"], ["", "lemma reachable_param[param]: \"(reachable, reachable) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (reachable, reachable)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          S \\<rightarrow> \\<langle>S\\<rangle>set_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (reachable, reachable)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          S \\<rightarrow> \\<langle>S\\<rangle>set_rel", "have 1: \"reachable A p = (\\<lambda> wr. target wr p) ` nba.paths A p\" for A :: \"('label, 'state) nba\" and p"], ["proof (prove)\ngoal (1 subgoal):\n 1. reachable A p = (\\<lambda>wr. target wr p) ` nba.paths A p", "unfolding nba.reachable_alt_def nba.paths_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {target r p |r. path A r p} =\n    (\\<lambda>wr. target wr p) ` {r. path A r p}", "by auto"], ["proof (state)\nthis:\n  reachable ?A1 ?p1 = (\\<lambda>wr. target wr ?p1) ` nba.paths ?A1 ?p1\n\ngoal (1 subgoal):\n 1. (reachable, reachable)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          S \\<rightarrow> \\<langle>S\\<rangle>set_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (reachable, reachable)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          S \\<rightarrow> \\<langle>S\\<rangle>set_rel", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>A p. (\\<lambda>wr. target wr p) ` nba.paths A p,\n     \\<lambda>A p. (\\<lambda>wr. target wr p) ` nba.paths A p)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          S \\<rightarrow> \\<langle>S\\<rangle>set_rel", "using enableds_param[param_fo]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x1, ?x'1) \\<in> \\<langle>?L2, ?A\\<rangle>nba_rel;\n   (?x, ?x') \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> (nba.enableds ?x1 ?x, nba.enableds ?x'1 ?x')\n                    \\<in> \\<langle>?L2 \\<times>\\<^sub>r ?A\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (\\<lambda>A p. (\\<lambda>wr. target wr p) ` nba.paths A p,\n     \\<lambda>A p. (\\<lambda>wr. target wr p) ` nba.paths A p)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          S \\<rightarrow> \\<langle>S\\<rangle>set_rel", "by parametricity"], ["proof (state)\nthis:\n  (reachable, reachable)\n  \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n        S \\<rightarrow> \\<langle>S\\<rangle>set_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nodes_param[param]: \"(nodes, nodes) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> \\<langle>S\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (nodes, nodes)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          \\<langle>S\\<rangle>set_rel", "unfolding nba.nodes_alt_def Collect_mem_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>A. \\<Union> (reachable A ` initial A),\n     \\<lambda>A. \\<Union> (reachable A ` initial A))\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          \\<langle>S\\<rangle>set_rel", "by parametricity"], ["", "lemma language_param[param]: \"(language, language) \\<in> \\<langle>L, S\\<rangle> nba_rel \\<rightarrow> \\<langle>\\<langle>L\\<rangle> stream_rel\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (language, language)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          \\<langle>\\<langle>L\\<rangle>stream_rel\\<rangle>set_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (language, language)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          \\<langle>\\<langle>L\\<rangle>stream_rel\\<rangle>set_rel", "have 1: \"language A = (\\<Union> p \\<in> initial A. \\<Union> wr \\<in> nba.runs A p.\n      if infs (accepting A) (p ## smap snd wr) then {smap fst wr} else {})\"\n      for A :: \"('label, 'state) nba\""], ["proof (prove)\ngoal (1 subgoal):\n 1. language A =\n    (\\<Union>p\\<in>initial A.\n        \\<Union>wr\\<in>nba.runs A p.\n           if infs (accepting A) (p ## smap snd wr) then {smap fst wr}\n           else {})", "unfolding nba.language_def nba.runs_def image_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {uu_.\n     \\<exists>w r p.\n        uu_ = w \\<and>\n        p \\<in> initial A \\<and>\n        run A (w ||| r) p \\<and> infs (accepting A) (p ## r)} =\n    \\<Union>\n     {y. \\<exists>x\\<in>initial A.\n            y =\n            \\<Union>\n             {y. \\<exists>xa\\<in>{r. run A r x}.\n                    y =\n                    (if infs (accepting A) (x ## smap snd xa)\n                     then {smap fst xa} else {})}}", "by (auto iff: split_szip_ex simp del: alw_smap)"], ["proof (state)\nthis:\n  language ?A1 =\n  (\\<Union>p\\<in>initial ?A1.\n      \\<Union>wr\\<in>nba.runs ?A1 p.\n         if infs (accepting ?A1) (p ## smap snd wr) then {smap fst wr}\n         else {})\n\ngoal (1 subgoal):\n 1. (language, language)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          \\<langle>\\<langle>L\\<rangle>stream_rel\\<rangle>set_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (language, language)\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          \\<langle>\\<langle>L\\<rangle>stream_rel\\<rangle>set_rel", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>A.\n        \\<Union>p\\<in>initial A.\n           \\<Union>wr\\<in>nba.runs A p.\n              if infs (accepting A) (p ## smap snd wr) then {smap fst wr}\n              else {},\n     \\<lambda>A.\n        \\<Union>p\\<in>initial A.\n           \\<Union>wr\\<in>nba.runs A p.\n              if infs (accepting A) (p ## smap snd wr) then {smap fst wr}\n              else {})\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          \\<langle>\\<langle>L\\<rangle>stream_rel\\<rangle>set_rel", "using enableds_param[param_fo]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x1, ?x'1) \\<in> \\<langle>?L2, ?A\\<rangle>nba_rel;\n   (?x, ?x') \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> (nba.enableds ?x1 ?x, nba.enableds ?x'1 ?x')\n                    \\<in> \\<langle>?L2 \\<times>\\<^sub>r ?A\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (\\<lambda>A.\n        \\<Union>p\\<in>initial A.\n           \\<Union>wr\\<in>nba.runs A p.\n              if infs (accepting A) (p ## smap snd wr) then {smap fst wr}\n              else {},\n     \\<lambda>A.\n        \\<Union>p\\<in>initial A.\n           \\<Union>wr\\<in>nba.runs A p.\n              if infs (accepting A) (p ## smap snd wr) then {smap fst wr}\n              else {})\n    \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n          \\<langle>\\<langle>L\\<rangle>stream_rel\\<rangle>set_rel", "by parametricity"], ["proof (state)\nthis:\n  (language, language)\n  \\<in> \\<langle>L, S\\<rangle>nba_rel \\<rightarrow>\n        \\<langle>\\<langle>L\\<rangle>stream_rel\\<rangle>set_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}