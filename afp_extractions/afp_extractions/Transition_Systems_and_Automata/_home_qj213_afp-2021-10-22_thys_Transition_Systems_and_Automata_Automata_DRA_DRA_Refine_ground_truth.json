{"file_name": "/home/qj213/afp-2021-10-22/thys/Transition_Systems_and_Automata/Automata/DRA/DRA_Refine.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Transition_Systems_and_Automata", "problem_names": ["lemma dra_param[param]:\n    \"(dra, dra) \\<in> \\<langle>L\\<rangle> set_rel \\<rightarrow> S \\<rightarrow> (L \\<rightarrow> S \\<rightarrow> S) \\<rightarrow> \\<langle>rabin_rel S\\<rangle> list_rel \\<rightarrow>\n      \\<langle>L, S\\<rangle> dra_rel\"\n    \"(alphabet, alphabet) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> \\<langle>L\\<rangle> set_rel\"\n    \"(initial, initial) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> S\"\n    \"(transition, transition) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> L \\<rightarrow> S \\<rightarrow> S\"\n    \"(condition, condition) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> \\<langle>rabin_rel S\\<rangle> list_rel\"", "lemma dra_rel_id[simp]: \"\\<langle>Id, Id\\<rangle> dra_rel = Id\"", "lemma dra_rel_comp[trans]:\n    assumes [param]: \"(A, B) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle> dra_rel\" \"(B, C) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle> dra_rel\"\n    shows \"(A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2, S\\<^sub>1 O S\\<^sub>2\\<rangle> dra_rel\"", "lemma dra_rel_converse[simp]: \"(\\<langle>L, S\\<rangle> dra_rel)\\<inverse> = \\<langle>L\\<inverse>, S\\<inverse>\\<rangle> dra_rel\"", "lemma dra_rel_eq: \"(A, A) \\<in> \\<langle>Id_on (alphabet A), Id_on (nodes A)\\<rangle> dra_rel\"", "lemma enableds_param[param]: \"(dra.enableds, dra.enableds) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> S \\<rightarrow> \\<langle>L\\<rangle> set_rel\"", "lemma paths_param[param]: \"(dra.paths, dra.paths) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> S \\<rightarrow> \\<langle>\\<langle>L\\<rangle> list_rel\\<rangle> set_rel\"", "lemma runs_param[param]: \"(dra.runs, dra.runs) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> S \\<rightarrow> \\<langle>\\<langle>L\\<rangle> stream_rel\\<rangle> set_rel\"", "lemma reachable_param[param]: \"(reachable, reachable) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> set_rel\"", "lemma nodes_param[param]: \"(nodes, nodes) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> \\<langle>S\\<rangle> set_rel\"", "lemma language_param[param]: \"(language, language) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> \\<langle>\\<langle>L\\<rangle> stream_rel\\<rangle> set_rel\""], "translations": [["", "lemma dra_param[param]:\n    \"(dra, dra) \\<in> \\<langle>L\\<rangle> set_rel \\<rightarrow> S \\<rightarrow> (L \\<rightarrow> S \\<rightarrow> S) \\<rightarrow> \\<langle>rabin_rel S\\<rangle> list_rel \\<rightarrow>\n      \\<langle>L, S\\<rangle> dra_rel\"\n    \"(alphabet, alphabet) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> \\<langle>L\\<rangle> set_rel\"\n    \"(initial, initial) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> S\"\n    \"(transition, transition) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> L \\<rightarrow> S \\<rightarrow> S\"\n    \"(condition, condition) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> \\<langle>rabin_rel S\\<rangle> list_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((dra, dra)\n     \\<in> \\<langle>L\\<rangle>set_rel \\<rightarrow>\n           S \\<rightarrow>\n           (L \\<rightarrow> S \\<rightarrow> S) \\<rightarrow>\n           \\<langle>(S \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                    (S \\<rightarrow>\n                     bool_rel)\\<rangle>list_rel \\<rightarrow>\n           \\<langle>L, S\\<rangle>dra_rel &&&\n     (alphabet, alphabet)\n     \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n           \\<langle>L\\<rangle>set_rel) &&&\n    (initial, initial)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow> S &&&\n    (transition, transition)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          L \\<rightarrow> S \\<rightarrow> S &&&\n    (condition, condition)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          \\<langle>(S \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                   (S \\<rightarrow> bool_rel)\\<rangle>list_rel", "unfolding dra_rel_def fun_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((dra, dra)\n     \\<in> {(f, f').\n            \\<forall>(a, a')\\<in>\\<langle>L\\<rangle>set_rel.\n               (f a, f' a')\n               \\<in> {(f, f').\n                      \\<forall>(a, a')\\<in>S.\n                         (f a, f' a')\n                         \\<in> {(f, f').\n                                \\<forall>(a, a')\n   \\<in>{(f, f').\n         \\<forall>(a, a')\\<in>L.\n            (f a, f' a')\n            \\<in> {(f, f'). \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> S}}.\n                                   (f a, f' a')\n                                   \\<in> {(f, f').\n    \\<forall>(a, a')\n             \\<in>\\<langle>{(f, f').\n                            \\<forall>(a, a')\\<in>S.\n                               (f a, f' a') \\<in> bool_rel} \\<times>\\<^sub>r\n                           {(f, f').\n                            \\<forall>(a, a')\\<in>S.\n                               (f a, f' a')\n                               \\<in> bool_rel}\\<rangle>list_rel.\n       (f a, f' a')\n       \\<in> {(A\\<^sub>1, A\\<^sub>2).\n              (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n              \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n              (initial A\\<^sub>1, initial A\\<^sub>2) \\<in> S \\<and>\n              (transition A\\<^sub>1, transition A\\<^sub>2)\n              \\<in> {(f, f').\n                     \\<forall>(a, a')\\<in>L.\n                        (f a, f' a')\n                        \\<in> {(f, f').\n                               \\<forall>(a, a')\\<in>S.\n                                  (f a, f' a') \\<in> S}} \\<and>\n              (condition A\\<^sub>1, condition A\\<^sub>2)\n              \\<in> \\<langle>{(f, f').\n                              \\<forall>(a, a')\\<in>S.\n                                 (f a, f' a')\n                                 \\<in> bool_rel} \\<times>\\<^sub>r\n                             {(f, f').\n                              \\<forall>(a, a')\\<in>S.\n                                 (f a, f' a')\n                                 \\<in> bool_rel}\\<rangle>list_rel}}}}} &&&\n     (alphabet, alphabet)\n     \\<in> {(f, f').\n            \\<forall>(a, a')\n                     \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                           (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n                           \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n                           (initial A\\<^sub>1, initial A\\<^sub>2)\n                           \\<in> S \\<and>\n                           (transition A\\<^sub>1, transition A\\<^sub>2)\n                           \\<in> {(f, f').\n                                  \\<forall>(a, a')\\<in>L.\n                                     (f a, f' a')\n                                     \\<in> {(f, f').\n      \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> S}} \\<and>\n                           (condition A\\<^sub>1, condition A\\<^sub>2)\n                           \\<in> \\<langle>{(f, f').\n     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel} \\<times>\\<^sub>r\n    {(f, f').\n     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n               (f a, f' a') \\<in> \\<langle>L\\<rangle>set_rel}) &&&\n    (initial, initial)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n                          (initial A\\<^sub>1, initial A\\<^sub>2)\n                          \\<in> S \\<and>\n                          (transition A\\<^sub>1, transition A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> S}} \\<and>\n                          (condition A\\<^sub>1, condition A\\<^sub>2)\n                          \\<in> \\<langle>{(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel} \\<times>\\<^sub>r\n   {(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n              (f a, f' a') \\<in> S} &&&\n    (transition, transition)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n                          (initial A\\<^sub>1, initial A\\<^sub>2)\n                          \\<in> S \\<and>\n                          (transition A\\<^sub>1, transition A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> S}} \\<and>\n                          (condition A\\<^sub>1, condition A\\<^sub>2)\n                          \\<in> \\<langle>{(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel} \\<times>\\<^sub>r\n   {(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n              (f a, f' a')\n              \\<in> {(f, f').\n                     \\<forall>(a, a')\\<in>L.\n                        (f a, f' a')\n                        \\<in> {(f, f').\n                               \\<forall>(a, a')\\<in>S.\n                                  (f a, f' a') \\<in> S}}} &&&\n    (condition, condition)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n                          (initial A\\<^sub>1, initial A\\<^sub>2)\n                          \\<in> S \\<and>\n                          (transition A\\<^sub>1, transition A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> S}} \\<and>\n                          (condition A\\<^sub>1, condition A\\<^sub>2)\n                          \\<in> \\<langle>{(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel} \\<times>\\<^sub>r\n   {(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n              (f a, f' a')\n              \\<in> \\<langle>{(f, f').\n                              \\<forall>(a, a')\\<in>S.\n                                 (f a, f' a')\n                                 \\<in> bool_rel} \\<times>\\<^sub>r\n                             {(f, f').\n                              \\<forall>(a, a')\\<in>S.\n                                 (f a, f' a')\n                                 \\<in> bool_rel}\\<rangle>list_rel}", "by auto"], ["", "lemma dra_rel_id[simp]: \"\\<langle>Id, Id\\<rangle> dra_rel = Id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>Id, Id\\<rangle>dra_rel = Id", "unfolding dra_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(A\\<^sub>1, A\\<^sub>2).\n     (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n     \\<in> \\<langle>Id\\<rangle>set_rel \\<and>\n     (initial A\\<^sub>1, initial A\\<^sub>2) \\<in> Id \\<and>\n     (transition A\\<^sub>1, transition A\\<^sub>2)\n     \\<in> Id \\<rightarrow> Id \\<rightarrow> Id \\<and>\n     (condition A\\<^sub>1, condition A\\<^sub>2)\n     \\<in> \\<langle>(Id \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                    (Id \\<rightarrow> bool_rel)\\<rangle>list_rel} =\n    Id", "using dra.expand"], ["proof (prove)\nusing this:\n  alphabet ?dra = alphabet ?dra' \\<and>\n  initial ?dra = initial ?dra' \\<and>\n  transition ?dra = transition ?dra' \\<and>\n  condition ?dra = condition ?dra' \\<Longrightarrow>\n  ?dra = ?dra'\n\ngoal (1 subgoal):\n 1. {(A\\<^sub>1, A\\<^sub>2).\n     (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n     \\<in> \\<langle>Id\\<rangle>set_rel \\<and>\n     (initial A\\<^sub>1, initial A\\<^sub>2) \\<in> Id \\<and>\n     (transition A\\<^sub>1, transition A\\<^sub>2)\n     \\<in> Id \\<rightarrow> Id \\<rightarrow> Id \\<and>\n     (condition A\\<^sub>1, condition A\\<^sub>2)\n     \\<in> \\<langle>(Id \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                    (Id \\<rightarrow> bool_rel)\\<rangle>list_rel} =\n    Id", "by auto"], ["", "lemma dra_rel_comp[trans]:\n    assumes [param]: \"(A, B) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle> dra_rel\" \"(B, C) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle> dra_rel\"\n    shows \"(A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2, S\\<^sub>1 O S\\<^sub>2\\<rangle> dra_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>dra_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>dra_rel", "have \"(condition A, condition B) \\<in> \\<langle>rabin_rel S\\<^sub>1\\<rangle> list_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (condition A, condition B)\n    \\<in> \\<langle>(S\\<^sub>1 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                   (S\\<^sub>1 \\<rightarrow> bool_rel)\\<rangle>list_rel", "by parametricity"], ["proof (state)\nthis:\n  (condition A, condition B)\n  \\<in> \\<langle>(S\\<^sub>1 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                 (S\\<^sub>1 \\<rightarrow> bool_rel)\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>dra_rel", "also"], ["proof (state)\nthis:\n  (condition A, condition B)\n  \\<in> \\<langle>(S\\<^sub>1 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                 (S\\<^sub>1 \\<rightarrow> bool_rel)\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>dra_rel", "have \"(condition B, condition C) \\<in> \\<langle>rabin_rel S\\<^sub>2\\<rangle> list_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (condition B, condition C)\n    \\<in> \\<langle>(S\\<^sub>2 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                   (S\\<^sub>2 \\<rightarrow> bool_rel)\\<rangle>list_rel", "by parametricity"], ["proof (state)\nthis:\n  (condition B, condition C)\n  \\<in> \\<langle>(S\\<^sub>2 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                 (S\\<^sub>2 \\<rightarrow> bool_rel)\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>dra_rel", "finally"], ["proof (chain)\npicking this:\n  (condition A, condition C)\n  \\<in> \\<langle>(S\\<^sub>1 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                 (S\\<^sub>1 \\<rightarrow> bool_rel)\\<rangle>list_rel O\n        \\<langle>(S\\<^sub>2 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                 (S\\<^sub>2 \\<rightarrow> bool_rel)\\<rangle>list_rel", "have 1: \"(condition A, condition C) \\<in> \\<langle>rabin_rel S\\<^sub>1 O rabin_rel S\\<^sub>2\\<rangle> list_rel\""], ["proof (prove)\nusing this:\n  (condition A, condition C)\n  \\<in> \\<langle>(S\\<^sub>1 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                 (S\\<^sub>1 \\<rightarrow> bool_rel)\\<rangle>list_rel O\n        \\<langle>(S\\<^sub>2 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                 (S\\<^sub>2 \\<rightarrow> bool_rel)\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. (condition A, condition C)\n    \\<in> \\<langle>((S\\<^sub>1 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                    (S\\<^sub>1 \\<rightarrow> bool_rel)) O\n                   ((S\\<^sub>2 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                    (S\\<^sub>2 \\<rightarrow> bool_rel))\\<rangle>list_rel", "by simp"], ["proof (state)\nthis:\n  (condition A, condition C)\n  \\<in> \\<langle>((S\\<^sub>1 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                  (S\\<^sub>1 \\<rightarrow> bool_rel)) O\n                 ((S\\<^sub>2 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                  (S\\<^sub>2 \\<rightarrow> bool_rel))\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>dra_rel", "have 2: \"rabin_rel S\\<^sub>1 O rabin_rel S\\<^sub>2 \\<subseteq> rabin_rel (S\\<^sub>1 O S\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((S\\<^sub>1 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n     (S\\<^sub>1 \\<rightarrow> bool_rel)) O\n    ((S\\<^sub>2 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n     (S\\<^sub>2 \\<rightarrow> bool_rel))\n    \\<subseteq> (S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                 bool_rel) \\<times>\\<^sub>r\n                (S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> bool_rel)", "by (force simp: fun_rel_def)"], ["proof (state)\nthis:\n  ((S\\<^sub>1 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n   (S\\<^sub>1 \\<rightarrow> bool_rel)) O\n  ((S\\<^sub>2 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n   (S\\<^sub>2 \\<rightarrow> bool_rel))\n  \\<subseteq> (S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n               bool_rel) \\<times>\\<^sub>r\n              (S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> bool_rel)\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>dra_rel", "have 3: \"(condition A, condition C) \\<in> \\<langle>rabin_rel (S\\<^sub>1 O S\\<^sub>2)\\<rangle> list_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (condition A, condition C)\n    \\<in> \\<langle>(S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                    bool_rel) \\<times>\\<^sub>r\n                   (S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                    bool_rel)\\<rangle>list_rel", "using 1 2 list_rel_mono"], ["proof (prove)\nusing this:\n  (condition A, condition C)\n  \\<in> \\<langle>((S\\<^sub>1 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                  (S\\<^sub>1 \\<rightarrow> bool_rel)) O\n                 ((S\\<^sub>2 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                  (S\\<^sub>2 \\<rightarrow> bool_rel))\\<rangle>list_rel\n  ((S\\<^sub>1 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n   (S\\<^sub>1 \\<rightarrow> bool_rel)) O\n  ((S\\<^sub>2 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n   (S\\<^sub>2 \\<rightarrow> bool_rel))\n  \\<subseteq> (S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n               bool_rel) \\<times>\\<^sub>r\n              (S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> bool_rel)\n  ?R \\<subseteq> ?R' \\<Longrightarrow>\n  \\<langle>?R\\<rangle>list_rel \\<subseteq> \\<langle>?R'\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. (condition A, condition C)\n    \\<in> \\<langle>(S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                    bool_rel) \\<times>\\<^sub>r\n                   (S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                    bool_rel)\\<rangle>list_rel", "by blast"], ["proof (state)\nthis:\n  (condition A, condition C)\n  \\<in> \\<langle>(S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                  bool_rel) \\<times>\\<^sub>r\n                 (S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                  bool_rel)\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>dra_rel", "have \"(transition A, transition B) \\<in> L\\<^sub>1 \\<rightarrow> S\\<^sub>1 \\<rightarrow> S\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (transition A, transition B)\n    \\<in> L\\<^sub>1 \\<rightarrow> S\\<^sub>1 \\<rightarrow> S\\<^sub>1", "by parametricity"], ["proof (state)\nthis:\n  (transition A, transition B)\n  \\<in> L\\<^sub>1 \\<rightarrow> S\\<^sub>1 \\<rightarrow> S\\<^sub>1\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>dra_rel", "also"], ["proof (state)\nthis:\n  (transition A, transition B)\n  \\<in> L\\<^sub>1 \\<rightarrow> S\\<^sub>1 \\<rightarrow> S\\<^sub>1\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>dra_rel", "have \"(transition B, transition C) \\<in> L\\<^sub>2 \\<rightarrow> S\\<^sub>2 \\<rightarrow> S\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (transition B, transition C)\n    \\<in> L\\<^sub>2 \\<rightarrow> S\\<^sub>2 \\<rightarrow> S\\<^sub>2", "by parametricity"], ["proof (state)\nthis:\n  (transition B, transition C)\n  \\<in> L\\<^sub>2 \\<rightarrow> S\\<^sub>2 \\<rightarrow> S\\<^sub>2\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>dra_rel", "finally"], ["proof (chain)\npicking this:\n  (transition A, transition C)\n  \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n        S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> S\\<^sub>1 O S\\<^sub>2", "have 4: \"(transition A, transition C) \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow> S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> S\\<^sub>1 O S\\<^sub>2\""], ["proof (prove)\nusing this:\n  (transition A, transition C)\n  \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n        S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> S\\<^sub>1 O S\\<^sub>2\n\ngoal (1 subgoal):\n 1. (transition A, transition C)\n    \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n          S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> S\\<^sub>1 O S\\<^sub>2", "by this"], ["proof (state)\nthis:\n  (transition A, transition C)\n  \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n        S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> S\\<^sub>1 O S\\<^sub>2\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>dra_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>dra_rel", "unfolding dra_rel_def mem_Collect_eq prod.case set_rel_compp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (alphabet A, alphabet C)\n    \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel O\n          \\<langle>L\\<^sub>2\\<rangle>set_rel \\<and>\n    (initial A, initial C) \\<in> S\\<^sub>1 O S\\<^sub>2 \\<and>\n    (transition A, transition C)\n    \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n          S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> S\\<^sub>1 O S\\<^sub>2 \\<and>\n    (condition A, condition C)\n    \\<in> \\<langle>(S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                    bool_rel) \\<times>\\<^sub>r\n                   (S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                    bool_rel)\\<rangle>list_rel", "using 3 4"], ["proof (prove)\nusing this:\n  (condition A, condition C)\n  \\<in> \\<langle>(S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                  bool_rel) \\<times>\\<^sub>r\n                 (S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                  bool_rel)\\<rangle>list_rel\n  (transition A, transition C)\n  \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n        S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> S\\<^sub>1 O S\\<^sub>2\n\ngoal (1 subgoal):\n 1. (alphabet A, alphabet C)\n    \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel O\n          \\<langle>L\\<^sub>2\\<rangle>set_rel \\<and>\n    (initial A, initial C) \\<in> S\\<^sub>1 O S\\<^sub>2 \\<and>\n    (transition A, transition C)\n    \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n          S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> S\\<^sub>1 O S\\<^sub>2 \\<and>\n    (condition A, condition C)\n    \\<in> \\<langle>(S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                    bool_rel) \\<times>\\<^sub>r\n                   (S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                    bool_rel)\\<rangle>list_rel", "using dra_param(2 - 5)[THEN fun_relD, OF assms(1)]"], ["proof (prove)\nusing this:\n  (condition A, condition C)\n  \\<in> \\<langle>(S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                  bool_rel) \\<times>\\<^sub>r\n                 (S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                  bool_rel)\\<rangle>list_rel\n  (transition A, transition C)\n  \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n        S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> S\\<^sub>1 O S\\<^sub>2\n  (alphabet A, alphabet B) \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel\n  (initial A, initial B) \\<in> S\\<^sub>1\n  (transition A, transition B)\n  \\<in> L\\<^sub>1 \\<rightarrow> S\\<^sub>1 \\<rightarrow> S\\<^sub>1\n  (condition A, condition B)\n  \\<in> \\<langle>(S\\<^sub>1 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                 (S\\<^sub>1 \\<rightarrow> bool_rel)\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. (alphabet A, alphabet C)\n    \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel O\n          \\<langle>L\\<^sub>2\\<rangle>set_rel \\<and>\n    (initial A, initial C) \\<in> S\\<^sub>1 O S\\<^sub>2 \\<and>\n    (transition A, transition C)\n    \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n          S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> S\\<^sub>1 O S\\<^sub>2 \\<and>\n    (condition A, condition C)\n    \\<in> \\<langle>(S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                    bool_rel) \\<times>\\<^sub>r\n                   (S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                    bool_rel)\\<rangle>list_rel", "using dra_param(2 - 5)[THEN fun_relD, OF assms(2)]"], ["proof (prove)\nusing this:\n  (condition A, condition C)\n  \\<in> \\<langle>(S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                  bool_rel) \\<times>\\<^sub>r\n                 (S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                  bool_rel)\\<rangle>list_rel\n  (transition A, transition C)\n  \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n        S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> S\\<^sub>1 O S\\<^sub>2\n  (alphabet A, alphabet B) \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel\n  (initial A, initial B) \\<in> S\\<^sub>1\n  (transition A, transition B)\n  \\<in> L\\<^sub>1 \\<rightarrow> S\\<^sub>1 \\<rightarrow> S\\<^sub>1\n  (condition A, condition B)\n  \\<in> \\<langle>(S\\<^sub>1 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                 (S\\<^sub>1 \\<rightarrow> bool_rel)\\<rangle>list_rel\n  (alphabet B, alphabet C) \\<in> \\<langle>L\\<^sub>2\\<rangle>set_rel\n  (initial B, initial C) \\<in> S\\<^sub>2\n  (transition B, transition C)\n  \\<in> L\\<^sub>2 \\<rightarrow> S\\<^sub>2 \\<rightarrow> S\\<^sub>2\n  (condition B, condition C)\n  \\<in> \\<langle>(S\\<^sub>2 \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                 (S\\<^sub>2 \\<rightarrow> bool_rel)\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. (alphabet A, alphabet C)\n    \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel O\n          \\<langle>L\\<^sub>2\\<rangle>set_rel \\<and>\n    (initial A, initial C) \\<in> S\\<^sub>1 O S\\<^sub>2 \\<and>\n    (transition A, transition C)\n    \\<in> L\\<^sub>1 O L\\<^sub>2 \\<rightarrow>\n          S\\<^sub>1 O S\\<^sub>2 \\<rightarrow> S\\<^sub>1 O S\\<^sub>2 \\<and>\n    (condition A, condition C)\n    \\<in> \\<langle>(S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                    bool_rel) \\<times>\\<^sub>r\n                   (S\\<^sub>1 O S\\<^sub>2 \\<rightarrow>\n                    bool_rel)\\<rangle>list_rel", "by auto"], ["proof (state)\nthis:\n  (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n  S\\<^sub>1 O S\\<^sub>2\\<rangle>dra_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dra_rel_converse[simp]: \"(\\<langle>L, S\\<rangle> dra_rel)\\<inverse> = \\<langle>L\\<inverse>, S\\<inverse>\\<rangle> dra_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>L, S\\<rangle>dra_rel)\\<inverse> = \\<langle>L\\<inverse>,\n    S\\<inverse>\\<rangle>dra_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<langle>L, S\\<rangle>dra_rel)\\<inverse> = \\<langle>L\\<inverse>,\n    S\\<inverse>\\<rangle>dra_rel", "have 1: \"\\<langle>L\\<rangle> set_rel = (\\<langle>L\\<inverse>\\<rangle> set_rel)\\<inverse>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>L\\<rangle>set_rel =\n    (\\<langle>L\\<inverse>\\<rangle>set_rel)\\<inverse>", "by simp"], ["proof (state)\nthis:\n  \\<langle>L\\<rangle>set_rel =\n  (\\<langle>L\\<inverse>\\<rangle>set_rel)\\<inverse>\n\ngoal (1 subgoal):\n 1. (\\<langle>L, S\\<rangle>dra_rel)\\<inverse> = \\<langle>L\\<inverse>,\n    S\\<inverse>\\<rangle>dra_rel", "have 2: \"\\<langle>S\\<rangle> set_rel = (\\<langle>S\\<inverse>\\<rangle> set_rel)\\<inverse>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>S\\<rangle>set_rel =\n    (\\<langle>S\\<inverse>\\<rangle>set_rel)\\<inverse>", "by simp"], ["proof (state)\nthis:\n  \\<langle>S\\<rangle>set_rel =\n  (\\<langle>S\\<inverse>\\<rangle>set_rel)\\<inverse>\n\ngoal (1 subgoal):\n 1. (\\<langle>L, S\\<rangle>dra_rel)\\<inverse> = \\<langle>L\\<inverse>,\n    S\\<inverse>\\<rangle>dra_rel", "have 3: \"L \\<rightarrow> S \\<rightarrow> S = (L\\<inverse> \\<rightarrow> S\\<inverse> \\<rightarrow> S\\<inverse>)\\<inverse>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<rightarrow> S \\<rightarrow> S =\n    (L\\<inverse> \\<rightarrow>\n     S\\<inverse> \\<rightarrow> S\\<inverse>)\\<inverse>", "by simp"], ["proof (state)\nthis:\n  L \\<rightarrow> S \\<rightarrow> S =\n  (L\\<inverse> \\<rightarrow>\n   S\\<inverse> \\<rightarrow> S\\<inverse>)\\<inverse>\n\ngoal (1 subgoal):\n 1. (\\<langle>L, S\\<rangle>dra_rel)\\<inverse> = \\<langle>L\\<inverse>,\n    S\\<inverse>\\<rangle>dra_rel", "have 4: \"\\<langle>rabin_rel S\\<rangle> list_rel = (\\<langle>rabin_rel (S\\<inverse>)\\<rangle> list_rel)\\<inverse>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>(S \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n             (S \\<rightarrow> bool_rel)\\<rangle>list_rel =\n    (\\<langle>(S\\<inverse> \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n              (S\\<inverse> \\<rightarrow>\n               bool_rel)\\<rangle>list_rel)\\<inverse>", "by simp"], ["proof (state)\nthis:\n  \\<langle>(S \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n           (S \\<rightarrow> bool_rel)\\<rangle>list_rel =\n  (\\<langle>(S\\<inverse> \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n            (S\\<inverse> \\<rightarrow> bool_rel)\\<rangle>list_rel)\\<inverse>\n\ngoal (1 subgoal):\n 1. (\\<langle>L, S\\<rangle>dra_rel)\\<inverse> = \\<langle>L\\<inverse>,\n    S\\<inverse>\\<rangle>dra_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>L, S\\<rangle>dra_rel)\\<inverse> = \\<langle>L\\<inverse>,\n    S\\<inverse>\\<rangle>dra_rel", "unfolding dra_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(A\\<^sub>1, A\\<^sub>2).\n     (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n     \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n     (initial A\\<^sub>1, initial A\\<^sub>2) \\<in> S \\<and>\n     (transition A\\<^sub>1, transition A\\<^sub>2)\n     \\<in> L \\<rightarrow> S \\<rightarrow> S \\<and>\n     (condition A\\<^sub>1, condition A\\<^sub>2)\n     \\<in> \\<langle>(S \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                    (S \\<rightarrow> bool_rel)\\<rangle>list_rel}\\<inverse> =\n    {(A\\<^sub>1, A\\<^sub>2).\n     (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n     \\<in> \\<langle>L\\<inverse>\\<rangle>set_rel \\<and>\n     (initial A\\<^sub>1, initial A\\<^sub>2) \\<in> S\\<inverse> \\<and>\n     (transition A\\<^sub>1, transition A\\<^sub>2)\n     \\<in> L\\<inverse> \\<rightarrow>\n           S\\<inverse> \\<rightarrow> S\\<inverse> \\<and>\n     (condition A\\<^sub>1, condition A\\<^sub>2)\n     \\<in> \\<langle>(S\\<inverse> \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                    (S\\<inverse> \\<rightarrow> bool_rel)\\<rangle>list_rel}", "unfolding 3"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(A\\<^sub>1, A\\<^sub>2).\n     (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n     \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n     (initial A\\<^sub>1, initial A\\<^sub>2) \\<in> S \\<and>\n     (transition A\\<^sub>1, transition A\\<^sub>2)\n     \\<in> (L\\<inverse> \\<rightarrow>\n            S\\<inverse> \\<rightarrow> S\\<inverse>)\\<inverse> \\<and>\n     (condition A\\<^sub>1, condition A\\<^sub>2)\n     \\<in> \\<langle>(S \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                    (S \\<rightarrow> bool_rel)\\<rangle>list_rel}\\<inverse> =\n    {(A\\<^sub>1, A\\<^sub>2).\n     (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n     \\<in> \\<langle>L\\<inverse>\\<rangle>set_rel \\<and>\n     (initial A\\<^sub>1, initial A\\<^sub>2) \\<in> S\\<inverse> \\<and>\n     (transition A\\<^sub>1, transition A\\<^sub>2)\n     \\<in> L\\<inverse> \\<rightarrow>\n           S\\<inverse> \\<rightarrow> S\\<inverse> \\<and>\n     (condition A\\<^sub>1, condition A\\<^sub>2)\n     \\<in> \\<langle>(S\\<inverse> \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                    (S\\<inverse> \\<rightarrow> bool_rel)\\<rangle>list_rel}", "unfolding 1 2 4"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(A\\<^sub>1, A\\<^sub>2).\n     (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n     \\<in> (\\<langle>L\\<inverse>\\<rangle>set_rel)\\<inverse> \\<and>\n     (initial A\\<^sub>1, initial A\\<^sub>2) \\<in> S \\<and>\n     (transition A\\<^sub>1, transition A\\<^sub>2)\n     \\<in> (L\\<inverse> \\<rightarrow>\n            S\\<inverse> \\<rightarrow> S\\<inverse>)\\<inverse> \\<and>\n     (condition A\\<^sub>1, condition A\\<^sub>2)\n     \\<in> (\\<langle>(S\\<inverse> \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                     (S\\<inverse> \\<rightarrow>\n                      bool_rel)\\<rangle>list_rel)\\<inverse>}\\<inverse> =\n    {(A\\<^sub>1, A\\<^sub>2).\n     (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n     \\<in> \\<langle>L\\<inverse>\\<rangle>set_rel \\<and>\n     (initial A\\<^sub>1, initial A\\<^sub>2) \\<in> S\\<inverse> \\<and>\n     (transition A\\<^sub>1, transition A\\<^sub>2)\n     \\<in> L\\<inverse> \\<rightarrow>\n           S\\<inverse> \\<rightarrow> S\\<inverse> \\<and>\n     (condition A\\<^sub>1, condition A\\<^sub>2)\n     \\<in> \\<langle>(S\\<inverse> \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                    (S\\<inverse> \\<rightarrow> bool_rel)\\<rangle>list_rel}", "by fastforce"], ["proof (state)\nthis:\n  (\\<langle>L, S\\<rangle>dra_rel)\\<inverse> = \\<langle>L\\<inverse>,\n  S\\<inverse>\\<rangle>dra_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dra_rel_eq: \"(A, A) \\<in> \\<langle>Id_on (alphabet A), Id_on (nodes A)\\<rangle> dra_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, A) \\<in> \\<langle>Id_on (alphabet A),\n    Id_on (nodes A)\\<rangle>dra_rel", "unfolding dra_rel_def prod_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, A)\n    \\<in> {(A\\<^sub>1, A\\<^sub>2).\n           (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n           \\<in> \\<langle>Id_on (alphabet A)\\<rangle>set_rel \\<and>\n           (initial A\\<^sub>1, initial A\\<^sub>2)\n           \\<in> Id_on (nodes A) \\<and>\n           (transition A\\<^sub>1, transition A\\<^sub>2)\n           \\<in> Id_on (alphabet A) \\<rightarrow>\n                 Id_on (nodes A) \\<rightarrow> Id_on (nodes A) \\<and>\n           (condition A\\<^sub>1, condition A\\<^sub>2)\n           \\<in> \\<langle>{((a, b), a', b').\n                           (a, a')\n                           \\<in> Id_on (nodes A) \\<rightarrow>\n                                 bool_rel \\<and>\n                           (b, b')\n                           \\<in> Id_on (nodes A) \\<rightarrow>\n                                 bool_rel}\\<rangle>list_rel}", "using list_all2_same[to_set]"], ["proof (prove)\nusing this:\n  ((?xs, ?xs) \\<in> \\<langle>?P\\<rangle>list_rel) =\n  (\\<forall>x\\<in>set ?xs. (x, x) \\<in> ?P)\n\ngoal (1 subgoal):\n 1. (A, A)\n    \\<in> {(A\\<^sub>1, A\\<^sub>2).\n           (alphabet A\\<^sub>1, alphabet A\\<^sub>2)\n           \\<in> \\<langle>Id_on (alphabet A)\\<rangle>set_rel \\<and>\n           (initial A\\<^sub>1, initial A\\<^sub>2)\n           \\<in> Id_on (nodes A) \\<and>\n           (transition A\\<^sub>1, transition A\\<^sub>2)\n           \\<in> Id_on (alphabet A) \\<rightarrow>\n                 Id_on (nodes A) \\<rightarrow> Id_on (nodes A) \\<and>\n           (condition A\\<^sub>1, condition A\\<^sub>2)\n           \\<in> \\<langle>{((a, b), a', b').\n                           (a, a')\n                           \\<in> Id_on (nodes A) \\<rightarrow>\n                                 bool_rel \\<and>\n                           (b, b')\n                           \\<in> Id_on (nodes A) \\<rightarrow>\n                                 bool_rel}\\<rangle>list_rel}", "by auto"], ["", "lemma enableds_param[param]: \"(dra.enableds, dra.enableds) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> S \\<rightarrow> \\<langle>L\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dra.enableds, dra.enableds)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          S \\<rightarrow> \\<langle>L\\<rangle>set_rel", "unfolding dra.enableds_def Collect_mem_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>A p. alphabet A, \\<lambda>A p. alphabet A)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          S \\<rightarrow> \\<langle>L\\<rangle>set_rel", "by parametricity"], ["", "lemma paths_param[param]: \"(dra.paths, dra.paths) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> S \\<rightarrow> \\<langle>\\<langle>L\\<rangle> list_rel\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dra.paths, dra.paths)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          S \\<rightarrow>\n          \\<langle>\\<langle>L\\<rangle>list_rel\\<rangle>set_rel", "using enableds_param[param_fo]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x1, ?x'1) \\<in> \\<langle>?L2, ?A\\<rangle>dra_rel;\n   (?x, ?x') \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> (dra.enableds ?x1 ?x, dra.enableds ?x'1 ?x')\n                    \\<in> \\<langle>?L2\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (dra.paths, dra.paths)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          S \\<rightarrow>\n          \\<langle>\\<langle>L\\<rangle>list_rel\\<rangle>set_rel", "by parametricity"], ["", "lemma runs_param[param]: \"(dra.runs, dra.runs) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> S \\<rightarrow> \\<langle>\\<langle>L\\<rangle> stream_rel\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dra.runs, dra.runs)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          S \\<rightarrow>\n          \\<langle>\\<langle>L\\<rangle>stream_rel\\<rangle>set_rel", "using enableds_param[param_fo]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x1, ?x'1) \\<in> \\<langle>?L2, ?A\\<rangle>dra_rel;\n   (?x, ?x') \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> (dra.enableds ?x1 ?x, dra.enableds ?x'1 ?x')\n                    \\<in> \\<langle>?L2\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (dra.runs, dra.runs)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          S \\<rightarrow>\n          \\<langle>\\<langle>L\\<rangle>stream_rel\\<rangle>set_rel", "by parametricity"], ["", "lemma reachable_param[param]: \"(reachable, reachable) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (reachable, reachable)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          S \\<rightarrow> \\<langle>S\\<rangle>set_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (reachable, reachable)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          S \\<rightarrow> \\<langle>S\\<rangle>set_rel", "have 1: \"reachable A p = (\\<lambda> w. target A w p) ` dra.paths A p\" for A :: \"('label, 'state) dra\" and p"], ["proof (prove)\ngoal (1 subgoal):\n 1. reachable A p = (\\<lambda>w. target A w p) ` dra.paths A p", "unfolding dra.reachable_alt_def dra.paths_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {target A r p |r. path A r p} =\n    (\\<lambda>w. target A w p) ` {r. path A r p}", "by auto"], ["proof (state)\nthis:\n  reachable ?A1 ?p1 = (\\<lambda>w. target ?A1 w ?p1) ` dra.paths ?A1 ?p1\n\ngoal (1 subgoal):\n 1. (reachable, reachable)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          S \\<rightarrow> \\<langle>S\\<rangle>set_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (reachable, reachable)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          S \\<rightarrow> \\<langle>S\\<rangle>set_rel", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>A p. (\\<lambda>w. target A w p) ` dra.paths A p,\n     \\<lambda>A p. (\\<lambda>w. target A w p) ` dra.paths A p)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          S \\<rightarrow> \\<langle>S\\<rangle>set_rel", "using enableds_param[param_fo]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x1, ?x'1) \\<in> \\<langle>?L2, ?A\\<rangle>dra_rel;\n   (?x, ?x') \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> (dra.enableds ?x1 ?x, dra.enableds ?x'1 ?x')\n                    \\<in> \\<langle>?L2\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (\\<lambda>A p. (\\<lambda>w. target A w p) ` dra.paths A p,\n     \\<lambda>A p. (\\<lambda>w. target A w p) ` dra.paths A p)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          S \\<rightarrow> \\<langle>S\\<rangle>set_rel", "by parametricity"], ["proof (state)\nthis:\n  (reachable, reachable)\n  \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n        S \\<rightarrow> \\<langle>S\\<rangle>set_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nodes_param[param]: \"(nodes, nodes) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> \\<langle>S\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (nodes, nodes)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          \\<langle>S\\<rangle>set_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (nodes, nodes)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          \\<langle>S\\<rangle>set_rel", "have 1: \"nodes A = reachable A (initial A)\" for A :: \"('label, 'state) dra\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nodes A = reachable A (initial A)", "unfolding dra.nodes_alt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (reachable A ` {p. p = initial A}) = reachable A (initial A)", "by simp"], ["proof (state)\nthis:\n  nodes ?A1 = reachable ?A1 (initial ?A1)\n\ngoal (1 subgoal):\n 1. (nodes, nodes)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          \\<langle>S\\<rangle>set_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (nodes, nodes)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          \\<langle>S\\<rangle>set_rel", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>A. reachable A (initial A),\n     \\<lambda>A. reachable A (initial A))\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          \\<langle>S\\<rangle>set_rel", "by parametricity"], ["proof (state)\nthis:\n  (nodes, nodes)\n  \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n        \\<langle>S\\<rangle>set_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma language_param[param]: \"(language, language) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> \\<langle>\\<langle>L\\<rangle> stream_rel\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (language, language)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          \\<langle>\\<langle>L\\<rangle>stream_rel\\<rangle>set_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (language, language)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          \\<langle>\\<langle>L\\<rangle>stream_rel\\<rangle>set_rel", "have 1: \"language A = (\\<Union> w \\<in> dra.runs A (initial A).\n      if cogen rabin (condition A) (initial A ## trace A w (initial A)) then {w} else {})\"\n      for A :: \"('label, 'state) dra\""], ["proof (prove)\ngoal (1 subgoal):\n 1. language A =\n    (\\<Union>w\\<in>dra.runs A (initial A).\n        if cogen rabin (condition A) (initial A ## trace A w (initial A))\n        then {w} else {})", "unfolding dra.language_def dra.runs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {w. run A w (initial A) \\<and>\n        cogen rabin (condition A) (initial A ## trace A w (initial A))} =\n    (\\<Union>w\\<in>{r. run A r (initial A)}.\n        if cogen rabin (condition A) (initial A ## trace A w (initial A))\n        then {w} else {})", "by auto"], ["proof (state)\nthis:\n  language ?A1 =\n  (\\<Union>w\\<in>dra.runs ?A1 (initial ?A1).\n      if cogen rabin (condition ?A1)\n          (initial ?A1 ## trace ?A1 w (initial ?A1))\n      then {w} else {})\n\ngoal (1 subgoal):\n 1. (language, language)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          \\<langle>\\<langle>L\\<rangle>stream_rel\\<rangle>set_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (language, language)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          \\<langle>\\<langle>L\\<rangle>stream_rel\\<rangle>set_rel", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>A.\n        \\<Union>w\\<in>dra.runs A (initial A).\n           if cogen rabin (condition A) (initial A ## trace A w (initial A))\n           then {w} else {},\n     \\<lambda>A.\n        \\<Union>w\\<in>dra.runs A (initial A).\n           if cogen rabin (condition A) (initial A ## trace A w (initial A))\n           then {w} else {})\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          \\<langle>\\<langle>L\\<rangle>stream_rel\\<rangle>set_rel", "using enableds_param[param_fo]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x1, ?x'1) \\<in> \\<langle>?L2, ?A\\<rangle>dra_rel;\n   (?x, ?x') \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> (dra.enableds ?x1 ?x, dra.enableds ?x'1 ?x')\n                    \\<in> \\<langle>?L2\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (\\<lambda>A.\n        \\<Union>w\\<in>dra.runs A (initial A).\n           if cogen rabin (condition A) (initial A ## trace A w (initial A))\n           then {w} else {},\n     \\<lambda>A.\n        \\<Union>w\\<in>dra.runs A (initial A).\n           if cogen rabin (condition A) (initial A ## trace A w (initial A))\n           then {w} else {})\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n          \\<langle>\\<langle>L\\<rangle>stream_rel\\<rangle>set_rel", "by parametricity"], ["proof (state)\nthis:\n  (language, language)\n  \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow>\n        \\<langle>\\<langle>L\\<rangle>stream_rel\\<rangle>set_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}