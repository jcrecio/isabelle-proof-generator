{"file_name": "/home/qj213/afp-2021-10-22/thys/Transition_Systems_and_Automata/Automata/DRA/DRA_Implement.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Transition_Systems_and_Automata", "problem_names": ["lemma drai_param[param]:\n    \"(drai, drai) \\<in> \\<langle>L\\<rangle> list_rel \\<rightarrow> S \\<rightarrow> (L \\<rightarrow> S \\<rightarrow> S) \\<rightarrow>\n      \\<langle>rabin_rel S\\<rangle> list_rel \\<rightarrow> \\<langle>L, S\\<rangle> drai_rel\"\n    \"(alphabeti, alphabeti) \\<in> \\<langle>L, S\\<rangle> drai_rel \\<rightarrow> \\<langle>L\\<rangle> list_rel\"\n    \"(initiali, initiali) \\<in> \\<langle>L, S\\<rangle> drai_rel \\<rightarrow> S\"\n    \"(transitioni, transitioni) \\<in> \\<langle>L, S\\<rangle> drai_rel \\<rightarrow> L \\<rightarrow> S \\<rightarrow> S\"\n    \"(conditioni, conditioni) \\<in> \\<langle>L, S\\<rangle> drai_rel \\<rightarrow> \\<langle>rabin_rel S\\<rangle> list_rel\"", "lemma drai_dra_param[param, autoref_rules]:\n    \"(drai, dra) \\<in> \\<langle>L\\<rangle> list_set_rel \\<rightarrow> S \\<rightarrow> (L \\<rightarrow> S \\<rightarrow> S) \\<rightarrow>\n      \\<langle>rabin_rel S\\<rangle> list_rel \\<rightarrow> \\<langle>L, S\\<rangle> drai_dra_rel\"\n    \"(alphabeti, alphabet) \\<in> \\<langle>L, S\\<rangle> drai_dra_rel \\<rightarrow> \\<langle>L\\<rangle> list_set_rel\"\n    \"(initiali, initial) \\<in> \\<langle>L, S\\<rangle> drai_dra_rel \\<rightarrow> S\"\n    \"(transitioni, transition) \\<in> \\<langle>L, S\\<rangle> drai_dra_rel \\<rightarrow> L \\<rightarrow> S \\<rightarrow> S\"\n    \"(conditioni, condition) \\<in> \\<langle>L, S\\<rangle> drai_dra_rel \\<rightarrow> \\<langle>rabin_rel S\\<rangle> list_rel\"", "lemma drai_dra_id_param[param]: \"(drai_dra, id) \\<in> \\<langle>L, S\\<rangle> drai_dra_rel \\<rightarrow> \\<langle>L, S\\<rangle> dra_rel\"", "lemma drai_dra_br: \"\\<langle>Id, Id\\<rangle> drai_dra_rel = br drai_dra drai_invar\""], "translations": [["", "lemma drai_param[param]:\n    \"(drai, drai) \\<in> \\<langle>L\\<rangle> list_rel \\<rightarrow> S \\<rightarrow> (L \\<rightarrow> S \\<rightarrow> S) \\<rightarrow>\n      \\<langle>rabin_rel S\\<rangle> list_rel \\<rightarrow> \\<langle>L, S\\<rangle> drai_rel\"\n    \"(alphabeti, alphabeti) \\<in> \\<langle>L, S\\<rangle> drai_rel \\<rightarrow> \\<langle>L\\<rangle> list_rel\"\n    \"(initiali, initiali) \\<in> \\<langle>L, S\\<rangle> drai_rel \\<rightarrow> S\"\n    \"(transitioni, transitioni) \\<in> \\<langle>L, S\\<rangle> drai_rel \\<rightarrow> L \\<rightarrow> S \\<rightarrow> S\"\n    \"(conditioni, conditioni) \\<in> \\<langle>L, S\\<rangle> drai_rel \\<rightarrow> \\<langle>rabin_rel S\\<rangle> list_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((drai, drai)\n     \\<in> \\<langle>L\\<rangle>list_rel \\<rightarrow>\n           S \\<rightarrow>\n           (L \\<rightarrow> S \\<rightarrow> S) \\<rightarrow>\n           \\<langle>(S \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                    (S \\<rightarrow>\n                     bool_rel)\\<rangle>list_rel \\<rightarrow>\n           \\<langle>L, S\\<rangle>drai_rel &&&\n     (alphabeti, alphabeti)\n     \\<in> \\<langle>L, S\\<rangle>drai_rel \\<rightarrow>\n           \\<langle>L\\<rangle>list_rel) &&&\n    (initiali, initiali)\n    \\<in> \\<langle>L, S\\<rangle>drai_rel \\<rightarrow> S &&&\n    (transitioni, transitioni)\n    \\<in> \\<langle>L, S\\<rangle>drai_rel \\<rightarrow>\n          L \\<rightarrow> S \\<rightarrow> S &&&\n    (conditioni, conditioni)\n    \\<in> \\<langle>L, S\\<rangle>drai_rel \\<rightarrow>\n          \\<langle>(S \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                   (S \\<rightarrow> bool_rel)\\<rangle>list_rel", "unfolding drai_rel_def fun_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((drai, drai)\n     \\<in> {(f, f').\n            \\<forall>(a, a')\\<in>\\<langle>L\\<rangle>list_rel.\n               (f a, f' a')\n               \\<in> {(f, f').\n                      \\<forall>(a, a')\\<in>S.\n                         (f a, f' a')\n                         \\<in> {(f, f').\n                                \\<forall>(a, a')\n   \\<in>{(f, f').\n         \\<forall>(a, a')\\<in>L.\n            (f a, f' a')\n            \\<in> {(f, f'). \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> S}}.\n                                   (f a, f' a')\n                                   \\<in> {(f, f').\n    \\<forall>(a, a')\n             \\<in>\\<langle>{(f, f').\n                            \\<forall>(a, a')\\<in>S.\n                               (f a, f' a') \\<in> bool_rel} \\<times>\\<^sub>r\n                           {(f, f').\n                            \\<forall>(a, a')\\<in>S.\n                               (f a, f' a')\n                               \\<in> bool_rel}\\<rangle>list_rel.\n       (f a, f' a')\n       \\<in> {(A\\<^sub>1, A\\<^sub>2).\n              (alphabeti A\\<^sub>1, alphabeti A\\<^sub>2)\n              \\<in> \\<langle>L\\<rangle>list_rel \\<and>\n              (initiali A\\<^sub>1, initiali A\\<^sub>2) \\<in> S \\<and>\n              (transitioni A\\<^sub>1, transitioni A\\<^sub>2)\n              \\<in> {(f, f').\n                     \\<forall>(a, a')\\<in>L.\n                        (f a, f' a')\n                        \\<in> {(f, f').\n                               \\<forall>(a, a')\\<in>S.\n                                  (f a, f' a') \\<in> S}} \\<and>\n              (conditioni A\\<^sub>1, conditioni A\\<^sub>2)\n              \\<in> \\<langle>{(f, f').\n                              \\<forall>(a, a')\\<in>S.\n                                 (f a, f' a')\n                                 \\<in> bool_rel} \\<times>\\<^sub>r\n                             {(f, f').\n                              \\<forall>(a, a')\\<in>S.\n                                 (f a, f' a')\n                                 \\<in> bool_rel}\\<rangle>list_rel}}}}} &&&\n     (alphabeti, alphabeti)\n     \\<in> {(f, f').\n            \\<forall>(a, a')\n                     \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                           (alphabeti A\\<^sub>1, alphabeti A\\<^sub>2)\n                           \\<in> \\<langle>L\\<rangle>list_rel \\<and>\n                           (initiali A\\<^sub>1, initiali A\\<^sub>2)\n                           \\<in> S \\<and>\n                           (transitioni A\\<^sub>1, transitioni A\\<^sub>2)\n                           \\<in> {(f, f').\n                                  \\<forall>(a, a')\\<in>L.\n                                     (f a, f' a')\n                                     \\<in> {(f, f').\n      \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> S}} \\<and>\n                           (conditioni A\\<^sub>1, conditioni A\\<^sub>2)\n                           \\<in> \\<langle>{(f, f').\n     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel} \\<times>\\<^sub>r\n    {(f, f').\n     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n               (f a, f' a') \\<in> \\<langle>L\\<rangle>list_rel}) &&&\n    (initiali, initiali)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabeti A\\<^sub>1, alphabeti A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>list_rel \\<and>\n                          (initiali A\\<^sub>1, initiali A\\<^sub>2)\n                          \\<in> S \\<and>\n                          (transitioni A\\<^sub>1, transitioni A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> S}} \\<and>\n                          (conditioni A\\<^sub>1, conditioni A\\<^sub>2)\n                          \\<in> \\<langle>{(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel} \\<times>\\<^sub>r\n   {(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n              (f a, f' a') \\<in> S} &&&\n    (transitioni, transitioni)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabeti A\\<^sub>1, alphabeti A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>list_rel \\<and>\n                          (initiali A\\<^sub>1, initiali A\\<^sub>2)\n                          \\<in> S \\<and>\n                          (transitioni A\\<^sub>1, transitioni A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> S}} \\<and>\n                          (conditioni A\\<^sub>1, conditioni A\\<^sub>2)\n                          \\<in> \\<langle>{(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel} \\<times>\\<^sub>r\n   {(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n              (f a, f' a')\n              \\<in> {(f, f').\n                     \\<forall>(a, a')\\<in>L.\n                        (f a, f' a')\n                        \\<in> {(f, f').\n                               \\<forall>(a, a')\\<in>S.\n                                  (f a, f' a') \\<in> S}}} &&&\n    (conditioni, conditioni)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabeti A\\<^sub>1, alphabeti A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>list_rel \\<and>\n                          (initiali A\\<^sub>1, initiali A\\<^sub>2)\n                          \\<in> S \\<and>\n                          (transitioni A\\<^sub>1, transitioni A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> S}} \\<and>\n                          (conditioni A\\<^sub>1, conditioni A\\<^sub>2)\n                          \\<in> \\<langle>{(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel} \\<times>\\<^sub>r\n   {(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n              (f a, f' a')\n              \\<in> \\<langle>{(f, f').\n                              \\<forall>(a, a')\\<in>S.\n                                 (f a, f' a')\n                                 \\<in> bool_rel} \\<times>\\<^sub>r\n                             {(f, f').\n                              \\<forall>(a, a')\\<in>S.\n                                 (f a, f' a')\n                                 \\<in> bool_rel}\\<rangle>list_rel}", "by auto"], ["", "definition drai_dra_rel :: \"('label\\<^sub>1 \\<times> 'label\\<^sub>2) set \\<Rightarrow> ('state\\<^sub>1 \\<times> 'state\\<^sub>2) set \\<Rightarrow>\n    (('label\\<^sub>1, 'state\\<^sub>1) drai \\<times> ('label\\<^sub>2, 'state\\<^sub>2) dra) set\" where\n    [to_relAPP]: \"drai_dra_rel L S \\<equiv> {(A\\<^sub>1, A\\<^sub>2).\n      (alphabeti A\\<^sub>1, alphabet A\\<^sub>2) \\<in> \\<langle>L\\<rangle> list_set_rel \\<and>\n      (initiali A\\<^sub>1, initial A\\<^sub>2) \\<in> S \\<and>\n      (transitioni A\\<^sub>1, transition A\\<^sub>2) \\<in> L \\<rightarrow> S \\<rightarrow> S \\<and>\n      (conditioni A\\<^sub>1, condition A\\<^sub>2) \\<in> \\<langle>rabin_rel S\\<rangle> list_rel}\""], ["", "lemma drai_dra_param[param, autoref_rules]:\n    \"(drai, dra) \\<in> \\<langle>L\\<rangle> list_set_rel \\<rightarrow> S \\<rightarrow> (L \\<rightarrow> S \\<rightarrow> S) \\<rightarrow>\n      \\<langle>rabin_rel S\\<rangle> list_rel \\<rightarrow> \\<langle>L, S\\<rangle> drai_dra_rel\"\n    \"(alphabeti, alphabet) \\<in> \\<langle>L, S\\<rangle> drai_dra_rel \\<rightarrow> \\<langle>L\\<rangle> list_set_rel\"\n    \"(initiali, initial) \\<in> \\<langle>L, S\\<rangle> drai_dra_rel \\<rightarrow> S\"\n    \"(transitioni, transition) \\<in> \\<langle>L, S\\<rangle> drai_dra_rel \\<rightarrow> L \\<rightarrow> S \\<rightarrow> S\"\n    \"(conditioni, condition) \\<in> \\<langle>L, S\\<rangle> drai_dra_rel \\<rightarrow> \\<langle>rabin_rel S\\<rangle> list_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((drai, dra)\n     \\<in> \\<langle>L\\<rangle>list_set_rel \\<rightarrow>\n           S \\<rightarrow>\n           (L \\<rightarrow> S \\<rightarrow> S) \\<rightarrow>\n           \\<langle>(S \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                    (S \\<rightarrow>\n                     bool_rel)\\<rangle>list_rel \\<rightarrow>\n           \\<langle>L, S\\<rangle>drai_dra_rel &&&\n     (alphabeti, alphabet)\n     \\<in> \\<langle>L, S\\<rangle>drai_dra_rel \\<rightarrow>\n           \\<langle>L\\<rangle>list_set_rel) &&&\n    (initiali, initial)\n    \\<in> \\<langle>L, S\\<rangle>drai_dra_rel \\<rightarrow> S &&&\n    (transitioni, transition)\n    \\<in> \\<langle>L, S\\<rangle>drai_dra_rel \\<rightarrow>\n          L \\<rightarrow> S \\<rightarrow> S &&&\n    (conditioni, condition)\n    \\<in> \\<langle>L, S\\<rangle>drai_dra_rel \\<rightarrow>\n          \\<langle>(S \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                   (S \\<rightarrow> bool_rel)\\<rangle>list_rel", "unfolding drai_dra_rel_def fun_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((drai, dra)\n     \\<in> {(f, f').\n            \\<forall>(a, a')\\<in>\\<langle>L\\<rangle>list_set_rel.\n               (f a, f' a')\n               \\<in> {(f, f').\n                      \\<forall>(a, a')\\<in>S.\n                         (f a, f' a')\n                         \\<in> {(f, f').\n                                \\<forall>(a, a')\n   \\<in>{(f, f').\n         \\<forall>(a, a')\\<in>L.\n            (f a, f' a')\n            \\<in> {(f, f'). \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> S}}.\n                                   (f a, f' a')\n                                   \\<in> {(f, f').\n    \\<forall>(a, a')\n             \\<in>\\<langle>{(f, f').\n                            \\<forall>(a, a')\\<in>S.\n                               (f a, f' a') \\<in> bool_rel} \\<times>\\<^sub>r\n                           {(f, f').\n                            \\<forall>(a, a')\\<in>S.\n                               (f a, f' a')\n                               \\<in> bool_rel}\\<rangle>list_rel.\n       (f a, f' a')\n       \\<in> {(A\\<^sub>1, A\\<^sub>2).\n              (alphabeti A\\<^sub>1, alphabet A\\<^sub>2)\n              \\<in> \\<langle>L\\<rangle>list_set_rel \\<and>\n              (initiali A\\<^sub>1, initial A\\<^sub>2) \\<in> S \\<and>\n              (transitioni A\\<^sub>1, transition A\\<^sub>2)\n              \\<in> {(f, f').\n                     \\<forall>(a, a')\\<in>L.\n                        (f a, f' a')\n                        \\<in> {(f, f').\n                               \\<forall>(a, a')\\<in>S.\n                                  (f a, f' a') \\<in> S}} \\<and>\n              (conditioni A\\<^sub>1, condition A\\<^sub>2)\n              \\<in> \\<langle>{(f, f').\n                              \\<forall>(a, a')\\<in>S.\n                                 (f a, f' a')\n                                 \\<in> bool_rel} \\<times>\\<^sub>r\n                             {(f, f').\n                              \\<forall>(a, a')\\<in>S.\n                                 (f a, f' a')\n                                 \\<in> bool_rel}\\<rangle>list_rel}}}}} &&&\n     (alphabeti, alphabet)\n     \\<in> {(f, f').\n            \\<forall>(a, a')\n                     \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                           (alphabeti A\\<^sub>1, alphabet A\\<^sub>2)\n                           \\<in> \\<langle>L\\<rangle>list_set_rel \\<and>\n                           (initiali A\\<^sub>1, initial A\\<^sub>2)\n                           \\<in> S \\<and>\n                           (transitioni A\\<^sub>1, transition A\\<^sub>2)\n                           \\<in> {(f, f').\n                                  \\<forall>(a, a')\\<in>L.\n                                     (f a, f' a')\n                                     \\<in> {(f, f').\n      \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> S}} \\<and>\n                           (conditioni A\\<^sub>1, condition A\\<^sub>2)\n                           \\<in> \\<langle>{(f, f').\n     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel} \\<times>\\<^sub>r\n    {(f, f').\n     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n               (f a, f' a') \\<in> \\<langle>L\\<rangle>list_set_rel}) &&&\n    (initiali, initial)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabeti A\\<^sub>1, alphabet A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>list_set_rel \\<and>\n                          (initiali A\\<^sub>1, initial A\\<^sub>2)\n                          \\<in> S \\<and>\n                          (transitioni A\\<^sub>1, transition A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> S}} \\<and>\n                          (conditioni A\\<^sub>1, condition A\\<^sub>2)\n                          \\<in> \\<langle>{(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel} \\<times>\\<^sub>r\n   {(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n              (f a, f' a') \\<in> S} &&&\n    (transitioni, transition)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabeti A\\<^sub>1, alphabet A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>list_set_rel \\<and>\n                          (initiali A\\<^sub>1, initial A\\<^sub>2)\n                          \\<in> S \\<and>\n                          (transitioni A\\<^sub>1, transition A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> S}} \\<and>\n                          (conditioni A\\<^sub>1, condition A\\<^sub>2)\n                          \\<in> \\<langle>{(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel} \\<times>\\<^sub>r\n   {(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n              (f a, f' a')\n              \\<in> {(f, f').\n                     \\<forall>(a, a')\\<in>L.\n                        (f a, f' a')\n                        \\<in> {(f, f').\n                               \\<forall>(a, a')\\<in>S.\n                                  (f a, f' a') \\<in> S}}} &&&\n    (conditioni, condition)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabeti A\\<^sub>1, alphabet A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>list_set_rel \\<and>\n                          (initiali A\\<^sub>1, initial A\\<^sub>2)\n                          \\<in> S \\<and>\n                          (transitioni A\\<^sub>1, transition A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> S}} \\<and>\n                          (conditioni A\\<^sub>1, condition A\\<^sub>2)\n                          \\<in> \\<langle>{(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel} \\<times>\\<^sub>r\n   {(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n              (f a, f' a')\n              \\<in> \\<langle>{(f, f').\n                              \\<forall>(a, a')\\<in>S.\n                                 (f a, f' a')\n                                 \\<in> bool_rel} \\<times>\\<^sub>r\n                             {(f, f').\n                              \\<forall>(a, a')\\<in>S.\n                                 (f a, f' a')\n                                 \\<in> bool_rel}\\<rangle>list_rel}", "by auto"], ["", "definition drai_dra :: \"('label, 'state) drai \\<Rightarrow> ('label, 'state) dra\" where\n    \"drai_dra A \\<equiv> dra (set (alphabeti A)) (initiali A) (transitioni A) (conditioni A)\""], ["", "definition drai_invar :: \"('label, 'state) drai \\<Rightarrow> bool\" where\n    \"drai_invar A \\<equiv> distinct (alphabeti A)\""], ["", "lemma drai_dra_id_param[param]: \"(drai_dra, id) \\<in> \\<langle>L, S\\<rangle> drai_dra_rel \\<rightarrow> \\<langle>L, S\\<rangle> dra_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (drai_dra, id)\n    \\<in> \\<langle>L, S\\<rangle>drai_dra_rel \\<rightarrow> \\<langle>L,\n          S\\<rangle>dra_rel", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a') \\<in> \\<langle>L, S\\<rangle>drai_dra_rel \\<Longrightarrow>\n       (drai_dra a, id a') \\<in> \\<langle>L, S\\<rangle>dra_rel", "fix Ai A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a') \\<in> \\<langle>L, S\\<rangle>drai_dra_rel \\<Longrightarrow>\n       (drai_dra a, id a') \\<in> \\<langle>L, S\\<rangle>dra_rel", "assume 1: \"(Ai, A) \\<in> \\<langle>L, S\\<rangle> drai_dra_rel\""], ["proof (state)\nthis:\n  (Ai, A) \\<in> \\<langle>L, S\\<rangle>drai_dra_rel\n\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a') \\<in> \\<langle>L, S\\<rangle>drai_dra_rel \\<Longrightarrow>\n       (drai_dra a, id a') \\<in> \\<langle>L, S\\<rangle>dra_rel", "have 2: \"drai_dra Ai = dra (set (alphabeti Ai)) (initiali Ai) (transitioni Ai) (conditioni Ai)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. drai_dra Ai =\n    dra (set (alphabeti Ai)) (initiali Ai) (transitioni Ai) (conditioni Ai)", "unfolding drai_dra_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dra (set (alphabeti Ai)) (initiali Ai) (transitioni Ai)\n     (conditioni Ai) =\n    dra (set (alphabeti Ai)) (initiali Ai) (transitioni Ai) (conditioni Ai)", "by rule"], ["proof (state)\nthis:\n  drai_dra Ai =\n  dra (set (alphabeti Ai)) (initiali Ai) (transitioni Ai) (conditioni Ai)\n\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a') \\<in> \\<langle>L, S\\<rangle>drai_dra_rel \\<Longrightarrow>\n       (drai_dra a, id a') \\<in> \\<langle>L, S\\<rangle>dra_rel", "have 3: \"id A = dra (id (alphabet A)) (initial A) (transition A) (condition A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. id A = dra (id (alphabet A)) (initial A) (transition A) (condition A)", "by simp"], ["proof (state)\nthis:\n  id A = dra (id (alphabet A)) (initial A) (transition A) (condition A)\n\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a') \\<in> \\<langle>L, S\\<rangle>drai_dra_rel \\<Longrightarrow>\n       (drai_dra a, id a') \\<in> \\<langle>L, S\\<rangle>dra_rel", "show \"(drai_dra Ai, id A) \\<in> \\<langle>L, S\\<rangle> dra_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (drai_dra Ai, id A) \\<in> \\<langle>L, S\\<rangle>dra_rel", "unfolding 2 3"], ["proof (prove)\ngoal (1 subgoal):\n 1. (dra (set (alphabeti Ai)) (initiali Ai) (transitioni Ai)\n      (conditioni Ai),\n     dra (id (alphabet A)) (initial A) (transition A) (condition A))\n    \\<in> \\<langle>L, S\\<rangle>dra_rel", "using 1"], ["proof (prove)\nusing this:\n  (Ai, A) \\<in> \\<langle>L, S\\<rangle>drai_dra_rel\n\ngoal (1 subgoal):\n 1. (dra (set (alphabeti Ai)) (initiali Ai) (transitioni Ai)\n      (conditioni Ai),\n     dra (id (alphabet A)) (initial A) (transition A) (condition A))\n    \\<in> \\<langle>L, S\\<rangle>dra_rel", "by parametricity"], ["proof (state)\nthis:\n  (drai_dra Ai, id A) \\<in> \\<langle>L, S\\<rangle>dra_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma drai_dra_br: \"\\<langle>Id, Id\\<rangle> drai_dra_rel = br drai_dra drai_invar\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>Id, Id\\<rangle>drai_dra_rel = br drai_dra drai_invar", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> \\<langle>Id, Id\\<rangle>drai_dra_rel \\<Longrightarrow>\n       (a, b) \\<in> br drai_dra drai_invar\n 2. \\<And>a b.\n       (a, b) \\<in> br drai_dra drai_invar \\<Longrightarrow>\n       (a, b) \\<in> \\<langle>Id, Id\\<rangle>drai_dra_rel", "show \"(A, B) \\<in> \\<langle>Id, Id\\<rangle> drai_dra_rel\" if \"(A, B) \\<in> br drai_dra drai_invar\"\n      for A and B :: \"('a, 'b) dra\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, B) \\<in> \\<langle>Id, Id\\<rangle>drai_dra_rel", "using that"], ["proof (prove)\nusing this:\n  (A, B) \\<in> br drai_dra drai_invar\n\ngoal (1 subgoal):\n 1. (A, B) \\<in> \\<langle>Id, Id\\<rangle>drai_dra_rel", "unfolding drai_dra_rel_def drai_dra_def drai_invar_def"], ["proof (prove)\nusing this:\n  (A, B)\n  \\<in> br (\\<lambda>A.\n               dra (set (alphabeti A)) (initiali A) (transitioni A)\n                (conditioni A))\n         (\\<lambda>A. distinct (alphabeti A))\n\ngoal (1 subgoal):\n 1. (A, B)\n    \\<in> {(A\\<^sub>1, A\\<^sub>2).\n           (alphabeti A\\<^sub>1, alphabet A\\<^sub>2)\n           \\<in> \\<langle>Id\\<rangle>list_set_rel \\<and>\n           (initiali A\\<^sub>1, initial A\\<^sub>2) \\<in> Id \\<and>\n           (transitioni A\\<^sub>1, transition A\\<^sub>2)\n           \\<in> Id \\<rightarrow> Id \\<rightarrow> Id \\<and>\n           (conditioni A\\<^sub>1, condition A\\<^sub>2)\n           \\<in> \\<langle>(Id \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                          (Id \\<rightarrow> bool_rel)\\<rangle>list_rel}", "by (auto simp: in_br_conv list_set_rel_def)"], ["proof (state)\nthis:\n  (?A, ?B) \\<in> br drai_dra drai_invar \\<Longrightarrow>\n  (?A, ?B) \\<in> \\<langle>Id, Id\\<rangle>drai_dra_rel\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> \\<langle>Id, Id\\<rangle>drai_dra_rel \\<Longrightarrow>\n       (a, b) \\<in> br drai_dra drai_invar", "show \"(A, B) \\<in> br drai_dra drai_invar\" if \"(A, B) \\<in> \\<langle>Id, Id\\<rangle> drai_dra_rel\"\n      for A and B :: \"('a, 'b) dra\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, B) \\<in> br drai_dra drai_invar", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (A, B) \\<in> br drai_dra drai_invar", "have 1: \"(drai_dra A, id B) \\<in> \\<langle>Id, Id\\<rangle> dra_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (drai_dra A, id B) \\<in> \\<langle>Id, Id\\<rangle>dra_rel", "using that"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>Id, Id\\<rangle>drai_dra_rel\n\ngoal (1 subgoal):\n 1. (drai_dra A, id B) \\<in> \\<langle>Id, Id\\<rangle>dra_rel", "by parametricity"], ["proof (state)\nthis:\n  (drai_dra A, id B) \\<in> \\<langle>Id, Id\\<rangle>dra_rel\n\ngoal (1 subgoal):\n 1. (A, B) \\<in> br drai_dra drai_invar", "have 2: \"drai_invar A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. drai_invar A", "using drai_dra_param(2 - 5)[param_fo, OF that]"], ["proof (prove)\nusing this:\n  (alphabeti A, alphabet B) \\<in> \\<langle>Id\\<rangle>list_set_rel\n  (initiali A, initial B) \\<in> Id\n  \\<lbrakk>(?x1, ?x'1) \\<in> Id; (?x, ?x') \\<in> Id\\<rbrakk>\n  \\<Longrightarrow> (transitioni A ?x1 ?x, transition B ?x'1 ?x') \\<in> Id\n  (conditioni A, condition B)\n  \\<in> \\<langle>(Id \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n                 (Id \\<rightarrow> bool_rel)\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. drai_invar A", "by (auto simp: in_br_conv list_set_rel_def drai_invar_def)"], ["proof (state)\nthis:\n  drai_invar A\n\ngoal (1 subgoal):\n 1. (A, B) \\<in> br drai_dra drai_invar", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, B) \\<in> br drai_dra drai_invar", "using 1 2"], ["proof (prove)\nusing this:\n  (drai_dra A, id B) \\<in> \\<langle>Id, Id\\<rangle>dra_rel\n  drai_invar A\n\ngoal (1 subgoal):\n 1. (A, B) \\<in> br drai_dra drai_invar", "unfolding in_br_conv"], ["proof (prove)\nusing this:\n  (drai_dra A, id B) \\<in> \\<langle>Id, Id\\<rangle>dra_rel\n  drai_invar A\n\ngoal (1 subgoal):\n 1. B = drai_dra A \\<and> drai_invar A", "by auto"], ["proof (state)\nthis:\n  (A, B) \\<in> br drai_dra drai_invar\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (?A, ?B) \\<in> \\<langle>Id, Id\\<rangle>drai_dra_rel \\<Longrightarrow>\n  (?A, ?B) \\<in> br drai_dra drai_invar\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}