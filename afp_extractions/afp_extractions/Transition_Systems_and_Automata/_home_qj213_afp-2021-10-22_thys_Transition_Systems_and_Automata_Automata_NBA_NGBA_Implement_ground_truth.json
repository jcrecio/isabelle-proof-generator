{"file_name": "/home/qj213/afp-2021-10-22/thys/Transition_Systems_and_Automata/Automata/NBA/NGBA_Implement.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Transition_Systems_and_Automata", "problem_names": ["lemma ngba_scheme_itype[autoref_itype]:\n      \"ngba ::\\<^sub>i \\<langle>L\\<rangle>\\<^sub>i i_set \\<rightarrow>\\<^sub>i \\<langle>S\\<rangle>\\<^sub>i i_set \\<rightarrow>\\<^sub>i (L \\<rightarrow>\\<^sub>i S \\<rightarrow>\\<^sub>i \\<langle>S\\<rangle>\\<^sub>i i_set) \\<rightarrow>\\<^sub>i \\<langle>\\<langle>S\\<rangle>\\<^sub>i i_set\\<rangle>\\<^sub>i i_list \\<rightarrow>\\<^sub>i\n        \\<langle>L, S\\<rangle>\\<^sub>i i_ngba_scheme\"\n      \"alphabet ::\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_ngba_scheme \\<rightarrow>\\<^sub>i \\<langle>L\\<rangle>\\<^sub>i i_set\"\n      \"initial ::\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_ngba_scheme \\<rightarrow>\\<^sub>i \\<langle>S\\<rangle>\\<^sub>i i_set\"\n      \"transition ::\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_ngba_scheme \\<rightarrow>\\<^sub>i L \\<rightarrow>\\<^sub>i S \\<rightarrow>\\<^sub>i \\<langle>S\\<rangle>\\<^sub>i i_set\"\n      \"accepting ::\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_ngba_scheme \\<rightarrow>\\<^sub>i \\<langle>\\<langle>S\\<rangle>\\<^sub>i i_set\\<rangle>\\<^sub>i i_list\"", "lemma ngbai_param[param]:\n    \"(ngbai, ngbai) \\<in> \\<langle>L\\<rangle> list_rel \\<rightarrow> \\<langle>S\\<rangle> list_rel \\<rightarrow> (L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> list_rel) \\<rightarrow>\n      \\<langle>S \\<rightarrow> bool_rel\\<rangle> list_rel \\<rightarrow> \\<langle>L, S\\<rangle> ngbai_rel\"\n    \"(alphabeti, alphabeti) \\<in> \\<langle>L, S\\<rangle> ngbai_rel \\<rightarrow> \\<langle>L\\<rangle> list_rel\"\n    \"(initiali, initiali) \\<in> \\<langle>L, S\\<rangle> ngbai_rel \\<rightarrow> \\<langle>S\\<rangle> list_rel\"\n    \"(transitioni, transitioni) \\<in> \\<langle>L, S\\<rangle> ngbai_rel \\<rightarrow> L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> list_rel\"\n    \"(acceptingi, acceptingi) \\<in> \\<langle>L, S\\<rangle> ngbai_rel \\<rightarrow> \\<langle>S \\<rightarrow> bool_rel\\<rangle> list_rel\"", "lemmas [autoref_rel_intf] = REL_INTFI[of ngbai_ngba_rel i_ngba_scheme]", "lemma ngbai_ngba_param[param, autoref_rules]:\n    \"(ngbai, ngba) \\<in> \\<langle>L\\<rangle> list_set_rel \\<rightarrow> \\<langle>S\\<rangle> list_set_rel \\<rightarrow> (L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> list_set_rel) \\<rightarrow>\n      \\<langle>S \\<rightarrow> bool_rel\\<rangle> list_rel \\<rightarrow> \\<langle>L, S\\<rangle> ngbai_ngba_rel\"\n    \"(alphabeti, alphabet) \\<in> \\<langle>L, S\\<rangle> ngbai_ngba_rel \\<rightarrow> \\<langle>L\\<rangle> list_set_rel\"\n    \"(initiali, initial) \\<in> \\<langle>L, S\\<rangle> ngbai_ngba_rel \\<rightarrow> \\<langle>S\\<rangle> list_set_rel\"\n    \"(transitioni, transition) \\<in> \\<langle>L, S\\<rangle> ngbai_ngba_rel \\<rightarrow> L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> list_set_rel\"\n    \"(acceptingi, accepting) \\<in> \\<langle>L, S\\<rangle> ngbai_ngba_rel \\<rightarrow> \\<langle>S \\<rightarrow> bool_rel\\<rangle> list_rel\"", "lemma ngbai_ngba_id_param[param]: \"(ngbai_ngba, id) \\<in> \\<langle>L, S\\<rangle> ngbai_ngba_rel \\<rightarrow> \\<langle>L, S\\<rangle> ngba_rel\"", "lemma ngbai_ngba_br: \"\\<langle>Id, Id\\<rangle> ngbai_ngba_rel = br ngbai_ngba ngbai_invar\""], "translations": [["", "lemma ngba_scheme_itype[autoref_itype]:\n      \"ngba ::\\<^sub>i \\<langle>L\\<rangle>\\<^sub>i i_set \\<rightarrow>\\<^sub>i \\<langle>S\\<rangle>\\<^sub>i i_set \\<rightarrow>\\<^sub>i (L \\<rightarrow>\\<^sub>i S \\<rightarrow>\\<^sub>i \\<langle>S\\<rangle>\\<^sub>i i_set) \\<rightarrow>\\<^sub>i \\<langle>\\<langle>S\\<rangle>\\<^sub>i i_set\\<rangle>\\<^sub>i i_list \\<rightarrow>\\<^sub>i\n        \\<langle>L, S\\<rangle>\\<^sub>i i_ngba_scheme\"\n      \"alphabet ::\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_ngba_scheme \\<rightarrow>\\<^sub>i \\<langle>L\\<rangle>\\<^sub>i i_set\"\n      \"initial ::\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_ngba_scheme \\<rightarrow>\\<^sub>i \\<langle>S\\<rangle>\\<^sub>i i_set\"\n      \"transition ::\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_ngba_scheme \\<rightarrow>\\<^sub>i L \\<rightarrow>\\<^sub>i S \\<rightarrow>\\<^sub>i \\<langle>S\\<rangle>\\<^sub>i i_set\"\n      \"accepting ::\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_ngba_scheme \\<rightarrow>\\<^sub>i \\<langle>\\<langle>S\\<rangle>\\<^sub>i i_set\\<rangle>\\<^sub>i i_list\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ngba ::\\<^sub>i\n     \\<langle>L\\<rangle>\\<^sub>ii_set \\<rightarrow>\\<^sub>i\n     \\<langle>S\\<rangle>\\<^sub>ii_set \\<rightarrow>\\<^sub>i\n     (L \\<rightarrow>\\<^sub>i\n      S \\<rightarrow>\\<^sub>i\n      \\<langle>S\\<rangle>\\<^sub>ii_set) \\<rightarrow>\\<^sub>i\n     \\<langle>\\<langle>S\\<rangle>\\<^sub>ii_set\\<rangle>\\<^sub>ii_list \\<rightarrow>\\<^sub>i\n     \\<langle>L, S\\<rangle>\\<^sub>ii_ngba_scheme &&&\n     alphabet ::\\<^sub>i\n     \\<langle>L, S\\<rangle>\\<^sub>ii_ngba_scheme \\<rightarrow>\\<^sub>i\n     \\<langle>L\\<rangle>\\<^sub>ii_set) &&&\n    initial ::\\<^sub>i\n    \\<langle>L, S\\<rangle>\\<^sub>ii_ngba_scheme \\<rightarrow>\\<^sub>i\n    \\<langle>S\\<rangle>\\<^sub>ii_set &&&\n    transition ::\\<^sub>i\n    \\<langle>L, S\\<rangle>\\<^sub>ii_ngba_scheme \\<rightarrow>\\<^sub>i\n    L \\<rightarrow>\\<^sub>i\n    S \\<rightarrow>\\<^sub>i \\<langle>S\\<rangle>\\<^sub>ii_set &&&\n    accepting ::\\<^sub>i\n    \\<langle>L, S\\<rangle>\\<^sub>ii_ngba_scheme \\<rightarrow>\\<^sub>i\n    \\<langle>\\<langle>S\\<rangle>\\<^sub>ii_set\\<rangle>\\<^sub>ii_list", "by auto"], ["", "end"], ["", "datatype ('label, 'state) ngbai = ngbai\n    (alphabeti: \"'label list\")\n    (initiali: \"'state list\")\n    (transitioni: \"'label \\<Rightarrow> 'state \\<Rightarrow> 'state list\")\n    (acceptingi: \"('state \\<Rightarrow> bool) list\")"], ["", "definition ngbai_rel :: \"('label\\<^sub>1 \\<times> 'label\\<^sub>2) set \\<Rightarrow> ('state\\<^sub>1 \\<times> 'state\\<^sub>2) set \\<Rightarrow>\n    (('label\\<^sub>1, 'state\\<^sub>1) ngbai \\<times> ('label\\<^sub>2, 'state\\<^sub>2) ngbai) set\" where\n    [to_relAPP]: \"ngbai_rel L S \\<equiv> {(A\\<^sub>1, A\\<^sub>2).\n      (alphabeti A\\<^sub>1, alphabeti A\\<^sub>2) \\<in> \\<langle>L\\<rangle> list_rel \\<and>\n      (initiali A\\<^sub>1, initiali A\\<^sub>2) \\<in> \\<langle>S\\<rangle> list_rel \\<and>\n      (transitioni A\\<^sub>1, transitioni A\\<^sub>2) \\<in> L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> list_rel \\<and>\n      (acceptingi A\\<^sub>1, acceptingi A\\<^sub>2) \\<in> \\<langle>S \\<rightarrow> bool_rel\\<rangle> list_rel}\""], ["", "lemma ngbai_param[param]:\n    \"(ngbai, ngbai) \\<in> \\<langle>L\\<rangle> list_rel \\<rightarrow> \\<langle>S\\<rangle> list_rel \\<rightarrow> (L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> list_rel) \\<rightarrow>\n      \\<langle>S \\<rightarrow> bool_rel\\<rangle> list_rel \\<rightarrow> \\<langle>L, S\\<rangle> ngbai_rel\"\n    \"(alphabeti, alphabeti) \\<in> \\<langle>L, S\\<rangle> ngbai_rel \\<rightarrow> \\<langle>L\\<rangle> list_rel\"\n    \"(initiali, initiali) \\<in> \\<langle>L, S\\<rangle> ngbai_rel \\<rightarrow> \\<langle>S\\<rangle> list_rel\"\n    \"(transitioni, transitioni) \\<in> \\<langle>L, S\\<rangle> ngbai_rel \\<rightarrow> L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> list_rel\"\n    \"(acceptingi, acceptingi) \\<in> \\<langle>L, S\\<rangle> ngbai_rel \\<rightarrow> \\<langle>S \\<rightarrow> bool_rel\\<rangle> list_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((ngbai, ngbai)\n     \\<in> \\<langle>L\\<rangle>list_rel \\<rightarrow>\n           \\<langle>S\\<rangle>list_rel \\<rightarrow>\n           (L \\<rightarrow>\n            S \\<rightarrow> \\<langle>S\\<rangle>list_rel) \\<rightarrow>\n           \\<langle>S \\<rightarrow> bool_rel\\<rangle>list_rel \\<rightarrow>\n           \\<langle>L, S\\<rangle>ngbai_rel &&&\n     (alphabeti, alphabeti)\n     \\<in> \\<langle>L, S\\<rangle>ngbai_rel \\<rightarrow>\n           \\<langle>L\\<rangle>list_rel) &&&\n    (initiali, initiali)\n    \\<in> \\<langle>L, S\\<rangle>ngbai_rel \\<rightarrow>\n          \\<langle>S\\<rangle>list_rel &&&\n    (transitioni, transitioni)\n    \\<in> \\<langle>L, S\\<rangle>ngbai_rel \\<rightarrow>\n          L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle>list_rel &&&\n    (acceptingi, acceptingi)\n    \\<in> \\<langle>L, S\\<rangle>ngbai_rel \\<rightarrow>\n          \\<langle>S \\<rightarrow> bool_rel\\<rangle>list_rel", "unfolding ngbai_rel_def fun_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((ngbai, ngbai)\n     \\<in> {(f, f').\n            \\<forall>(a, a')\\<in>\\<langle>L\\<rangle>list_rel.\n               (f a, f' a')\n               \\<in> {(f, f').\n                      \\<forall>(a, a')\\<in>\\<langle>S\\<rangle>list_rel.\n                         (f a, f' a')\n                         \\<in> {(f, f').\n                                \\<forall>(a, a')\n   \\<in>{(f, f').\n         \\<forall>(a, a')\\<in>L.\n            (f a, f' a')\n            \\<in> {(f, f').\n                   \\<forall>(a, a')\\<in>S.\n                      (f a, f' a') \\<in> \\<langle>S\\<rangle>list_rel}}.\n                                   (f a, f' a')\n                                   \\<in> {(f, f').\n    \\<forall>(a, a')\n             \\<in>\\<langle>{(f, f').\n                            \\<forall>(a, a')\\<in>S.\n                               (f a, f' a')\n                               \\<in> bool_rel}\\<rangle>list_rel.\n       (f a, f' a')\n       \\<in> {(A\\<^sub>1, A\\<^sub>2).\n              (alphabeti A\\<^sub>1, alphabeti A\\<^sub>2)\n              \\<in> \\<langle>L\\<rangle>list_rel \\<and>\n              (initiali A\\<^sub>1, initiali A\\<^sub>2)\n              \\<in> \\<langle>S\\<rangle>list_rel \\<and>\n              (transitioni A\\<^sub>1, transitioni A\\<^sub>2)\n              \\<in> {(f, f').\n                     \\<forall>(a, a')\\<in>L.\n                        (f a, f' a')\n                        \\<in> {(f, f').\n                               \\<forall>(a, a')\\<in>S.\n                                  (f a, f' a')\n                                  \\<in> \\<langle>S\\<rangle>list_rel}} \\<and>\n              (acceptingi A\\<^sub>1, acceptingi A\\<^sub>2)\n              \\<in> \\<langle>{(f, f').\n                              \\<forall>(a, a')\\<in>S.\n                                 (f a, f' a')\n                                 \\<in> bool_rel}\\<rangle>list_rel}}}}} &&&\n     (alphabeti, alphabeti)\n     \\<in> {(f, f').\n            \\<forall>(a, a')\n                     \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                           (alphabeti A\\<^sub>1, alphabeti A\\<^sub>2)\n                           \\<in> \\<langle>L\\<rangle>list_rel \\<and>\n                           (initiali A\\<^sub>1, initiali A\\<^sub>2)\n                           \\<in> \\<langle>S\\<rangle>list_rel \\<and>\n                           (transitioni A\\<^sub>1, transitioni A\\<^sub>2)\n                           \\<in> {(f, f').\n                                  \\<forall>(a, a')\\<in>L.\n                                     (f a, f' a')\n                                     \\<in> {(f, f').\n      \\<forall>(a, a')\\<in>S.\n         (f a, f' a') \\<in> \\<langle>S\\<rangle>list_rel}} \\<and>\n                           (acceptingi A\\<^sub>1, acceptingi A\\<^sub>2)\n                           \\<in> \\<langle>{(f, f').\n     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n               (f a, f' a') \\<in> \\<langle>L\\<rangle>list_rel}) &&&\n    (initiali, initiali)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabeti A\\<^sub>1, alphabeti A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>list_rel \\<and>\n                          (initiali A\\<^sub>1, initiali A\\<^sub>2)\n                          \\<in> \\<langle>S\\<rangle>list_rel \\<and>\n                          (transitioni A\\<^sub>1, transitioni A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S.\n        (f a, f' a') \\<in> \\<langle>S\\<rangle>list_rel}} \\<and>\n                          (acceptingi A\\<^sub>1, acceptingi A\\<^sub>2)\n                          \\<in> \\<langle>{(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n              (f a, f' a') \\<in> \\<langle>S\\<rangle>list_rel} &&&\n    (transitioni, transitioni)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabeti A\\<^sub>1, alphabeti A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>list_rel \\<and>\n                          (initiali A\\<^sub>1, initiali A\\<^sub>2)\n                          \\<in> \\<langle>S\\<rangle>list_rel \\<and>\n                          (transitioni A\\<^sub>1, transitioni A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S.\n        (f a, f' a') \\<in> \\<langle>S\\<rangle>list_rel}} \\<and>\n                          (acceptingi A\\<^sub>1, acceptingi A\\<^sub>2)\n                          \\<in> \\<langle>{(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n              (f a, f' a')\n              \\<in> {(f, f').\n                     \\<forall>(a, a')\\<in>L.\n                        (f a, f' a')\n                        \\<in> {(f, f').\n                               \\<forall>(a, a')\\<in>S.\n                                  (f a, f' a')\n                                  \\<in> \\<langle>S\\<rangle>list_rel}}} &&&\n    (acceptingi, acceptingi)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabeti A\\<^sub>1, alphabeti A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>list_rel \\<and>\n                          (initiali A\\<^sub>1, initiali A\\<^sub>2)\n                          \\<in> \\<langle>S\\<rangle>list_rel \\<and>\n                          (transitioni A\\<^sub>1, transitioni A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S.\n        (f a, f' a') \\<in> \\<langle>S\\<rangle>list_rel}} \\<and>\n                          (acceptingi A\\<^sub>1, acceptingi A\\<^sub>2)\n                          \\<in> \\<langle>{(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n              (f a, f' a')\n              \\<in> \\<langle>{(f, f').\n                              \\<forall>(a, a')\\<in>S.\n                                 (f a, f' a')\n                                 \\<in> bool_rel}\\<rangle>list_rel}", "by auto"], ["", "definition ngbai_ngba_rel :: \"('label\\<^sub>1 \\<times> 'label\\<^sub>2) set \\<Rightarrow> ('state\\<^sub>1 \\<times> 'state\\<^sub>2) set \\<Rightarrow>\n    (('label\\<^sub>1, 'state\\<^sub>1) ngbai \\<times> ('label\\<^sub>2, 'state\\<^sub>2) ngba) set\" where\n    [to_relAPP]: \"ngbai_ngba_rel L S \\<equiv> {(A\\<^sub>1, A\\<^sub>2).\n      (alphabeti A\\<^sub>1, alphabet A\\<^sub>2) \\<in> \\<langle>L\\<rangle> list_set_rel \\<and>\n      (initiali A\\<^sub>1, initial A\\<^sub>2) \\<in> \\<langle>S\\<rangle> list_set_rel \\<and>\n      (transitioni A\\<^sub>1, transition A\\<^sub>2) \\<in> L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> list_set_rel \\<and>\n      (acceptingi A\\<^sub>1, accepting A\\<^sub>2) \\<in> \\<langle>S \\<rightarrow> bool_rel\\<rangle> list_rel}\""], ["", "lemmas [autoref_rel_intf] = REL_INTFI[of ngbai_ngba_rel i_ngba_scheme]"], ["", "lemma ngbai_ngba_param[param, autoref_rules]:\n    \"(ngbai, ngba) \\<in> \\<langle>L\\<rangle> list_set_rel \\<rightarrow> \\<langle>S\\<rangle> list_set_rel \\<rightarrow> (L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> list_set_rel) \\<rightarrow>\n      \\<langle>S \\<rightarrow> bool_rel\\<rangle> list_rel \\<rightarrow> \\<langle>L, S\\<rangle> ngbai_ngba_rel\"\n    \"(alphabeti, alphabet) \\<in> \\<langle>L, S\\<rangle> ngbai_ngba_rel \\<rightarrow> \\<langle>L\\<rangle> list_set_rel\"\n    \"(initiali, initial) \\<in> \\<langle>L, S\\<rangle> ngbai_ngba_rel \\<rightarrow> \\<langle>S\\<rangle> list_set_rel\"\n    \"(transitioni, transition) \\<in> \\<langle>L, S\\<rangle> ngbai_ngba_rel \\<rightarrow> L \\<rightarrow> S \\<rightarrow> \\<langle>S\\<rangle> list_set_rel\"\n    \"(acceptingi, accepting) \\<in> \\<langle>L, S\\<rangle> ngbai_ngba_rel \\<rightarrow> \\<langle>S \\<rightarrow> bool_rel\\<rangle> list_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((ngbai, ngba)\n     \\<in> \\<langle>L\\<rangle>list_set_rel \\<rightarrow>\n           \\<langle>S\\<rangle>list_set_rel \\<rightarrow>\n           (L \\<rightarrow>\n            S \\<rightarrow> \\<langle>S\\<rangle>list_set_rel) \\<rightarrow>\n           \\<langle>S \\<rightarrow> bool_rel\\<rangle>list_rel \\<rightarrow>\n           \\<langle>L, S\\<rangle>ngbai_ngba_rel &&&\n     (alphabeti, alphabet)\n     \\<in> \\<langle>L, S\\<rangle>ngbai_ngba_rel \\<rightarrow>\n           \\<langle>L\\<rangle>list_set_rel) &&&\n    (initiali, initial)\n    \\<in> \\<langle>L, S\\<rangle>ngbai_ngba_rel \\<rightarrow>\n          \\<langle>S\\<rangle>list_set_rel &&&\n    (transitioni, transition)\n    \\<in> \\<langle>L, S\\<rangle>ngbai_ngba_rel \\<rightarrow>\n          L \\<rightarrow>\n          S \\<rightarrow> \\<langle>S\\<rangle>list_set_rel &&&\n    (acceptingi, accepting)\n    \\<in> \\<langle>L, S\\<rangle>ngbai_ngba_rel \\<rightarrow>\n          \\<langle>S \\<rightarrow> bool_rel\\<rangle>list_rel", "unfolding ngbai_ngba_rel_def fun_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((ngbai, ngba)\n     \\<in> {(f, f').\n            \\<forall>(a, a')\\<in>\\<langle>L\\<rangle>list_set_rel.\n               (f a, f' a')\n               \\<in> {(f, f').\n                      \\<forall>(a, a')\\<in>\\<langle>S\\<rangle>list_set_rel.\n                         (f a, f' a')\n                         \\<in> {(f, f').\n                                \\<forall>(a, a')\n   \\<in>{(f, f').\n         \\<forall>(a, a')\\<in>L.\n            (f a, f' a')\n            \\<in> {(f, f').\n                   \\<forall>(a, a')\\<in>S.\n                      (f a, f' a') \\<in> \\<langle>S\\<rangle>list_set_rel}}.\n                                   (f a, f' a')\n                                   \\<in> {(f, f').\n    \\<forall>(a, a')\n             \\<in>\\<langle>{(f, f').\n                            \\<forall>(a, a')\\<in>S.\n                               (f a, f' a')\n                               \\<in> bool_rel}\\<rangle>list_rel.\n       (f a, f' a')\n       \\<in> {(A\\<^sub>1, A\\<^sub>2).\n              (alphabeti A\\<^sub>1, alphabet A\\<^sub>2)\n              \\<in> \\<langle>L\\<rangle>list_set_rel \\<and>\n              (initiali A\\<^sub>1, initial A\\<^sub>2)\n              \\<in> \\<langle>S\\<rangle>list_set_rel \\<and>\n              (transitioni A\\<^sub>1, transition A\\<^sub>2)\n              \\<in> {(f, f').\n                     \\<forall>(a, a')\\<in>L.\n                        (f a, f' a')\n                        \\<in> {(f, f').\n                               \\<forall>(a, a')\\<in>S.\n                                  (f a, f' a')\n                                  \\<in> \\<langle>S\\<rangle>list_set_rel}} \\<and>\n              (acceptingi A\\<^sub>1, accepting A\\<^sub>2)\n              \\<in> \\<langle>{(f, f').\n                              \\<forall>(a, a')\\<in>S.\n                                 (f a, f' a')\n                                 \\<in> bool_rel}\\<rangle>list_rel}}}}} &&&\n     (alphabeti, alphabet)\n     \\<in> {(f, f').\n            \\<forall>(a, a')\n                     \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                           (alphabeti A\\<^sub>1, alphabet A\\<^sub>2)\n                           \\<in> \\<langle>L\\<rangle>list_set_rel \\<and>\n                           (initiali A\\<^sub>1, initial A\\<^sub>2)\n                           \\<in> \\<langle>S\\<rangle>list_set_rel \\<and>\n                           (transitioni A\\<^sub>1, transition A\\<^sub>2)\n                           \\<in> {(f, f').\n                                  \\<forall>(a, a')\\<in>L.\n                                     (f a, f' a')\n                                     \\<in> {(f, f').\n      \\<forall>(a, a')\\<in>S.\n         (f a, f' a') \\<in> \\<langle>S\\<rangle>list_set_rel}} \\<and>\n                           (acceptingi A\\<^sub>1, accepting A\\<^sub>2)\n                           \\<in> \\<langle>{(f, f').\n     \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n               (f a, f' a') \\<in> \\<langle>L\\<rangle>list_set_rel}) &&&\n    (initiali, initial)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabeti A\\<^sub>1, alphabet A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>list_set_rel \\<and>\n                          (initiali A\\<^sub>1, initial A\\<^sub>2)\n                          \\<in> \\<langle>S\\<rangle>list_set_rel \\<and>\n                          (transitioni A\\<^sub>1, transition A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S.\n        (f a, f' a') \\<in> \\<langle>S\\<rangle>list_set_rel}} \\<and>\n                          (acceptingi A\\<^sub>1, accepting A\\<^sub>2)\n                          \\<in> \\<langle>{(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n              (f a, f' a') \\<in> \\<langle>S\\<rangle>list_set_rel} &&&\n    (transitioni, transition)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabeti A\\<^sub>1, alphabet A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>list_set_rel \\<and>\n                          (initiali A\\<^sub>1, initial A\\<^sub>2)\n                          \\<in> \\<langle>S\\<rangle>list_set_rel \\<and>\n                          (transitioni A\\<^sub>1, transition A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S.\n        (f a, f' a') \\<in> \\<langle>S\\<rangle>list_set_rel}} \\<and>\n                          (acceptingi A\\<^sub>1, accepting A\\<^sub>2)\n                          \\<in> \\<langle>{(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n              (f a, f' a')\n              \\<in> {(f, f').\n                     \\<forall>(a, a')\\<in>L.\n                        (f a, f' a')\n                        \\<in> {(f, f').\n                               \\<forall>(a, a')\\<in>S.\n                                  (f a, f' a')\n                                  \\<in> \\<langle>S\\<rangle>list_set_rel}}} &&&\n    (acceptingi, accepting)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(A\\<^sub>1, A\\<^sub>2).\n                          (alphabeti A\\<^sub>1, alphabet A\\<^sub>2)\n                          \\<in> \\<langle>L\\<rangle>list_set_rel \\<and>\n                          (initiali A\\<^sub>1, initial A\\<^sub>2)\n                          \\<in> \\<langle>S\\<rangle>list_set_rel \\<and>\n                          (transitioni A\\<^sub>1, transition A\\<^sub>2)\n                          \\<in> {(f, f').\n                                 \\<forall>(a, a')\\<in>L.\n                                    (f a, f' a')\n                                    \\<in> {(f, f').\n     \\<forall>(a, a')\\<in>S.\n        (f a, f' a') \\<in> \\<langle>S\\<rangle>list_set_rel}} \\<and>\n                          (acceptingi A\\<^sub>1, accepting A\\<^sub>2)\n                          \\<in> \\<langle>{(f, f').\n    \\<forall>(a, a')\\<in>S. (f a, f' a') \\<in> bool_rel}\\<rangle>list_rel}.\n              (f a, f' a')\n              \\<in> \\<langle>{(f, f').\n                              \\<forall>(a, a')\\<in>S.\n                                 (f a, f' a')\n                                 \\<in> bool_rel}\\<rangle>list_rel}", "by auto"], ["", "definition ngbai_ngba :: \"('label, 'state) ngbai \\<Rightarrow> ('label, 'state) ngba\" where\n    \"ngbai_ngba A \\<equiv> ngba (set (alphabeti A)) (set (initiali A)) (\\<lambda> a p. set (transitioni A a p)) (acceptingi A)\""], ["", "definition ngbai_invar :: \"('label, 'state) ngbai \\<Rightarrow> bool\" where\n    \"ngbai_invar A \\<equiv> distinct (alphabeti A) \\<and> distinct (initiali A) \\<and> (\\<forall> a p. distinct (transitioni A a p))\""], ["", "lemma ngbai_ngba_id_param[param]: \"(ngbai_ngba, id) \\<in> \\<langle>L, S\\<rangle> ngbai_ngba_rel \\<rightarrow> \\<langle>L, S\\<rangle> ngba_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ngbai_ngba, id)\n    \\<in> \\<langle>L, S\\<rangle>ngbai_ngba_rel \\<rightarrow> \\<langle>L,\n          S\\<rangle>ngba_rel", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a') \\<in> \\<langle>L, S\\<rangle>ngbai_ngba_rel \\<Longrightarrow>\n       (ngbai_ngba a, id a') \\<in> \\<langle>L, S\\<rangle>ngba_rel", "fix Ai A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a') \\<in> \\<langle>L, S\\<rangle>ngbai_ngba_rel \\<Longrightarrow>\n       (ngbai_ngba a, id a') \\<in> \\<langle>L, S\\<rangle>ngba_rel", "assume 1: \"(Ai, A) \\<in> \\<langle>L, S\\<rangle> ngbai_ngba_rel\""], ["proof (state)\nthis:\n  (Ai, A) \\<in> \\<langle>L, S\\<rangle>ngbai_ngba_rel\n\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a') \\<in> \\<langle>L, S\\<rangle>ngbai_ngba_rel \\<Longrightarrow>\n       (ngbai_ngba a, id a') \\<in> \\<langle>L, S\\<rangle>ngba_rel", "have 2: \"ngbai_ngba Ai = ngba (set (alphabeti Ai)) (set (initiali Ai))\n      (\\<lambda> a p. set (transitioni Ai a p)) (acceptingi Ai)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ngbai_ngba Ai =\n    ngba (set (alphabeti Ai)) (set (initiali Ai))\n     (\\<lambda>a p. set (transitioni Ai a p)) (acceptingi Ai)", "unfolding ngbai_ngba_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ngba (set (alphabeti Ai)) (set (initiali Ai))\n     (\\<lambda>a p. set (transitioni Ai a p)) (acceptingi Ai) =\n    ngba (set (alphabeti Ai)) (set (initiali Ai))\n     (\\<lambda>a p. set (transitioni Ai a p)) (acceptingi Ai)", "by rule"], ["proof (state)\nthis:\n  ngbai_ngba Ai =\n  ngba (set (alphabeti Ai)) (set (initiali Ai))\n   (\\<lambda>a p. set (transitioni Ai a p)) (acceptingi Ai)\n\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a') \\<in> \\<langle>L, S\\<rangle>ngbai_ngba_rel \\<Longrightarrow>\n       (ngbai_ngba a, id a') \\<in> \\<langle>L, S\\<rangle>ngba_rel", "have 3: \"id A = ngba (id (alphabet A)) (id (initial A))\n      (\\<lambda> a p. id (transition A a p)) (accepting A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. id A =\n    ngba (id (alphabet A)) (id (initial A))\n     (\\<lambda>a p. id (transition A a p)) (accepting A)", "by simp"], ["proof (state)\nthis:\n  id A =\n  ngba (id (alphabet A)) (id (initial A))\n   (\\<lambda>a p. id (transition A a p)) (accepting A)\n\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a') \\<in> \\<langle>L, S\\<rangle>ngbai_ngba_rel \\<Longrightarrow>\n       (ngbai_ngba a, id a') \\<in> \\<langle>L, S\\<rangle>ngba_rel", "show \"(ngbai_ngba Ai, id A) \\<in> \\<langle>L, S\\<rangle> ngba_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ngbai_ngba Ai, id A) \\<in> \\<langle>L, S\\<rangle>ngba_rel", "unfolding 2 3"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ngba (set (alphabeti Ai)) (set (initiali Ai))\n      (\\<lambda>a p. set (transitioni Ai a p)) (acceptingi Ai),\n     ngba (id (alphabet A)) (id (initial A))\n      (\\<lambda>a p. id (transition A a p)) (accepting A))\n    \\<in> \\<langle>L, S\\<rangle>ngba_rel", "using 1"], ["proof (prove)\nusing this:\n  (Ai, A) \\<in> \\<langle>L, S\\<rangle>ngbai_ngba_rel\n\ngoal (1 subgoal):\n 1. (ngba (set (alphabeti Ai)) (set (initiali Ai))\n      (\\<lambda>a p. set (transitioni Ai a p)) (acceptingi Ai),\n     ngba (id (alphabet A)) (id (initial A))\n      (\\<lambda>a p. id (transition A a p)) (accepting A))\n    \\<in> \\<langle>L, S\\<rangle>ngba_rel", "by parametricity"], ["proof (state)\nthis:\n  (ngbai_ngba Ai, id A) \\<in> \\<langle>L, S\\<rangle>ngba_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ngbai_ngba_br: \"\\<langle>Id, Id\\<rangle> ngbai_ngba_rel = br ngbai_ngba ngbai_invar\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>Id, Id\\<rangle>ngbai_ngba_rel = br ngbai_ngba ngbai_invar", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> \\<langle>Id, Id\\<rangle>ngbai_ngba_rel \\<Longrightarrow>\n       (a, b) \\<in> br ngbai_ngba ngbai_invar\n 2. \\<And>a b.\n       (a, b) \\<in> br ngbai_ngba ngbai_invar \\<Longrightarrow>\n       (a, b) \\<in> \\<langle>Id, Id\\<rangle>ngbai_ngba_rel", "show \"(A, B) \\<in> \\<langle>Id, Id\\<rangle> ngbai_ngba_rel\" if \"(A, B) \\<in> br ngbai_ngba ngbai_invar\"\n      for A and B :: \"('a, 'b) ngba\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, B) \\<in> \\<langle>Id, Id\\<rangle>ngbai_ngba_rel", "using that"], ["proof (prove)\nusing this:\n  (A, B) \\<in> br ngbai_ngba ngbai_invar\n\ngoal (1 subgoal):\n 1. (A, B) \\<in> \\<langle>Id, Id\\<rangle>ngbai_ngba_rel", "unfolding ngbai_ngba_rel_def ngbai_ngba_def ngbai_invar_def"], ["proof (prove)\nusing this:\n  (A, B)\n  \\<in> br (\\<lambda>A.\n               ngba (set (alphabeti A)) (set (initiali A))\n                (\\<lambda>a p. set (transitioni A a p)) (acceptingi A))\n         (\\<lambda>A.\n             distinct (alphabeti A) \\<and>\n             distinct (initiali A) \\<and>\n             (\\<forall>a p. distinct (transitioni A a p)))\n\ngoal (1 subgoal):\n 1. (A, B)\n    \\<in> {(A\\<^sub>1, A\\<^sub>2).\n           (alphabeti A\\<^sub>1, alphabet A\\<^sub>2)\n           \\<in> \\<langle>Id\\<rangle>list_set_rel \\<and>\n           (initiali A\\<^sub>1, initial A\\<^sub>2)\n           \\<in> \\<langle>Id\\<rangle>list_set_rel \\<and>\n           (transitioni A\\<^sub>1, transition A\\<^sub>2)\n           \\<in> Id \\<rightarrow>\n                 Id \\<rightarrow> \\<langle>Id\\<rangle>list_set_rel \\<and>\n           (acceptingi A\\<^sub>1, accepting A\\<^sub>2)\n           \\<in> \\<langle>Id \\<rightarrow> bool_rel\\<rangle>list_rel}", "by (auto simp: in_br_conv list_set_rel_def)"], ["proof (state)\nthis:\n  (?A, ?B) \\<in> br ngbai_ngba ngbai_invar \\<Longrightarrow>\n  (?A, ?B) \\<in> \\<langle>Id, Id\\<rangle>ngbai_ngba_rel\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> \\<langle>Id, Id\\<rangle>ngbai_ngba_rel \\<Longrightarrow>\n       (a, b) \\<in> br ngbai_ngba ngbai_invar", "show \"(A, B) \\<in> br ngbai_ngba ngbai_invar\" if \"(A, B) \\<in> \\<langle>Id, Id\\<rangle> ngbai_ngba_rel\"\n      for A and B :: \"('a, 'b) ngba\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, B) \\<in> br ngbai_ngba ngbai_invar", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (A, B) \\<in> br ngbai_ngba ngbai_invar", "have 1: \"(ngbai_ngba A, id B) \\<in> \\<langle>Id, Id\\<rangle> ngba_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ngbai_ngba A, id B) \\<in> \\<langle>Id, Id\\<rangle>ngba_rel", "using that"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>Id, Id\\<rangle>ngbai_ngba_rel\n\ngoal (1 subgoal):\n 1. (ngbai_ngba A, id B) \\<in> \\<langle>Id, Id\\<rangle>ngba_rel", "by parametricity"], ["proof (state)\nthis:\n  (ngbai_ngba A, id B) \\<in> \\<langle>Id, Id\\<rangle>ngba_rel\n\ngoal (1 subgoal):\n 1. (A, B) \\<in> br ngbai_ngba ngbai_invar", "have 2: \"ngbai_invar A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ngbai_invar A", "using ngbai_ngba_param(2 - 5)[param_fo, OF that]"], ["proof (prove)\nusing this:\n  (alphabeti A, alphabet B) \\<in> \\<langle>Id\\<rangle>list_set_rel\n  (initiali A, initial B) \\<in> \\<langle>Id\\<rangle>list_set_rel\n  \\<lbrakk>(?x1, ?x'1) \\<in> Id; (?x, ?x') \\<in> Id\\<rbrakk>\n  \\<Longrightarrow> (transitioni A ?x1 ?x, transition B ?x'1 ?x')\n                    \\<in> \\<langle>Id\\<rangle>list_set_rel\n  (acceptingi A, accepting B)\n  \\<in> \\<langle>Id \\<rightarrow> bool_rel\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. ngbai_invar A", "by (auto simp: in_br_conv list_set_rel_def ngbai_invar_def)"], ["proof (state)\nthis:\n  ngbai_invar A\n\ngoal (1 subgoal):\n 1. (A, B) \\<in> br ngbai_ngba ngbai_invar", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, B) \\<in> br ngbai_ngba ngbai_invar", "using 1 2"], ["proof (prove)\nusing this:\n  (ngbai_ngba A, id B) \\<in> \\<langle>Id, Id\\<rangle>ngba_rel\n  ngbai_invar A\n\ngoal (1 subgoal):\n 1. (A, B) \\<in> br ngbai_ngba ngbai_invar", "unfolding in_br_conv"], ["proof (prove)\nusing this:\n  (ngbai_ngba A, id B) \\<in> \\<langle>Id, Id\\<rangle>ngba_rel\n  ngbai_invar A\n\ngoal (1 subgoal):\n 1. B = ngbai_ngba A \\<and> ngbai_invar A", "by auto"], ["proof (state)\nthis:\n  (A, B) \\<in> br ngbai_ngba ngbai_invar\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (?A, ?B) \\<in> \\<langle>Id, Id\\<rangle>ngbai_ngba_rel \\<Longrightarrow>\n  (?A, ?B) \\<in> br ngbai_ngba ngbai_invar\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}