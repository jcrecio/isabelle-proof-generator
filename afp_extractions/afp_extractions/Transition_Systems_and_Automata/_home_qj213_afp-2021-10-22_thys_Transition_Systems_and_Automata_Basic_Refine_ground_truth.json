{"file_name": "/home/qj213/afp-2021-10-22/thys/Transition_Systems_and_Automata/Basic/Refine.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Transition_Systems_and_Automata", "problem_names": ["lemma right_unique_pred_set_conv[pred_set_conv]: \"right_unique = single_valuedp\"", "lemma bi_unique_pred_set_conv[pred_set_conv]: \"bi_unique (\\<lambda> x y. (x, y) \\<in> R) \\<longleftrightarrow> bijective R\"", "lemma pred_Id: \"HOL.eq = (\\<lambda> x y. (x, y) \\<in> Id)\"", "lemma pred_bool_Id: \"HOL.eq = (\\<lambda> x y. (x, y) \\<in> (Id :: bool rel))\"", "lemma pred_nat_Id: \"HOL.eq = (\\<lambda> x y. (x, y) \\<in> (Id :: nat rel))\"", "lemma pred_set_Id: \"HOL.eq = (\\<lambda> x y. (x, y) \\<in> (Id :: 'a set rel))\"", "lemma pred_list_Id: \"HOL.eq = (\\<lambda> x y. (x, y) \\<in> (Id :: 'a list rel))\"", "lemma pred_stream_Id: \"HOL.eq = (\\<lambda> x y. (x, y) \\<in> (Id :: 'a stream rel))\"", "lemma eq_onp_Id_on_eq[pred_set_conv]: \"eq_onp (\\<lambda> a. a \\<in> A) = (\\<lambda> x y. (x, y) \\<in> Id_on A)\"", "lemma rel_fun_fun_rel_eq[pred_set_conv]:\n    \"rel_fun (\\<lambda> x y. (x, y) \\<in> A) (\\<lambda> x y. (x, y) \\<in> B) = (\\<lambda> f g. (f, g) \\<in> A \\<rightarrow> B)\"", "lemma rel_prod_prod_rel_eq[pred_set_conv]:\n    \"rel_prod (\\<lambda> x y. (x, y) \\<in> A) (\\<lambda> x y. (x, y) \\<in> B) = (\\<lambda> f g. (f, g) \\<in> A \\<times>\\<^sub>r B)\"", "lemma rel_sum_sum_rel_eq[pred_set_conv]:\n    \"rel_sum (\\<lambda> x y. (x, y) \\<in> A) (\\<lambda> x y. (x, y) \\<in> B) = (\\<lambda> f g. (f, g) \\<in> \\<langle>A, B\\<rangle> sum_rel)\"", "lemma rel_set_set_rel_eq[pred_set_conv]:\n    \"rel_set (\\<lambda> x y. (x, y) \\<in> A) = (\\<lambda> f g. (f, g) \\<in> \\<langle>A\\<rangle> set_rel)\"", "lemma rel_option_option_rel_eq[pred_set_conv]:\n    \"rel_option (\\<lambda> x y. (x, y) \\<in> A) = (\\<lambda> f g. (f, g) \\<in> \\<langle>A\\<rangle> option_rel)\"", "lemma relcomp_trans_1[trans]:\n    assumes \"(f, g) \\<in> A\\<^sub>1\"\n    assumes \"(g, h) \\<in> A\\<^sub>2\"\n    shows \"(f, h) \\<in> A\\<^sub>1 O A\\<^sub>2\"", "lemma relcomp_trans_2[trans]:\n    assumes \"(f, g) \\<in> A\\<^sub>1 \\<rightarrow> B\\<^sub>1\"\n    assumes \"(g, h) \\<in> A\\<^sub>2 \\<rightarrow> B\\<^sub>2\"\n    shows \"(f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2\"", "lemma relcomp_trans_3[trans]:\n    assumes \"(f, g) \\<in> A\\<^sub>1 \\<rightarrow> B\\<^sub>1 \\<rightarrow> C\\<^sub>1\"\n    assumes \"(g, h) \\<in> A\\<^sub>2 \\<rightarrow> B\\<^sub>2 \\<rightarrow> C\\<^sub>2\"\n    shows \"(f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2 \\<rightarrow> C\\<^sub>1 O C\\<^sub>2\"", "lemma relcomp_trans_4[trans]:\n    assumes \"(f, g) \\<in> A\\<^sub>1 \\<rightarrow> B\\<^sub>1 \\<rightarrow> C\\<^sub>1 \\<rightarrow> D\\<^sub>1\"\n    assumes \"(g, h) \\<in> A\\<^sub>2 \\<rightarrow> B\\<^sub>2 \\<rightarrow> C\\<^sub>2 \\<rightarrow> D\\<^sub>2\"\n    shows \"(f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2 \\<rightarrow> C\\<^sub>1 O C\\<^sub>2 \\<rightarrow> D\\<^sub>1 O D\\<^sub>2\"", "lemma relcomp_trans_5[trans]:\n    assumes \"(f, g) \\<in> A\\<^sub>1 \\<rightarrow> B\\<^sub>1 \\<rightarrow> C\\<^sub>1 \\<rightarrow> D\\<^sub>1 \\<rightarrow> E\\<^sub>1\"\n    assumes \"(g, h) \\<in> A\\<^sub>2 \\<rightarrow> B\\<^sub>2 \\<rightarrow> C\\<^sub>2 \\<rightarrow> D\\<^sub>2 \\<rightarrow> E\\<^sub>2\"\n    shows \"(f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2 \\<rightarrow> C\\<^sub>1 O C\\<^sub>2 \\<rightarrow> D\\<^sub>1 O D\\<^sub>2 \\<rightarrow> E\\<^sub>1 O E\\<^sub>2\"", "lemma inv_fun_rel_eq[simp]: \"(A\\<rightarrow>B)\\<inverse> = A\\<inverse>\\<rightarrow>B\\<inverse>\"", "lemma inv_option_rel_eq[simp]: \"(\\<langle>K\\<rangle>option_rel)\\<inverse> = \\<langle>K\\<inverse>\\<rangle>option_rel\"", "lemma inv_prod_rel_eq[simp]: \"(P \\<times>\\<^sub>r Q)\\<inverse> = P\\<inverse> \\<times>\\<^sub>r Q\\<inverse>\"", "lemma inv_sum_rel_eq[simp]: \"(\\<langle>P,Q\\<rangle>sum_rel)\\<inverse> = \\<langle>P\\<inverse>,Q\\<inverse>\\<rangle>sum_rel\"", "lemma set_rel_converse[simp]: \"(\\<langle>A\\<rangle> set_rel)\\<inverse> = \\<langle>A\\<inverse>\\<rangle> set_rel\"", "lemma build_rel_domain[simp]: \"Domain (br \\<alpha> I) = Collect I\"", "lemma build_rel_range[simp]: \"Range (br \\<alpha> I) = \\<alpha> ` Collect I\"", "lemma build_rel_image[simp]: \"br \\<alpha> I `` A = \\<alpha> ` (A \\<inter> Collect I)\"", "lemma prod_rel_domain[simp]: \"Domain (A \\<times>\\<^sub>r B) = Domain A \\<times> Domain B\"", "lemma prod_rel_range[simp]: \"Range (A \\<times>\\<^sub>r B) = Range A \\<times> Range B\"", "lemma member_Id_on[iff]: \"(x, y) \\<in> Id_on A \\<longleftrightarrow> x = y \\<and> y \\<in> A\"", "lemma bijective_Id_on[intro!, simp]: \"bijective (Id_on A)\"", "lemma relcomp_Id_on[simp]: \"Id_on A O Id_on B = Id_on (A \\<inter> B)\"", "lemma prod_rel_Id_on[simp]: \"Id_on A \\<times>\\<^sub>r Id_on B = Id_on (A \\<times> B)\"", "lemma set_rel_Id_on[simp]: \"\\<langle>Id_on S\\<rangle> set_rel = Id_on (Pow S)\"", "lemmas basic_param[param] =\n    option.rel_transfer[unfolded pred_bool_Id, to_set]\n    All_transfer[unfolded pred_bool_Id, to_set]\n    Ex_transfer[unfolded pred_bool_Id, to_set]\n    Union_transfer[to_set]\n    image_transfer[to_set]\n    Image_parametric[to_set]", "lemma Sigma_param[param]: \"(Sigma, Sigma) \\<in> \\<langle>A\\<rangle> set_rel \\<rightarrow> (A \\<rightarrow> \\<langle>B\\<rangle> set_rel) \\<rightarrow> \\<langle>A \\<times>\\<^sub>r B\\<rangle> set_rel\"", "lemma set_filter_param[param]:\n    \"(Set.filter, Set.filter) \\<in> (A \\<rightarrow> bool_rel) \\<rightarrow> \\<langle>A\\<rangle> set_rel \\<rightarrow> \\<langle>A\\<rangle> set_rel\"", "lemma is_singleton_param[param]:\n    assumes \"bijective A\"\n    shows \"(is_singleton, is_singleton) \\<in> \\<langle>A\\<rangle> set_rel \\<rightarrow> bool_rel\"", "lemma the_elem_param[param]:\n    assumes \"is_singleton S\" \"is_singleton T\"\n    assumes \"(S, T) \\<in> \\<langle>A\\<rangle> set_rel\"\n    shows \"(the_elem S, the_elem T) \\<in> A\"", "lemma list_all2_list_rel_conv[pred_set_conv]:\n    \"list_all2 (\\<lambda> x y. (x, y) \\<in> R) = (\\<lambda> x y. (x, y) \\<in> \\<langle>R\\<rangle> list_rel)\"", "lemmas list_rel_single_valued[iff] = list_rel_sv_iff", "lemmas list_rel_simps[simp] =\n    list.rel_eq_onp[to_set]\n    list.rel_conversep[to_set, symmetric]\n    list.rel_compp[to_set]", "lemmas list_rel_param[param] =\n    list.set_transfer[to_set]\n    list.pred_transfer[unfolded pred_bool_Id, to_set, folded pred_list_listsp]\n    list.rel_transfer[unfolded pred_bool_Id, to_set]", "lemmas null_param[param] = null_transfer[unfolded pred_bool_Id, to_set]", "lemmas scan_param[param] = scan.transfer[to_set]", "lemma bind_param[param]: \"(List.bind, List.bind) \\<in> \\<langle>A\\<rangle> list_rel \\<rightarrow> (A \\<rightarrow> \\<langle>B\\<rangle> list_rel) \\<rightarrow> \\<langle>B\\<rangle> list_rel\"", "lemma set_id_param[param]: \"(set, id) \\<in> \\<langle>A\\<rangle> list_set_rel \\<rightarrow> \\<langle>A\\<rangle> set_rel\"", "lemma stream_all2_stream_rel_conv[pred_set_conv]:\n    \"stream_all2 (\\<lambda> x y. (x, y) \\<in> R) = (\\<lambda> x y. (x, y) \\<in> \\<langle>R\\<rangle> stream_rel)\"", "lemmas stream_rel_coinduct'[case_names stream_rel, coinduct set: stream_rel] =\n    stream_rel_coinduct[to_set]", "lemmas stream_rel_intros = stream.rel_intros[to_set]", "lemmas stream_rel_cases = stream.rel_cases[to_set]", "lemmas stream_rel_inject[iff] = stream.rel_inject[to_set]", "lemma stream_rel_single_valued[iff]: \"single_valued (\\<langle>A\\<rangle> stream_rel) \\<longleftrightarrow> single_valued A\"", "lemmas stream_rel_simps[simp] =\n    stream.rel_eq[unfolded pred_Id, THEN IdD, to_set]\n    stream.rel_eq_onp[to_set]\n    stream.rel_conversep[to_set]\n    stream.rel_compp[to_set]", "lemmas stream_rel_param[param] =\n    stream.ctr_transfer[to_set]\n    stream.sel_transfer[to_set]\n    stream.pred_transfer[unfolded pred_bool_Id, to_set, folded pred_stream_streamsp]\n    stream.rel_transfer[unfolded pred_bool_Id, to_set]\n    stream.map_transfer[to_set]\n    stream.set_transfer[to_set]\n    stream.case_transfer[to_set]\n    stream.corec_transfer[unfolded pred_bool_Id, to_set]", "lemma stream_Rangep_rel: \"Rangep (stream_all2 R) = pred_stream (Rangep R)\"", "lemmas stream_rel_domain[simp] = stream.Domainp_rel[to_set]", "lemmas stream_rel_range[simp] = stream_Rangep_rel[to_set]", "lemma stream_param[param]:\n    assumes\"(HOL.eq, HOL.eq) \\<in> R \\<rightarrow> R \\<rightarrow> bool_rel\"\n    shows \"(HOL.eq, HOL.eq) \\<in> \\<langle>R\\<rangle> stream_rel \\<rightarrow> \\<langle>R\\<rangle> stream_rel \\<rightarrow> bool_rel\"", "lemmas szip_param[param] = szip_transfer[to_set]", "lemmas siterate_param[param] = siterate_transfer[to_set]", "lemmas sscan_param[param] = sscan.transfer[to_set]", "lemma streams_param[param]: \"(streams, streams) \\<in> \\<langle>A\\<rangle> set_rel \\<rightarrow> \\<langle>\\<langle>A\\<rangle> stream_rel\\<rangle> set_rel\"", "lemma holds_param[param]: \"(holds, holds) \\<in> (A \\<rightarrow> bool_rel) \\<rightarrow> (\\<langle>A\\<rangle> stream_rel \\<rightarrow> bool_rel)\"", "lemma HLD_param[param]:\n    assumes \"single_valued A\" \"single_valued (A\\<inverse>)\"\n    shows \"(HLD, HLD) \\<in> \\<langle>A\\<rangle> set_rel \\<rightarrow> \\<langle>A\\<rangle> stream_rel \\<rightarrow> bool_rel\"", "lemma ev_param[param]: \"(ev, ev) \\<in> (\\<langle>A\\<rangle> stream_rel \\<rightarrow> bool_rel) \\<rightarrow> (\\<langle>A\\<rangle> stream_rel \\<rightarrow> bool_rel)\"", "lemma alw_param[param]: \"(alw, alw) \\<in> (\\<langle>A\\<rangle> stream_rel \\<rightarrow> bool_rel) \\<rightarrow> (\\<langle>A\\<rangle> stream_rel \\<rightarrow> bool_rel)\"", "lemma br_set_rel: \"\\<langle>br f P\\<rangle> set_rel = br (image f) (\\<lambda> A. Ball A P)\"", "lemma br_list_rel: \"\\<langle>br f P\\<rangle> list_rel = br (map f) (list_all P)\"", "lemma br_list_set_rel: \"\\<langle>br f P\\<rangle> list_set_rel = br (set \\<circ> map f) (\\<lambda> s. list_all P s \\<and> distinct (map f s))\"", "lemma br_fun_rel1: \"Id \\<rightarrow> br f P = br (comp f) (All \\<circ> comp P)\""], "translations": [["", "lemma right_unique_pred_set_conv[pred_set_conv]: \"right_unique = single_valuedp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right_unique = single_valuedp", "unfolding right_unique_def single_valuedp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>R.\n        \\<forall>x y z.\n           R x y \\<longrightarrow> R x z \\<longrightarrow> y = z) =\n    (\\<lambda>r.\n        \\<forall>x y.\n           r x y \\<longrightarrow>\n           (\\<forall>z. r x z \\<longrightarrow> y = z))", "by auto"], ["", "lemma bi_unique_pred_set_conv[pred_set_conv]: \"bi_unique (\\<lambda> x y. (x, y) \\<in> R) \\<longleftrightarrow> bijective R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bi_unique (\\<lambda>x y. (x, y) \\<in> R) = bijective R", "unfolding bi_unique_def bijective_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<forall>x y z.\n         (x, y) \\<in> R \\<longrightarrow>\n         (x, z) \\<in> R \\<longrightarrow> y = z) \\<and>\n     (\\<forall>x y z.\n         (x, z) \\<in> R \\<longrightarrow>\n         (y, z) \\<in> R \\<longrightarrow> x = y)) =\n    ((\\<forall>x y z.\n         (x, y) \\<in> R \\<and> (x, z) \\<in> R \\<longrightarrow>\n         y = z) \\<and>\n     (\\<forall>x y z.\n         (x, z) \\<in> R \\<and> (y, z) \\<in> R \\<longrightarrow> x = y))", "by blast"], ["", "text \\<open>useful for unfolding equality constants in theorems about predicates\\<close>"], ["", "lemma pred_Id: \"HOL.eq = (\\<lambda> x y. (x, y) \\<in> Id)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (=) = (\\<lambda>x y. (x, y) \\<in> Id)", "by simp"], ["", "lemma pred_bool_Id: \"HOL.eq = (\\<lambda> x y. (x, y) \\<in> (Id :: bool rel))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (=) = (\\<lambda>x y. (x, y) \\<in> bool_rel)", "by simp"], ["", "lemma pred_nat_Id: \"HOL.eq = (\\<lambda> x y. (x, y) \\<in> (Id :: nat rel))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (=) = (\\<lambda>x y. (x, y) \\<in> nat_rel)", "by simp"], ["", "lemma pred_set_Id: \"HOL.eq = (\\<lambda> x y. (x, y) \\<in> (Id :: 'a set rel))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (=) = (\\<lambda>x y. (x, y) \\<in> Id)", "by simp"], ["", "lemma pred_list_Id: \"HOL.eq = (\\<lambda> x y. (x, y) \\<in> (Id :: 'a list rel))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (=) = (\\<lambda>x y. (x, y) \\<in> Id)", "by simp"], ["", "lemma pred_stream_Id: \"HOL.eq = (\\<lambda> x y. (x, y) \\<in> (Id :: 'a stream rel))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (=) = (\\<lambda>x y. (x, y) \\<in> Id)", "by simp"], ["", "lemma eq_onp_Id_on_eq[pred_set_conv]: \"eq_onp (\\<lambda> a. a \\<in> A) = (\\<lambda> x y. (x, y) \\<in> Id_on A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eq_onp (\\<lambda>a. a \\<in> A) = (\\<lambda>x y. (x, y) \\<in> Id_on A)", "unfolding eq_onp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. x \\<in> A \\<and> x = y) =\n    (\\<lambda>x y. (x, y) \\<in> Id_on A)", "by auto"], ["", "lemma rel_fun_fun_rel_eq[pred_set_conv]:\n    \"rel_fun (\\<lambda> x y. (x, y) \\<in> A) (\\<lambda> x y. (x, y) \\<in> B) = (\\<lambda> f g. (f, g) \\<in> A \\<rightarrow> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_fun (\\<lambda>x y. (x, y) \\<in> A) (\\<lambda>x y. (x, y) \\<in> B) =\n    (\\<lambda>f g. (f, g) \\<in> A \\<rightarrow> B)", "by (force simp: rel_fun_def fun_rel_def)"], ["", "lemma rel_prod_prod_rel_eq[pred_set_conv]:\n    \"rel_prod (\\<lambda> x y. (x, y) \\<in> A) (\\<lambda> x y. (x, y) \\<in> B) = (\\<lambda> f g. (f, g) \\<in> A \\<times>\\<^sub>r B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_prod (\\<lambda>x y. (x, y) \\<in> A) (\\<lambda>x y. (x, y) \\<in> B) =\n    (\\<lambda>f g. (f, g) \\<in> A \\<times>\\<^sub>r B)", "by (force simp: prod_rel_def elim: rel_prod.cases)"], ["", "lemma rel_sum_sum_rel_eq[pred_set_conv]:\n    \"rel_sum (\\<lambda> x y. (x, y) \\<in> A) (\\<lambda> x y. (x, y) \\<in> B) = (\\<lambda> f g. (f, g) \\<in> \\<langle>A, B\\<rangle> sum_rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_sum (\\<lambda>x y. (x, y) \\<in> A) (\\<lambda>x y. (x, y) \\<in> B) =\n    (\\<lambda>f g. (f, g) \\<in> \\<langle>A, B\\<rangle>sum_rel)", "by (force simp: sum_rel_def elim: rel_sum.cases)"], ["", "lemma rel_set_set_rel_eq[pred_set_conv]:\n    \"rel_set (\\<lambda> x y. (x, y) \\<in> A) = (\\<lambda> f g. (f, g) \\<in> \\<langle>A\\<rangle> set_rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_set (\\<lambda>x y. (x, y) \\<in> A) =\n    (\\<lambda>f g. (f, g) \\<in> \\<langle>A\\<rangle>set_rel)", "unfolding rel_set_def set_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>Aa B.\n        (\\<forall>x\\<in>Aa. \\<exists>y\\<in>B. (x, y) \\<in> A) \\<and>\n        (\\<forall>y\\<in>B. \\<exists>x\\<in>Aa. (x, y) \\<in> A)) =\n    (\\<lambda>f g.\n        (f, g)\n        \\<in> {(Aa, B).\n               (\\<forall>x\\<in>Aa. \\<exists>y\\<in>B. (x, y) \\<in> A) \\<and>\n               (\\<forall>y\\<in>B. \\<exists>x\\<in>Aa. (x, y) \\<in> A)})", "by simp"], ["", "lemma rel_option_option_rel_eq[pred_set_conv]:\n    \"rel_option (\\<lambda> x y. (x, y) \\<in> A) = (\\<lambda> f g. (f, g) \\<in> \\<langle>A\\<rangle> option_rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_option (\\<lambda>x y. (x, y) \\<in> A) =\n    (\\<lambda>f g. (f, g) \\<in> \\<langle>A\\<rangle>option_rel)", "by (force simp: option_rel_def elim: option.rel_cases)"], ["", "(* TODO Peter: pred_set_conv examples *)"], ["", "thm image_transfer image_transfer[to_set]"], ["", "thm fun_upd_transfer fun_upd_transfer[to_set]"], ["", "subsection \\<open>Relation Composition\\<close>"], ["", "lemma relcomp_trans_1[trans]:\n    assumes \"(f, g) \\<in> A\\<^sub>1\"\n    assumes \"(g, h) \\<in> A\\<^sub>2\"\n    shows \"(f, h) \\<in> A\\<^sub>1 O A\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f, h) \\<in> A\\<^sub>1 O A\\<^sub>2", "using relcompI assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?a, ?b) \\<in> ?r; (?b, ?c) \\<in> ?s\\<rbrakk>\n  \\<Longrightarrow> (?a, ?c) \\<in> ?r O ?s\n  (f, g) \\<in> A\\<^sub>1\n  (g, h) \\<in> A\\<^sub>2\n\ngoal (1 subgoal):\n 1. (f, h) \\<in> A\\<^sub>1 O A\\<^sub>2", "by this"], ["", "lemma relcomp_trans_2[trans]:\n    assumes \"(f, g) \\<in> A\\<^sub>1 \\<rightarrow> B\\<^sub>1\"\n    assumes \"(g, h) \\<in> A\\<^sub>2 \\<rightarrow> B\\<^sub>2\"\n    shows \"(f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2", "note assms(1)"], ["proof (state)\nthis:\n  (f, g) \\<in> A\\<^sub>1 \\<rightarrow> B\\<^sub>1\n\ngoal (1 subgoal):\n 1. (f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2", "also"], ["proof (state)\nthis:\n  (f, g) \\<in> A\\<^sub>1 \\<rightarrow> B\\<^sub>1\n\ngoal (1 subgoal):\n 1. (f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2", "note assms(2)"], ["proof (state)\nthis:\n  (g, h) \\<in> A\\<^sub>2 \\<rightarrow> B\\<^sub>2\n\ngoal (1 subgoal):\n 1. (f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2", "also"], ["proof (state)\nthis:\n  (g, h) \\<in> A\\<^sub>2 \\<rightarrow> B\\<^sub>2\n\ngoal (1 subgoal):\n 1. (f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2", "note\n      fun_rel_comp_dist"], ["proof (state)\nthis:\n  (?R1.0 \\<rightarrow> ?R2.0) O (?R3.0 \\<rightarrow> ?R4.0)\n  \\<subseteq> ?R1.0 O ?R3.0 \\<rightarrow> ?R2.0 O ?R4.0\n\ngoal (1 subgoal):\n 1. (f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2", "finally"], ["proof (chain)\npicking this:\n  (f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2", "show ?thesis"], ["proof (prove)\nusing this:\n  (f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2\n\ngoal (1 subgoal):\n 1. (f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2", "by this"], ["proof (state)\nthis:\n  (f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma relcomp_trans_3[trans]:\n    assumes \"(f, g) \\<in> A\\<^sub>1 \\<rightarrow> B\\<^sub>1 \\<rightarrow> C\\<^sub>1\"\n    assumes \"(g, h) \\<in> A\\<^sub>2 \\<rightarrow> B\\<^sub>2 \\<rightarrow> C\\<^sub>2\"\n    shows \"(f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2 \\<rightarrow> C\\<^sub>1 O C\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow> C\\<^sub>1 O C\\<^sub>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow> C\\<^sub>1 O C\\<^sub>2", "note assms(1)"], ["proof (state)\nthis:\n  (f, g) \\<in> A\\<^sub>1 \\<rightarrow> B\\<^sub>1 \\<rightarrow> C\\<^sub>1\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow> C\\<^sub>1 O C\\<^sub>2", "also"], ["proof (state)\nthis:\n  (f, g) \\<in> A\\<^sub>1 \\<rightarrow> B\\<^sub>1 \\<rightarrow> C\\<^sub>1\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow> C\\<^sub>1 O C\\<^sub>2", "note assms(2)"], ["proof (state)\nthis:\n  (g, h) \\<in> A\\<^sub>2 \\<rightarrow> B\\<^sub>2 \\<rightarrow> C\\<^sub>2\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow> C\\<^sub>1 O C\\<^sub>2", "also"], ["proof (state)\nthis:\n  (g, h) \\<in> A\\<^sub>2 \\<rightarrow> B\\<^sub>2 \\<rightarrow> C\\<^sub>2\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow> C\\<^sub>1 O C\\<^sub>2", "note\n      fun_rel_mono[OF order_refl\n      fun_rel_comp_dist]"], ["proof (state)\nthis:\n  ?R1.0 \\<rightarrow>\n  (?R1.1 \\<rightarrow> ?R2.1) O (?R3.1 \\<rightarrow> ?R4.1)\n  \\<subseteq> ?R1.0 \\<rightarrow> ?R1.1 O ?R3.1 \\<rightarrow> ?R2.1 O ?R4.1\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow> C\\<^sub>1 O C\\<^sub>2", "finally"], ["proof (chain)\npicking this:\n  (f, h)\n  \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n        B\\<^sub>1 O B\\<^sub>2 \\<rightarrow> C\\<^sub>1 O C\\<^sub>2", "show ?thesis"], ["proof (prove)\nusing this:\n  (f, h)\n  \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n        B\\<^sub>1 O B\\<^sub>2 \\<rightarrow> C\\<^sub>1 O C\\<^sub>2\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow> C\\<^sub>1 O C\\<^sub>2", "by this"], ["proof (state)\nthis:\n  (f, h)\n  \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n        B\\<^sub>1 O B\\<^sub>2 \\<rightarrow> C\\<^sub>1 O C\\<^sub>2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma relcomp_trans_4[trans]:\n    assumes \"(f, g) \\<in> A\\<^sub>1 \\<rightarrow> B\\<^sub>1 \\<rightarrow> C\\<^sub>1 \\<rightarrow> D\\<^sub>1\"\n    assumes \"(g, h) \\<in> A\\<^sub>2 \\<rightarrow> B\\<^sub>2 \\<rightarrow> C\\<^sub>2 \\<rightarrow> D\\<^sub>2\"\n    shows \"(f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2 \\<rightarrow> C\\<^sub>1 O C\\<^sub>2 \\<rightarrow> D\\<^sub>1 O D\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n          C\\<^sub>1 O C\\<^sub>2 \\<rightarrow> D\\<^sub>1 O D\\<^sub>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n          C\\<^sub>1 O C\\<^sub>2 \\<rightarrow> D\\<^sub>1 O D\\<^sub>2", "note assms(1)"], ["proof (state)\nthis:\n  (f, g)\n  \\<in> A\\<^sub>1 \\<rightarrow>\n        B\\<^sub>1 \\<rightarrow> C\\<^sub>1 \\<rightarrow> D\\<^sub>1\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n          C\\<^sub>1 O C\\<^sub>2 \\<rightarrow> D\\<^sub>1 O D\\<^sub>2", "also"], ["proof (state)\nthis:\n  (f, g)\n  \\<in> A\\<^sub>1 \\<rightarrow>\n        B\\<^sub>1 \\<rightarrow> C\\<^sub>1 \\<rightarrow> D\\<^sub>1\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n          C\\<^sub>1 O C\\<^sub>2 \\<rightarrow> D\\<^sub>1 O D\\<^sub>2", "note assms(2)"], ["proof (state)\nthis:\n  (g, h)\n  \\<in> A\\<^sub>2 \\<rightarrow>\n        B\\<^sub>2 \\<rightarrow> C\\<^sub>2 \\<rightarrow> D\\<^sub>2\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n          C\\<^sub>1 O C\\<^sub>2 \\<rightarrow> D\\<^sub>1 O D\\<^sub>2", "also"], ["proof (state)\nthis:\n  (g, h)\n  \\<in> A\\<^sub>2 \\<rightarrow>\n        B\\<^sub>2 \\<rightarrow> C\\<^sub>2 \\<rightarrow> D\\<^sub>2\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n          C\\<^sub>1 O C\\<^sub>2 \\<rightarrow> D\\<^sub>1 O D\\<^sub>2", "note\n      fun_rel_mono[OF order_refl\n      fun_rel_mono[OF order_refl\n      fun_rel_comp_dist]]"], ["proof (state)\nthis:\n  ?R1.0 \\<rightarrow>\n  ?R1.1 \\<rightarrow>\n  (?R1.2 \\<rightarrow> ?R2.2) O (?R3.2 \\<rightarrow> ?R4.2)\n  \\<subseteq> ?R1.0 \\<rightarrow>\n              ?R1.1 \\<rightarrow> ?R1.2 O ?R3.2 \\<rightarrow> ?R2.2 O ?R4.2\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n          C\\<^sub>1 O C\\<^sub>2 \\<rightarrow> D\\<^sub>1 O D\\<^sub>2", "finally"], ["proof (chain)\npicking this:\n  (f, h)\n  \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n        B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n        C\\<^sub>1 O C\\<^sub>2 \\<rightarrow> D\\<^sub>1 O D\\<^sub>2", "show ?thesis"], ["proof (prove)\nusing this:\n  (f, h)\n  \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n        B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n        C\\<^sub>1 O C\\<^sub>2 \\<rightarrow> D\\<^sub>1 O D\\<^sub>2\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n          C\\<^sub>1 O C\\<^sub>2 \\<rightarrow> D\\<^sub>1 O D\\<^sub>2", "by this"], ["proof (state)\nthis:\n  (f, h)\n  \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n        B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n        C\\<^sub>1 O C\\<^sub>2 \\<rightarrow> D\\<^sub>1 O D\\<^sub>2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma relcomp_trans_5[trans]:\n    assumes \"(f, g) \\<in> A\\<^sub>1 \\<rightarrow> B\\<^sub>1 \\<rightarrow> C\\<^sub>1 \\<rightarrow> D\\<^sub>1 \\<rightarrow> E\\<^sub>1\"\n    assumes \"(g, h) \\<in> A\\<^sub>2 \\<rightarrow> B\\<^sub>2 \\<rightarrow> C\\<^sub>2 \\<rightarrow> D\\<^sub>2 \\<rightarrow> E\\<^sub>2\"\n    shows \"(f, h) \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow> B\\<^sub>1 O B\\<^sub>2 \\<rightarrow> C\\<^sub>1 O C\\<^sub>2 \\<rightarrow> D\\<^sub>1 O D\\<^sub>2 \\<rightarrow> E\\<^sub>1 O E\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n          C\\<^sub>1 O C\\<^sub>2 \\<rightarrow>\n          D\\<^sub>1 O D\\<^sub>2 \\<rightarrow> E\\<^sub>1 O E\\<^sub>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n          C\\<^sub>1 O C\\<^sub>2 \\<rightarrow>\n          D\\<^sub>1 O D\\<^sub>2 \\<rightarrow> E\\<^sub>1 O E\\<^sub>2", "note assms(1)"], ["proof (state)\nthis:\n  (f, g)\n  \\<in> A\\<^sub>1 \\<rightarrow>\n        B\\<^sub>1 \\<rightarrow>\n        C\\<^sub>1 \\<rightarrow> D\\<^sub>1 \\<rightarrow> E\\<^sub>1\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n          C\\<^sub>1 O C\\<^sub>2 \\<rightarrow>\n          D\\<^sub>1 O D\\<^sub>2 \\<rightarrow> E\\<^sub>1 O E\\<^sub>2", "also"], ["proof (state)\nthis:\n  (f, g)\n  \\<in> A\\<^sub>1 \\<rightarrow>\n        B\\<^sub>1 \\<rightarrow>\n        C\\<^sub>1 \\<rightarrow> D\\<^sub>1 \\<rightarrow> E\\<^sub>1\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n          C\\<^sub>1 O C\\<^sub>2 \\<rightarrow>\n          D\\<^sub>1 O D\\<^sub>2 \\<rightarrow> E\\<^sub>1 O E\\<^sub>2", "note assms(2)"], ["proof (state)\nthis:\n  (g, h)\n  \\<in> A\\<^sub>2 \\<rightarrow>\n        B\\<^sub>2 \\<rightarrow>\n        C\\<^sub>2 \\<rightarrow> D\\<^sub>2 \\<rightarrow> E\\<^sub>2\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n          C\\<^sub>1 O C\\<^sub>2 \\<rightarrow>\n          D\\<^sub>1 O D\\<^sub>2 \\<rightarrow> E\\<^sub>1 O E\\<^sub>2", "also"], ["proof (state)\nthis:\n  (g, h)\n  \\<in> A\\<^sub>2 \\<rightarrow>\n        B\\<^sub>2 \\<rightarrow>\n        C\\<^sub>2 \\<rightarrow> D\\<^sub>2 \\<rightarrow> E\\<^sub>2\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n          C\\<^sub>1 O C\\<^sub>2 \\<rightarrow>\n          D\\<^sub>1 O D\\<^sub>2 \\<rightarrow> E\\<^sub>1 O E\\<^sub>2", "note\n      fun_rel_mono[OF order_refl\n      fun_rel_mono[OF order_refl\n      fun_rel_mono[OF order_refl\n      fun_rel_comp_dist]]]"], ["proof (state)\nthis:\n  ?R1.0 \\<rightarrow>\n  ?R1.1 \\<rightarrow>\n  ?R1.2 \\<rightarrow>\n  (?R1.3 \\<rightarrow> ?R2.3) O (?R3.3 \\<rightarrow> ?R4.3)\n  \\<subseteq> ?R1.0 \\<rightarrow>\n              ?R1.1 \\<rightarrow>\n              ?R1.2 \\<rightarrow> ?R1.3 O ?R3.3 \\<rightarrow> ?R2.3 O ?R4.3\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n          C\\<^sub>1 O C\\<^sub>2 \\<rightarrow>\n          D\\<^sub>1 O D\\<^sub>2 \\<rightarrow> E\\<^sub>1 O E\\<^sub>2", "finally"], ["proof (chain)\npicking this:\n  (f, h)\n  \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n        B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n        C\\<^sub>1 O C\\<^sub>2 \\<rightarrow>\n        D\\<^sub>1 O D\\<^sub>2 \\<rightarrow> E\\<^sub>1 O E\\<^sub>2", "show ?thesis"], ["proof (prove)\nusing this:\n  (f, h)\n  \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n        B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n        C\\<^sub>1 O C\\<^sub>2 \\<rightarrow>\n        D\\<^sub>1 O D\\<^sub>2 \\<rightarrow> E\\<^sub>1 O E\\<^sub>2\n\ngoal (1 subgoal):\n 1. (f, h)\n    \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n          B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n          C\\<^sub>1 O C\\<^sub>2 \\<rightarrow>\n          D\\<^sub>1 O D\\<^sub>2 \\<rightarrow> E\\<^sub>1 O E\\<^sub>2", "by this"], ["proof (state)\nthis:\n  (f, h)\n  \\<in> A\\<^sub>1 O A\\<^sub>2 \\<rightarrow>\n        B\\<^sub>1 O B\\<^sub>2 \\<rightarrow>\n        C\\<^sub>1 O C\\<^sub>2 \\<rightarrow>\n        D\\<^sub>1 O D\\<^sub>2 \\<rightarrow> E\\<^sub>1 O E\\<^sub>2\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Relation Basics\\<close>"], ["", "(* TODO Peter: these were copied from Sepref_HOL_Bindings, they should probably be part of\n    $AFP/Automatic_Refinement *)"], ["", "lemma inv_fun_rel_eq[simp]: \"(A\\<rightarrow>B)\\<inverse> = A\\<inverse>\\<rightarrow>B\\<inverse>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A \\<rightarrow> B)\\<inverse> = A\\<inverse> \\<rightarrow> B\\<inverse>", "by (auto dest: fun_relD)"], ["", "lemma inv_option_rel_eq[simp]: \"(\\<langle>K\\<rangle>option_rel)\\<inverse> = \\<langle>K\\<inverse>\\<rangle>option_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>K\\<rangle>option_rel)\\<inverse> =\n    \\<langle>K\\<inverse>\\<rangle>option_rel", "by (auto simp: option_rel_def)"], ["", "lemma inv_prod_rel_eq[simp]: \"(P \\<times>\\<^sub>r Q)\\<inverse> = P\\<inverse> \\<times>\\<^sub>r Q\\<inverse>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<times>\\<^sub>r Q)\\<inverse> =\n    P\\<inverse> \\<times>\\<^sub>r Q\\<inverse>", "by (auto)"], ["", "lemma inv_sum_rel_eq[simp]: \"(\\<langle>P,Q\\<rangle>sum_rel)\\<inverse> = \\<langle>P\\<inverse>,Q\\<inverse>\\<rangle>sum_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>P, Q\\<rangle>sum_rel)\\<inverse> = \\<langle>P\\<inverse>,\n    Q\\<inverse>\\<rangle>sum_rel", "by (auto simp: sum_rel_def)"], ["", "lemma set_rel_converse[simp]: \"(\\<langle>A\\<rangle> set_rel)\\<inverse> = \\<langle>A\\<inverse>\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>A\\<rangle>set_rel)\\<inverse> =\n    \\<langle>A\\<inverse>\\<rangle>set_rel", "unfolding set_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(Aa, B).\n     (\\<forall>x\\<in>Aa. \\<exists>y\\<in>B. (x, y) \\<in> A) \\<and>\n     (\\<forall>y\\<in>B. \\<exists>x\\<in>Aa. (x, y) \\<in> A)}\\<inverse> =\n    {(Aa, B).\n     (\\<forall>x\\<in>Aa. \\<exists>y\\<in>B. (x, y) \\<in> A\\<inverse>) \\<and>\n     (\\<forall>y\\<in>B. \\<exists>x\\<in>Aa. (x, y) \\<in> A\\<inverse>)}", "by auto"], ["", "lemma build_rel_domain[simp]: \"Domain (br \\<alpha> I) = Collect I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domain (br \\<alpha> I) = Collect I", "unfolding build_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Domain {(c, a). a = \\<alpha> c \\<and> I c} = Collect I", "by auto"], ["", "lemma build_rel_range[simp]: \"Range (br \\<alpha> I) = \\<alpha> ` Collect I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Range (br \\<alpha> I) = \\<alpha> ` Collect I", "unfolding build_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Range {(c, a). a = \\<alpha> c \\<and> I c} = \\<alpha> ` Collect I", "by auto"], ["", "lemma build_rel_image[simp]: \"br \\<alpha> I `` A = \\<alpha> ` (A \\<inter> Collect I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. br \\<alpha> I `` A = \\<alpha> ` (A \\<inter> Collect I)", "unfolding build_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(c, a). a = \\<alpha> c \\<and> I c} `` A =\n    \\<alpha> ` (A \\<inter> Collect I)", "by auto"], ["", "lemma prod_rel_domain[simp]: \"Domain (A \\<times>\\<^sub>r B) = Domain A \\<times> Domain B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domain (A \\<times>\\<^sub>r B) = Domain A \\<times> Domain B", "unfolding prod_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Domain {((a, b), a', b'). (a, a') \\<in> A \\<and> (b, b') \\<in> B} =\n    Domain A \\<times> Domain B", "by auto"], ["", "lemma prod_rel_range[simp]: \"Range (A \\<times>\\<^sub>r B) = Range A \\<times> Range B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Range (A \\<times>\\<^sub>r B) = Range A \\<times> Range B", "unfolding prod_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Range {((a, b), a', b'). (a, a') \\<in> A \\<and> (b, b') \\<in> B} =\n    Range A \\<times> Range B", "by auto"], ["", "lemma member_Id_on[iff]: \"(x, y) \\<in> Id_on A \\<longleftrightarrow> x = y \\<and> y \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> Id_on A) = (x = y \\<and> y \\<in> A)", "unfolding Id_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> (\\<Union>x\\<in>A. {(x, x)})) = (x = y \\<and> y \\<in> A)", "by auto"], ["", "lemma bijective_Id_on[intro!, simp]: \"bijective (Id_on A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bijective (Id_on A)", "unfolding bijective_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y z.\n        (x, y) \\<in> Id_on A \\<and> (x, z) \\<in> Id_on A \\<longrightarrow>\n        y = z) \\<and>\n    (\\<forall>x y z.\n        (x, z) \\<in> Id_on A \\<and> (y, z) \\<in> Id_on A \\<longrightarrow>\n        x = y)", "by auto"], ["", "lemma relcomp_Id_on[simp]: \"Id_on A O Id_on B = Id_on (A \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Id_on A O Id_on B = Id_on (A \\<inter> B)", "by auto"], ["", "lemma prod_rel_Id_on[simp]: \"Id_on A \\<times>\\<^sub>r Id_on B = Id_on (A \\<times> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Id_on A \\<times>\\<^sub>r Id_on B = Id_on (A \\<times> B)", "by auto"], ["", "lemma set_rel_Id_on[simp]: \"\\<langle>Id_on S\\<rangle> set_rel = Id_on (Pow S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>Id_on S\\<rangle>set_rel = Id_on (Pow S)", "unfolding set_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(A, B).\n     (\\<forall>x\\<in>A. \\<exists>y\\<in>B. (x, y) \\<in> Id_on S) \\<and>\n     (\\<forall>y\\<in>B. \\<exists>x\\<in>A. (x, y) \\<in> Id_on S)} =\n    Id_on (Pow S)", "by auto"], ["", "subsection \\<open>Parametricity\\<close>"], ["", "lemmas basic_param[param] =\n    option.rel_transfer[unfolded pred_bool_Id, to_set]\n    All_transfer[unfolded pred_bool_Id, to_set]\n    Ex_transfer[unfolded pred_bool_Id, to_set]\n    Union_transfer[to_set]\n    image_transfer[to_set]\n    Image_parametric[to_set]"], ["", "lemma Sigma_param[param]: \"(Sigma, Sigma) \\<in> \\<langle>A\\<rangle> set_rel \\<rightarrow> (A \\<rightarrow> \\<langle>B\\<rangle> set_rel) \\<rightarrow> \\<langle>A \\<times>\\<^sub>r B\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Sigma, Sigma)\n    \\<in> \\<langle>A\\<rangle>set_rel \\<rightarrow>\n          (A \\<rightarrow> \\<langle>B\\<rangle>set_rel) \\<rightarrow>\n          \\<langle>A \\<times>\\<^sub>r B\\<rangle>set_rel", "unfolding Sigma_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>A B. \\<Union>x\\<in>A. \\<Union>y\\<in>B x. {(x, y)},\n     \\<lambda>A B. \\<Union>x\\<in>A. \\<Union>y\\<in>B x. {(x, y)})\n    \\<in> \\<langle>A\\<rangle>set_rel \\<rightarrow>\n          (A \\<rightarrow> \\<langle>B\\<rangle>set_rel) \\<rightarrow>\n          \\<langle>A \\<times>\\<^sub>r B\\<rangle>set_rel", "by parametricity"], ["", "(* TODO: Lifting_Set.filter_transfer is too weak *)"], ["", "lemma set_filter_param[param]:\n    \"(Set.filter, Set.filter) \\<in> (A \\<rightarrow> bool_rel) \\<rightarrow> \\<langle>A\\<rangle> set_rel \\<rightarrow> \\<langle>A\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Set.filter, Set.filter)\n    \\<in> (A \\<rightarrow> bool_rel) \\<rightarrow>\n          \\<langle>A\\<rangle>set_rel \\<rightarrow>\n          \\<langle>A\\<rangle>set_rel", "unfolding Set.filter_def fun_rel_def set_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>P A. {a \\<in> A. P a}, \\<lambda>P A. {a \\<in> A. P a})\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(f, f').\n                          \\<forall>(a, a')\\<in>A.\n                             (f a, f' a') \\<in> bool_rel}.\n              (f a, f' a')\n              \\<in> {(f, f').\n                     \\<forall>(a, a')\n                              \\<in>{(Aa, B).\n                                    (\\<forall>x\\<in>Aa.\n  \\<exists>y\\<in>B. (x, y) \\<in> A) \\<and>\n                                    (\\<forall>y\\<in>B.\n  \\<exists>x\\<in>Aa. (x, y) \\<in> A)}.\n                        (f a, f' a')\n                        \\<in> {(Aa, B).\n                               (\\<forall>x\\<in>Aa.\n                                   \\<exists>y\\<in>B. (x, y) \\<in> A) \\<and>\n                               (\\<forall>y\\<in>B.\n                                   \\<exists>x\\<in>Aa. (x, y) \\<in> A)}}}", "by blast"], ["", "lemma is_singleton_param[param]:\n    assumes \"bijective A\"\n    shows \"(is_singleton, is_singleton) \\<in> \\<langle>A\\<rangle> set_rel \\<rightarrow> bool_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (is_singleton, is_singleton)\n    \\<in> \\<langle>A\\<rangle>set_rel \\<rightarrow> bool_rel", "using assms"], ["proof (prove)\nusing this:\n  bijective A\n\ngoal (1 subgoal):\n 1. (is_singleton, is_singleton)\n    \\<in> \\<langle>A\\<rangle>set_rel \\<rightarrow> bool_rel", "unfolding is_singleton_def set_rel_def bijective_def"], ["proof (prove)\nusing this:\n  (\\<forall>x y z.\n      (x, y) \\<in> A \\<and> (x, z) \\<in> A \\<longrightarrow> y = z) \\<and>\n  (\\<forall>x y z.\n      (x, z) \\<in> A \\<and> (y, z) \\<in> A \\<longrightarrow> x = y)\n\ngoal (1 subgoal):\n 1. (\\<lambda>A. \\<exists>x. A = {x}, \\<lambda>A. \\<exists>x. A = {x})\n    \\<in> {(Aa, B).\n           (\\<forall>x\\<in>Aa. \\<exists>y\\<in>B. (x, y) \\<in> A) \\<and>\n           (\\<forall>y\\<in>B.\n               \\<exists>x\\<in>Aa. (x, y) \\<in> A)} \\<rightarrow>\n          bool_rel", "by auto blast+"], ["", "lemma the_elem_param[param]:\n    assumes \"is_singleton S\" \"is_singleton T\"\n    assumes \"(S, T) \\<in> \\<langle>A\\<rangle> set_rel\"\n    shows \"(the_elem S, the_elem T) \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (the_elem S, the_elem T) \\<in> A", "using assms"], ["proof (prove)\nusing this:\n  is_singleton S\n  is_singleton T\n  (S, T) \\<in> \\<langle>A\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (the_elem S, the_elem T) \\<in> A", "unfolding set_rel_def is_singleton_def"], ["proof (prove)\nusing this:\n  \\<exists>x. S = {x}\n  \\<exists>x. T = {x}\n  (S, T)\n  \\<in> {(Aa, B).\n         (\\<forall>x\\<in>Aa. \\<exists>y\\<in>B. (x, y) \\<in> A) \\<and>\n         (\\<forall>y\\<in>B. \\<exists>x\\<in>Aa. (x, y) \\<in> A)}\n\ngoal (1 subgoal):\n 1. (the_elem S, the_elem T) \\<in> A", "by auto"], ["", "subsection \\<open>Lists\\<close>"], ["", "lemma list_all2_list_rel_conv[pred_set_conv]:\n    \"list_all2 (\\<lambda> x y. (x, y) \\<in> R) = (\\<lambda> x y. (x, y) \\<in> \\<langle>R\\<rangle> list_rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_all2 (\\<lambda>x y. (x, y) \\<in> R) =\n    (\\<lambda>x y. (x, y) \\<in> \\<langle>R\\<rangle>list_rel)", "unfolding list_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. list_all2 (\\<lambda>x y. (x, y) \\<in> R) =\n    (\\<lambda>x y.\n        (x, y)\n        \\<in> {(l, l'). list_all2 (\\<lambda>x x'. (x, x') \\<in> R) l l'})", "by simp"], ["", "lemmas list_rel_single_valued[iff] = list_rel_sv_iff"], ["", "lemmas list_rel_simps[simp] =\n    list.rel_eq_onp[to_set]\n    list.rel_conversep[to_set, symmetric]\n    list.rel_compp[to_set]"], ["", "lemmas list_rel_param[param] =\n    list.set_transfer[to_set]\n    list.pred_transfer[unfolded pred_bool_Id, to_set, folded pred_list_listsp]\n    list.rel_transfer[unfolded pred_bool_Id, to_set]"], ["", "lemmas null_param[param] = null_transfer[unfolded pred_bool_Id, to_set]"], ["", "(* TODO Peter: param_set is too restrictive *)"], ["", "thm param_set list.set_transfer[to_set]"], ["", "lemmas scan_param[param] = scan.transfer[to_set]"], ["", "lemma bind_param[param]: \"(List.bind, List.bind) \\<in> \\<langle>A\\<rangle> list_rel \\<rightarrow> (A \\<rightarrow> \\<langle>B\\<rangle> list_rel) \\<rightarrow> \\<langle>B\\<rangle> list_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<bind>), (\\<bind>))\n    \\<in> \\<langle>A\\<rangle>list_rel \\<rightarrow>\n          (A \\<rightarrow> \\<langle>B\\<rangle>list_rel) \\<rightarrow>\n          \\<langle>B\\<rangle>list_rel", "unfolding List.bind_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>xs f. concat (map f xs), \\<lambda>xs f. concat (map f xs))\n    \\<in> \\<langle>A\\<rangle>list_rel \\<rightarrow>\n          (A \\<rightarrow> \\<langle>B\\<rangle>list_rel) \\<rightarrow>\n          \\<langle>B\\<rangle>list_rel", "by parametricity"], ["", "lemma set_id_param[param]: \"(set, id) \\<in> \\<langle>A\\<rangle> list_set_rel \\<rightarrow> \\<langle>A\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (set, id)\n    \\<in> \\<langle>A\\<rangle>list_set_rel \\<rightarrow>\n          \\<langle>A\\<rangle>set_rel", "unfolding list_set_rel_def relcomp_unfold in_br_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. (set, id)\n    \\<in> {(x, z).\n           \\<exists>y.\n              (x, y) \\<in> \\<langle>A\\<rangle>list_rel \\<and>\n              z = set y \\<and> distinct y} \\<rightarrow>\n          \\<langle>A\\<rangle>set_rel", "by auto parametricity"], ["", "subsection \\<open>Streams\\<close>"], ["", "definition stream_rel :: \"('a \\<times> 'b) set \\<Rightarrow> ('a stream \\<times> 'b stream) set\" where\n    [to_relAPP]: \"stream_rel R \\<equiv> {(x, y). stream_all2 (\\<lambda> x y. (x, y) \\<in> R) x y}\""], ["", "lemma stream_all2_stream_rel_conv[pred_set_conv]:\n    \"stream_all2 (\\<lambda> x y. (x, y) \\<in> R) = (\\<lambda> x y. (x, y) \\<in> \\<langle>R\\<rangle> stream_rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stream_all2 (\\<lambda>x y. (x, y) \\<in> R) =\n    (\\<lambda>x y. (x, y) \\<in> \\<langle>R\\<rangle>stream_rel)", "unfolding stream_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. stream_all2 (\\<lambda>x y. (x, y) \\<in> R) =\n    (\\<lambda>x y.\n        (x, y)\n        \\<in> {(x, y). stream_all2 (\\<lambda>x y. (x, y) \\<in> R) x y})", "by simp"], ["", "lemmas stream_rel_coinduct'[case_names stream_rel, coinduct set: stream_rel] =\n    stream_rel_coinduct[to_set]"], ["", "lemmas stream_rel_intros = stream.rel_intros[to_set]"], ["", "lemmas stream_rel_cases = stream.rel_cases[to_set]"], ["", "lemmas stream_rel_inject[iff] = stream.rel_inject[to_set]"], ["", "(* TODO: why is stream.right_unique_rel not generated as an iff rule? *)"], ["", "lemma stream_rel_single_valued[iff]: \"single_valued (\\<langle>A\\<rangle> stream_rel) \\<longleftrightarrow> single_valued A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. single_valued (\\<langle>A\\<rangle>stream_rel) = single_valued A", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. single_valued (\\<langle>A\\<rangle>stream_rel) \\<Longrightarrow>\n    single_valued A\n 2. single_valued A \\<Longrightarrow>\n    single_valued (\\<langle>A\\<rangle>stream_rel)", "show \"single_valued A\" if \"single_valued (\\<langle>A\\<rangle> stream_rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. single_valued A", "proof (intro single_valuedI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> A; (x, z) \\<in> A\\<rbrakk>\n       \\<Longrightarrow> y = z", "fix x y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> A; (x, z) \\<in> A\\<rbrakk>\n       \\<Longrightarrow> y = z", "assume \"(x, y) \\<in> A\" \"(x, z) \\<in> A\""], ["proof (state)\nthis:\n  (x, y) \\<in> A\n  (x, z) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> A; (x, z) \\<in> A\\<rbrakk>\n       \\<Longrightarrow> y = z", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<in> A\n  (x, z) \\<in> A", "have \"(sconst x, sconst y) \\<in> \\<langle>A\\<rangle> stream_rel\" \"(sconst x, sconst z) \\<in> \\<langle>A\\<rangle> stream_rel\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> A\n  (x, z) \\<in> A\n\ngoal (1 subgoal):\n 1. (sconst x, sconst y) \\<in> \\<langle>A\\<rangle>stream_rel &&&\n    (sconst x, sconst z) \\<in> \\<langle>A\\<rangle>stream_rel", "unfolding stream_rel_sconst[to_set]"], ["proof (prove)\nusing this:\n  (x, y) \\<in> A\n  (x, z) \\<in> A\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> A &&& (x, z) \\<in> A", "by this"], ["proof (state)\nthis:\n  (sconst x, sconst y) \\<in> \\<langle>A\\<rangle>stream_rel\n  (sconst x, sconst z) \\<in> \\<langle>A\\<rangle>stream_rel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> A; (x, z) \\<in> A\\<rbrakk>\n       \\<Longrightarrow> y = z", "then"], ["proof (chain)\npicking this:\n  (sconst x, sconst y) \\<in> \\<langle>A\\<rangle>stream_rel\n  (sconst x, sconst z) \\<in> \\<langle>A\\<rangle>stream_rel", "have \"sconst y = sconst z\""], ["proof (prove)\nusing this:\n  (sconst x, sconst y) \\<in> \\<langle>A\\<rangle>stream_rel\n  (sconst x, sconst z) \\<in> \\<langle>A\\<rangle>stream_rel\n\ngoal (1 subgoal):\n 1. sconst y = sconst z", "using single_valuedD that"], ["proof (prove)\nusing this:\n  (sconst x, sconst y) \\<in> \\<langle>A\\<rangle>stream_rel\n  (sconst x, sconst z) \\<in> \\<langle>A\\<rangle>stream_rel\n  \\<lbrakk>single_valued ?r; (?x, ?y) \\<in> ?r; (?x, ?z) \\<in> ?r\\<rbrakk>\n  \\<Longrightarrow> ?y = ?z\n  single_valued (\\<langle>A\\<rangle>stream_rel)\n\ngoal (1 subgoal):\n 1. sconst y = sconst z", "by metis"], ["proof (state)\nthis:\n  sconst y = sconst z\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> A; (x, z) \\<in> A\\<rbrakk>\n       \\<Longrightarrow> y = z", "then"], ["proof (chain)\npicking this:\n  sconst y = sconst z", "show \"y = z\""], ["proof (prove)\nusing this:\n  sconst y = sconst z\n\ngoal (1 subgoal):\n 1. y = z", "by simp"], ["proof (state)\nthis:\n  y = z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  single_valued (\\<langle>A\\<rangle>stream_rel) \\<Longrightarrow>\n  single_valued A\n\ngoal (1 subgoal):\n 1. single_valued A \\<Longrightarrow>\n    single_valued (\\<langle>A\\<rangle>stream_rel)", "show \"single_valued A \\<Longrightarrow> single_valued (\\<langle>A\\<rangle> stream_rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. single_valued A \\<Longrightarrow>\n    single_valued (\\<langle>A\\<rangle>stream_rel)", "using stream.right_unique_rel[to_set, to_set]"], ["proof (prove)\nusing this:\n  single_valued ?R \\<Longrightarrow>\n  single_valued (\\<langle>?R\\<rangle>stream_rel)\n\ngoal (1 subgoal):\n 1. single_valued A \\<Longrightarrow>\n    single_valued (\\<langle>A\\<rangle>stream_rel)", "by this"], ["proof (state)\nthis:\n  single_valued A \\<Longrightarrow>\n  single_valued (\\<langle>A\\<rangle>stream_rel)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas stream_rel_simps[simp] =\n    stream.rel_eq[unfolded pred_Id, THEN IdD, to_set]\n    stream.rel_eq_onp[to_set]\n    stream.rel_conversep[to_set]\n    stream.rel_compp[to_set]"], ["", "lemmas stream_rel_param[param] =\n    stream.ctr_transfer[to_set]\n    stream.sel_transfer[to_set]\n    stream.pred_transfer[unfolded pred_bool_Id, to_set, folded pred_stream_streamsp]\n    stream.rel_transfer[unfolded pred_bool_Id, to_set]\n    stream.map_transfer[to_set]\n    stream.set_transfer[to_set]\n    stream.case_transfer[to_set]\n    stream.corec_transfer[unfolded pred_bool_Id, to_set]"], ["", "(* TODO: why is this not generated by the datatype package when stream.Domainp_rel is? *)"], ["", "lemma stream_Rangep_rel: \"Rangep (stream_all2 R) = pred_stream (Rangep R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rangep (stream_all2 R) = pred_stream (Rangep R)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Rangep (stream_all2 R) = pred_stream (Rangep R)", "have 1: \"pred_stream (Rangep R) v\" if \"stream_all2 R u v\" for u v"], ["proof (prove)\ngoal (1 subgoal):\n 1. pred_stream (Rangep R) v", "using that"], ["proof (prove)\nusing this:\n  stream_all2 R u v\n\ngoal (1 subgoal):\n 1. pred_stream (Rangep R) v", "by (coinduction arbitrary: u v) (auto elim: stream.rel_cases)"], ["proof (state)\nthis:\n  stream_all2 R ?u ?v \\<Longrightarrow> pred_stream (Rangep R) ?v\n\ngoal (1 subgoal):\n 1. Rangep (stream_all2 R) = pred_stream (Rangep R)", "have 2: \"stream_all2 R (smap (\\<lambda> y. SOME x. R x y) v) v\" if \"pred_stream (Rangep R) v\" for v"], ["proof (prove)\ngoal (1 subgoal):\n 1. stream_all2 R (smap (\\<lambda>y. SOME x. R x y) v) v", "using that"], ["proof (prove)\nusing this:\n  pred_stream (Rangep R) v\n\ngoal (1 subgoal):\n 1. stream_all2 R (smap (\\<lambda>y. SOME x. R x y) v) v", "by (coinduction arbitrary: v) (auto intro: someI)"], ["proof (state)\nthis:\n  pred_stream (Rangep R) ?v \\<Longrightarrow>\n  stream_all2 R (smap (\\<lambda>y. SOME x. R x y) ?v) ?v\n\ngoal (1 subgoal):\n 1. Rangep (stream_all2 R) = pred_stream (Rangep R)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rangep (stream_all2 R) = pred_stream (Rangep R)", "using 1 2"], ["proof (prove)\nusing this:\n  stream_all2 R ?u ?v \\<Longrightarrow> pred_stream (Rangep R) ?v\n  pred_stream (Rangep R) ?v \\<Longrightarrow>\n  stream_all2 R (smap (\\<lambda>y. SOME x. R x y) ?v) ?v\n\ngoal (1 subgoal):\n 1. Rangep (stream_all2 R) = pred_stream (Rangep R)", "by blast"], ["proof (state)\nthis:\n  Rangep (stream_all2 R) = pred_stream (Rangep R)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas stream_rel_domain[simp] = stream.Domainp_rel[to_set]"], ["", "lemmas stream_rel_range[simp] = stream_Rangep_rel[to_set]"], ["", "lemma stream_param[param]:\n    assumes\"(HOL.eq, HOL.eq) \\<in> R \\<rightarrow> R \\<rightarrow> bool_rel\"\n    shows \"(HOL.eq, HOL.eq) \\<in> \\<langle>R\\<rangle> stream_rel \\<rightarrow> \\<langle>R\\<rangle> stream_rel \\<rightarrow> bool_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((=), (=))\n    \\<in> \\<langle>R\\<rangle>stream_rel \\<rightarrow>\n          \\<langle>R\\<rangle>stream_rel \\<rightarrow> bool_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((=), (=))\n    \\<in> \\<langle>R\\<rangle>stream_rel \\<rightarrow>\n          \\<langle>R\\<rangle>stream_rel \\<rightarrow> bool_rel", "have \"(stream_all2 HOL.eq, stream_all2 HOL.eq) \\<in> \\<langle>R\\<rangle> stream_rel \\<rightarrow> \\<langle>R\\<rangle> stream_rel \\<rightarrow> bool_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (stream_all2 (=), stream_all2 (=))\n    \\<in> \\<langle>R\\<rangle>stream_rel \\<rightarrow>\n          \\<langle>R\\<rangle>stream_rel \\<rightarrow> bool_rel", "using assms"], ["proof (prove)\nusing this:\n  ((=), (=)) \\<in> R \\<rightarrow> R \\<rightarrow> bool_rel\n\ngoal (1 subgoal):\n 1. (stream_all2 (=), stream_all2 (=))\n    \\<in> \\<langle>R\\<rangle>stream_rel \\<rightarrow>\n          \\<langle>R\\<rangle>stream_rel \\<rightarrow> bool_rel", "by parametricity"], ["proof (state)\nthis:\n  (stream_all2 (=), stream_all2 (=))\n  \\<in> \\<langle>R\\<rangle>stream_rel \\<rightarrow>\n        \\<langle>R\\<rangle>stream_rel \\<rightarrow> bool_rel\n\ngoal (1 subgoal):\n 1. ((=), (=))\n    \\<in> \\<langle>R\\<rangle>stream_rel \\<rightarrow>\n          \\<langle>R\\<rangle>stream_rel \\<rightarrow> bool_rel", "then"], ["proof (chain)\npicking this:\n  (stream_all2 (=), stream_all2 (=))\n  \\<in> \\<langle>R\\<rangle>stream_rel \\<rightarrow>\n        \\<langle>R\\<rangle>stream_rel \\<rightarrow> bool_rel", "show ?thesis"], ["proof (prove)\nusing this:\n  (stream_all2 (=), stream_all2 (=))\n  \\<in> \\<langle>R\\<rangle>stream_rel \\<rightarrow>\n        \\<langle>R\\<rangle>stream_rel \\<rightarrow> bool_rel\n\ngoal (1 subgoal):\n 1. ((=), (=))\n    \\<in> \\<langle>R\\<rangle>stream_rel \\<rightarrow>\n          \\<langle>R\\<rangle>stream_rel \\<rightarrow> bool_rel", "unfolding stream.rel_eq"], ["proof (prove)\nusing this:\n  ((=), (=))\n  \\<in> \\<langle>R\\<rangle>stream_rel \\<rightarrow>\n        \\<langle>R\\<rangle>stream_rel \\<rightarrow> bool_rel\n\ngoal (1 subgoal):\n 1. ((=), (=))\n    \\<in> \\<langle>R\\<rangle>stream_rel \\<rightarrow>\n          \\<langle>R\\<rangle>stream_rel \\<rightarrow> bool_rel", "by this"], ["proof (state)\nthis:\n  ((=), (=))\n  \\<in> \\<langle>R\\<rangle>stream_rel \\<rightarrow>\n        \\<langle>R\\<rangle>stream_rel \\<rightarrow> bool_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas szip_param[param] = szip_transfer[to_set]"], ["", "lemmas siterate_param[param] = siterate_transfer[to_set]"], ["", "lemmas sscan_param[param] = sscan.transfer[to_set]"], ["", "lemma streams_param[param]: \"(streams, streams) \\<in> \\<langle>A\\<rangle> set_rel \\<rightarrow> \\<langle>\\<langle>A\\<rangle> stream_rel\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (streams, streams)\n    \\<in> \\<langle>A\\<rangle>set_rel \\<rightarrow>\n          \\<langle>\\<langle>A\\<rangle>stream_rel\\<rangle>set_rel", "proof (intro fun_relI set_relI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a a' x.\n       \\<lbrakk>(a, a') \\<in> \\<langle>A\\<rangle>set_rel;\n        x \\<in> streams a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>streams a'.\n                            (x, y) \\<in> \\<langle>A\\<rangle>stream_rel\n 2. \\<And>a a' y.\n       \\<lbrakk>(a, a') \\<in> \\<langle>A\\<rangle>set_rel;\n        y \\<in> streams a'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>streams a.\n                            (x, y) \\<in> \\<langle>A\\<rangle>stream_rel", "fix S T"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a a' x.\n       \\<lbrakk>(a, a') \\<in> \\<langle>A\\<rangle>set_rel;\n        x \\<in> streams a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>streams a'.\n                            (x, y) \\<in> \\<langle>A\\<rangle>stream_rel\n 2. \\<And>a a' y.\n       \\<lbrakk>(a, a') \\<in> \\<langle>A\\<rangle>set_rel;\n        y \\<in> streams a'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>streams a.\n                            (x, y) \\<in> \\<langle>A\\<rangle>stream_rel", "assume 1: \"(S, T) \\<in> \\<langle>A\\<rangle> set_rel\""], ["proof (state)\nthis:\n  (S, T) \\<in> \\<langle>A\\<rangle>set_rel\n\ngoal (2 subgoals):\n 1. \\<And>a a' x.\n       \\<lbrakk>(a, a') \\<in> \\<langle>A\\<rangle>set_rel;\n        x \\<in> streams a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>streams a'.\n                            (x, y) \\<in> \\<langle>A\\<rangle>stream_rel\n 2. \\<And>a a' y.\n       \\<lbrakk>(a, a') \\<in> \\<langle>A\\<rangle>set_rel;\n        y \\<in> streams a'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>streams a.\n                            (x, y) \\<in> \\<langle>A\\<rangle>stream_rel", "obtain f where 2: \"\\<And> x. x \\<in> S \\<Longrightarrow> f x \\<in> T \\<and> (x, f x) \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<And>x.\n            x \\<in> S \\<Longrightarrow>\n            f x \\<in> T \\<and> (x, f x) \\<in> A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using 1"], ["proof (prove)\nusing this:\n  (S, T) \\<in> \\<langle>A\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<And>x.\n            x \\<in> S \\<Longrightarrow>\n            f x \\<in> T \\<and> (x, f x) \\<in> A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding set_rel_def"], ["proof (prove)\nusing this:\n  (S, T)\n  \\<in> {(Aa, B).\n         (\\<forall>x\\<in>Aa. \\<exists>y\\<in>B. (x, y) \\<in> A) \\<and>\n         (\\<forall>y\\<in>B. \\<exists>x\\<in>Aa. (x, y) \\<in> A)}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<And>x.\n            x \\<in> S \\<Longrightarrow>\n            f x \\<in> T \\<and> (x, f x) \\<in> A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto metis"], ["proof (state)\nthis:\n  ?x \\<in> S \\<Longrightarrow> f ?x \\<in> T \\<and> (?x, f ?x) \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>a a' x.\n       \\<lbrakk>(a, a') \\<in> \\<langle>A\\<rangle>set_rel;\n        x \\<in> streams a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>streams a'.\n                            (x, y) \\<in> \\<langle>A\\<rangle>stream_rel\n 2. \\<And>a a' y.\n       \\<lbrakk>(a, a') \\<in> \\<langle>A\\<rangle>set_rel;\n        y \\<in> streams a'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>streams a.\n                            (x, y) \\<in> \\<langle>A\\<rangle>stream_rel", "have 3: \"f ` S \\<subseteq> T\" \"(id, f) \\<in> Id_on S \\<rightarrow> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` S \\<subseteq> T &&& (id, f) \\<in> Id_on S \\<rightarrow> A", "using 2"], ["proof (prove)\nusing this:\n  ?x \\<in> S \\<Longrightarrow> f ?x \\<in> T \\<and> (?x, f ?x) \\<in> A\n\ngoal (1 subgoal):\n 1. f ` S \\<subseteq> T &&& (id, f) \\<in> Id_on S \\<rightarrow> A", "by auto"], ["proof (state)\nthis:\n  f ` S \\<subseteq> T\n  (id, f) \\<in> Id_on S \\<rightarrow> A\n\ngoal (2 subgoals):\n 1. \\<And>a a' x.\n       \\<lbrakk>(a, a') \\<in> \\<langle>A\\<rangle>set_rel;\n        x \\<in> streams a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>streams a'.\n                            (x, y) \\<in> \\<langle>A\\<rangle>stream_rel\n 2. \\<And>a a' y.\n       \\<lbrakk>(a, a') \\<in> \\<langle>A\\<rangle>set_rel;\n        y \\<in> streams a'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>streams a.\n                            (x, y) \\<in> \\<langle>A\\<rangle>stream_rel", "obtain g where 4: \"\\<And> y. y \\<in> T \\<Longrightarrow> g y \\<in> S \\<and> (g y, y) \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        (\\<And>y.\n            y \\<in> T \\<Longrightarrow>\n            g y \\<in> S \\<and> (g y, y) \\<in> A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using 1"], ["proof (prove)\nusing this:\n  (S, T) \\<in> \\<langle>A\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        (\\<And>y.\n            y \\<in> T \\<Longrightarrow>\n            g y \\<in> S \\<and> (g y, y) \\<in> A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding set_rel_def"], ["proof (prove)\nusing this:\n  (S, T)\n  \\<in> {(Aa, B).\n         (\\<forall>x\\<in>Aa. \\<exists>y\\<in>B. (x, y) \\<in> A) \\<and>\n         (\\<forall>y\\<in>B. \\<exists>x\\<in>Aa. (x, y) \\<in> A)}\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        (\\<And>y.\n            y \\<in> T \\<Longrightarrow>\n            g y \\<in> S \\<and> (g y, y) \\<in> A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto metis"], ["proof (state)\nthis:\n  ?y \\<in> T \\<Longrightarrow> g ?y \\<in> S \\<and> (g ?y, ?y) \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>a a' x.\n       \\<lbrakk>(a, a') \\<in> \\<langle>A\\<rangle>set_rel;\n        x \\<in> streams a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>streams a'.\n                            (x, y) \\<in> \\<langle>A\\<rangle>stream_rel\n 2. \\<And>a a' y.\n       \\<lbrakk>(a, a') \\<in> \\<langle>A\\<rangle>set_rel;\n        y \\<in> streams a'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>streams a.\n                            (x, y) \\<in> \\<langle>A\\<rangle>stream_rel", "have 5: \"g ` T \\<subseteq> S\" \"(g, id) \\<in> Id_on T \\<rightarrow> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g ` T \\<subseteq> S &&& (g, id) \\<in> Id_on T \\<rightarrow> A", "using 4"], ["proof (prove)\nusing this:\n  ?y \\<in> T \\<Longrightarrow> g ?y \\<in> S \\<and> (g ?y, ?y) \\<in> A\n\ngoal (1 subgoal):\n 1. g ` T \\<subseteq> S &&& (g, id) \\<in> Id_on T \\<rightarrow> A", "by auto"], ["proof (state)\nthis:\n  g ` T \\<subseteq> S\n  (g, id) \\<in> Id_on T \\<rightarrow> A\n\ngoal (2 subgoals):\n 1. \\<And>a a' x.\n       \\<lbrakk>(a, a') \\<in> \\<langle>A\\<rangle>set_rel;\n        x \\<in> streams a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>streams a'.\n                            (x, y) \\<in> \\<langle>A\\<rangle>stream_rel\n 2. \\<And>a a' y.\n       \\<lbrakk>(a, a') \\<in> \\<langle>A\\<rangle>set_rel;\n        y \\<in> streams a'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>streams a.\n                            (x, y) \\<in> \\<langle>A\\<rangle>stream_rel", "show \"\\<exists> v \\<in> streams T. (u, v) \\<in> \\<langle>A\\<rangle> stream_rel\" if \"u \\<in> streams S\" for u"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>streams T. (u, v) \\<in> \\<langle>A\\<rangle>stream_rel", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (u, ?v) \\<in> \\<langle>A\\<rangle>stream_rel\n 2. ?v \\<in> streams T", "show \"smap f u \\<in> streams T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smap f u \\<in> streams T", "using smap_streams 3 that"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s \\<in> streams ?A;\n   \\<And>x. x \\<in> ?A \\<Longrightarrow> ?f x \\<in> ?B\\<rbrakk>\n  \\<Longrightarrow> smap ?f ?s \\<in> streams ?B\n  f ` S \\<subseteq> T\n  (id, f) \\<in> Id_on S \\<rightarrow> A\n  u \\<in> streams S\n\ngoal (1 subgoal):\n 1. smap f u \\<in> streams T", "by blast"], ["proof (state)\nthis:\n  smap f u \\<in> streams T\n\ngoal (1 subgoal):\n 1. (u, smap f u) \\<in> \\<langle>A\\<rangle>stream_rel", "have \"(smap id u, smap f u) \\<in> \\<langle>A\\<rangle> stream_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (smap id u, smap f u) \\<in> \\<langle>A\\<rangle>stream_rel", "using 3 that"], ["proof (prove)\nusing this:\n  f ` S \\<subseteq> T\n  (id, f) \\<in> Id_on S \\<rightarrow> A\n  u \\<in> streams S\n\ngoal (1 subgoal):\n 1. (smap id u, smap f u) \\<in> \\<langle>A\\<rangle>stream_rel", "by parametricity auto"], ["proof (state)\nthis:\n  (smap id u, smap f u) \\<in> \\<langle>A\\<rangle>stream_rel\n\ngoal (1 subgoal):\n 1. (u, smap f u) \\<in> \\<langle>A\\<rangle>stream_rel", "then"], ["proof (chain)\npicking this:\n  (smap id u, smap f u) \\<in> \\<langle>A\\<rangle>stream_rel", "show \"(u, smap f u) \\<in> \\<langle>A\\<rangle> stream_rel\""], ["proof (prove)\nusing this:\n  (smap id u, smap f u) \\<in> \\<langle>A\\<rangle>stream_rel\n\ngoal (1 subgoal):\n 1. (u, smap f u) \\<in> \\<langle>A\\<rangle>stream_rel", "by simp"], ["proof (state)\nthis:\n  (u, smap f u) \\<in> \\<langle>A\\<rangle>stream_rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?u \\<in> streams S \\<Longrightarrow>\n  \\<exists>v\\<in>streams T. (?u, v) \\<in> \\<langle>A\\<rangle>stream_rel\n\ngoal (1 subgoal):\n 1. \\<And>a a' y.\n       \\<lbrakk>(a, a') \\<in> \\<langle>A\\<rangle>set_rel;\n        y \\<in> streams a'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>streams a.\n                            (x, y) \\<in> \\<langle>A\\<rangle>stream_rel", "show \"\\<exists> u \\<in> streams S. (u, v) \\<in> \\<langle>A\\<rangle> stream_rel\" if \"v \\<in> streams T\" for v"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>streams S. (u, v) \\<in> \\<langle>A\\<rangle>stream_rel", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (?u, v) \\<in> \\<langle>A\\<rangle>stream_rel\n 2. ?u \\<in> streams S", "show \"smap g v \\<in> streams S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smap g v \\<in> streams S", "using smap_streams 5 that"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s \\<in> streams ?A;\n   \\<And>x. x \\<in> ?A \\<Longrightarrow> ?f x \\<in> ?B\\<rbrakk>\n  \\<Longrightarrow> smap ?f ?s \\<in> streams ?B\n  g ` T \\<subseteq> S\n  (g, id) \\<in> Id_on T \\<rightarrow> A\n  v \\<in> streams T\n\ngoal (1 subgoal):\n 1. smap g v \\<in> streams S", "by blast"], ["proof (state)\nthis:\n  smap g v \\<in> streams S\n\ngoal (1 subgoal):\n 1. (smap g v, v) \\<in> \\<langle>A\\<rangle>stream_rel", "have \"(smap g v, smap id v) \\<in> \\<langle>A\\<rangle> stream_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (smap g v, smap id v) \\<in> \\<langle>A\\<rangle>stream_rel", "using 5 that"], ["proof (prove)\nusing this:\n  g ` T \\<subseteq> S\n  (g, id) \\<in> Id_on T \\<rightarrow> A\n  v \\<in> streams T\n\ngoal (1 subgoal):\n 1. (smap g v, smap id v) \\<in> \\<langle>A\\<rangle>stream_rel", "by parametricity auto"], ["proof (state)\nthis:\n  (smap g v, smap id v) \\<in> \\<langle>A\\<rangle>stream_rel\n\ngoal (1 subgoal):\n 1. (smap g v, v) \\<in> \\<langle>A\\<rangle>stream_rel", "then"], ["proof (chain)\npicking this:\n  (smap g v, smap id v) \\<in> \\<langle>A\\<rangle>stream_rel", "show \"(smap g v, v) \\<in> \\<langle>A\\<rangle> stream_rel\""], ["proof (prove)\nusing this:\n  (smap g v, smap id v) \\<in> \\<langle>A\\<rangle>stream_rel\n\ngoal (1 subgoal):\n 1. (smap g v, v) \\<in> \\<langle>A\\<rangle>stream_rel", "by simp"], ["proof (state)\nthis:\n  (smap g v, v) \\<in> \\<langle>A\\<rangle>stream_rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?v \\<in> streams T \\<Longrightarrow>\n  \\<exists>u\\<in>streams S. (u, ?v) \\<in> \\<langle>A\\<rangle>stream_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma holds_param[param]: \"(holds, holds) \\<in> (A \\<rightarrow> bool_rel) \\<rightarrow> (\\<langle>A\\<rangle> stream_rel \\<rightarrow> bool_rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (holds, holds)\n    \\<in> (A \\<rightarrow> bool_rel) \\<rightarrow>\n          \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel", "unfolding holds.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>P xs. P (shd xs), \\<lambda>P xs. P (shd xs))\n    \\<in> (A \\<rightarrow> bool_rel) \\<rightarrow>\n          \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel", "by parametricity"], ["", "lemma HLD_param[param]:\n    assumes \"single_valued A\" \"single_valued (A\\<inverse>)\"\n    shows \"(HLD, HLD) \\<in> \\<langle>A\\<rangle> set_rel \\<rightarrow> \\<langle>A\\<rangle> stream_rel \\<rightarrow> bool_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HLD, HLD)\n    \\<in> \\<langle>A\\<rangle>set_rel \\<rightarrow>\n          \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel", "using assms"], ["proof (prove)\nusing this:\n  single_valued A\n  single_valued (A\\<inverse>)\n\ngoal (1 subgoal):\n 1. (HLD, HLD)\n    \\<in> \\<langle>A\\<rangle>set_rel \\<rightarrow>\n          \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel", "unfolding HLD_def"], ["proof (prove)\nusing this:\n  single_valued A\n  single_valued (A\\<inverse>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. holds (\\<lambda>x. x \\<in> s),\n     \\<lambda>s. holds (\\<lambda>x. x \\<in> s))\n    \\<in> \\<langle>A\\<rangle>set_rel \\<rightarrow>\n          \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel", "by parametricity"], ["", "lemma ev_param[param]: \"(ev, ev) \\<in> (\\<langle>A\\<rangle> stream_rel \\<rightarrow> bool_rel) \\<rightarrow> (\\<langle>A\\<rangle> stream_rel \\<rightarrow> bool_rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ev, ev)\n    \\<in> (\\<langle>A\\<rangle>stream_rel \\<rightarrow>\n           bool_rel) \\<rightarrow>\n          \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; ev a aa\\<rbrakk>\n       \\<Longrightarrow> ev a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; ev a' a'a\\<rbrakk>\n       \\<Longrightarrow> ev a aa", "fix P Q u v"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; ev a aa\\<rbrakk>\n       \\<Longrightarrow> ev a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; ev a' a'a\\<rbrakk>\n       \\<Longrightarrow> ev a aa", "assume 1: \"(P, Q) \\<in> \\<langle>A\\<rangle> stream_rel \\<rightarrow> bool_rel\" \"(u, v) \\<in> \\<langle>A\\<rangle> stream_rel\""], ["proof (state)\nthis:\n  (P, Q) \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel\n  (u, v) \\<in> \\<langle>A\\<rangle>stream_rel\n\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; ev a aa\\<rbrakk>\n       \\<Longrightarrow> ev a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; ev a' a'a\\<rbrakk>\n       \\<Longrightarrow> ev a aa", "note 2 = 1[param_fo] stream_rel_param(3)[param_fo]"], ["proof (state)\nthis:\n  (?x, ?x') \\<in> \\<langle>A\\<rangle>stream_rel \\<Longrightarrow>\n  (P ?x, Q ?x') \\<in> bool_rel\n  (u, v) \\<in> \\<langle>A\\<rangle>stream_rel\n  (?x, ?x') \\<in> \\<langle>?R1\\<rangle>stream_rel \\<Longrightarrow>\n  (stl ?x, stl ?x') \\<in> \\<langle>?R1\\<rangle>stream_rel\n\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; ev a aa\\<rbrakk>\n       \\<Longrightarrow> ev a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; ev a' a'a\\<rbrakk>\n       \\<Longrightarrow> ev a aa", "show \"ev Q v\" if \"ev P u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ev Q v", "using that 2"], ["proof (prove)\nusing this:\n  ev P u\n  (?x, ?x') \\<in> \\<langle>A\\<rangle>stream_rel \\<Longrightarrow>\n  (P ?x, Q ?x') \\<in> bool_rel\n  (u, v) \\<in> \\<langle>A\\<rangle>stream_rel\n  (?x, ?x') \\<in> \\<langle>?R1\\<rangle>stream_rel \\<Longrightarrow>\n  (stl ?x, stl ?x') \\<in> \\<langle>?R1\\<rangle>stream_rel\n\ngoal (1 subgoal):\n 1. ev Q v", "by (induct arbitrary: v) (blast+)"], ["proof (state)\nthis:\n  ev P u \\<Longrightarrow> ev Q v\n\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; ev a' a'a\\<rbrakk>\n       \\<Longrightarrow> ev a aa", "show \"ev P u\" if \"ev Q v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ev P u", "using that 2"], ["proof (prove)\nusing this:\n  ev Q v\n  (?x, ?x') \\<in> \\<langle>A\\<rangle>stream_rel \\<Longrightarrow>\n  (P ?x, Q ?x') \\<in> bool_rel\n  (u, v) \\<in> \\<langle>A\\<rangle>stream_rel\n  (?x, ?x') \\<in> \\<langle>?R1\\<rangle>stream_rel \\<Longrightarrow>\n  (stl ?x, stl ?x') \\<in> \\<langle>?R1\\<rangle>stream_rel\n\ngoal (1 subgoal):\n 1. ev P u", "by (induct arbitrary: u) (blast+)"], ["proof (state)\nthis:\n  ev Q v \\<Longrightarrow> ev P u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma alw_param[param]: \"(alw, alw) \\<in> (\\<langle>A\\<rangle> stream_rel \\<rightarrow> bool_rel) \\<rightarrow> (\\<langle>A\\<rangle> stream_rel \\<rightarrow> bool_rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (alw, alw)\n    \\<in> (\\<langle>A\\<rangle>stream_rel \\<rightarrow>\n           bool_rel) \\<rightarrow>\n          \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; alw a aa\\<rbrakk>\n       \\<Longrightarrow> alw a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; alw a' a'a\\<rbrakk>\n       \\<Longrightarrow> alw a aa", "fix P Q u v"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; alw a aa\\<rbrakk>\n       \\<Longrightarrow> alw a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; alw a' a'a\\<rbrakk>\n       \\<Longrightarrow> alw a aa", "assume 1: \"(P, Q) \\<in> \\<langle>A\\<rangle> stream_rel \\<rightarrow> bool_rel\" \"(u, v) \\<in> \\<langle>A\\<rangle> stream_rel\""], ["proof (state)\nthis:\n  (P, Q) \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel\n  (u, v) \\<in> \\<langle>A\\<rangle>stream_rel\n\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; alw a aa\\<rbrakk>\n       \\<Longrightarrow> alw a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; alw a' a'a\\<rbrakk>\n       \\<Longrightarrow> alw a aa", "note 2 = 1[param_fo] stream_rel_param(3)[param_fo]"], ["proof (state)\nthis:\n  (?x, ?x') \\<in> \\<langle>A\\<rangle>stream_rel \\<Longrightarrow>\n  (P ?x, Q ?x') \\<in> bool_rel\n  (u, v) \\<in> \\<langle>A\\<rangle>stream_rel\n  (?x, ?x') \\<in> \\<langle>?R1\\<rangle>stream_rel \\<Longrightarrow>\n  (stl ?x, stl ?x') \\<in> \\<langle>?R1\\<rangle>stream_rel\n\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; alw a aa\\<rbrakk>\n       \\<Longrightarrow> alw a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; alw a' a'a\\<rbrakk>\n       \\<Longrightarrow> alw a aa", "show \"alw Q v\" if \"alw P u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alw Q v", "using that 2"], ["proof (prove)\nusing this:\n  alw P u\n  (?x, ?x') \\<in> \\<langle>A\\<rangle>stream_rel \\<Longrightarrow>\n  (P ?x, Q ?x') \\<in> bool_rel\n  (u, v) \\<in> \\<langle>A\\<rangle>stream_rel\n  (?x, ?x') \\<in> \\<langle>?R1\\<rangle>stream_rel \\<Longrightarrow>\n  (stl ?x, stl ?x') \\<in> \\<langle>?R1\\<rangle>stream_rel\n\ngoal (1 subgoal):\n 1. alw Q v", "by (coinduction arbitrary: u v) (auto, blast)"], ["proof (state)\nthis:\n  alw P u \\<Longrightarrow> alw Q v\n\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> \\<langle>A\\<rangle>stream_rel \\<rightarrow> bool_rel;\n        (aa, a'a) \\<in> \\<langle>A\\<rangle>stream_rel; alw a' a'a\\<rbrakk>\n       \\<Longrightarrow> alw a aa", "show \"alw P u\" if \"alw Q v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alw P u", "using that 2"], ["proof (prove)\nusing this:\n  alw Q v\n  (?x, ?x') \\<in> \\<langle>A\\<rangle>stream_rel \\<Longrightarrow>\n  (P ?x, Q ?x') \\<in> bool_rel\n  (u, v) \\<in> \\<langle>A\\<rangle>stream_rel\n  (?x, ?x') \\<in> \\<langle>?R1\\<rangle>stream_rel \\<Longrightarrow>\n  (stl ?x, stl ?x') \\<in> \\<langle>?R1\\<rangle>stream_rel\n\ngoal (1 subgoal):\n 1. alw P u", "by (coinduction arbitrary: u v) (auto, blast)"], ["proof (state)\nthis:\n  alw Q v \\<Longrightarrow> alw P u\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Functional Relations\\<close>"], ["", "lemma br_set_rel: \"\\<langle>br f P\\<rangle> set_rel = br (image f) (\\<lambda> A. Ball A P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>br f P\\<rangle>set_rel = br ((`) f) (\\<lambda>A. Ball A P)", "using br_set_rel_alt"], ["proof (prove)\nusing this:\n  ((?s', ?s) \\<in> \\<langle>br ?\\<alpha> ?I\\<rangle>set_rel) =\n  (?s = ?\\<alpha> ` ?s' \\<and> (\\<forall>x\\<in>?s'. ?I x))\n\ngoal (1 subgoal):\n 1. \\<langle>br f P\\<rangle>set_rel = br ((`) f) (\\<lambda>A. Ball A P)", "by (auto simp: build_rel_def)"], ["", "lemma br_list_rel: \"\\<langle>br f P\\<rangle> list_rel = br (map f) (list_all P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>br f P\\<rangle>list_rel = br (map f) (list_all P)", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> \\<langle>br f P\\<rangle>list_rel \\<Longrightarrow>\n       (a, b) \\<in> br (map f) (list_all P)\n 2. \\<And>a b.\n       (a, b) \\<in> br (map f) (list_all P) \\<Longrightarrow>\n       (a, b) \\<in> \\<langle>br f P\\<rangle>list_rel", "fix u v"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> \\<langle>br f P\\<rangle>list_rel \\<Longrightarrow>\n       (a, b) \\<in> br (map f) (list_all P)\n 2. \\<And>a b.\n       (a, b) \\<in> br (map f) (list_all P) \\<Longrightarrow>\n       (a, b) \\<in> \\<langle>br f P\\<rangle>list_rel", "show \"(u, v) \\<in> br (map f) (list_all P)\" if \"(u, v) \\<in> \\<langle>br f P\\<rangle> list_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u, v) \\<in> br (map f) (list_all P)", "using that"], ["proof (prove)\nusing this:\n  (u, v) \\<in> \\<langle>br f P\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> br (map f) (list_all P)", "unfolding build_rel_def"], ["proof (prove)\nusing this:\n  (u, v) \\<in> \\<langle>{(c, a). a = f c \\<and> P c}\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> {(c, a). a = map f c \\<and> list_all P c}", "by induct auto"], ["proof (state)\nthis:\n  (u, v) \\<in> \\<langle>br f P\\<rangle>list_rel \\<Longrightarrow>\n  (u, v) \\<in> br (map f) (list_all P)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> br (map f) (list_all P) \\<Longrightarrow>\n       (a, b) \\<in> \\<langle>br f P\\<rangle>list_rel", "show \"(u, v) \\<in> \\<langle>br f P\\<rangle> list_rel\" if \"(u, v) \\<in> br (map f) (list_all P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u, v) \\<in> \\<langle>br f P\\<rangle>list_rel", "using that"], ["proof (prove)\nusing this:\n  (u, v) \\<in> br (map f) (list_all P)\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> \\<langle>br f P\\<rangle>list_rel", "unfolding build_rel_def"], ["proof (prove)\nusing this:\n  (u, v) \\<in> {(c, a). a = map f c \\<and> list_all P c}\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> \\<langle>{(c, a). a = f c \\<and> P c}\\<rangle>list_rel", "by (induct u arbitrary: v) (auto)"], ["proof (state)\nthis:\n  (u, v) \\<in> br (map f) (list_all P) \\<Longrightarrow>\n  (u, v) \\<in> \\<langle>br f P\\<rangle>list_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma br_list_set_rel: \"\\<langle>br f P\\<rangle> list_set_rel = br (set \\<circ> map f) (\\<lambda> s. list_all P s \\<and> distinct (map f s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>br f P\\<rangle>list_set_rel =\n    br ((set \\<circ>\\<circ> map) f)\n     (\\<lambda>s. list_all P s \\<and> distinct (map f s))", "unfolding list_set_rel_def br_list_rel"], ["proof (prove)\ngoal (1 subgoal):\n 1. br (map f) (list_all P) O br set distinct =\n    br ((set \\<circ>\\<circ> map) f)\n     (\\<lambda>s. list_all P s \\<and> distinct (map f s))", "unfolding br_chain"], ["proof (prove)\ngoal (1 subgoal):\n 1. br ((set \\<circ>\\<circ> map) f)\n     (\\<lambda>s. list_all P s \\<and> distinct (map f s)) =\n    br ((set \\<circ>\\<circ> map) f)\n     (\\<lambda>s. list_all P s \\<and> distinct (map f s))", "by rule"], ["", "lemma br_fun_rel1: \"Id \\<rightarrow> br f P = br (comp f) (All \\<circ> comp P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Id \\<rightarrow> br f P =\n    br ((\\<circ>) f) ((All \\<circ>\\<circ> (\\<circ>)) P)", "unfolding fun_rel_def Ball_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(fa, f').\n     \\<forall>x.\n        x \\<in> Id \\<longrightarrow>\n        (case x of (a, a') \\<Rightarrow> (fa a, f' a') \\<in> br f P)} =\n    br ((\\<circ>) f) ((All \\<circ>\\<circ> (\\<circ>)) P)", "by (auto simp: build_rel_def)"], ["", "(* notes *)\n\n  (* TODO Peter: the way \\<circ>\\<circ> and \\<circ>\\<circ>\\<circ> are declared, a lot of unexpected abbreviation folding takes place *)"], ["", "term \"set \\<circ> map f \\<circ> map g \\<circ> map h\""], ["", "(* in large expressions, this can introduce unneccessary paretheses and in general, makes\n    things very hard to read *)\n  (* it is even possible for other abbreviations to be torn apart by this *)"], ["", "term \"set \\<circ> sort\""], ["", "(* I think that there were even cases where eta-expanded terms were torn apart, but I\n    do not have an example at the moment *)\n\n  (* the following abbreviations work better, a term can only be abbreviated by comp_n if\n    it contains the constant comp at least n times, thus they should only be folded back if\n    the original term really had the right degree of \"point-free-ness\" *)\n  (*\n  abbreviation comp_2 (infixl \"\\<circ>\\<circ>\" 55) where \"f \\<circ>\\<circ> g \\<equiv> comp (comp f) g\"\n  abbreviation comp_3 (infixl \"\\<circ>\\<circ>\\<circ>\" 55) where \"f \\<circ>\\<circ>\\<circ> g \\<equiv> comp (comp (comp f)) g\"\n  abbreviation comp_4 (infixl \"\\<circ>\\<circ>\\<circ>\\<circ>\" 55) where \"f \\<circ>\\<circ>\\<circ>\\<circ> g \\<equiv> comp (comp (comp (comp f))) g\"\n  abbreviation comp_5 (infixl \"\\<circ>\\<circ>\\<circ>\\<circ>\\<circ>\" 55) where \"f \\<circ>\\<circ>\\<circ>\\<circ>\\<circ> g \\<equiv> comp (comp (comp (comp (comp f)))) g\"\n  *)\n  (* since the root of the right hand side term is not a lambda abstraction, this\n    abbreviation should also not be able to introduce any parentheses *)"], ["", "end"]]}