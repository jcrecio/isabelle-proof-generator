{"file_name": "/home/qj213/afp-2021-10-22/thys/Transition_Systems_and_Automata/Transition_Systems/Transition_System_Refine.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Transition_Systems_and_Automata", "problem_names": ["lemma path_param[param]: \"(transition_system.path, transition_system.path) \\<in>\n    (T \\<rightarrow> S \\<rightarrow> S) \\<rightarrow> (T \\<rightarrow> S \\<rightarrow> bool_rel) \\<rightarrow> \\<langle>T\\<rangle> list_rel \\<rightarrow> S \\<rightarrow> bool_rel\"", "lemma run_param[param]: \"(transition_system.run, transition_system.run) \\<in>\n    (T \\<rightarrow> S \\<rightarrow> S) \\<rightarrow> (T \\<rightarrow> S \\<rightarrow> bool_rel) \\<rightarrow> \\<langle>T\\<rangle> stream_rel \\<rightarrow> S \\<rightarrow> bool_rel\"", "lemma paths_param[param]:\n    assumes [param]: \"(exa, exb) \\<in> T \\<rightarrow> S \\<rightarrow> S\"\n    assumes \"(transition_system.enableds ena, transition_system.enableds enb) \\<in> S \\<rightarrow> \\<langle>T\\<rangle> set_rel\"\n    shows \"(transition_system.paths exa ena, transition_system.paths exb enb) \\<in> S \\<rightarrow> \\<langle>\\<langle>T\\<rangle> list_rel\\<rangle> set_rel\"", "lemma runs_param[param]:\n    assumes \"(exa, exb) \\<in> T \\<rightarrow> S \\<rightarrow> S\"\n    assumes \"(transition_system.enableds ena, transition_system.enableds enb) \\<in> S \\<rightarrow> \\<langle>T\\<rangle> set_rel\"\n    shows \"(transition_system.runs exa ena, transition_system.runs exb enb) \\<in> S \\<rightarrow> \\<langle>\\<langle>T\\<rangle> stream_rel\\<rangle> set_rel\""], "translations": [["", "lemma path_param[param]: \"(transition_system.path, transition_system.path) \\<in>\n    (T \\<rightarrow> S \\<rightarrow> S) \\<rightarrow> (T \\<rightarrow> S \\<rightarrow> bool_rel) \\<rightarrow> \\<langle>T\\<rangle> list_rel \\<rightarrow> S \\<rightarrow> bool_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (transition_system.path, transition_system.path)\n    \\<in> (T \\<rightarrow> S \\<rightarrow> S) \\<rightarrow>\n          (T \\<rightarrow> S \\<rightarrow> bool_rel) \\<rightarrow>\n          \\<langle>T\\<rangle>list_rel \\<rightarrow> S \\<rightarrow> bool_rel", "proof (rule, rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> T \\<rightarrow> S \\<rightarrow> S;\n        (aa, a'a) \\<in> T \\<rightarrow> S \\<rightarrow> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (transition_system.path a aa,\n                          transition_system.path a' a'a)\n                         \\<in> \\<langle>T\\<rangle>list_rel \\<rightarrow>\n                               S \\<rightarrow> bool_rel", "fix exa exb ena enb"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> T \\<rightarrow> S \\<rightarrow> S;\n        (aa, a'a) \\<in> T \\<rightarrow> S \\<rightarrow> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (transition_system.path a aa,\n                          transition_system.path a' a'a)\n                         \\<in> \\<langle>T\\<rangle>list_rel \\<rightarrow>\n                               S \\<rightarrow> bool_rel", "assume [param]: \"(exa, exb) \\<in> T \\<rightarrow> S \\<rightarrow> S\" \"(ena, enb) \\<in> T \\<rightarrow> S \\<rightarrow> bool_rel\""], ["proof (state)\nthis:\n  (exa, exb) \\<in> T \\<rightarrow> S \\<rightarrow> S\n  (ena, enb) \\<in> T \\<rightarrow> S \\<rightarrow> bool_rel\n\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> T \\<rightarrow> S \\<rightarrow> S;\n        (aa, a'a) \\<in> T \\<rightarrow> S \\<rightarrow> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (transition_system.path a aa,\n                          transition_system.path a' a'a)\n                         \\<in> \\<langle>T\\<rangle>list_rel \\<rightarrow>\n                               S \\<rightarrow> bool_rel", "interpret A: transition_system exa ena"], ["proof (prove)\ngoal:\nNo subgoals!", "by this"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> T \\<rightarrow> S \\<rightarrow> S;\n        (aa, a'a) \\<in> T \\<rightarrow> S \\<rightarrow> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (transition_system.path a aa,\n                          transition_system.path a' a'a)\n                         \\<in> \\<langle>T\\<rangle>list_rel \\<rightarrow>\n                               S \\<rightarrow> bool_rel", "interpret B: transition_system exb enb"], ["proof (prove)\ngoal:\nNo subgoals!", "by this"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> T \\<rightarrow> S \\<rightarrow> S;\n        (aa, a'a) \\<in> T \\<rightarrow> S \\<rightarrow> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (transition_system.path a aa,\n                          transition_system.path a' a'a)\n                         \\<in> \\<langle>T\\<rangle>list_rel \\<rightarrow>\n                               S \\<rightarrow> bool_rel", "have [param]: \"(A.path [] p, B.path [] q) \\<in> bool_rel\" for p q"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A.path [] p, B.path [] q) \\<in> bool_rel", "by auto"], ["proof (state)\nthis:\n  (A.path [] ?p, B.path [] ?q) \\<in> bool_rel\n\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> T \\<rightarrow> S \\<rightarrow> S;\n        (aa, a'a) \\<in> T \\<rightarrow> S \\<rightarrow> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (transition_system.path a aa,\n                          transition_system.path a' a'a)\n                         \\<in> \\<langle>T\\<rangle>list_rel \\<rightarrow>\n                               S \\<rightarrow> bool_rel", "have [param]: \"(A.path (a # r) p, B.path (b # s) q) \\<in> bool_rel\"\n      if \"(ena a p, enb b q) \\<in> bool_rel\" \"(A.path r (exa a p), B.path s (exb b q)) \\<in> bool_rel\"\n      for a r p b s q"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A.path (a # r) p, B.path (b # s) q) \\<in> bool_rel", "using that"], ["proof (prove)\nusing this:\n  (ena a p, enb b q) \\<in> bool_rel\n  (A.path r (exa a p), B.path s (exb b q)) \\<in> bool_rel\n\ngoal (1 subgoal):\n 1. (A.path (a # r) p, B.path (b # s) q) \\<in> bool_rel", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>(ena ?a ?p, enb ?b ?q) \\<in> bool_rel;\n   (A.path ?r (exa ?a ?p), B.path ?s (exb ?b ?q)) \\<in> bool_rel\\<rbrakk>\n  \\<Longrightarrow> (A.path (?a # ?r) ?p, B.path (?b # ?s) ?q)\n                    \\<in> bool_rel\n\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> T \\<rightarrow> S \\<rightarrow> S;\n        (aa, a'a) \\<in> T \\<rightarrow> S \\<rightarrow> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (transition_system.path a aa,\n                          transition_system.path a' a'a)\n                         \\<in> \\<langle>T\\<rangle>list_rel \\<rightarrow>\n                               S \\<rightarrow> bool_rel", "show \"(A.path, B.path) \\<in> \\<langle>T\\<rangle> list_rel \\<rightarrow> S \\<rightarrow> bool_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A.path, B.path)\n    \\<in> \\<langle>T\\<rangle>list_rel \\<rightarrow> S \\<rightarrow> bool_rel", "proof (intro fun_relI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> \\<langle>T\\<rangle>list_rel;\n        (aa, a'a) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> (A.path a aa, B.path a' a'a) \\<in> bool_rel", "show \"(A.path r p, B.path s q) \\<in> bool_rel\" if \"(r, s) \\<in> \\<langle>T\\<rangle> list_rel\" \"(p, q) \\<in> S\" for r s p q"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A.path r p, B.path s q) \\<in> bool_rel", "using that"], ["proof (prove)\nusing this:\n  (r, s) \\<in> \\<langle>T\\<rangle>list_rel\n  (p, q) \\<in> S\n\ngoal (1 subgoal):\n 1. (A.path r p, B.path s q) \\<in> bool_rel", "by (induct arbitrary: p q) (parametricity+)"], ["proof (state)\nthis:\n  \\<lbrakk>(?r, ?s) \\<in> \\<langle>T\\<rangle>list_rel;\n   (?p, ?q) \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (A.path ?r ?p, B.path ?s ?q) \\<in> bool_rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (A.path, B.path)\n  \\<in> \\<langle>T\\<rangle>list_rel \\<rightarrow> S \\<rightarrow> bool_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma run_param[param]: \"(transition_system.run, transition_system.run) \\<in>\n    (T \\<rightarrow> S \\<rightarrow> S) \\<rightarrow> (T \\<rightarrow> S \\<rightarrow> bool_rel) \\<rightarrow> \\<langle>T\\<rangle> stream_rel \\<rightarrow> S \\<rightarrow> bool_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (transition_system.run, transition_system.run)\n    \\<in> (T \\<rightarrow> S \\<rightarrow> S) \\<rightarrow>\n          (T \\<rightarrow> S \\<rightarrow> bool_rel) \\<rightarrow>\n          \\<langle>T\\<rangle>stream_rel \\<rightarrow>\n          S \\<rightarrow> bool_rel", "proof (rule, rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> T \\<rightarrow> S \\<rightarrow> S;\n        (aa, a'a) \\<in> T \\<rightarrow> S \\<rightarrow> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (transition_system.run a aa,\n                          transition_system.run a' a'a)\n                         \\<in> \\<langle>T\\<rangle>stream_rel \\<rightarrow>\n                               S \\<rightarrow> bool_rel", "fix exa exb ena enb"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> T \\<rightarrow> S \\<rightarrow> S;\n        (aa, a'a) \\<in> T \\<rightarrow> S \\<rightarrow> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (transition_system.run a aa,\n                          transition_system.run a' a'a)\n                         \\<in> \\<langle>T\\<rangle>stream_rel \\<rightarrow>\n                               S \\<rightarrow> bool_rel", "assume 1: \"(exa, exb) \\<in> T \\<rightarrow> S \\<rightarrow> S\" \"(ena, enb) \\<in> T \\<rightarrow> S \\<rightarrow> bool_rel\""], ["proof (state)\nthis:\n  (exa, exb) \\<in> T \\<rightarrow> S \\<rightarrow> S\n  (ena, enb) \\<in> T \\<rightarrow> S \\<rightarrow> bool_rel\n\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> T \\<rightarrow> S \\<rightarrow> S;\n        (aa, a'a) \\<in> T \\<rightarrow> S \\<rightarrow> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (transition_system.run a aa,\n                          transition_system.run a' a'a)\n                         \\<in> \\<langle>T\\<rangle>stream_rel \\<rightarrow>\n                               S \\<rightarrow> bool_rel", "interpret A: transition_system exa ena"], ["proof (prove)\ngoal:\nNo subgoals!", "by this"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> T \\<rightarrow> S \\<rightarrow> S;\n        (aa, a'a) \\<in> T \\<rightarrow> S \\<rightarrow> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (transition_system.run a aa,\n                          transition_system.run a' a'a)\n                         \\<in> \\<langle>T\\<rangle>stream_rel \\<rightarrow>\n                               S \\<rightarrow> bool_rel", "interpret B: transition_system exb enb"], ["proof (prove)\ngoal:\nNo subgoals!", "by this"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> T \\<rightarrow> S \\<rightarrow> S;\n        (aa, a'a) \\<in> T \\<rightarrow> S \\<rightarrow> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (transition_system.run a aa,\n                          transition_system.run a' a'a)\n                         \\<in> \\<langle>T\\<rangle>stream_rel \\<rightarrow>\n                               S \\<rightarrow> bool_rel", "show \"(A.run, B.run) \\<in> \\<langle>T\\<rangle> stream_rel \\<rightarrow> S \\<rightarrow> bool_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A.run, B.run)\n    \\<in> \\<langle>T\\<rangle>stream_rel \\<rightarrow>\n          S \\<rightarrow> bool_rel", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> \\<langle>T\\<rangle>stream_rel;\n        (aa, a'a) \\<in> S; A.run a aa\\<rbrakk>\n       \\<Longrightarrow> B.run a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> \\<langle>T\\<rangle>stream_rel;\n        (aa, a'a) \\<in> S; B.run a' a'a\\<rbrakk>\n       \\<Longrightarrow> A.run a aa", "show \"B.run s q\" if \"(r, s) \\<in> \\<langle>T\\<rangle> stream_rel\" \"(p, q) \\<in> S\" \"A.run r p\" for r s p q"], ["proof (prove)\ngoal (1 subgoal):\n 1. B.run s q", "using 1[param_fo] that"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x1, ?x'1) \\<in> T; (?x, ?x') \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (exa ?x1 ?x, exb ?x'1 ?x') \\<in> S\n  \\<lbrakk>(?x1, ?x'1) \\<in> T; (?x, ?x') \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (ena ?x1 ?x, enb ?x'1 ?x') \\<in> bool_rel\n  (r, s) \\<in> \\<langle>T\\<rangle>stream_rel\n  (p, q) \\<in> S\n  A.run r p\n\ngoal (1 subgoal):\n 1. B.run s q", "by (coinduction arbitrary: r s p q) (blast elim: stream_rel_cases)"], ["proof (state)\nthis:\n  \\<lbrakk>(?r, ?s) \\<in> \\<langle>T\\<rangle>stream_rel; (?p, ?q) \\<in> S;\n   A.run ?r ?p\\<rbrakk>\n  \\<Longrightarrow> B.run ?s ?q\n\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> \\<langle>T\\<rangle>stream_rel;\n        (aa, a'a) \\<in> S; B.run a' a'a\\<rbrakk>\n       \\<Longrightarrow> A.run a aa", "show \"A.run r p\" if \"(r, s) \\<in> \\<langle>T\\<rangle> stream_rel\" \"(p, q) \\<in> S\" \"B.run s q\" for r s p q"], ["proof (prove)\ngoal (1 subgoal):\n 1. A.run r p", "using 1[param_fo] that"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x1, ?x'1) \\<in> T; (?x, ?x') \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (exa ?x1 ?x, exb ?x'1 ?x') \\<in> S\n  \\<lbrakk>(?x1, ?x'1) \\<in> T; (?x, ?x') \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (ena ?x1 ?x, enb ?x'1 ?x') \\<in> bool_rel\n  (r, s) \\<in> \\<langle>T\\<rangle>stream_rel\n  (p, q) \\<in> S\n  B.run s q\n\ngoal (1 subgoal):\n 1. A.run r p", "by (coinduction arbitrary: r s p q) (blast elim: stream_rel_cases)"], ["proof (state)\nthis:\n  \\<lbrakk>(?r, ?s) \\<in> \\<langle>T\\<rangle>stream_rel; (?p, ?q) \\<in> S;\n   B.run ?s ?q\\<rbrakk>\n  \\<Longrightarrow> A.run ?r ?p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (A.run, B.run)\n  \\<in> \\<langle>T\\<rangle>stream_rel \\<rightarrow> S \\<rightarrow> bool_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma paths_param[param]:\n    assumes [param]: \"(exa, exb) \\<in> T \\<rightarrow> S \\<rightarrow> S\"\n    assumes \"(transition_system.enableds ena, transition_system.enableds enb) \\<in> S \\<rightarrow> \\<langle>T\\<rangle> set_rel\"\n    shows \"(transition_system.paths exa ena, transition_system.paths exb enb) \\<in> S \\<rightarrow> \\<langle>\\<langle>T\\<rangle> list_rel\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (transition_system.paths exa ena, transition_system.paths exb enb)\n    \\<in> S \\<rightarrow>\n          \\<langle>\\<langle>T\\<rangle>list_rel\\<rangle>set_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (transition_system.paths exa ena, transition_system.paths exb enb)\n    \\<in> S \\<rightarrow>\n          \\<langle>\\<langle>T\\<rangle>list_rel\\<rangle>set_rel", "note assms = assms[param_fo, unfolded transition_system.enableds_def]"], ["proof (state)\nthis:\n  \\<lbrakk>(?x1, ?x'1) \\<in> T; (?x, ?x') \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (exa ?x1 ?x, exb ?x'1 ?x') \\<in> S\n  (?x, ?x') \\<in> S \\<Longrightarrow>\n  ({a. ena a ?x}, {a. enb a ?x'}) \\<in> \\<langle>T\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (transition_system.paths exa ena, transition_system.paths exb enb)\n    \\<in> S \\<rightarrow>\n          \\<langle>\\<langle>T\\<rangle>list_rel\\<rangle>set_rel", "interpret A: transition_system exa ena"], ["proof (prove)\ngoal:\nNo subgoals!", "by this"], ["proof (state)\ngoal (1 subgoal):\n 1. (A.paths, transition_system.paths exb enb)\n    \\<in> S \\<rightarrow>\n          \\<langle>\\<langle>T\\<rangle>list_rel\\<rangle>set_rel", "interpret B: transition_system exb enb"], ["proof (prove)\ngoal:\nNo subgoals!", "by this"], ["proof (state)\ngoal (1 subgoal):\n 1. (A.paths, B.paths)\n    \\<in> S \\<rightarrow>\n          \\<langle>\\<langle>T\\<rangle>list_rel\\<rangle>set_rel", "have 1: \"\\<exists> s. (r, s) \\<in> \\<langle>T\\<rangle> list_rel \\<and> B.path s q\" if \"(p, q) \\<in> S\" \"A.path r p\" for p q r"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s. (r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s q", "using that(2, 1)"], ["proof (prove)\nusing this:\n  A.path r p\n  (p, q) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>s. (r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s q", "proof (induct arbitrary: q)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p q.\n       (p, q) \\<in> S \\<Longrightarrow>\n       \\<exists>s.\n          ([], s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s q\n 2. \\<And>a p r q.\n       \\<lbrakk>ena a p; A.path r (exa a p);\n        \\<And>q.\n           (exa a p, q) \\<in> S \\<Longrightarrow>\n           \\<exists>s.\n              (r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s q;\n        (p, q) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s.\n                            (a # r, s)\n                            \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                            B.path s q", "case (nil p)"], ["proof (state)\nthis:\n  (p, q) \\<in> S\n\ngoal (2 subgoals):\n 1. \\<And>p q.\n       (p, q) \\<in> S \\<Longrightarrow>\n       \\<exists>s.\n          ([], s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s q\n 2. \\<And>a p r q.\n       \\<lbrakk>ena a p; A.path r (exa a p);\n        \\<And>q.\n           (exa a p, q) \\<in> S \\<Longrightarrow>\n           \\<exists>s.\n              (r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s q;\n        (p, q) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s.\n                            (a # r, s)\n                            \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                            B.path s q", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s. ([], s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s q", "by auto"], ["proof (state)\nthis:\n  \\<exists>s. ([], s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s q\n\ngoal (1 subgoal):\n 1. \\<And>a p r q.\n       \\<lbrakk>ena a p; A.path r (exa a p);\n        \\<And>q.\n           (exa a p, q) \\<in> S \\<Longrightarrow>\n           \\<exists>s.\n              (r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s q;\n        (p, q) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s.\n                            (a # r, s)\n                            \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                            B.path s q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a p r q.\n       \\<lbrakk>ena a p; A.path r (exa a p);\n        \\<And>q.\n           (exa a p, q) \\<in> S \\<Longrightarrow>\n           \\<exists>s.\n              (r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s q;\n        (p, q) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s.\n                            (a # r, s)\n                            \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                            B.path s q", "case (cons a p r)"], ["proof (state)\nthis:\n  ena a p\n  A.path r (exa a p)\n  (exa a p, ?q) \\<in> S \\<Longrightarrow>\n  \\<exists>s. (r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s ?q\n  (p, q) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>a p r q.\n       \\<lbrakk>ena a p; A.path r (exa a p);\n        \\<And>q.\n           (exa a p, q) \\<in> S \\<Longrightarrow>\n           \\<exists>s.\n              (r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s q;\n        (p, q) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s.\n                            (a # r, s)\n                            \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                            B.path s q", "obtain b where 1: \"(a, b) \\<in> T\" \"enb b q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>(a, b) \\<in> T; enb b q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(2) cons(1, 4)"], ["proof (prove)\nusing this:\n  (?x, ?x') \\<in> S \\<Longrightarrow>\n  ({a. ena a ?x}, {a. enb a ?x'}) \\<in> \\<langle>T\\<rangle>set_rel\n  ena a p\n  (p, q) \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>(a, b) \\<in> T; enb b q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast elim: set_relE1)"], ["proof (state)\nthis:\n  (a, b) \\<in> T\n  enb b q\n\ngoal (1 subgoal):\n 1. \\<And>a p r q.\n       \\<lbrakk>ena a p; A.path r (exa a p);\n        \\<And>q.\n           (exa a p, q) \\<in> S \\<Longrightarrow>\n           \\<exists>s.\n              (r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s q;\n        (p, q) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s.\n                            (a # r, s)\n                            \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                            B.path s q", "have 2: \"(exa a p, exb b q) \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (exa a p, exb b q) \\<in> S", "using cons(4) 1(1)"], ["proof (prove)\nusing this:\n  (p, q) \\<in> S\n  (a, b) \\<in> T\n\ngoal (1 subgoal):\n 1. (exa a p, exb b q) \\<in> S", "by parametricity"], ["proof (state)\nthis:\n  (exa a p, exb b q) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>a p r q.\n       \\<lbrakk>ena a p; A.path r (exa a p);\n        \\<And>q.\n           (exa a p, q) \\<in> S \\<Longrightarrow>\n           \\<exists>s.\n              (r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s q;\n        (p, q) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s.\n                            (a # r, s)\n                            \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                            B.path s q", "obtain s where 3: \"(r, s) \\<in> \\<langle>T\\<rangle> list_rel\" \"B.path s (exb b q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(r, s) \\<in> \\<langle>T\\<rangle>list_rel;\n         B.path s (exb b q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using cons(3) 2"], ["proof (prove)\nusing this:\n  (exa a p, ?q) \\<in> S \\<Longrightarrow>\n  \\<exists>s. (r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s ?q\n  (exa a p, exb b q) \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(r, s) \\<in> \\<langle>T\\<rangle>list_rel;\n         B.path s (exb b q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (r, s) \\<in> \\<langle>T\\<rangle>list_rel\n  B.path s (exb b q)\n\ngoal (1 subgoal):\n 1. \\<And>a p r q.\n       \\<lbrakk>ena a p; A.path r (exa a p);\n        \\<And>q.\n           (exa a p, q) \\<in> S \\<Longrightarrow>\n           \\<exists>s.\n              (r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s q;\n        (p, q) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s.\n                            (a # r, s)\n                            \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                            B.path s q", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s.\n       (a # r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s q", "using 1 3"], ["proof (prove)\nusing this:\n  (a, b) \\<in> T\n  enb b q\n  (r, s) \\<in> \\<langle>T\\<rangle>list_rel\n  B.path s (exb b q)\n\ngoal (1 subgoal):\n 1. \\<exists>s.\n       (a # r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s q", "by force"], ["proof (state)\nthis:\n  \\<exists>s. (a # r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> B.path s q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>(?p, ?q) \\<in> S; A.path ?r ?p\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s.\n                       (?r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                       B.path s ?q\n\ngoal (1 subgoal):\n 1. (A.paths, B.paths)\n    \\<in> S \\<rightarrow>\n          \\<langle>\\<langle>T\\<rangle>list_rel\\<rangle>set_rel", "have 2: \"\\<exists> r. (r, s) \\<in> \\<langle>T\\<rangle> list_rel \\<and> A.path r p\" if \"(p, q) \\<in> S\" \"B.path s q\" for p q s"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r. (r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path r p", "using that(2, 1)"], ["proof (prove)\nusing this:\n  B.path s q\n  (p, q) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>r. (r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path r p", "proof (induct arbitrary: p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p pa.\n       (pa, p) \\<in> S \\<Longrightarrow>\n       \\<exists>r.\n          (r, []) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path r pa\n 2. \\<And>a p r pa.\n       \\<lbrakk>enb a p; B.path r (exb a p);\n        \\<And>pa.\n           (pa, exb a p) \\<in> S \\<Longrightarrow>\n           \\<exists>ra.\n              (ra, r) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path ra pa;\n        (pa, p) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ra.\n                            (ra, a # r)\n                            \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                            A.path ra pa", "case (nil q)"], ["proof (state)\nthis:\n  (p, q) \\<in> S\n\ngoal (2 subgoals):\n 1. \\<And>p pa.\n       (pa, p) \\<in> S \\<Longrightarrow>\n       \\<exists>r.\n          (r, []) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path r pa\n 2. \\<And>a p r pa.\n       \\<lbrakk>enb a p; B.path r (exb a p);\n        \\<And>pa.\n           (pa, exb a p) \\<in> S \\<Longrightarrow>\n           \\<exists>ra.\n              (ra, r) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path ra pa;\n        (pa, p) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ra.\n                            (ra, a # r)\n                            \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                            A.path ra pa", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r. (r, []) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path r p", "by auto"], ["proof (state)\nthis:\n  \\<exists>r. (r, []) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path r p\n\ngoal (1 subgoal):\n 1. \\<And>a p r pa.\n       \\<lbrakk>enb a p; B.path r (exb a p);\n        \\<And>pa.\n           (pa, exb a p) \\<in> S \\<Longrightarrow>\n           \\<exists>ra.\n              (ra, r) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path ra pa;\n        (pa, p) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ra.\n                            (ra, a # r)\n                            \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                            A.path ra pa", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a p r pa.\n       \\<lbrakk>enb a p; B.path r (exb a p);\n        \\<And>pa.\n           (pa, exb a p) \\<in> S \\<Longrightarrow>\n           \\<exists>ra.\n              (ra, r) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path ra pa;\n        (pa, p) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ra.\n                            (ra, a # r)\n                            \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                            A.path ra pa", "case (cons b q s)"], ["proof (state)\nthis:\n  enb b q\n  B.path s (exb b q)\n  (?p, exb b q) \\<in> S \\<Longrightarrow>\n  \\<exists>r. (r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path r ?p\n  (p, q) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>a p r pa.\n       \\<lbrakk>enb a p; B.path r (exb a p);\n        \\<And>pa.\n           (pa, exb a p) \\<in> S \\<Longrightarrow>\n           \\<exists>ra.\n              (ra, r) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path ra pa;\n        (pa, p) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ra.\n                            (ra, a # r)\n                            \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                            A.path ra pa", "obtain a where 1: \"(a, b) \\<in> T\" \"ena a p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>(a, b) \\<in> T; ena a p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(2) cons(1, 4)"], ["proof (prove)\nusing this:\n  (?x, ?x') \\<in> S \\<Longrightarrow>\n  ({a. ena a ?x}, {a. enb a ?x'}) \\<in> \\<langle>T\\<rangle>set_rel\n  enb b q\n  (p, q) \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>(a, b) \\<in> T; ena a p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast elim: set_relE2)"], ["proof (state)\nthis:\n  (a, b) \\<in> T\n  ena a p\n\ngoal (1 subgoal):\n 1. \\<And>a p r pa.\n       \\<lbrakk>enb a p; B.path r (exb a p);\n        \\<And>pa.\n           (pa, exb a p) \\<in> S \\<Longrightarrow>\n           \\<exists>ra.\n              (ra, r) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path ra pa;\n        (pa, p) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ra.\n                            (ra, a # r)\n                            \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                            A.path ra pa", "have 2: \"(exa a p, exb b q) \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (exa a p, exb b q) \\<in> S", "using cons(4) 1(1)"], ["proof (prove)\nusing this:\n  (p, q) \\<in> S\n  (a, b) \\<in> T\n\ngoal (1 subgoal):\n 1. (exa a p, exb b q) \\<in> S", "by parametricity"], ["proof (state)\nthis:\n  (exa a p, exb b q) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>a p r pa.\n       \\<lbrakk>enb a p; B.path r (exb a p);\n        \\<And>pa.\n           (pa, exb a p) \\<in> S \\<Longrightarrow>\n           \\<exists>ra.\n              (ra, r) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path ra pa;\n        (pa, p) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ra.\n                            (ra, a # r)\n                            \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                            A.path ra pa", "obtain r where 3: \"(r, s) \\<in> \\<langle>T\\<rangle> list_rel\" \"A.path r (exa a p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>(r, s) \\<in> \\<langle>T\\<rangle>list_rel;\n         A.path r (exa a p)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using cons(3) 2"], ["proof (prove)\nusing this:\n  (?p, exb b q) \\<in> S \\<Longrightarrow>\n  \\<exists>r. (r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path r ?p\n  (exa a p, exb b q) \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>(r, s) \\<in> \\<langle>T\\<rangle>list_rel;\n         A.path r (exa a p)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (r, s) \\<in> \\<langle>T\\<rangle>list_rel\n  A.path r (exa a p)\n\ngoal (1 subgoal):\n 1. \\<And>a p r pa.\n       \\<lbrakk>enb a p; B.path r (exb a p);\n        \\<And>pa.\n           (pa, exb a p) \\<in> S \\<Longrightarrow>\n           \\<exists>ra.\n              (ra, r) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path ra pa;\n        (pa, p) \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ra.\n                            (ra, a # r)\n                            \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                            A.path ra pa", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r.\n       (r, b # s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path r p", "using 1 3"], ["proof (prove)\nusing this:\n  (a, b) \\<in> T\n  ena a p\n  (r, s) \\<in> \\<langle>T\\<rangle>list_rel\n  A.path r (exa a p)\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       (r, b # s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path r p", "by force"], ["proof (state)\nthis:\n  \\<exists>r. (r, b # s) \\<in> \\<langle>T\\<rangle>list_rel \\<and> A.path r p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>(?p, ?q) \\<in> S; B.path ?s ?q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       (r, ?s) \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                       A.path r ?p\n\ngoal (1 subgoal):\n 1. (A.paths, B.paths)\n    \\<in> S \\<rightarrow>\n          \\<langle>\\<langle>T\\<rangle>list_rel\\<rangle>set_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A.paths, B.paths)\n    \\<in> S \\<rightarrow>\n          \\<langle>\\<langle>T\\<rangle>list_rel\\<rangle>set_rel", "unfolding transition_system.paths_def set_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>p. {r. A.path r p}, \\<lambda>p. {r. B.path r p})\n    \\<in> S \\<rightarrow>\n          {(A, B).\n           (\\<forall>x\\<in>A.\n               \\<exists>y\\<in>B.\n                  (x, y) \\<in> \\<langle>T\\<rangle>list_rel) \\<and>\n           (\\<forall>y\\<in>B.\n               \\<exists>x\\<in>A. (x, y) \\<in> \\<langle>T\\<rangle>list_rel)}", "using 1 2"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?p, ?q) \\<in> S; A.path ?r ?p\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s.\n                       (?r, s) \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                       B.path s ?q\n  \\<lbrakk>(?p, ?q) \\<in> S; B.path ?s ?q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       (r, ?s) \\<in> \\<langle>T\\<rangle>list_rel \\<and>\n                       A.path r ?p\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. {r. A.path r p}, \\<lambda>p. {r. B.path r p})\n    \\<in> S \\<rightarrow>\n          {(A, B).\n           (\\<forall>x\\<in>A.\n               \\<exists>y\\<in>B.\n                  (x, y) \\<in> \\<langle>T\\<rangle>list_rel) \\<and>\n           (\\<forall>y\\<in>B.\n               \\<exists>x\\<in>A. (x, y) \\<in> \\<langle>T\\<rangle>list_rel)}", "by blast"], ["proof (state)\nthis:\n  (A.paths, B.paths)\n  \\<in> S \\<rightarrow> \\<langle>\\<langle>T\\<rangle>list_rel\\<rangle>set_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma runs_param[param]:\n    assumes \"(exa, exb) \\<in> T \\<rightarrow> S \\<rightarrow> S\"\n    assumes \"(transition_system.enableds ena, transition_system.enableds enb) \\<in> S \\<rightarrow> \\<langle>T\\<rangle> set_rel\"\n    shows \"(transition_system.runs exa ena, transition_system.runs exb enb) \\<in> S \\<rightarrow> \\<langle>\\<langle>T\\<rangle> stream_rel\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (transition_system.runs exa ena, transition_system.runs exb enb)\n    \\<in> S \\<rightarrow>\n          \\<langle>\\<langle>T\\<rangle>stream_rel\\<rangle>set_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (transition_system.runs exa ena, transition_system.runs exb enb)\n    \\<in> S \\<rightarrow>\n          \\<langle>\\<langle>T\\<rangle>stream_rel\\<rangle>set_rel", "note assms = assms[param_fo, unfolded transition_system.enableds_def]"], ["proof (state)\nthis:\n  \\<lbrakk>(?x1, ?x'1) \\<in> T; (?x, ?x') \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (exa ?x1 ?x, exb ?x'1 ?x') \\<in> S\n  (?x, ?x') \\<in> S \\<Longrightarrow>\n  ({a. ena a ?x}, {a. enb a ?x'}) \\<in> \\<langle>T\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (transition_system.runs exa ena, transition_system.runs exb enb)\n    \\<in> S \\<rightarrow>\n          \\<langle>\\<langle>T\\<rangle>stream_rel\\<rangle>set_rel", "interpret A: transition_system exa ena"], ["proof (prove)\ngoal:\nNo subgoals!", "by this"], ["proof (state)\ngoal (1 subgoal):\n 1. (A.runs, transition_system.runs exb enb)\n    \\<in> S \\<rightarrow>\n          \\<langle>\\<langle>T\\<rangle>stream_rel\\<rangle>set_rel", "interpret B: transition_system exb enb"], ["proof (prove)\ngoal:\nNo subgoals!", "by this"], ["proof (state)\ngoal (1 subgoal):\n 1. (A.runs, B.runs)\n    \\<in> S \\<rightarrow>\n          \\<langle>\\<langle>T\\<rangle>stream_rel\\<rangle>set_rel", "have 1: \"\\<exists> s. (r, s) \\<in> \\<langle>T\\<rangle> stream_rel \\<and> B.run s q\" if \"(p, q) \\<in> S\" \"A.run r p\" for p q r"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> B.run s q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>s. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> B.run s q", "define P where \"P \\<equiv> \\<lambda> (p, q, r). (p, q) \\<in> S \\<and> A.run r p\""], ["proof (state)\nthis:\n  P \\<equiv> \\<lambda>(p, q, r). (p, q) \\<in> S \\<and> A.run r p\n\ngoal (1 subgoal):\n 1. \\<exists>s. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> B.run s q", "define Q where \"Q \\<equiv> \\<lambda> (p :: 'b, q, r) a. (shd r, a) \\<in> T \\<and> enb a q\""], ["proof (state)\nthis:\n  Q \\<equiv> \\<lambda>(p, q, r) a. (shd r, a) \\<in> T \\<and> enb a q\n\ngoal (1 subgoal):\n 1. \\<exists>s. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> B.run s q", "have 1: \"P (p, q, r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (p, q, r)", "using that"], ["proof (prove)\nusing this:\n  (p, q) \\<in> S\n  A.run r p\n\ngoal (1 subgoal):\n 1. P (p, q, r)", "unfolding P_def"], ["proof (prove)\nusing this:\n  (p, q) \\<in> S\n  A.run r p\n\ngoal (1 subgoal):\n 1. case (p, q, r) of\n    (p, q, r) \\<Rightarrow> (p, q) \\<in> S \\<and> A.run r p", "by auto"], ["proof (state)\nthis:\n  P (p, q, r)\n\ngoal (1 subgoal):\n 1. \\<exists>s. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> B.run s q", "have \"\\<exists> a. Q x a\" if \"P x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. Q x a", "using assms(2) that"], ["proof (prove)\nusing this:\n  (?x, ?x') \\<in> S \\<Longrightarrow>\n  ({a. ena a ?x}, {a. enb a ?x'}) \\<in> \\<langle>T\\<rangle>set_rel\n  P x\n\ngoal (1 subgoal):\n 1. \\<exists>a. Q x a", "unfolding P_def Q_def"], ["proof (prove)\nusing this:\n  (?x, ?x') \\<in> S \\<Longrightarrow>\n  ({a. ena a ?x}, {a. enb a ?x'}) \\<in> \\<langle>T\\<rangle>set_rel\n  case x of (p, q, r) \\<Rightarrow> (p, q) \\<in> S \\<and> A.run r p\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       (case x of\n        (p, q, r) \\<Rightarrow>\n          \\<lambda>a. (shd r, a) \\<in> T \\<and> enb a q)\n        a", "by (force elim: set_relE1 A.run.cases)"], ["proof (state)\nthis:\n  P ?x \\<Longrightarrow> \\<exists>a. Q ?x a\n\ngoal (1 subgoal):\n 1. \\<exists>s. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> B.run s q", "then"], ["proof (chain)\npicking this:\n  P ?x \\<Longrightarrow> \\<exists>a. Q ?x a", "obtain f where 2: \"\\<And> x. P x \\<Longrightarrow> Q x (f x)\""], ["proof (prove)\nusing this:\n  P ?x \\<Longrightarrow> \\<exists>a. Q ?x a\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<And>x. P x \\<Longrightarrow> Q x (f x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  P ?x \\<Longrightarrow> Q ?x (f ?x)\n\ngoal (1 subgoal):\n 1. \\<exists>s. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> B.run s q", "define g where \"g \\<equiv> \\<lambda> (p, q, r). (exa (shd r) p, exb (f (p, q, r)) q, stl r)\""], ["proof (state)\nthis:\n  g \\<equiv> \\<lambda>(p, q, r). (exa (shd r) p, exb (f (p, q, r)) q, stl r)\n\ngoal (1 subgoal):\n 1. \\<exists>s. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> B.run s q", "have 3: \"P (g x)\" if \"P x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (g x)", "using assms(1) 2 that"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x1, ?x'1) \\<in> T; (?x, ?x') \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (exa ?x1 ?x, exb ?x'1 ?x') \\<in> S\n  P ?x \\<Longrightarrow> Q ?x (f ?x)\n  P x\n\ngoal (1 subgoal):\n 1. P (g x)", "unfolding P_def Q_def g_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x1, ?x'1) \\<in> T; (?x, ?x') \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (exa ?x1 ?x, exb ?x'1 ?x') \\<in> S\n  case ?x of\n  (p, q, r) \\<Rightarrow> (p, q) \\<in> S \\<and> A.run r p \\<Longrightarrow>\n  (case ?x of\n   (p, q, r) \\<Rightarrow> \\<lambda>a. (shd r, a) \\<in> T \\<and> enb a q)\n   (f ?x)\n  case x of (p, q, r) \\<Rightarrow> (p, q) \\<in> S \\<and> A.run r p\n\ngoal (1 subgoal):\n 1. case case x of\n         (p, q, r) \\<Rightarrow>\n           (exa (shd r) p, exb (f (p, q, r)) q, stl r) of\n    (p, q, r) \\<Rightarrow> (p, q) \\<in> S \\<and> A.run r p", "by (auto elim: A.run.cases)"], ["proof (state)\nthis:\n  P ?x \\<Longrightarrow> P (g ?x)\n\ngoal (1 subgoal):\n 1. \\<exists>s. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> B.run s q", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> B.run s q", "proof (intro exI conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (r, ?s) \\<in> \\<langle>T\\<rangle>stream_rel\n 2. B.run ?s q", "show \"(r, smap f (siterate g (p, q, r))) \\<in> \\<langle>T\\<rangle> stream_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r, smap f (siterate g (p, q, r))) \\<in> \\<langle>T\\<rangle>stream_rel", "using 1 2 3"], ["proof (prove)\nusing this:\n  P (p, q, r)\n  P ?x \\<Longrightarrow> Q ?x (f ?x)\n  P ?x \\<Longrightarrow> P (g ?x)\n\ngoal (1 subgoal):\n 1. (r, smap f (siterate g (p, q, r))) \\<in> \\<langle>T\\<rangle>stream_rel", "unfolding Q_def g_def"], ["proof (prove)\nusing this:\n  P (p, q, r)\n  P ?x \\<Longrightarrow>\n  (case ?x of\n   (p, q, r) \\<Rightarrow> \\<lambda>a. (shd r, a) \\<in> T \\<and> enb a q)\n   (f ?x)\n  P ?x \\<Longrightarrow>\n  P (case ?x of\n     (p, q, r) \\<Rightarrow> (exa (shd r) p, exb (f (p, q, r)) q, stl r))\n\ngoal (1 subgoal):\n 1. (r, smap f\n         (siterate\n           (\\<lambda>(p, q, r). (exa (shd r) p, exb (f (p, q, r)) q, stl r))\n           (p, q, r)))\n    \\<in> \\<langle>T\\<rangle>stream_rel", "by (coinduction arbitrary: p q r) (fastforce)"], ["proof (state)\nthis:\n  (r, smap f (siterate g (p, q, r))) \\<in> \\<langle>T\\<rangle>stream_rel\n\ngoal (1 subgoal):\n 1. B.run (smap f (siterate g (p, q, r))) q", "show \"B.run (smap f (siterate g (p, q, r))) q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B.run (smap f (siterate g (p, q, r))) q", "using 1 2 3"], ["proof (prove)\nusing this:\n  P (p, q, r)\n  P ?x \\<Longrightarrow> Q ?x (f ?x)\n  P ?x \\<Longrightarrow> P (g ?x)\n\ngoal (1 subgoal):\n 1. B.run (smap f (siterate g (p, q, r))) q", "unfolding Q_def g_def"], ["proof (prove)\nusing this:\n  P (p, q, r)\n  P ?x \\<Longrightarrow>\n  (case ?x of\n   (p, q, r) \\<Rightarrow> \\<lambda>a. (shd r, a) \\<in> T \\<and> enb a q)\n   (f ?x)\n  P ?x \\<Longrightarrow>\n  P (case ?x of\n     (p, q, r) \\<Rightarrow> (exa (shd r) p, exb (f (p, q, r)) q, stl r))\n\ngoal (1 subgoal):\n 1. B.run\n     (smap f\n       (siterate\n         (\\<lambda>(p, q, r). (exa (shd r) p, exb (f (p, q, r)) q, stl r))\n         (p, q, r)))\n     q", "by (coinduction arbitrary: p q r) (fastforce)"], ["proof (state)\nthis:\n  B.run (smap f (siterate g (p, q, r))) q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>s. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> B.run s q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>(?p, ?q) \\<in> S; A.run ?r ?p\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s.\n                       (?r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and>\n                       B.run s ?q\n\ngoal (1 subgoal):\n 1. (A.runs, B.runs)\n    \\<in> S \\<rightarrow>\n          \\<langle>\\<langle>T\\<rangle>stream_rel\\<rangle>set_rel", "have 2: \"\\<exists> r. (r, s) \\<in> \\<langle>T\\<rangle> stream_rel \\<and> A.run r p\" if \"(p, q) \\<in> S\" \"B.run s q\" for p q s"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> A.run r p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>r. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> A.run r p", "define P where \"P \\<equiv> \\<lambda> (p, q, s). (p, q) \\<in> S \\<and> B.run s q\""], ["proof (state)\nthis:\n  P \\<equiv> \\<lambda>(p, q, s). (p, q) \\<in> S \\<and> B.run s q\n\ngoal (1 subgoal):\n 1. \\<exists>r. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> A.run r p", "define Q where \"Q \\<equiv> \\<lambda> (p, q :: 'd, s) b. (b, shd s) \\<in> T \\<and> ena b p\""], ["proof (state)\nthis:\n  Q \\<equiv> \\<lambda>(p, q, s) b. (b, shd s) \\<in> T \\<and> ena b p\n\ngoal (1 subgoal):\n 1. \\<exists>r. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> A.run r p", "have 1: \"P (p, q, s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (p, q, s)", "using that"], ["proof (prove)\nusing this:\n  (p, q) \\<in> S\n  B.run s q\n\ngoal (1 subgoal):\n 1. P (p, q, s)", "unfolding P_def"], ["proof (prove)\nusing this:\n  (p, q) \\<in> S\n  B.run s q\n\ngoal (1 subgoal):\n 1. case (p, q, s) of\n    (p, q, s) \\<Rightarrow> (p, q) \\<in> S \\<and> B.run s q", "by auto"], ["proof (state)\nthis:\n  P (p, q, s)\n\ngoal (1 subgoal):\n 1. \\<exists>r. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> A.run r p", "have \"\\<exists> a. Q x a\" if \"P x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. Q x a", "using assms(2) that"], ["proof (prove)\nusing this:\n  (?x, ?x') \\<in> S \\<Longrightarrow>\n  ({a. ena a ?x}, {a. enb a ?x'}) \\<in> \\<langle>T\\<rangle>set_rel\n  P x\n\ngoal (1 subgoal):\n 1. \\<exists>a. Q x a", "unfolding P_def Q_def"], ["proof (prove)\nusing this:\n  (?x, ?x') \\<in> S \\<Longrightarrow>\n  ({a. ena a ?x}, {a. enb a ?x'}) \\<in> \\<langle>T\\<rangle>set_rel\n  case x of (p, q, s) \\<Rightarrow> (p, q) \\<in> S \\<and> B.run s q\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       (case x of\n        (p, q, s) \\<Rightarrow>\n          \\<lambda>b. (b, shd s) \\<in> T \\<and> ena b p)\n        a", "by (force elim: set_relE2 B.run.cases)"], ["proof (state)\nthis:\n  P ?x \\<Longrightarrow> \\<exists>a. Q ?x a\n\ngoal (1 subgoal):\n 1. \\<exists>r. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> A.run r p", "then"], ["proof (chain)\npicking this:\n  P ?x \\<Longrightarrow> \\<exists>a. Q ?x a", "obtain f where 2: \"\\<And> x. P x \\<Longrightarrow> Q x (f x)\""], ["proof (prove)\nusing this:\n  P ?x \\<Longrightarrow> \\<exists>a. Q ?x a\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<And>x. P x \\<Longrightarrow> Q x (f x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  P ?x \\<Longrightarrow> Q ?x (f ?x)\n\ngoal (1 subgoal):\n 1. \\<exists>r. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> A.run r p", "define g where \"g \\<equiv> \\<lambda> (p, q, s). (exa (f (p, q, s)) p, exb (shd s) q, stl s)\""], ["proof (state)\nthis:\n  g \\<equiv> \\<lambda>(p, q, s). (exa (f (p, q, s)) p, exb (shd s) q, stl s)\n\ngoal (1 subgoal):\n 1. \\<exists>r. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> A.run r p", "have 3: \"P (g x)\" if \"P x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (g x)", "using assms(1) 2 that"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x1, ?x'1) \\<in> T; (?x, ?x') \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (exa ?x1 ?x, exb ?x'1 ?x') \\<in> S\n  P ?x \\<Longrightarrow> Q ?x (f ?x)\n  P x\n\ngoal (1 subgoal):\n 1. P (g x)", "unfolding P_def Q_def g_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x1, ?x'1) \\<in> T; (?x, ?x') \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (exa ?x1 ?x, exb ?x'1 ?x') \\<in> S\n  case ?x of\n  (p, q, s) \\<Rightarrow> (p, q) \\<in> S \\<and> B.run s q \\<Longrightarrow>\n  (case ?x of\n   (p, q, s) \\<Rightarrow> \\<lambda>b. (b, shd s) \\<in> T \\<and> ena b p)\n   (f ?x)\n  case x of (p, q, s) \\<Rightarrow> (p, q) \\<in> S \\<and> B.run s q\n\ngoal (1 subgoal):\n 1. case case x of\n         (p, q, s) \\<Rightarrow>\n           (exa (f (p, q, s)) p, exb (shd s) q, stl s) of\n    (p, q, s) \\<Rightarrow> (p, q) \\<in> S \\<and> B.run s q", "by (auto elim: B.run.cases)"], ["proof (state)\nthis:\n  P ?x \\<Longrightarrow> P (g ?x)\n\ngoal (1 subgoal):\n 1. \\<exists>r. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> A.run r p", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> A.run r p", "proof (intro exI conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (?r, s) \\<in> \\<langle>T\\<rangle>stream_rel\n 2. A.run ?r p", "show \"(smap f (siterate g (p, q, s)), s) \\<in> \\<langle>T\\<rangle> stream_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (smap f (siterate g (p, q, s)), s) \\<in> \\<langle>T\\<rangle>stream_rel", "using 1 2 3"], ["proof (prove)\nusing this:\n  P (p, q, s)\n  P ?x \\<Longrightarrow> Q ?x (f ?x)\n  P ?x \\<Longrightarrow> P (g ?x)\n\ngoal (1 subgoal):\n 1. (smap f (siterate g (p, q, s)), s) \\<in> \\<langle>T\\<rangle>stream_rel", "unfolding Q_def g_def"], ["proof (prove)\nusing this:\n  P (p, q, s)\n  P ?x \\<Longrightarrow>\n  (case ?x of\n   (p, q, s) \\<Rightarrow> \\<lambda>b. (b, shd s) \\<in> T \\<and> ena b p)\n   (f ?x)\n  P ?x \\<Longrightarrow>\n  P (case ?x of\n     (p, q, s) \\<Rightarrow> (exa (f (p, q, s)) p, exb (shd s) q, stl s))\n\ngoal (1 subgoal):\n 1. (smap f\n      (siterate\n        (\\<lambda>(p, q, s). (exa (f (p, q, s)) p, exb (shd s) q, stl s))\n        (p, q, s)),\n     s)\n    \\<in> \\<langle>T\\<rangle>stream_rel", "by (coinduction arbitrary: p q s) (fastforce)"], ["proof (state)\nthis:\n  (smap f (siterate g (p, q, s)), s) \\<in> \\<langle>T\\<rangle>stream_rel\n\ngoal (1 subgoal):\n 1. A.run (smap f (siterate g (p, q, s))) p", "show \"A.run (smap f (siterate g (p, q, s))) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A.run (smap f (siterate g (p, q, s))) p", "using 1 2 3"], ["proof (prove)\nusing this:\n  P (p, q, s)\n  P ?x \\<Longrightarrow> Q ?x (f ?x)\n  P ?x \\<Longrightarrow> P (g ?x)\n\ngoal (1 subgoal):\n 1. A.run (smap f (siterate g (p, q, s))) p", "unfolding Q_def g_def"], ["proof (prove)\nusing this:\n  P (p, q, s)\n  P ?x \\<Longrightarrow>\n  (case ?x of\n   (p, q, s) \\<Rightarrow> \\<lambda>b. (b, shd s) \\<in> T \\<and> ena b p)\n   (f ?x)\n  P ?x \\<Longrightarrow>\n  P (case ?x of\n     (p, q, s) \\<Rightarrow> (exa (f (p, q, s)) p, exb (shd s) q, stl s))\n\ngoal (1 subgoal):\n 1. A.run\n     (smap f\n       (siterate\n         (\\<lambda>(p, q, s). (exa (f (p, q, s)) p, exb (shd s) q, stl s))\n         (p, q, s)))\n     p", "by (coinduction arbitrary: p q s) (fastforce)"], ["proof (state)\nthis:\n  A.run (smap f (siterate g (p, q, s))) p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>r. (r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and> A.run r p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>(?p, ?q) \\<in> S; B.run ?s ?q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       (r, ?s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and>\n                       A.run r ?p\n\ngoal (1 subgoal):\n 1. (A.runs, B.runs)\n    \\<in> S \\<rightarrow>\n          \\<langle>\\<langle>T\\<rangle>stream_rel\\<rangle>set_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A.runs, B.runs)\n    \\<in> S \\<rightarrow>\n          \\<langle>\\<langle>T\\<rangle>stream_rel\\<rangle>set_rel", "unfolding transition_system.runs_def set_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>p. {r. A.run r p}, \\<lambda>p. {r. B.run r p})\n    \\<in> S \\<rightarrow>\n          {(A, B).\n           (\\<forall>x\\<in>A.\n               \\<exists>y\\<in>B.\n                  (x, y) \\<in> \\<langle>T\\<rangle>stream_rel) \\<and>\n           (\\<forall>y\\<in>B.\n               \\<exists>x\\<in>A.\n                  (x, y) \\<in> \\<langle>T\\<rangle>stream_rel)}", "using 1 2"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?p, ?q) \\<in> S; A.run ?r ?p\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s.\n                       (?r, s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and>\n                       B.run s ?q\n  \\<lbrakk>(?p, ?q) \\<in> S; B.run ?s ?q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       (r, ?s) \\<in> \\<langle>T\\<rangle>stream_rel \\<and>\n                       A.run r ?p\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. {r. A.run r p}, \\<lambda>p. {r. B.run r p})\n    \\<in> S \\<rightarrow>\n          {(A, B).\n           (\\<forall>x\\<in>A.\n               \\<exists>y\\<in>B.\n                  (x, y) \\<in> \\<langle>T\\<rangle>stream_rel) \\<and>\n           (\\<forall>y\\<in>B.\n               \\<exists>x\\<in>A.\n                  (x, y) \\<in> \\<langle>T\\<rangle>stream_rel)}", "by force"], ["proof (state)\nthis:\n  (A.runs, B.runs)\n  \\<in> S \\<rightarrow>\n        \\<langle>\\<langle>T\\<rangle>stream_rel\\<rangle>set_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}