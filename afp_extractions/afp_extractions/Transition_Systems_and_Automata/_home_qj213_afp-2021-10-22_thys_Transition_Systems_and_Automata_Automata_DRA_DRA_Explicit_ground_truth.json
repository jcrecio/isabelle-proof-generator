{"file_name": "/home/qj213/afp-2021-10-22/thys/Transition_Systems_and_Automata/Automata/DRA/DRA_Explicit.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Transition_Systems_and_Automata", "problem_names": ["lemma drae_param[param, autoref_rules]:\n    \"(drae, drae) \\<in> \\<langle>L\\<rangle> set_rel \\<rightarrow> S \\<rightarrow> \\<langle>S \\<times>\\<^sub>r L \\<times>\\<^sub>r S\\<rangle> set_rel \\<rightarrow>\n      \\<langle>\\<langle>S\\<rangle> set_rel \\<times>\\<^sub>r \\<langle>S\\<rangle> set_rel\\<rangle> list_rel \\<rightarrow> \\<langle>L, S\\<rangle> drae_rel\"\n    \"(alphabete, alphabete) \\<in> \\<langle>L, S\\<rangle> drae_rel \\<rightarrow> \\<langle>L\\<rangle> set_rel\"\n    \"(initiale, initiale) \\<in> \\<langle>L, S\\<rangle> drae_rel \\<rightarrow> S\"\n    \"(transitione, transitione) \\<in> \\<langle>L, S\\<rangle> drae_rel \\<rightarrow> \\<langle>S \\<times>\\<^sub>r L \\<times>\\<^sub>r S\\<rangle> set_rel\"\n    \"(conditione, conditione) \\<in> \\<langle>L, S\\<rangle> drae_rel \\<rightarrow> \\<langle>\\<langle>S\\<rangle> set_rel \\<times>\\<^sub>r \\<langle>S\\<rangle> set_rel\\<rangle> list_rel\"", "lemma drae_rel_id[simp]: \"\\<langle>Id, Id\\<rangle> drae_rel = Id\"", "lemma drae_rel_comp[simp]: \"\\<langle>L\\<^sub>1 O L\\<^sub>2, S\\<^sub>1 O S\\<^sub>2\\<rangle> drae_rel = \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle> drae_rel O \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle> drae_rel\"", "lemma drae_scheme_itype[autoref_itype]:\n      \"drae ::\\<^sub>i \\<langle>L\\<rangle>\\<^sub>i i_set \\<rightarrow>\\<^sub>i S \\<rightarrow>\\<^sub>i \\<langle>\\<langle>S, \\<langle>L, S\\<rangle>\\<^sub>i i_prod\\<rangle>\\<^sub>i i_prod\\<rangle>\\<^sub>i i_set \\<rightarrow>\\<^sub>i\n        \\<langle>\\<langle>\\<langle>S\\<rangle>\\<^sub>i i_set, \\<langle>S\\<rangle>\\<^sub>i i_set\\<rangle>\\<^sub>i i_prod\\<rangle>\\<^sub>i i_list \\<rightarrow>\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_drae_scheme\"\n      \"alphabete ::\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_drae_scheme \\<rightarrow>\\<^sub>i \\<langle>L\\<rangle>\\<^sub>i i_set\"\n      \"initiale ::\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_drae_scheme \\<rightarrow>\\<^sub>i S\"\n      \"transitione ::\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_drae_scheme \\<rightarrow>\\<^sub>i \\<langle>\\<langle>S, \\<langle>L, S\\<rangle>\\<^sub>i i_prod\\<rangle>\\<^sub>i i_prod\\<rangle>\\<^sub>i i_set\"\n      \"conditione ::\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_drae_scheme \\<rightarrow>\\<^sub>i \\<langle>\\<langle>\\<langle>S\\<rangle>\\<^sub>i i_set, \\<langle>S\\<rangle>\\<^sub>i i_set\\<rangle>\\<^sub>i i_prod\\<rangle>\\<^sub>i i_list\"", "lemma draei_param[param, autoref_rules]:\n    \"(draei, draei) \\<in> \\<langle>L\\<rangle> list_rel \\<rightarrow> S \\<rightarrow> \\<langle>S \\<times>\\<^sub>r L \\<times>\\<^sub>r S\\<rangle> list_rel \\<rightarrow>\n      \\<langle>\\<langle>S\\<rangle> list_rel \\<times>\\<^sub>r \\<langle>S\\<rangle> list_rel\\<rangle> list_rel \\<rightarrow> \\<langle>L, S\\<rangle> draei_rel\"\n    \"(alphabetei, alphabetei) \\<in> \\<langle>L, S\\<rangle> draei_rel \\<rightarrow> \\<langle>L\\<rangle> list_rel\"\n    \"(initialei, initialei) \\<in> \\<langle>L, S\\<rangle> draei_rel \\<rightarrow> S\"\n    \"(transitionei, transitionei) \\<in> \\<langle>L, S\\<rangle> draei_rel \\<rightarrow> \\<langle>S \\<times>\\<^sub>r L \\<times>\\<^sub>r S\\<rangle> list_rel\"\n    \"(conditionei, conditionei) \\<in> \\<langle>L, S\\<rangle> draei_rel \\<rightarrow> \\<langle>\\<langle>S\\<rangle> list_rel \\<times>\\<^sub>r \\<langle>S\\<rangle> list_rel\\<rangle> list_rel\"", "lemmas [autoref_rel_intf] = REL_INTFI[of draei_drae_rel i_drae_scheme]", "lemma draei_drae_param[param, autoref_rules]:\n    \"(draei, drae) \\<in> \\<langle>L\\<rangle> list_set_rel \\<rightarrow> S \\<rightarrow> \\<langle>S \\<times>\\<^sub>r L \\<times>\\<^sub>r S\\<rangle> list_set_rel \\<rightarrow>\n      \\<langle>\\<langle>S\\<rangle> list_set_rel \\<times>\\<^sub>r \\<langle>S\\<rangle> list_set_rel\\<rangle> list_rel \\<rightarrow> \\<langle>L, S\\<rangle> draei_drae_rel\"\n    \"(alphabetei, alphabete) \\<in> \\<langle>L, S\\<rangle> draei_drae_rel \\<rightarrow> \\<langle>L\\<rangle> list_set_rel\"\n    \"(initialei, initiale) \\<in> \\<langle>L, S\\<rangle> draei_drae_rel \\<rightarrow> S\"\n    \"(transitionei, transitione) \\<in> \\<langle>L, S\\<rangle> draei_drae_rel \\<rightarrow> \\<langle>S \\<times>\\<^sub>r L \\<times>\\<^sub>r S\\<rangle> list_set_rel\"\n    \"(conditionei, conditione) \\<in> \\<langle>L, S\\<rangle> draei_drae_rel \\<rightarrow> \\<langle>\\<langle>S\\<rangle> list_set_rel \\<times>\\<^sub>r \\<langle>S\\<rangle> list_set_rel\\<rangle> list_rel\"", "lemma draei_drae_id_param[param]: \"(draei_drae, id) \\<in> \\<langle>L, S\\<rangle> draei_drae_rel \\<rightarrow> \\<langle>L, S\\<rangle> drae_rel\"", "lemma wft_param[param]:\n    assumes \"bijective S\" \"bijective L\"\n    shows \"(wft, wft) \\<in> \\<langle>L\\<rangle> set_rel \\<rightarrow> \\<langle>S\\<rangle> set_rel \\<rightarrow> \\<langle>S \\<times>\\<^sub>r L \\<times>\\<^sub>r S\\<rangle> set_rel \\<rightarrow> bool_rel\"", "lemma wft_transitions: \"wft L S (transitions L S s)\"", "lemma set_rel_Domain_Range[intro!, simp]: \"(Domain A, Range A) \\<in> \\<langle>A\\<rangle> set_rel\"", "lemma dra_drae_param[param]: \"(dra_drae, dra_drae) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> \\<langle>L, S\\<rangle> drae_rel\"", "lemma drae_dra_param[param]:\n    assumes \"bijective L\" \"bijective S\"\n    assumes \"wft (Range L) (Range S) (transitione B)\"\n    assumes [param]: \"(A, B) \\<in> \\<langle>L, S\\<rangle> drae_rel\"\n    shows \"(drae_dra A, drae_dra B) \\<in> \\<langle>L, S\\<rangle> dra_rel\"", "lemma succs_transitions_param[param]:\n    \"(succs \\<circ> transitions L S, id) \\<in> (Id_on L \\<rightarrow> Id_on S \\<rightarrow> Id_on S) \\<rightarrow> (Id_on L \\<rightarrow> Id_on S \\<rightarrow> Id_on S)\"", "lemma drae_dra_dra_drae_param[param]:\n    \"((drae_dra \\<circ> dra_drae) A, id A) \\<in> \\<langle>Id_on (alphabet A), Id_on (nodes A)\\<rangle> dra_rel\"", "lemma draei_dra_id[param]: \"(drae_dra \\<circ> draei_drae, id) \\<in> \\<langle>L, S\\<rangle> draei_dra_rel \\<rightarrow> \\<langle>L, S\\<rangle> dra_rel\""], "translations": [["", "lemma drae_param[param, autoref_rules]:\n    \"(drae, drae) \\<in> \\<langle>L\\<rangle> set_rel \\<rightarrow> S \\<rightarrow> \\<langle>S \\<times>\\<^sub>r L \\<times>\\<^sub>r S\\<rangle> set_rel \\<rightarrow>\n      \\<langle>\\<langle>S\\<rangle> set_rel \\<times>\\<^sub>r \\<langle>S\\<rangle> set_rel\\<rangle> list_rel \\<rightarrow> \\<langle>L, S\\<rangle> drae_rel\"\n    \"(alphabete, alphabete) \\<in> \\<langle>L, S\\<rangle> drae_rel \\<rightarrow> \\<langle>L\\<rangle> set_rel\"\n    \"(initiale, initiale) \\<in> \\<langle>L, S\\<rangle> drae_rel \\<rightarrow> S\"\n    \"(transitione, transitione) \\<in> \\<langle>L, S\\<rangle> drae_rel \\<rightarrow> \\<langle>S \\<times>\\<^sub>r L \\<times>\\<^sub>r S\\<rangle> set_rel\"\n    \"(conditione, conditione) \\<in> \\<langle>L, S\\<rangle> drae_rel \\<rightarrow> \\<langle>\\<langle>S\\<rangle> set_rel \\<times>\\<^sub>r \\<langle>S\\<rangle> set_rel\\<rangle> list_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((drae, drae)\n     \\<in> \\<langle>L\\<rangle>set_rel \\<rightarrow>\n           S \\<rightarrow>\n           \\<langle>S \\<times>\\<^sub>r\n                    L \\<times>\\<^sub>r S\\<rangle>set_rel \\<rightarrow>\n           \\<langle>\\<langle>S\\<rangle>set_rel \\<times>\\<^sub>r\n                    \\<langle>S\\<rangle>set_rel\\<rangle>list_rel \\<rightarrow>\n           \\<langle>L, S\\<rangle>drae_rel &&&\n     (alphabete, alphabete)\n     \\<in> \\<langle>L, S\\<rangle>drae_rel \\<rightarrow>\n           \\<langle>L\\<rangle>set_rel) &&&\n    (initiale, initiale)\n    \\<in> \\<langle>L, S\\<rangle>drae_rel \\<rightarrow> S &&&\n    (transitione, transitione)\n    \\<in> \\<langle>L, S\\<rangle>drae_rel \\<rightarrow>\n          \\<langle>S \\<times>\\<^sub>r\n                   L \\<times>\\<^sub>r S\\<rangle>set_rel &&&\n    (conditione, conditione)\n    \\<in> \\<langle>L, S\\<rangle>drae_rel \\<rightarrow>\n          \\<langle>\\<langle>S\\<rangle>set_rel \\<times>\\<^sub>r\n                   \\<langle>S\\<rangle>set_rel\\<rangle>list_rel", "unfolding drae_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((drae, drae)\n     \\<in> \\<langle>L\\<rangle>set_rel \\<rightarrow>\n           S \\<rightarrow>\n           \\<langle>S \\<times>\\<^sub>r\n                    L \\<times>\\<^sub>r S\\<rangle>set_rel \\<rightarrow>\n           \\<langle>\\<langle>S\\<rangle>set_rel \\<times>\\<^sub>r\n                    \\<langle>S\\<rangle>set_rel\\<rangle>list_rel \\<rightarrow>\n           {(A\\<^sub>1, A\\<^sub>2).\n            (alphabete A\\<^sub>1, alphabete A\\<^sub>2)\n            \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n            (initiale A\\<^sub>1, initiale A\\<^sub>2) \\<in> S \\<and>\n            (transitione A\\<^sub>1, transitione A\\<^sub>2)\n            \\<in> \\<langle>S \\<times>\\<^sub>r\n                           L \\<times>\\<^sub>r S\\<rangle>set_rel \\<and>\n            (conditione A\\<^sub>1, conditione A\\<^sub>2)\n            \\<in> \\<langle>\\<langle>S\\<rangle>set_rel \\<times>\\<^sub>r\n                           \\<langle>S\\<rangle>set_rel\\<rangle>list_rel} &&&\n     (alphabete, alphabete)\n     \\<in> {(A\\<^sub>1, A\\<^sub>2).\n            (alphabete A\\<^sub>1, alphabete A\\<^sub>2)\n            \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n            (initiale A\\<^sub>1, initiale A\\<^sub>2) \\<in> S \\<and>\n            (transitione A\\<^sub>1, transitione A\\<^sub>2)\n            \\<in> \\<langle>S \\<times>\\<^sub>r\n                           L \\<times>\\<^sub>r S\\<rangle>set_rel \\<and>\n            (conditione A\\<^sub>1, conditione A\\<^sub>2)\n            \\<in> \\<langle>\\<langle>S\\<rangle>set_rel \\<times>\\<^sub>r\n                           \\<langle>S\\<rangle>set_rel\\<rangle>list_rel} \\<rightarrow>\n           \\<langle>L\\<rangle>set_rel) &&&\n    (initiale, initiale)\n    \\<in> {(A\\<^sub>1, A\\<^sub>2).\n           (alphabete A\\<^sub>1, alphabete A\\<^sub>2)\n           \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n           (initiale A\\<^sub>1, initiale A\\<^sub>2) \\<in> S \\<and>\n           (transitione A\\<^sub>1, transitione A\\<^sub>2)\n           \\<in> \\<langle>S \\<times>\\<^sub>r\n                          L \\<times>\\<^sub>r S\\<rangle>set_rel \\<and>\n           (conditione A\\<^sub>1, conditione A\\<^sub>2)\n           \\<in> \\<langle>\\<langle>S\\<rangle>set_rel \\<times>\\<^sub>r\n                          \\<langle>S\\<rangle>set_rel\\<rangle>list_rel} \\<rightarrow>\n          S &&&\n    (transitione, transitione)\n    \\<in> {(A\\<^sub>1, A\\<^sub>2).\n           (alphabete A\\<^sub>1, alphabete A\\<^sub>2)\n           \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n           (initiale A\\<^sub>1, initiale A\\<^sub>2) \\<in> S \\<and>\n           (transitione A\\<^sub>1, transitione A\\<^sub>2)\n           \\<in> \\<langle>S \\<times>\\<^sub>r\n                          L \\<times>\\<^sub>r S\\<rangle>set_rel \\<and>\n           (conditione A\\<^sub>1, conditione A\\<^sub>2)\n           \\<in> \\<langle>\\<langle>S\\<rangle>set_rel \\<times>\\<^sub>r\n                          \\<langle>S\\<rangle>set_rel\\<rangle>list_rel} \\<rightarrow>\n          \\<langle>S \\<times>\\<^sub>r\n                   L \\<times>\\<^sub>r S\\<rangle>set_rel &&&\n    (conditione, conditione)\n    \\<in> {(A\\<^sub>1, A\\<^sub>2).\n           (alphabete A\\<^sub>1, alphabete A\\<^sub>2)\n           \\<in> \\<langle>L\\<rangle>set_rel \\<and>\n           (initiale A\\<^sub>1, initiale A\\<^sub>2) \\<in> S \\<and>\n           (transitione A\\<^sub>1, transitione A\\<^sub>2)\n           \\<in> \\<langle>S \\<times>\\<^sub>r\n                          L \\<times>\\<^sub>r S\\<rangle>set_rel \\<and>\n           (conditione A\\<^sub>1, conditione A\\<^sub>2)\n           \\<in> \\<langle>\\<langle>S\\<rangle>set_rel \\<times>\\<^sub>r\n                          \\<langle>S\\<rangle>set_rel\\<rangle>list_rel} \\<rightarrow>\n          \\<langle>\\<langle>S\\<rangle>set_rel \\<times>\\<^sub>r\n                   \\<langle>S\\<rangle>set_rel\\<rangle>list_rel", "by auto"], ["", "lemma drae_rel_id[simp]: \"\\<langle>Id, Id\\<rangle> drae_rel = Id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>Id, Id\\<rangle>drae_rel = Id", "unfolding drae_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(A\\<^sub>1, A\\<^sub>2).\n     (alphabete A\\<^sub>1, alphabete A\\<^sub>2)\n     \\<in> \\<langle>Id\\<rangle>set_rel \\<and>\n     (initiale A\\<^sub>1, initiale A\\<^sub>2) \\<in> Id \\<and>\n     (transitione A\\<^sub>1, transitione A\\<^sub>2)\n     \\<in> \\<langle>Id \\<times>\\<^sub>r\n                    Id \\<times>\\<^sub>r Id\\<rangle>set_rel \\<and>\n     (conditione A\\<^sub>1, conditione A\\<^sub>2)\n     \\<in> \\<langle>\\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                    \\<langle>Id\\<rangle>set_rel\\<rangle>list_rel} =\n    Id", "using drae.expand"], ["proof (prove)\nusing this:\n  alphabete ?drae = alphabete ?drae' \\<and>\n  initiale ?drae = initiale ?drae' \\<and>\n  transitione ?drae = transitione ?drae' \\<and>\n  conditione ?drae = conditione ?drae' \\<Longrightarrow>\n  ?drae = ?drae'\n\ngoal (1 subgoal):\n 1. {(A\\<^sub>1, A\\<^sub>2).\n     (alphabete A\\<^sub>1, alphabete A\\<^sub>2)\n     \\<in> \\<langle>Id\\<rangle>set_rel \\<and>\n     (initiale A\\<^sub>1, initiale A\\<^sub>2) \\<in> Id \\<and>\n     (transitione A\\<^sub>1, transitione A\\<^sub>2)\n     \\<in> \\<langle>Id \\<times>\\<^sub>r\n                    Id \\<times>\\<^sub>r Id\\<rangle>set_rel \\<and>\n     (conditione A\\<^sub>1, conditione A\\<^sub>2)\n     \\<in> \\<langle>\\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                    \\<langle>Id\\<rangle>set_rel\\<rangle>list_rel} =\n    Id", "by auto"], ["", "lemma drae_rel_comp[simp]: \"\\<langle>L\\<^sub>1 O L\\<^sub>2, S\\<^sub>1 O S\\<^sub>2\\<rangle> drae_rel = \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle> drae_rel O \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle> drae_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>L\\<^sub>1 O L\\<^sub>2, S\\<^sub>1 O S\\<^sub>2\\<rangle>drae_rel =\n    \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel O \\<langle>L\\<^sub>2,\n    S\\<^sub>2\\<rangle>drae_rel", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n       S\\<^sub>1 O S\\<^sub>2\\<rangle>drae_rel \\<Longrightarrow>\n       (a, b)\n       \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel O\n             \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel\n 2. \\<And>a b x y z.\n       \\<lbrakk>(x, y) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel;\n        (y, z) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n                         S\\<^sub>1 O S\\<^sub>2\\<rangle>drae_rel", "fix A B"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n       S\\<^sub>1 O S\\<^sub>2\\<rangle>drae_rel \\<Longrightarrow>\n       (a, b)\n       \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel O\n             \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel\n 2. \\<And>a b x y z.\n       \\<lbrakk>(x, y) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel;\n        (y, z) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n                         S\\<^sub>1 O S\\<^sub>2\\<rangle>drae_rel", "assume 1: \"(A, B) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2, S\\<^sub>1 O S\\<^sub>2\\<rangle> drae_rel\""], ["proof (state)\nthis:\n  (A, B) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n  S\\<^sub>1 O S\\<^sub>2\\<rangle>drae_rel\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n       S\\<^sub>1 O S\\<^sub>2\\<rangle>drae_rel \\<Longrightarrow>\n       (a, b)\n       \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel O\n             \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel\n 2. \\<And>a b x y z.\n       \\<lbrakk>(x, y) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel;\n        (y, z) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n                         S\\<^sub>1 O S\\<^sub>2\\<rangle>drae_rel", "obtain a b c d where 2:\n      \"(alphabete A, a) \\<in> \\<langle>L\\<^sub>1\\<rangle> set_rel\" \"(a, alphabete B) \\<in> \\<langle>L\\<^sub>2\\<rangle> set_rel\"\n      \"(initiale A, b) \\<in> S\\<^sub>1\" \"(b, initiale B) \\<in> S\\<^sub>2\"\n      \"(transitione A, c) \\<in> \\<langle>S\\<^sub>1 \\<times>\\<^sub>r L\\<^sub>1 \\<times>\\<^sub>r S\\<^sub>1\\<rangle> set_rel\" \"(c, transitione B) \\<in> \\<langle>S\\<^sub>2 \\<times>\\<^sub>r L\\<^sub>2 \\<times>\\<^sub>r S\\<^sub>2\\<rangle> set_rel\"\n      \"(conditione A, d) \\<in> \\<langle>\\<langle>S\\<^sub>1\\<rangle> set_rel \\<times>\\<^sub>r \\<langle>S\\<^sub>1\\<rangle> set_rel\\<rangle> list_rel\"\n      \"(d, conditione B) \\<in> \\<langle>\\<langle>S\\<^sub>2\\<rangle> set_rel \\<times>\\<^sub>r \\<langle>S\\<^sub>2\\<rangle> set_rel\\<rangle> list_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a b c d.\n        \\<lbrakk>(alphabete A, a) \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel;\n         (a, alphabete B) \\<in> \\<langle>L\\<^sub>2\\<rangle>set_rel;\n         (initiale A, b) \\<in> S\\<^sub>1; (b, initiale B) \\<in> S\\<^sub>2;\n         (transitione A, c)\n         \\<in> \\<langle>S\\<^sub>1 \\<times>\\<^sub>r\n                        L\\<^sub>1 \\<times>\\<^sub>r\n                        S\\<^sub>1\\<rangle>set_rel;\n         (c, transitione B)\n         \\<in> \\<langle>S\\<^sub>2 \\<times>\\<^sub>r\n                        L\\<^sub>2 \\<times>\\<^sub>r\n                        S\\<^sub>2\\<rangle>set_rel;\n         (conditione A, d)\n         \\<in> \\<langle>\\<langle>S\\<^sub>1\\<rangle>set_rel \\<times>\\<^sub>r\n                        \\<langle>S\\<^sub>1\\<rangle>set_rel\\<rangle>list_rel;\n         (d, conditione B)\n         \\<in> \\<langle>\\<langle>S\\<^sub>2\\<rangle>set_rel \\<times>\\<^sub>r\n                        \\<langle>S\\<^sub>2\\<rangle>set_rel\\<rangle>list_rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n  S\\<^sub>1 O S\\<^sub>2\\<rangle>drae_rel\n\ngoal (1 subgoal):\n 1. (\\<And>a b c d.\n        \\<lbrakk>(alphabete A, a) \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel;\n         (a, alphabete B) \\<in> \\<langle>L\\<^sub>2\\<rangle>set_rel;\n         (initiale A, b) \\<in> S\\<^sub>1; (b, initiale B) \\<in> S\\<^sub>2;\n         (transitione A, c)\n         \\<in> \\<langle>S\\<^sub>1 \\<times>\\<^sub>r\n                        L\\<^sub>1 \\<times>\\<^sub>r\n                        S\\<^sub>1\\<rangle>set_rel;\n         (c, transitione B)\n         \\<in> \\<langle>S\\<^sub>2 \\<times>\\<^sub>r\n                        L\\<^sub>2 \\<times>\\<^sub>r\n                        S\\<^sub>2\\<rangle>set_rel;\n         (conditione A, d)\n         \\<in> \\<langle>\\<langle>S\\<^sub>1\\<rangle>set_rel \\<times>\\<^sub>r\n                        \\<langle>S\\<^sub>1\\<rangle>set_rel\\<rangle>list_rel;\n         (d, conditione B)\n         \\<in> \\<langle>\\<langle>S\\<^sub>2\\<rangle>set_rel \\<times>\\<^sub>r\n                        \\<langle>S\\<^sub>2\\<rangle>set_rel\\<rangle>list_rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding drae_rel_def prod_rel_compp set_rel_compp"], ["proof (prove)\nusing this:\n  (A, B)\n  \\<in> {(A\\<^sub>1, A\\<^sub>2).\n         (alphabete A\\<^sub>1, alphabete A\\<^sub>2)\n         \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel O\n               \\<langle>L\\<^sub>2\\<rangle>set_rel \\<and>\n         (initiale A\\<^sub>1, initiale A\\<^sub>2)\n         \\<in> S\\<^sub>1 O S\\<^sub>2 \\<and>\n         (transitione A\\<^sub>1, transitione A\\<^sub>2)\n         \\<in> \\<langle>S\\<^sub>1 \\<times>\\<^sub>r\n                        L\\<^sub>1 \\<times>\\<^sub>r\n                        S\\<^sub>1\\<rangle>set_rel O\n               \\<langle>S\\<^sub>2 \\<times>\\<^sub>r\n                        L\\<^sub>2 \\<times>\\<^sub>r\n                        S\\<^sub>2\\<rangle>set_rel \\<and>\n         (conditione A\\<^sub>1, conditione A\\<^sub>2)\n         \\<in> \\<langle>(\\<langle>S\\<^sub>1\\<rangle>set_rel \\<times>\\<^sub>r\n                         \\<langle>S\\<^sub>1\\<rangle>set_rel) O\n                        (\\<langle>S\\<^sub>2\\<rangle>set_rel \\<times>\\<^sub>r\n                         \\<langle>S\\<^sub>2\\<rangle>set_rel)\\<rangle>list_rel}\n\ngoal (1 subgoal):\n 1. (\\<And>a b c d.\n        \\<lbrakk>(alphabete A, a) \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel;\n         (a, alphabete B) \\<in> \\<langle>L\\<^sub>2\\<rangle>set_rel;\n         (initiale A, b) \\<in> S\\<^sub>1; (b, initiale B) \\<in> S\\<^sub>2;\n         (transitione A, c)\n         \\<in> \\<langle>S\\<^sub>1 \\<times>\\<^sub>r\n                        L\\<^sub>1 \\<times>\\<^sub>r\n                        S\\<^sub>1\\<rangle>set_rel;\n         (c, transitione B)\n         \\<in> \\<langle>S\\<^sub>2 \\<times>\\<^sub>r\n                        L\\<^sub>2 \\<times>\\<^sub>r\n                        S\\<^sub>2\\<rangle>set_rel;\n         (conditione A, d)\n         \\<in> \\<langle>\\<langle>S\\<^sub>1\\<rangle>set_rel \\<times>\\<^sub>r\n                        \\<langle>S\\<^sub>1\\<rangle>set_rel\\<rangle>list_rel;\n         (d, conditione B)\n         \\<in> \\<langle>\\<langle>S\\<^sub>2\\<rangle>set_rel \\<times>\\<^sub>r\n                        \\<langle>S\\<^sub>2\\<rangle>set_rel\\<rangle>list_rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (alphabete A, a) \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel\n  (a, alphabete B) \\<in> \\<langle>L\\<^sub>2\\<rangle>set_rel\n  (initiale A, b) \\<in> S\\<^sub>1\n  (b, initiale B) \\<in> S\\<^sub>2\n  (transitione A, c)\n  \\<in> \\<langle>S\\<^sub>1 \\<times>\\<^sub>r\n                 L\\<^sub>1 \\<times>\\<^sub>r S\\<^sub>1\\<rangle>set_rel\n  (c, transitione B)\n  \\<in> \\<langle>S\\<^sub>2 \\<times>\\<^sub>r\n                 L\\<^sub>2 \\<times>\\<^sub>r S\\<^sub>2\\<rangle>set_rel\n  (conditione A, d)\n  \\<in> \\<langle>\\<langle>S\\<^sub>1\\<rangle>set_rel \\<times>\\<^sub>r\n                 \\<langle>S\\<^sub>1\\<rangle>set_rel\\<rangle>list_rel\n  (d, conditione B)\n  \\<in> \\<langle>\\<langle>S\\<^sub>2\\<rangle>set_rel \\<times>\\<^sub>r\n                 \\<langle>S\\<^sub>2\\<rangle>set_rel\\<rangle>list_rel\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n       S\\<^sub>1 O S\\<^sub>2\\<rangle>drae_rel \\<Longrightarrow>\n       (a, b)\n       \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel O\n             \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel\n 2. \\<And>a b x y z.\n       \\<lbrakk>(x, y) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel;\n        (y, z) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n                         S\\<^sub>1 O S\\<^sub>2\\<rangle>drae_rel", "show \"(A, B) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle> drae_rel O \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle> drae_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, B)\n    \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel O\n          \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (A, ?b) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel\n 2. (?b, B) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel", "show \"(A, drae a b c d) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle> drae_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, drae a b c d) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel", "using 2"], ["proof (prove)\nusing this:\n  (alphabete A, a) \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel\n  (a, alphabete B) \\<in> \\<langle>L\\<^sub>2\\<rangle>set_rel\n  (initiale A, b) \\<in> S\\<^sub>1\n  (b, initiale B) \\<in> S\\<^sub>2\n  (transitione A, c)\n  \\<in> \\<langle>S\\<^sub>1 \\<times>\\<^sub>r\n                 L\\<^sub>1 \\<times>\\<^sub>r S\\<^sub>1\\<rangle>set_rel\n  (c, transitione B)\n  \\<in> \\<langle>S\\<^sub>2 \\<times>\\<^sub>r\n                 L\\<^sub>2 \\<times>\\<^sub>r S\\<^sub>2\\<rangle>set_rel\n  (conditione A, d)\n  \\<in> \\<langle>\\<langle>S\\<^sub>1\\<rangle>set_rel \\<times>\\<^sub>r\n                 \\<langle>S\\<^sub>1\\<rangle>set_rel\\<rangle>list_rel\n  (d, conditione B)\n  \\<in> \\<langle>\\<langle>S\\<^sub>2\\<rangle>set_rel \\<times>\\<^sub>r\n                 \\<langle>S\\<^sub>2\\<rangle>set_rel\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. (A, drae a b c d) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel", "unfolding drae_rel_def"], ["proof (prove)\nusing this:\n  (alphabete A, a) \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel\n  (a, alphabete B) \\<in> \\<langle>L\\<^sub>2\\<rangle>set_rel\n  (initiale A, b) \\<in> S\\<^sub>1\n  (b, initiale B) \\<in> S\\<^sub>2\n  (transitione A, c)\n  \\<in> \\<langle>S\\<^sub>1 \\<times>\\<^sub>r\n                 L\\<^sub>1 \\<times>\\<^sub>r S\\<^sub>1\\<rangle>set_rel\n  (c, transitione B)\n  \\<in> \\<langle>S\\<^sub>2 \\<times>\\<^sub>r\n                 L\\<^sub>2 \\<times>\\<^sub>r S\\<^sub>2\\<rangle>set_rel\n  (conditione A, d)\n  \\<in> \\<langle>\\<langle>S\\<^sub>1\\<rangle>set_rel \\<times>\\<^sub>r\n                 \\<langle>S\\<^sub>1\\<rangle>set_rel\\<rangle>list_rel\n  (d, conditione B)\n  \\<in> \\<langle>\\<langle>S\\<^sub>2\\<rangle>set_rel \\<times>\\<^sub>r\n                 \\<langle>S\\<^sub>2\\<rangle>set_rel\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. (A, drae a b c d)\n    \\<in> {(A\\<^sub>1, A\\<^sub>2).\n           (alphabete A\\<^sub>1, alphabete A\\<^sub>2)\n           \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel \\<and>\n           (initiale A\\<^sub>1, initiale A\\<^sub>2) \\<in> S\\<^sub>1 \\<and>\n           (transitione A\\<^sub>1, transitione A\\<^sub>2)\n           \\<in> \\<langle>S\\<^sub>1 \\<times>\\<^sub>r\n                          L\\<^sub>1 \\<times>\\<^sub>r\n                          S\\<^sub>1\\<rangle>set_rel \\<and>\n           (conditione A\\<^sub>1, conditione A\\<^sub>2)\n           \\<in> \\<langle>\\<langle>S\\<^sub>1\\<rangle>set_rel \\<times>\\<^sub>r\n                          \\<langle>S\\<^sub>1\\<rangle>set_rel\\<rangle>list_rel}", "by auto"], ["proof (state)\nthis:\n  (A, drae a b c d) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel\n\ngoal (1 subgoal):\n 1. (drae a b c d, B) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel", "show \"(drae a b c d, B) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle> drae_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (drae a b c d, B) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel", "using 2"], ["proof (prove)\nusing this:\n  (alphabete A, a) \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel\n  (a, alphabete B) \\<in> \\<langle>L\\<^sub>2\\<rangle>set_rel\n  (initiale A, b) \\<in> S\\<^sub>1\n  (b, initiale B) \\<in> S\\<^sub>2\n  (transitione A, c)\n  \\<in> \\<langle>S\\<^sub>1 \\<times>\\<^sub>r\n                 L\\<^sub>1 \\<times>\\<^sub>r S\\<^sub>1\\<rangle>set_rel\n  (c, transitione B)\n  \\<in> \\<langle>S\\<^sub>2 \\<times>\\<^sub>r\n                 L\\<^sub>2 \\<times>\\<^sub>r S\\<^sub>2\\<rangle>set_rel\n  (conditione A, d)\n  \\<in> \\<langle>\\<langle>S\\<^sub>1\\<rangle>set_rel \\<times>\\<^sub>r\n                 \\<langle>S\\<^sub>1\\<rangle>set_rel\\<rangle>list_rel\n  (d, conditione B)\n  \\<in> \\<langle>\\<langle>S\\<^sub>2\\<rangle>set_rel \\<times>\\<^sub>r\n                 \\<langle>S\\<^sub>2\\<rangle>set_rel\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. (drae a b c d, B) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel", "unfolding drae_rel_def"], ["proof (prove)\nusing this:\n  (alphabete A, a) \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel\n  (a, alphabete B) \\<in> \\<langle>L\\<^sub>2\\<rangle>set_rel\n  (initiale A, b) \\<in> S\\<^sub>1\n  (b, initiale B) \\<in> S\\<^sub>2\n  (transitione A, c)\n  \\<in> \\<langle>S\\<^sub>1 \\<times>\\<^sub>r\n                 L\\<^sub>1 \\<times>\\<^sub>r S\\<^sub>1\\<rangle>set_rel\n  (c, transitione B)\n  \\<in> \\<langle>S\\<^sub>2 \\<times>\\<^sub>r\n                 L\\<^sub>2 \\<times>\\<^sub>r S\\<^sub>2\\<rangle>set_rel\n  (conditione A, d)\n  \\<in> \\<langle>\\<langle>S\\<^sub>1\\<rangle>set_rel \\<times>\\<^sub>r\n                 \\<langle>S\\<^sub>1\\<rangle>set_rel\\<rangle>list_rel\n  (d, conditione B)\n  \\<in> \\<langle>\\<langle>S\\<^sub>2\\<rangle>set_rel \\<times>\\<^sub>r\n                 \\<langle>S\\<^sub>2\\<rangle>set_rel\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. (drae a b c d, B)\n    \\<in> {(A\\<^sub>1, A\\<^sub>2).\n           (alphabete A\\<^sub>1, alphabete A\\<^sub>2)\n           \\<in> \\<langle>L\\<^sub>2\\<rangle>set_rel \\<and>\n           (initiale A\\<^sub>1, initiale A\\<^sub>2) \\<in> S\\<^sub>2 \\<and>\n           (transitione A\\<^sub>1, transitione A\\<^sub>2)\n           \\<in> \\<langle>S\\<^sub>2 \\<times>\\<^sub>r\n                          L\\<^sub>2 \\<times>\\<^sub>r\n                          S\\<^sub>2\\<rangle>set_rel \\<and>\n           (conditione A\\<^sub>1, conditione A\\<^sub>2)\n           \\<in> \\<langle>\\<langle>S\\<^sub>2\\<rangle>set_rel \\<times>\\<^sub>r\n                          \\<langle>S\\<^sub>2\\<rangle>set_rel\\<rangle>list_rel}", "by auto"], ["proof (state)\nthis:\n  (drae a b c d, B) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (A, B)\n  \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel O \\<langle>L\\<^sub>2,\n        S\\<^sub>2\\<rangle>drae_rel\n\ngoal (1 subgoal):\n 1. \\<And>a b x y z.\n       \\<lbrakk>(x, y) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel;\n        (y, z) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n                         S\\<^sub>1 O S\\<^sub>2\\<rangle>drae_rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x y z.\n       \\<lbrakk>(x, y) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel;\n        (y, z) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n                         S\\<^sub>1 O S\\<^sub>2\\<rangle>drae_rel", "show \"(A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2, S\\<^sub>1 O S\\<^sub>2\\<rangle> drae_rel\"\n      if \"(A, B) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle> drae_rel\" \"(B, C) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle> drae_rel\" for A B C"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>drae_rel", "using that"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel\n  (B, C) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel\n\ngoal (1 subgoal):\n 1. (A, C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n    S\\<^sub>1 O S\\<^sub>2\\<rangle>drae_rel", "unfolding drae_rel_def prod_rel_compp set_rel_compp"], ["proof (prove)\nusing this:\n  (A, B)\n  \\<in> {(A\\<^sub>1, A\\<^sub>2).\n         (alphabete A\\<^sub>1, alphabete A\\<^sub>2)\n         \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel \\<and>\n         (initiale A\\<^sub>1, initiale A\\<^sub>2) \\<in> S\\<^sub>1 \\<and>\n         (transitione A\\<^sub>1, transitione A\\<^sub>2)\n         \\<in> \\<langle>S\\<^sub>1 \\<times>\\<^sub>r\n                        L\\<^sub>1 \\<times>\\<^sub>r\n                        S\\<^sub>1\\<rangle>set_rel \\<and>\n         (conditione A\\<^sub>1, conditione A\\<^sub>2)\n         \\<in> \\<langle>\\<langle>S\\<^sub>1\\<rangle>set_rel \\<times>\\<^sub>r\n                        \\<langle>S\\<^sub>1\\<rangle>set_rel\\<rangle>list_rel}\n  (B, C)\n  \\<in> {(A\\<^sub>1, A\\<^sub>2).\n         (alphabete A\\<^sub>1, alphabete A\\<^sub>2)\n         \\<in> \\<langle>L\\<^sub>2\\<rangle>set_rel \\<and>\n         (initiale A\\<^sub>1, initiale A\\<^sub>2) \\<in> S\\<^sub>2 \\<and>\n         (transitione A\\<^sub>1, transitione A\\<^sub>2)\n         \\<in> \\<langle>S\\<^sub>2 \\<times>\\<^sub>r\n                        L\\<^sub>2 \\<times>\\<^sub>r\n                        S\\<^sub>2\\<rangle>set_rel \\<and>\n         (conditione A\\<^sub>1, conditione A\\<^sub>2)\n         \\<in> \\<langle>\\<langle>S\\<^sub>2\\<rangle>set_rel \\<times>\\<^sub>r\n                        \\<langle>S\\<^sub>2\\<rangle>set_rel\\<rangle>list_rel}\n\ngoal (1 subgoal):\n 1. (A, C)\n    \\<in> {(A\\<^sub>1, A\\<^sub>2).\n           (alphabete A\\<^sub>1, alphabete A\\<^sub>2)\n           \\<in> \\<langle>L\\<^sub>1\\<rangle>set_rel O\n                 \\<langle>L\\<^sub>2\\<rangle>set_rel \\<and>\n           (initiale A\\<^sub>1, initiale A\\<^sub>2)\n           \\<in> S\\<^sub>1 O S\\<^sub>2 \\<and>\n           (transitione A\\<^sub>1, transitione A\\<^sub>2)\n           \\<in> \\<langle>S\\<^sub>1 \\<times>\\<^sub>r\n                          L\\<^sub>1 \\<times>\\<^sub>r\n                          S\\<^sub>1\\<rangle>set_rel O\n                 \\<langle>S\\<^sub>2 \\<times>\\<^sub>r\n                          L\\<^sub>2 \\<times>\\<^sub>r\n                          S\\<^sub>2\\<rangle>set_rel \\<and>\n           (conditione A\\<^sub>1, conditione A\\<^sub>2)\n           \\<in> \\<langle>(\\<langle>S\\<^sub>1\\<rangle>set_rel \\<times>\\<^sub>r\n                           \\<langle>S\\<^sub>1\\<rangle>set_rel) O\n                          (\\<langle>S\\<^sub>2\\<rangle>set_rel \\<times>\\<^sub>r\n                           \\<langle>S\\<^sub>2\\<rangle>set_rel)\\<rangle>list_rel}", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>(?A, ?B) \\<in> \\<langle>L\\<^sub>1, S\\<^sub>1\\<rangle>drae_rel;\n   (?B, ?C) \\<in> \\<langle>L\\<^sub>2, S\\<^sub>2\\<rangle>drae_rel\\<rbrakk>\n  \\<Longrightarrow> (?A, ?C) \\<in> \\<langle>L\\<^sub>1 O L\\<^sub>2,\n                    S\\<^sub>1 O S\\<^sub>2\\<rangle>drae_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "(* TODO: why do we need all this setup? can't i_of_rel do the trick? *)"], ["", "consts i_drae_scheme :: \"interface \\<Rightarrow> interface \\<Rightarrow> interface\""], ["", "context\n  begin"], ["", "interpretation autoref_syn"], ["proof (prove)\ngoal:\nNo subgoals!", "by this"], ["", "lemma drae_scheme_itype[autoref_itype]:\n      \"drae ::\\<^sub>i \\<langle>L\\<rangle>\\<^sub>i i_set \\<rightarrow>\\<^sub>i S \\<rightarrow>\\<^sub>i \\<langle>\\<langle>S, \\<langle>L, S\\<rangle>\\<^sub>i i_prod\\<rangle>\\<^sub>i i_prod\\<rangle>\\<^sub>i i_set \\<rightarrow>\\<^sub>i\n        \\<langle>\\<langle>\\<langle>S\\<rangle>\\<^sub>i i_set, \\<langle>S\\<rangle>\\<^sub>i i_set\\<rangle>\\<^sub>i i_prod\\<rangle>\\<^sub>i i_list \\<rightarrow>\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_drae_scheme\"\n      \"alphabete ::\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_drae_scheme \\<rightarrow>\\<^sub>i \\<langle>L\\<rangle>\\<^sub>i i_set\"\n      \"initiale ::\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_drae_scheme \\<rightarrow>\\<^sub>i S\"\n      \"transitione ::\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_drae_scheme \\<rightarrow>\\<^sub>i \\<langle>\\<langle>S, \\<langle>L, S\\<rangle>\\<^sub>i i_prod\\<rangle>\\<^sub>i i_prod\\<rangle>\\<^sub>i i_set\"\n      \"conditione ::\\<^sub>i \\<langle>L, S\\<rangle>\\<^sub>i i_drae_scheme \\<rightarrow>\\<^sub>i \\<langle>\\<langle>\\<langle>S\\<rangle>\\<^sub>i i_set, \\<langle>S\\<rangle>\\<^sub>i i_set\\<rangle>\\<^sub>i i_prod\\<rangle>\\<^sub>i i_list\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (drae ::\\<^sub>i\n     \\<langle>L\\<rangle>\\<^sub>ii_set \\<rightarrow>\\<^sub>i\n     S \\<rightarrow>\\<^sub>i\n     \\<langle>\\<langle>S, \\<langle>L,\n     S\\<rangle>\\<^sub>ii_prod\\<rangle>\\<^sub>ii_prod\\<rangle>\\<^sub>ii_set \\<rightarrow>\\<^sub>i\n     \\<langle>\\<langle>\\<langle>S\\<rangle>\\<^sub>ii_set,\n     \\<langle>S\\<rangle>\\<^sub>ii_set\\<rangle>\\<^sub>ii_prod\\<rangle>\\<^sub>ii_list \\<rightarrow>\\<^sub>i\n     \\<langle>L, S\\<rangle>\\<^sub>ii_drae_scheme &&&\n     alphabete ::\\<^sub>i\n     \\<langle>L, S\\<rangle>\\<^sub>ii_drae_scheme \\<rightarrow>\\<^sub>i\n     \\<langle>L\\<rangle>\\<^sub>ii_set) &&&\n    initiale ::\\<^sub>i\n    \\<langle>L, S\\<rangle>\\<^sub>ii_drae_scheme \\<rightarrow>\\<^sub>i S &&&\n    transitione ::\\<^sub>i\n    \\<langle>L, S\\<rangle>\\<^sub>ii_drae_scheme \\<rightarrow>\\<^sub>i\n    \\<langle>\\<langle>S, \\<langle>L,\n    S\\<rangle>\\<^sub>ii_prod\\<rangle>\\<^sub>ii_prod\\<rangle>\\<^sub>ii_set &&&\n    conditione ::\\<^sub>i\n    \\<langle>L, S\\<rangle>\\<^sub>ii_drae_scheme \\<rightarrow>\\<^sub>i\n    \\<langle>\\<langle>\\<langle>S\\<rangle>\\<^sub>ii_set,\n    \\<langle>S\\<rangle>\\<^sub>ii_set\\<rangle>\\<^sub>ii_prod\\<rangle>\\<^sub>ii_list", "by auto"], ["", "end"], ["", "datatype ('label, 'state) draei = draei\n    (alphabetei: \"'label list\")\n    (initialei: \"'state\")\n    (transitionei: \"('state \\<times> 'label \\<times> 'state) list\")\n    (conditionei: \"('state list \\<times> 'state list) list\")"], ["", "definition draei_rel where\n    [to_relAPP]: \"draei_rel L S \\<equiv> {(A\\<^sub>1, A\\<^sub>2).\n      (alphabetei A\\<^sub>1, alphabetei A\\<^sub>2) \\<in> \\<langle>L\\<rangle> list_rel \\<and>\n      (initialei A\\<^sub>1, initialei A\\<^sub>2) \\<in> S \\<and>\n      (transitionei A\\<^sub>1, transitionei A\\<^sub>2) \\<in> \\<langle>S \\<times>\\<^sub>r L \\<times>\\<^sub>r S\\<rangle> list_rel \\<and>\n      (conditionei A\\<^sub>1, conditionei A\\<^sub>2) \\<in> \\<langle>\\<langle>S\\<rangle> list_rel \\<times>\\<^sub>r \\<langle>S\\<rangle> list_rel\\<rangle> list_rel}\""], ["", "lemma draei_param[param, autoref_rules]:\n    \"(draei, draei) \\<in> \\<langle>L\\<rangle> list_rel \\<rightarrow> S \\<rightarrow> \\<langle>S \\<times>\\<^sub>r L \\<times>\\<^sub>r S\\<rangle> list_rel \\<rightarrow>\n      \\<langle>\\<langle>S\\<rangle> list_rel \\<times>\\<^sub>r \\<langle>S\\<rangle> list_rel\\<rangle> list_rel \\<rightarrow> \\<langle>L, S\\<rangle> draei_rel\"\n    \"(alphabetei, alphabetei) \\<in> \\<langle>L, S\\<rangle> draei_rel \\<rightarrow> \\<langle>L\\<rangle> list_rel\"\n    \"(initialei, initialei) \\<in> \\<langle>L, S\\<rangle> draei_rel \\<rightarrow> S\"\n    \"(transitionei, transitionei) \\<in> \\<langle>L, S\\<rangle> draei_rel \\<rightarrow> \\<langle>S \\<times>\\<^sub>r L \\<times>\\<^sub>r S\\<rangle> list_rel\"\n    \"(conditionei, conditionei) \\<in> \\<langle>L, S\\<rangle> draei_rel \\<rightarrow> \\<langle>\\<langle>S\\<rangle> list_rel \\<times>\\<^sub>r \\<langle>S\\<rangle> list_rel\\<rangle> list_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((draei, draei)\n     \\<in> \\<langle>L\\<rangle>list_rel \\<rightarrow>\n           S \\<rightarrow>\n           \\<langle>S \\<times>\\<^sub>r\n                    L \\<times>\\<^sub>r S\\<rangle>list_rel \\<rightarrow>\n           \\<langle>\\<langle>S\\<rangle>list_rel \\<times>\\<^sub>r\n                    \\<langle>S\\<rangle>list_rel\\<rangle>list_rel \\<rightarrow>\n           \\<langle>L, S\\<rangle>draei_rel &&&\n     (alphabetei, alphabetei)\n     \\<in> \\<langle>L, S\\<rangle>draei_rel \\<rightarrow>\n           \\<langle>L\\<rangle>list_rel) &&&\n    (initialei, initialei)\n    \\<in> \\<langle>L, S\\<rangle>draei_rel \\<rightarrow> S &&&\n    (transitionei, transitionei)\n    \\<in> \\<langle>L, S\\<rangle>draei_rel \\<rightarrow>\n          \\<langle>S \\<times>\\<^sub>r\n                   L \\<times>\\<^sub>r S\\<rangle>list_rel &&&\n    (conditionei, conditionei)\n    \\<in> \\<langle>L, S\\<rangle>draei_rel \\<rightarrow>\n          \\<langle>\\<langle>S\\<rangle>list_rel \\<times>\\<^sub>r\n                   \\<langle>S\\<rangle>list_rel\\<rangle>list_rel", "unfolding draei_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((draei, draei)\n     \\<in> \\<langle>L\\<rangle>list_rel \\<rightarrow>\n           S \\<rightarrow>\n           \\<langle>S \\<times>\\<^sub>r\n                    L \\<times>\\<^sub>r S\\<rangle>list_rel \\<rightarrow>\n           \\<langle>\\<langle>S\\<rangle>list_rel \\<times>\\<^sub>r\n                    \\<langle>S\\<rangle>list_rel\\<rangle>list_rel \\<rightarrow>\n           {(A\\<^sub>1, A\\<^sub>2).\n            (alphabetei A\\<^sub>1, alphabetei A\\<^sub>2)\n            \\<in> \\<langle>L\\<rangle>list_rel \\<and>\n            (initialei A\\<^sub>1, initialei A\\<^sub>2) \\<in> S \\<and>\n            (transitionei A\\<^sub>1, transitionei A\\<^sub>2)\n            \\<in> \\<langle>S \\<times>\\<^sub>r\n                           L \\<times>\\<^sub>r S\\<rangle>list_rel \\<and>\n            (conditionei A\\<^sub>1, conditionei A\\<^sub>2)\n            \\<in> \\<langle>\\<langle>S\\<rangle>list_rel \\<times>\\<^sub>r\n                           \\<langle>S\\<rangle>list_rel\\<rangle>list_rel} &&&\n     (alphabetei, alphabetei)\n     \\<in> {(A\\<^sub>1, A\\<^sub>2).\n            (alphabetei A\\<^sub>1, alphabetei A\\<^sub>2)\n            \\<in> \\<langle>L\\<rangle>list_rel \\<and>\n            (initialei A\\<^sub>1, initialei A\\<^sub>2) \\<in> S \\<and>\n            (transitionei A\\<^sub>1, transitionei A\\<^sub>2)\n            \\<in> \\<langle>S \\<times>\\<^sub>r\n                           L \\<times>\\<^sub>r S\\<rangle>list_rel \\<and>\n            (conditionei A\\<^sub>1, conditionei A\\<^sub>2)\n            \\<in> \\<langle>\\<langle>S\\<rangle>list_rel \\<times>\\<^sub>r\n                           \\<langle>S\\<rangle>list_rel\\<rangle>list_rel} \\<rightarrow>\n           \\<langle>L\\<rangle>list_rel) &&&\n    (initialei, initialei)\n    \\<in> {(A\\<^sub>1, A\\<^sub>2).\n           (alphabetei A\\<^sub>1, alphabetei A\\<^sub>2)\n           \\<in> \\<langle>L\\<rangle>list_rel \\<and>\n           (initialei A\\<^sub>1, initialei A\\<^sub>2) \\<in> S \\<and>\n           (transitionei A\\<^sub>1, transitionei A\\<^sub>2)\n           \\<in> \\<langle>S \\<times>\\<^sub>r\n                          L \\<times>\\<^sub>r S\\<rangle>list_rel \\<and>\n           (conditionei A\\<^sub>1, conditionei A\\<^sub>2)\n           \\<in> \\<langle>\\<langle>S\\<rangle>list_rel \\<times>\\<^sub>r\n                          \\<langle>S\\<rangle>list_rel\\<rangle>list_rel} \\<rightarrow>\n          S &&&\n    (transitionei, transitionei)\n    \\<in> {(A\\<^sub>1, A\\<^sub>2).\n           (alphabetei A\\<^sub>1, alphabetei A\\<^sub>2)\n           \\<in> \\<langle>L\\<rangle>list_rel \\<and>\n           (initialei A\\<^sub>1, initialei A\\<^sub>2) \\<in> S \\<and>\n           (transitionei A\\<^sub>1, transitionei A\\<^sub>2)\n           \\<in> \\<langle>S \\<times>\\<^sub>r\n                          L \\<times>\\<^sub>r S\\<rangle>list_rel \\<and>\n           (conditionei A\\<^sub>1, conditionei A\\<^sub>2)\n           \\<in> \\<langle>\\<langle>S\\<rangle>list_rel \\<times>\\<^sub>r\n                          \\<langle>S\\<rangle>list_rel\\<rangle>list_rel} \\<rightarrow>\n          \\<langle>S \\<times>\\<^sub>r\n                   L \\<times>\\<^sub>r S\\<rangle>list_rel &&&\n    (conditionei, conditionei)\n    \\<in> {(A\\<^sub>1, A\\<^sub>2).\n           (alphabetei A\\<^sub>1, alphabetei A\\<^sub>2)\n           \\<in> \\<langle>L\\<rangle>list_rel \\<and>\n           (initialei A\\<^sub>1, initialei A\\<^sub>2) \\<in> S \\<and>\n           (transitionei A\\<^sub>1, transitionei A\\<^sub>2)\n           \\<in> \\<langle>S \\<times>\\<^sub>r\n                          L \\<times>\\<^sub>r S\\<rangle>list_rel \\<and>\n           (conditionei A\\<^sub>1, conditionei A\\<^sub>2)\n           \\<in> \\<langle>\\<langle>S\\<rangle>list_rel \\<times>\\<^sub>r\n                          \\<langle>S\\<rangle>list_rel\\<rangle>list_rel} \\<rightarrow>\n          \\<langle>\\<langle>S\\<rangle>list_rel \\<times>\\<^sub>r\n                   \\<langle>S\\<rangle>list_rel\\<rangle>list_rel", "by auto"], ["", "definition draei_drae_rel where\n    [to_relAPP]: \"draei_drae_rel L S \\<equiv> {(A\\<^sub>1, A\\<^sub>2).\n      (alphabetei A\\<^sub>1, alphabete A\\<^sub>2) \\<in> \\<langle>L\\<rangle> list_set_rel \\<and>\n      (initialei A\\<^sub>1, initiale A\\<^sub>2) \\<in> S \\<and>\n      (transitionei A\\<^sub>1, transitione A\\<^sub>2) \\<in> \\<langle>S \\<times>\\<^sub>r L \\<times>\\<^sub>r S\\<rangle> list_set_rel \\<and>\n      (conditionei A\\<^sub>1, conditione A\\<^sub>2) \\<in> \\<langle>\\<langle>S\\<rangle> list_set_rel \\<times>\\<^sub>r \\<langle>S\\<rangle> list_set_rel\\<rangle> list_rel}\""], ["", "lemmas [autoref_rel_intf] = REL_INTFI[of draei_drae_rel i_drae_scheme]"], ["", "lemma draei_drae_param[param, autoref_rules]:\n    \"(draei, drae) \\<in> \\<langle>L\\<rangle> list_set_rel \\<rightarrow> S \\<rightarrow> \\<langle>S \\<times>\\<^sub>r L \\<times>\\<^sub>r S\\<rangle> list_set_rel \\<rightarrow>\n      \\<langle>\\<langle>S\\<rangle> list_set_rel \\<times>\\<^sub>r \\<langle>S\\<rangle> list_set_rel\\<rangle> list_rel \\<rightarrow> \\<langle>L, S\\<rangle> draei_drae_rel\"\n    \"(alphabetei, alphabete) \\<in> \\<langle>L, S\\<rangle> draei_drae_rel \\<rightarrow> \\<langle>L\\<rangle> list_set_rel\"\n    \"(initialei, initiale) \\<in> \\<langle>L, S\\<rangle> draei_drae_rel \\<rightarrow> S\"\n    \"(transitionei, transitione) \\<in> \\<langle>L, S\\<rangle> draei_drae_rel \\<rightarrow> \\<langle>S \\<times>\\<^sub>r L \\<times>\\<^sub>r S\\<rangle> list_set_rel\"\n    \"(conditionei, conditione) \\<in> \\<langle>L, S\\<rangle> draei_drae_rel \\<rightarrow> \\<langle>\\<langle>S\\<rangle> list_set_rel \\<times>\\<^sub>r \\<langle>S\\<rangle> list_set_rel\\<rangle> list_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((draei, drae)\n     \\<in> \\<langle>L\\<rangle>list_set_rel \\<rightarrow>\n           S \\<rightarrow>\n           \\<langle>S \\<times>\\<^sub>r\n                    L \\<times>\\<^sub>r S\\<rangle>list_set_rel \\<rightarrow>\n           \\<langle>\\<langle>S\\<rangle>list_set_rel \\<times>\\<^sub>r\n                    \\<langle>S\\<rangle>list_set_rel\\<rangle>list_rel \\<rightarrow>\n           \\<langle>L, S\\<rangle>draei_drae_rel &&&\n     (alphabetei, alphabete)\n     \\<in> \\<langle>L, S\\<rangle>draei_drae_rel \\<rightarrow>\n           \\<langle>L\\<rangle>list_set_rel) &&&\n    (initialei, initiale)\n    \\<in> \\<langle>L, S\\<rangle>draei_drae_rel \\<rightarrow> S &&&\n    (transitionei, transitione)\n    \\<in> \\<langle>L, S\\<rangle>draei_drae_rel \\<rightarrow>\n          \\<langle>S \\<times>\\<^sub>r\n                   L \\<times>\\<^sub>r S\\<rangle>list_set_rel &&&\n    (conditionei, conditione)\n    \\<in> \\<langle>L, S\\<rangle>draei_drae_rel \\<rightarrow>\n          \\<langle>\\<langle>S\\<rangle>list_set_rel \\<times>\\<^sub>r\n                   \\<langle>S\\<rangle>list_set_rel\\<rangle>list_rel", "unfolding draei_drae_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((draei, drae)\n     \\<in> \\<langle>L\\<rangle>list_set_rel \\<rightarrow>\n           S \\<rightarrow>\n           \\<langle>S \\<times>\\<^sub>r\n                    L \\<times>\\<^sub>r S\\<rangle>list_set_rel \\<rightarrow>\n           \\<langle>\\<langle>S\\<rangle>list_set_rel \\<times>\\<^sub>r\n                    \\<langle>S\\<rangle>list_set_rel\\<rangle>list_rel \\<rightarrow>\n           {(A\\<^sub>1, A\\<^sub>2).\n            (alphabetei A\\<^sub>1, alphabete A\\<^sub>2)\n            \\<in> \\<langle>L\\<rangle>list_set_rel \\<and>\n            (initialei A\\<^sub>1, initiale A\\<^sub>2) \\<in> S \\<and>\n            (transitionei A\\<^sub>1, transitione A\\<^sub>2)\n            \\<in> \\<langle>S \\<times>\\<^sub>r\n                           L \\<times>\\<^sub>r S\\<rangle>list_set_rel \\<and>\n            (conditionei A\\<^sub>1, conditione A\\<^sub>2)\n            \\<in> \\<langle>\\<langle>S\\<rangle>list_set_rel \\<times>\\<^sub>r\n                           \\<langle>S\\<rangle>list_set_rel\\<rangle>list_rel} &&&\n     (alphabetei, alphabete)\n     \\<in> {(A\\<^sub>1, A\\<^sub>2).\n            (alphabetei A\\<^sub>1, alphabete A\\<^sub>2)\n            \\<in> \\<langle>L\\<rangle>list_set_rel \\<and>\n            (initialei A\\<^sub>1, initiale A\\<^sub>2) \\<in> S \\<and>\n            (transitionei A\\<^sub>1, transitione A\\<^sub>2)\n            \\<in> \\<langle>S \\<times>\\<^sub>r\n                           L \\<times>\\<^sub>r S\\<rangle>list_set_rel \\<and>\n            (conditionei A\\<^sub>1, conditione A\\<^sub>2)\n            \\<in> \\<langle>\\<langle>S\\<rangle>list_set_rel \\<times>\\<^sub>r\n                           \\<langle>S\\<rangle>list_set_rel\\<rangle>list_rel} \\<rightarrow>\n           \\<langle>L\\<rangle>list_set_rel) &&&\n    (initialei, initiale)\n    \\<in> {(A\\<^sub>1, A\\<^sub>2).\n           (alphabetei A\\<^sub>1, alphabete A\\<^sub>2)\n           \\<in> \\<langle>L\\<rangle>list_set_rel \\<and>\n           (initialei A\\<^sub>1, initiale A\\<^sub>2) \\<in> S \\<and>\n           (transitionei A\\<^sub>1, transitione A\\<^sub>2)\n           \\<in> \\<langle>S \\<times>\\<^sub>r\n                          L \\<times>\\<^sub>r S\\<rangle>list_set_rel \\<and>\n           (conditionei A\\<^sub>1, conditione A\\<^sub>2)\n           \\<in> \\<langle>\\<langle>S\\<rangle>list_set_rel \\<times>\\<^sub>r\n                          \\<langle>S\\<rangle>list_set_rel\\<rangle>list_rel} \\<rightarrow>\n          S &&&\n    (transitionei, transitione)\n    \\<in> {(A\\<^sub>1, A\\<^sub>2).\n           (alphabetei A\\<^sub>1, alphabete A\\<^sub>2)\n           \\<in> \\<langle>L\\<rangle>list_set_rel \\<and>\n           (initialei A\\<^sub>1, initiale A\\<^sub>2) \\<in> S \\<and>\n           (transitionei A\\<^sub>1, transitione A\\<^sub>2)\n           \\<in> \\<langle>S \\<times>\\<^sub>r\n                          L \\<times>\\<^sub>r S\\<rangle>list_set_rel \\<and>\n           (conditionei A\\<^sub>1, conditione A\\<^sub>2)\n           \\<in> \\<langle>\\<langle>S\\<rangle>list_set_rel \\<times>\\<^sub>r\n                          \\<langle>S\\<rangle>list_set_rel\\<rangle>list_rel} \\<rightarrow>\n          \\<langle>S \\<times>\\<^sub>r\n                   L \\<times>\\<^sub>r S\\<rangle>list_set_rel &&&\n    (conditionei, conditione)\n    \\<in> {(A\\<^sub>1, A\\<^sub>2).\n           (alphabetei A\\<^sub>1, alphabete A\\<^sub>2)\n           \\<in> \\<langle>L\\<rangle>list_set_rel \\<and>\n           (initialei A\\<^sub>1, initiale A\\<^sub>2) \\<in> S \\<and>\n           (transitionei A\\<^sub>1, transitione A\\<^sub>2)\n           \\<in> \\<langle>S \\<times>\\<^sub>r\n                          L \\<times>\\<^sub>r S\\<rangle>list_set_rel \\<and>\n           (conditionei A\\<^sub>1, conditione A\\<^sub>2)\n           \\<in> \\<langle>\\<langle>S\\<rangle>list_set_rel \\<times>\\<^sub>r\n                          \\<langle>S\\<rangle>list_set_rel\\<rangle>list_rel} \\<rightarrow>\n          \\<langle>\\<langle>S\\<rangle>list_set_rel \\<times>\\<^sub>r\n                   \\<langle>S\\<rangle>list_set_rel\\<rangle>list_rel", "by auto"], ["", "definition draei_drae where\n    \"draei_drae A \\<equiv> drae (set (alphabetei A)) (initialei A)\n      (set (transitionei A)) (map (map_prod set set) (conditionei A))\""], ["", "lemma draei_drae_id_param[param]: \"(draei_drae, id) \\<in> \\<langle>L, S\\<rangle> draei_drae_rel \\<rightarrow> \\<langle>L, S\\<rangle> drae_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (draei_drae, id)\n    \\<in> \\<langle>L, S\\<rangle>draei_drae_rel \\<rightarrow> \\<langle>L,\n          S\\<rangle>drae_rel", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a') \\<in> \\<langle>L, S\\<rangle>draei_drae_rel \\<Longrightarrow>\n       (draei_drae a, id a') \\<in> \\<langle>L, S\\<rangle>drae_rel", "fix Ai A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a') \\<in> \\<langle>L, S\\<rangle>draei_drae_rel \\<Longrightarrow>\n       (draei_drae a, id a') \\<in> \\<langle>L, S\\<rangle>drae_rel", "assume 1: \"(Ai, A) \\<in> \\<langle>L, S\\<rangle> draei_drae_rel\""], ["proof (state)\nthis:\n  (Ai, A) \\<in> \\<langle>L, S\\<rangle>draei_drae_rel\n\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a') \\<in> \\<langle>L, S\\<rangle>draei_drae_rel \\<Longrightarrow>\n       (draei_drae a, id a') \\<in> \\<langle>L, S\\<rangle>drae_rel", "have 2: \"draei_drae Ai = drae (set (alphabetei Ai)) (initialei Ai)\n      (set (transitionei Ai)) (map (map_prod set set) (conditionei Ai))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. draei_drae Ai =\n    drae (set (alphabetei Ai)) (initialei Ai) (set (transitionei Ai))\n     (map (map_prod set set) (conditionei Ai))", "unfolding draei_drae_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. drae (set (alphabetei Ai)) (initialei Ai) (set (transitionei Ai))\n     (map (map_prod set set) (conditionei Ai)) =\n    drae (set (alphabetei Ai)) (initialei Ai) (set (transitionei Ai))\n     (map (map_prod set set) (conditionei Ai))", "by rule"], ["proof (state)\nthis:\n  draei_drae Ai =\n  drae (set (alphabetei Ai)) (initialei Ai) (set (transitionei Ai))\n   (map (map_prod set set) (conditionei Ai))\n\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a') \\<in> \\<langle>L, S\\<rangle>draei_drae_rel \\<Longrightarrow>\n       (draei_drae a, id a') \\<in> \\<langle>L, S\\<rangle>drae_rel", "have 3: \"id A = drae (id (alphabete A)) (initiale A)\n      (id (transitione A)) (map (map_prod id id) (conditione A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. id A =\n    drae (id (alphabete A)) (initiale A) (id (transitione A))\n     (map (map_prod id id) (conditione A))", "by simp"], ["proof (state)\nthis:\n  id A =\n  drae (id (alphabete A)) (initiale A) (id (transitione A))\n   (map (map_prod id id) (conditione A))\n\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a') \\<in> \\<langle>L, S\\<rangle>draei_drae_rel \\<Longrightarrow>\n       (draei_drae a, id a') \\<in> \\<langle>L, S\\<rangle>drae_rel", "show \"(draei_drae Ai, id A) \\<in> \\<langle>L, S\\<rangle> drae_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (draei_drae Ai, id A) \\<in> \\<langle>L, S\\<rangle>drae_rel", "unfolding 2 3"], ["proof (prove)\ngoal (1 subgoal):\n 1. (drae (set (alphabetei Ai)) (initialei Ai) (set (transitionei Ai))\n      (map (map_prod set set) (conditionei Ai)),\n     drae (id (alphabete A)) (initiale A) (id (transitione A))\n      (map (map_prod id id) (conditione A)))\n    \\<in> \\<langle>L, S\\<rangle>drae_rel", "using 1"], ["proof (prove)\nusing this:\n  (Ai, A) \\<in> \\<langle>L, S\\<rangle>draei_drae_rel\n\ngoal (1 subgoal):\n 1. (drae (set (alphabetei Ai)) (initialei Ai) (set (transitionei Ai))\n      (map (map_prod set set) (conditionei Ai)),\n     drae (id (alphabete A)) (initiale A) (id (transitione A))\n      (map (map_prod id id) (conditione A)))\n    \\<in> \\<langle>L, S\\<rangle>drae_rel", "by parametricity"], ["proof (state)\nthis:\n  (draei_drae Ai, id A) \\<in> \\<langle>L, S\\<rangle>drae_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation \"transitions L S s \\<equiv> \\<Union> a \\<in> L. \\<Union> p \\<in> S. {p} \\<times> {a} \\<times> {s a p}\""], ["", "abbreviation \"succs T a p \\<equiv> the_elem ((T `` {p}) `` {a})\""], ["", "definition wft :: \"'label set \\<Rightarrow> 'state set \\<Rightarrow> ('state \\<times> 'label \\<times> 'state) set \\<Rightarrow> bool\" where\n    \"wft L S T \\<equiv> \\<forall> a \\<in> L. \\<forall> p \\<in> S. is_singleton ((T `` {p}) `` {a})\""], ["", "lemma wft_param[param]:\n    assumes \"bijective S\" \"bijective L\"\n    shows \"(wft, wft) \\<in> \\<langle>L\\<rangle> set_rel \\<rightarrow> \\<langle>S\\<rangle> set_rel \\<rightarrow> \\<langle>S \\<times>\\<^sub>r L \\<times>\\<^sub>r S\\<rangle> set_rel \\<rightarrow> bool_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (wft, wft)\n    \\<in> \\<langle>L\\<rangle>set_rel \\<rightarrow>\n          \\<langle>S\\<rangle>set_rel \\<rightarrow>\n          \\<langle>S \\<times>\\<^sub>r\n                   L \\<times>\\<^sub>r S\\<rangle>set_rel \\<rightarrow>\n          bool_rel", "using assms"], ["proof (prove)\nusing this:\n  bijective S\n  bijective L\n\ngoal (1 subgoal):\n 1. (wft, wft)\n    \\<in> \\<langle>L\\<rangle>set_rel \\<rightarrow>\n          \\<langle>S\\<rangle>set_rel \\<rightarrow>\n          \\<langle>S \\<times>\\<^sub>r\n                   L \\<times>\\<^sub>r S\\<rangle>set_rel \\<rightarrow>\n          bool_rel", "unfolding wft_def"], ["proof (prove)\nusing this:\n  bijective S\n  bijective L\n\ngoal (1 subgoal):\n 1. (\\<lambda>L S T.\n        \\<forall>a\\<in>L.\n           \\<forall>p\\<in>S. is_singleton ((T `` {p}) `` {a}),\n     \\<lambda>L S T.\n        \\<forall>a\\<in>L.\n           \\<forall>p\\<in>S. is_singleton ((T `` {p}) `` {a}))\n    \\<in> \\<langle>L\\<rangle>set_rel \\<rightarrow>\n          \\<langle>S\\<rangle>set_rel \\<rightarrow>\n          \\<langle>S \\<times>\\<^sub>r\n                   L \\<times>\\<^sub>r S\\<rangle>set_rel \\<rightarrow>\n          bool_rel", "by parametricity"], ["", "lemma wft_transitions: \"wft L S (transitions L S s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wft L S (transitions L S s)", "unfolding wft_def is_singleton_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>L.\n       \\<forall>p\\<in>S. \\<exists>x. (transitions L S s `` {p}) `` {a} = {x}", "by auto"], ["", "definition dra_drae where \"dra_drae A \\<equiv> drae (alphabet A) (initial A) \n    (transitions (alphabet A) (nodes A) (transition A))\n    (map (\\<lambda> (P, Q). (Set.filter P (nodes A), Set.filter Q (nodes A))) (condition A))\""], ["", "definition drae_dra where \"drae_dra A \\<equiv> dra (alphabete A) (initiale A)\n    (succs (transitione A)) (map (\\<lambda> (I, F). (\\<lambda> p. p \\<in> I, \\<lambda> p. p \\<in> F)) (conditione A))\""], ["", "lemma set_rel_Domain_Range[intro!, simp]: \"(Domain A, Range A) \\<in> \\<langle>A\\<rangle> set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Domain A, Range A) \\<in> \\<langle>A\\<rangle>set_rel", "unfolding set_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Domain A, Range A)\n    \\<in> {(Aa, B).\n           (\\<forall>x\\<in>Aa. \\<exists>y\\<in>B. (x, y) \\<in> A) \\<and>\n           (\\<forall>y\\<in>B. \\<exists>x\\<in>Aa. (x, y) \\<in> A)}", "by auto"], ["", "lemma dra_drae_param[param]: \"(dra_drae, dra_drae) \\<in> \\<langle>L, S\\<rangle> dra_rel \\<rightarrow> \\<langle>L, S\\<rangle> drae_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dra_drae, dra_drae)\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow> \\<langle>L,\n          S\\<rangle>drae_rel", "unfolding dra_drae_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>A.\n        drae (alphabet A) (initial A)\n         (transitions (alphabet A) (nodes A) (transition A))\n         (map (\\<lambda>(P, Q).\n                  (Set.filter P (nodes A), Set.filter Q (nodes A)))\n           (condition A)),\n     \\<lambda>A.\n        drae (alphabet A) (initial A)\n         (transitions (alphabet A) (nodes A) (transition A))\n         (map (\\<lambda>(P, Q).\n                  (Set.filter P (nodes A), Set.filter Q (nodes A)))\n           (condition A)))\n    \\<in> \\<langle>L, S\\<rangle>dra_rel \\<rightarrow> \\<langle>L,\n          S\\<rangle>drae_rel", "by parametricity"], ["", "lemma drae_dra_param[param]:\n    assumes \"bijective L\" \"bijective S\"\n    assumes \"wft (Range L) (Range S) (transitione B)\"\n    assumes [param]: \"(A, B) \\<in> \\<langle>L, S\\<rangle> drae_rel\"\n    shows \"(drae_dra A, drae_dra B) \\<in> \\<langle>L, S\\<rangle> dra_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (drae_dra A, drae_dra B) \\<in> \\<langle>L, S\\<rangle>dra_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (drae_dra A, drae_dra B) \\<in> \\<langle>L, S\\<rangle>dra_rel", "have 1: \"(wft (Domain L) (Domain S) (transitione A), wft (Range L) (Range S) (transitione B)) \\<in> bool_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (wft (Domain L) (Domain S) (transitione A),\n     wft (Range L) (Range S) (transitione B))\n    \\<in> bool_rel", "using assms(1, 2)"], ["proof (prove)\nusing this:\n  bijective L\n  bijective S\n\ngoal (1 subgoal):\n 1. (wft (Domain L) (Domain S) (transitione A),\n     wft (Range L) (Range S) (transitione B))\n    \\<in> bool_rel", "by parametricity auto"], ["proof (state)\nthis:\n  (wft (Domain L) (Domain S) (transitione A),\n   wft (Range L) (Range S) (transitione B))\n  \\<in> bool_rel\n\ngoal (1 subgoal):\n 1. (drae_dra A, drae_dra B) \\<in> \\<langle>L, S\\<rangle>dra_rel", "have 2: \"wft (Domain L) (Domain S) (transitione A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wft (Domain L) (Domain S) (transitione A)", "using assms(3) 1"], ["proof (prove)\nusing this:\n  wft (Range L) (Range S) (transitione B)\n  (wft (Domain L) (Domain S) (transitione A),\n   wft (Range L) (Range S) (transitione B))\n  \\<in> bool_rel\n\ngoal (1 subgoal):\n 1. wft (Domain L) (Domain S) (transitione A)", "by simp"], ["proof (state)\nthis:\n  wft (Domain L) (Domain S) (transitione A)\n\ngoal (1 subgoal):\n 1. (drae_dra A, drae_dra B) \\<in> \\<langle>L, S\\<rangle>dra_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (drae_dra A, drae_dra B) \\<in> \\<langle>L, S\\<rangle>dra_rel", "using assms(1 - 3) 2 assms(2)[unfolded bijective_alt]"], ["proof (prove)\nusing this:\n  bijective L\n  bijective S\n  wft (Range L) (Range S) (transitione B)\n  wft (Domain L) (Domain S) (transitione A)\n  single_valued S \\<and> single_valued (S\\<inverse>)\n\ngoal (1 subgoal):\n 1. (drae_dra A, drae_dra B) \\<in> \\<langle>L, S\\<rangle>dra_rel", "unfolding drae_dra_def wft_def"], ["proof (prove)\nusing this:\n  bijective L\n  bijective S\n  \\<forall>a\\<in>Range L.\n     \\<forall>p\\<in>Range S. is_singleton ((transitione B `` {p}) `` {a})\n  \\<forall>a\\<in>Domain L.\n     \\<forall>p\\<in>Domain S. is_singleton ((transitione A `` {p}) `` {a})\n  single_valued S \\<and> single_valued (S\\<inverse>)\n\ngoal (1 subgoal):\n 1. (dra (alphabete A) (initiale A) (succs (transitione A))\n      (map (\\<lambda>(I, F). (\\<lambda>p. p \\<in> I, \\<lambda>p. p \\<in> F))\n        (conditione A)),\n     dra (alphabete B) (initiale B) (succs (transitione B))\n      (map (\\<lambda>(I, F). (\\<lambda>p. p \\<in> I, \\<lambda>p. p \\<in> F))\n        (conditione B)))\n    \\<in> \\<langle>L, S\\<rangle>dra_rel", "by parametricity force+"], ["proof (state)\nthis:\n  (drae_dra A, drae_dra B) \\<in> \\<langle>L, S\\<rangle>dra_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma succs_transitions_param[param]:\n    \"(succs \\<circ> transitions L S, id) \\<in> (Id_on L \\<rightarrow> Id_on S \\<rightarrow> Id_on S) \\<rightarrow> (Id_on L \\<rightarrow> Id_on S \\<rightarrow> Id_on S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((succs \\<circ>\\<circ>\\<circ> transitions) L S, id)\n    \\<in> (Id_on L \\<rightarrow>\n           Id_on S \\<rightarrow> Id_on S) \\<rightarrow>\n          Id_on L \\<rightarrow> Id_on S \\<rightarrow> Id_on S", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a')\n       \\<in> Id_on L \\<rightarrow>\n             Id_on S \\<rightarrow> Id_on S \\<Longrightarrow>\n       ((succs \\<circ>\\<circ>\\<circ> transitions) L S a, id a')\n       \\<in> Id_on L \\<rightarrow> Id_on S \\<rightarrow> Id_on S", "fix f g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a')\n       \\<in> Id_on L \\<rightarrow>\n             Id_on S \\<rightarrow> Id_on S \\<Longrightarrow>\n       ((succs \\<circ>\\<circ>\\<circ> transitions) L S a, id a')\n       \\<in> Id_on L \\<rightarrow> Id_on S \\<rightarrow> Id_on S", "assume 1[param]: \"(f, g) \\<in> Id_on L \\<rightarrow> Id_on S \\<rightarrow> Id_on S\""], ["proof (state)\nthis:\n  (f, g) \\<in> Id_on L \\<rightarrow> Id_on S \\<rightarrow> Id_on S\n\ngoal (1 subgoal):\n 1. \\<And>a a'.\n       (a, a')\n       \\<in> Id_on L \\<rightarrow>\n             Id_on S \\<rightarrow> Id_on S \\<Longrightarrow>\n       ((succs \\<circ>\\<circ>\\<circ> transitions) L S a, id a')\n       \\<in> Id_on L \\<rightarrow> Id_on S \\<rightarrow> Id_on S", "show \"((succs \\<circ> transitions L S) f, id g) \\<in> Id_on L \\<rightarrow> Id_on S \\<rightarrow> Id_on S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((succs \\<circ>\\<circ>\\<circ> transitions) L S f, id g)\n    \\<in> Id_on L \\<rightarrow> Id_on S \\<rightarrow> Id_on S", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> (succs \\<circ>\\<circ>\\<circ> transitions) L S f a'\n                          a'a =\n                         id g a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> id g a' a'a \\<in> S", "fix a p"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> (succs \\<circ>\\<circ>\\<circ> transitions) L S f a'\n                          a'a =\n                         id g a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> id g a' a'a \\<in> S", "assume 2: \"a \\<in> L\" \"p \\<in> S\""], ["proof (state)\nthis:\n  a \\<in> L\n  p \\<in> S\n\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> (succs \\<circ>\\<circ>\\<circ> transitions) L S f a'\n                          a'a =\n                         id g a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> id g a' a'a \\<in> S", "have \"(succs \\<circ> transitions L S) f a p = succs (transitions L S f) a p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (succs \\<circ>\\<circ>\\<circ> transitions) L S f a p =\n    succs (transitions L S f) a p", "by simp"], ["proof (state)\nthis:\n  (succs \\<circ>\\<circ>\\<circ> transitions) L S f a p =\n  succs (transitions L S f) a p\n\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> (succs \\<circ>\\<circ>\\<circ> transitions) L S f a'\n                          a'a =\n                         id g a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> id g a' a'a \\<in> S", "also"], ["proof (state)\nthis:\n  (succs \\<circ>\\<circ>\\<circ> transitions) L S f a p =\n  succs (transitions L S f) a p\n\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> (succs \\<circ>\\<circ>\\<circ> transitions) L S f a'\n                          a'a =\n                         id g a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> id g a' a'a \\<in> S", "have \"(transitions L S f `` {p}) `` {a} = {f a p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (transitions L S f `` {p}) `` {a} = {f a p}", "using 2"], ["proof (prove)\nusing this:\n  a \\<in> L\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. (transitions L S f `` {p}) `` {a} = {f a p}", "by auto"], ["proof (state)\nthis:\n  (transitions L S f `` {p}) `` {a} = {f a p}\n\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> (succs \\<circ>\\<circ>\\<circ> transitions) L S f a'\n                          a'a =\n                         id g a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> id g a' a'a \\<in> S", "also"], ["proof (state)\nthis:\n  (transitions L S f `` {p}) `` {a} = {f a p}\n\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> (succs \\<circ>\\<circ>\\<circ> transitions) L S f a'\n                          a'a =\n                         id g a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> id g a' a'a \\<in> S", "have \"the_elem \\<dots> = f a p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_elem {f a p} = f a p", "by simp"], ["proof (state)\nthis:\n  the_elem {f a p} = f a p\n\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> (succs \\<circ>\\<circ>\\<circ> transitions) L S f a'\n                          a'a =\n                         id g a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> id g a' a'a \\<in> S", "also"], ["proof (state)\nthis:\n  the_elem {f a p} = f a p\n\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> (succs \\<circ>\\<circ>\\<circ> transitions) L S f a'\n                          a'a =\n                         id g a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> id g a' a'a \\<in> S", "have \"(\\<dots>, g a p) \\<in> Id_on S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f a p, g a p) \\<in> Id_on S", "using 2"], ["proof (prove)\nusing this:\n  a \\<in> L\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. (f a p, g a p) \\<in> Id_on S", "by parametricity auto"], ["proof (state)\nthis:\n  (f a p, g a p) \\<in> Id_on S\n\ngoal (2 subgoals):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> (succs \\<circ>\\<circ>\\<circ> transitions) L S f a'\n                          a'a =\n                         id g a' a'a\n 2. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> id g a' a'a \\<in> S", "finally"], ["proof (chain)\npicking this:\n  ((succs \\<circ>\\<circ>\\<circ> transitions) L S f a p, g a p) \\<in> Id_on S", "show \"(succs \\<circ> transitions L S) f a p = id g a p\""], ["proof (prove)\nusing this:\n  ((succs \\<circ>\\<circ>\\<circ> transitions) L S f a p, g a p) \\<in> Id_on S\n\ngoal (1 subgoal):\n 1. (succs \\<circ>\\<circ>\\<circ> transitions) L S f a p = id g a p", "by simp"], ["proof (state)\nthis:\n  (succs \\<circ>\\<circ>\\<circ> transitions) L S f a p = id g a p\n\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>a' \\<in> L; a'a \\<in> S\\<rbrakk>\n       \\<Longrightarrow> id g a' a'a \\<in> S", "show \"id g a p \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. id g a p \\<in> S", "using 1[param_fo] 2"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x1, ?x'1) \\<in> Id_on L; (?x, ?x') \\<in> Id_on S\\<rbrakk>\n  \\<Longrightarrow> (f ?x1 ?x, g ?x'1 ?x') \\<in> Id_on S\n  a \\<in> L\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. id g a p \\<in> S", "by simp"], ["proof (state)\nthis:\n  id g a p \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((succs \\<circ>\\<circ>\\<circ> transitions) L S f, id g)\n  \\<in> Id_on L \\<rightarrow> Id_on S \\<rightarrow> Id_on S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma drae_dra_dra_drae_param[param]:\n    \"((drae_dra \\<circ> dra_drae) A, id A) \\<in> \\<langle>Id_on (alphabet A), Id_on (nodes A)\\<rangle> dra_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((drae_dra \\<circ> dra_drae) A, id A) \\<in> \\<langle>Id_on (alphabet A),\n    Id_on (nodes A)\\<rangle>dra_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((drae_dra \\<circ> dra_drae) A, id A) \\<in> \\<langle>Id_on (alphabet A),\n    Id_on (nodes A)\\<rangle>dra_rel", "have [param]: \"(\\<lambda> (P, Q). (\\<lambda> p. p \\<in> Set.filter P (nodes A), \\<lambda> p. p \\<in> Set.filter Q (nodes A)), id) \\<in>\n      pred_rel (Id_on (nodes A)) \\<times>\\<^sub>r pred_rel (Id_on (nodes A)) \\<rightarrow> rabin_rel (Id_on (nodes A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(P, Q).\n        (\\<lambda>p. p \\<in> Set.filter P (nodes A),\n         \\<lambda>p. p \\<in> Set.filter Q (nodes A)),\n     id)\n    \\<in> (Id_on (nodes A) \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n          (Id_on (nodes A) \\<rightarrow> bool_rel) \\<rightarrow>\n          (Id_on (nodes A) \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n          (Id_on (nodes A) \\<rightarrow> bool_rel)", "unfolding fun_rel_def Id_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(P, Q).\n        (\\<lambda>p. p \\<in> Set.filter P (nodes A),\n         \\<lambda>p. p \\<in> Set.filter Q (nodes A)),\n     id)\n    \\<in> {(f, f').\n           \\<forall>(a, a')\n                    \\<in>{(f, f').\n                          \\<forall>(a, a')\n                                   \\<in>\\<Union>x\\<in>nodes A. {(x, x)}.\n                             (f a, f' a') \\<in> bool_rel} \\<times>\\<^sub>r\n                         {(f, f').\n                          \\<forall>(a, a')\n                                   \\<in>\\<Union>x\\<in>nodes A. {(x, x)}.\n                             (f a, f' a') \\<in> bool_rel}.\n              (f a, f' a')\n              \\<in> {(f, f').\n                     \\<forall>(a, a')\\<in>\\<Union>x\\<in>nodes A. {(x, x)}.\n                        (f a, f' a') \\<in> bool_rel} \\<times>\\<^sub>r\n                    {(f, f').\n                     \\<forall>(a, a')\\<in>\\<Union>x\\<in>nodes A. {(x, x)}.\n                        (f a, f' a') \\<in> bool_rel}}", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>(P, Q).\n      (\\<lambda>p. p \\<in> Set.filter P (nodes A),\n       \\<lambda>p. p \\<in> Set.filter Q (nodes A)),\n   id)\n  \\<in> (Id_on (nodes A) \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n        (Id_on (nodes A) \\<rightarrow> bool_rel) \\<rightarrow>\n        (Id_on (nodes A) \\<rightarrow> bool_rel) \\<times>\\<^sub>r\n        (Id_on (nodes A) \\<rightarrow> bool_rel)\n\ngoal (1 subgoal):\n 1. ((drae_dra \\<circ> dra_drae) A, id A) \\<in> \\<langle>Id_on (alphabet A),\n    Id_on (nodes A)\\<rangle>dra_rel", "have \"(drae_dra \\<circ> dra_drae) A = dra (alphabet A) (initial A)\n      ((succs \\<circ> transitions (alphabet A) (nodes A)) (transition A))\n      (map (\\<lambda> (P, Q). (\\<lambda> p. p \\<in> Set.filter P (nodes A), \\<lambda> p. p \\<in> Set.filter Q (nodes A))) (condition A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (drae_dra \\<circ> dra_drae) A =\n    dra (alphabet A) (initial A)\n     ((succs \\<circ>\\<circ>\\<circ> transitions) (alphabet A) (nodes A)\n       (transition A))\n     (map (\\<lambda>(P, Q).\n              (\\<lambda>p. p \\<in> Set.filter P (nodes A),\n               \\<lambda>p. p \\<in> Set.filter Q (nodes A)))\n       (condition A))", "unfolding drae_dra_def dra_drae_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>A.\n         dra (alphabete A) (initiale A) (succs (transitione A))\n          (map (\\<lambda>(I, F).\n                   (\\<lambda>p. p \\<in> I, \\<lambda>p. p \\<in> F))\n            (conditione A))) \\<circ>\n     (\\<lambda>A.\n         drae (alphabet A) (initial A)\n          (transitions (alphabet A) (nodes A) (transition A))\n          (map (\\<lambda>(P, Q).\n                   (Set.filter P (nodes A), Set.filter Q (nodes A)))\n            (condition A))))\n     A =\n    dra (alphabet A) (initial A)\n     ((succs \\<circ>\\<circ>\\<circ> transitions) (alphabet A) (nodes A)\n       (transition A))\n     (map (\\<lambda>(P, Q).\n              (\\<lambda>p. p \\<in> Set.filter P (nodes A),\n               \\<lambda>p. p \\<in> Set.filter Q (nodes A)))\n       (condition A))", "by auto"], ["proof (state)\nthis:\n  (drae_dra \\<circ> dra_drae) A =\n  dra (alphabet A) (initial A)\n   ((succs \\<circ>\\<circ>\\<circ> transitions) (alphabet A) (nodes A)\n     (transition A))\n   (map (\\<lambda>(P, Q).\n            (\\<lambda>p. p \\<in> Set.filter P (nodes A),\n             \\<lambda>p. p \\<in> Set.filter Q (nodes A)))\n     (condition A))\n\ngoal (1 subgoal):\n 1. ((drae_dra \\<circ> dra_drae) A, id A) \\<in> \\<langle>Id_on (alphabet A),\n    Id_on (nodes A)\\<rangle>dra_rel", "also"], ["proof (state)\nthis:\n  (drae_dra \\<circ> dra_drae) A =\n  dra (alphabet A) (initial A)\n   ((succs \\<circ>\\<circ>\\<circ> transitions) (alphabet A) (nodes A)\n     (transition A))\n   (map (\\<lambda>(P, Q).\n            (\\<lambda>p. p \\<in> Set.filter P (nodes A),\n             \\<lambda>p. p \\<in> Set.filter Q (nodes A)))\n     (condition A))\n\ngoal (1 subgoal):\n 1. ((drae_dra \\<circ> dra_drae) A, id A) \\<in> \\<langle>Id_on (alphabet A),\n    Id_on (nodes A)\\<rangle>dra_rel", "have \"(\\<dots>, dra (alphabet A) (initial A) (id (transition A)) (map id (condition A))) \\<in>\n      \\<langle>Id_on (alphabet A), Id_on (nodes A)\\<rangle> dra_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dra (alphabet A) (initial A)\n      ((succs \\<circ>\\<circ>\\<circ> transitions) (alphabet A) (nodes A)\n        (transition A))\n      (map (\\<lambda>(P, Q).\n               (\\<lambda>p. p \\<in> Set.filter P (nodes A),\n                \\<lambda>p. p \\<in> Set.filter Q (nodes A)))\n        (condition A)),\n     dra (alphabet A) (initial A) (id (transition A))\n      (map id (condition A)))\n    \\<in> \\<langle>Id_on (alphabet A), Id_on (nodes A)\\<rangle>dra_rel", "using dra_rel_eq"], ["proof (prove)\nusing this:\n  (?A, ?A) \\<in> \\<langle>Id_on (alphabet ?A),\n  Id_on (nodes ?A)\\<rangle>dra_rel\n\ngoal (1 subgoal):\n 1. (dra (alphabet A) (initial A)\n      ((succs \\<circ>\\<circ>\\<circ> transitions) (alphabet A) (nodes A)\n        (transition A))\n      (map (\\<lambda>(P, Q).\n               (\\<lambda>p. p \\<in> Set.filter P (nodes A),\n                \\<lambda>p. p \\<in> Set.filter Q (nodes A)))\n        (condition A)),\n     dra (alphabet A) (initial A) (id (transition A))\n      (map id (condition A)))\n    \\<in> \\<langle>Id_on (alphabet A), Id_on (nodes A)\\<rangle>dra_rel", "by parametricity auto"], ["proof (state)\nthis:\n  (dra (alphabet A) (initial A)\n    ((succs \\<circ>\\<circ>\\<circ> transitions) (alphabet A) (nodes A)\n      (transition A))\n    (map (\\<lambda>(P, Q).\n             (\\<lambda>p. p \\<in> Set.filter P (nodes A),\n              \\<lambda>p. p \\<in> Set.filter Q (nodes A)))\n      (condition A)),\n   dra (alphabet A) (initial A) (id (transition A)) (map id (condition A)))\n  \\<in> \\<langle>Id_on (alphabet A), Id_on (nodes A)\\<rangle>dra_rel\n\ngoal (1 subgoal):\n 1. ((drae_dra \\<circ> dra_drae) A, id A) \\<in> \\<langle>Id_on (alphabet A),\n    Id_on (nodes A)\\<rangle>dra_rel", "also"], ["proof (state)\nthis:\n  (dra (alphabet A) (initial A)\n    ((succs \\<circ>\\<circ>\\<circ> transitions) (alphabet A) (nodes A)\n      (transition A))\n    (map (\\<lambda>(P, Q).\n             (\\<lambda>p. p \\<in> Set.filter P (nodes A),\n              \\<lambda>p. p \\<in> Set.filter Q (nodes A)))\n      (condition A)),\n   dra (alphabet A) (initial A) (id (transition A)) (map id (condition A)))\n  \\<in> \\<langle>Id_on (alphabet A), Id_on (nodes A)\\<rangle>dra_rel\n\ngoal (1 subgoal):\n 1. ((drae_dra \\<circ> dra_drae) A, id A) \\<in> \\<langle>Id_on (alphabet A),\n    Id_on (nodes A)\\<rangle>dra_rel", "have \"dra (alphabet A) (initial A) (id (transition A)) (map id (condition A)) = id A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dra (alphabet A) (initial A) (id (transition A))\n     (map id (condition A)) =\n    id A", "by simp"], ["proof (state)\nthis:\n  dra (alphabet A) (initial A) (id (transition A)) (map id (condition A)) =\n  id A\n\ngoal (1 subgoal):\n 1. ((drae_dra \\<circ> dra_drae) A, id A) \\<in> \\<langle>Id_on (alphabet A),\n    Id_on (nodes A)\\<rangle>dra_rel", "finally"], ["proof (chain)\npicking this:\n  ((drae_dra \\<circ> dra_drae) A, id A) \\<in> \\<langle>Id_on (alphabet A),\n  Id_on (nodes A)\\<rangle>dra_rel", "show ?thesis"], ["proof (prove)\nusing this:\n  ((drae_dra \\<circ> dra_drae) A, id A) \\<in> \\<langle>Id_on (alphabet A),\n  Id_on (nodes A)\\<rangle>dra_rel\n\ngoal (1 subgoal):\n 1. ((drae_dra \\<circ> dra_drae) A, id A) \\<in> \\<langle>Id_on (alphabet A),\n    Id_on (nodes A)\\<rangle>dra_rel", "by this"], ["proof (state)\nthis:\n  ((drae_dra \\<circ> dra_drae) A, id A) \\<in> \\<langle>Id_on (alphabet A),\n  Id_on (nodes A)\\<rangle>dra_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "definition draei_dra_rel where\n    [to_relAPP]: \"draei_dra_rel L S \\<equiv> {(Ae, A). (drae_dra (draei_drae Ae), A) \\<in> \\<langle>L, S\\<rangle> dra_rel}\""], ["", "lemma draei_dra_id[param]: \"(drae_dra \\<circ> draei_drae, id) \\<in> \\<langle>L, S\\<rangle> draei_dra_rel \\<rightarrow> \\<langle>L, S\\<rangle> dra_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (drae_dra \\<circ> draei_drae, id)\n    \\<in> \\<langle>L, S\\<rangle>draei_dra_rel \\<rightarrow> \\<langle>L,\n          S\\<rangle>dra_rel", "unfolding draei_dra_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (drae_dra \\<circ> draei_drae, id)\n    \\<in> {(Ae, A).\n           (drae_dra (draei_drae Ae), A) \\<in> \\<langle>L,\n           S\\<rangle>dra_rel} \\<rightarrow>\n          \\<langle>L, S\\<rangle>dra_rel", "by auto"], ["", "(*\n  schematic_goal drae_dra_impl: \"(?f, drae_dra) \\<in> \\<langle>Id, Id\\<rangle> draei_drae_rel \\<rightarrow> \\<langle>Id, Id\\<rangle> drai_dra_rel\"\n    unfolding drae_dra_def by (autoref (trace))\n  concrete_definition drae_dra_impl uses drae_dra_impl\n*)"], ["", "end"]]}