{"file_name": "/home/qj213/afp-2021-10-22/thys/Word_Lib/More_Divides.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Word_Lib", "problem_names": ["lemma int_div_same_is_1 [simp]:\n  \\<open>a div b = a \\<longleftrightarrow> b = 1\\<close> if \\<open>0 < a\\<close> for a b :: int", "lemma int_div_minus_is_minus1 [simp]:\n  \\<open>a div b = - a \\<longleftrightarrow> b = - 1\\<close> if \\<open>0 > a\\<close> for a b :: int", "lemma nat_div_eq_Suc_0_iff: \"n div m = Suc 0 \\<longleftrightarrow> m \\<le> n \\<and> n < 2 * m\"", "lemma diff_mod_le:\n  \\<open>a - a mod b \\<le> d - b\\<close> if \\<open>a < d\\<close> \\<open>b dvd d\\<close> for a b d :: nat", "lemma one_mod_exp_eq_one [simp]:\n  \"1 mod (2 * 2 ^ n) = (1::int)\"", "lemma int_mod_lem: \"0 < n \\<Longrightarrow> 0 \\<le> b \\<and> b < n \\<longleftrightarrow> b mod n = b\"\n  for b n :: int", "lemma int_mod_ge': \"b < 0 \\<Longrightarrow> 0 < n \\<Longrightarrow> b + n \\<le> b mod n\"\n  for b n :: int", "lemma int_mod_le': \"0 \\<le> b - n \\<Longrightarrow> b mod n \\<le> b - n\"\n  for b n :: int", "lemma emep1: \"even n \\<Longrightarrow> even d \\<Longrightarrow> 0 \\<le> d \\<Longrightarrow> (n + 1) mod d = (n mod d) + 1\"\n  for n d :: int", "lemma m1mod2k: \"- 1 mod 2 ^ n = (2 ^ n - 1 :: int)\"", "lemma sb_inc_lem: \"a + 2^k < 0 \\<Longrightarrow> a + 2^k + 2^(Suc k) \\<le> (a + 2^k) mod 2^(Suc k)\"\n  for a :: int", "lemma sb_inc_lem': \"a < - (2^k) \\<Longrightarrow> a + 2^k + 2^(Suc k) \\<le> (a + 2^k) mod 2^(Suc k)\"\n  for a :: int", "lemma sb_dec_lem: \"0 \\<le> - (2 ^ k) + a \\<Longrightarrow> (a + 2 ^ k) mod (2 * 2 ^ k) \\<le> - (2 ^ k) + a\"\n  for a :: int", "lemma sb_dec_lem': \"2 ^ k \\<le> a \\<Longrightarrow> (a + 2 ^ k) mod (2 * 2 ^ k) \\<le> - (2 ^ k) + a\"\n  for a :: int", "lemma mod_2_neq_1_eq_eq_0: \"k mod 2 \\<noteq> 1 \\<longleftrightarrow> k mod 2 = 0\"\n  for k :: int", "lemma z1pmod2: \"(2 * b + 1) mod 2 = (1::int)\"\n  for b :: int", "lemma p1mod22k': \"(1 + 2 * b) mod (2 * 2 ^ n) = 1 + 2 * (b mod 2 ^ n)\"\n  for b :: int", "lemma p1mod22k: \"(2 * b + 1) mod (2 * 2 ^ n) = 2 * (b mod 2 ^ n) + 1\"\n  for b :: int", "lemma pos_mod_sign2:\n  \\<open>0 \\<le> a mod 2\\<close> for a :: int", "lemma pos_mod_bound2:\n  \\<open>a mod 2 < 2\\<close> for a :: int", "lemma nmod2: \"n mod 2 = 0 \\<or> n mod 2 = 1\"\n  for n :: int", "lemma eme1p:\n  \"even n \\<Longrightarrow> even d \\<Longrightarrow> 0 \\<le> d \\<Longrightarrow> (1 + n) mod d = 1 + n mod d\" for n d :: int", "lemma m1mod22k:\n  \\<open>- 1 mod (2 * 2 ^ n) = 2 * 2 ^ n - (1::int)\\<close>", "lemma z1pdiv2: \"(2 * b + 1) div 2 = b\"\n  for b :: int", "lemma zdiv_le_dividend:\n  \\<open>0 \\<le> a \\<Longrightarrow> 0 < b \\<Longrightarrow> a div b \\<le> a\\<close> for a b :: int", "lemma axxmod2: \"(1 + x + x) mod 2 = 1 \\<and> (0 + x + x) mod 2 = 0\"\n  for x :: int", "lemma axxdiv2: \"(1 + x + x) div 2 = x \\<and> (0 + x + x) div 2 = x\"\n  for x :: int", "lemmas rdmods =\n  mod_minus_eq [symmetric]\n  mod_diff_left_eq [symmetric]\n  mod_diff_right_eq [symmetric]\n  mod_add_left_eq [symmetric]\n  mod_add_right_eq [symmetric]\n  mod_mult_right_eq [symmetric]\n  mod_mult_left_eq [symmetric]", "lemma mod_plus_right: \"(a + x) mod m = (b + x) mod m \\<longleftrightarrow> a mod m = b mod m\"\n  for a b m x :: nat", "lemma nat_minus_mod: \"(n - n mod m) mod m = 0\"\n  for m n :: nat", "lemmas nat_minus_mod_plus_right =\n  trans [OF nat_minus_mod mod_0 [symmetric],\n    THEN mod_plus_right [THEN iffD2], simplified]", "lemmas push_mods' = mod_add_eq\n  mod_mult_eq mod_diff_eq\n  mod_minus_eq", "lemmas push_mods = push_mods' [THEN eq_reflection]", "lemmas pull_mods = push_mods [symmetric] rdmods [THEN eq_reflection]", "lemma nat_mod_eq: \"b < n \\<Longrightarrow> a mod n = b mod n \\<Longrightarrow> a mod n = b\"\n  for a b n :: nat", "lemmas nat_mod_eq' = refl [THEN [2] nat_mod_eq]", "lemma nat_mod_lem: \"0 < n \\<Longrightarrow> b < n \\<longleftrightarrow> b mod n = b\"\n  for b n :: nat", "lemma mod_nat_add: \"x < z \\<Longrightarrow> y < z \\<Longrightarrow> (x + y) mod z = (if x + y < z then x + y else x + y - z)\"\n  for x y z :: nat", "lemma mod_nat_sub: \"x < z \\<Longrightarrow> (x - y) mod z = x - y\"\n  for x y :: nat", "lemma int_mod_eq: \"0 \\<le> b \\<Longrightarrow> b < n \\<Longrightarrow> a mod n = b mod n \\<Longrightarrow> a mod n = b\"\n  for a b n :: int", "lemma zmde:\n  \\<open>b * (a div b) = a - a mod b\\<close> for a b :: \\<open>'a::{group_add,semiring_modulo}\\<close>", "lemma zdiv_mult_self: \"m \\<noteq> 0 \\<Longrightarrow> (a + m * n) div m = a div m + n\"\n  for a m n :: int", "lemma mod_power_lem: \"a > 1 \\<Longrightarrow> a ^ n mod a ^ m = (if m \\<le> n then 0 else a ^ n)\"\n  for a :: int", "lemma nonneg_mod_div: \"0 \\<le> a \\<Longrightarrow> 0 \\<le> b \\<Longrightarrow> 0 \\<le> (a mod b) \\<and> 0 \\<le> a div b\"\n  for a b :: int", "lemma mod_exp_less_eq_exp:\n  \\<open>a mod 2 ^ n < 2 ^ n\\<close> for a :: int", "lemma div_mult_le:\n  \\<open>a div b * b \\<le> a\\<close> for a b :: nat", "lemma power_sub:\n  fixes a :: nat\n  assumes lt: \"n \\<le> m\"\n  and     av: \"0 < a\"\n  shows \"a ^ (m - n) = a ^ m div a ^ n\"", "lemma mod_lemma: \"[| (0::nat) < c; r < b |] ==> b * (q mod c) + r < b * c\"", "lemma less_two_pow_divD:\n  \"\\<lbrakk> (x :: nat) < 2 ^ n div 2 ^ m \\<rbrakk>\n    \\<Longrightarrow> n \\<ge> m \\<and> (x < 2 ^ (n - m))\"", "lemma less_two_pow_divI:\n  \"\\<lbrakk> (x :: nat) < 2 ^ (n - m); m \\<le> n \\<rbrakk> \\<Longrightarrow> x < 2 ^ n div 2 ^ m\"", "lemmas m2pths = pos_mod_sign mod_exp_less_eq_exp", "lemmas int_mod_eq' = mod_pos_pos_trivial", "lemmas int_mod_le = zmod_le_nonneg_dividend", "lemma power_mod_div:\n  fixes x :: \"nat\"\n  shows \"x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)\" (is \"?LHS = ?RHS\")", "lemma mod_mod_power:\n  fixes k :: nat\n  shows \"k mod 2 ^ m mod 2 ^ n = k mod 2 ^ (min m n)\"", "lemma mod_div_equality_div_eq:\n  \"a div b * b = (a - (a mod b) :: int)\"", "lemma zmod_helper:\n  \"n mod m = k \\<Longrightarrow> ((n :: int) + a) mod m = (k + a) mod m\"", "lemma int_div_sub_1:\n  \"\\<lbrakk> m \\<ge> 1 \\<rbrakk> \\<Longrightarrow> (n - (1 :: int)) div m = (if m dvd n then (n div m) - 1 else n div m)\"", "lemma power_minus_is_div:\n  \"b \\<le> a \\<Longrightarrow> (2 :: nat) ^ (a - b) = 2 ^ a div 2 ^ b\"", "lemma two_pow_div_gt_le:\n  \"v < 2 ^ n div (2 ^ m :: nat) \\<Longrightarrow> m \\<le> n\"", "lemma td_gal_lt:\n  \\<open>0 < c \\<Longrightarrow> a < b * c \\<longleftrightarrow> a div c < b\\<close>\n  for a b c :: nat", "lemma td_gal:\n  \\<open>0 < c \\<Longrightarrow> b * c \\<le> a  \\<longleftrightarrow> b \\<le> a div c\\<close>\n  for a b c :: nat"], "translations": [["", "lemma int_div_same_is_1 [simp]:\n  \\<open>a div b = a \\<longleftrightarrow> b = 1\\<close> if \\<open>0 < a\\<close> for a b :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a div b = a) = (b = 1)", "using that"], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. (a div b = a) = (b = 1)", "by (metis div_by_1 abs_ge_zero abs_of_pos int_div_less_self neq_iff\n            nonneg1_imp_zdiv_pos_iff zabs_less_one_iff)"], ["", "lemma int_div_minus_is_minus1 [simp]:\n  \\<open>a div b = - a \\<longleftrightarrow> b = - 1\\<close> if \\<open>0 > a\\<close> for a b :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a div b = - a) = (b = - 1)", "using that"], ["proof (prove)\nusing this:\n  a < 0\n\ngoal (1 subgoal):\n 1. (a div b = - a) = (b = - 1)", "by (metis div_minus_right equation_minus_iff int_div_same_is_1 neg_0_less_iff_less)"], ["", "lemma nat_div_eq_Suc_0_iff: \"n div m = Suc 0 \\<longleftrightarrow> m \\<le> n \\<and> n < 2 * m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n div m = Suc 0) = (m \\<le> n \\<and> n < 2 * m)", "apply auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. n div m = Suc 0 \\<Longrightarrow> m \\<le> n\n 2. n div m = Suc 0 \\<Longrightarrow> n < 2 * m\n 3. \\<lbrakk>m \\<le> n; n < 2 * m\\<rbrakk> \\<Longrightarrow> n div m = Suc 0", "using div_greater_zero_iff"], ["proof (prove)\nusing this:\n  (0 < ?m div ?n) = (?n \\<le> ?m \\<and> 0 < ?n)\n\ngoal (3 subgoals):\n 1. n div m = Suc 0 \\<Longrightarrow> m \\<le> n\n 2. n div m = Suc 0 \\<Longrightarrow> n < 2 * m\n 3. \\<lbrakk>m \\<le> n; n < 2 * m\\<rbrakk> \\<Longrightarrow> n div m = Suc 0", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. n div m = Suc 0 \\<Longrightarrow> n < 2 * m\n 2. \\<lbrakk>m \\<le> n; n < 2 * m\\<rbrakk> \\<Longrightarrow> n div m = Suc 0", "apply (metis One_nat_def div_greater_zero_iff dividend_less_div_times mult.right_neutral mult_Suc mult_numeral_1 numeral_2_eq_2 zero_less_numeral)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<le> n; n < 2 * m\\<rbrakk> \\<Longrightarrow> n div m = Suc 0", "apply (simp add: div_nat_eqI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma diff_mod_le:\n  \\<open>a - a mod b \\<le> d - b\\<close> if \\<open>a < d\\<close> \\<open>b dvd d\\<close> for a b d :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. a - a mod b \\<le> d - b", "using that"], ["proof (prove)\nusing this:\n  a < d\n  b dvd d\n\ngoal (1 subgoal):\n 1. a - a mod b \\<le> d - b", "apply(subst minus_mod_eq_mult_div)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < d; b dvd d\\<rbrakk>\n    \\<Longrightarrow> b * (a div b) \\<le> d - b", "apply(clarsimp simp: dvd_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b", "apply(cases \\<open>b = 0\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b = 0\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b\n 2. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b", "apply(subgoal_tac \"a div b \\<le> k - 1\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0;\n        a div b \\<le> k - 1\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b\n 2. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> a div b \\<le> k - 1", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> a div b \\<le> k - 1\n 2. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0;\n        a div b \\<le> k - 1\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b", "apply(subgoal_tac \"a div b < k\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0; a div b < k\\<rbrakk>\n       \\<Longrightarrow> a div b \\<le> k - 1\n 2. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> a div b < k\n 3. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0;\n        a div b \\<le> k - 1\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b", "apply(simp add: less_Suc_eq_le [symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> a div b < k\n 2. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0;\n        a div b \\<le> k - 1\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b", "apply(subgoal_tac \"b * (a div b) < b * ((b * k) div b)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0;\n        b * (a div b) < b * (b * k div b)\\<rbrakk>\n       \\<Longrightarrow> a div b < k\n 2. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) < b * (b * k div b)\n 3. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0;\n        a div b \\<le> k - 1\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) < b * (b * k div b)\n 2. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0;\n        a div b \\<le> k - 1\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b", "apply(subst div_mult_self1_is_m)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> 0 < b\n 2. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) < b * k\n 3. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0;\n        a div b \\<le> k - 1\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b", "apply arith"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) < b * k\n 2. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0;\n        a div b \\<le> k - 1\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b", "apply(rule le_less_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> ?y17 k\n 2. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> ?y17 k < b * k\n 3. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0;\n        a div b \\<le> k - 1\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; 0 < b\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> ?y17 k\n 2. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> ?y17 k < b * k\n 3. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0;\n        a div b \\<le> k - 1\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b", "apply(subst mult.commute)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; 0 < b\\<rbrakk>\n       \\<Longrightarrow> a div b * b \\<le> ?y21 k (?k21 k)\n 2. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> ?y21 k (?k21 k) < b * k\n 3. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0;\n        a div b \\<le> k - 1\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b", "apply(rule div_times_less_eq_dividend)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> a < b * k\n 2. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0;\n        a div b \\<le> k - 1\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; b \\<noteq> 0;\n        a div b \\<le> k - 1\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; 0 < b;\n        a div b \\<le> k - Suc 0\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b", "apply(subgoal_tac \"b * (a div b) \\<le> b * (k - 1)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; 0 < b; a div b \\<le> k - Suc 0;\n        b * (a div b) \\<le> b * (k - 1)\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * k - b\n 2. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; 0 < b;\n        a div b \\<le> k - Suc 0\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * (k - 1)", "apply(erule le_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; 0 < b;\n        a div b \\<le> k - Suc 0\\<rbrakk>\n       \\<Longrightarrow> b * (k - 1) \\<le> b * k - b\n 2. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; 0 < b;\n        a div b \\<le> k - Suc 0\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * (k - 1)", "apply(simp add: diff_mult_distrib2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>a < b * k; d = b * k; 0 < b;\n        a div b \\<le> k - Suc 0\\<rbrakk>\n       \\<Longrightarrow> b * (a div b) \\<le> b * (k - 1)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma one_mod_exp_eq_one [simp]:\n  \"1 mod (2 * 2 ^ n) = (1::int)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 mod (2 * 2 ^ n) = 1", "using power_gt1 [of 2 n]"], ["proof (prove)\nusing this:\n  (1::?'a1) < (2::?'a1) \\<Longrightarrow> (1::?'a1) < (2::?'a1) ^ Suc n\n\ngoal (1 subgoal):\n 1. 1 mod (2 * 2 ^ n) = 1", "by (auto intro: mod_pos_pos_trivial)"], ["", "lemma int_mod_lem: \"0 < n \\<Longrightarrow> 0 \\<le> b \\<and> b < n \\<longleftrightarrow> b mod n = b\"\n  for b n :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> (0 \\<le> b \\<and> b < n) = (b mod n = b)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < n; 0 \\<le> b; b < n\\<rbrakk> \\<Longrightarrow> b mod n = b\n 2. \\<lbrakk>0 < n; b mod n = b\\<rbrakk> \\<Longrightarrow> 0 \\<le> b\n 3. \\<lbrakk>0 < n; b mod n = b\\<rbrakk> \\<Longrightarrow> b < n", "apply (erule (1) mod_pos_pos_trivial)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < n; b mod n = b\\<rbrakk> \\<Longrightarrow> 0 \\<le> b\n 2. \\<lbrakk>0 < n; b mod n = b\\<rbrakk> \\<Longrightarrow> b < n", "apply (erule_tac [!] subst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 < n \\<Longrightarrow> 0 \\<le> b mod n\n 2. 0 < n \\<Longrightarrow> b mod n < n", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma int_mod_ge': \"b < 0 \\<Longrightarrow> 0 < n \\<Longrightarrow> b + n \\<le> b mod n\"\n  for b n :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b < 0; 0 < n\\<rbrakk> \\<Longrightarrow> b + n \\<le> b mod n", "by (metis add_less_same_cancel2 int_mod_ge mod_add_self2)"], ["", "lemma int_mod_le': \"0 \\<le> b - n \\<Longrightarrow> b mod n \\<le> b - n\"\n  for b n :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> b - n \\<Longrightarrow> b mod n \\<le> b - n", "by (metis minus_mod_self2 zmod_le_nonneg_dividend)"], ["", "lemma emep1: \"even n \\<Longrightarrow> even d \\<Longrightarrow> 0 \\<le> d \\<Longrightarrow> (n + 1) mod d = (n mod d) + 1\"\n  for n d :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>even n; even d; 0 \\<le> d\\<rbrakk>\n    \\<Longrightarrow> (n + 1) mod d = n mod d + 1", "by (auto simp add: pos_zmod_mult_2 add.commute dvd_def)"], ["", "lemma m1mod2k: \"- 1 mod 2 ^ n = (2 ^ n - 1 :: int)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 mod 2 ^ n = 2 ^ n - 1", "by (rule zmod_minus1) simp"], ["", "lemma sb_inc_lem: \"a + 2^k < 0 \\<Longrightarrow> a + 2^k + 2^(Suc k) \\<le> (a + 2^k) mod 2^(Suc k)\"\n  for a :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. a + 2 ^ k < 0 \\<Longrightarrow>\n    a + 2 ^ k + 2 ^ Suc k \\<le> (a + 2 ^ k) mod 2 ^ Suc k", "using int_mod_ge' [where n = \"2 ^ (Suc k)\" and b = \"a + 2 ^ k\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>a + 2 ^ k < 0; 0 < 2 ^ Suc k\\<rbrakk>\n  \\<Longrightarrow> a + 2 ^ k + 2 ^ Suc k \\<le> (a + 2 ^ k) mod 2 ^ Suc k\n\ngoal (1 subgoal):\n 1. a + 2 ^ k < 0 \\<Longrightarrow>\n    a + 2 ^ k + 2 ^ Suc k \\<le> (a + 2 ^ k) mod 2 ^ Suc k", "by simp"], ["", "lemma sb_inc_lem': \"a < - (2^k) \\<Longrightarrow> a + 2^k + 2^(Suc k) \\<le> (a + 2^k) mod 2^(Suc k)\"\n  for a :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. a < - (2 ^ k) \\<Longrightarrow>\n    a + 2 ^ k + 2 ^ Suc k \\<le> (a + 2 ^ k) mod 2 ^ Suc k", "by (rule sb_inc_lem) simp"], ["", "lemma sb_dec_lem: \"0 \\<le> - (2 ^ k) + a \\<Longrightarrow> (a + 2 ^ k) mod (2 * 2 ^ k) \\<le> - (2 ^ k) + a\"\n  for a :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> - (2 ^ k) + a \\<Longrightarrow>\n    (a + 2 ^ k) mod (2 * 2 ^ k) \\<le> - (2 ^ k) + a", "using int_mod_le'[where n = \"2 ^ (Suc k)\" and b = \"a + 2 ^ k\"]"], ["proof (prove)\nusing this:\n  0 \\<le> a + 2 ^ k - 2 ^ Suc k \\<Longrightarrow>\n  (a + 2 ^ k) mod 2 ^ Suc k \\<le> a + 2 ^ k - 2 ^ Suc k\n\ngoal (1 subgoal):\n 1. 0 \\<le> - (2 ^ k) + a \\<Longrightarrow>\n    (a + 2 ^ k) mod (2 * 2 ^ k) \\<le> - (2 ^ k) + a", "by simp"], ["", "lemma sb_dec_lem': \"2 ^ k \\<le> a \\<Longrightarrow> (a + 2 ^ k) mod (2 * 2 ^ k) \\<le> - (2 ^ k) + a\"\n  for a :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k \\<le> a \\<Longrightarrow>\n    (a + 2 ^ k) mod (2 * 2 ^ k) \\<le> - (2 ^ k) + a", "by (rule sb_dec_lem) simp"], ["", "lemma mod_2_neq_1_eq_eq_0: \"k mod 2 \\<noteq> 1 \\<longleftrightarrow> k mod 2 = 0\"\n  for k :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. (k mod 2 \\<noteq> 1) = (k mod 2 = 0)", "by (fact not_mod_2_eq_1_eq_0)"], ["", "lemma z1pmod2: \"(2 * b + 1) mod 2 = (1::int)\"\n  for b :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 * b + 1) mod 2 = 1", "by arith"], ["", "lemma p1mod22k': \"(1 + 2 * b) mod (2 * 2 ^ n) = 1 + 2 * (b mod 2 ^ n)\"\n  for b :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + 2 * b) mod (2 * 2 ^ n) = 1 + 2 * (b mod 2 ^ n)", "by (rule pos_zmod_mult_2) simp"], ["", "lemma p1mod22k: \"(2 * b + 1) mod (2 * 2 ^ n) = 2 * (b mod 2 ^ n) + 1\"\n  for b :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 * b + 1) mod (2 * 2 ^ n) = 2 * (b mod 2 ^ n) + 1", "by (simp add: p1mod22k' add.commute)"], ["", "lemma pos_mod_sign2:\n  \\<open>0 \\<le> a mod 2\\<close> for a :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> a mod 2", "by simp"], ["", "lemma pos_mod_bound2:\n  \\<open>a mod 2 < 2\\<close> for a :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. a mod 2 < 2", "by simp"], ["", "lemma nmod2: \"n mod 2 = 0 \\<or> n mod 2 = 1\"\n  for n :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. n mod 2 = 0 \\<or> n mod 2 = 1", "by arith"], ["", "lemma eme1p:\n  \"even n \\<Longrightarrow> even d \\<Longrightarrow> 0 \\<le> d \\<Longrightarrow> (1 + n) mod d = 1 + n mod d\" for n d :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>even n; even d; 0 \\<le> d\\<rbrakk>\n    \\<Longrightarrow> (1 + n) mod d = 1 + n mod d", "using emep1 [of n d]"], ["proof (prove)\nusing this:\n  \\<lbrakk>even n; even d; 0 \\<le> d\\<rbrakk>\n  \\<Longrightarrow> (n + 1) mod d = n mod d + 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>even n; even d; 0 \\<le> d\\<rbrakk>\n    \\<Longrightarrow> (1 + n) mod d = 1 + n mod d", "by (simp add: ac_simps)"], ["", "lemma m1mod22k:\n  \\<open>- 1 mod (2 * 2 ^ n) = 2 * 2 ^ n - (1::int)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 mod (2 * 2 ^ n) = 2 * 2 ^ n - 1", "by (simp add: zmod_minus1)"], ["", "lemma z1pdiv2: \"(2 * b + 1) div 2 = b\"\n  for b :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 * b + 1) div 2 = b", "by arith"], ["", "lemma zdiv_le_dividend:\n  \\<open>0 \\<le> a \\<Longrightarrow> 0 < b \\<Longrightarrow> a div b \\<le> a\\<close> for a b :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> a; 0 < b\\<rbrakk> \\<Longrightarrow> a div b \\<le> a", "by (metis div_by_1 int_one_le_iff_zero_less zdiv_mono2 zero_less_one)"], ["", "lemma axxmod2: \"(1 + x + x) mod 2 = 1 \\<and> (0 + x + x) mod 2 = 0\"\n  for x :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + x + x) mod 2 = 1 \\<and> (0 + x + x) mod 2 = 0", "by arith"], ["", "lemma axxdiv2: \"(1 + x + x) div 2 = x \\<and> (0 + x + x) div 2 = x\"\n  for x :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + x + x) div 2 = x \\<and> (0 + x + x) div 2 = x", "by arith"], ["", "lemmas rdmods =\n  mod_minus_eq [symmetric]\n  mod_diff_left_eq [symmetric]\n  mod_diff_right_eq [symmetric]\n  mod_add_left_eq [symmetric]\n  mod_add_right_eq [symmetric]\n  mod_mult_right_eq [symmetric]\n  mod_mult_left_eq [symmetric]"], ["", "lemma mod_plus_right: \"(a + x) mod m = (b + x) mod m \\<longleftrightarrow> a mod m = b mod m\"\n  for a b m x :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((a + x) mod m = (b + x) mod m) = (a mod m = b mod m)", "by (induct x) (simp_all add: mod_Suc, arith)"], ["", "lemma nat_minus_mod: \"(n - n mod m) mod m = 0\"\n  for m n :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. (n - n mod m) mod m = 0", "by (induct n) (simp_all add: mod_Suc)"], ["", "lemmas nat_minus_mod_plus_right =\n  trans [OF nat_minus_mod mod_0 [symmetric],\n    THEN mod_plus_right [THEN iffD2], simplified]"], ["", "lemmas push_mods' = mod_add_eq\n  mod_mult_eq mod_diff_eq\n  mod_minus_eq"], ["", "lemmas push_mods = push_mods' [THEN eq_reflection]"], ["", "lemmas pull_mods = push_mods [symmetric] rdmods [THEN eq_reflection]"], ["", "lemma nat_mod_eq: \"b < n \\<Longrightarrow> a mod n = b mod n \\<Longrightarrow> a mod n = b\"\n  for a b n :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b < n; a mod n = b mod n\\<rbrakk> \\<Longrightarrow> a mod n = b", "by (induct a) auto"], ["", "lemmas nat_mod_eq' = refl [THEN [2] nat_mod_eq]"], ["", "lemma nat_mod_lem: \"0 < n \\<Longrightarrow> b < n \\<longleftrightarrow> b mod n = b\"\n  for b n :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> (b < n) = (b mod n = b)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < n; b < n\\<rbrakk> \\<Longrightarrow> b mod n = b\n 2. \\<lbrakk>0 < n; b mod n = b\\<rbrakk> \\<Longrightarrow> b < n", "apply (erule nat_mod_eq')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; b mod n = b\\<rbrakk> \\<Longrightarrow> b < n", "apply (erule subst)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> b mod n < n", "apply (erule mod_less_divisor)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mod_nat_add: \"x < z \\<Longrightarrow> y < z \\<Longrightarrow> (x + y) mod z = (if x + y < z then x + y else x + y - z)\"\n  for x y z :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < z; y < z\\<rbrakk>\n    \\<Longrightarrow> (x + y) mod z =\n                      (if x + y < z then x + y else x + y - z)", "apply (rule nat_mod_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x < z; y < z\\<rbrakk>\n    \\<Longrightarrow> (if x + y < z then x + y else x + y - z) < z\n 2. \\<lbrakk>x < z; y < z\\<rbrakk>\n    \\<Longrightarrow> (x + y) mod z =\n                      (if x + y < z then x + y else x + y - z) mod z", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < z; y < z; \\<not> x + y < z\\<rbrakk>\n    \\<Longrightarrow> (x + y) mod z = x + y - z", "apply (rule trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x < z; y < z; \\<not> x + y < z\\<rbrakk>\n    \\<Longrightarrow> (x + y) mod z = ?s56\n 2. \\<lbrakk>x < z; y < z; \\<not> x + y < z\\<rbrakk>\n    \\<Longrightarrow> ?s56 = x + y - z", "apply (rule le_mod_geq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x < z; y < z; \\<not> x + y < z\\<rbrakk>\n    \\<Longrightarrow> z \\<le> x + y\n 2. \\<lbrakk>x < z; y < z; \\<not> x + y < z\\<rbrakk>\n    \\<Longrightarrow> (x + y - z) mod z = x + y - z", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < z; y < z; \\<not> x + y < z\\<rbrakk>\n    \\<Longrightarrow> (x + y - z) mod z = x + y - z", "apply (rule nat_mod_eq')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < z; y < z; \\<not> x + y < z\\<rbrakk>\n    \\<Longrightarrow> x + y - z < z", "apply arith"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mod_nat_sub: \"x < z \\<Longrightarrow> (x - y) mod z = x - y\"\n  for x y :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. x < z \\<Longrightarrow> (x - y) mod z = x - y", "by (rule nat_mod_eq') arith"], ["", "lemma int_mod_eq: \"0 \\<le> b \\<Longrightarrow> b < n \\<Longrightarrow> a mod n = b mod n \\<Longrightarrow> a mod n = b\"\n  for a b n :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> b; b < n; a mod n = b mod n\\<rbrakk>\n    \\<Longrightarrow> a mod n = b", "by (metis mod_pos_pos_trivial)"], ["", "lemma zmde:\n  \\<open>b * (a div b) = a - a mod b\\<close> for a b :: \\<open>'a::{group_add,semiring_modulo}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. b * (a div b) = a - a mod b", "using mult_div_mod_eq [of b a]"], ["proof (prove)\nusing this:\n  b * (a div b) + a mod b = a\n\ngoal (1 subgoal):\n 1. b * (a div b) = a - a mod b", "by (simp add: eq_diff_eq)"], ["", "(* already have this for naturals, div_mult_self1/2, but not for ints *)"], ["", "lemma zdiv_mult_self: \"m \\<noteq> 0 \\<Longrightarrow> (a + m * n) div m = a div m + n\"\n  for a m n :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> (a + m * n) div m = a div m + n", "by simp"], ["", "lemma mod_power_lem: \"a > 1 \\<Longrightarrow> a ^ n mod a ^ m = (if m \\<le> n then 0 else a ^ n)\"\n  for a :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < a \\<Longrightarrow>\n    a ^ n mod a ^ m = (if m \\<le> n then 0 else a ^ n)", "by (simp add: mod_eq_0_iff_dvd le_imp_power_dvd)"], ["", "lemma nonneg_mod_div: \"0 \\<le> a \\<Longrightarrow> 0 \\<le> b \\<Longrightarrow> 0 \\<le> (a mod b) \\<and> 0 \\<le> a div b\"\n  for a b :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> a mod b \\<and> 0 \\<le> a div b", "by (cases \"b = 0\") (auto intro: pos_imp_zdiv_nonneg_iff [THEN iffD2])"], ["", "lemma mod_exp_less_eq_exp:\n  \\<open>a mod 2 ^ n < 2 ^ n\\<close> for a :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. a mod 2 ^ n < 2 ^ n", "by (rule pos_mod_bound) simp"], ["", "lemma div_mult_le:\n  \\<open>a div b * b \\<le> a\\<close> for a b :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. a div b * b \\<le> a", "by (fact div_times_less_eq_dividend)"], ["", "lemma power_sub:\n  fixes a :: nat\n  assumes lt: \"n \\<le> m\"\n  and     av: \"0 < a\"\n  shows \"a ^ (m - n) = a ^ m div a ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ^ (m - n) = a ^ m div a ^ n", "proof (subst nat_mult_eq_cancel1 [symmetric])"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < ?k\n 2. ?k * a ^ (m - n) = ?k * (a ^ m div a ^ n)", "show \"(0::nat) < a ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a ^ n", "using av"], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. 0 < a ^ n", "by simp"], ["proof (state)\nthis:\n  0 < a ^ n\n\ngoal (1 subgoal):\n 1. a ^ n * a ^ (m - n) = a ^ n * (a ^ m div a ^ n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a ^ n * a ^ (m - n) = a ^ n * (a ^ m div a ^ n)", "from lt"], ["proof (chain)\npicking this:\n  n \\<le> m", "obtain q where mv: \"n + q = m\""], ["proof (prove)\nusing this:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. (\\<And>q. n + q = m \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto simp: le_iff_add)"], ["proof (state)\nthis:\n  n + q = m\n\ngoal (1 subgoal):\n 1. a ^ n * a ^ (m - n) = a ^ n * (a ^ m div a ^ n)", "have \"a ^ n * (a ^ m div a ^ n) = a ^ m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ^ n * (a ^ m div a ^ n) = a ^ m", "proof (subst mult.commute)"], ["proof (state)\ngoal (1 subgoal):\n 1. a ^ m div a ^ n * a ^ n = a ^ m", "have \"a ^ m = (a ^ m div a ^ n) * a ^ n + a ^ m mod a ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ^ m = a ^ m div a ^ n * a ^ n + a ^ m mod a ^ n", "by (rule  div_mult_mod_eq [symmetric])"], ["proof (state)\nthis:\n  a ^ m = a ^ m div a ^ n * a ^ n + a ^ m mod a ^ n\n\ngoal (1 subgoal):\n 1. a ^ m div a ^ n * a ^ n = a ^ m", "moreover"], ["proof (state)\nthis:\n  a ^ m = a ^ m div a ^ n * a ^ n + a ^ m mod a ^ n\n\ngoal (1 subgoal):\n 1. a ^ m div a ^ n * a ^ n = a ^ m", "have \"a ^ m mod a ^ n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ^ m mod a ^ n = 0", "by (subst mod_eq_0_iff_dvd, subst dvd_def, rule exI [where x = \"a ^ q\"],\n      (subst power_add [symmetric] mv)+, rule refl)"], ["proof (state)\nthis:\n  a ^ m mod a ^ n = 0\n\ngoal (1 subgoal):\n 1. a ^ m div a ^ n * a ^ n = a ^ m", "ultimately"], ["proof (chain)\npicking this:\n  a ^ m = a ^ m div a ^ n * a ^ n + a ^ m mod a ^ n\n  a ^ m mod a ^ n = 0", "show \"(a ^ m div a ^ n) * a ^ n = a ^ m\""], ["proof (prove)\nusing this:\n  a ^ m = a ^ m div a ^ n * a ^ n + a ^ m mod a ^ n\n  a ^ m mod a ^ n = 0\n\ngoal (1 subgoal):\n 1. a ^ m div a ^ n * a ^ n = a ^ m", "by simp"], ["proof (state)\nthis:\n  a ^ m div a ^ n * a ^ n = a ^ m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a ^ n * (a ^ m div a ^ n) = a ^ m\n\ngoal (1 subgoal):\n 1. a ^ n * a ^ (m - n) = a ^ n * (a ^ m div a ^ n)", "then"], ["proof (chain)\npicking this:\n  a ^ n * (a ^ m div a ^ n) = a ^ m", "show \"a ^ n * a ^ (m - n) = a ^ n * (a ^ m div a ^ n)\""], ["proof (prove)\nusing this:\n  a ^ n * (a ^ m div a ^ n) = a ^ m\n\ngoal (1 subgoal):\n 1. a ^ n * a ^ (m - n) = a ^ n * (a ^ m div a ^ n)", "using lt"], ["proof (prove)\nusing this:\n  a ^ n * (a ^ m div a ^ n) = a ^ m\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. a ^ n * a ^ (m - n) = a ^ n * (a ^ m div a ^ n)", "by (simp add: power_add [symmetric])"], ["proof (state)\nthis:\n  a ^ n * a ^ (m - n) = a ^ n * (a ^ m div a ^ n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mod_lemma: \"[| (0::nat) < c; r < b |] ==> b * (q mod c) + r < b * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < c; r < b\\<rbrakk>\n    \\<Longrightarrow> b * (q mod c) + r < b * c", "apply (cut_tac m = q and n = c in mod_less_divisor)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < c; r < b\\<rbrakk> \\<Longrightarrow> 0 < c\n 2. \\<lbrakk>0 < c; r < b; q mod c < c\\<rbrakk>\n    \\<Longrightarrow> b * (q mod c) + r < b * c", "apply (drule_tac [2] m = \"q mod c\" in less_imp_Suc_add, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>r < b; c = Suc (q mod c + k)\\<rbrakk>\n       \\<Longrightarrow> b * (q mod c) + r < b * c", "apply (erule_tac P = \"%x. lhs < rhs x\" for lhs rhs in ssubst)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       r < b \\<Longrightarrow> b * (q mod c) + r < b * Suc (q mod c + k)", "apply (simp add: add_mult_distrib2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma less_two_pow_divD:\n  \"\\<lbrakk> (x :: nat) < 2 ^ n div 2 ^ m \\<rbrakk>\n    \\<Longrightarrow> n \\<ge> m \\<and> (x < 2 ^ (n - m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < 2 ^ n div 2 ^ m \\<Longrightarrow> m \\<le> n \\<and> x < 2 ^ (n - m)", "apply (rule context_conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. x < 2 ^ n div 2 ^ m \\<Longrightarrow> m \\<le> n\n 2. \\<lbrakk>x < 2 ^ n div 2 ^ m; m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> x < 2 ^ (n - m)", "apply (rule ccontr)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x < 2 ^ n div 2 ^ m; \\<not> m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>x < 2 ^ n div 2 ^ m; m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> x < 2 ^ (n - m)", "apply (simp add: power_strict_increasing)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < 2 ^ n div 2 ^ m; m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> x < 2 ^ (n - m)", "apply (simp add: power_sub)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma less_two_pow_divI:\n  \"\\<lbrakk> (x :: nat) < 2 ^ (n - m); m \\<le> n \\<rbrakk> \\<Longrightarrow> x < 2 ^ n div 2 ^ m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < 2 ^ (n - m); m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> x < 2 ^ n div 2 ^ m", "by (simp add: power_sub)"], ["", "lemmas m2pths = pos_mod_sign mod_exp_less_eq_exp"], ["", "lemmas int_mod_eq' = mod_pos_pos_trivial"], ["", "(* FIXME delete *)"], ["", "lemmas int_mod_le = zmod_le_nonneg_dividend"], ["", "(* FIXME: delete *)"], ["", "lemma power_mod_div:\n  fixes x :: \"nat\"\n  shows \"x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)\" (is \"?LHS = ?RHS\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "proof (cases \"n \\<le> m\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)\n 2. \\<not> n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "case True"], ["proof (state)\nthis:\n  n \\<le> m\n\ngoal (2 subgoals):\n 1. n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)\n 2. \\<not> n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "then"], ["proof (chain)\npicking this:\n  n \\<le> m", "have \"?LHS = 0\""], ["proof (prove)\nusing this:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. x mod 2 ^ n div 2 ^ m = 0", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> m \\<Longrightarrow> x mod 2 ^ n div 2 ^ m = 0", "apply (rule div_less)"], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> m \\<Longrightarrow> x mod 2 ^ n < 2 ^ m", "apply (rule order_less_le_trans [OF mod_less_divisor]; simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  x mod 2 ^ n div 2 ^ m = 0\n\ngoal (2 subgoals):\n 1. n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)\n 2. \\<not> n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "also"], ["proof (state)\nthis:\n  x mod 2 ^ n div 2 ^ m = 0\n\ngoal (2 subgoals):\n 1. n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)\n 2. \\<not> n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "have \"\\<dots> = ?RHS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 = x div 2 ^ m mod 2 ^ (n - m)", "using True"], ["proof (prove)\nusing this:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. 0 = x div 2 ^ m mod 2 ^ (n - m)", "by simp"], ["proof (state)\nthis:\n  0 = x div 2 ^ m mod 2 ^ (n - m)\n\ngoal (2 subgoals):\n 1. n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)\n 2. \\<not> n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "finally"], ["proof (chain)\npicking this:\n  x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "show ?thesis"], ["proof (prove)\nusing this:\n  x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)\n\ngoal (1 subgoal):\n 1. x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "."], ["proof (state)\nthis:\n  x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "case False"], ["proof (state)\nthis:\n  \\<not> n \\<le> m\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "then"], ["proof (chain)\npicking this:\n  \\<not> n \\<le> m", "have lt: \"m < n\""], ["proof (prove)\nusing this:\n  \\<not> n \\<le> m\n\ngoal (1 subgoal):\n 1. m < n", "by simp"], ["proof (state)\nthis:\n  m < n\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "then"], ["proof (chain)\npicking this:\n  m < n", "obtain q where nv: \"n = m + q\" and \"0 < q\""], ["proof (prove)\nusing this:\n  m < n\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>n = m + q; 0 < q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: less_imp_Suc_add)"], ["proof (state)\nthis:\n  n = m + q\n  0 < q\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "then"], ["proof (chain)\npicking this:\n  n = m + q\n  0 < q", "have \"x mod 2 ^ n = 2 ^ m * (x div 2 ^ m mod 2 ^ q) + x mod 2 ^ m\""], ["proof (prove)\nusing this:\n  n = m + q\n  0 < q\n\ngoal (1 subgoal):\n 1. x mod 2 ^ n = 2 ^ m * (x div 2 ^ m mod 2 ^ q) + x mod 2 ^ m", "by (simp add: power_add mod_mult2_eq)"], ["proof (state)\nthis:\n  x mod 2 ^ n = 2 ^ m * (x div 2 ^ m mod 2 ^ q) + x mod 2 ^ m\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "then"], ["proof (chain)\npicking this:\n  x mod 2 ^ n = 2 ^ m * (x div 2 ^ m mod 2 ^ q) + x mod 2 ^ m", "have \"?LHS = x div 2 ^ m mod 2 ^ q\""], ["proof (prove)\nusing this:\n  x mod 2 ^ n = 2 ^ m * (x div 2 ^ m mod 2 ^ q) + x mod 2 ^ m\n\ngoal (1 subgoal):\n 1. x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ q", "by (simp add: div_add1_eq)"], ["proof (state)\nthis:\n  x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ q\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "also"], ["proof (state)\nthis:\n  x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ q\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "have \"\\<dots> = ?RHS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x div 2 ^ m mod 2 ^ q = x div 2 ^ m mod 2 ^ (n - m)", "using nv"], ["proof (prove)\nusing this:\n  n = m + q\n\ngoal (1 subgoal):\n 1. x div 2 ^ m mod 2 ^ q = x div 2 ^ m mod 2 ^ (n - m)", "by simp"], ["proof (state)\nthis:\n  x div 2 ^ m mod 2 ^ q = x div 2 ^ m mod 2 ^ (n - m)\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow>\n    x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "finally"], ["proof (chain)\npicking this:\n  x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "show ?thesis"], ["proof (prove)\nusing this:\n  x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)\n\ngoal (1 subgoal):\n 1. x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)", "."], ["proof (state)\nthis:\n  x mod 2 ^ n div 2 ^ m = x div 2 ^ m mod 2 ^ (n - m)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mod_mod_power:\n  fixes k :: nat\n  shows \"k mod 2 ^ m mod 2 ^ n = k mod 2 ^ (min m n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n", "proof (cases \"m \\<le> n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m \\<le> n \\<Longrightarrow> k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n\n 2. \\<not> m \\<le> n \\<Longrightarrow>\n    k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n", "case True"], ["proof (state)\nthis:\n  m \\<le> n\n\ngoal (2 subgoals):\n 1. m \\<le> n \\<Longrightarrow> k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n\n 2. \\<not> m \\<le> n \\<Longrightarrow>\n    k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n", "then"], ["proof (chain)\npicking this:\n  m \\<le> n", "have \"k mod 2 ^ m mod 2 ^ n = k mod 2 ^ m\""], ["proof (prove)\nusing this:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. k mod 2 ^ m mod 2 ^ n = k mod 2 ^ m", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<le> n \\<Longrightarrow> k mod 2 ^ m mod 2 ^ n = k mod 2 ^ m", "apply (subst mod_less [where n = \"2 ^ n\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. m \\<le> n \\<Longrightarrow> k mod 2 ^ m < 2 ^ n\n 2. m \\<le> n \\<Longrightarrow> k mod 2 ^ m = k mod 2 ^ m", "apply (rule order_less_le_trans [OF mod_less_divisor])"], ["proof (prove)\ngoal (3 subgoals):\n 1. m \\<le> n \\<Longrightarrow> 0 < 2 ^ m\n 2. m \\<le> n \\<Longrightarrow> 2 ^ m \\<le> 2 ^ n\n 3. m \\<le> n \\<Longrightarrow> k mod 2 ^ m = k mod 2 ^ m", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  k mod 2 ^ m mod 2 ^ n = k mod 2 ^ m\n\ngoal (2 subgoals):\n 1. m \\<le> n \\<Longrightarrow> k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n\n 2. \\<not> m \\<le> n \\<Longrightarrow>\n    k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n", "also"], ["proof (state)\nthis:\n  k mod 2 ^ m mod 2 ^ n = k mod 2 ^ m\n\ngoal (2 subgoals):\n 1. m \\<le> n \\<Longrightarrow> k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n\n 2. \\<not> m \\<le> n \\<Longrightarrow>\n    k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n", "have \"\\<dots> = k mod  2 ^ (min m n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k mod 2 ^ m = k mod 2 ^ min m n", "using True"], ["proof (prove)\nusing this:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. k mod 2 ^ m = k mod 2 ^ min m n", "by simp"], ["proof (state)\nthis:\n  k mod 2 ^ m = k mod 2 ^ min m n\n\ngoal (2 subgoals):\n 1. m \\<le> n \\<Longrightarrow> k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n\n 2. \\<not> m \\<le> n \\<Longrightarrow>\n    k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n", "finally"], ["proof (chain)\npicking this:\n  k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n", "show ?thesis"], ["proof (prove)\nusing this:\n  k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n\n\ngoal (1 subgoal):\n 1. k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n", "."], ["proof (state)\nthis:\n  k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n\n\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow>\n    k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow>\n    k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n", "case False"], ["proof (state)\nthis:\n  \\<not> m \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow>\n    k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n", "then"], ["proof (chain)\npicking this:\n  \\<not> m \\<le> n", "have \"n < m\""], ["proof (prove)\nusing this:\n  \\<not> m \\<le> n\n\ngoal (1 subgoal):\n 1. n < m", "by simp"], ["proof (state)\nthis:\n  n < m\n\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow>\n    k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n", "then"], ["proof (chain)\npicking this:\n  n < m", "obtain d where md: \"m = n + d\""], ["proof (prove)\nusing this:\n  n < m\n\ngoal (1 subgoal):\n 1. (\\<And>d. m = n + d \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto dest: less_imp_add_positive)"], ["proof (state)\nthis:\n  m = n + d\n\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow>\n    k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n", "then"], ["proof (chain)\npicking this:\n  m = n + d", "have \"k mod 2 ^ m = 2 ^ n * (k div 2 ^ n mod 2 ^ d) + k mod 2 ^ n\""], ["proof (prove)\nusing this:\n  m = n + d\n\ngoal (1 subgoal):\n 1. k mod 2 ^ m = 2 ^ n * (k div 2 ^ n mod 2 ^ d) + k mod 2 ^ n", "by (simp add: mod_mult2_eq power_add)"], ["proof (state)\nthis:\n  k mod 2 ^ m = 2 ^ n * (k div 2 ^ n mod 2 ^ d) + k mod 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow>\n    k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n", "then"], ["proof (chain)\npicking this:\n  k mod 2 ^ m = 2 ^ n * (k div 2 ^ n mod 2 ^ d) + k mod 2 ^ n", "have \"k mod 2 ^ m mod 2 ^ n = k mod 2 ^ n\""], ["proof (prove)\nusing this:\n  k mod 2 ^ m = 2 ^ n * (k div 2 ^ n mod 2 ^ d) + k mod 2 ^ n\n\ngoal (1 subgoal):\n 1. k mod 2 ^ m mod 2 ^ n = k mod 2 ^ n", "by (simp add: mod_add_left_eq)"], ["proof (state)\nthis:\n  k mod 2 ^ m mod 2 ^ n = k mod 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow>\n    k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n", "then"], ["proof (chain)\npicking this:\n  k mod 2 ^ m mod 2 ^ n = k mod 2 ^ n", "show ?thesis"], ["proof (prove)\nusing this:\n  k mod 2 ^ m mod 2 ^ n = k mod 2 ^ n\n\ngoal (1 subgoal):\n 1. k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n", "using False"], ["proof (prove)\nusing this:\n  k mod 2 ^ m mod 2 ^ n = k mod 2 ^ n\n  \\<not> m \\<le> n\n\ngoal (1 subgoal):\n 1. k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n", "by simp"], ["proof (state)\nthis:\n  k mod 2 ^ m mod 2 ^ n = k mod 2 ^ min m n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mod_div_equality_div_eq:\n  \"a div b * b = (a - (a mod b) :: int)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a div b * b = a - a mod b", "by (simp add: field_simps)"], ["", "lemma zmod_helper:\n  \"n mod m = k \\<Longrightarrow> ((n :: int) + a) mod m = (k + a) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n mod m = k \\<Longrightarrow> (n + a) mod m = (k + a) mod m", "by (metis add.commute mod_add_right_eq)"], ["", "lemma int_div_sub_1:\n  \"\\<lbrakk> m \\<ge> 1 \\<rbrakk> \\<Longrightarrow> (n - (1 :: int)) div m = (if m dvd n then (n div m) - 1 else n div m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> m \\<Longrightarrow>\n    (n - 1) div m = (if m dvd n then n div m - 1 else n div m)", "apply (subgoal_tac \"m = 0 \\<or> (n - (1 :: int)) div m = (if m dvd n then (n div m) - 1 else n div m)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>1 \\<le> m;\n     m = 0 \\<or>\n     (n - 1) div m = (if m dvd n then n div m - 1 else n div m)\\<rbrakk>\n    \\<Longrightarrow> (n - 1) div m =\n                      (if m dvd n then n div m - 1 else n div m)\n 2. 1 \\<le> m \\<Longrightarrow>\n    m = 0 \\<or> (n - 1) div m = (if m dvd n then n div m - 1 else n div m)", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> m \\<Longrightarrow>\n    m = 0 \\<or> (n - 1) div m = (if m dvd n then n div m - 1 else n div m)", "apply (subst mult_cancel_right[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> m \\<Longrightarrow>\n    (n - 1) div m * m = (if m dvd n then n div m - 1 else n div m) * m", "apply (simp only: left_diff_distrib split: if_split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> m \\<Longrightarrow>\n    (m dvd n \\<longrightarrow>\n     (n - 1) div m * m = n div m * m - 1 * m) \\<and>\n    (\\<not> m dvd n \\<longrightarrow> (n - 1) div m * m = n div m * m)", "apply (simp only: mod_div_equality_div_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> m \\<Longrightarrow>\n    (m dvd n \\<longrightarrow>\n     n - 1 - (n - 1) mod m = n - n mod m - 1 * m) \\<and>\n    (\\<not> m dvd n \\<longrightarrow> n - 1 - (n - 1) mod m = n - n mod m)", "apply (clarsimp simp: field_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> m \\<Longrightarrow>\n    (m dvd n \\<longrightarrow> m = 1 + (n - 1) mod m) \\<and>\n    (\\<not> m dvd n \\<longrightarrow> n mod m = 1 + (n - 1) mod m)", "apply (clarsimp simp: dvd_eq_mod_eq_0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> m \\<Longrightarrow>\n    (n mod m = 0 \\<longrightarrow> m = 1 + (n - 1) mod m) \\<and>\n    (n mod m \\<noteq> 0 \\<longrightarrow> n mod m = 1 + (n - 1) mod m)", "apply (cases \"m = 1\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>1 \\<le> m; m = 1\\<rbrakk>\n    \\<Longrightarrow> (n mod m = 0 \\<longrightarrow>\n                       m = 1 + (n - 1) mod m) \\<and>\n                      (n mod m \\<noteq> 0 \\<longrightarrow>\n                       n mod m = 1 + (n - 1) mod m)\n 2. \\<lbrakk>1 \\<le> m; m \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> (n mod m = 0 \\<longrightarrow>\n                       m = 1 + (n - 1) mod m) \\<and>\n                      (n mod m \\<noteq> 0 \\<longrightarrow>\n                       n mod m = 1 + (n - 1) mod m)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> m; m \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> (n mod m = 0 \\<longrightarrow>\n                       m = 1 + (n - 1) mod m) \\<and>\n                      (n mod m \\<noteq> 0 \\<longrightarrow>\n                       n mod m = 1 + (n - 1) mod m)", "apply (subst mod_diff_eq[symmetric], simp add: zmod_minus1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> m; m \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> n mod m \\<noteq> 0 \\<longrightarrow>\n                      n mod m = 1 + (n - 1) mod m", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> n mod m = 1 + (n - 1) mod m", "apply (subst diff_add_cancel[where b=1, symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (n - 1 + 1) mod m = 1 + (n - 1) mod m", "apply (subst mod_add_eq[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> ((n - 1) mod m + 1 mod m) mod m = 1 + (n - 1) mod m", "apply (simp add: field_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (1 + (n - 1) mod m) mod m = 1 + (n - 1) mod m", "apply (rule mod_pos_pos_trivial)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> 1 + (n - 1) mod m\n 2. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 1 + (n - 1) mod m < m", "apply (subst add_0_right[where a=0, symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 0 + 0 \\<le> 1 + (n - 1) mod m\n 2. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 1 + (n - 1) mod m < m", "apply (rule add_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> 1\n 2. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> (n - 1) mod m\n 3. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 1 + (n - 1) mod m < m", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> (n - 1) mod m\n 2. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 1 + (n - 1) mod m < m", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 1 + (n - 1) mod m < m", "apply (cases \"(n - 1) mod m = m - 1\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0;\n     (n - 1) mod m = m - 1\\<rbrakk>\n    \\<Longrightarrow> 1 + (n - 1) mod m < m\n 2. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0;\n     (n - 1) mod m \\<noteq> m - 1\\<rbrakk>\n    \\<Longrightarrow> 1 + (n - 1) mod m < m", "apply (drule zmod_helper[where a=1])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0;\n     (n - 1 + 1) mod m = (m - 1 + 1) mod m\\<rbrakk>\n    \\<Longrightarrow> 1 + (n - 1) mod m < m\n 2. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0;\n     (n - 1) mod m \\<noteq> m - 1\\<rbrakk>\n    \\<Longrightarrow> 1 + (n - 1) mod m < m", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0;\n     (n - 1) mod m \\<noteq> m - 1\\<rbrakk>\n    \\<Longrightarrow> 1 + (n - 1) mod m < m", "apply (subgoal_tac \"1 + (n - 1) mod m \\<le> m\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0;\n     (n - 1) mod m \\<noteq> m - 1; 1 + (n - 1) mod m \\<le> m\\<rbrakk>\n    \\<Longrightarrow> 1 + (n - 1) mod m < m\n 2. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0;\n     (n - 1) mod m \\<noteq> m - 1\\<rbrakk>\n    \\<Longrightarrow> 1 + (n - 1) mod m \\<le> m", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0;\n     (n - 1) mod m \\<noteq> m - 1\\<rbrakk>\n    \\<Longrightarrow> 1 + (n - 1) mod m \\<le> m", "apply (subst field_simps, rule zless_imp_add1_zle)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> m; m \\<noteq> 1; n mod m \\<noteq> 0;\n     (n - 1) mod m \\<noteq> m - 1\\<rbrakk>\n    \\<Longrightarrow> (n - 1) mod m < m", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma power_minus_is_div:\n  \"b \\<le> a \\<Longrightarrow> (2 :: nat) ^ (a - b) = 2 ^ a div 2 ^ b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<le> a \\<Longrightarrow> 2 ^ (a - b) = 2 ^ a div 2 ^ b", "apply (induct a arbitrary: b)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b. b \\<le> 0 \\<Longrightarrow> 2 ^ (0 - b) = 2 ^ 0 div 2 ^ b\n 2. \\<And>a b.\n       \\<lbrakk>\\<And>b.\n                   b \\<le> a \\<Longrightarrow>\n                   2 ^ (a - b) = 2 ^ a div 2 ^ b;\n        b \\<le> Suc a\\<rbrakk>\n       \\<Longrightarrow> 2 ^ (Suc a - b) = 2 ^ Suc a div 2 ^ b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<And>b.\n                   b \\<le> a \\<Longrightarrow>\n                   2 ^ (a - b) = 2 ^ a div 2 ^ b;\n        b \\<le> Suc a\\<rbrakk>\n       \\<Longrightarrow> 2 ^ (Suc a - b) = 2 ^ Suc a div 2 ^ b", "apply (erule le_SucE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>\\<And>b.\n                   b \\<le> a \\<Longrightarrow>\n                   2 ^ (a - b) = 2 ^ a div 2 ^ b;\n        b \\<le> a\\<rbrakk>\n       \\<Longrightarrow> 2 ^ (Suc a - b) = 2 ^ Suc a div 2 ^ b\n 2. \\<And>a b.\n       \\<lbrakk>\\<And>b.\n                   b \\<le> a \\<Longrightarrow>\n                   2 ^ (a - b) = 2 ^ a div 2 ^ b;\n        b = Suc a\\<rbrakk>\n       \\<Longrightarrow> 2 ^ (Suc a - b) = 2 ^ Suc a div 2 ^ b", "apply (clarsimp simp:Suc_diff_le le_iff_add power_add)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<And>b.\n                   b \\<le> a \\<Longrightarrow>\n                   2 ^ (a - b) = 2 ^ a div 2 ^ b;\n        b = Suc a\\<rbrakk>\n       \\<Longrightarrow> 2 ^ (Suc a - b) = 2 ^ Suc a div 2 ^ b", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma two_pow_div_gt_le:\n  \"v < 2 ^ n div (2 ^ m :: nat) \\<Longrightarrow> m \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v < 2 ^ n div 2 ^ m \\<Longrightarrow> m \\<le> n", "by (clarsimp dest!: less_two_pow_divD)"], ["", "lemma td_gal_lt:\n  \\<open>0 < c \\<Longrightarrow> a < b * c \\<longleftrightarrow> a div c < b\\<close>\n  for a b c :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < c \\<Longrightarrow> (a < b * c) = (a div c < b)", "apply (auto dest: less_mult_imp_div_less)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < c; a div c < b\\<rbrakk> \\<Longrightarrow> a < b * c", "apply (metis div_le_mono div_mult_self_is_m leD leI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma td_gal:\n  \\<open>0 < c \\<Longrightarrow> b * c \\<le> a  \\<longleftrightarrow> b \\<le> a div c\\<close>\n  for a b c :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < c \\<Longrightarrow> (b * c \\<le> a) = (b \\<le> a div c)", "by (meson not_le td_gal_lt)"], ["", "end"]]}