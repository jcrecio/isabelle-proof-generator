{"file_name": "/home/qj213/afp-2021-10-22/thys/Word_Lib/Examples.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Word_Lib", "problem_names": ["lemma \"(27 :: 4 word) = -5\"", "lemma \"(27 :: 4 word) = 11\"", "lemma \"27 \\<noteq> (11 :: 6 word)\"", "lemma \"(127 :: 6 word) = -1\"", "lemma\n  \"27 + 11 = (38::'a::len word)\"\n  \"27 + 11 = (6::5 word)\"\n  \"7 * 3 = (21::'a::len word)\"\n  \"11 - 27 = (-16::'a::len word)\"\n  \"- (- 11) = (11::'a::len word)\"\n  \"-40 + 1 = (-39::'a::len word)\"", "lemma \"word_pred 2 = 1\"", "lemma \"word_succ (- 3) = -2\"", "lemma \"23 < (27::8 word)\"", "lemma \"23 \\<le> (27::8 word)\"", "lemma \"\\<not> 23 < (27::2 word)\"", "lemma \"0 < (4::3 word)\"", "lemma \"1 < (4::3 word)\"", "lemma \"0 < (1::3 word)\"", "lemma \"a + 2 * b + c - b = (b + c) + (a :: 32 word)\"", "lemma \"uint (234567 :: 10 word) = 71\"", "lemma \"uint (-234567 :: 10 word) = 953\"", "lemma \"sint (234567 :: 10 word) = 71\"", "lemma \"sint (-234567 :: 10 word) = -71\"", "lemma \"uint (1 :: 10 word) = 1\"", "lemma \"unat (-234567 :: 10 word) = 953\"", "lemma \"unat (1 :: 10 word) = 1\"", "lemma \"ucast (0b1010 :: 4 word) = (0b10 :: 2 word)\"", "lemma \"ucast (0b1010 :: 4 word) = (0b1010 :: 10 word)\"", "lemma \"scast (0b1010 :: 4 word) = (0b111010 :: 6 word)\"", "lemma \"ucast (1 :: 4 word) = (1 :: 2 word)\"", "lemma \"i < x \\<Longrightarrow> i < i + 1\" for i x :: \"'a::len word\"", "lemma \"i < x \\<Longrightarrow> i < i + 1\" for i x :: \"'a::len word\"", "lemma \"of_bl [True, False, True, True] = (0b1011::'a::len word)\"", "lemma \"to_bl (0b110::4 word) = [False, True, True, False]\"", "lemma \"of_bl (replicate 32 True) = (0xFFFFFFFF::32 word)\"", "lemma \"0b110 AND 0b101 = (0b100 :: 32 word)\"", "lemma \"0b110 OR 0b011 = (0b111 :: 8 word)\"", "lemma \"0xF0 XOR 0xFF = (0x0F :: 8 word)\"", "lemma \"NOT (0xF0 :: 16 word) = 0xFF0F\"", "lemma \"0 AND 5 = (0 :: 8 word)\"", "lemma \"1 AND 1 = (1 :: 8 word)\"", "lemma \"1 AND 0 = (0 :: 8 word)\"", "lemma \"1 AND 5 = (1 :: 8 word)\"", "lemma \"1 OR 6 = (7 :: 8 word)\"", "lemma \"1 OR 1 = (1 :: 8 word)\"", "lemma \"1 XOR 7 = (6 :: 8 word)\"", "lemma \"1 XOR 1 = (0 :: 8 word)\"", "lemma \"NOT 1 = (254 :: 8 word)\"", "lemma \"NOT 0 = (255 :: 8 word)\"", "lemma \"(-1 :: 32 word) = 0xFFFFFFFF\"", "lemma \"(0b0010 :: 4 word) !! 1\"", "lemma \"\\<not> (0b0010 :: 4 word) !! 0\"", "lemma \"\\<not> (0b1000 :: 3 word) !! 4\"", "lemma \"\\<not> (1 :: 3 word) !! 2\"", "lemma \"(0b11000 :: 10 word) !! n = (n = 4 \\<or> n = 3)\"", "lemma \"set_bit 55 7 True = (183::'a::len word)\"", "lemma \"set_bit 0b0010 7 True = (0b10000010::'a::len word)\"", "lemma \"set_bit 0b0010 1 False = (0::'a::len word)\"", "lemma \"set_bit 1 3 True = (0b1001::'a::len word)\"", "lemma \"set_bit 1 0 False = (0::'a::len word)\"", "lemma \"set_bit 0 3 True = (0b1000::'a::len word)\"", "lemma \"set_bit 0 3 False = (0::'a::len word)\"", "lemma \"odd (0b0101::'a::len word)\"", "lemma \"even (0b1000::'a::len word)\"", "lemma \"odd (1::'a::len word)\"", "lemma \"even (0::'a::len word)\"", "lemma \"\\<not> msb (0b0101::4 word)\"", "lemma   \"msb (0b1000::4 word)\"", "lemma \"\\<not> msb (1::4 word)\"", "lemma \"\\<not> msb (0::4 word)\"", "lemma \"word_cat (27::4 word) (27::8 word) = (2843::'a::len word)\"", "lemma \"word_cat (0b0011::4 word) (0b1111::6word) = (0b0011001111 :: 10 word)\"", "lemma \"0b1011 << 2 = (0b101100::'a::len word)\"", "lemma \"0b1011 >> 2 = (0b10::8 word)\"", "lemma \"0b1011 >>> 2 = (0b10::8 word)\"", "lemma \"1 << 2 = (0b100::'a::len word)\"", "lemma \"slice 3 (0b101111::6 word) = (0b101::3 word)\"", "lemma \"slice 3 (1::6 word) = (0::3 word)\"", "lemma \"word_rotr 2 0b0110 = (0b1001::4 word)\"", "lemma \"word_rotl 1 0b1110 = (0b1101::4 word)\"", "lemma \"word_roti 2 0b1110 = (0b1011::4 word)\"", "lemma \"word_roti (- 2) 0b0110 = (0b1001::4 word)\"", "lemma \"word_rotr 2 0 = (0::4 word)\"", "lemma \"word_rotr 2 1 = (0b0100::4 word)\"", "lemma \"word_rotl 2 1 = (0b0100::4 word)\"", "lemma \"word_roti (- 2) 1 = (0b0100::4 word)\"", "lemma \"(x AND 0xff00) OR (x AND 0x00ff) = (x::16 word)\"", "lemma \"word_next (2:: 8 word) = 3\"", "lemma \"word_next (255:: 8 word) = 255\"", "lemma \"word_prev (2:: 8 word) = 1\"", "lemma \"word_prev (0:: 8 word) = 0\"", "lemma \"(x AND 0xff00) OR (x AND 0x00ff) = (x::16 word)\"", "lemma \"(x AND NOT 3) >> 4 << 2 = ((x >> 2) AND NOT 3)\"\n  for x :: \"10 word\"", "lemma \"((x AND -8) >> 3) AND 7 = (x AND 56) >> 3\"\n  for x :: \"12 word\"", "lemma \"x \\<le> 42 \\<Longrightarrow> x \\<le> 89\"\n  for x :: \"8 word\"", "lemma \"(x AND 1023) = 0 \\<Longrightarrow> x \\<le> -1024\"\n  for x :: \\<open>32 word\\<close>", "lemma shiftr_overflow: \"32 \\<le> a \\<Longrightarrow> b >> a = 0\"\n  for b :: \\<open>32 word\\<close>", "lemma \"((x :: 32 word) >> 3) AND 7 = (x AND 56) >> 3\"", "lemma\n  \"( 4 :: 32 word) sdiv  4 =  1\"\n  \"(-4 :: 32 word) sdiv  4 = -1\"\n  \"(-3 :: 32 word) sdiv  4 =  0\"\n  \"( 3 :: 32 word) sdiv -4 =  0\"\n  \"(-3 :: 32 word) sdiv -4 =  0\"\n  \"(-5 :: 32 word) sdiv -4 =  1\"\n  \"( 5 :: 32 word) sdiv -4 = -1\"", "lemma\n  \"( 4 :: 32 word) smod  4 =   0\"\n  \"( 3 :: 32 word) smod  4 =   3\"\n  \"(-3 :: 32 word) smod  4 =  -3\"\n  \"( 3 :: 32 word) smod -4 =   3\"\n  \"(-3 :: 32 word) smod -4 =  -3\"\n  \"(-5 :: 32 word) smod -4 =  -1\"\n  \"( 5 :: 32 word) smod -4 =   1\"", "lemma \"1 < (1024::32 word) \\<and> 1 \\<le> (1024::32 word)\""], "translations": [["", "lemma \"(27 :: 4 word) = -5\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 27 = - 5", "by simp"], ["", "lemma \"(27 :: 4 word) = 11\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 27 = 11", "by simp"], ["", "lemma \"27 \\<noteq> (11 :: 6 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 27 \\<noteq> 11", "by simp"], ["", "text \"signed\""], ["", "lemma \"(127 :: 6 word) = -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 127 = - 1", "by simp"], ["", "text \"number ring simps\""], ["", "lemma\n  \"27 + 11 = (38::'a::len word)\"\n  \"27 + 11 = (6::5 word)\"\n  \"7 * 3 = (21::'a::len word)\"\n  \"11 - 27 = (-16::'a::len word)\"\n  \"- (- 11) = (11::'a::len word)\"\n  \"-40 + 1 = (-39::'a::len word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (27 + 11 = 38 &&& 27 + 11 = 6 &&& 7 * 3 = 21) &&&\n    11 - 27 = - 16 &&& - (- 11) = 11 &&& - 40 + 1 = - 39", "by simp_all"], ["", "lemma \"word_pred 2 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. word_pred 2 = 1", "by simp"], ["", "lemma \"word_succ (- 3) = -2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. word_succ (- 3) = - 2", "by simp"], ["", "lemma \"23 < (27::8 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 23 < 27", "by simp"], ["", "lemma \"23 \\<le> (27::8 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 23 \\<le> 27", "by simp"], ["", "lemma \"\\<not> 23 < (27::2 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 23 < 27", "by simp"], ["", "lemma \"0 < (4::3 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 4", "by simp"], ["", "lemma \"1 < (4::3 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < 4", "by simp"], ["", "lemma \"0 < (1::3 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1", "by simp"], ["", "text \"ring operations\""], ["", "lemma \"a + 2 * b + c - b = (b + c) + (a :: 32 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a + 2 * b + c - b = b + c + a", "by simp"], ["", "text \"casting\""], ["", "lemma \"uint (234567 :: 10 word) = 71\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uint 234567 = 71", "by simp"], ["", "lemma \"uint (-234567 :: 10 word) = 953\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uint (- 234567) = 953", "by simp"], ["", "lemma \"sint (234567 :: 10 word) = 71\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sint 234567 = 71", "by simp"], ["", "lemma \"sint (-234567 :: 10 word) = -71\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sint (- 234567) = - 71", "by simp"], ["", "lemma \"uint (1 :: 10 word) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uint 1 = 1", "by simp"], ["", "lemma \"unat (-234567 :: 10 word) = 953\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unat (- 234567) = 953", "by simp"], ["", "lemma \"unat (1 :: 10 word) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unat 1 = 1", "by simp"], ["", "lemma \"ucast (0b1010 :: 4 word) = (0b10 :: 2 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ucast 10 = 2", "by simp"], ["", "lemma \"ucast (0b1010 :: 4 word) = (0b1010 :: 10 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ucast 10 = 10", "by simp"], ["", "lemma \"scast (0b1010 :: 4 word) = (0b111010 :: 6 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. scast 10 = 58", "by simp"], ["", "lemma \"ucast (1 :: 4 word) = (1 :: 2 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ucast 1 = 1", "by simp"], ["", "text \"reducing goals to nat or int and arith:\""], ["", "lemma \"i < x \\<Longrightarrow> i < i + 1\" for i x :: \"'a::len word\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < x \\<Longrightarrow> i < i + 1", "by unat_arith"], ["", "lemma \"i < x \\<Longrightarrow> i < i + 1\" for i x :: \"'a::len word\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < x \\<Longrightarrow> i < i + 1", "by unat_arith"], ["", "text \"bool lists\""], ["", "lemma \"of_bl [True, False, True, True] = (0b1011::'a::len word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_bl [True, False, True, True] = 11", "by simp"], ["", "lemma \"to_bl (0b110::4 word) = [False, True, True, False]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_bl 6 = [False, True, True, False]", "by simp"], ["", "lemma \"of_bl (replicate 32 True) = (0xFFFFFFFF::32 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_bl (replicate 32 True) = 4294967295", "by (simp add: numeral_eq_Suc)"], ["", "text \"bit operations\""], ["", "lemma \"0b110 AND 0b101 = (0b100 :: 32 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 && 5 = 4", "by simp"], ["", "lemma \"0b110 OR 0b011 = (0b111 :: 8 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 || 3 = 7", "by simp"], ["", "lemma \"0xF0 XOR 0xFF = (0x0F :: 8 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 240 xor 255 = 15", "by simp"], ["", "lemma \"NOT (0xF0 :: 16 word) = 0xFF0F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ~~ 240 = 65295", "by simp"], ["", "lemma \"0 AND 5 = (0 :: 8 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 && 5 = 0", "by simp"], ["", "lemma \"1 AND 1 = (1 :: 8 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 && 1 = 1", "by simp"], ["", "lemma \"1 AND 0 = (0 :: 8 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 && 0 = 0", "by simp"], ["", "lemma \"1 AND 5 = (1 :: 8 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 && 5 = 1", "by simp"], ["", "lemma \"1 OR 6 = (7 :: 8 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 || 6 = 7", "by simp"], ["", "lemma \"1 OR 1 = (1 :: 8 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 || 1 = 1", "by simp"], ["", "lemma \"1 XOR 7 = (6 :: 8 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 xor 7 = 6", "by simp"], ["", "lemma \"1 XOR 1 = (0 :: 8 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 xor 1 = 0", "by simp"], ["", "lemma \"NOT 1 = (254 :: 8 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ~~ 1 = 254", "by simp"], ["", "lemma \"NOT 0 = (255 :: 8 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ~~ 0 = 255", "by simp"], ["", "lemma \"(-1 :: 32 word) = 0xFFFFFFFF\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 = 4294967295", "by simp"], ["", "lemma \"(0b0010 :: 4 word) !! 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 !! 1", "by simp"], ["", "lemma \"\\<not> (0b0010 :: 4 word) !! 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 2 !! 0", "by simp"], ["", "lemma \"\\<not> (0b1000 :: 3 word) !! 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 8 !! 4", "by simp"], ["", "lemma \"\\<not> (1 :: 3 word) !! 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 1 !! 2", "by simp"], ["", "lemma \"(0b11000 :: 10 word) !! n = (n = 4 \\<or> n = 3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 24 !! n = (n = 4 \\<or> n = 3)", "by (auto simp add: bin_nth_Bit0 bin_nth_Bit1)"], ["", "lemma \"set_bit 55 7 True = (183::'a::len word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_bit_class.set_bit 55 7 True = 183", "by simp"], ["", "lemma \"set_bit 0b0010 7 True = (0b10000010::'a::len word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_bit_class.set_bit 2 7 True = 130", "by simp"], ["", "lemma \"set_bit 0b0010 1 False = (0::'a::len word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_bit_class.set_bit 2 1 False = 0", "by simp"], ["", "lemma \"set_bit 1 3 True = (0b1001::'a::len word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_bit_class.set_bit 1 3 True = 9", "by simp"], ["", "lemma \"set_bit 1 0 False = (0::'a::len word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_bit_class.set_bit 1 0 False = 0", "by simp"], ["", "lemma \"set_bit 0 3 True = (0b1000::'a::len word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_bit_class.set_bit 0 3 True = 8", "by simp"], ["", "lemma \"set_bit 0 3 False = (0::'a::len word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_bit_class.set_bit 0 3 False = 0", "by simp"], ["", "lemma \"odd (0b0101::'a::len word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. odd 5", "by simp"], ["", "lemma \"even (0b1000::'a::len word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. even 8", "by simp"], ["", "lemma \"odd (1::'a::len word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. odd 1", "by simp"], ["", "lemma \"even (0::'a::len word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. even 0", "by simp"], ["", "lemma \"\\<not> msb (0b0101::4 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> msb 5", "by simp"], ["", "lemma   \"msb (0b1000::4 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. msb 8", "by simp"], ["", "lemma \"\\<not> msb (1::4 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> msb 1", "by simp"], ["", "lemma \"\\<not> msb (0::4 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> msb 0", "by simp"], ["", "lemma \"word_cat (27::4 word) (27::8 word) = (2843::'a::len word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. word_cat 27 27 = 2843", "by simp"], ["", "lemma \"word_cat (0b0011::4 word) (0b1111::6word) = (0b0011001111 :: 10 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. word_cat 3 15 = 207", "by simp"], ["", "lemma \"0b1011 << 2 = (0b101100::'a::len word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 11 << 2 = 44", "by simp"], ["", "lemma \"0b1011 >> 2 = (0b10::8 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 11 >> 2 = 2", "by simp"], ["", "lemma \"0b1011 >>> 2 = (0b10::8 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 11 >>> 2 = 2", "by simp"], ["", "lemma \"1 << 2 = (0b100::'a::len word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 << 2 = 4", "apply simp?"], ["proof (prove)\ngoal:\nNo subgoals!", "oops"], ["", "lemma \"slice 3 (0b101111::6 word) = (0b101::3 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. slice 3 47 = 5", "by simp"], ["", "lemma \"slice 3 (1::6 word) = (0::3 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. slice 3 1 = 0", "apply simp?"], ["proof (prove)\ngoal (1 subgoal):\n 1. slice 3 1 = 0", "oops"], ["", "lemma \"word_rotr 2 0b0110 = (0b1001::4 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. word_rotr 2 6 = 9", "by simp"], ["", "lemma \"word_rotl 1 0b1110 = (0b1101::4 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. word_rotl 1 14 = 13", "by simp"], ["", "lemma \"word_roti 2 0b1110 = (0b1011::4 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. word_roti 2 14 = 11", "by simp"], ["", "lemma \"word_roti (- 2) 0b0110 = (0b1001::4 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. word_roti (- 2) 6 = 9", "by simp"], ["", "lemma \"word_rotr 2 0 = (0::4 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. word_rotr 2 0 = 0", "by simp"], ["", "lemma \"word_rotr 2 1 = (0b0100::4 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. word_rotr 2 1 = 4", "apply simp?"], ["proof (prove)\ngoal (1 subgoal):\n 1. word_rotr 2 1 = 4", "oops"], ["", "lemma \"word_rotl 2 1 = (0b0100::4 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. word_rotl 2 1 = 4", "apply simp?"], ["proof (prove)\ngoal (1 subgoal):\n 1. word_rotl 2 1 = 4", "oops"], ["", "lemma \"word_roti (- 2) 1 = (0b0100::4 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. word_roti (- 2) 1 = 4", "apply simp?"], ["proof (prove)\ngoal (1 subgoal):\n 1. word_rotl 2 1 = 4", "oops"], ["", "lemma \"(x AND 0xff00) OR (x AND 0x00ff) = (x::16 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x && 65280 || x && 255 = x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x && 65280 || x && 255 = x", "have \"(x AND 0xff00) OR (x AND 0x00ff) = x AND (0xff00 OR 0x00ff)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x && 65280 || x && 255 = x && (65280 || 255)", "by (simp only: word_ao_dist2)"], ["proof (state)\nthis:\n  x && 65280 || x && 255 = x && (65280 || 255)\n\ngoal (1 subgoal):\n 1. x && 65280 || x && 255 = x", "also"], ["proof (state)\nthis:\n  x && 65280 || x && 255 = x && (65280 || 255)\n\ngoal (1 subgoal):\n 1. x && 65280 || x && 255 = x", "have \"0xff00 OR 0x00ff = (-1::16 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 65280 || 255 = - 1", "by simp"], ["proof (state)\nthis:\n  65280 || 255 = - 1\n\ngoal (1 subgoal):\n 1. x && 65280 || x && 255 = x", "also"], ["proof (state)\nthis:\n  65280 || 255 = - 1\n\ngoal (1 subgoal):\n 1. x && 65280 || x && 255 = x", "have \"x AND -1 = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x && - 1 = x", "by simp"], ["proof (state)\nthis:\n  x && - 1 = x\n\ngoal (1 subgoal):\n 1. x && 65280 || x && 255 = x", "finally"], ["proof (chain)\npicking this:\n  x && 65280 || x && 255 = x", "show ?thesis"], ["proof (prove)\nusing this:\n  x && 65280 || x && 255 = x\n\ngoal (1 subgoal):\n 1. x && 65280 || x && 255 = x", "."], ["proof (state)\nthis:\n  x && 65280 || x && 255 = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \"word_next (2:: 8 word) = 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. word_next 2 = 3", "by eval"], ["", "lemma \"word_next (255:: 8 word) = 255\""], ["proof (prove)\ngoal (1 subgoal):\n 1. word_next 255 = 255", "by eval"], ["", "lemma \"word_prev (2:: 8 word) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. word_prev 2 = 1", "by eval"], ["", "lemma \"word_prev (0:: 8 word) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. word_prev 0 = 0", "by eval"], ["", "text \"proofs using bitwise expansion\""], ["", "lemma \"(x AND 0xff00) OR (x AND 0x00ff) = (x::16 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x && 65280 || x && 255 = x", "by word_bitwise"], ["", "lemma \"(x AND NOT 3) >> 4 << 2 = ((x >> 2) AND NOT 3)\"\n  for x :: \"10 word\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x && ~~ 3 >> 4 << 2 = (x >> 2) && ~~ 3", "by word_bitwise"], ["", "lemma \"((x AND -8) >> 3) AND 7 = (x AND 56) >> 3\"\n  for x :: \"12 word\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x && - 8 >> 3) && 7 = x && 56 >> 3", "by word_bitwise"], ["", "text \"some problems require further reasoning after bit expansion\""], ["", "lemma \"x \\<le> 42 \\<Longrightarrow> x \\<le> 89\"\n  for x :: \"8 word\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> 42 \\<Longrightarrow> x \\<le> 89", "apply word_bitwise"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> x !! 7 \\<and>\n    \\<not> x !! 6 \\<and>\n    (x !! 5 \\<longrightarrow>\n     \\<not> x !! 4 \\<and>\n     (x !! 3 \\<longrightarrow>\n      \\<not> x !! 2 \\<and>\n      (x !! 1 \\<longrightarrow> \\<not> x !! 0))) \\<Longrightarrow>\n    \\<not> x !! 7 \\<and>\n    (x !! 6 \\<longrightarrow>\n     \\<not> x !! 5 \\<and>\n     (x !! 3 \\<longrightarrow>\n      x !! 4 \\<longrightarrow> \\<not> x !! 2 \\<and> \\<not> x !! 1))", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma \"(x AND 1023) = 0 \\<Longrightarrow> x \\<le> -1024\"\n  for x :: \\<open>32 word\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. x && 1023 = 0 \\<Longrightarrow> x \\<le> - 1024", "apply word_bitwise"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> x !! 0 \\<and>\n    \\<not> x !! 1 \\<and>\n    \\<not> x !! 2 \\<and>\n    \\<not> x !! 3 \\<and>\n    \\<not> x !! 4 \\<and>\n    \\<not> x !! 5 \\<and>\n    \\<not> x !! 6 \\<and>\n    \\<not> x !! 7 \\<and>\n    \\<not> x !! 8 \\<and> \\<not> x !! 9 \\<Longrightarrow>\n    x !! 10 \\<longrightarrow>\n    x !! 11 \\<longrightarrow>\n    x !! 12 \\<longrightarrow>\n    x !! 13 \\<longrightarrow>\n    x !! 14 \\<longrightarrow>\n    x !! 15 \\<longrightarrow>\n    x !! 16 \\<longrightarrow>\n    x !! 17 \\<longrightarrow>\n    x !! 18 \\<longrightarrow>\n    x !! 19 \\<longrightarrow>\n    x !! 20 \\<longrightarrow>\n    x !! 21 \\<longrightarrow>\n    x !! 22 \\<longrightarrow>\n    x !! 23 \\<longrightarrow>\n    x !! 24 \\<longrightarrow>\n    x !! 25 \\<longrightarrow>\n    x !! 26 \\<longrightarrow>\n    x !! 27 \\<longrightarrow>\n    x !! 28 \\<longrightarrow>\n    x !! 29 \\<longrightarrow>\n    x !! 30 \\<longrightarrow>\n    x !! 31 \\<longrightarrow>\n    \\<not> x !! 9 \\<and>\n    \\<not> x !! 8 \\<and>\n    \\<not> x !! 7 \\<and>\n    \\<not> x !! 6 \\<and>\n    \\<not> x !! 5 \\<and>\n    \\<not> x !! 4 \\<and>\n    \\<not> x !! 3 \\<and>\n    \\<not> x !! 2 \\<and> \\<not> x !! 1 \\<and> \\<not> x !! 0", "apply clarsimp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \"operations like shifts by non-numerals will expose some internal list\n representations but may still be easy to solve\""], ["", "lemma shiftr_overflow: \"32 \\<le> a \\<Longrightarrow> b >> a = 0\"\n  for b :: \\<open>32 word\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. 32 \\<le> a \\<Longrightarrow> b >> a = 0", "apply word_bitwise"], ["proof (prove)\ngoal (1 subgoal):\n 1. 32 \\<le> a \\<Longrightarrow>\n    takefill False (Suc (Suc (Suc (Suc 28))))\n     (drop a\n       [b !! 0, b !! 1, b !! 2, b !! 3, b !! 4, b !! 5, b !! 6, b !! 7,\n        b !! 8, b !! 9, b !! 10, b !! 11, b !! 12, b !! 13, b !! 14,\n        b !! 15, b !! 16, b !! 17, b !! 18, b !! 19, b !! 20, b !! 21,\n        b !! 22, b !! 23, b !! 24, b !! 25, b !! 26, b !! 27, b !! 28,\n        b !! 29, b !! 30, b !! 31]) =\n    [False, False, False, False, False, False, False, False, False, False,\n     False, False, False, False, False, False, False, False, False, False,\n     False, False, False, False, False, False, False, False, False, False,\n     False, False]", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(* testing for presence of word_bitwise *)"], ["", "lemma \"((x :: 32 word) >> 3) AND 7 = (x AND 56) >> 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x >> 3) && 7 = x && 56 >> 3", "by word_bitwise"], ["", "(* Tests *)"], ["", "lemma\n  \"( 4 :: 32 word) sdiv  4 =  1\"\n  \"(-4 :: 32 word) sdiv  4 = -1\"\n  \"(-3 :: 32 word) sdiv  4 =  0\"\n  \"( 3 :: 32 word) sdiv -4 =  0\"\n  \"(-3 :: 32 word) sdiv -4 =  0\"\n  \"(-5 :: 32 word) sdiv -4 =  1\"\n  \"( 5 :: 32 word) sdiv -4 = -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (4 sdiv 4 = 1 &&& - 4 sdiv 4 = - 1 &&& - 3 sdiv 4 = 0) &&&\n    (3 sdiv - 4 = 0 &&& - 3 sdiv - 4 = 0) &&&\n    - 5 sdiv - 4 = 1 &&& 5 sdiv - 4 = - 1", "by (simp_all add: sdiv_word_def signed_divide_int_def)"], ["", "lemma\n  \"( 4 :: 32 word) smod  4 =   0\"\n  \"( 3 :: 32 word) smod  4 =   3\"\n  \"(-3 :: 32 word) smod  4 =  -3\"\n  \"( 3 :: 32 word) smod -4 =   3\"\n  \"(-3 :: 32 word) smod -4 =  -3\"\n  \"(-5 :: 32 word) smod -4 =  -1\"\n  \"( 5 :: 32 word) smod -4 =   1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (4 smod 4 = 0 &&& 3 smod 4 = 3 &&& - 3 smod 4 = - 3) &&&\n    (3 smod - 4 = 3 &&& - 3 smod - 4 = - 3) &&&\n    - 5 smod - 4 = - 1 &&& 5 smod - 4 = 1", "by (simp_all add: smod_word_def signed_modulo_int_def signed_divide_int_def)"], ["", "lemma \"1 < (1024::32 word) \\<and> 1 \\<le> (1024::32 word)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < 1024 \\<and> 1 \\<le> 1024", "by simp"], ["", "end"]]}