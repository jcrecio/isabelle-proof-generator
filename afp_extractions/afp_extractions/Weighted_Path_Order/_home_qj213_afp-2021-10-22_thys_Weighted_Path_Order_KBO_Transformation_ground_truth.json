{"file_name": "/home/qj213/afp-2021-10-22/thys/Weighted_Path_Order/KBO_Transformation.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Weighted_Path_Order", "problem_names": ["lemma weight_w0_unary:\n  assumes *: \"weight t = w0\" \"t = Fun f ts\" \"ts = t1 # ts'\"\n  shows \"ts' = []\" \"w (f,1) = 0\"", "lemma admissible_kbo': \"admissible_kbo w w0 pr_strict' pr_weak' least scf\"", "lemma least_pr_weak': \"least f \\<Longrightarrow> pr_weak' g (f,0)\"", "lemma least_pr_weak'_trans: \"least f \\<Longrightarrow> pr_weak' (f,0) g \\<Longrightarrow> least (fst g) \\<and> snd g = 0\"", "lemma kbo'_eq_kbo: \"kbo'.kbo s t = kbo s t\""], "translations": [["", "lemma weight_w0_unary:\n  assumes *: \"weight t = w0\" \"t = Fun f ts\" \"ts = t1 # ts'\"\n  shows \"ts' = []\" \"w (f,1) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ts' = [] &&& w (f, 1) = 0", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. ts' = []\n 2. w (f, 1) = 0", "have \"w0 + sum_list (map weight ts') \\<le> weight t1 + sum_list (map weight ts')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w0 + sum_list (map weight ts')\n    \\<le> weight t1 + sum_list (map weight ts')", "by (rule add_right_mono, rule weight_w0)"], ["proof (state)\nthis:\n  w0 + sum_list (map weight ts') \\<le> weight t1 + sum_list (map weight ts')\n\ngoal (2 subgoals):\n 1. ts' = []\n 2. w (f, 1) = 0", "also"], ["proof (state)\nthis:\n  w0 + sum_list (map weight ts') \\<le> weight t1 + sum_list (map weight ts')\n\ngoal (2 subgoals):\n 1. ts' = []\n 2. w (f, 1) = 0", "have \"\\<dots> = sum_list (map weight ts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weight t1 + sum_list (map weight ts') = sum_list (map weight ts)", "unfolding *"], ["proof (prove)\ngoal (1 subgoal):\n 1. weight t1 + sum_list (map weight ts') = sum_list (map weight (t1 # ts'))", "by simp"], ["proof (state)\nthis:\n  weight t1 + sum_list (map weight ts') = sum_list (map weight ts)\n\ngoal (2 subgoals):\n 1. ts' = []\n 2. w (f, 1) = 0", "also"], ["proof (state)\nthis:\n  weight t1 + sum_list (map weight ts') = sum_list (map weight ts)\n\ngoal (2 subgoals):\n 1. ts' = []\n 2. w (f, 1) = 0", "have \"\\<dots> \\<le> sum_list (map weight (scf_list (scf (f, length ts)) ts))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (map weight ts)\n    \\<le> sum_list (map weight (scf_list (scf (f, length ts)) ts))", "by (rule sum_list_scf_list, insert scf, auto)"], ["proof (state)\nthis:\n  sum_list (map weight ts)\n  \\<le> sum_list (map weight (scf_list (scf (f, length ts)) ts))\n\ngoal (2 subgoals):\n 1. ts' = []\n 2. w (f, 1) = 0", "finally"], ["proof (chain)\npicking this:\n  w0 + sum_list (map weight ts')\n  \\<le> sum_list (map weight (scf_list (scf (f, length ts)) ts))", "have \"w (f,length ts) + w0 + sum_list (map weight ts') \\<le> weight t\""], ["proof (prove)\nusing this:\n  w0 + sum_list (map weight ts')\n  \\<le> sum_list (map weight (scf_list (scf (f, length ts)) ts))\n\ngoal (1 subgoal):\n 1. w (f, length ts) + w0 + sum_list (map weight ts') \\<le> weight t", "unfolding *"], ["proof (prove)\nusing this:\n  w0 + sum_list (map weight ts')\n  \\<le> sum_list\n         (map weight (scf_list (scf (f, length (t1 # ts'))) (t1 # ts')))\n\ngoal (1 subgoal):\n 1. w (f, length (t1 # ts')) + w0 + sum_list (map weight ts')\n    \\<le> weight (Fun f (t1 # ts'))", "by simp"], ["proof (state)\nthis:\n  w (f, length ts) + w0 + sum_list (map weight ts') \\<le> weight t\n\ngoal (2 subgoals):\n 1. ts' = []\n 2. w (f, 1) = 0", "with *(1)"], ["proof (chain)\npicking this:\n  weight t = w0\n  w (f, length ts) + w0 + sum_list (map weight ts') \\<le> weight t", "have sum: \"sum_list (map weight ts') = 0\" and wf: \"w (f,length ts) = 0\""], ["proof (prove)\nusing this:\n  weight t = w0\n  w (f, length ts) + w0 + sum_list (map weight ts') \\<le> weight t\n\ngoal (1 subgoal):\n 1. sum_list (map weight ts') = 0 &&& w (f, length ts) = 0", "by auto"], ["proof (state)\nthis:\n  sum_list (map weight ts') = 0\n  w (f, length ts) = 0\n\ngoal (2 subgoals):\n 1. ts' = []\n 2. w (f, 1) = 0", "with weight_gt_0"], ["proof (chain)\npicking this:\n  0 < weight ?t\n  sum_list (map weight ts') = 0\n  w (f, length ts) = 0", "show ts': \"ts' = []\""], ["proof (prove)\nusing this:\n  0 < weight ?t\n  sum_list (map weight ts') = 0\n  w (f, length ts) = 0\n\ngoal (1 subgoal):\n 1. ts' = []", "by (cases ts', auto)"], ["proof (state)\nthis:\n  ts' = []\n\ngoal (1 subgoal):\n 1. w (f, 1) = 0", "with wf"], ["proof (chain)\npicking this:\n  w (f, length ts) = 0\n  ts' = []", "show \"w (f,1) = 0\""], ["proof (prove)\nusing this:\n  w (f, length ts) = 0\n  ts' = []\n\ngoal (1 subgoal):\n 1. w (f, 1) = 0", "using *"], ["proof (prove)\nusing this:\n  w (f, length ts) = 0\n  ts' = []\n  weight t = w0\n  t = Fun f ts\n  ts = t1 # ts'\n\ngoal (1 subgoal):\n 1. w (f, 1) = 0", "by auto"], ["proof (state)\nthis:\n  w (f, 1) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "definition lConsts :: \"('f \\<times> nat)set\" where \"lConsts = { (f,0) | f. least f}\""], ["", "definition pr_strict' where \"pr_strict' f g = (f \\<notin> lConsts \\<and> (pr_strict f g \\<or> g \\<in> lConsts))\""], ["", "definition pr_weak' where \"pr_weak' f g = ((f \\<notin> lConsts \\<and> pr_weak f g) \\<or> g \\<in> lConsts)\""], ["", "lemma admissible_kbo': \"admissible_kbo w w0 pr_strict' pr_weak' least scf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. admissible_kbo w w0 pr_strict' pr_weak' least scf", "apply (unfold_locales)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>f. w0 \\<le> w (f, 0)\n 2. 0 < w0\n 3. \\<And>f g n. w (f, 1) = 0 \\<Longrightarrow> pr_weak' (f, 1) (g, n)\n 4. \\<And>f.\n       least f =\n       (w (f, 0) = w0 \\<and>\n        (\\<forall>g.\n            w (g, 0) = w0 \\<longrightarrow> pr_weak' (g, 0) (f, 0)))\n 5. \\<And>i n f. i < n \\<Longrightarrow> 0 < scf (f, n) i\n 6. \\<And>fn. pr_weak' fn fn\n 7. \\<And>fn gm hk.\n       \\<lbrakk>pr_weak' fn gm; pr_weak' gm hk\\<rbrakk>\n       \\<Longrightarrow> pr_weak' fn hk\n 8. \\<And>fn gm.\n       pr_strict' fn gm = (pr_weak' fn gm \\<and> \\<not> pr_weak' gm fn)\n 9. SN {(x, y). pr_strict' x y}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. w0 \\<le> w (f_, 0)", "by (rule w0)"], ["proof (prove)\ngoal (8 subgoals):\n 1. 0 < w0\n 2. \\<And>f g n. w (f, 1) = 0 \\<Longrightarrow> pr_weak' (f, 1) (g, n)\n 3. \\<And>f.\n       least f =\n       (w (f, 0) = w0 \\<and>\n        (\\<forall>g.\n            w (g, 0) = w0 \\<longrightarrow> pr_weak' (g, 0) (f, 0)))\n 4. \\<And>i n f. i < n \\<Longrightarrow> 0 < scf (f, n) i\n 5. \\<And>fn. pr_weak' fn fn\n 6. \\<And>fn gm hk.\n       \\<lbrakk>pr_weak' fn gm; pr_weak' gm hk\\<rbrakk>\n       \\<Longrightarrow> pr_weak' fn hk\n 7. \\<And>fn gm.\n       pr_strict' fn gm = (pr_weak' fn gm \\<and> \\<not> pr_weak' gm fn)\n 8. SN {(x, y). pr_strict' x y}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < w0", "by (rule w0)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>f g n. w (f, 1) = 0 \\<Longrightarrow> pr_weak' (f, 1) (g, n)\n 2. \\<And>f.\n       least f =\n       (w (f, 0) = w0 \\<and>\n        (\\<forall>g.\n            w (g, 0) = w0 \\<longrightarrow> pr_weak' (g, 0) (f, 0)))\n 3. \\<And>i n f. i < n \\<Longrightarrow> 0 < scf (f, n) i\n 4. \\<And>fn. pr_weak' fn fn\n 5. \\<And>fn gm hk.\n       \\<lbrakk>pr_weak' fn gm; pr_weak' gm hk\\<rbrakk>\n       \\<Longrightarrow> pr_weak' fn hk\n 6. \\<And>fn gm.\n       pr_strict' fn gm = (pr_weak' fn gm \\<and> \\<not> pr_weak' gm fn)\n 7. SN {(x, y). pr_strict' x y}", "subgoal for f g n"], ["proof (prove)\ngoal (1 subgoal):\n 1. w (f, 1) = 0 \\<Longrightarrow> pr_weak' (f, 1) (g, n)", "using adm[of f g n]"], ["proof (prove)\nusing this:\n  w (f, 1) = 0 \\<Longrightarrow> pr_weak (f, 1) (g, n)\n\ngoal (1 subgoal):\n 1. w (f, 1) = 0 \\<Longrightarrow> pr_weak' (f, 1) (g, n)", "unfolding pr_weak'_def"], ["proof (prove)\nusing this:\n  w (f, 1) = 0 \\<Longrightarrow> pr_weak (f, 1) (g, n)\n\ngoal (1 subgoal):\n 1. w (f, 1) = 0 \\<Longrightarrow>\n    (f, 1) \\<notin> lConsts \\<and> pr_weak (f, 1) (g, n) \\<or>\n    (g, n) \\<in> lConsts", "by (auto simp: lConsts_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>f.\n       least f =\n       (w (f, 0) = w0 \\<and>\n        (\\<forall>g.\n            w (g, 0) = w0 \\<longrightarrow> pr_weak' (g, 0) (f, 0)))\n 2. \\<And>i n f. i < n \\<Longrightarrow> 0 < scf (f, n) i\n 3. \\<And>fn. pr_weak' fn fn\n 4. \\<And>fn gm hk.\n       \\<lbrakk>pr_weak' fn gm; pr_weak' gm hk\\<rbrakk>\n       \\<Longrightarrow> pr_weak' fn hk\n 5. \\<And>fn gm.\n       pr_strict' fn gm = (pr_weak' fn gm \\<and> \\<not> pr_weak' gm fn)\n 6. SN {(x, y). pr_strict' x y}", "subgoal for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. least f =\n    (w (f, 0) = w0 \\<and>\n     (\\<forall>g. w (g, 0) = w0 \\<longrightarrow> pr_weak' (g, 0) (f, 0)))", "using least[of f]"], ["proof (prove)\nusing this:\n  least f =\n  (w (f, 0) = w0 \\<and>\n   (\\<forall>g. w (g, 0) = w0 \\<longrightarrow> pr_weak (g, 0) (f, 0)))\n\ngoal (1 subgoal):\n 1. least f =\n    (w (f, 0) = w0 \\<and>\n     (\\<forall>g. w (g, 0) = w0 \\<longrightarrow> pr_weak' (g, 0) (f, 0)))", "unfolding pr_weak'_def lConsts_def"], ["proof (prove)\nusing this:\n  least f =\n  (w (f, 0) = w0 \\<and>\n   (\\<forall>g. w (g, 0) = w0 \\<longrightarrow> pr_weak (g, 0) (f, 0)))\n\ngoal (1 subgoal):\n 1. least f =\n    (w (f, 0) = w0 \\<and>\n     (\\<forall>g.\n         w (g, 0) = w0 \\<longrightarrow>\n         (g, 0) \\<notin> {(f, 0) |f. least f} \\<and>\n         pr_weak (g, 0) (f, 0) \\<or>\n         (f, 0) \\<in> {(f, 0) |f. least f}))", "by auto"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>i n f. i < n \\<Longrightarrow> 0 < scf (f, n) i\n 2. \\<And>fn. pr_weak' fn fn\n 3. \\<And>fn gm hk.\n       \\<lbrakk>pr_weak' fn gm; pr_weak' gm hk\\<rbrakk>\n       \\<Longrightarrow> pr_weak' fn hk\n 4. \\<And>fn gm.\n       pr_strict' fn gm = (pr_weak' fn gm \\<and> \\<not> pr_weak' gm fn)\n 5. SN {(x, y). pr_strict' x y}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. i_ < n_ \\<Longrightarrow> 0 < scf (f_, n_) i_", "by (rule scf)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>fn. pr_weak' fn fn\n 2. \\<And>fn gm hk.\n       \\<lbrakk>pr_weak' fn gm; pr_weak' gm hk\\<rbrakk>\n       \\<Longrightarrow> pr_weak' fn hk\n 3. \\<And>fn gm.\n       pr_strict' fn gm = (pr_weak' fn gm \\<and> \\<not> pr_weak' gm fn)\n 4. SN {(x, y). pr_strict' x y}", "subgoal for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_weak' f f", "using pr_weak_refl[of f]"], ["proof (prove)\nusing this:\n  pr_weak f f\n\ngoal (1 subgoal):\n 1. pr_weak' f f", "unfolding pr_weak'_def"], ["proof (prove)\nusing this:\n  pr_weak f f\n\ngoal (1 subgoal):\n 1. f \\<notin> lConsts \\<and> pr_weak f f \\<or> f \\<in> lConsts", "by auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>fn gm hk.\n       \\<lbrakk>pr_weak' fn gm; pr_weak' gm hk\\<rbrakk>\n       \\<Longrightarrow> pr_weak' fn hk\n 2. \\<And>fn gm.\n       pr_strict' fn gm = (pr_weak' fn gm \\<and> \\<not> pr_weak' gm fn)\n 3. SN {(x, y). pr_strict' x y}", "subgoal for f g h"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_weak' f g; pr_weak' g h\\<rbrakk>\n    \\<Longrightarrow> pr_weak' f h", "using pr_weak_trans[of f g h]"], ["proof (prove)\nusing this:\n  \\<lbrakk>pr_weak f g; pr_weak g h\\<rbrakk> \\<Longrightarrow> pr_weak f h\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_weak' f g; pr_weak' g h\\<rbrakk>\n    \\<Longrightarrow> pr_weak' f h", "unfolding pr_weak'_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>pr_weak f g; pr_weak g h\\<rbrakk> \\<Longrightarrow> pr_weak f h\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<notin> lConsts \\<and> pr_weak f g \\<or> g \\<in> lConsts;\n     g \\<notin> lConsts \\<and> pr_weak g h \\<or> h \\<in> lConsts\\<rbrakk>\n    \\<Longrightarrow> f \\<notin> lConsts \\<and> pr_weak f h \\<or>\n                      h \\<in> lConsts", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>fn gm.\n       pr_strict' fn gm = (pr_weak' fn gm \\<and> \\<not> pr_weak' gm fn)\n 2. SN {(x, y). pr_strict' x y}", "subgoal for f g"], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_strict' f g = (pr_weak' f g \\<and> \\<not> pr_weak' g f)", "using pr_strict[of f g]"], ["proof (prove)\nusing this:\n  pr_strict f g = (pr_weak f g \\<and> \\<not> pr_weak g f)\n\ngoal (1 subgoal):\n 1. pr_strict' f g = (pr_weak' f g \\<and> \\<not> pr_weak' g f)", "unfolding pr_strict'_def pr_weak'_def"], ["proof (prove)\nusing this:\n  pr_strict f g = (pr_weak f g \\<and> \\<not> pr_weak g f)\n\ngoal (1 subgoal):\n 1. (f \\<notin> lConsts \\<and> (pr_strict f g \\<or> g \\<in> lConsts)) =\n    ((f \\<notin> lConsts \\<and> pr_weak f g \\<or> g \\<in> lConsts) \\<and>\n     \\<not> (g \\<notin> lConsts \\<and> pr_weak g f \\<or> f \\<in> lConsts))", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN {(x, y). pr_strict' x y}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN {(x, y). pr_strict' x y}", "show \"SN {(x, y). pr_strict' x y}\" (is \"SN ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN {(x, y). pr_strict' x y}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> {(x, y). pr_strict' x y}\\<rbrakk>\n       \\<Longrightarrow> False", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> {(x, y). pr_strict' x y}\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"\\<forall> i. (f i, f (Suc i)) \\<in> ?R\""], ["proof (state)\nthis:\n  \\<forall>i. (f i, f (Suc i)) \\<in> {(x, y). pr_strict' x y}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> {(x, y). pr_strict' x y}\\<rbrakk>\n       \\<Longrightarrow> False", "hence steps: \"\\<And> i. (f i, f (Suc i)) \\<in> ?R\""], ["proof (prove)\nusing this:\n  \\<forall>i. (f i, f (Suc i)) \\<in> {(x, y). pr_strict' x y}\n\ngoal (1 subgoal):\n 1. \\<And>i. (f i, f (Suc i)) \\<in> {(x, y). pr_strict' x y}", "by blast"], ["proof (state)\nthis:\n  (f ?i13, f (Suc ?i13)) \\<in> {(x, y). pr_strict' x y}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> {(x, y). pr_strict' x y}\\<rbrakk>\n       \\<Longrightarrow> False", "have \"f i \\<notin> lConsts\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<notin> lConsts", "using steps[of i]"], ["proof (prove)\nusing this:\n  (f i, f (Suc i)) \\<in> {(x, y). pr_strict' x y}\n\ngoal (1 subgoal):\n 1. f i \\<notin> lConsts", "unfolding pr_strict'_def"], ["proof (prove)\nusing this:\n  (f i, f (Suc i))\n  \\<in> {(x, y).\n         x \\<notin> lConsts \\<and> (pr_strict x y \\<or> y \\<in> lConsts)}\n\ngoal (1 subgoal):\n 1. f i \\<notin> lConsts", "by auto"], ["proof (state)\nthis:\n  f ?i13 \\<notin> lConsts\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> {(x, y). pr_strict' x y}\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"pr_strict (f i) (f (Suc i))\" for i"], ["proof (prove)\nusing this:\n  f ?i13 \\<notin> lConsts\n\ngoal (1 subgoal):\n 1. pr_strict (f i) (f (Suc i))", "using steps[of i]"], ["proof (prove)\nusing this:\n  f ?i13 \\<notin> lConsts\n  (f i, f (Suc i)) \\<in> {(x, y). pr_strict' x y}\n\ngoal (1 subgoal):\n 1. pr_strict (f i) (f (Suc i))", "unfolding pr_strict'_def"], ["proof (prove)\nusing this:\n  f ?i13 \\<notin> lConsts\n  (f i, f (Suc i))\n  \\<in> {(x, y).\n         x \\<notin> lConsts \\<and> (pr_strict x y \\<or> y \\<in> lConsts)}\n\ngoal (1 subgoal):\n 1. pr_strict (f i) (f (Suc i))", "by auto"], ["proof (state)\nthis:\n  pr_strict (f ?i13) (f (Suc ?i13))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> {(x, y). pr_strict' x y}\\<rbrakk>\n       \\<Longrightarrow> False", "with pr_SN"], ["proof (chain)\npicking this:\n  SN {(fn, gm). pr_strict fn gm}\n  pr_strict (f ?i13) (f (Suc ?i13))", "show False"], ["proof (prove)\nusing this:\n  SN {(fn, gm). pr_strict fn gm}\n  pr_strict (f ?i13) (f (Suc ?i13))\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN {(x, y). pr_strict' x y}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma least_pr_weak': \"least f \\<Longrightarrow> pr_weak' g (f,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least f \\<Longrightarrow> pr_weak' g (f, 0)", "unfolding lConsts_def pr_weak'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. least f \\<Longrightarrow>\n    g \\<notin> {(f, 0) |f. least f} \\<and> pr_weak g (f, 0) \\<or>\n    (f, 0) \\<in> {(f, 0) |f. least f}", "by auto"], ["", "lemma least_pr_weak'_trans: \"least f \\<Longrightarrow> pr_weak' (f,0) g \\<Longrightarrow> least (fst g) \\<and> snd g = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>least f; pr_weak' (f, 0) g\\<rbrakk>\n    \\<Longrightarrow> least (fst g) \\<and> snd g = 0", "unfolding lConsts_def pr_weak'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>least f;\n     (f, 0) \\<notin> {(f, 0) |f. least f} \\<and> pr_weak (f, 0) g \\<or>\n     g \\<in> {(f, 0) |f. least f}\\<rbrakk>\n    \\<Longrightarrow> least (fst g) \\<and> snd g = 0", "by auto"], ["", "context\nbegin"], ["", "interpretation kbo': admissible_kbo w w0 pr_strict' pr_weak' least scf"], ["proof (prove)\ngoal (1 subgoal):\n 1. admissible_kbo w w0 pr_strict' pr_weak' least scf", "by (rule admissible_kbo')"], ["", "lemma kbo'_eq_kbo: \"kbo'.kbo s t = kbo s t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kbo'.kbo s t = kbo s t", "proof (induct s t rule: kbo.induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       (\\<And>x21 x22 x21a x22a i.\n           \\<lbrakk>vars_term_ms (SCF t) \\<subseteq>#\n                    vars_term_ms (SCF s) \\<and>\n                    weight t \\<le> weight s;\n            \\<not> weight t < weight s; s = Fun x21 x22; t = Fun x21a x22a;\n            \\<not> pr_strict (x21, length x22) (x21a, length x22a);\n            pr_weak (x21, length x22) (x21a, length x22a); i < length x22;\n            i < length x22a\\<rbrakk>\n           \\<Longrightarrow> kbo'.kbo (x22 ! i) (x22a ! i) =\n                             kbo (x22 ! i) (x22a ! i)) \\<Longrightarrow>\n       kbo'.kbo s t = kbo s t", "case (1 s t)"], ["proof (state)\nthis:\n  \\<lbrakk>vars_term_ms (SCF t) \\<subseteq># vars_term_ms (SCF s) \\<and>\n           weight t \\<le> weight s;\n   \\<not> weight t < weight s; s = Fun ?x21.13 ?x22.13;\n   t = Fun ?x21a13 ?x22a13;\n   \\<not> pr_strict (?x21.13, length ?x22.13) (?x21a13, length ?x22a13);\n   pr_weak (?x21.13, length ?x22.13) (?x21a13, length ?x22a13);\n   ?i13 < length ?x22.13; ?i13 < length ?x22a13\\<rbrakk>\n  \\<Longrightarrow> kbo'.kbo (?x22.13 ! ?i13) (?x22a13 ! ?i13) =\n                    kbo (?x22.13 ! ?i13) (?x22a13 ! ?i13)\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       (\\<And>x21 x22 x21a x22a i.\n           \\<lbrakk>vars_term_ms (SCF t) \\<subseteq>#\n                    vars_term_ms (SCF s) \\<and>\n                    weight t \\<le> weight s;\n            \\<not> weight t < weight s; s = Fun x21 x22; t = Fun x21a x22a;\n            \\<not> pr_strict (x21, length x22) (x21a, length x22a);\n            pr_weak (x21, length x22) (x21a, length x22a); i < length x22;\n            i < length x22a\\<rbrakk>\n           \\<Longrightarrow> kbo'.kbo (x22 ! i) (x22a ! i) =\n                             kbo (x22 ! i) (x22a ! i)) \\<Longrightarrow>\n       kbo'.kbo s t = kbo s t", "note simps = kbo.simps[of s t] kbo'.kbo.simps[of s t]"], ["proof (state)\nthis:\n  kbo s t =\n  (if vars_term_ms (SCF t) \\<subseteq># vars_term_ms (SCF s) \\<and>\n      weight t \\<le> weight s\n   then if weight t < weight s then (True, True)\n        else case s of\n             Var y \\<Rightarrow>\n               (False,\n                case t of Var x \\<Rightarrow> x = y\n                | Fun g ts \\<Rightarrow> ts = [] \\<and> least g)\n             | Fun f ss \\<Rightarrow>\n                 case t of Var x \\<Rightarrow> (True, True)\n                 | Fun g ts \\<Rightarrow>\n                     if pr_strict (f, length ss) (g, length ts)\n                     then (True, True)\n                     else if pr_weak (f, length ss) (g, length ts)\n                          then lex_ext_unbounded kbo ss ts\n                          else (False, False)\n   else (False, False))\n  kbo'.kbo s t =\n  (if vars_term_ms (SCF t) \\<subseteq># vars_term_ms (SCF s) \\<and>\n      weight t \\<le> weight s\n   then if weight t < weight s then (True, True)\n        else case s of\n             Var y \\<Rightarrow>\n               (False,\n                case t of Var x \\<Rightarrow> x = y\n                | Fun g ts \\<Rightarrow> ts = [] \\<and> least g)\n             | Fun f ss \\<Rightarrow>\n                 case t of Var x \\<Rightarrow> (True, True)\n                 | Fun g ts \\<Rightarrow>\n                     if pr_strict' (f, length ss) (g, length ts)\n                     then (True, True)\n                     else if pr_weak' (f, length ss) (g, length ts)\n                          then lex_ext_unbounded kbo'.kbo ss ts\n                          else (False, False)\n   else (False, False))\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       (\\<And>x21 x22 x21a x22a i.\n           \\<lbrakk>vars_term_ms (SCF t) \\<subseteq>#\n                    vars_term_ms (SCF s) \\<and>\n                    weight t \\<le> weight s;\n            \\<not> weight t < weight s; s = Fun x21 x22; t = Fun x21a x22a;\n            \\<not> pr_strict (x21, length x22) (x21a, length x22a);\n            pr_weak (x21, length x22) (x21a, length x22a); i < length x22;\n            i < length x22a\\<rbrakk>\n           \\<Longrightarrow> kbo'.kbo (x22 ! i) (x22a ! i) =\n                             kbo (x22 ! i) (x22a ! i)) \\<Longrightarrow>\n       kbo'.kbo s t = kbo s t", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. kbo'.kbo s t = kbo s t", "unfolding simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if vars_term_ms (SCF t) \\<subseteq># vars_term_ms (SCF s) \\<and>\n        weight t \\<le> weight s\n     then if weight t < weight s then (True, True)\n          else case s of\n               Var y \\<Rightarrow>\n                 (False,\n                  case t of Var x \\<Rightarrow> x = y\n                  | Fun g ts \\<Rightarrow> ts = [] \\<and> least g)\n               | Fun f ss \\<Rightarrow>\n                   case t of Var x \\<Rightarrow> (True, True)\n                   | Fun g ts \\<Rightarrow>\n                       if pr_strict' (f, length ss) (g, length ts)\n                       then (True, True)\n                       else if pr_weak' (f, length ss) (g, length ts)\n                            then lex_ext_unbounded kbo'.kbo ss ts\n                            else (False, False)\n     else (False, False)) =\n    (if vars_term_ms (SCF t) \\<subseteq># vars_term_ms (SCF s) \\<and>\n        weight t \\<le> weight s\n     then if weight t < weight s then (True, True)\n          else case s of\n               Var y \\<Rightarrow>\n                 (False,\n                  case t of Var x \\<Rightarrow> x = y\n                  | Fun g ts \\<Rightarrow> ts = [] \\<and> least g)\n               | Fun f ss \\<Rightarrow>\n                   case t of Var x \\<Rightarrow> (True, True)\n                   | Fun g ts \\<Rightarrow>\n                       if pr_strict (f, length ss) (g, length ts)\n                       then (True, True)\n                       else if pr_weak (f, length ss) (g, length ts)\n                            then lex_ext_unbounded kbo ss ts\n                            else (False, False)\n     else (False, False))", "apply (intro if_cong refl, intro term.case_cong refl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f ss g ts.\n       \\<lbrakk>vars_term_ms (SCF t) \\<subseteq>#\n                vars_term_ms (SCF s) \\<and>\n                weight t \\<le> weight s;\n        \\<not> weight t < weight s; s = Fun f ss; t = Fun g ts\\<rbrakk>\n       \\<Longrightarrow> (if pr_strict' (f, length ss) (g, length ts)\n                          then (True, True)\n                          else if pr_weak' (f, length ss) (g, length ts)\n                               then lex_ext_unbounded kbo'.kbo ss ts\n                               else (False, False)) =\n                         (if pr_strict (f, length ss) (g, length ts)\n                          then (True, True)\n                          else if pr_weak (f, length ss) (g, length ts)\n                               then lex_ext_unbounded kbo ss ts\n                               else (False, False))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f ss g ts.\n       \\<lbrakk>vars_term_ms (SCF t) \\<subseteq>#\n                vars_term_ms (SCF s) \\<and>\n                weight t \\<le> weight s;\n        \\<not> weight t < weight s; s = Fun f ss; t = Fun g ts\\<rbrakk>\n       \\<Longrightarrow> (if pr_strict' (f, length ss) (g, length ts)\n                          then (True, True)\n                          else if pr_weak' (f, length ss) (g, length ts)\n                               then lex_ext_unbounded kbo'.kbo ss ts\n                               else (False, False)) =\n                         (if pr_strict (f, length ss) (g, length ts)\n                          then (True, True)\n                          else if pr_weak (f, length ss) (g, length ts)\n                               then lex_ext_unbounded kbo ss ts\n                               else (False, False))", "fix f ss g ts"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f ss g ts.\n       \\<lbrakk>vars_term_ms (SCF t) \\<subseteq>#\n                vars_term_ms (SCF s) \\<and>\n                weight t \\<le> weight s;\n        \\<not> weight t < weight s; s = Fun f ss; t = Fun g ts\\<rbrakk>\n       \\<Longrightarrow> (if pr_strict' (f, length ss) (g, length ts)\n                          then (True, True)\n                          else if pr_weak' (f, length ss) (g, length ts)\n                               then lex_ext_unbounded kbo'.kbo ss ts\n                               else (False, False)) =\n                         (if pr_strict (f, length ss) (g, length ts)\n                          then (True, True)\n                          else if pr_weak (f, length ss) (g, length ts)\n                               then lex_ext_unbounded kbo ss ts\n                               else (False, False))", "assume *: \"vars_term_ms (SCF t) \\<subseteq># vars_term_ms (SCF s) \\<and> weight t \\<le> weight s\"\n      \"\\<not> weight t < weight s\"\n      and s: \"s = Fun f ss\"\n      and t: \"t = Fun g ts\""], ["proof (state)\nthis:\n  vars_term_ms (SCF t) \\<subseteq># vars_term_ms (SCF s) \\<and>\n  weight t \\<le> weight s\n  \\<not> weight t < weight s\n  s = Fun f ss\n  t = Fun g ts\n\ngoal (1 subgoal):\n 1. \\<And>f ss g ts.\n       \\<lbrakk>vars_term_ms (SCF t) \\<subseteq>#\n                vars_term_ms (SCF s) \\<and>\n                weight t \\<le> weight s;\n        \\<not> weight t < weight s; s = Fun f ss; t = Fun g ts\\<rbrakk>\n       \\<Longrightarrow> (if pr_strict' (f, length ss) (g, length ts)\n                          then (True, True)\n                          else if pr_weak' (f, length ss) (g, length ts)\n                               then lex_ext_unbounded kbo'.kbo ss ts\n                               else (False, False)) =\n                         (if pr_strict (f, length ss) (g, length ts)\n                          then (True, True)\n                          else if pr_weak (f, length ss) (g, length ts)\n                               then lex_ext_unbounded kbo ss ts\n                               else (False, False))", "let ?g = \"(g,length ts)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f ss g ts.\n       \\<lbrakk>vars_term_ms (SCF t) \\<subseteq>#\n                vars_term_ms (SCF s) \\<and>\n                weight t \\<le> weight s;\n        \\<not> weight t < weight s; s = Fun f ss; t = Fun g ts\\<rbrakk>\n       \\<Longrightarrow> (if pr_strict' (f, length ss) (g, length ts)\n                          then (True, True)\n                          else if pr_weak' (f, length ss) (g, length ts)\n                               then lex_ext_unbounded kbo'.kbo ss ts\n                               else (False, False)) =\n                         (if pr_strict (f, length ss) (g, length ts)\n                          then (True, True)\n                          else if pr_weak (f, length ss) (g, length ts)\n                               then lex_ext_unbounded kbo ss ts\n                               else (False, False))", "let ?f = \"(f,length ss)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f ss g ts.\n       \\<lbrakk>vars_term_ms (SCF t) \\<subseteq>#\n                vars_term_ms (SCF s) \\<and>\n                weight t \\<le> weight s;\n        \\<not> weight t < weight s; s = Fun f ss; t = Fun g ts\\<rbrakk>\n       \\<Longrightarrow> (if pr_strict' (f, length ss) (g, length ts)\n                          then (True, True)\n                          else if pr_weak' (f, length ss) (g, length ts)\n                               then lex_ext_unbounded kbo'.kbo ss ts\n                               else (False, False)) =\n                         (if pr_strict (f, length ss) (g, length ts)\n                          then (True, True)\n                          else if pr_weak (f, length ss) (g, length ts)\n                               then lex_ext_unbounded kbo ss ts\n                               else (False, False))", "have IH: \"(if pr_strict ?f ?g then (True, True)\n        else if pr_weak ?f ?g then lex_ext_unbounded kbo ss ts else (False, False))\n      = (if pr_strict ?f ?g then (True, True)\n        else if pr_weak ?f ?g then lex_ext_unbounded kbo'.kbo ss ts else (False, False))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False))", "by (intro if_cong refl lex_ext_unbounded_cong, insert 1[OF * s t], auto)"], ["proof (state)\nthis:\n  (if pr_strict (f, length ss) (g, length ts) then (True, True)\n   else if pr_weak (f, length ss) (g, length ts)\n        then lex_ext_unbounded kbo ss ts else (False, False)) =\n  (if pr_strict (f, length ss) (g, length ts) then (True, True)\n   else if pr_weak (f, length ss) (g, length ts)\n        then lex_ext_unbounded kbo'.kbo ss ts else (False, False))\n\ngoal (1 subgoal):\n 1. \\<And>f ss g ts.\n       \\<lbrakk>vars_term_ms (SCF t) \\<subseteq>#\n                vars_term_ms (SCF s) \\<and>\n                weight t \\<le> weight s;\n        \\<not> weight t < weight s; s = Fun f ss; t = Fun g ts\\<rbrakk>\n       \\<Longrightarrow> (if pr_strict' (f, length ss) (g, length ts)\n                          then (True, True)\n                          else if pr_weak' (f, length ss) (g, length ts)\n                               then lex_ext_unbounded kbo'.kbo ss ts\n                               else (False, False)) =\n                         (if pr_strict (f, length ss) (g, length ts)\n                          then (True, True)\n                          else if pr_weak (f, length ss) (g, length ts)\n                               then lex_ext_unbounded kbo ss ts\n                               else (False, False))", "let ?P = \"pr_strict' ?f ?g = pr_strict ?f ?g \\<and> (\\<not> pr_strict ?f ?g \\<longrightarrow> pr_weak' ?f ?g = pr_weak ?f ?g)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f ss g ts.\n       \\<lbrakk>vars_term_ms (SCF t) \\<subseteq>#\n                vars_term_ms (SCF s) \\<and>\n                weight t \\<le> weight s;\n        \\<not> weight t < weight s; s = Fun f ss; t = Fun g ts\\<rbrakk>\n       \\<Longrightarrow> (if pr_strict' (f, length ss) (g, length ts)\n                          then (True, True)\n                          else if pr_weak' (f, length ss) (g, length ts)\n                               then lex_ext_unbounded kbo'.kbo ss ts\n                               else (False, False)) =\n                         (if pr_strict (f, length ss) (g, length ts)\n                          then (True, True)\n                          else if pr_weak (f, length ss) (g, length ts)\n                               then lex_ext_unbounded kbo ss ts\n                               else (False, False))", "show \"(if pr_strict' ?f ?g then (True, True)\n        else if pr_weak' ?f ?g then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n       (if pr_strict ?f ?g then (True, True)\n        else if pr_weak ?f ?g then lex_ext_unbounded kbo ss ts else (False, False))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "proof (cases ?P)"], ["proof (state)\ngoal (2 subgoals):\n 1. pr_strict' (f, length ss) (g, length ts) =\n    pr_strict (f, length ss) (g, length ts) \\<and>\n    (\\<not> pr_strict (f, length ss) (g, length ts) \\<longrightarrow>\n     pr_weak' (f, length ss) (g, length ts) =\n     pr_weak (f, length ss) (g, length ts)) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))\n 2. \\<not> (pr_strict' (f, length ss) (g, length ts) =\n            pr_strict (f, length ss) (g, length ts) \\<and>\n            (\\<not> pr_strict (f, length ss)\n                     (g, length ts) \\<longrightarrow>\n             pr_weak' (f, length ss) (g, length ts) =\n             pr_weak (f, length ss) (g, length ts))) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "case True"], ["proof (state)\nthis:\n  pr_strict' (f, length ss) (g, length ts) =\n  pr_strict (f, length ss) (g, length ts) \\<and>\n  (\\<not> pr_strict (f, length ss) (g, length ts) \\<longrightarrow>\n   pr_weak' (f, length ss) (g, length ts) =\n   pr_weak (f, length ss) (g, length ts))\n\ngoal (2 subgoals):\n 1. pr_strict' (f, length ss) (g, length ts) =\n    pr_strict (f, length ss) (g, length ts) \\<and>\n    (\\<not> pr_strict (f, length ss) (g, length ts) \\<longrightarrow>\n     pr_weak' (f, length ss) (g, length ts) =\n     pr_weak (f, length ss) (g, length ts)) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))\n 2. \\<not> (pr_strict' (f, length ss) (g, length ts) =\n            pr_strict (f, length ss) (g, length ts) \\<and>\n            (\\<not> pr_strict (f, length ss)\n                     (g, length ts) \\<longrightarrow>\n             pr_weak' (f, length ss) (g, length ts) =\n             pr_weak (f, length ss) (g, length ts))) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "thus ?thesis"], ["proof (prove)\nusing this:\n  pr_strict' (f, length ss) (g, length ts) =\n  pr_strict (f, length ss) (g, length ts) \\<and>\n  (\\<not> pr_strict (f, length ss) (g, length ts) \\<longrightarrow>\n   pr_weak' (f, length ss) (g, length ts) =\n   pr_weak (f, length ss) (g, length ts))\n\ngoal (1 subgoal):\n 1. (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "unfolding IH"], ["proof (prove)\nusing this:\n  pr_strict' (f, length ss) (g, length ts) =\n  pr_strict (f, length ss) (g, length ts) \\<and>\n  (\\<not> pr_strict (f, length ss) (g, length ts) \\<longrightarrow>\n   pr_weak' (f, length ss) (g, length ts) =\n   pr_weak (f, length ss) (g, length ts))\n\ngoal (1 subgoal):\n 1. (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False))", "by auto"], ["proof (state)\nthis:\n  (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n   else if pr_weak' (f, length ss) (g, length ts)\n        then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n  (if pr_strict (f, length ss) (g, length ts) then (True, True)\n   else if pr_weak (f, length ss) (g, length ts)\n        then lex_ext_unbounded kbo ss ts else (False, False))\n\ngoal (1 subgoal):\n 1. \\<not> (pr_strict' (f, length ss) (g, length ts) =\n            pr_strict (f, length ss) (g, length ts) \\<and>\n            (\\<not> pr_strict (f, length ss)\n                     (g, length ts) \\<longrightarrow>\n             pr_weak' (f, length ss) (g, length ts) =\n             pr_weak (f, length ss) (g, length ts))) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (pr_strict' (f, length ss) (g, length ts) =\n            pr_strict (f, length ss) (g, length ts) \\<and>\n            (\\<not> pr_strict (f, length ss)\n                     (g, length ts) \\<longrightarrow>\n             pr_weak' (f, length ss) (g, length ts) =\n             pr_weak (f, length ss) (g, length ts))) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "case notP: False"], ["proof (state)\nthis:\n  \\<not> (pr_strict' (f, length ss) (g, length ts) =\n          pr_strict (f, length ss) (g, length ts) \\<and>\n          (\\<not> pr_strict (f, length ss) (g, length ts) \\<longrightarrow>\n           pr_weak' (f, length ss) (g, length ts) =\n           pr_weak (f, length ss) (g, length ts)))\n\ngoal (1 subgoal):\n 1. \\<not> (pr_strict' (f, length ss) (g, length ts) =\n            pr_strict (f, length ss) (g, length ts) \\<and>\n            (\\<not> pr_strict (f, length ss)\n                     (g, length ts) \\<longrightarrow>\n             pr_weak' (f, length ss) (g, length ts) =\n             pr_weak (f, length ss) (g, length ts))) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "hence fgC: \"?f \\<in> lConsts \\<or> ?g \\<in> lConsts\""], ["proof (prove)\nusing this:\n  \\<not> (pr_strict' (f, length ss) (g, length ts) =\n          pr_strict (f, length ss) (g, length ts) \\<and>\n          (\\<not> pr_strict (f, length ss) (g, length ts) \\<longrightarrow>\n           pr_weak' (f, length ss) (g, length ts) =\n           pr_weak (f, length ss) (g, length ts)))\n\ngoal (1 subgoal):\n 1. (f, length ss) \\<in> kbo'.lConsts \\<or>\n    (g, length ts) \\<in> kbo'.lConsts", "unfolding pr_strict'_def pr_weak'_def"], ["proof (prove)\nusing this:\n  \\<not> (((f, length ss) \\<notin> kbo'.lConsts \\<and>\n           (pr_strict (f, length ss) (g, length ts) \\<or>\n            (g, length ts) \\<in> kbo'.lConsts)) =\n          pr_strict (f, length ss) (g, length ts) \\<and>\n          (\\<not> pr_strict (f, length ss) (g, length ts) \\<longrightarrow>\n           ((f, length ss) \\<notin> kbo'.lConsts \\<and>\n            pr_weak (f, length ss) (g, length ts) \\<or>\n            (g, length ts) \\<in> kbo'.lConsts) =\n           pr_weak (f, length ss) (g, length ts)))\n\ngoal (1 subgoal):\n 1. (f, length ss) \\<in> kbo'.lConsts \\<or>\n    (g, length ts) \\<in> kbo'.lConsts", "by auto"], ["proof (state)\nthis:\n  (f, length ss) \\<in> kbo'.lConsts \\<or> (g, length ts) \\<in> kbo'.lConsts\n\ngoal (1 subgoal):\n 1. \\<not> (pr_strict' (f, length ss) (g, length ts) =\n            pr_strict (f, length ss) (g, length ts) \\<and>\n            (\\<not> pr_strict (f, length ss)\n                     (g, length ts) \\<longrightarrow>\n             pr_weak' (f, length ss) (g, length ts) =\n             pr_weak (f, length ss) (g, length ts))) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "hence weight: \"weight s = w0\" \"weight t = w0\""], ["proof (prove)\nusing this:\n  (f, length ss) \\<in> kbo'.lConsts \\<or> (g, length ts) \\<in> kbo'.lConsts\n\ngoal (1 subgoal):\n 1. weight s = w0 &&& weight t = w0", "using *"], ["proof (prove)\nusing this:\n  (f, length ss) \\<in> kbo'.lConsts \\<or> (g, length ts) \\<in> kbo'.lConsts\n  vars_term_ms (SCF t) \\<subseteq># vars_term_ms (SCF s) \\<and>\n  weight t \\<le> weight s\n  \\<not> weight t < weight s\n\ngoal (1 subgoal):\n 1. weight s = w0 &&& weight t = w0", "unfolding lConsts_def least s t"], ["proof (prove)\nusing this:\n  (f, length ss)\n  \\<in> {(f, 0) |f.\n         w (f, 0) = w0 \\<and>\n         (\\<forall>g.\n             w (g, 0) = w0 \\<longrightarrow> pr_weak (g, 0) (f, 0))} \\<or>\n  (g, length ts)\n  \\<in> {(f, 0) |f.\n         w (f, 0) = w0 \\<and>\n         (\\<forall>g.\n             w (g, 0) = w0 \\<longrightarrow> pr_weak (g, 0) (f, 0))}\n  vars_term_ms (SCF (Fun g ts)) \\<subseteq>#\n  vars_term_ms (SCF (Fun f ss)) \\<and>\n  weight (Fun g ts) \\<le> weight (Fun f ss)\n  \\<not> weight (Fun g ts) < weight (Fun f ss)\n\ngoal (1 subgoal):\n 1. weight (Fun f ss) = w0 &&& weight (Fun g ts) = w0", "by auto"], ["proof (state)\nthis:\n  weight s = w0\n  weight t = w0\n\ngoal (1 subgoal):\n 1. \\<not> (pr_strict' (f, length ss) (g, length ts) =\n            pr_strict (f, length ss) (g, length ts) \\<and>\n            (\\<not> pr_strict (f, length ss)\n                     (g, length ts) \\<longrightarrow>\n             pr_weak' (f, length ss) (g, length ts) =\n             pr_weak (f, length ss) (g, length ts))) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "proof (cases \"ss = [] \\<and> ts = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. ss = [] \\<and> ts = [] \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))\n 2. \\<not> (ss = [] \\<and> ts = []) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "case empty: True"], ["proof (state)\nthis:\n  ss = [] \\<and> ts = []\n\ngoal (2 subgoals):\n 1. ss = [] \\<and> ts = [] \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))\n 2. \\<not> (ss = [] \\<and> ts = []) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "with weight"], ["proof (chain)\npicking this:\n  weight s = w0\n  weight t = w0\n  ss = [] \\<and> ts = []", "have \"w ?f = w0\" \"w ?g = w0\""], ["proof (prove)\nusing this:\n  weight s = w0\n  weight t = w0\n  ss = [] \\<and> ts = []\n\ngoal (1 subgoal):\n 1. w (f, length ss) = w0 &&& w (g, length ts) = w0", "unfolding s t"], ["proof (prove)\nusing this:\n  weight (Fun f ss) = w0\n  weight (Fun g ts) = w0\n  ss = [] \\<and> ts = []\n\ngoal (1 subgoal):\n 1. w (f, length ss) = w0 &&& w (g, length ts) = w0", "by auto"], ["proof (state)\nthis:\n  w (f, length ss) = w0\n  w (g, length ts) = w0\n\ngoal (2 subgoals):\n 1. ss = [] \\<and> ts = [] \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))\n 2. \\<not> (ss = [] \\<and> ts = []) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "with empty"], ["proof (chain)\npicking this:\n  ss = [] \\<and> ts = []\n  w (f, length ss) = w0\n  w (g, length ts) = w0", "have ?P"], ["proof (prove)\nusing this:\n  ss = [] \\<and> ts = []\n  w (f, length ss) = w0\n  w (g, length ts) = w0\n\ngoal (1 subgoal):\n 1. pr_strict' (f, length ss) (g, length ts) =\n    pr_strict (f, length ss) (g, length ts) \\<and>\n    (\\<not> pr_strict (f, length ss) (g, length ts) \\<longrightarrow>\n     pr_weak' (f, length ss) (g, length ts) =\n     pr_weak (f, length ss) (g, length ts))", "unfolding pr_strict'_def pr_weak'_def"], ["proof (prove)\nusing this:\n  ss = [] \\<and> ts = []\n  w (f, length ss) = w0\n  w (g, length ts) = w0\n\ngoal (1 subgoal):\n 1. ((f, length ss) \\<notin> kbo'.lConsts \\<and>\n     (pr_strict (f, length ss) (g, length ts) \\<or>\n      (g, length ts) \\<in> kbo'.lConsts)) =\n    pr_strict (f, length ss) (g, length ts) \\<and>\n    (\\<not> pr_strict (f, length ss) (g, length ts) \\<longrightarrow>\n     ((f, length ss) \\<notin> kbo'.lConsts \\<and>\n      pr_weak (f, length ss) (g, length ts) \\<or>\n      (g, length ts) \\<in> kbo'.lConsts) =\n     pr_weak (f, length ss) (g, length ts))", "using pr_weak_trans[of _ \"(g,0)\" \"(f,0)\"]\n            pr_weak_trans[of _ \"(f,0)\" \"(g,0)\"]"], ["proof (prove)\nusing this:\n  ss = [] \\<and> ts = []\n  w (f, length ss) = w0\n  w (g, length ts) = w0\n  \\<lbrakk>pr_weak ?fn (g, 0); pr_weak (g, 0) (f, 0)\\<rbrakk>\n  \\<Longrightarrow> pr_weak ?fn (f, 0)\n  \\<lbrakk>pr_weak ?fn (f, 0); pr_weak (f, 0) (g, 0)\\<rbrakk>\n  \\<Longrightarrow> pr_weak ?fn (g, 0)\n\ngoal (1 subgoal):\n 1. ((f, length ss) \\<notin> kbo'.lConsts \\<and>\n     (pr_strict (f, length ss) (g, length ts) \\<or>\n      (g, length ts) \\<in> kbo'.lConsts)) =\n    pr_strict (f, length ss) (g, length ts) \\<and>\n    (\\<not> pr_strict (f, length ss) (g, length ts) \\<longrightarrow>\n     ((f, length ss) \\<notin> kbo'.lConsts \\<and>\n      pr_weak (f, length ss) (g, length ts) \\<or>\n      (g, length ts) \\<in> kbo'.lConsts) =\n     pr_weak (f, length ss) (g, length ts))", "by (auto simp: lConsts_def pr_strict least)"], ["proof (state)\nthis:\n  pr_strict' (f, length ss) (g, length ts) =\n  pr_strict (f, length ss) (g, length ts) \\<and>\n  (\\<not> pr_strict (f, length ss) (g, length ts) \\<longrightarrow>\n   pr_weak' (f, length ss) (g, length ts) =\n   pr_weak (f, length ss) (g, length ts))\n\ngoal (2 subgoals):\n 1. ss = [] \\<and> ts = [] \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))\n 2. \\<not> (ss = [] \\<and> ts = []) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "with notP"], ["proof (chain)\npicking this:\n  \\<not> (pr_strict' (f, length ss) (g, length ts) =\n          pr_strict (f, length ss) (g, length ts) \\<and>\n          (\\<not> pr_strict (f, length ss) (g, length ts) \\<longrightarrow>\n           pr_weak' (f, length ss) (g, length ts) =\n           pr_weak (f, length ss) (g, length ts)))\n  pr_strict' (f, length ss) (g, length ts) =\n  pr_strict (f, length ss) (g, length ts) \\<and>\n  (\\<not> pr_strict (f, length ss) (g, length ts) \\<longrightarrow>\n   pr_weak' (f, length ss) (g, length ts) =\n   pr_weak (f, length ss) (g, length ts))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (pr_strict' (f, length ss) (g, length ts) =\n          pr_strict (f, length ss) (g, length ts) \\<and>\n          (\\<not> pr_strict (f, length ss) (g, length ts) \\<longrightarrow>\n           pr_weak' (f, length ss) (g, length ts) =\n           pr_weak (f, length ss) (g, length ts)))\n  pr_strict' (f, length ss) (g, length ts) =\n  pr_strict (f, length ss) (g, length ts) \\<and>\n  (\\<not> pr_strict (f, length ss) (g, length ts) \\<longrightarrow>\n   pr_weak' (f, length ss) (g, length ts) =\n   pr_weak (f, length ss) (g, length ts))\n\ngoal (1 subgoal):\n 1. (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "by blast"], ["proof (state)\nthis:\n  (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n   else if pr_weak' (f, length ss) (g, length ts)\n        then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n  (if pr_strict (f, length ss) (g, length ts) then (True, True)\n   else if pr_weak (f, length ss) (g, length ts)\n        then lex_ext_unbounded kbo ss ts else (False, False))\n\ngoal (1 subgoal):\n 1. \\<not> (ss = [] \\<and> ts = []) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (ss = [] \\<and> ts = []) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "case False"], ["proof (state)\nthis:\n  \\<not> (ss = [] \\<and> ts = [])\n\ngoal (1 subgoal):\n 1. \\<not> (ss = [] \\<and> ts = []) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "{"], ["proof (state)\nthis:\n  \\<not> (ss = [] \\<and> ts = [])\n\ngoal (1 subgoal):\n 1. \\<not> (ss = [] \\<and> ts = []) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "fix f and t :: \"('f,'a)term\"  and t1 ts' ts and g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (ss = [] \\<and> ts__ = []) \\<Longrightarrow>\n    (if pr_strict' (f__, length ss) (g__, length ts__) then (True, True)\n     else if pr_weak' (f__, length ss) (g__, length ts__)\n          then lex_ext_unbounded kbo'.kbo ss ts__ else (False, False)) =\n    (if pr_strict (f__, length ss) (g__, length ts__) then (True, True)\n     else if pr_weak (f__, length ss) (g__, length ts__)\n          then lex_ext_unbounded kbo ss ts__ else (False, False))", "assume *: \"weight t = w0\" \"t = Fun f ts\" \"ts = t1 # ts'\""], ["proof (state)\nthis:\n  weight t = w0\n  t = Fun f ts\n  ts = t1 # ts'\n\ngoal (1 subgoal):\n 1. \\<not> (ss = [] \\<and> ts__ = []) \\<Longrightarrow>\n    (if pr_strict' (f__, length ss) (g__, length ts__) then (True, True)\n     else if pr_weak' (f__, length ss) (g__, length ts__)\n          then lex_ext_unbounded kbo'.kbo ss ts__ else (False, False)) =\n    (if pr_strict (f__, length ss) (g__, length ts__) then (True, True)\n     else if pr_weak (f__, length ss) (g__, length ts__)\n          then lex_ext_unbounded kbo ss ts__ else (False, False))", "from weight_w0_unary[OF this]"], ["proof (chain)\npicking this:\n  ts' = []\n  w (f, 1) = 0", "have ts': \"ts' = []\" and w: \"w (f,1) = 0\""], ["proof (prove)\nusing this:\n  ts' = []\n  w (f, 1) = 0\n\ngoal (1 subgoal):\n 1. ts' = [] &&& w (f, 1) = 0", "."], ["proof (state)\nthis:\n  ts' = []\n  w (f, 1) = 0\n\ngoal (1 subgoal):\n 1. \\<not> (ss = [] \\<and> ts__ = []) \\<Longrightarrow>\n    (if pr_strict' (f__, length ss) (g__, length ts__) then (True, True)\n     else if pr_weak' (f__, length ss) (g__, length ts__)\n          then lex_ext_unbounded kbo'.kbo ss ts__ else (False, False)) =\n    (if pr_strict (f__, length ss) (g__, length ts__) then (True, True)\n     else if pr_weak (f__, length ss) (g__, length ts__)\n          then lex_ext_unbounded kbo ss ts__ else (False, False))", "from adm[OF w] ts'"], ["proof (chain)\npicking this:\n  pr_weak (f, 1) (?g, ?n)\n  ts' = []", "have \"pr_weak (f, Suc (length ts')) g\""], ["proof (prove)\nusing this:\n  pr_weak (f, 1) (?g, ?n)\n  ts' = []\n\ngoal (1 subgoal):\n 1. pr_weak (f, Suc (length ts')) g", "by (cases g, auto)"], ["proof (state)\nthis:\n  pr_weak (f, Suc (length ts')) g\n\ngoal (1 subgoal):\n 1. \\<not> (ss = [] \\<and> ts__ = []) \\<Longrightarrow>\n    (if pr_strict' (f__, length ss) (g__, length ts__) then (True, True)\n     else if pr_weak' (f__, length ss) (g__, length ts__)\n          then lex_ext_unbounded kbo'.kbo ss ts__ else (False, False)) =\n    (if pr_strict (f__, length ss) (g__, length ts__) then (True, True)\n     else if pr_weak (f__, length ss) (g__, length ts__)\n          then lex_ext_unbounded kbo ss ts__ else (False, False))", "}"], ["proof (state)\nthis:\n  \\<lbrakk>weight ?tb15 = w0; ?tb15 = Fun ?fa15 ?tsa15;\n   ?tsa15 = ?t1.15 # ?ts'15\\<rbrakk>\n  \\<Longrightarrow> pr_weak (?fa15, Suc (length ?ts'15)) ?ga15\n\ngoal (1 subgoal):\n 1. \\<not> (ss = [] \\<and> ts = []) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "note unary = this"], ["proof (state)\nthis:\n  \\<lbrakk>weight ?tb15 = w0; ?tb15 = Fun ?fa15 ?tsa15;\n   ?tsa15 = ?t1.15 # ?ts'15\\<rbrakk>\n  \\<Longrightarrow> pr_weak (?fa15, Suc (length ?ts'15)) ?ga15\n\ngoal (1 subgoal):\n 1. \\<not> (ss = [] \\<and> ts = []) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "from fgC"], ["proof (chain)\npicking this:\n  (f, length ss) \\<in> kbo'.lConsts \\<or> (g, length ts) \\<in> kbo'.lConsts", "have \"ss = [] \\<or> ts = []\""], ["proof (prove)\nusing this:\n  (f, length ss) \\<in> kbo'.lConsts \\<or> (g, length ts) \\<in> kbo'.lConsts\n\ngoal (1 subgoal):\n 1. ss = [] \\<or> ts = []", "unfolding lConsts_def least"], ["proof (prove)\nusing this:\n  (f, length ss)\n  \\<in> {(f, 0) |f.\n         w (f, 0) = w0 \\<and>\n         (\\<forall>g.\n             w (g, 0) = w0 \\<longrightarrow> pr_weak (g, 0) (f, 0))} \\<or>\n  (g, length ts)\n  \\<in> {(f, 0) |f.\n         w (f, 0) = w0 \\<and>\n         (\\<forall>g.\n             w (g, 0) = w0 \\<longrightarrow> pr_weak (g, 0) (f, 0))}\n\ngoal (1 subgoal):\n 1. ss = [] \\<or> ts = []", "by auto"], ["proof (state)\nthis:\n  ss = [] \\<or> ts = []\n\ngoal (1 subgoal):\n 1. \\<not> (ss = [] \\<and> ts = []) \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "thus ?thesis"], ["proof (prove)\nusing this:\n  ss = [] \\<or> ts = []\n\ngoal (1 subgoal):\n 1. (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ss = [] \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))\n 2. ts = [] \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "assume ss: \"ss = []\""], ["proof (state)\nthis:\n  ss = []\n\ngoal (2 subgoals):\n 1. ss = [] \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))\n 2. ts = [] \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "with False"], ["proof (chain)\npicking this:\n  \\<not> (ss = [] \\<and> ts = [])\n  ss = []", "obtain t1 ts' where ts: \"ts = t1 # ts'\""], ["proof (prove)\nusing this:\n  \\<not> (ss = [] \\<and> ts = [])\n  ss = []\n\ngoal (1 subgoal):\n 1. (\\<And>t1 ts'. ts = t1 # ts' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases ts, auto)"], ["proof (state)\nthis:\n  ts = t1 # ts'\n\ngoal (2 subgoals):\n 1. ss = [] \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))\n 2. ts = [] \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "unfolding ss ts"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if pr_strict' (f, length []) (g, length (t1 # ts')) then (True, True)\n     else if pr_weak' (f, length []) (g, length (t1 # ts'))\n          then lex_ext_unbounded kbo'.kbo [] (t1 # ts')\n          else (False, False)) =\n    (if pr_strict (f, length []) (g, length (t1 # ts')) then (True, True)\n     else if pr_weak (f, length []) (g, length (t1 # ts'))\n          then lex_ext_unbounded kbo [] (t1 # ts') else (False, False))", "using unary[OF weight(2) t ts]"], ["proof (prove)\nusing this:\n  pr_weak (g, Suc (length ts')) ?ga15\n\ngoal (1 subgoal):\n 1. (if pr_strict' (f, length []) (g, length (t1 # ts')) then (True, True)\n     else if pr_weak' (f, length []) (g, length (t1 # ts'))\n          then lex_ext_unbounded kbo'.kbo [] (t1 # ts')\n          else (False, False)) =\n    (if pr_strict (f, length []) (g, length (t1 # ts')) then (True, True)\n     else if pr_weak (f, length []) (g, length (t1 # ts'))\n          then lex_ext_unbounded kbo [] (t1 # ts') else (False, False))", "by (simp add: lex_ext_unbounded.simps pr_strict'_def lConsts_def pr_strict)"], ["proof (state)\nthis:\n  (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n   else if pr_weak' (f, length ss) (g, length ts)\n        then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n  (if pr_strict (f, length ss) (g, length ts) then (True, True)\n   else if pr_weak (f, length ss) (g, length ts)\n        then lex_ext_unbounded kbo ss ts else (False, False))\n\ngoal (1 subgoal):\n 1. ts = [] \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ts = [] \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "assume ts: \"ts = []\""], ["proof (state)\nthis:\n  ts = []\n\ngoal (1 subgoal):\n 1. ts = [] \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "with False"], ["proof (chain)\npicking this:\n  \\<not> (ss = [] \\<and> ts = [])\n  ts = []", "obtain s1 ss' where ss: \"ss = s1 # ss'\""], ["proof (prove)\nusing this:\n  \\<not> (ss = [] \\<and> ts = [])\n  ts = []\n\ngoal (1 subgoal):\n 1. (\\<And>s1 ss'. ss = s1 # ss' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases ss, auto)"], ["proof (state)\nthis:\n  ss = s1 # ss'\n\ngoal (1 subgoal):\n 1. ts = [] \\<Longrightarrow>\n    (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak' (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n    (if pr_strict (f, length ss) (g, length ts) then (True, True)\n     else if pr_weak (f, length ss) (g, length ts)\n          then lex_ext_unbounded kbo ss ts else (False, False))", "unfolding ss ts"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if pr_strict' (f, length (s1 # ss')) (g, length []) then (True, True)\n     else if pr_weak' (f, length (s1 # ss')) (g, length [])\n          then lex_ext_unbounded kbo'.kbo (s1 # ss') []\n          else (False, False)) =\n    (if pr_strict (f, length (s1 # ss')) (g, length []) then (True, True)\n     else if pr_weak (f, length (s1 # ss')) (g, length [])\n          then lex_ext_unbounded kbo (s1 # ss') [] else (False, False))", "using unary[OF weight(1) s ss]"], ["proof (prove)\nusing this:\n  pr_weak (f, Suc (length ss')) ?ga15\n\ngoal (1 subgoal):\n 1. (if pr_strict' (f, length (s1 # ss')) (g, length []) then (True, True)\n     else if pr_weak' (f, length (s1 # ss')) (g, length [])\n          then lex_ext_unbounded kbo'.kbo (s1 # ss') []\n          else (False, False)) =\n    (if pr_strict (f, length (s1 # ss')) (g, length []) then (True, True)\n     else if pr_weak (f, length (s1 # ss')) (g, length [])\n          then lex_ext_unbounded kbo (s1 # ss') [] else (False, False))", "by (simp add: lex_ext_unbounded.simps pr_strict'_def pr_weak'_def lConsts_def pr_strict)"], ["proof (state)\nthis:\n  (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n   else if pr_weak' (f, length ss) (g, length ts)\n        then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n  (if pr_strict (f, length ss) (g, length ts) then (True, True)\n   else if pr_weak (f, length ss) (g, length ts)\n        then lex_ext_unbounded kbo ss ts else (False, False))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n   else if pr_weak' (f, length ss) (g, length ts)\n        then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n  (if pr_strict (f, length ss) (g, length ts) then (True, True)\n   else if pr_weak (f, length ss) (g, length ts)\n        then lex_ext_unbounded kbo ss ts else (False, False))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n   else if pr_weak' (f, length ss) (g, length ts)\n        then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n  (if pr_strict (f, length ss) (g, length ts) then (True, True)\n   else if pr_weak (f, length ss) (g, length ts)\n        then lex_ext_unbounded kbo ss ts else (False, False))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (if pr_strict' (f, length ss) (g, length ts) then (True, True)\n   else if pr_weak' (f, length ss) (g, length ts)\n        then lex_ext_unbounded kbo'.kbo ss ts else (False, False)) =\n  (if pr_strict (f, length ss) (g, length ts) then (True, True)\n   else if pr_weak (f, length ss) (g, length ts)\n        then lex_ext_unbounded kbo ss ts else (False, False))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  kbo'.kbo s t = kbo s t\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"], ["", "end"]]}