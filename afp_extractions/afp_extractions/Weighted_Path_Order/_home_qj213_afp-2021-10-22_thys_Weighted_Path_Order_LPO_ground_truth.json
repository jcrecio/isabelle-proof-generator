{"file_name": "/home/qj213/afp-2021-10-22/thys/Weighted_Path_Order/LPO.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Weighted_Path_Order", "problem_names": ["lemma lpo_eq_wpo: \"lpo_pr s t = wpo s t\"", "theorem LPO_SN_order_pair: \"SN_order_pair LPO_S LPO_NS\"", "theorem LPO_S_subst: \"(s,t) \\<in> LPO_S \\<Longrightarrow> (s \\<cdot> \\<sigma>, t \\<cdot> \\<sigma>) \\<in> LPO_S\" for \\<sigma> :: \"('f,'a)subst\"", "theorem LPO_NS_subst: \"(s,t) \\<in> LPO_NS \\<Longrightarrow> (s \\<cdot> \\<sigma>, t \\<cdot> \\<sigma>) \\<in> LPO_NS\" for \\<sigma> :: \"('f,'a)subst\"", "theorem LPO_NS_ctxt: \"(s,t) \\<in> LPO_NS \\<Longrightarrow> (Fun f (bef @ s # aft), Fun f (bef @ t # aft)) \\<in> LPO_NS\"", "theorem LPO_S_ctxt: \"(s,t) \\<in> LPO_S \\<Longrightarrow> (Fun f (bef @ s # aft), Fun f (bef @ t # aft)) \\<in> LPO_S\"", "theorem LPO_S_subset_LPO_NS: \"LPO_S \\<subseteq> LPO_NS\"", "theorem supt_subset_LPO_S: \"{\\<rhd>} \\<subseteq> LPO_S\"", "theorem supteq_subset_LPO_NS: \"{\\<unrhd>} \\<subseteq> LPO_NS\""], "translations": [["", "lemma lpo_eq_wpo: \"lpo_pr s t = wpo s t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lpo_pr s t = wpo s t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lpo_pr s t = wpo s t", "note simps = wpo.simps"], ["proof (state)\nthis:\n  wpo ?s ?t =\n  (case ?s of\n   Var x \\<Rightarrow>\n     (False,\n      case ?t of Var xa \\<Rightarrow> x = xa\n      | Fun g ts \\<Rightarrow>\n          (?s, ?t) \\<in> UNIV \\<and>\n          \\<sigma> (g, length ts) = [] \\<and> prl (g, length ts))\n   | Fun f ss \\<Rightarrow>\n       if (?s, ?t) \\<in> {} then (True, True)\n       else if (?s, ?t) \\<in> UNIV\n            then if \\<exists>i\\<in>set (\\<sigma> (f, length ss)).\n                       wpo_ns (ss ! i) ?t\n                 then (True, True)\n                 else case ?t of\n                      Var x \\<Rightarrow> (False, False \\<and> False)\n                      | Fun g ts \\<Rightarrow>\n                          case prc (f, length ss) (g, length ts) of\n                          (prs, prns) \\<Rightarrow>\n                            if prns \\<and>\n                               (\\<forall>j\n   \\<in>set (\\<sigma> (g, length ts)).\n                                   wpo_s ?s (ts ! j))\n                            then if prs then (True, True)\n                                 else let ss' =\n      map ((!) ss) (\\<sigma> (f, length ss));\n    ts' = map ((!) ts) (\\<sigma> (g, length ts)); cf = Lex; cg = Lex\nin if cf = Lex \\<and> cg = Lex then lex_ext wpo n ss' ts'\n   else if cf = Mul \\<and> cg = Mul then mul_ext wpo ss' ts'\n        else (length ss' \\<noteq> 0 \\<and> length ts' = 0, length ts' = 0)\n                            else (False, False)\n            else (False, False))\n\ngoal (1 subgoal):\n 1. lpo_pr s t = wpo s t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. lpo_pr s t = wpo s t", "proof (induct s t rule: lpo.induct[of _ prc prl n])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y. lpo_pr (Var x) (Var y) = wpo (Var x) (Var y)\n 2. \\<And>x g ts. lpo_pr (Var x) (Fun g ts) = wpo (Var x) (Fun g ts)\n 3. \\<And>f ss y.\n       (\\<And>x.\n           x \\<in> set ss \\<Longrightarrow>\n           lpo_pr x (Var y) = wpo x (Var y)) \\<Longrightarrow>\n       lpo_pr (Fun f ss) (Var y) = wpo (Fun f ss) (Var y)\n 4. \\<And>f ss g ts.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> set ss \\<Longrightarrow>\n                   lpo_pr x (Fun g ts) = wpo x (Fun g ts);\n        \\<And>x xa y xb.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            xb \\<in> set ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (Fun f ss) xb = wpo (Fun f ss) xb;\n        \\<And>x xa y i.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            y \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t); \\<not> xa;\n            i < length ss; i < length ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (ss ! i) (ts ! i) =\n                             wpo (ss ! i) (ts ! i)\\<rbrakk>\n       \\<Longrightarrow> lpo_pr (Fun f ss) (Fun g ts) =\n                         wpo (Fun f ss) (Fun g ts)", "case (1 x y)"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>x y. lpo_pr (Var x) (Var y) = wpo (Var x) (Var y)\n 2. \\<And>x g ts. lpo_pr (Var x) (Fun g ts) = wpo (Var x) (Fun g ts)\n 3. \\<And>f ss y.\n       (\\<And>x.\n           x \\<in> set ss \\<Longrightarrow>\n           lpo_pr x (Var y) = wpo x (Var y)) \\<Longrightarrow>\n       lpo_pr (Fun f ss) (Var y) = wpo (Fun f ss) (Var y)\n 4. \\<And>f ss g ts.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> set ss \\<Longrightarrow>\n                   lpo_pr x (Fun g ts) = wpo x (Fun g ts);\n        \\<And>x xa y xb.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            xb \\<in> set ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (Fun f ss) xb = wpo (Fun f ss) xb;\n        \\<And>x xa y i.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            y \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t); \\<not> xa;\n            i < length ss; i < length ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (ss ! i) (ts ! i) =\n                             wpo (ss ! i) (ts ! i)\\<rbrakk>\n       \\<Longrightarrow> lpo_pr (Fun f ss) (Fun g ts) =\n                         wpo (Fun f ss) (Fun g ts)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. lpo_pr (Var x) (Var y) = wpo (Var x) (Var y)", "by (simp add: simps)"], ["proof (state)\nthis:\n  lpo_pr (Var x) (Var y) = wpo (Var x) (Var y)\n\ngoal (3 subgoals):\n 1. \\<And>x g ts. lpo_pr (Var x) (Fun g ts) = wpo (Var x) (Fun g ts)\n 2. \\<And>f ss y.\n       (\\<And>x.\n           x \\<in> set ss \\<Longrightarrow>\n           lpo_pr x (Var y) = wpo x (Var y)) \\<Longrightarrow>\n       lpo_pr (Fun f ss) (Var y) = wpo (Fun f ss) (Var y)\n 3. \\<And>f ss g ts.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> set ss \\<Longrightarrow>\n                   lpo_pr x (Fun g ts) = wpo x (Fun g ts);\n        \\<And>x xa y xb.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            xb \\<in> set ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (Fun f ss) xb = wpo (Fun f ss) xb;\n        \\<And>x xa y i.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            y \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t); \\<not> xa;\n            i < length ss; i < length ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (ss ! i) (ts ! i) =\n                             wpo (ss ! i) (ts ! i)\\<rbrakk>\n       \\<Longrightarrow> lpo_pr (Fun f ss) (Fun g ts) =\n                         wpo (Fun f ss) (Fun g ts)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x g ts. lpo_pr (Var x) (Fun g ts) = wpo (Var x) (Fun g ts)\n 2. \\<And>f ss y.\n       (\\<And>x.\n           x \\<in> set ss \\<Longrightarrow>\n           lpo_pr x (Var y) = wpo x (Var y)) \\<Longrightarrow>\n       lpo_pr (Fun f ss) (Var y) = wpo (Fun f ss) (Var y)\n 3. \\<And>f ss g ts.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> set ss \\<Longrightarrow>\n                   lpo_pr x (Fun g ts) = wpo x (Fun g ts);\n        \\<And>x xa y xb.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            xb \\<in> set ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (Fun f ss) xb = wpo (Fun f ss) xb;\n        \\<And>x xa y i.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            y \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t); \\<not> xa;\n            i < length ss; i < length ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (ss ! i) (ts ! i) =\n                             wpo (ss ! i) (ts ! i)\\<rbrakk>\n       \\<Longrightarrow> lpo_pr (Fun f ss) (Fun g ts) =\n                         wpo (Fun f ss) (Fun g ts)", "case (2 x g ts)"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>x g ts. lpo_pr (Var x) (Fun g ts) = wpo (Var x) (Fun g ts)\n 2. \\<And>f ss y.\n       (\\<And>x.\n           x \\<in> set ss \\<Longrightarrow>\n           lpo_pr x (Var y) = wpo x (Var y)) \\<Longrightarrow>\n       lpo_pr (Fun f ss) (Var y) = wpo (Fun f ss) (Var y)\n 3. \\<And>f ss g ts.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> set ss \\<Longrightarrow>\n                   lpo_pr x (Fun g ts) = wpo x (Fun g ts);\n        \\<And>x xa y xb.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            xb \\<in> set ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (Fun f ss) xb = wpo (Fun f ss) xb;\n        \\<And>x xa y i.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            y \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t); \\<not> xa;\n            i < length ss; i < length ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (ss ! i) (ts ! i) =\n                             wpo (ss ! i) (ts ! i)\\<rbrakk>\n       \\<Longrightarrow> lpo_pr (Fun f ss) (Fun g ts) =\n                         wpo (Fun f ss) (Fun g ts)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. lpo_pr (Var x) (Fun g ts) = wpo (Var x) (Fun g ts)", "by (auto simp: simps)"], ["proof (state)\nthis:\n  lpo_pr (Var x) (Fun g ts) = wpo (Var x) (Fun g ts)\n\ngoal (2 subgoals):\n 1. \\<And>f ss y.\n       (\\<And>x.\n           x \\<in> set ss \\<Longrightarrow>\n           lpo_pr x (Var y) = wpo x (Var y)) \\<Longrightarrow>\n       lpo_pr (Fun f ss) (Var y) = wpo (Fun f ss) (Var y)\n 2. \\<And>f ss g ts.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> set ss \\<Longrightarrow>\n                   lpo_pr x (Fun g ts) = wpo x (Fun g ts);\n        \\<And>x xa y xb.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            xb \\<in> set ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (Fun f ss) xb = wpo (Fun f ss) xb;\n        \\<And>x xa y i.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            y \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t); \\<not> xa;\n            i < length ss; i < length ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (ss ! i) (ts ! i) =\n                             wpo (ss ! i) (ts ! i)\\<rbrakk>\n       \\<Longrightarrow> lpo_pr (Fun f ss) (Fun g ts) =\n                         wpo (Fun f ss) (Fun g ts)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f ss y.\n       (\\<And>x.\n           x \\<in> set ss \\<Longrightarrow>\n           lpo_pr x (Var y) = wpo x (Var y)) \\<Longrightarrow>\n       lpo_pr (Fun f ss) (Var y) = wpo (Fun f ss) (Var y)\n 2. \\<And>f ss g ts.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> set ss \\<Longrightarrow>\n                   lpo_pr x (Fun g ts) = wpo x (Fun g ts);\n        \\<And>x xa y xb.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            xb \\<in> set ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (Fun f ss) xb = wpo (Fun f ss) xb;\n        \\<And>x xa y i.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            y \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t); \\<not> xa;\n            i < length ss; i < length ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (ss ! i) (ts ! i) =\n                             wpo (ss ! i) (ts ! i)\\<rbrakk>\n       \\<Longrightarrow> lpo_pr (Fun f ss) (Fun g ts) =\n                         wpo (Fun f ss) (Fun g ts)", "case (3 f ss y)"], ["proof (state)\nthis:\n  ?x4 \\<in> set ss \\<Longrightarrow> lpo_pr ?x4 (Var y) = wpo ?x4 (Var y)\n\ngoal (2 subgoals):\n 1. \\<And>f ss y.\n       (\\<And>x.\n           x \\<in> set ss \\<Longrightarrow>\n           lpo_pr x (Var y) = wpo x (Var y)) \\<Longrightarrow>\n       lpo_pr (Fun f ss) (Var y) = wpo (Fun f ss) (Var y)\n 2. \\<And>f ss g ts.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> set ss \\<Longrightarrow>\n                   lpo_pr x (Fun g ts) = wpo x (Fun g ts);\n        \\<And>x xa y xb.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            xb \\<in> set ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (Fun f ss) xb = wpo (Fun f ss) xb;\n        \\<And>x xa y i.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            y \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t); \\<not> xa;\n            i < length ss; i < length ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (ss ! i) (ts ! i) =\n                             wpo (ss ! i) (ts ! i)\\<rbrakk>\n       \\<Longrightarrow> lpo_pr (Fun f ss) (Fun g ts) =\n                         wpo (Fun f ss) (Fun g ts)", "then"], ["proof (chain)\npicking this:\n  ?x4 \\<in> set ss \\<Longrightarrow> lpo_pr ?x4 (Var y) = wpo ?x4 (Var y)", "show ?case"], ["proof (prove)\nusing this:\n  ?x4 \\<in> set ss \\<Longrightarrow> lpo_pr ?x4 (Var y) = wpo ?x4 (Var y)\n\ngoal (1 subgoal):\n 1. lpo_pr (Fun f ss) (Var y) = wpo (Fun f ss) (Var y)", "by (auto simp: simps[of \"Fun f ss\" \"Var y\"] Let_def set_conv_nth)"], ["proof (state)\nthis:\n  lpo_pr (Fun f ss) (Var y) = wpo (Fun f ss) (Var y)\n\ngoal (1 subgoal):\n 1. \\<And>f ss g ts.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> set ss \\<Longrightarrow>\n                   lpo_pr x (Fun g ts) = wpo x (Fun g ts);\n        \\<And>x xa y xb.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            xb \\<in> set ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (Fun f ss) xb = wpo (Fun f ss) xb;\n        \\<And>x xa y i.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            y \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t); \\<not> xa;\n            i < length ss; i < length ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (ss ! i) (ts ! i) =\n                             wpo (ss ! i) (ts ! i)\\<rbrakk>\n       \\<Longrightarrow> lpo_pr (Fun f ss) (Fun g ts) =\n                         wpo (Fun f ss) (Fun g ts)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f ss g ts.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> set ss \\<Longrightarrow>\n                   lpo_pr x (Fun g ts) = wpo x (Fun g ts);\n        \\<And>x xa y xb.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            xb \\<in> set ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (Fun f ss) xb = wpo (Fun f ss) xb;\n        \\<And>x xa y i.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            y \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t); \\<not> xa;\n            i < length ss; i < length ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (ss ! i) (ts ! i) =\n                             wpo (ss ! i) (ts ! i)\\<rbrakk>\n       \\<Longrightarrow> lpo_pr (Fun f ss) (Fun g ts) =\n                         wpo (Fun f ss) (Fun g ts)", "case IH: (4 f ss g ts)"], ["proof (state)\nthis:\n  ?x4 \\<in> set ss \\<Longrightarrow>\n  lpo_pr ?x4 (Fun g ts) = wpo ?x4 (Fun g ts)\n  \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n   ?x4 = prc (f, length ss) (g, length ts); (?xa4, ?y4) = ?x4;\n   ?xb4 \\<in> set ts\\<rbrakk>\n  \\<Longrightarrow> lpo_pr (Fun f ss) ?xb4 = wpo (Fun f ss) ?xb4\n  \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n   ?x4 = prc (f, length ss) (g, length ts); (?xa4, ?y4) = ?x4;\n   ?y4 \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t); \\<not> ?xa4;\n   ?i4 < length ss; ?i4 < length ts\\<rbrakk>\n  \\<Longrightarrow> lpo_pr (ss ! ?i4) (ts ! ?i4) = wpo (ss ! ?i4) (ts ! ?i4)\n\ngoal (1 subgoal):\n 1. \\<And>f ss g ts.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> set ss \\<Longrightarrow>\n                   lpo_pr x (Fun g ts) = wpo x (Fun g ts);\n        \\<And>x xa y xb.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            xb \\<in> set ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (Fun f ss) xb = wpo (Fun f ss) xb;\n        \\<And>x xa y i.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            y \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t); \\<not> xa;\n            i < length ss; i < length ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (ss ! i) (ts ! i) =\n                             wpo (ss ! i) (ts ! i)\\<rbrakk>\n       \\<Longrightarrow> lpo_pr (Fun f ss) (Fun g ts) =\n                         wpo (Fun f ss) (Fun g ts)", "have id: \"\\<And> s. (s \\<in> {}) = False\" \"\\<And> s. (s \\<in> UNIV) = True\" \n      and \"(\\<exists>i\\<in>{0..<length ss}. wpo_ns (ss ! i) t) = (\\<exists>si\\<in>set ss. wpo_ns si t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<And>s. (s \\<in> {}) = False) &&&\n     (\\<And>s. (s \\<in> UNIV) = True)) &&&\n    (\\<exists>i\\<in>{0..<length ss}. wpo_ns (ss ! i) t) =\n    (\\<exists>si\\<in>set ss. wpo_ns si t)", "by (auto, force simp: set_conv_nth)"], ["proof (state)\nthis:\n  (?s4 \\<in> {}) = False\n  (?s4 \\<in> UNIV) = True\n  (\\<exists>i\\<in>{0..<length ss}. wpo_ns (ss ! i) t) =\n  (\\<exists>si\\<in>set ss. wpo_ns si t)\n\ngoal (1 subgoal):\n 1. \\<And>f ss g ts.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> set ss \\<Longrightarrow>\n                   lpo_pr x (Fun g ts) = wpo x (Fun g ts);\n        \\<And>x xa y xb.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            xb \\<in> set ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (Fun f ss) xb = wpo (Fun f ss) xb;\n        \\<And>x xa y i.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            y \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t); \\<not> xa;\n            i < length ss; i < length ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (ss ! i) (ts ! i) =\n                             wpo (ss ! i) (ts ! i)\\<rbrakk>\n       \\<Longrightarrow> lpo_pr (Fun f ss) (Fun g ts) =\n                         wpo (Fun f ss) (Fun g ts)", "have id': \"map ((!) ss) (\\<sigma> (f, length ss)) = ss\" for f ss"], ["proof (prove)\ngoal (1 subgoal):\n 1. map ((!) ss) (\\<sigma> (f, length ss)) = ss", "by (intro nth_equalityI, auto)"], ["proof (state)\nthis:\n  map ((!) ?ss6) (\\<sigma> (?f6, length ?ss6)) = ?ss6\n\ngoal (1 subgoal):\n 1. \\<And>f ss g ts.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> set ss \\<Longrightarrow>\n                   lpo_pr x (Fun g ts) = wpo x (Fun g ts);\n        \\<And>x xa y xb.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            xb \\<in> set ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (Fun f ss) xb = wpo (Fun f ss) xb;\n        \\<And>x xa y i.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            y \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t); \\<not> xa;\n            i < length ss; i < length ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (ss ! i) (ts ! i) =\n                             wpo (ss ! i) (ts ! i)\\<rbrakk>\n       \\<Longrightarrow> lpo_pr (Fun f ss) (Fun g ts) =\n                         wpo (Fun f ss) (Fun g ts)", "have ex: \"(\\<exists>i\\<in>set (\\<sigma> (f, length ss)). wpo_ns (ss ! i) (Fun g ts)) = (\\<exists> si \\<in> set ss. lpo_ns si (Fun g ts))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>i\\<in>set (\\<sigma> (f, length ss)).\n        wpo_ns (ss ! i) (Fun g ts)) =\n    (\\<exists>si\\<in>set ss. lpo_ns si (Fun g ts))", "using IH(1)"], ["proof (prove)\nusing this:\n  ?x4 \\<in> set ss \\<Longrightarrow>\n  lpo_pr ?x4 (Fun g ts) = wpo ?x4 (Fun g ts)\n\ngoal (1 subgoal):\n 1. (\\<exists>i\\<in>set (\\<sigma> (f, length ss)).\n        wpo_ns (ss ! i) (Fun g ts)) =\n    (\\<exists>si\\<in>set ss. lpo_ns si (Fun g ts))", "unfolding set_conv_nth"], ["proof (prove)\nusing this:\n  ?x4 \\<in> {ss ! i |i. i < length ss} \\<Longrightarrow>\n  lpo_pr ?x4 (Fun g ts) = wpo ?x4 (Fun g ts)\n\ngoal (1 subgoal):\n 1. (\\<exists>i\\<in>{\\<sigma> (f, length ss) ! i |i.\n                     i < length (\\<sigma> (f, length ss))}.\n        wpo_ns (ss ! i) (Fun g ts)) =\n    (\\<exists>si\\<in>{ss ! i |i. i < length ss}. lpo_ns si (Fun g ts))", "by auto"], ["proof (state)\nthis:\n  (\\<exists>i\\<in>set (\\<sigma> (f, length ss)).\n      wpo_ns (ss ! i) (Fun g ts)) =\n  (\\<exists>si\\<in>set ss. lpo_ns si (Fun g ts))\n\ngoal (1 subgoal):\n 1. \\<And>f ss g ts.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> set ss \\<Longrightarrow>\n                   lpo_pr x (Fun g ts) = wpo x (Fun g ts);\n        \\<And>x xa y xb.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            xb \\<in> set ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (Fun f ss) xb = wpo (Fun f ss) xb;\n        \\<And>x xa y i.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            y \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t); \\<not> xa;\n            i < length ss; i < length ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (ss ! i) (ts ! i) =\n                             wpo (ss ! i) (ts ! i)\\<rbrakk>\n       \\<Longrightarrow> lpo_pr (Fun f ss) (Fun g ts) =\n                         wpo (Fun f ss) (Fun g ts)", "obtain prs prns where prc: \"prc (f, length ss) (g, length ts) = (prs, prns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>prs prns.\n        prc (f, length ss) (g, length ts) = (prs, prns) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  prc (f, length ss) (g, length ts) = (prs, prns)\n\ngoal (1 subgoal):\n 1. \\<And>f ss g ts.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> set ss \\<Longrightarrow>\n                   lpo_pr x (Fun g ts) = wpo x (Fun g ts);\n        \\<And>x xa y xb.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            xb \\<in> set ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (Fun f ss) xb = wpo (Fun f ss) xb;\n        \\<And>x xa y i.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            y \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t); \\<not> xa;\n            i < length ss; i < length ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (ss ! i) (ts ! i) =\n                             wpo (ss ! i) (ts ! i)\\<rbrakk>\n       \\<Longrightarrow> lpo_pr (Fun f ss) (Fun g ts) =\n                         wpo (Fun f ss) (Fun g ts)", "have lex: \"(Lex = Lex \\<and> Lex = Lex) = True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Lex = Lex \\<and> Lex = Lex) = True", "by simp"], ["proof (state)\nthis:\n  (Lex = Lex \\<and> Lex = Lex) = True\n\ngoal (1 subgoal):\n 1. \\<And>f ss g ts.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> set ss \\<Longrightarrow>\n                   lpo_pr x (Fun g ts) = wpo x (Fun g ts);\n        \\<And>x xa y xb.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            xb \\<in> set ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (Fun f ss) xb = wpo (Fun f ss) xb;\n        \\<And>x xa y i.\n           \\<lbrakk>\\<not> (\\<exists>s\\<in>set ss. lpo_ns s (Fun g ts));\n            x = prc (f, length ss) (g, length ts); (xa, y) = x;\n            y \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t); \\<not> xa;\n            i < length ss; i < length ts\\<rbrakk>\n           \\<Longrightarrow> lpo_pr (ss ! i) (ts ! i) =\n                             wpo (ss ! i) (ts ! i)\\<rbrakk>\n       \\<Longrightarrow> lpo_pr (Fun f ss) (Fun g ts) =\n                         wpo (Fun f ss) (Fun g ts)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. lpo_pr (Fun f ss) (Fun g ts) = wpo (Fun f ss) (Fun g ts)", "unfolding lpo.simps simps[of \"Fun f ss\" \"Fun g ts\"] term.simps id id' if_False if_True lex\n        Let_def ex prc split"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>s\\<in>set ss. lpo_ns s (Fun g ts) then (True, True)\n     else if prns \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t)\n          then if prs then (True, True) else lex_ext lpo_pr n ss ts\n          else (False, False)) =\n    (if \\<exists>si\\<in>set ss. lpo_ns si (Fun g ts) then (True, True)\n     else if prns \\<and>\n             (\\<forall>j\\<in>set (\\<sigma> (g, length ts)).\n                 wpo_s (Fun f ss) (ts ! j))\n          then if prs then (True, True) else lex_ext wpo n ss ts\n          else (False, False))", "proof (rule sym, rule if_cong[OF refl refl], rule if_cong[OF conj_cong[OF refl] if_cong[OF refl refl] refl])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> (\\<exists>si\\<in>set ss. lpo_ns si (Fun g ts));\n     prns\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>j\\<in>set (\\<sigma> (g, length ts)).\n                          wpo_s (Fun f ss) (ts ! j)) =\n                      (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t)\n 2. \\<lbrakk>\\<not> (\\<exists>si\\<in>set ss. lpo_ns si (Fun g ts));\n     prns \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t);\n     \\<not> prs\\<rbrakk>\n    \\<Longrightarrow> lex_ext wpo n ss ts = lex_ext lpo_pr n ss ts", "assume \"\\<not> (\\<exists>si\\<in>set ss. lpo_ns si (Fun g ts))\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>si\\<in>set ss. lpo_ns si (Fun g ts))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> (\\<exists>si\\<in>set ss. lpo_ns si (Fun g ts));\n     prns\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>j\\<in>set (\\<sigma> (g, length ts)).\n                          wpo_s (Fun f ss) (ts ! j)) =\n                      (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t)\n 2. \\<lbrakk>\\<not> (\\<exists>si\\<in>set ss. lpo_ns si (Fun g ts));\n     prns \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t);\n     \\<not> prs\\<rbrakk>\n    \\<Longrightarrow> lex_ext wpo n ss ts = lex_ext lpo_pr n ss ts", "note IH = IH(2-)[OF this prc[symmetric] refl]"], ["proof (state)\nthis:\n  ?xb4 \\<in> set ts \\<Longrightarrow>\n  lpo_pr (Fun f ss) ?xb4 = wpo (Fun f ss) ?xb4\n  \\<lbrakk>prns \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t);\n   \\<not> prs; ?i4 < length ss; ?i4 < length ts\\<rbrakk>\n  \\<Longrightarrow> lpo_pr (ss ! ?i4) (ts ! ?i4) = wpo (ss ! ?i4) (ts ! ?i4)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> (\\<exists>si\\<in>set ss. lpo_ns si (Fun g ts));\n     prns\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>j\\<in>set (\\<sigma> (g, length ts)).\n                          wpo_s (Fun f ss) (ts ! j)) =\n                      (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t)\n 2. \\<lbrakk>\\<not> (\\<exists>si\\<in>set ss. lpo_ns si (Fun g ts));\n     prns \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t);\n     \\<not> prs\\<rbrakk>\n    \\<Longrightarrow> lex_ext wpo n ss ts = lex_ext lpo_pr n ss ts", "from IH(1)"], ["proof (chain)\npicking this:\n  ?xb4 \\<in> set ts \\<Longrightarrow>\n  lpo_pr (Fun f ss) ?xb4 = wpo (Fun f ss) ?xb4", "show \"(\\<forall>j\\<in>set (\\<sigma> (g, length ts)). wpo_s (Fun f ss) (ts ! j)) = (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t)\""], ["proof (prove)\nusing this:\n  ?xb4 \\<in> set ts \\<Longrightarrow>\n  lpo_pr (Fun f ss) ?xb4 = wpo (Fun f ss) ?xb4\n\ngoal (1 subgoal):\n 1. (\\<forall>j\\<in>set (\\<sigma> (g, length ts)).\n        wpo_s (Fun f ss) (ts ! j)) =\n    (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t)", "unfolding set_conv_nth"], ["proof (prove)\nusing this:\n  ?xb4 \\<in> {ts ! i |i. i < length ts} \\<Longrightarrow>\n  lpo_pr (Fun f ss) ?xb4 = wpo (Fun f ss) ?xb4\n\ngoal (1 subgoal):\n 1. (\\<forall>j\\<in>{\\<sigma> (g, length ts) ! i |i.\n                     i < length (\\<sigma> (g, length ts))}.\n        wpo_s (Fun f ss) (ts ! j)) =\n    (\\<forall>t\\<in>{ts ! i |i. i < length ts}. lpo_s (Fun f ss) t)", "by auto"], ["proof (state)\nthis:\n  (\\<forall>j\\<in>set (\\<sigma> (g, length ts)).\n      wpo_s (Fun f ss) (ts ! j)) =\n  (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (\\<exists>si\\<in>set ss. lpo_ns si (Fun g ts));\n     prns \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t);\n     \\<not> prs\\<rbrakk>\n    \\<Longrightarrow> lex_ext wpo n ss ts = lex_ext lpo_pr n ss ts", "assume \"prns \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t)\" \"\\<not> prs\""], ["proof (state)\nthis:\n  prns \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t)\n  \\<not> prs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (\\<exists>si\\<in>set ss. lpo_ns si (Fun g ts));\n     prns \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t);\n     \\<not> prs\\<rbrakk>\n    \\<Longrightarrow> lex_ext wpo n ss ts = lex_ext lpo_pr n ss ts", "note IH = IH(2-)[OF this]"], ["proof (state)\nthis:\n  \\<lbrakk>?i4 < length ss; ?i4 < length ts\\<rbrakk>\n  \\<Longrightarrow> lpo_pr (ss ! ?i4) (ts ! ?i4) = wpo (ss ! ?i4) (ts ! ?i4)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (\\<exists>si\\<in>set ss. lpo_ns si (Fun g ts));\n     prns \\<and> (\\<forall>t\\<in>set ts. lpo_s (Fun f ss) t);\n     \\<not> prs\\<rbrakk>\n    \\<Longrightarrow> lex_ext wpo n ss ts = lex_ext lpo_pr n ss ts", "show \"lex_ext wpo n ss ts = lex_ext lpo_pr n ss ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lex_ext wpo n ss ts = lex_ext lpo_pr n ss ts", "using IH"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i4 < length ss; ?i4 < length ts\\<rbrakk>\n  \\<Longrightarrow> lpo_pr (ss ! ?i4) (ts ! ?i4) = wpo (ss ! ?i4) (ts ! ?i4)\n\ngoal (1 subgoal):\n 1. lex_ext wpo n ss ts = lex_ext lpo_pr n ss ts", "by (intro lex_ext_cong, auto)"], ["proof (state)\nthis:\n  lex_ext wpo n ss ts = lex_ext lpo_pr n ss ts\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lpo_pr (Fun f ss) (Fun g ts) = wpo (Fun f ss) (Fun g ts)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lpo_pr s t = wpo s t\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation \"LPO_S \\<equiv> {(s,t). lpo_s s t}\""], ["", "abbreviation \"LPO_NS \\<equiv> {(s,t). lpo_ns s t}\""], ["", "theorem LPO_SN_order_pair: \"SN_order_pair LPO_S LPO_NS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_order_pair LPO_S LPO_NS", "unfolding lpo_eq_wpo"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_order_pair WPO_S WPO_NS", "by (rule WPO_SN_order_pair)"], ["", "theorem LPO_S_subst: \"(s,t) \\<in> LPO_S \\<Longrightarrow> (s \\<cdot> \\<sigma>, t \\<cdot> \\<sigma>) \\<in> LPO_S\" for \\<sigma> :: \"('f,'a)subst\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s, t) \\<in> LPO_S \\<Longrightarrow>\n    (s \\<cdot> \\<sigma>, t \\<cdot> \\<sigma>) \\<in> LPO_S", "using WPO_S_subst"], ["proof (prove)\nusing this:\n  (?s, ?t) \\<in> WPO_S \\<Longrightarrow>\n  (?s \\<cdot> ?\\<sigma>, ?t \\<cdot> ?\\<sigma>) \\<in> WPO_S\n\ngoal (1 subgoal):\n 1. (s, t) \\<in> LPO_S \\<Longrightarrow>\n    (s \\<cdot> \\<sigma>, t \\<cdot> \\<sigma>) \\<in> LPO_S", "unfolding lpo_eq_wpo"], ["proof (prove)\nusing this:\n  (?s, ?t) \\<in> WPO_S \\<Longrightarrow>\n  (?s \\<cdot> ?\\<sigma>, ?t \\<cdot> ?\\<sigma>) \\<in> WPO_S\n\ngoal (1 subgoal):\n 1. (s, t) \\<in> WPO_S \\<Longrightarrow>\n    (s \\<cdot> \\<sigma>, t \\<cdot> \\<sigma>) \\<in> WPO_S", "."], ["", "theorem LPO_NS_subst: \"(s,t) \\<in> LPO_NS \\<Longrightarrow> (s \\<cdot> \\<sigma>, t \\<cdot> \\<sigma>) \\<in> LPO_NS\" for \\<sigma> :: \"('f,'a)subst\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s, t) \\<in> LPO_NS \\<Longrightarrow>\n    (s \\<cdot> \\<sigma>, t \\<cdot> \\<sigma>) \\<in> LPO_NS", "using WPO_NS_subst"], ["proof (prove)\nusing this:\n  (?s, ?t) \\<in> WPO_NS \\<Longrightarrow>\n  (?s \\<cdot> ?\\<sigma>, ?t \\<cdot> ?\\<sigma>) \\<in> WPO_NS\n\ngoal (1 subgoal):\n 1. (s, t) \\<in> LPO_NS \\<Longrightarrow>\n    (s \\<cdot> \\<sigma>, t \\<cdot> \\<sigma>) \\<in> LPO_NS", "unfolding lpo_eq_wpo"], ["proof (prove)\nusing this:\n  (?s, ?t) \\<in> WPO_NS \\<Longrightarrow>\n  (?s \\<cdot> ?\\<sigma>, ?t \\<cdot> ?\\<sigma>) \\<in> WPO_NS\n\ngoal (1 subgoal):\n 1. (s, t) \\<in> WPO_NS \\<Longrightarrow>\n    (s \\<cdot> \\<sigma>, t \\<cdot> \\<sigma>) \\<in> WPO_NS", "."], ["", "theorem LPO_NS_ctxt: \"(s,t) \\<in> LPO_NS \\<Longrightarrow> (Fun f (bef @ s # aft), Fun f (bef @ t # aft)) \\<in> LPO_NS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s, t) \\<in> LPO_NS \\<Longrightarrow>\n    (Fun f (bef @ s # aft), Fun f (bef @ t # aft)) \\<in> LPO_NS", "using WPO_NS_ctxt"], ["proof (prove)\nusing this:\n  (?s, ?t) \\<in> WPO_NS \\<Longrightarrow>\n  (Fun ?f (?bef @ ?s # ?aft), Fun ?f (?bef @ ?t # ?aft)) \\<in> WPO_NS\n\ngoal (1 subgoal):\n 1. (s, t) \\<in> LPO_NS \\<Longrightarrow>\n    (Fun f (bef @ s # aft), Fun f (bef @ t # aft)) \\<in> LPO_NS", "unfolding lpo_eq_wpo"], ["proof (prove)\nusing this:\n  (?s, ?t) \\<in> WPO_NS \\<Longrightarrow>\n  (Fun ?f (?bef @ ?s # ?aft), Fun ?f (?bef @ ?t # ?aft)) \\<in> WPO_NS\n\ngoal (1 subgoal):\n 1. (s, t) \\<in> WPO_NS \\<Longrightarrow>\n    (Fun f (bef @ s # aft), Fun f (bef @ t # aft)) \\<in> WPO_NS", "."], ["", "theorem LPO_S_ctxt: \"(s,t) \\<in> LPO_S \\<Longrightarrow> (Fun f (bef @ s # aft), Fun f (bef @ t # aft)) \\<in> LPO_S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s, t) \\<in> LPO_S \\<Longrightarrow>\n    (Fun f (bef @ s # aft), Fun f (bef @ t # aft)) \\<in> LPO_S", "using WPO_S_ctxt"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>f k. set (\\<sigma> (f, k)) = {0..<k};\n   (?s, ?t) \\<in> WPO_S\\<rbrakk>\n  \\<Longrightarrow> (Fun ?f (?bef @ ?s # ?aft), Fun ?f (?bef @ ?t # ?aft))\n                    \\<in> WPO_S\n\ngoal (1 subgoal):\n 1. (s, t) \\<in> LPO_S \\<Longrightarrow>\n    (Fun f (bef @ s # aft), Fun f (bef @ t # aft)) \\<in> LPO_S", "unfolding lpo_eq_wpo"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>f k. set (\\<sigma> (f, k)) = {0..<k};\n   (?s, ?t) \\<in> WPO_S\\<rbrakk>\n  \\<Longrightarrow> (Fun ?f (?bef @ ?s # ?aft), Fun ?f (?bef @ ?t # ?aft))\n                    \\<in> WPO_S\n\ngoal (1 subgoal):\n 1. (s, t) \\<in> WPO_S \\<Longrightarrow>\n    (Fun f (bef @ s # aft), Fun f (bef @ t # aft)) \\<in> WPO_S", "by auto"], ["", "theorem LPO_S_subset_LPO_NS: \"LPO_S \\<subseteq> LPO_NS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LPO_S \\<subseteq> LPO_NS", "using WPO_S_subset_WPO_NS"], ["proof (prove)\nusing this:\n  WPO_S \\<subseteq> WPO_NS\n\ngoal (1 subgoal):\n 1. LPO_S \\<subseteq> LPO_NS", "unfolding lpo_eq_wpo"], ["proof (prove)\nusing this:\n  WPO_S \\<subseteq> WPO_NS\n\ngoal (1 subgoal):\n 1. WPO_S \\<subseteq> WPO_NS", "."], ["", "theorem supt_subset_LPO_S: \"{\\<rhd>} \\<subseteq> LPO_S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<rhd>} \\<subseteq> LPO_S", "using supt_subset_WPO_S"], ["proof (prove)\nusing this:\n  (\\<And>f k. set (\\<sigma> (f, k)) = {0..<k}) \\<Longrightarrow>\n  {\\<rhd>} \\<subseteq> WPO_S\n\ngoal (1 subgoal):\n 1. {\\<rhd>} \\<subseteq> LPO_S", "unfolding lpo_eq_wpo"], ["proof (prove)\nusing this:\n  (\\<And>f k. set (\\<sigma> (f, k)) = {0..<k}) \\<Longrightarrow>\n  {\\<rhd>} \\<subseteq> WPO_S\n\ngoal (1 subgoal):\n 1. {\\<rhd>} \\<subseteq> WPO_S", "by auto"], ["", "theorem supteq_subset_LPO_NS: \"{\\<unrhd>} \\<subseteq> LPO_NS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<unrhd>} \\<subseteq> LPO_NS", "using supteq_subset_WPO_NS"], ["proof (prove)\nusing this:\n  (\\<And>f k. set (\\<sigma> (f, k)) = {0..<k}) \\<Longrightarrow>\n  {\\<unrhd>} \\<subseteq> WPO_NS\n\ngoal (1 subgoal):\n 1. {\\<unrhd>} \\<subseteq> LPO_NS", "unfolding lpo_eq_wpo"], ["proof (prove)\nusing this:\n  (\\<And>f k. set (\\<sigma> (f, k)) = {0..<k}) \\<Longrightarrow>\n  {\\<unrhd>} \\<subseteq> WPO_NS\n\ngoal (1 subgoal):\n 1. {\\<unrhd>} \\<subseteq> WPO_NS", "by auto"], ["", "end"], ["", "end"]]}