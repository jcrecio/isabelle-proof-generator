{"file_name": "/home/qj213/afp-2021-10-22/thys/Weighted_Path_Order/Multiset_Extension_Pair_Impl.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Weighted_Path_Order", "problem_names": ["lemma subset_mult2_alt:\n  assumes \"X \\<subseteq># Y\" \"(Y, Z) \\<in> mult2_alt b ns s\" \"b \\<Longrightarrow> b'\"\n  shows \"(X, Z) \\<in> mult2_alt b' ns s\"", "lemma mem_multiset_diff: \"x \\<in># A \\<Longrightarrow> x \\<noteq> y \\<Longrightarrow> x \\<in># (A - {#y#})\"", "lemma mult2_alt_addL: \"(add_mset x X, Y) \\<in> mult2_alt b ns s \\<longleftrightarrow>\n  (\\<exists>y. y \\<in># Y \\<and> (x, y) \\<in> s \\<and> ({# x \\<in># X. (x, y) \\<notin> s #}, Y - {#y#}) \\<in> mult2_alt_ns ns s) \\<or>\n  (\\<exists>y. y \\<in># Y \\<and> (x, y) \\<in> ns \\<and> (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)\" (is \"?L \\<longleftrightarrow> ?R1 \\<or> ?R2\")", "lemma mult2_impl0_sound:\n  fixes nss\n  defines \"ns \\<equiv> {(x, y). nss x y True}\" and \"s \\<equiv> {(x, y). nss x y False}\"\n  shows \"mult2_impl0 nss xs ys b \\<longleftrightarrow> (mset xs, mset ys) \\<in> mult2_alt b ns s\"\n    \"mult2_ex_dom0 nss x xs ys ys' b \\<longleftrightarrow>\n      (\\<exists>y. y \\<in># mset ys \\<and> (x, y) \\<in> s \\<and> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs), mset (ys @ ys') - {#y#}) \\<in> mult2_alt True ns s) \\<or>\n      (\\<exists>y. y \\<in># mset ys \\<and> (x, y) \\<in> ns \\<and> (x, y) \\<notin> s \\<and> (mset xs, mset (ys @ ys') - {#y#}) \\<in> mult2_alt b ns s)\"", "lemma mult2_impl_sound0:\n  defines \"pair \\<equiv> \\<lambda>f. (f False, f True)\" and \"fun \\<equiv> \\<lambda>p b. if b then snd p else fst p\"\n  shows \"mult2_impl sns xs ys = pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) xs ys)\" (is ?P)\n    \"mult2_ex_dom sns x xs ys ys' = pair (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs ys ys')\" (is ?Q)", "lemmas mult2_impl_sound = mult2_impl_sound0(1)[unfolded mult2_impl0_sound if_True if_False]"], "translations": [["", "lemma subset_mult2_alt:\n  assumes \"X \\<subseteq># Y\" \"(Y, Z) \\<in> mult2_alt b ns s\" \"b \\<Longrightarrow> b'\"\n  shows \"(X, Z) \\<in> mult2_alt b' ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt b' ns s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt b' ns s", "from assms(2)"], ["proof (chain)\npicking this:\n  (Y, Z) \\<in> mult2_alt b ns s", "obtain Y1 Y2 Z1 Z2 where *: \"Y = Y1 + Y2\" \"Z = Z1 + Z2\"\n    \"(Y1, Z1) \\<in> multpw ns\" \"b \\<or> Z2 \\<noteq> {#}\" \"\\<forall>y. y \\<in># Y2 \\<longrightarrow> (\\<exists>z. z \\<in># Z2 \\<and> (y, z) \\<in> s)\""], ["proof (prove)\nusing this:\n  (Y, Z) \\<in> mult2_alt b ns s\n\ngoal (1 subgoal):\n 1. (\\<And>Y1 Y2 Z1 Z2.\n        \\<lbrakk>Y = Y1 + Y2; Z = Z1 + Z2; (Y1, Z1) \\<in> multpw ns;\n         b \\<or> Z2 \\<noteq> {#};\n         \\<forall>y.\n            y \\<in># Y2 \\<longrightarrow>\n            (\\<exists>z. z \\<in># Z2 \\<and> (y, z) \\<in> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding mult2_alt_def"], ["proof (prove)\nusing this:\n  (Y, Z)\n  \\<in> {(X, Y).\n         \\<exists>X1 X2 Y1 Y2.\n            X = X1 + X2 \\<and>\n            Y = Y1 + Y2 \\<and>\n            (X1, Y1) \\<in> multpw ns \\<and>\n            (b \\<or> Y2 \\<noteq> {#}) \\<and>\n            (\\<forall>x.\n                x \\<in># X2 \\<longrightarrow>\n                (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))}\n\ngoal (1 subgoal):\n 1. (\\<And>Y1 Y2 Z1 Z2.\n        \\<lbrakk>Y = Y1 + Y2; Z = Z1 + Z2; (Y1, Z1) \\<in> multpw ns;\n         b \\<or> Z2 \\<noteq> {#};\n         \\<forall>y.\n            y \\<in># Y2 \\<longrightarrow>\n            (\\<exists>z. z \\<in># Z2 \\<and> (y, z) \\<in> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Y = Y1 + Y2\n  Z = Z1 + Z2\n  (Y1, Z1) \\<in> multpw ns\n  b \\<or> Z2 \\<noteq> {#}\n  \\<forall>y.\n     y \\<in># Y2 \\<longrightarrow>\n     (\\<exists>z. z \\<in># Z2 \\<and> (y, z) \\<in> s)\n\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt b' ns s", "define Y11 Y12 X2 where \"Y11 = Y1 \\<inter># X\" and \"Y12 = Y1 - X\" and \"X2 = X - Y11\""], ["proof (state)\nthis:\n  Y11 = Y1 \\<inter># X\n  Y12 = Y1 - X\n  X2 = X - Y11\n\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt b' ns s", "have **: \"X = Y11 + X2\" \"X2 \\<subseteq># Y2\" \"Y1 = Y11 + Y12\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X = Y11 + X2 &&& X2 \\<subseteq># Y2 &&& Y1 = Y11 + Y12", "using *(1)"], ["proof (prove)\nusing this:\n  Y = Y1 + Y2\n\ngoal (1 subgoal):\n 1. X = Y11 + X2 &&& X2 \\<subseteq># Y2 &&& Y1 = Y11 + Y12", "by (auto simp: Y11_def Y12_def X2_def multiset_eq_iff subseteq_mset_def)\n      (metis add.commute assms(1) le_diff_conv subseteq_mset_def)"], ["proof (state)\nthis:\n  X = Y11 + X2\n  X2 \\<subseteq># Y2\n  Y1 = Y11 + Y12\n\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt b' ns s", "obtain Z11 Z12 where ***: \"Z = Z11 + (Z12 + Z2)\" \"Z1 = Z11 + Z12\" \"(Y11, Z11) \\<in> multpw ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Z11 Z12.\n        \\<lbrakk>Z = Z11 + (Z12 + Z2); Z1 = Z11 + Z12;\n         (Y11, Z11) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using *(2,3) **(3)"], ["proof (prove)\nusing this:\n  Z = Z1 + Z2\n  (Y1, Z1) \\<in> multpw ns\n  Y1 = Y11 + Y12\n\ngoal (1 subgoal):\n 1. (\\<And>Z11 Z12.\n        \\<lbrakk>Z = Z11 + (Z12 + Z2); Z1 = Z11 + Z12;\n         (Y11, Z11) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: multpw_splitR simp: ac_simps)"], ["proof (state)\nthis:\n  Z = Z11 + (Z12 + Z2)\n  Z1 = Z11 + Z12\n  (Y11, Z11) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt b' ns s", "moreover"], ["proof (state)\nthis:\n  Z = Z11 + (Z12 + Z2)\n  Z1 = Z11 + Z12\n  (Y11, Z11) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt b' ns s", "have \"\\<forall>y. y \\<in># X2 \\<longrightarrow> (\\<exists>z. z \\<in># Z12 + Z2 \\<and> (y, z) \\<in> s)\" \"b \\<or> Z12 + Z2 \\<noteq> {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y.\n       y \\<in># X2 \\<longrightarrow>\n       (\\<exists>z. z \\<in># Z12 + Z2 \\<and> (y, z) \\<in> s) &&&\n    b \\<or> Z12 + Z2 \\<noteq> {#}", "using *(4,5) **(2)"], ["proof (prove)\nusing this:\n  b \\<or> Z2 \\<noteq> {#}\n  \\<forall>y.\n     y \\<in># Y2 \\<longrightarrow>\n     (\\<exists>z. z \\<in># Z2 \\<and> (y, z) \\<in> s)\n  X2 \\<subseteq># Y2\n\ngoal (1 subgoal):\n 1. \\<forall>y.\n       y \\<in># X2 \\<longrightarrow>\n       (\\<exists>z. z \\<in># Z12 + Z2 \\<and> (y, z) \\<in> s) &&&\n    b \\<or> Z12 + Z2 \\<noteq> {#}", "by (auto dest!: mset_subset_eqD)"], ["proof (state)\nthis:\n  \\<forall>y.\n     y \\<in># X2 \\<longrightarrow>\n     (\\<exists>z. z \\<in># Z12 + Z2 \\<and> (y, z) \\<in> s)\n  b \\<or> Z12 + Z2 \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt b' ns s", "ultimately"], ["proof (chain)\npicking this:\n  Z = Z11 + (Z12 + Z2)\n  Z1 = Z11 + Z12\n  (Y11, Z11) \\<in> multpw ns\n  \\<forall>y.\n     y \\<in># X2 \\<longrightarrow>\n     (\\<exists>z. z \\<in># Z12 + Z2 \\<and> (y, z) \\<in> s)\n  b \\<or> Z12 + Z2 \\<noteq> {#}", "show ?thesis"], ["proof (prove)\nusing this:\n  Z = Z11 + (Z12 + Z2)\n  Z1 = Z11 + Z12\n  (Y11, Z11) \\<in> multpw ns\n  \\<forall>y.\n     y \\<in># X2 \\<longrightarrow>\n     (\\<exists>z. z \\<in># Z12 + Z2 \\<and> (y, z) \\<in> s)\n  b \\<or> Z12 + Z2 \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt b' ns s", "using *(2) **(1) assms(3)"], ["proof (prove)\nusing this:\n  Z = Z11 + (Z12 + Z2)\n  Z1 = Z11 + Z12\n  (Y11, Z11) \\<in> multpw ns\n  \\<forall>y.\n     y \\<in># X2 \\<longrightarrow>\n     (\\<exists>z. z \\<in># Z12 + Z2 \\<and> (y, z) \\<in> s)\n  b \\<or> Z12 + Z2 \\<noteq> {#}\n  Z = Z1 + Z2\n  X = Y11 + X2\n  b \\<Longrightarrow> b'\n\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt b' ns s", "unfolding mult2_alt_def"], ["proof (prove)\nusing this:\n  Z = Z11 + (Z12 + Z2)\n  Z1 = Z11 + Z12\n  (Y11, Z11) \\<in> multpw ns\n  \\<forall>y.\n     y \\<in># X2 \\<longrightarrow>\n     (\\<exists>z. z \\<in># Z12 + Z2 \\<and> (y, z) \\<in> s)\n  b \\<or> Z12 + Z2 \\<noteq> {#}\n  Z = Z1 + Z2\n  X = Y11 + X2\n  b \\<Longrightarrow> b'\n\ngoal (1 subgoal):\n 1. (X, Z)\n    \\<in> {(X, Y).\n           \\<exists>X1 X2 Y1 Y2.\n              X = X1 + X2 \\<and>\n              Y = Y1 + Y2 \\<and>\n              (X1, Y1) \\<in> multpw ns \\<and>\n              (b' \\<or> Y2 \\<noteq> {#}) \\<and>\n              (\\<forall>x.\n                  x \\<in># X2 \\<longrightarrow>\n                  (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))}", "by blast"], ["proof (state)\nthis:\n  (X, Z) \\<in> mult2_alt b' ns s\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Case distinction for recursion on left argument\\<close>"], ["", "lemma mem_multiset_diff: \"x \\<in># A \\<Longrightarrow> x \\<noteq> y \\<Longrightarrow> x \\<in># (A - {#y#})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in># A; x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> x \\<in># A - {#y#}", "by (metis add_mset_remove_trivial_If diff_single_trivial insert_noteq_member)"], ["", "lemma mult2_alt_addL: \"(add_mset x X, Y) \\<in> mult2_alt b ns s \\<longleftrightarrow>\n  (\\<exists>y. y \\<in># Y \\<and> (x, y) \\<in> s \\<and> ({# x \\<in># X. (x, y) \\<notin> s #}, Y - {#y#}) \\<in> mult2_alt_ns ns s) \\<or>\n  (\\<exists>y. y \\<in># Y \\<and> (x, y) \\<in> ns \\<and> (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)\" (is \"?L \\<longleftrightarrow> ?R1 \\<or> ?R2\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((add_mset x X, Y) \\<in> mult2_alt b ns s) =\n    ((\\<exists>y.\n         y \\<in># Y \\<and>\n         (x, y) \\<in> s \\<and>\n         ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n         \\<in> mult2_alt_ns ns s) \\<or>\n     (\\<exists>y.\n         y \\<in># Y \\<and>\n         (x, y) \\<in> ns \\<and>\n         (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s))", "proof (intro iffI; (elim disjE)?)"], ["proof (state)\ngoal (3 subgoals):\n 1. (add_mset x X, Y) \\<in> mult2_alt b ns s \\<Longrightarrow>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)\n 2. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> s \\<and>\n       ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n       \\<in> mult2_alt_ns ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s\n 3. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> ns \\<and>\n       (x, y) \\<notin> s \\<and>\n       (X, Y - {#y#}) \\<in> mult2_alt b ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s", "assume ?L"], ["proof (state)\nthis:\n  (add_mset x X, Y) \\<in> mult2_alt b ns s\n\ngoal (3 subgoals):\n 1. (add_mset x X, Y) \\<in> mult2_alt b ns s \\<Longrightarrow>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)\n 2. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> s \\<and>\n       ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n       \\<in> mult2_alt_ns ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s\n 3. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> ns \\<and>\n       (x, y) \\<notin> s \\<and>\n       (X, Y - {#y#}) \\<in> mult2_alt b ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s", "then"], ["proof (chain)\npicking this:\n  (add_mset x X, Y) \\<in> mult2_alt b ns s", "obtain X1 X2 Y1 Y2 where *: \"add_mset x X = X1 + X2\" \"Y = Y1 + Y2\"\n    \"(X1, Y1) \\<in> multpw ns\" \"b \\<or> Y2 \\<noteq> {#}\" \"\\<forall>x. x \\<in># X2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\""], ["proof (prove)\nusing this:\n  (add_mset x X, Y) \\<in> mult2_alt b ns s\n\ngoal (1 subgoal):\n 1. (\\<And>X1 X2 Y1 Y2.\n        \\<lbrakk>add_mset x X = X1 + X2; Y = Y1 + Y2;\n         (X1, Y1) \\<in> multpw ns; b \\<or> Y2 \\<noteq> {#};\n         \\<forall>x.\n            x \\<in># X2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding mult2_alt_def"], ["proof (prove)\nusing this:\n  (add_mset x X, Y)\n  \\<in> {(X, Y).\n         \\<exists>X1 X2 Y1 Y2.\n            X = X1 + X2 \\<and>\n            Y = Y1 + Y2 \\<and>\n            (X1, Y1) \\<in> multpw ns \\<and>\n            (b \\<or> Y2 \\<noteq> {#}) \\<and>\n            (\\<forall>x.\n                x \\<in># X2 \\<longrightarrow>\n                (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))}\n\ngoal (1 subgoal):\n 1. (\\<And>X1 X2 Y1 Y2.\n        \\<lbrakk>add_mset x X = X1 + X2; Y = Y1 + Y2;\n         (X1, Y1) \\<in> multpw ns; b \\<or> Y2 \\<noteq> {#};\n         \\<forall>x.\n            x \\<in># X2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  add_mset x X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  b \\<or> Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (3 subgoals):\n 1. (add_mset x X, Y) \\<in> mult2_alt b ns s \\<Longrightarrow>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)\n 2. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> s \\<and>\n       ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n       \\<in> mult2_alt_ns ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s\n 3. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> ns \\<and>\n       (x, y) \\<notin> s \\<and>\n       (X, Y - {#y#}) \\<in> mult2_alt b ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s", "from union_single_eq_member[OF this(1)] multi_member_split"], ["proof (chain)\npicking this:\n  x \\<in># X1 + X2\n  ?x \\<in># ?M \\<Longrightarrow> \\<exists>A. ?M = add_mset ?x A", "consider X1' where \"X1 = add_mset x X1'\" \"x \\<in># X1\" | X2' where \"X2 = add_mset x X2'\" \"x \\<in># X2\""], ["proof (prove)\nusing this:\n  x \\<in># X1 + X2\n  ?x \\<in># ?M \\<Longrightarrow> \\<exists>A. ?M = add_mset ?x A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>X1'.\n                \\<lbrakk>X1 = add_mset x X1'; x \\<in># X1\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<And>X2'.\n        \\<lbrakk>X2 = add_mset x X2'; x \\<in># X2\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding set_mset_union Un_iff"], ["proof (prove)\nusing this:\n  x \\<in># X1 \\<or> x \\<in># X2\n  ?x \\<in># ?M \\<Longrightarrow> \\<exists>A. ?M = add_mset ?x A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>X1'.\n                \\<lbrakk>X1 = add_mset x X1'; x \\<in># X1\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<And>X2'.\n        \\<lbrakk>X2 = add_mset x X2'; x \\<in># X2\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>X1'.\n              \\<lbrakk>X1 = add_mset x X1'; x \\<in># X1\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   \\<And>X2'.\n      \\<lbrakk>X2 = add_mset x X2'; x \\<in># X2\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (3 subgoals):\n 1. (add_mset x X, Y) \\<in> mult2_alt b ns s \\<Longrightarrow>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)\n 2. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> s \\<and>\n       ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n       \\<in> mult2_alt_ns ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s\n 3. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> ns \\<and>\n       (x, y) \\<notin> s \\<and>\n       (X, Y - {#y#}) \\<in> mult2_alt b ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>X1'.\n              \\<lbrakk>X1 = add_mset x X1'; x \\<in># X1\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   \\<And>X2'.\n      \\<lbrakk>X2 = add_mset x X2'; x \\<in># X2\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"?R1 \\<or> ?R2\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>X1'.\n              \\<lbrakk>X1 = add_mset x X1'; x \\<in># X1\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   \\<And>X2'.\n      \\<lbrakk>X2 = add_mset x X2'; x \\<in># X2\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>X1'.\n       \\<lbrakk>X1 = add_mset x X1'; x \\<in># X1\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> s \\<and>\n                             ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n                             \\<in> mult2_alt_ns ns s) \\<or>\n                         (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> ns \\<and>\n                             (x, y) \\<notin> s \\<and>\n                             (X, Y - {#y#}) \\<in> mult2_alt b ns s)\n 2. \\<And>X2'.\n       \\<lbrakk>X2 = add_mset x X2'; x \\<in># X2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> s \\<and>\n                             ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n                             \\<in> mult2_alt_ns ns s) \\<or>\n                         (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> ns \\<and>\n                             (x, y) \\<notin> s \\<and>\n                             (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "case 1"], ["proof (state)\nthis:\n  X1 = add_mset x X1'\n  x \\<in># X1\n\ngoal (2 subgoals):\n 1. \\<And>X1'.\n       \\<lbrakk>X1 = add_mset x X1'; x \\<in># X1\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> s \\<and>\n                             ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n                             \\<in> mult2_alt_ns ns s) \\<or>\n                         (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> ns \\<and>\n                             (x, y) \\<notin> s \\<and>\n                             (X, Y - {#y#}) \\<in> mult2_alt b ns s)\n 2. \\<And>X2'.\n       \\<lbrakk>X2 = add_mset x X2'; x \\<in># X2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> s \\<and>\n                             ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n                             \\<in> mult2_alt_ns ns s) \\<or>\n                         (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> ns \\<and>\n                             (x, y) \\<notin> s \\<and>\n                             (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "then"], ["proof (chain)\npicking this:\n  X1 = add_mset x X1'\n  x \\<in># X1", "obtain y Y1' where **: \"y \\<in># Y1\" \"Y1 = add_mset y Y1'\" \"(X1', Y1') \\<in> multpw ns\" \"(x, y) \\<in> ns\""], ["proof (prove)\nusing this:\n  X1 = add_mset x X1'\n  x \\<in># X1\n\ngoal (1 subgoal):\n 1. (\\<And>y Y1'.\n        \\<lbrakk>y \\<in># Y1; Y1 = add_mset y Y1';\n         (X1', Y1') \\<in> multpw ns; (x, y) \\<in> ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using *"], ["proof (prove)\nusing this:\n  X1 = add_mset x X1'\n  x \\<in># X1\n  add_mset x X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  b \\<or> Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. (\\<And>y Y1'.\n        \\<lbrakk>y \\<in># Y1; Y1 = add_mset y Y1';\n         (X1', Y1') \\<in> multpw ns; (x, y) \\<in> ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: multpw_split1R)"], ["proof (state)\nthis:\n  y \\<in># Y1\n  Y1 = add_mset y Y1'\n  (X1', Y1') \\<in> multpw ns\n  (x, y) \\<in> ns\n\ngoal (2 subgoals):\n 1. \\<And>X1'.\n       \\<lbrakk>X1 = add_mset x X1'; x \\<in># X1\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> s \\<and>\n                             ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n                             \\<in> mult2_alt_ns ns s) \\<or>\n                         (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> ns \\<and>\n                             (x, y) \\<notin> s \\<and>\n                             (X, Y - {#y#}) \\<in> mult2_alt b ns s)\n 2. \\<And>X2'.\n       \\<lbrakk>X2 = add_mset x X2'; x \\<in># X2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> s \\<and>\n                             ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n                             \\<in> mult2_alt_ns ns s) \\<or>\n                         (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> ns \\<and>\n                             (x, y) \\<notin> s \\<and>\n                             (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "proof (cases \"(x, y) \\<in> s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (x, y) \\<in> s \\<Longrightarrow>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)\n 2. (x, y) \\<notin> s \\<Longrightarrow>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "case False"], ["proof (state)\nthis:\n  (x, y) \\<notin> s\n\ngoal (2 subgoals):\n 1. (x, y) \\<in> s \\<Longrightarrow>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)\n 2. (x, y) \\<notin> s \\<Longrightarrow>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<notin> s", "show ?thesis"], ["proof (prove)\nusing this:\n  (x, y) \\<notin> s\n\ngoal (1 subgoal):\n 1. (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "using mult2_altI[OF refl refl **(3) *(4,5)] *"], ["proof (prove)\nusing this:\n  (x, y) \\<notin> s\n  (X1' + X2, Y1' + Y2) \\<in> mult2_alt b ns s\n  add_mset x X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  b \\<or> Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "by (auto simp: 1 ** intro: exI[of _ y])"], ["proof (state)\nthis:\n  (\\<exists>y.\n      y \\<in># Y \\<and>\n      (x, y) \\<in> s \\<and>\n      ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n      \\<in> mult2_alt_ns ns s) \\<or>\n  (\\<exists>y.\n      y \\<in># Y \\<and>\n      (x, y) \\<in> ns \\<and>\n      (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> s \\<Longrightarrow>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (x, y) \\<in> s \\<Longrightarrow>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "case True"], ["proof (state)\nthis:\n  (x, y) \\<in> s\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> s \\<Longrightarrow>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "define X2' where \"X2' = {# x \\<in># X2. (x, y) \\<notin> s #}\""], ["proof (state)\nthis:\n  X2' = {#x \\<in># X2. (x, y) \\<notin> s#}\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> s \\<Longrightarrow>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "have x3: \"\\<forall>x. x \\<in># X2' \\<longrightarrow> (\\<exists>z. z \\<in># Y2 \\<and> (x, z) \\<in> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in># X2' \\<longrightarrow>\n       (\\<exists>z. z \\<in># Y2 \\<and> (x, z) \\<in> s)", "using *(5) **(1,2)"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n  y \\<in># Y1\n  Y1 = add_mset y Y1'\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in># X2' \\<longrightarrow>\n       (\\<exists>z. z \\<in># Y2 \\<and> (x, z) \\<in> s)", "by (auto simp: X2'_def)"], ["proof (state)\nthis:\n  \\<forall>x.\n     x \\<in># X2' \\<longrightarrow>\n     (\\<exists>z. z \\<in># Y2 \\<and> (x, z) \\<in> s)\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> s \\<Longrightarrow>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "have x4: \"{# x \\<in># X. (x, y) \\<notin> s#} \\<subseteq># X1' + X2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {#x \\<in># X. (x, y) \\<notin> s#} \\<subseteq># X1' + X2'", "using *(1) 1"], ["proof (prove)\nusing this:\n  add_mset x X = X1 + X2\n  X1 = add_mset x X1'\n  x \\<in># X1\n\ngoal (1 subgoal):\n 1. {#x \\<in># X. (x, y) \\<notin> s#} \\<subseteq># X1' + X2'", "by (auto simp: X2'_def multiset_eq_iff intro!: mset_subset_eqI split: if_splits elim!: in_countE) (metis le_refl)"], ["proof (state)\nthis:\n  {#x \\<in># X. (x, y) \\<notin> s#} \\<subseteq># X1' + X2'\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> s \\<Longrightarrow>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "using mult2_alt_nsI[OF refl refl **(3) x3, THEN subset_mult2_alt[OF x4]]\n          **(2) *(2) True"], ["proof (prove)\nusing this:\n  (True \\<Longrightarrow> ?b') \\<Longrightarrow>\n  ({#x \\<in># X. (x, y) \\<notin> s#}, Y1' + Y2) \\<in> mult2_alt ?b' ns s\n  Y1 = add_mset y Y1'\n  Y = Y1 + Y2\n  (x, y) \\<in> s\n\ngoal (1 subgoal):\n 1. (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "by (auto intro: exI[of _ y])"], ["proof (state)\nthis:\n  (\\<exists>y.\n      y \\<in># Y \\<and>\n      (x, y) \\<in> s \\<and>\n      ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n      \\<in> mult2_alt_ns ns s) \\<or>\n  (\\<exists>y.\n      y \\<in># Y \\<and>\n      (x, y) \\<in> ns \\<and>\n      (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>y.\n      y \\<in># Y \\<and>\n      (x, y) \\<in> s \\<and>\n      ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n      \\<in> mult2_alt_ns ns s) \\<or>\n  (\\<exists>y.\n      y \\<in># Y \\<and>\n      (x, y) \\<in> ns \\<and>\n      (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)\n\ngoal (1 subgoal):\n 1. \\<And>X2'.\n       \\<lbrakk>X2 = add_mset x X2'; x \\<in># X2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> s \\<and>\n                             ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n                             \\<in> mult2_alt_ns ns s) \\<or>\n                         (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> ns \\<and>\n                             (x, y) \\<notin> s \\<and>\n                             (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X2'.\n       \\<lbrakk>X2 = add_mset x X2'; x \\<in># X2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> s \\<and>\n                             ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n                             \\<in> mult2_alt_ns ns s) \\<or>\n                         (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> ns \\<and>\n                             (x, y) \\<notin> s \\<and>\n                             (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "case 2"], ["proof (state)\nthis:\n  X2 = add_mset x X2'\n  x \\<in># X2\n\ngoal (1 subgoal):\n 1. \\<And>X2'.\n       \\<lbrakk>X2 = add_mset x X2'; x \\<in># X2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> s \\<and>\n                             ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n                             \\<in> mult2_alt_ns ns s) \\<or>\n                         (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> ns \\<and>\n                             (x, y) \\<notin> s \\<and>\n                             (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "then"], ["proof (chain)\npicking this:\n  X2 = add_mset x X2'\n  x \\<in># X2", "obtain y where **: \"y \\<in># Y2\" \"(x, y) \\<in> s\""], ["proof (prove)\nusing this:\n  X2 = add_mset x X2'\n  x \\<in># X2\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in># Y2; (x, y) \\<in> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using *"], ["proof (prove)\nusing this:\n  X2 = add_mset x X2'\n  x \\<in># X2\n  add_mset x X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  b \\<or> Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in># Y2; (x, y) \\<in> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  y \\<in># Y2\n  (x, y) \\<in> s\n\ngoal (1 subgoal):\n 1. \\<And>X2'.\n       \\<lbrakk>X2 = add_mset x X2'; x \\<in># X2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> s \\<and>\n                             ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n                             \\<in> mult2_alt_ns ns s) \\<or>\n                         (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> ns \\<and>\n                             (x, y) \\<notin> s \\<and>\n                             (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "define X2' where \"X2' = {# x \\<in># X2. (x, y) \\<notin> s #}\""], ["proof (state)\nthis:\n  X2' = {#x \\<in># X2. (x, y) \\<notin> s#}\n\ngoal (1 subgoal):\n 1. \\<And>X2'.\n       \\<lbrakk>X2 = add_mset x X2'; x \\<in># X2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> s \\<and>\n                             ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n                             \\<in> mult2_alt_ns ns s) \\<or>\n                         (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> ns \\<and>\n                             (x, y) \\<notin> s \\<and>\n                             (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "have x3: \"\\<forall>x. x \\<in># X2' \\<longrightarrow> (\\<exists>z. z \\<in># Y2 - {#y#} \\<and> (x, z) \\<in> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in># X2' \\<longrightarrow>\n       (\\<exists>z. z \\<in># Y2 - {#y#} \\<and> (x, z) \\<in> s)", "using *(5) **(1,2)"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n  y \\<in># Y2\n  (x, y) \\<in> s\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in># X2' \\<longrightarrow>\n       (\\<exists>z. z \\<in># Y2 - {#y#} \\<and> (x, z) \\<in> s)", "by (auto simp: X2'_def) (metis mem_multiset_diff)"], ["proof (state)\nthis:\n  \\<forall>x.\n     x \\<in># X2' \\<longrightarrow>\n     (\\<exists>z. z \\<in># Y2 - {#y#} \\<and> (x, z) \\<in> s)\n\ngoal (1 subgoal):\n 1. \\<And>X2'.\n       \\<lbrakk>X2 = add_mset x X2'; x \\<in># X2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> s \\<and>\n                             ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n                             \\<in> mult2_alt_ns ns s) \\<or>\n                         (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> ns \\<and>\n                             (x, y) \\<notin> s \\<and>\n                             (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "have x4: \"{# x \\<in># X. (x, y) \\<notin> s#} \\<subseteq># X1 + X2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {#x \\<in># X. (x, y) \\<notin> s#} \\<subseteq># X1 + X2'", "using *(1) **(2)"], ["proof (prove)\nusing this:\n  add_mset x X = X1 + X2\n  (x, y) \\<in> s\n\ngoal (1 subgoal):\n 1. {#x \\<in># X. (x, y) \\<notin> s#} \\<subseteq># X1 + X2'", "by (auto simp: X2'_def multiset_eq_iff intro!: mset_subset_eqI split: if_splits)"], ["proof (state)\nthis:\n  {#x \\<in># X. (x, y) \\<notin> s#} \\<subseteq># X1 + X2'\n\ngoal (1 subgoal):\n 1. \\<And>X2'.\n       \\<lbrakk>X2 = add_mset x X2'; x \\<in># X2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> s \\<and>\n                             ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n                             \\<in> mult2_alt_ns ns s) \\<or>\n                         (\\<exists>y.\n                             y \\<in># Y \\<and>\n                             (x, y) \\<in> ns \\<and>\n                             (x, y) \\<notin> s \\<and>\n                             (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "using mult2_alt_nsI[OF refl refl *(3) x3, THEN subset_mult2_alt[OF x4], of True] **(1,2) *(2)"], ["proof (prove)\nusing this:\n  (True \\<Longrightarrow> True) \\<Longrightarrow>\n  ({#x \\<in># X. (x, y) \\<notin> s#}, Y1 + (Y2 - {#y#}))\n  \\<in> mult2_alt_ns ns s\n  y \\<in># Y2\n  (x, y) \\<in> s\n  Y = Y1 + Y2\n\ngoal (1 subgoal):\n 1. (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> s \\<and>\n        ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n        \\<in> mult2_alt_ns ns s) \\<or>\n    (\\<exists>y.\n        y \\<in># Y \\<and>\n        (x, y) \\<in> ns \\<and>\n        (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)", "by (auto simp: diff_union_single_conv[symmetric])"], ["proof (state)\nthis:\n  (\\<exists>y.\n      y \\<in># Y \\<and>\n      (x, y) \\<in> s \\<and>\n      ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n      \\<in> mult2_alt_ns ns s) \\<or>\n  (\\<exists>y.\n      y \\<in># Y \\<and>\n      (x, y) \\<in> ns \\<and>\n      (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>y.\n      y \\<in># Y \\<and>\n      (x, y) \\<in> s \\<and>\n      ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n      \\<in> mult2_alt_ns ns s) \\<or>\n  (\\<exists>y.\n      y \\<in># Y \\<and>\n      (x, y) \\<in> ns \\<and>\n      (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s)\n\ngoal (2 subgoals):\n 1. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> s \\<and>\n       ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n       \\<in> mult2_alt_ns ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s\n 2. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> ns \\<and>\n       (x, y) \\<notin> s \\<and>\n       (X, Y - {#y#}) \\<in> mult2_alt b ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> s \\<and>\n       ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n       \\<in> mult2_alt_ns ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s\n 2. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> ns \\<and>\n       (x, y) \\<notin> s \\<and>\n       (X, Y - {#y#}) \\<in> mult2_alt b ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s", "assume ?R1"], ["proof (state)\nthis:\n  \\<exists>y.\n     y \\<in># Y \\<and>\n     (x, y) \\<in> s \\<and>\n     ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#}) \\<in> mult2_alt_ns ns s\n\ngoal (2 subgoals):\n 1. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> s \\<and>\n       ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n       \\<in> mult2_alt_ns ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s\n 2. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> ns \\<and>\n       (x, y) \\<notin> s \\<and>\n       (X, Y - {#y#}) \\<in> mult2_alt b ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s", "then"], ["proof (chain)\npicking this:\n  \\<exists>y.\n     y \\<in># Y \\<and>\n     (x, y) \\<in> s \\<and>\n     ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#}) \\<in> mult2_alt_ns ns s", "obtain y where *: \"y \\<in># Y\" \"(x, y) \\<in> s\" \"({# x \\<in># X. (x, y) \\<notin> s #}, Y - {#y#}) \\<in> mult2_alt_ns ns s\""], ["proof (prove)\nusing this:\n  \\<exists>y.\n     y \\<in># Y \\<and>\n     (x, y) \\<in> s \\<and>\n     ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#}) \\<in> mult2_alt_ns ns s\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in># Y; (x, y) \\<in> s;\n         ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n         \\<in> mult2_alt_ns ns s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  y \\<in># Y\n  (x, y) \\<in> s\n  ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#}) \\<in> mult2_alt_ns ns s\n\ngoal (2 subgoals):\n 1. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> s \\<and>\n       ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n       \\<in> mult2_alt_ns ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s\n 2. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> ns \\<and>\n       (x, y) \\<notin> s \\<and>\n       (X, Y - {#y#}) \\<in> mult2_alt b ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s", "then"], ["proof (chain)\npicking this:\n  y \\<in># Y\n  (x, y) \\<in> s\n  ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#}) \\<in> mult2_alt_ns ns s", "have **: \"({# x \\<in># X. (x, y) \\<in> s #} + {#x#}, {#y#}) \\<in> mult2_alt b ns s\"\n    \"{# x \\<in># X. (x, y) \\<notin> s #} + {# x \\<in># X. (x, y) \\<in> s #} = X\""], ["proof (prove)\nusing this:\n  y \\<in># Y\n  (x, y) \\<in> s\n  ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#}) \\<in> mult2_alt_ns ns s\n\ngoal (1 subgoal):\n 1. ({#x \\<in># X. (x, y) \\<in> s#} + {#x#}, {#y#})\n    \\<in> mult2_alt b ns s &&&\n    {#x \\<in># X. (x, y) \\<notin> s#} + {#x \\<in># X. (x, y) \\<in> s#} = X", "by (auto intro: mult2_altI[of _ \"{#}\" _ _ \"{#}\"] multiset_eqI split: if_splits)"], ["proof (state)\nthis:\n  ({#x \\<in># X. (x, y) \\<in> s#} + {#x#}, {#y#}) \\<in> mult2_alt b ns s\n  {#x \\<in># X. (x, y) \\<notin> s#} + {#x \\<in># X. (x, y) \\<in> s#} = X\n\ngoal (2 subgoals):\n 1. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> s \\<and>\n       ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#})\n       \\<in> mult2_alt_ns ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s\n 2. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> ns \\<and>\n       (x, y) \\<notin> s \\<and>\n       (X, Y - {#y#}) \\<in> mult2_alt b ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s", "show ?L"], ["proof (prove)\ngoal (1 subgoal):\n 1. (add_mset x X, Y) \\<in> mult2_alt b ns s", "using mult2_alt_add[OF *(3) **(1)] * **"], ["proof (prove)\nusing this:\n  ({#x \\<in># X. (x, y) \\<notin> s#} +\n   ({#x \\<in># X. (x, y) \\<in> s#} + {#x#}),\n   Y - {#y#} + {#y#})\n  \\<in> mult2_alt (True \\<and> b) ns s\n  y \\<in># Y\n  (x, y) \\<in> s\n  ({#x \\<in># X. (x, y) \\<notin> s#}, Y - {#y#}) \\<in> mult2_alt_ns ns s\n  ({#x \\<in># X. (x, y) \\<in> s#} + {#x#}, {#y#}) \\<in> mult2_alt b ns s\n  {#x \\<in># X. (x, y) \\<notin> s#} + {#x \\<in># X. (x, y) \\<in> s#} = X\n\ngoal (1 subgoal):\n 1. (add_mset x X, Y) \\<in> mult2_alt b ns s", "by (auto simp: union_assoc[symmetric])"], ["proof (state)\nthis:\n  (add_mset x X, Y) \\<in> mult2_alt b ns s\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> ns \\<and>\n       (x, y) \\<notin> s \\<and>\n       (X, Y - {#y#}) \\<in> mult2_alt b ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> ns \\<and>\n       (x, y) \\<notin> s \\<and>\n       (X, Y - {#y#}) \\<in> mult2_alt b ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s", "assume ?R2"], ["proof (state)\nthis:\n  \\<exists>y.\n     y \\<in># Y \\<and>\n     (x, y) \\<in> ns \\<and>\n     (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> ns \\<and>\n       (x, y) \\<notin> s \\<and>\n       (X, Y - {#y#}) \\<in> mult2_alt b ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s", "then"], ["proof (chain)\npicking this:\n  \\<exists>y.\n     y \\<in># Y \\<and>\n     (x, y) \\<in> ns \\<and>\n     (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s", "obtain y where *: \"y \\<in># Y\" \"(x, y) \\<in> ns\" \"(X, Y - {#y#}) \\<in> mult2_alt b ns s\""], ["proof (prove)\nusing this:\n  \\<exists>y.\n     y \\<in># Y \\<and>\n     (x, y) \\<in> ns \\<and>\n     (x, y) \\<notin> s \\<and> (X, Y - {#y#}) \\<in> mult2_alt b ns s\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in># Y; (x, y) \\<in> ns;\n         (X, Y - {#y#}) \\<in> mult2_alt b ns s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  y \\<in># Y\n  (x, y) \\<in> ns\n  (X, Y - {#y#}) \\<in> mult2_alt b ns s\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in># Y \\<and>\n       (x, y) \\<in> ns \\<and>\n       (x, y) \\<notin> s \\<and>\n       (X, Y - {#y#}) \\<in> mult2_alt b ns s \\<Longrightarrow>\n    (add_mset x X, Y) \\<in> mult2_alt b ns s", "then"], ["proof (chain)\npicking this:\n  y \\<in># Y\n  (x, y) \\<in> ns\n  (X, Y - {#y#}) \\<in> mult2_alt b ns s", "show ?L"], ["proof (prove)\nusing this:\n  y \\<in># Y\n  (x, y) \\<in> ns\n  (X, Y - {#y#}) \\<in> mult2_alt b ns s\n\ngoal (1 subgoal):\n 1. (add_mset x X, Y) \\<in> mult2_alt b ns s", "using mult2_alt_add[OF *(3) multpw_implies_mult2_alt_ns, of \"{#x#}\" \"{#y#}\"]"], ["proof (prove)\nusing this:\n  y \\<in># Y\n  (x, y) \\<in> ns\n  (X, Y - {#y#}) \\<in> mult2_alt b ns s\n  ({#x#}, {#y#}) \\<in> multpw ns \\<Longrightarrow>\n  (X + {#x#}, Y - {#y#} + {#y#}) \\<in> mult2_alt (b \\<and> True) ns s\n\ngoal (1 subgoal):\n 1. (add_mset x X, Y) \\<in> mult2_alt b ns s", "by (auto intro: multpw_single)"], ["proof (state)\nthis:\n  (add_mset x X, Y) \\<in> mult2_alt b ns s\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Auxiliary version with an extra @{typ bool} argument for distinguishing between the\n  non-strict and the strict orders\\<close>"], ["", "context fixes nss :: \"'a \\<Rightarrow> 'a \\<Rightarrow> bool \\<Rightarrow> bool\"\nbegin"], ["", "fun mult2_impl0 :: \"'a list \\<Rightarrow> 'a list \\<Rightarrow> bool \\<Rightarrow> bool\"\n  and mult2_ex_dom0 :: \"'a \\<Rightarrow> 'a list \\<Rightarrow> 'a list \\<Rightarrow> 'a list \\<Rightarrow> bool \\<Rightarrow> bool\"\n  where\n    \"mult2_impl0 []       [] b \\<longleftrightarrow> b\"\n  | \"mult2_impl0 xs       [] b \\<longleftrightarrow> False\"\n  | \"mult2_impl0 []       ys b \\<longleftrightarrow> True\"\n  | \"mult2_impl0 (x # xs) ys b \\<longleftrightarrow> mult2_ex_dom0 x xs ys [] b\"\n\n| \"mult2_ex_dom0 x xs []       ys' b \\<longleftrightarrow> False\"\n| \"mult2_ex_dom0 x xs (y # ys) ys' b \\<longleftrightarrow>\n     nss x y False \\<and> mult2_impl0 (filter (\\<lambda>x. \\<not> nss x y False) xs) (ys @ ys') True \\<or>\n     nss x y True \\<and> \\<not> nss x y False \\<and> mult2_impl0 xs (ys @ ys') b \\<or>\n     mult2_ex_dom0 x xs ys (y # ys') b\""], ["", "end"], ["", "lemma mult2_impl0_sound:\n  fixes nss\n  defines \"ns \\<equiv> {(x, y). nss x y True}\" and \"s \\<equiv> {(x, y). nss x y False}\"\n  shows \"mult2_impl0 nss xs ys b \\<longleftrightarrow> (mset xs, mset ys) \\<in> mult2_alt b ns s\"\n    \"mult2_ex_dom0 nss x xs ys ys' b \\<longleftrightarrow>\n      (\\<exists>y. y \\<in># mset ys \\<and> (x, y) \\<in> s \\<and> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs), mset (ys @ ys') - {#y#}) \\<in> mult2_alt True ns s) \\<or>\n      (\\<exists>y. y \\<in># mset ys \\<and> (x, y) \\<in> ns \\<and> (x, y) \\<notin> s \\<and> (mset xs, mset (ys @ ys') - {#y#}) \\<in> mult2_alt b ns s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult2_impl0 nss xs ys b =\n    ((mset xs, mset ys) \\<in> mult2_alt b ns s) &&&\n    mult2_ex_dom0 nss x xs ys ys' b =\n    ((\\<exists>y.\n         y \\<in># mset ys \\<and>\n         (x, y) \\<in> s \\<and>\n         (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n          mset (ys @ ys') - {#y#})\n         \\<in> mult2_alt_ns ns s) \\<or>\n     (\\<exists>y.\n         y \\<in># mset ys \\<and>\n         (x, y) \\<in> ns \\<and>\n         (x, y) \\<notin> s \\<and>\n         (mset xs, mset (ys @ ys') - {#y#}) \\<in> mult2_alt b ns s))", "proof (induct xs ys b and x xs ys ys' b taking: nss rule: mult2_impl0_mult2_ex_dom0.induct)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>b.\n       mult2_impl0 nss [] [] b = ((mset [], mset []) \\<in> mult2_alt b ns s)\n 2. \\<And>v va b.\n       mult2_impl0 nss (v # va) [] b =\n       ((mset (v # va), mset []) \\<in> mult2_alt b ns s)\n 3. \\<And>v va b.\n       mult2_impl0 nss [] (v # va) b =\n       ((mset [], mset (v # va)) \\<in> mult2_alt b ns s)\n 4. \\<And>x xs v va b.\n       mult2_ex_dom0 nss x xs (v # va) [] b =\n       ((\\<exists>y.\n            y \\<in># mset (v # va) \\<and>\n            (x, y) \\<in> s \\<and>\n            (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n             mset ((v # va) @ []) - {#y#})\n            \\<in> mult2_alt_ns ns s) \\<or>\n        (\\<exists>y.\n            y \\<in># mset (v # va) \\<and>\n            (x, y) \\<in> ns \\<and>\n            (x, y) \\<notin> s \\<and>\n            (mset xs, mset ((v # va) @ []) - {#y#})\n            \\<in> mult2_alt b ns s)) \\<Longrightarrow>\n       mult2_impl0 nss (x # xs) (v # va) b =\n       ((mset (x # xs), mset (v # va)) \\<in> mult2_alt b ns s)\n 5. \\<And>x xs ys' b.\n       mult2_ex_dom0 nss x xs [] ys' b =\n       ((\\<exists>y.\n            y \\<in># mset [] \\<and>\n            (x, y) \\<in> s \\<and>\n            (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n             mset ([] @ ys') - {#y#})\n            \\<in> mult2_alt_ns ns s) \\<or>\n        (\\<exists>y.\n            y \\<in># mset [] \\<and>\n            (x, y) \\<in> ns \\<and>\n            (x, y) \\<notin> s \\<and>\n            (mset xs, mset ([] @ ys') - {#y#}) \\<in> mult2_alt b ns s))\n 6. \\<And>x xs y ys ys' b.\n       \\<lbrakk>mult2_impl0 nss\n                 (filter (\\<lambda>x. \\<not> nss x y False) xs) (ys @ ys')\n                 True =\n                ((mset (filter (\\<lambda>x. \\<not> nss x y False) xs),\n                  mset (ys @ ys'))\n                 \\<in> mult2_alt_ns ns s);\n        mult2_impl0 nss xs (ys @ ys') b =\n        ((mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s);\n        mult2_ex_dom0 nss x xs ys (y # ys') b =\n        ((\\<exists>ya.\n             ya \\<in># mset ys \\<and>\n             (x, ya) \\<in> s \\<and>\n             (mset (filter (\\<lambda>x. (x, ya) \\<notin> s) xs),\n              mset (ys @ y # ys') - {#ya#})\n             \\<in> mult2_alt_ns ns s) \\<or>\n         (\\<exists>ya.\n             ya \\<in># mset ys \\<and>\n             (x, ya) \\<in> ns \\<and>\n             (x, ya) \\<notin> s \\<and>\n             (mset xs, mset (ys @ y # ys') - {#ya#})\n             \\<in> mult2_alt b ns s))\\<rbrakk>\n       \\<Longrightarrow> mult2_ex_dom0 nss x xs (y # ys) ys' b =\n                         ((\\<exists>ya.\n                              ya \\<in># mset (y # ys) \\<and>\n                              (x, ya) \\<in> s \\<and>\n                              (mset\n                                (filter (\\<lambda>x. (x, ya) \\<notin> s)\n                                  xs),\n                               mset ((y # ys) @ ys') - {#ya#})\n                              \\<in> mult2_alt_ns ns s) \\<or>\n                          (\\<exists>ya.\n                              ya \\<in># mset (y # ys) \\<and>\n                              (x, ya) \\<in> ns \\<and>\n                              (x, ya) \\<notin> s \\<and>\n                              (mset xs, mset ((y # ys) @ ys') - {#ya#})\n                              \\<in> mult2_alt b ns s))", "case (4 x xs y ys b)"], ["proof (state)\nthis:\n  mult2_ex_dom0 nss x xs (y # ys) [] b =\n  ((\\<exists>ya.\n       ya \\<in># mset (y # ys) \\<and>\n       (x, ya) \\<in> s \\<and>\n       (mset (filter (\\<lambda>x. (x, ya) \\<notin> s) xs),\n        mset ((y # ys) @ []) - {#ya#})\n       \\<in> mult2_alt_ns ns s) \\<or>\n   (\\<exists>ya.\n       ya \\<in># mset (y # ys) \\<and>\n       (x, ya) \\<in> ns \\<and>\n       (x, ya) \\<notin> s \\<and>\n       (mset xs, mset ((y # ys) @ []) - {#ya#}) \\<in> mult2_alt b ns s))\n\ngoal (6 subgoals):\n 1. \\<And>b.\n       mult2_impl0 nss [] [] b = ((mset [], mset []) \\<in> mult2_alt b ns s)\n 2. \\<And>v va b.\n       mult2_impl0 nss (v # va) [] b =\n       ((mset (v # va), mset []) \\<in> mult2_alt b ns s)\n 3. \\<And>v va b.\n       mult2_impl0 nss [] (v # va) b =\n       ((mset [], mset (v # va)) \\<in> mult2_alt b ns s)\n 4. \\<And>x xs v va b.\n       mult2_ex_dom0 nss x xs (v # va) [] b =\n       ((\\<exists>y.\n            y \\<in># mset (v # va) \\<and>\n            (x, y) \\<in> s \\<and>\n            (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n             mset ((v # va) @ []) - {#y#})\n            \\<in> mult2_alt_ns ns s) \\<or>\n        (\\<exists>y.\n            y \\<in># mset (v # va) \\<and>\n            (x, y) \\<in> ns \\<and>\n            (x, y) \\<notin> s \\<and>\n            (mset xs, mset ((v # va) @ []) - {#y#})\n            \\<in> mult2_alt b ns s)) \\<Longrightarrow>\n       mult2_impl0 nss (x # xs) (v # va) b =\n       ((mset (x # xs), mset (v # va)) \\<in> mult2_alt b ns s)\n 5. \\<And>x xs ys' b.\n       mult2_ex_dom0 nss x xs [] ys' b =\n       ((\\<exists>y.\n            y \\<in># mset [] \\<and>\n            (x, y) \\<in> s \\<and>\n            (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n             mset ([] @ ys') - {#y#})\n            \\<in> mult2_alt_ns ns s) \\<or>\n        (\\<exists>y.\n            y \\<in># mset [] \\<and>\n            (x, y) \\<in> ns \\<and>\n            (x, y) \\<notin> s \\<and>\n            (mset xs, mset ([] @ ys') - {#y#}) \\<in> mult2_alt b ns s))\n 6. \\<And>x xs y ys ys' b.\n       \\<lbrakk>mult2_impl0 nss\n                 (filter (\\<lambda>x. \\<not> nss x y False) xs) (ys @ ys')\n                 True =\n                ((mset (filter (\\<lambda>x. \\<not> nss x y False) xs),\n                  mset (ys @ ys'))\n                 \\<in> mult2_alt_ns ns s);\n        mult2_impl0 nss xs (ys @ ys') b =\n        ((mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s);\n        mult2_ex_dom0 nss x xs ys (y # ys') b =\n        ((\\<exists>ya.\n             ya \\<in># mset ys \\<and>\n             (x, ya) \\<in> s \\<and>\n             (mset (filter (\\<lambda>x. (x, ya) \\<notin> s) xs),\n              mset (ys @ y # ys') - {#ya#})\n             \\<in> mult2_alt_ns ns s) \\<or>\n         (\\<exists>ya.\n             ya \\<in># mset ys \\<and>\n             (x, ya) \\<in> ns \\<and>\n             (x, ya) \\<notin> s \\<and>\n             (mset xs, mset (ys @ y # ys') - {#ya#})\n             \\<in> mult2_alt b ns s))\\<rbrakk>\n       \\<Longrightarrow> mult2_ex_dom0 nss x xs (y # ys) ys' b =\n                         ((\\<exists>ya.\n                              ya \\<in># mset (y # ys) \\<and>\n                              (x, ya) \\<in> s \\<and>\n                              (mset\n                                (filter (\\<lambda>x. (x, ya) \\<notin> s)\n                                  xs),\n                               mset ((y # ys) @ ys') - {#ya#})\n                              \\<in> mult2_alt_ns ns s) \\<or>\n                          (\\<exists>ya.\n                              ya \\<in># mset (y # ys) \\<and>\n                              (x, ya) \\<in> ns \\<and>\n                              (x, ya) \\<notin> s \\<and>\n                              (mset xs, mset ((y # ys) @ ys') - {#ya#})\n                              \\<in> mult2_alt b ns s))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. mult2_impl0 nss (x # xs) (y # ys) b =\n    ((mset (x # xs), mset (y # ys)) \\<in> mult2_alt b ns s)", "unfolding mult2_impl0.simps 4"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<exists>ya.\n         ya \\<in># mset (y # ys) \\<and>\n         (x, ya) \\<in> s \\<and>\n         (mset (filter (\\<lambda>x. (x, ya) \\<notin> s) xs),\n          mset ((y # ys) @ []) - {#ya#})\n         \\<in> mult2_alt_ns ns s) \\<or>\n     (\\<exists>ya.\n         ya \\<in># mset (y # ys) \\<and>\n         (x, ya) \\<in> ns \\<and>\n         (x, ya) \\<notin> s \\<and>\n         (mset xs, mset ((y # ys) @ []) - {#ya#}) \\<in> mult2_alt b ns s)) =\n    ((mset (x # xs), mset (y # ys)) \\<in> mult2_alt b ns s)", "using mult2_alt_addL[of x \"mset xs\" \"mset (y # ys)\" b ns s]"], ["proof (prove)\nusing this:\n  ((add_mset x (mset xs), mset (y # ys)) \\<in> mult2_alt b ns s) =\n  ((\\<exists>ya.\n       ya \\<in># mset (y # ys) \\<and>\n       (x, ya) \\<in> s \\<and>\n       ({#x \\<in># mset xs. (x, ya) \\<notin> s#}, mset (y # ys) - {#ya#})\n       \\<in> mult2_alt_ns ns s) \\<or>\n   (\\<exists>ya.\n       ya \\<in># mset (y # ys) \\<and>\n       (x, ya) \\<in> ns \\<and>\n       (x, ya) \\<notin> s \\<and>\n       (mset xs, mset (y # ys) - {#ya#}) \\<in> mult2_alt b ns s))\n\ngoal (1 subgoal):\n 1. ((\\<exists>ya.\n         ya \\<in># mset (y # ys) \\<and>\n         (x, ya) \\<in> s \\<and>\n         (mset (filter (\\<lambda>x. (x, ya) \\<notin> s) xs),\n          mset ((y # ys) @ []) - {#ya#})\n         \\<in> mult2_alt_ns ns s) \\<or>\n     (\\<exists>ya.\n         ya \\<in># mset (y # ys) \\<and>\n         (x, ya) \\<in> ns \\<and>\n         (x, ya) \\<notin> s \\<and>\n         (mset xs, mset ((y # ys) @ []) - {#ya#}) \\<in> mult2_alt b ns s)) =\n    ((mset (x # xs), mset (y # ys)) \\<in> mult2_alt b ns s)", "by (simp add: mset_filter)"], ["proof (state)\nthis:\n  mult2_impl0 nss (x # xs) (y # ys) b =\n  ((mset (x # xs), mset (y # ys)) \\<in> mult2_alt b ns s)\n\ngoal (5 subgoals):\n 1. \\<And>b.\n       mult2_impl0 nss [] [] b = ((mset [], mset []) \\<in> mult2_alt b ns s)\n 2. \\<And>v va b.\n       mult2_impl0 nss (v # va) [] b =\n       ((mset (v # va), mset []) \\<in> mult2_alt b ns s)\n 3. \\<And>v va b.\n       mult2_impl0 nss [] (v # va) b =\n       ((mset [], mset (v # va)) \\<in> mult2_alt b ns s)\n 4. \\<And>x xs ys' b.\n       mult2_ex_dom0 nss x xs [] ys' b =\n       ((\\<exists>y.\n            y \\<in># mset [] \\<and>\n            (x, y) \\<in> s \\<and>\n            (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n             mset ([] @ ys') - {#y#})\n            \\<in> mult2_alt_ns ns s) \\<or>\n        (\\<exists>y.\n            y \\<in># mset [] \\<and>\n            (x, y) \\<in> ns \\<and>\n            (x, y) \\<notin> s \\<and>\n            (mset xs, mset ([] @ ys') - {#y#}) \\<in> mult2_alt b ns s))\n 5. \\<And>x xs y ys ys' b.\n       \\<lbrakk>mult2_impl0 nss\n                 (filter (\\<lambda>x. \\<not> nss x y False) xs) (ys @ ys')\n                 True =\n                ((mset (filter (\\<lambda>x. \\<not> nss x y False) xs),\n                  mset (ys @ ys'))\n                 \\<in> mult2_alt_ns ns s);\n        mult2_impl0 nss xs (ys @ ys') b =\n        ((mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s);\n        mult2_ex_dom0 nss x xs ys (y # ys') b =\n        ((\\<exists>ya.\n             ya \\<in># mset ys \\<and>\n             (x, ya) \\<in> s \\<and>\n             (mset (filter (\\<lambda>x. (x, ya) \\<notin> s) xs),\n              mset (ys @ y # ys') - {#ya#})\n             \\<in> mult2_alt_ns ns s) \\<or>\n         (\\<exists>ya.\n             ya \\<in># mset ys \\<and>\n             (x, ya) \\<in> ns \\<and>\n             (x, ya) \\<notin> s \\<and>\n             (mset xs, mset (ys @ y # ys') - {#ya#})\n             \\<in> mult2_alt b ns s))\\<rbrakk>\n       \\<Longrightarrow> mult2_ex_dom0 nss x xs (y # ys) ys' b =\n                         ((\\<exists>ya.\n                              ya \\<in># mset (y # ys) \\<and>\n                              (x, ya) \\<in> s \\<and>\n                              (mset\n                                (filter (\\<lambda>x. (x, ya) \\<notin> s)\n                                  xs),\n                               mset ((y # ys) @ ys') - {#ya#})\n                              \\<in> mult2_alt_ns ns s) \\<or>\n                          (\\<exists>ya.\n                              ya \\<in># mset (y # ys) \\<and>\n                              (x, ya) \\<in> ns \\<and>\n                              (x, ya) \\<notin> s \\<and>\n                              (mset xs, mset ((y # ys) @ ys') - {#ya#})\n                              \\<in> mult2_alt b ns s))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>b.\n       mult2_impl0 nss [] [] b = ((mset [], mset []) \\<in> mult2_alt b ns s)\n 2. \\<And>v va b.\n       mult2_impl0 nss (v # va) [] b =\n       ((mset (v # va), mset []) \\<in> mult2_alt b ns s)\n 3. \\<And>v va b.\n       mult2_impl0 nss [] (v # va) b =\n       ((mset [], mset (v # va)) \\<in> mult2_alt b ns s)\n 4. \\<And>x xs ys' b.\n       mult2_ex_dom0 nss x xs [] ys' b =\n       ((\\<exists>y.\n            y \\<in># mset [] \\<and>\n            (x, y) \\<in> s \\<and>\n            (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n             mset ([] @ ys') - {#y#})\n            \\<in> mult2_alt_ns ns s) \\<or>\n        (\\<exists>y.\n            y \\<in># mset [] \\<and>\n            (x, y) \\<in> ns \\<and>\n            (x, y) \\<notin> s \\<and>\n            (mset xs, mset ([] @ ys') - {#y#}) \\<in> mult2_alt b ns s))\n 5. \\<And>x xs y ys ys' b.\n       \\<lbrakk>mult2_impl0 nss\n                 (filter (\\<lambda>x. \\<not> nss x y False) xs) (ys @ ys')\n                 True =\n                ((mset (filter (\\<lambda>x. \\<not> nss x y False) xs),\n                  mset (ys @ ys'))\n                 \\<in> mult2_alt_ns ns s);\n        mult2_impl0 nss xs (ys @ ys') b =\n        ((mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s);\n        mult2_ex_dom0 nss x xs ys (y # ys') b =\n        ((\\<exists>ya.\n             ya \\<in># mset ys \\<and>\n             (x, ya) \\<in> s \\<and>\n             (mset (filter (\\<lambda>x. (x, ya) \\<notin> s) xs),\n              mset (ys @ y # ys') - {#ya#})\n             \\<in> mult2_alt_ns ns s) \\<or>\n         (\\<exists>ya.\n             ya \\<in># mset ys \\<and>\n             (x, ya) \\<in> ns \\<and>\n             (x, ya) \\<notin> s \\<and>\n             (mset xs, mset (ys @ y # ys') - {#ya#})\n             \\<in> mult2_alt b ns s))\\<rbrakk>\n       \\<Longrightarrow> mult2_ex_dom0 nss x xs (y # ys) ys' b =\n                         ((\\<exists>ya.\n                              ya \\<in># mset (y # ys) \\<and>\n                              (x, ya) \\<in> s \\<and>\n                              (mset\n                                (filter (\\<lambda>x. (x, ya) \\<notin> s)\n                                  xs),\n                               mset ((y # ys) @ ys') - {#ya#})\n                              \\<in> mult2_alt_ns ns s) \\<or>\n                          (\\<exists>ya.\n                              ya \\<in># mset (y # ys) \\<and>\n                              (x, ya) \\<in> ns \\<and>\n                              (x, ya) \\<notin> s \\<and>\n                              (mset xs, mset ((y # ys) @ ys') - {#ya#})\n                              \\<in> mult2_alt b ns s))", "case (6 x xs y ys ys' b)"], ["proof (state)\nthis:\n  mult2_impl0 nss (filter (\\<lambda>x. \\<not> nss x y False) xs) (ys @ ys')\n   True =\n  ((mset (filter (\\<lambda>x. \\<not> nss x y False) xs), mset (ys @ ys'))\n   \\<in> mult2_alt_ns ns s)\n  mult2_impl0 nss xs (ys @ ys') b =\n  ((mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s)\n  mult2_ex_dom0 nss x xs ys (y # ys') b =\n  ((\\<exists>ya.\n       ya \\<in># mset ys \\<and>\n       (x, ya) \\<in> s \\<and>\n       (mset (filter (\\<lambda>x. (x, ya) \\<notin> s) xs),\n        mset (ys @ y # ys') - {#ya#})\n       \\<in> mult2_alt_ns ns s) \\<or>\n   (\\<exists>ya.\n       ya \\<in># mset ys \\<and>\n       (x, ya) \\<in> ns \\<and>\n       (x, ya) \\<notin> s \\<and>\n       (mset xs, mset (ys @ y # ys') - {#ya#}) \\<in> mult2_alt b ns s))\n\ngoal (5 subgoals):\n 1. \\<And>b.\n       mult2_impl0 nss [] [] b = ((mset [], mset []) \\<in> mult2_alt b ns s)\n 2. \\<And>v va b.\n       mult2_impl0 nss (v # va) [] b =\n       ((mset (v # va), mset []) \\<in> mult2_alt b ns s)\n 3. \\<And>v va b.\n       mult2_impl0 nss [] (v # va) b =\n       ((mset [], mset (v # va)) \\<in> mult2_alt b ns s)\n 4. \\<And>x xs ys' b.\n       mult2_ex_dom0 nss x xs [] ys' b =\n       ((\\<exists>y.\n            y \\<in># mset [] \\<and>\n            (x, y) \\<in> s \\<and>\n            (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n             mset ([] @ ys') - {#y#})\n            \\<in> mult2_alt_ns ns s) \\<or>\n        (\\<exists>y.\n            y \\<in># mset [] \\<and>\n            (x, y) \\<in> ns \\<and>\n            (x, y) \\<notin> s \\<and>\n            (mset xs, mset ([] @ ys') - {#y#}) \\<in> mult2_alt b ns s))\n 5. \\<And>x xs y ys ys' b.\n       \\<lbrakk>mult2_impl0 nss\n                 (filter (\\<lambda>x. \\<not> nss x y False) xs) (ys @ ys')\n                 True =\n                ((mset (filter (\\<lambda>x. \\<not> nss x y False) xs),\n                  mset (ys @ ys'))\n                 \\<in> mult2_alt_ns ns s);\n        mult2_impl0 nss xs (ys @ ys') b =\n        ((mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s);\n        mult2_ex_dom0 nss x xs ys (y # ys') b =\n        ((\\<exists>ya.\n             ya \\<in># mset ys \\<and>\n             (x, ya) \\<in> s \\<and>\n             (mset (filter (\\<lambda>x. (x, ya) \\<notin> s) xs),\n              mset (ys @ y # ys') - {#ya#})\n             \\<in> mult2_alt_ns ns s) \\<or>\n         (\\<exists>ya.\n             ya \\<in># mset ys \\<and>\n             (x, ya) \\<in> ns \\<and>\n             (x, ya) \\<notin> s \\<and>\n             (mset xs, mset (ys @ y # ys') - {#ya#})\n             \\<in> mult2_alt b ns s))\\<rbrakk>\n       \\<Longrightarrow> mult2_ex_dom0 nss x xs (y # ys) ys' b =\n                         ((\\<exists>ya.\n                              ya \\<in># mset (y # ys) \\<and>\n                              (x, ya) \\<in> s \\<and>\n                              (mset\n                                (filter (\\<lambda>x. (x, ya) \\<notin> s)\n                                  xs),\n                               mset ((y # ys) @ ys') - {#ya#})\n                              \\<in> mult2_alt_ns ns s) \\<or>\n                          (\\<exists>ya.\n                              ya \\<in># mset (y # ys) \\<and>\n                              (x, ya) \\<in> ns \\<and>\n                              (x, ya) \\<notin> s \\<and>\n                              (mset xs, mset ((y # ys) @ ys') - {#ya#})\n                              \\<in> mult2_alt b ns s))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. mult2_ex_dom0 nss x xs (y # ys) ys' b =\n    ((\\<exists>ya.\n         ya \\<in># mset (y # ys) \\<and>\n         (x, ya) \\<in> s \\<and>\n         (mset (filter (\\<lambda>x. (x, ya) \\<notin> s) xs),\n          mset ((y # ys) @ ys') - {#ya#})\n         \\<in> mult2_alt_ns ns s) \\<or>\n     (\\<exists>ya.\n         ya \\<in># mset (y # ys) \\<and>\n         (x, ya) \\<in> ns \\<and>\n         (x, ya) \\<notin> s \\<and>\n         (mset xs, mset ((y # ys) @ ys') - {#ya#}) \\<in> mult2_alt b ns s))", "unfolding mult2_ex_dom0.simps 6"], ["proof (prove)\ngoal (1 subgoal):\n 1. (nss x y False \\<and>\n     (mset (filter (\\<lambda>x. \\<not> nss x y False) xs), mset (ys @ ys'))\n     \\<in> mult2_alt_ns ns s \\<or>\n     nss x y True \\<and>\n     \\<not> nss x y False \\<and>\n     (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s \\<or>\n     (\\<exists>ya.\n         ya \\<in># mset ys \\<and>\n         (x, ya) \\<in> s \\<and>\n         (mset (filter (\\<lambda>x. (x, ya) \\<notin> s) xs),\n          mset (ys @ y # ys') - {#ya#})\n         \\<in> mult2_alt_ns ns s) \\<or>\n     (\\<exists>ya.\n         ya \\<in># mset ys \\<and>\n         (x, ya) \\<in> ns \\<and>\n         (x, ya) \\<notin> s \\<and>\n         (mset xs, mset (ys @ y # ys') - {#ya#}) \\<in> mult2_alt b ns s)) =\n    ((\\<exists>ya.\n         ya \\<in># mset (y # ys) \\<and>\n         (x, ya) \\<in> s \\<and>\n         (mset (filter (\\<lambda>x. (x, ya) \\<notin> s) xs),\n          mset ((y # ys) @ ys') - {#ya#})\n         \\<in> mult2_alt_ns ns s) \\<or>\n     (\\<exists>ya.\n         ya \\<in># mset (y # ys) \\<and>\n         (x, ya) \\<in> ns \\<and>\n         (x, ya) \\<notin> s \\<and>\n         (mset xs, mset ((y # ys) @ ys') - {#ya#}) \\<in> mult2_alt b ns s))", "using subset_mult2_alt[of \"mset [x\\<leftarrow>xs . (x, y) \\<notin> s]\" \"mset xs\" \"mset (ys @ ys')\" b ns s True]"], ["proof (prove)\nusing this:\n  \\<lbrakk>mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n           mset xs;\n   (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n   b \\<Longrightarrow> True\\<rbrakk>\n  \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                     mset (ys @ ys'))\n                    \\<in> mult2_alt_ns ns s\n\ngoal (1 subgoal):\n 1. (nss x y False \\<and>\n     (mset (filter (\\<lambda>x. \\<not> nss x y False) xs), mset (ys @ ys'))\n     \\<in> mult2_alt_ns ns s \\<or>\n     nss x y True \\<and>\n     \\<not> nss x y False \\<and>\n     (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s \\<or>\n     (\\<exists>ya.\n         ya \\<in># mset ys \\<and>\n         (x, ya) \\<in> s \\<and>\n         (mset (filter (\\<lambda>x. (x, ya) \\<notin> s) xs),\n          mset (ys @ y # ys') - {#ya#})\n         \\<in> mult2_alt_ns ns s) \\<or>\n     (\\<exists>ya.\n         ya \\<in># mset ys \\<and>\n         (x, ya) \\<in> ns \\<and>\n         (x, ya) \\<notin> s \\<and>\n         (mset xs, mset (ys @ y # ys') - {#ya#}) \\<in> mult2_alt b ns s)) =\n    ((\\<exists>ya.\n         ya \\<in># mset (y # ys) \\<and>\n         (x, ya) \\<in> s \\<and>\n         (mset (filter (\\<lambda>x. (x, ya) \\<notin> s) xs),\n          mset ((y # ys) @ ys') - {#ya#})\n         \\<in> mult2_alt_ns ns s) \\<or>\n     (\\<exists>ya.\n         ya \\<in># mset (y # ys) \\<and>\n         (x, ya) \\<in> ns \\<and>\n         (x, ya) \\<notin> s \\<and>\n         (mset xs, mset ((y # ys) @ ys') - {#ya#}) \\<in> mult2_alt b ns s))", "apply (intro iffI; elim disjE conjE exE; simp add: mset_filter ns_def s_def; (elim disjE)?)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<lbrakk>nss x y False;\n     ({#x \\<in># mset xs. \\<not> nss x y False#}, mset ys + mset ys')\n     \\<in> mult2_alt_ns {(x, y). nss x y True}\n            {(x, y). nss x y False}\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>ya.\n                          (ya = y \\<or> ya \\<in> set ys) \\<and>\n                          nss x ya False \\<and>\n                          ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                 {(x, y). nss x y False}) \\<or>\n                      (\\<exists>ya.\n                          (ya = y \\<or> ya \\<in> set ys) \\<and>\n                          nss x ya True \\<and>\n                          \\<not> nss x ya False \\<and>\n                          (mset xs,\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt b {(x, y). nss x y True}\n                                 {(x, y). nss x y False})\n 2. \\<lbrakk>({#x \\<in># mset xs. \\<not> nss x y False#},\n              mset ys + mset ys')\n             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                    {(x, y). nss x y False};\n     nss x y True; \\<not> nss x y False;\n     (mset xs, mset ys + mset ys')\n     \\<in> mult2_alt b {(x, y). nss x y True}\n            {(x, y). nss x y False}\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>ya.\n                          (ya = y \\<or> ya \\<in> set ys) \\<and>\n                          nss x ya False \\<and>\n                          ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                 {(x, y). nss x y False}) \\<or>\n                      (\\<exists>ya.\n                          (ya = y \\<or> ya \\<in> set ys) \\<and>\n                          nss x ya True \\<and>\n                          \\<not> nss x ya False \\<and>\n                          (mset xs,\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt b {(x, y). nss x y True}\n                                 {(x, y). nss x y False})\n 3. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        ya \\<in> set ys; nss x ya False;\n        ({#x \\<in># mset xs. \\<not> nss x ya False#},\n         add_mset y (mset ys + mset ys' - {#ya#}))\n        \\<in> mult2_alt_ns {(x, y). nss x y True}\n               {(x, y). nss x y False}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ya.\n                             (ya = y \\<or> ya \\<in> set ys) \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             (ya = y \\<or> ya \\<in> set ys) \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 4. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        ya \\<in> set ys; nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys' - {#ya#}))\n        \\<in> mult2_alt b {(x, y). nss x y True}\n               {(x, y). nss x y False}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ya.\n                             (ya = y \\<or> ya \\<in> set ys) \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             (ya = y \\<or> ya \\<in> set ys) \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 5. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya False;\n        ({#x \\<in># mset xs. \\<not> nss x ya False#},\n         add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt_ns {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya = y\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 6. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya False;\n        ({#x \\<in># mset xs. \\<not> nss x ya False#},\n         add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt_ns {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya \\<in> set ys\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 7. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt b {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya = y\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 8. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt b {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya \\<in> set ys\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nss x y False;\n     ({#x \\<in># mset xs. \\<not> nss x y False#}, mset ys + mset ys')\n     \\<in> mult2_alt_ns {(x, y). nss x y True}\n            {(x, y). nss x y False}\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>ya.\n                          (ya = y \\<or> ya \\<in> set ys) \\<and>\n                          nss x ya False \\<and>\n                          ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                 {(x, y). nss x y False}) \\<or>\n                      (\\<exists>ya.\n                          (ya = y \\<or> ya \\<in> set ys) \\<and>\n                          nss x ya True \\<and>\n                          \\<not> nss x ya False \\<and>\n                          (mset xs,\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt b {(x, y). nss x y True}\n                                 {(x, y). nss x y False})", "by (intro disjI1 exI[of _ y]) auto"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>({#x \\<in># mset xs. \\<not> nss x y False#},\n              mset ys + mset ys')\n             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                    {(x, y). nss x y False};\n     nss x y True; \\<not> nss x y False;\n     (mset xs, mset ys + mset ys')\n     \\<in> mult2_alt b {(x, y). nss x y True}\n            {(x, y). nss x y False}\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>ya.\n                          (ya = y \\<or> ya \\<in> set ys) \\<and>\n                          nss x ya False \\<and>\n                          ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                 {(x, y). nss x y False}) \\<or>\n                      (\\<exists>ya.\n                          (ya = y \\<or> ya \\<in> set ys) \\<and>\n                          nss x ya True \\<and>\n                          \\<not> nss x ya False \\<and>\n                          (mset xs,\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt b {(x, y). nss x y True}\n                                 {(x, y). nss x y False})\n 2. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        ya \\<in> set ys; nss x ya False;\n        ({#x \\<in># mset xs. \\<not> nss x ya False#},\n         add_mset y (mset ys + mset ys' - {#ya#}))\n        \\<in> mult2_alt_ns {(x, y). nss x y True}\n               {(x, y). nss x y False}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ya.\n                             (ya = y \\<or> ya \\<in> set ys) \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             (ya = y \\<or> ya \\<in> set ys) \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 3. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        ya \\<in> set ys; nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys' - {#ya#}))\n        \\<in> mult2_alt b {(x, y). nss x y True}\n               {(x, y). nss x y False}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ya.\n                             (ya = y \\<or> ya \\<in> set ys) \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             (ya = y \\<or> ya \\<in> set ys) \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 4. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya False;\n        ({#x \\<in># mset xs. \\<not> nss x ya False#},\n         add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt_ns {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya = y\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 5. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya False;\n        ({#x \\<in># mset xs. \\<not> nss x ya False#},\n         add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt_ns {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya \\<in> set ys\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 6. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt b {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya = y\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 7. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt b {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya \\<in> set ys\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>({#x \\<in># mset xs. \\<not> nss x y False#},\n              mset ys + mset ys')\n             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                    {(x, y). nss x y False};\n     nss x y True; \\<not> nss x y False;\n     (mset xs, mset ys + mset ys')\n     \\<in> mult2_alt b {(x, y). nss x y True}\n            {(x, y). nss x y False}\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>ya.\n                          (ya = y \\<or> ya \\<in> set ys) \\<and>\n                          nss x ya False \\<and>\n                          ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                 {(x, y). nss x y False}) \\<or>\n                      (\\<exists>ya.\n                          (ya = y \\<or> ya \\<in> set ys) \\<and>\n                          nss x ya True \\<and>\n                          \\<not> nss x ya False \\<and>\n                          (mset xs,\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt b {(x, y). nss x y True}\n                                 {(x, y). nss x y False})", "by (intro disjI2 exI[of _ y]) auto"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        ya \\<in> set ys; nss x ya False;\n        ({#x \\<in># mset xs. \\<not> nss x ya False#},\n         add_mset y (mset ys + mset ys' - {#ya#}))\n        \\<in> mult2_alt_ns {(x, y). nss x y True}\n               {(x, y). nss x y False}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ya.\n                             (ya = y \\<or> ya \\<in> set ys) \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             (ya = y \\<or> ya \\<in> set ys) \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 2. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        ya \\<in> set ys; nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys' - {#ya#}))\n        \\<in> mult2_alt b {(x, y). nss x y True}\n               {(x, y). nss x y False}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ya.\n                             (ya = y \\<or> ya \\<in> set ys) \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             (ya = y \\<or> ya \\<in> set ys) \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 3. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya False;\n        ({#x \\<in># mset xs. \\<not> nss x ya False#},\n         add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt_ns {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya = y\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 4. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya False;\n        ({#x \\<in># mset xs. \\<not> nss x ya False#},\n         add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt_ns {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya \\<in> set ys\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 5. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt b {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya = y\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 6. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt b {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya \\<in> set ys\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})", "subgoal for y'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(mset xs, mset ys + mset ys')\n             \\<in> mult2_alt b {(x, y). nss x y True}\n                    {(x, y). nss x y False} \\<Longrightarrow>\n             ({#x \\<in># mset xs. \\<not> nss x y False#},\n              mset ys + mset ys')\n             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                    {(x, y). nss x y False};\n     y' \\<in> set ys; nss x y' False;\n     ({#x \\<in># mset xs. \\<not> nss x y' False#},\n      add_mset y (mset ys + mset ys' - {#y'#}))\n     \\<in> mult2_alt_ns {(x, y). nss x y True}\n            {(x, y). nss x y False}\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>ya.\n                          (ya = y \\<or> ya \\<in> set ys) \\<and>\n                          nss x ya False \\<and>\n                          ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                 {(x, y). nss x y False}) \\<or>\n                      (\\<exists>ya.\n                          (ya = y \\<or> ya \\<in> set ys) \\<and>\n                          nss x ya True \\<and>\n                          \\<not> nss x ya False \\<and>\n                          (mset xs,\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt b {(x, y). nss x y True}\n                                 {(x, y). nss x y False})", "by (intro disjI1 exI[of _ y']) auto"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        ya \\<in> set ys; nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys' - {#ya#}))\n        \\<in> mult2_alt b {(x, y). nss x y True}\n               {(x, y). nss x y False}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ya.\n                             (ya = y \\<or> ya \\<in> set ys) \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             (ya = y \\<or> ya \\<in> set ys) \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 2. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya False;\n        ({#x \\<in># mset xs. \\<not> nss x ya False#},\n         add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt_ns {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya = y\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 3. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya False;\n        ({#x \\<in># mset xs. \\<not> nss x ya False#},\n         add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt_ns {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya \\<in> set ys\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 4. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt b {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya = y\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 5. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt b {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya \\<in> set ys\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})", "subgoal for y'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(mset xs, mset ys + mset ys')\n             \\<in> mult2_alt b {(x, y). nss x y True}\n                    {(x, y). nss x y False} \\<Longrightarrow>\n             ({#x \\<in># mset xs. \\<not> nss x y False#},\n              mset ys + mset ys')\n             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                    {(x, y). nss x y False};\n     y' \\<in> set ys; nss x y' True; \\<not> nss x y' False;\n     (mset xs, add_mset y (mset ys + mset ys' - {#y'#}))\n     \\<in> mult2_alt b {(x, y). nss x y True}\n            {(x, y). nss x y False}\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>ya.\n                          (ya = y \\<or> ya \\<in> set ys) \\<and>\n                          nss x ya False \\<and>\n                          ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                 {(x, y). nss x y False}) \\<or>\n                      (\\<exists>ya.\n                          (ya = y \\<or> ya \\<in> set ys) \\<and>\n                          nss x ya True \\<and>\n                          \\<not> nss x ya False \\<and>\n                          (mset xs,\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt b {(x, y). nss x y True}\n                                 {(x, y). nss x y False})", "by (intro disjI2 exI[of _ y']) auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya False;\n        ({#x \\<in># mset xs. \\<not> nss x ya False#},\n         add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt_ns {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya = y\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 2. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya False;\n        ({#x \\<in># mset xs. \\<not> nss x ya False#},\n         add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt_ns {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya \\<in> set ys\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 3. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt b {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya = y\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 4. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt b {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya \\<in> set ys\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})", "subgoal for y'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(mset xs, mset ys + mset ys')\n             \\<in> mult2_alt b {(x, y). nss x y True}\n                    {(x, y). nss x y False} \\<Longrightarrow>\n             ({#x \\<in># mset xs. \\<not> nss x y False#},\n              mset ys + mset ys')\n             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                    {(x, y). nss x y False};\n     nss x y' False;\n     ({#x \\<in># mset xs. \\<not> nss x y' False#},\n      add_mset y (mset ys + mset ys') - {#y'#})\n     \\<in> mult2_alt_ns {(x, y). nss x y True} {(x, y). nss x y False};\n     \\<lbrakk>mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n              mset xs;\n      (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n      b \\<Longrightarrow> True\\<rbrakk>\n     \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                        mset (ys @ ys'))\n                       \\<in> mult2_alt_ns ns s;\n     y' = y\\<rbrakk>\n    \\<Longrightarrow> nss x y False \\<and>\n                      ({#x \\<in># mset xs. \\<not> nss x y False#},\n                       mset ys + mset ys')\n                      \\<in> mult2_alt_ns {(x, y). nss x y True}\n                             {(x, y). nss x y False} \\<or>\n                      nss x y True \\<and>\n                      \\<not> nss x y False \\<and>\n                      (mset xs, mset ys + mset ys')\n                      \\<in> mult2_alt b {(x, y). nss x y True}\n                             {(x, y). nss x y False} \\<or>\n                      (\\<exists>ya.\n                          ya \\<in> set ys \\<and>\n                          nss x ya False \\<and>\n                          ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                 {(x, y). nss x y False}) \\<or>\n                      (\\<exists>ya.\n                          ya \\<in> set ys \\<and>\n                          nss x ya True \\<and>\n                          \\<not> nss x ya False \\<and>\n                          (mset xs,\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt b {(x, y). nss x y True}\n                                 {(x, y). nss x y False})", "by simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya False;\n        ({#x \\<in># mset xs. \\<not> nss x ya False#},\n         add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt_ns {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya \\<in> set ys\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 2. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt b {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya = y\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 3. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt b {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya \\<in> set ys\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})", "subgoal for y'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(mset xs, mset ys + mset ys')\n             \\<in> mult2_alt b {(x, y). nss x y True}\n                    {(x, y). nss x y False} \\<Longrightarrow>\n             ({#x \\<in># mset xs. \\<not> nss x y False#},\n              mset ys + mset ys')\n             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                    {(x, y). nss x y False};\n     nss x y' False;\n     ({#x \\<in># mset xs. \\<not> nss x y' False#},\n      add_mset y (mset ys + mset ys') - {#y'#})\n     \\<in> mult2_alt_ns {(x, y). nss x y True} {(x, y). nss x y False};\n     \\<lbrakk>mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n              mset xs;\n      (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n      b \\<Longrightarrow> True\\<rbrakk>\n     \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                        mset (ys @ ys'))\n                       \\<in> mult2_alt_ns ns s;\n     y' \\<in> set ys\\<rbrakk>\n    \\<Longrightarrow> nss x y False \\<and>\n                      ({#x \\<in># mset xs. \\<not> nss x y False#},\n                       mset ys + mset ys')\n                      \\<in> mult2_alt_ns {(x, y). nss x y True}\n                             {(x, y). nss x y False} \\<or>\n                      nss x y True \\<and>\n                      \\<not> nss x y False \\<and>\n                      (mset xs, mset ys + mset ys')\n                      \\<in> mult2_alt b {(x, y). nss x y True}\n                             {(x, y). nss x y False} \\<or>\n                      (\\<exists>ya.\n                          ya \\<in> set ys \\<and>\n                          nss x ya False \\<and>\n                          ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                 {(x, y). nss x y False}) \\<or>\n                      (\\<exists>ya.\n                          ya \\<in> set ys \\<and>\n                          nss x ya True \\<and>\n                          \\<not> nss x ya False \\<and>\n                          (mset xs,\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt b {(x, y). nss x y True}\n                                 {(x, y). nss x y False})", "by (rule disjI2, rule disjI2, rule disjI1, rule exI[of _ y']) simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt b {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya = y\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})\n 2. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt b {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya \\<in> set ys\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})", "subgoal for y'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(mset xs, mset ys + mset ys')\n             \\<in> mult2_alt b {(x, y). nss x y True}\n                    {(x, y). nss x y False} \\<Longrightarrow>\n             ({#x \\<in># mset xs. \\<not> nss x y False#},\n              mset ys + mset ys')\n             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                    {(x, y). nss x y False};\n     nss x y' True; \\<not> nss x y' False;\n     (mset xs, add_mset y (mset ys + mset ys') - {#y'#})\n     \\<in> mult2_alt b {(x, y). nss x y True} {(x, y). nss x y False};\n     \\<lbrakk>mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n              mset xs;\n      (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n      b \\<Longrightarrow> True\\<rbrakk>\n     \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                        mset (ys @ ys'))\n                       \\<in> mult2_alt_ns ns s;\n     y' = y\\<rbrakk>\n    \\<Longrightarrow> nss x y False \\<and>\n                      ({#x \\<in># mset xs. \\<not> nss x y False#},\n                       mset ys + mset ys')\n                      \\<in> mult2_alt_ns {(x, y). nss x y True}\n                             {(x, y). nss x y False} \\<or>\n                      nss x y True \\<and>\n                      \\<not> nss x y False \\<and>\n                      (mset xs, mset ys + mset ys')\n                      \\<in> mult2_alt b {(x, y). nss x y True}\n                             {(x, y). nss x y False} \\<or>\n                      (\\<exists>ya.\n                          ya \\<in> set ys \\<and>\n                          nss x ya False \\<and>\n                          ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                 {(x, y). nss x y False}) \\<or>\n                      (\\<exists>ya.\n                          ya \\<in> set ys \\<and>\n                          nss x ya True \\<and>\n                          \\<not> nss x ya False \\<and>\n                          (mset xs,\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt b {(x, y). nss x y True}\n                                 {(x, y). nss x y False})", "by simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ya.\n       \\<lbrakk>(mset xs, mset ys + mset ys')\n                \\<in> mult2_alt b {(x, y). nss x y True}\n                       {(x, y). nss x y False} \\<Longrightarrow>\n                ({#x \\<in># mset xs. \\<not> nss x y False#},\n                 mset ys + mset ys')\n                \\<in> mult2_alt_ns {(x, y). nss x y True}\n                       {(x, y). nss x y False};\n        nss x ya True; \\<not> nss x ya False;\n        (mset xs, add_mset y (mset ys + mset ys') - {#ya#})\n        \\<in> mult2_alt b {(x, y). nss x y True} {(x, y). nss x y False};\n        \\<lbrakk>mset\n                  (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n                 mset xs;\n         (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n         b \\<Longrightarrow> True\\<rbrakk>\n        \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                           mset (ys @ ys'))\n                          \\<in> mult2_alt_ns ns s;\n        ya \\<in> set ys\\<rbrakk>\n       \\<Longrightarrow> nss x y False \\<and>\n                         ({#x \\<in># mset xs. \\<not> nss x y False#},\n                          mset ys + mset ys')\n                         \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         nss x y True \\<and>\n                         \\<not> nss x y False \\<and>\n                         (mset xs, mset ys + mset ys')\n                         \\<in> mult2_alt b {(x, y). nss x y True}\n                                {(x, y). nss x y False} \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya False \\<and>\n                             ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                    {(x, y). nss x y False}) \\<or>\n                         (\\<exists>ya.\n                             ya \\<in> set ys \\<and>\n                             nss x ya True \\<and>\n                             \\<not> nss x ya False \\<and>\n                             (mset xs,\n                              add_mset y (mset ys + mset ys') - {#ya#})\n                             \\<in> mult2_alt b {(x, y). nss x y True}\n                                    {(x, y). nss x y False})", "subgoal for y'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(mset xs, mset ys + mset ys')\n             \\<in> mult2_alt b {(x, y). nss x y True}\n                    {(x, y). nss x y False} \\<Longrightarrow>\n             ({#x \\<in># mset xs. \\<not> nss x y False#},\n              mset ys + mset ys')\n             \\<in> mult2_alt_ns {(x, y). nss x y True}\n                    {(x, y). nss x y False};\n     nss x y' True; \\<not> nss x y' False;\n     (mset xs, add_mset y (mset ys + mset ys') - {#y'#})\n     \\<in> mult2_alt b {(x, y). nss x y True} {(x, y). nss x y False};\n     \\<lbrakk>mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs) \\<subseteq>#\n              mset xs;\n      (mset xs, mset (ys @ ys')) \\<in> mult2_alt b ns s;\n      b \\<Longrightarrow> True\\<rbrakk>\n     \\<Longrightarrow> (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n                        mset (ys @ ys'))\n                       \\<in> mult2_alt_ns ns s;\n     y' \\<in> set ys\\<rbrakk>\n    \\<Longrightarrow> nss x y False \\<and>\n                      ({#x \\<in># mset xs. \\<not> nss x y False#},\n                       mset ys + mset ys')\n                      \\<in> mult2_alt_ns {(x, y). nss x y True}\n                             {(x, y). nss x y False} \\<or>\n                      nss x y True \\<and>\n                      \\<not> nss x y False \\<and>\n                      (mset xs, mset ys + mset ys')\n                      \\<in> mult2_alt b {(x, y). nss x y True}\n                             {(x, y). nss x y False} \\<or>\n                      (\\<exists>ya.\n                          ya \\<in> set ys \\<and>\n                          nss x ya False \\<and>\n                          ({#x \\<in># mset xs. \\<not> nss x ya False#},\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt_ns {(x, y). nss x y True}\n                                 {(x, y). nss x y False}) \\<or>\n                      (\\<exists>ya.\n                          ya \\<in> set ys \\<and>\n                          nss x ya True \\<and>\n                          \\<not> nss x ya False \\<and>\n                          (mset xs,\n                           add_mset y (mset ys + mset ys') - {#ya#})\n                          \\<in> mult2_alt b {(x, y). nss x y True}\n                                 {(x, y). nss x y False})", "by (rule disjI2, rule disjI2, rule disjI2, rule exI[of _ y']) simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  mult2_ex_dom0 nss x xs (y # ys) ys' b =\n  ((\\<exists>ya.\n       ya \\<in># mset (y # ys) \\<and>\n       (x, ya) \\<in> s \\<and>\n       (mset (filter (\\<lambda>x. (x, ya) \\<notin> s) xs),\n        mset ((y # ys) @ ys') - {#ya#})\n       \\<in> mult2_alt_ns ns s) \\<or>\n   (\\<exists>ya.\n       ya \\<in># mset (y # ys) \\<and>\n       (x, ya) \\<in> ns \\<and>\n       (x, ya) \\<notin> s \\<and>\n       (mset xs, mset ((y # ys) @ ys') - {#ya#}) \\<in> mult2_alt b ns s))\n\ngoal (4 subgoals):\n 1. \\<And>b.\n       mult2_impl0 nss [] [] b = ((mset [], mset []) \\<in> mult2_alt b ns s)\n 2. \\<And>v va b.\n       mult2_impl0 nss (v # va) [] b =\n       ((mset (v # va), mset []) \\<in> mult2_alt b ns s)\n 3. \\<And>v va b.\n       mult2_impl0 nss [] (v # va) b =\n       ((mset [], mset (v # va)) \\<in> mult2_alt b ns s)\n 4. \\<And>x xs ys' b.\n       mult2_ex_dom0 nss x xs [] ys' b =\n       ((\\<exists>y.\n            y \\<in># mset [] \\<and>\n            (x, y) \\<in> s \\<and>\n            (mset (filter (\\<lambda>x. (x, y) \\<notin> s) xs),\n             mset ([] @ ys') - {#y#})\n            \\<in> mult2_alt_ns ns s) \\<or>\n        (\\<exists>y.\n            y \\<in># mset [] \\<and>\n            (x, y) \\<in> ns \\<and>\n            (x, y) \\<notin> s \\<and>\n            (mset xs, mset ([] @ ys') - {#y#}) \\<in> mult2_alt b ns s))", "qed (auto simp: mult2_alt_emptyL mult2_alt_emptyR)"], ["", "text \\<open>Now, instead of functions of type @{typ \"bool \\<Rightarrow> bool\"}, use pairs of type\n  @{typ \"bool \\<times> bool\"}\\<close>"], ["", "definition [simp]: \"or2 a b = (fst a \\<or> fst b, snd a \\<or> snd b)\""], ["", "context fixes sns :: \"'a \\<Rightarrow> 'a \\<Rightarrow> bool \\<times> bool\"\nbegin"], ["", "fun mult2_impl :: \"'a list \\<Rightarrow> 'a list \\<Rightarrow> bool \\<times> bool\"\n  and mult2_ex_dom :: \"'a \\<Rightarrow> 'a list \\<Rightarrow> 'a list \\<Rightarrow> 'a list \\<Rightarrow> bool \\<times> bool\"\n  where\n    \"mult2_impl []       [] = (False, True)\"\n  | \"mult2_impl xs       [] = (False, False)\"\n  | \"mult2_impl []       ys = (True, True)\"\n  | \"mult2_impl (x # xs) ys = mult2_ex_dom x xs ys []\"\n\n| \"mult2_ex_dom x xs []       ys' = (False, False)\"\n| \"mult2_ex_dom x xs (y # ys) ys' =\n    (case sns x y of\n      (True, _) \\<Rightarrow> if snd (mult2_impl (filter (\\<lambda>x. \\<not> fst (sns x y)) xs) (ys @ ys')) then (True, True)\n                   else mult2_ex_dom x xs ys (y # ys')\n    | (False, True) \\<Rightarrow> or2 (mult2_impl xs (ys @ ys')) (mult2_ex_dom x xs ys (y # ys'))\n    | _ \\<Rightarrow> mult2_ex_dom x xs ys (y # ys'))\""], ["", "end"], ["", "lemma mult2_impl_sound0:\n  defines \"pair \\<equiv> \\<lambda>f. (f False, f True)\" and \"fun \\<equiv> \\<lambda>p b. if b then snd p else fst p\"\n  shows \"mult2_impl sns xs ys = pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) xs ys)\" (is ?P)\n    \"mult2_ex_dom sns x xs ys ys' = pair (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs ys ys')\" (is ?Q)"], ["proof (prove)\ngoal (1 subgoal):\n 1. mult2_impl sns xs ys =\n    pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) xs ys) &&&\n    mult2_ex_dom sns x xs ys ys' =\n    pair (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs ys ys')", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. mult2_impl sns xs ys =\n    pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) xs ys)\n 2. mult2_ex_dom sns x xs ys ys' =\n    pair (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs ys ys')", "show ?P ?Q"], ["proof (prove)\ngoal (1 subgoal):\n 1. mult2_impl sns xs ys =\n    pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) xs ys) &&&\n    mult2_ex_dom sns x xs ys ys' =\n    pair (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs ys ys')", "proof (induct xs ys and x xs ys ys' taking: sns rule: mult2_impl_mult2_ex_dom.induct)"], ["proof (state)\ngoal (6 subgoals):\n 1. mult2_impl sns [] [] =\n    pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) [] [])\n 2. \\<And>v va.\n       mult2_impl sns (v # va) [] =\n       pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) (v # va) [])\n 3. \\<And>v va.\n       mult2_impl sns [] (v # va) =\n       pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) [] (v # va))\n 4. \\<And>x xs v va.\n       mult2_ex_dom sns x xs (v # va) [] =\n       pair\n        (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs (v # va)\n          []) \\<Longrightarrow>\n       mult2_impl sns (x # xs) (v # va) =\n       pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) (x # xs) (v # va))\n 5. \\<And>x xs ys'.\n       mult2_ex_dom sns x xs [] ys' =\n       pair (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs [] ys')\n 6. \\<And>x xs y ys ys'.\n       \\<lbrakk>\\<And>xa ya.\n                   \\<lbrakk>(xa, ya) = sns x y; xa = True\\<rbrakk>\n                   \\<Longrightarrow> mult2_impl sns\n(filter (\\<lambda>x. \\<not> fst (sns x y)) xs) (ys @ ys') =\n                                     pair\n(mult2_impl0 (\\<lambda>x y. fun (sns x y))\n  (filter (\\<lambda>x. \\<not> fst (sns x y)) xs) (ys @ ys'));\n        \\<And>xa ya.\n           \\<lbrakk>(xa, ya) = sns x y; xa = True;\n            \\<not> snd (mult2_impl sns\n                         (filter (\\<lambda>x. \\<not> fst (sns x y)) xs)\n                         (ys @ ys'))\\<rbrakk>\n           \\<Longrightarrow> mult2_ex_dom sns x xs ys (y # ys') =\n                             pair\n                              (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x\n                                xs ys (y # ys'));\n        \\<And>xa ya.\n           \\<lbrakk>(xa, ya) = sns x y; xa = False; ya = True\\<rbrakk>\n           \\<Longrightarrow> mult2_impl sns xs (ys @ ys') =\n                             pair\n                              (mult2_impl0 (\\<lambda>x y. fun (sns x y)) xs\n                                (ys @ ys'));\n        \\<And>xa ya.\n           \\<lbrakk>(xa, ya) = sns x y; xa = False; ya = True\\<rbrakk>\n           \\<Longrightarrow> mult2_ex_dom sns x xs ys (y # ys') =\n                             pair\n                              (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x\n                                xs ys (y # ys'));\n        \\<And>xa ya.\n           \\<lbrakk>(xa, ya) = sns x y; xa = False; ya = False\\<rbrakk>\n           \\<Longrightarrow> mult2_ex_dom sns x xs ys (y # ys') =\n                             pair\n                              (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x\n                                xs ys (y # ys'))\\<rbrakk>\n       \\<Longrightarrow> mult2_ex_dom sns x xs (y # ys) ys' =\n                         pair\n                          (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs\n                            (y # ys) ys')", "case (6 x xs y ys ys')"], ["proof (state)\nthis:\n  \\<lbrakk>(?xa, ?ya) = sns x y; ?xa = True\\<rbrakk>\n  \\<Longrightarrow> mult2_impl sns\n                     (filter (\\<lambda>x. \\<not> fst (sns x y)) xs)\n                     (ys @ ys') =\n                    pair\n                     (mult2_impl0 (\\<lambda>x y. fun (sns x y))\n                       (filter (\\<lambda>x. \\<not> fst (sns x y)) xs)\n                       (ys @ ys'))\n  \\<lbrakk>(?xa, ?ya) = sns x y; ?xa = True;\n   \\<not> snd (mult2_impl sns (filter (\\<lambda>x. \\<not> fst (sns x y)) xs)\n                (ys @ ys'))\\<rbrakk>\n  \\<Longrightarrow> mult2_ex_dom sns x xs ys (y # ys') =\n                    pair\n                     (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs ys\n                       (y # ys'))\n  \\<lbrakk>(?xa, ?ya) = sns x y; ?xa = False; ?ya = True\\<rbrakk>\n  \\<Longrightarrow> mult2_impl sns xs (ys @ ys') =\n                    pair\n                     (mult2_impl0 (\\<lambda>x y. fun (sns x y)) xs\n                       (ys @ ys'))\n  \\<lbrakk>(?xa, ?ya) = sns x y; ?xa = False; ?ya = True\\<rbrakk>\n  \\<Longrightarrow> mult2_ex_dom sns x xs ys (y # ys') =\n                    pair\n                     (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs ys\n                       (y # ys'))\n  \\<lbrakk>(?xa, ?ya) = sns x y; ?xa = False; ?ya = False\\<rbrakk>\n  \\<Longrightarrow> mult2_ex_dom sns x xs ys (y # ys') =\n                    pair\n                     (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs ys\n                       (y # ys'))\n\ngoal (6 subgoals):\n 1. mult2_impl sns [] [] =\n    pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) [] [])\n 2. \\<And>v va.\n       mult2_impl sns (v # va) [] =\n       pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) (v # va) [])\n 3. \\<And>v va.\n       mult2_impl sns [] (v # va) =\n       pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) [] (v # va))\n 4. \\<And>x xs v va.\n       mult2_ex_dom sns x xs (v # va) [] =\n       pair\n        (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs (v # va)\n          []) \\<Longrightarrow>\n       mult2_impl sns (x # xs) (v # va) =\n       pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) (x # xs) (v # va))\n 5. \\<And>x xs ys'.\n       mult2_ex_dom sns x xs [] ys' =\n       pair (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs [] ys')\n 6. \\<And>x xs y ys ys'.\n       \\<lbrakk>\\<And>xa ya.\n                   \\<lbrakk>(xa, ya) = sns x y; xa = True\\<rbrakk>\n                   \\<Longrightarrow> mult2_impl sns\n(filter (\\<lambda>x. \\<not> fst (sns x y)) xs) (ys @ ys') =\n                                     pair\n(mult2_impl0 (\\<lambda>x y. fun (sns x y))\n  (filter (\\<lambda>x. \\<not> fst (sns x y)) xs) (ys @ ys'));\n        \\<And>xa ya.\n           \\<lbrakk>(xa, ya) = sns x y; xa = True;\n            \\<not> snd (mult2_impl sns\n                         (filter (\\<lambda>x. \\<not> fst (sns x y)) xs)\n                         (ys @ ys'))\\<rbrakk>\n           \\<Longrightarrow> mult2_ex_dom sns x xs ys (y # ys') =\n                             pair\n                              (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x\n                                xs ys (y # ys'));\n        \\<And>xa ya.\n           \\<lbrakk>(xa, ya) = sns x y; xa = False; ya = True\\<rbrakk>\n           \\<Longrightarrow> mult2_impl sns xs (ys @ ys') =\n                             pair\n                              (mult2_impl0 (\\<lambda>x y. fun (sns x y)) xs\n                                (ys @ ys'));\n        \\<And>xa ya.\n           \\<lbrakk>(xa, ya) = sns x y; xa = False; ya = True\\<rbrakk>\n           \\<Longrightarrow> mult2_ex_dom sns x xs ys (y # ys') =\n                             pair\n                              (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x\n                                xs ys (y # ys'));\n        \\<And>xa ya.\n           \\<lbrakk>(xa, ya) = sns x y; xa = False; ya = False\\<rbrakk>\n           \\<Longrightarrow> mult2_ex_dom sns x xs ys (y # ys') =\n                             pair\n                              (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x\n                                xs ys (y # ys'))\\<rbrakk>\n       \\<Longrightarrow> mult2_ex_dom sns x xs (y # ys) ys' =\n                         pair\n                          (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs\n                            (y # ys) ys')", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. mult2_ex_dom sns x xs (y # ys) ys' =\n    pair (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs (y # ys) ys')", "unfolding mult2_ex_dom.simps mult2_ex_dom0.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case sns x y of\n     (True, xaa) \\<Rightarrow>\n       if snd (mult2_impl sns (filter (\\<lambda>x. \\<not> fst (sns x y)) xs)\n                (ys @ ys'))\n       then (True, True) else mult2_ex_dom sns x xs ys (y # ys')\n     | (False, True) \\<Rightarrow>\n         or2 (mult2_impl sns xs (ys @ ys'))\n          (mult2_ex_dom sns x xs ys (y # ys'))\n     | (False, False) \\<Rightarrow> mult2_ex_dom sns x xs ys (y # ys')) =\n    pair\n     (\\<lambda>a.\n         fun (sns x y) False \\<and>\n         mult2_impl0 (\\<lambda>x y. fun (sns x y))\n          (filter (\\<lambda>x. \\<not> fun (sns x y) False) xs) (ys @ ys')\n          True \\<or>\n         fun (sns x y) True \\<and>\n         \\<not> fun (sns x y) False \\<and>\n         mult2_impl0 (\\<lambda>x y. fun (sns x y)) xs (ys @ ys') a \\<or>\n         mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs ys (y # ys') a)", "by (fastforce simp: pair_def fun_def 6 if_bool_eq_conj split: prod.splits bool.splits)"], ["proof (state)\nthis:\n  mult2_ex_dom sns x xs (y # ys) ys' =\n  pair (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs (y # ys) ys')\n\ngoal (5 subgoals):\n 1. mult2_impl sns [] [] =\n    pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) [] [])\n 2. \\<And>v va.\n       mult2_impl sns (v # va) [] =\n       pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) (v # va) [])\n 3. \\<And>v va.\n       mult2_impl sns [] (v # va) =\n       pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) [] (v # va))\n 4. \\<And>x xs v va.\n       mult2_ex_dom sns x xs (v # va) [] =\n       pair\n        (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs (v # va)\n          []) \\<Longrightarrow>\n       mult2_impl sns (x # xs) (v # va) =\n       pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) (x # xs) (v # va))\n 5. \\<And>x xs ys'.\n       mult2_ex_dom sns x xs [] ys' =\n       pair (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs [] ys')", "qed (auto simp: pair_def fun_def if_bool_eq_conj)"], ["proof (state)\nthis:\n  mult2_impl sns xs ys =\n  pair (mult2_impl0 (\\<lambda>x y. fun (sns x y)) xs ys)\n  mult2_ex_dom sns x xs ys ys' =\n  pair (mult2_ex_dom0 (\\<lambda>x y. fun (sns x y)) x xs ys ys')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas mult2_impl_sound = mult2_impl_sound0(1)[unfolded mult2_impl0_sound if_True if_False]"], ["", "end"]]}