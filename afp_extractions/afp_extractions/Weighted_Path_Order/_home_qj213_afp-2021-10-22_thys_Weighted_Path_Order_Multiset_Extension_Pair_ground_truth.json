{"file_name": "/home/qj213/afp-2021-10-22/thys/Weighted_Path_Order/Multiset_Extension_Pair.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Weighted_Path_Order", "problem_names": ["lemma mult_locally_cancel:\n  assumes \"trans s \" and \"locally_irrefl s (X + Z)\" and \"locally_irrefl s (Y + Z)\"\n  shows \"(X + Z, Y + Z) \\<in> mult s \\<longleftrightarrow> (X, Y) \\<in> mult s\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma mult_locally_cancelL:\n  assumes \"trans s\" \"locally_irrefl s (X + Z)\" \"locally_irrefl s (Y + Z)\"\n  shows \"(Z + X, Z + Y) \\<in> mult s \\<longleftrightarrow> (X, Y) \\<in> mult s\"", "lemma mult_cancelL:\n  assumes \"trans s\" \"irrefl s\" shows \"(Z + X, Z + Y) \\<in> mult s \\<longleftrightarrow> (X, Y) \\<in> mult s\"", "lemma wf_trancl_conv:\n  shows \"wf (r\\<^sup>+) \\<longleftrightarrow> wf r\"", "lemma multpw_emptyL [simp]:\n  \"({#}, X) \\<in> multpw ns \\<longleftrightarrow> X = {#}\"", "lemma multpw_emptyR [simp]:\n  \"(X, {#}) \\<in> multpw ns \\<longleftrightarrow> X = {#}\"", "lemma refl_multpw:\n  assumes \"refl ns\" shows \"refl (multpw ns)\"", "lemma multpw_Id_Id [simp]:\n  \"multpw Id = Id\"", "lemma mono_multpw:\n  assumes \"ns \\<subseteq> ns'\" shows \"multpw ns \\<subseteq> multpw ns'\"", "lemma multpw_converse:\n  \"multpw (ns\\<inverse>) = (multpw ns)\\<inverse>\"", "lemma multpw_local:\n  \"(X, Y) \\<in> multpw ns \\<Longrightarrow> (X, Y) \\<in> multpw (ns \\<inter> set_mset X \\<times> set_mset Y)\"", "lemma multpw_split1R:\n  assumes \"(add_mset x X, Y) \\<in> multpw ns\"\n  obtains z Z where \"Y = add_mset z Z\" and \"(x, z) \\<in> ns\" and \"(X, Z) \\<in> multpw ns\"", "lemma multpw_splitR:\n  assumes \"(X1 + X2, Y) \\<in> multpw ns\"\n  obtains Y1 Y2 where \"Y = Y1 + Y2\" and \"(X1, Y1) \\<in> multpw ns\" and \"(X2, Y2) \\<in> multpw ns\"", "lemma multpw_split1L:\n  assumes \"(X, add_mset y Y) \\<in> multpw ns\"\n  obtains z Z where \"X = add_mset z Z\" and \"(z, y) \\<in> ns\" and \"(Z, Y) \\<in> multpw ns\"", "lemma multpw_splitL:\n  assumes \"(X, Y1 + Y2) \\<in> multpw ns\"\n  obtains X1 X2 where \"X = X1 + X2\" and \"(X1, Y1) \\<in> multpw ns\" and \"(X2, Y2) \\<in> multpw ns\"", "lemma locally_trans_multpw:\n  assumes \"locally_trans ns S T U\"\n    and \"(S, T) \\<in> multpw ns\"\n    and \"(T, U) \\<in> multpw ns\"\n  shows \"(S, U) \\<in> multpw ns\"", "lemma trans_multpw:\n  assumes \"trans ns\" shows \"trans (multpw ns)\"", "lemma multpw_add:\n  assumes \"(X1, Y1) \\<in> multpw ns\" \"(X2, Y2) \\<in> multpw ns\" shows \"(X1 + X2, Y1 + Y2) \\<in> multpw ns\"", "lemma multpw_single:\n  \"(x, y) \\<in> ns \\<Longrightarrow> ({#x#}, {#y#}) \\<in> multpw ns\"", "lemma multpw_mult1_commute:\n  assumes compat: \"s O ns \\<subseteq> s\" and reflns: \"refl ns\"\n  shows \"mult1 s O multpw ns \\<subseteq> multpw ns O mult1 s\"", "lemma multpw_mult_commute:\n  assumes \"s O ns \\<subseteq> s\" \"refl ns\" shows \"mult s O multpw ns \\<subseteq> multpw ns O mult s\"", "lemma wf_mult_rel_multpw:\n  assumes \"wf s\" \"s O ns \\<subseteq> s\" \"refl ns\" shows \"wf ((multpw ns)\\<^sup>* O mult s O (multpw ns)\\<^sup>*)\"", "lemma multpw_cancel1:\n  assumes \"trans ns\" \"(y, x) \\<in> ns\"\n  shows \"(add_mset x X, add_mset y Y) \\<in> multpw ns \\<Longrightarrow> (X, Y) \\<in> multpw ns\" (is \"?L \\<Longrightarrow> ?R\")", "lemma multpw_cancel:\n  assumes \"refl ns\" \"trans ns\"\n  shows \"(X + Z, Y + Z) \\<in> multpw ns \\<longleftrightarrow> (X, Y) \\<in> multpw ns\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma multpw_cancelL:\n  assumes \"refl ns\" \"trans ns\" shows \"(Z + X, Z + Y) \\<in> multpw ns \\<longleftrightarrow> (X, Y) \\<in> multpw ns\"", "lemma mult2_ns_conv:\n  shows \"mult2_ns ns s = mult2_s ns s \\<union> multpw ns\"", "lemma mono_mult2_s:\n  assumes \"ns \\<subseteq> ns'\" \"s \\<subseteq> s'\" shows \"mult2_s ns s \\<subseteq> mult2_s ns' s'\"", "lemma mono_mult2_ns:\n  assumes \"ns \\<subseteq> ns'\" \"s \\<subseteq> s'\" shows \"mult2_ns ns s \\<subseteq> mult2_ns ns' s'\"", "lemma wf_mult2_s:\n  assumes \"wf s\" \"s O ns \\<subseteq> s\" \"refl ns\"\n  shows \"wf (mult2_s ns s)\"", "lemma refl_mult2_ns:\n  assumes \"refl ns\" shows \"refl (mult2_ns ns s)\"", "lemma trans_mult2_s:\n  assumes \"s O ns \\<subseteq> s\" \"refl ns\" \"trans ns\"\n  shows \"trans (mult2_s ns s)\"", "lemma trans_mult2_ns:\n  assumes \"s O ns \\<subseteq> s\" \"refl ns\" \"trans ns\"\n  shows \"trans (mult2_ns ns s)\"", "lemma compat_mult2:\n  assumes \"s O ns \\<subseteq> s\" \"refl ns\" \"trans ns\"\n  shows \"mult2_ns ns s O mult2_s ns s \\<subseteq> mult2_s ns s\" \"mult2_s ns s O mult2_ns ns s \\<subseteq> mult2_s ns s\"", "lemma mult_implies_mult2_s:\n  assumes \"refl ns\" \"(X, Y) \\<in> mult s\"\n  shows \"(X, Y) \\<in> mult2_s ns s\"", "lemma mult_implies_mult2_ns:\n  assumes \"refl ns\" \"(X, Y) \\<in> (mult s)\\<^sup>=\"\n  shows \"(X, Y) \\<in> mult2_ns ns s\"", "lemma multpw_implies_mult2_ns:\n  assumes \"(X, Y) \\<in> multpw ns\"\n  shows \"(X, Y) \\<in> mult2_ns ns s\"", "lemma mult2_s_one_step:\n  assumes \"ns O s \\<subseteq> s\" \"refl ns\" \"trans s\"\n  shows \"(X, Y) \\<in> mult2_s ns s \\<longleftrightarrow> (\\<exists>X1 X2 Y1 Y2. X = X1 + X2 \\<and> Y = Y1 + Y2 \\<and>\n    (X1, Y1) \\<in> multpw ns \\<and> Y2 \\<noteq> {#} \\<and> (\\<forall>x. x \\<in># X2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)))\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma mult2_ns_one_step:\n  assumes \"ns O s \\<subseteq> s\" \"refl ns\" \"trans s\"\n  shows \"(X, Y) \\<in> mult2_ns ns s \\<longleftrightarrow> (\\<exists>X1 X2 Y1 Y2. X = X1 + X2 \\<and> Y = Y1 + Y2 \\<and>\n    (X1, Y1) \\<in> multpw ns \\<and> (\\<forall>x. x \\<in># X2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)))\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma mult2_s_locally_one_step':\n  assumes \"ns O s \\<subseteq> s\" \"refl ns\" \"locally_irrefl s X\" \"locally_irrefl s Y\" \"trans s\"\n  shows \"(X, Y) \\<in> mult2_s ns s \\<longleftrightarrow> (\\<exists>X1 X2 Y1 Y2. X = X1 + X2 \\<and> Y = Y1 + Y2 \\<and>\n    (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s)\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma mult2_s_one_step':\n  assumes \"ns O s \\<subseteq> s\" \"refl ns\" \"irrefl s\" \"trans s\"\n  shows \"(X, Y) \\<in> mult2_s ns s \\<longleftrightarrow> (\\<exists>X1 X2 Y1 Y2. X = X1 + X2 \\<and> Y = Y1 + Y2 \\<and>\n    (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s)\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma mult2_ns_one_step':\n  assumes \"ns O s \\<subseteq> s\" \"refl ns\" \"irrefl s\" \"trans s\"\n  shows \"(X, Y) \\<in> mult2_ns ns s \\<longleftrightarrow> (\\<exists>X1 X2 Y1 Y2. X = X1 + X2 \\<and> Y = Y1 + Y2 \\<and>\n    (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=)\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma mult2_s_locally_cancel1:\n  assumes \"s O ns \\<subseteq> s\" \"ns O s \\<subseteq> s\" \"refl ns\" \"trans ns\" \"locally_irrefl s (add_mset z X)\" \"locally_irrefl s (add_mset z Y)\" \"trans s\"\n    \"(add_mset z X, add_mset z Y) \\<in> mult2_s ns s\"\n  shows \"(X, Y) \\<in> mult2_s ns s\"", "lemma mult2_s_cancel1:\n  assumes \"s O ns \\<subseteq> s\" \"ns O s \\<subseteq> s\" \"refl ns\" \"trans ns\" \"irrefl s\" \"trans s\" \"(add_mset z X, add_mset z Y) \\<in> mult2_s ns s\"\n  shows \"(X, Y) \\<in> mult2_s ns s\"", "lemma mult2_s_locally_cancel:\n  assumes \"s O ns \\<subseteq> s\" \"ns O s \\<subseteq> s\" \"refl ns\" \"trans ns\" \"locally_irrefl s (X + Z)\" \"locally_irrefl s (Y + Z)\" \"trans s\"\n  shows \"(X + Z, Y + Z) \\<in> mult2_s ns s \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\"", "lemma mult2_s_cancel:\n  assumes \"s O ns \\<subseteq> s\" \"ns O s \\<subseteq> s\" \"refl ns\" \"trans ns\" \"irrefl s\" \"trans s\"\n  shows \"(X + Z, Y + Z) \\<in> mult2_s ns s \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\"", "lemma mult2_ns_cancel:\n  assumes \"s O ns \\<subseteq> s\" \"ns O s \\<subseteq> s\" \"refl ns\" \"trans s\" \"irrefl s\" \"trans ns\"\n  shows \"(X + Z, Y + Z) \\<in> mult2_s ns s \\<Longrightarrow> (X, Y) \\<in> mult2_ns ns s\"", "lemma mult2_altI:\n  assumes \"X = X1 + X2\" \"Y = Y1 + Y2\" \"(X1, Y1) \\<in> multpw ns\"\n    \"b \\<or> Y2 \\<noteq> {#}\" \"\\<forall>x. x \\<in># X2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\"\n  shows \"(X, Y) \\<in> mult2_alt b ns s\"", "lemma mult2_altE:\n  assumes \"(X, Y) \\<in> mult2_alt b ns s\"\n  obtains X1 X2 Y1 Y2 where \"X = X1 + X2\" \"Y = Y1 + Y2\" \"(X1, Y1) \\<in> multpw ns\"\n    \"b \\<or> Y2 \\<noteq> {#}\" \"\\<forall>x. x \\<in># X2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\"", "lemma mono_mult2_alt:\n  assumes \"ns \\<subseteq> ns'\" \"s \\<subseteq> s'\" shows \"mult2_alt b ns s \\<subseteq> mult2_alt b ns' s'\"", "lemmas mult2_alt_s_def = mult2_alt_def[where b = False, unfolded simp_thms]", "lemmas mult2_alt_ns_def = mult2_alt_def[where b = True, unfolded simp_thms]", "lemmas mult2_alt_sI = mult2_altI[where b = False, unfolded simp_thms]", "lemmas mult2_alt_nsI = mult2_altI[where b = True, unfolded simp_thms True_implies_equals]", "lemmas mult2_alt_sE = mult2_altE[where b = False, unfolded simp_thms]", "lemmas mult2_alt_nsE = mult2_altE[where b = True, unfolded simp_thms True_implies_equals]", "lemma mult2_s_eq_mult2_s_alt:\n  assumes \"ns O s \\<subseteq> s\" \"refl ns\" \"trans s\"\n  shows \"mult2_alt_s ns s = mult2_s ns s\"", "lemma mult2_ns_eq_mult2_ns_alt:\n  assumes \"ns O s \\<subseteq> s\" \"refl ns\" \"trans s\"\n  shows \"mult2_alt_ns ns s = mult2_ns ns s\"", "lemma mult2_alt_local:\n  assumes \"(X, Y) \\<in> mult2_alt b ns s\"\n  shows \"(X, Y) \\<in> mult2_alt b (ns \\<inter> set_mset X \\<times> set_mset Y) (s \\<inter> set_mset X \\<times> set_mset Y)\"", "lemma wf_below_UNIV[simp]:\n  shows \"wf_below r UNIV \\<longleftrightarrow> wf r\"", "lemma wf_below_mono1:\n  assumes \"r \\<subseteq> r'\" \"wf_below r' A\" shows \"wf_below r A\"", "lemma wf_below_mono2:\n  assumes \"A \\<subseteq> A'\" \"wf_below r A'\" shows \"wf_below r A\"", "lemma wf_below_pointwise:\n  \"wf_below r A \\<longleftrightarrow> (\\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a})\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma SN_on_Image_rtrancl_conv:\n  \"SN_on r A \\<longleftrightarrow> SN_on r (r\\<^sup>* `` A)\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma SN_on_iff_wf_below:\n  \"SN_on r A \\<longleftrightarrow> wf_below (r\\<inverse>) A\"", "lemma restr_trancl_under:\n  shows \"Restr (r\\<^sup>+) ((r\\<^sup>*)\\<inverse> `` A) = (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+\"", "lemma wf_below_trancl:\n  shows \"wf_below (r\\<^sup>+) A \\<longleftrightarrow> wf_below r A\"", "lemma wf_below_mult_local:\n  assumes \"wf_below r (set_mset X)\" shows \"wf_below (mult r) {X}\"", "lemma qc_wf_below:\n  assumes \"s O ns \\<subseteq> (s \\<union> ns)\\<^sup>* O s\" \"wf_below s A\"\n  shows \"wf_below (ns\\<^sup>* O s O ns\\<^sup>*) A\"", "lemma wf_below_mult2_s_local:\n  assumes \"wf_below s (set_mset X)\" \"s O ns \\<subseteq> s\" \"refl ns\" \"trans ns\"\n  shows \"wf_below (mult2_s ns s) {X}\"", "lemma mult2_alt_emptyL:\n  \"({#}, Y) \\<in> mult2_alt b ns s \\<longleftrightarrow> b \\<or> Y \\<noteq> {#}\"", "lemma mult2_alt_emptyR:\n  \"(X, {#}) \\<in> mult2_alt b ns s \\<longleftrightarrow> b \\<and> X = {#}\"", "lemma mult2_alt_s_single:\n  \"(a, b) \\<in> s \\<Longrightarrow> ({#a#}, {#b#}) \\<in> mult2_alt_s ns s\"", "lemma multpw_implies_mult2_alt_ns:\n  assumes \"(X, Y) \\<in> multpw ns\"\n  shows \"(X, Y) \\<in> mult2_alt_ns ns s\"", "lemma mult2_alt_ns_conv:\n  \"mult2_alt_ns ns s = mult2_alt_s ns s \\<union> multpw ns\" (is \"?l = ?r\")", "lemma mult2_alt_s_implies_mult2_alt_ns:\n  assumes \"(X, Y) \\<in> mult2_alt_s ns s\"\n  shows \"(X, Y) \\<in> mult2_alt_ns ns s\"", "lemma mult2_alt_add:\n  assumes \"(X1, Y1) \\<in> mult2_alt b1 ns s\" and \"(X2, Y2) \\<in> mult2_alt b2 ns s\"\n  shows \"(X1 + X2, Y1 + Y2) \\<in> mult2_alt (b1 \\<and> b2) ns s\"", "lemmas mult2_alt_s_s_add = mult2_alt_add[of _ _ False _ _ _ _ False, unfolded simp_thms]", "lemmas mult2_alt_ns_s_add = mult2_alt_add[of _ _ True _ _ _ _ False, unfolded simp_thms]", "lemmas mult2_alt_s_ns_add = mult2_alt_add[of _ _ False _ _ _ _ True, unfolded simp_thms]", "lemmas mult2_alt_ns_ns_add = mult2_alt_add[of _ _ True _ _ _ _ True, unfolded simp_thms]", "lemma multpw_map:\n  assumes \"\\<And>x y. x \\<in># X \\<Longrightarrow> y \\<in># Y \\<Longrightarrow> (x, y) \\<in> ns \\<Longrightarrow> (f x, g y) \\<in> ns'\"\n    and \"(X, Y) \\<in> multpw ns\"\n  shows \"(image_mset f X, image_mset g Y) \\<in> multpw ns'\"", "lemma mult2_alt_map:\n  assumes \"\\<And>x y. x \\<in># X \\<Longrightarrow> y \\<in># Y \\<Longrightarrow> (x, y) \\<in> ns \\<Longrightarrow> (f x, g y) \\<in> ns'\"\n    and \"\\<And>x y. x \\<in># X \\<Longrightarrow> y \\<in># Y \\<Longrightarrow> (x, y) \\<in> s \\<Longrightarrow> (f x, g y) \\<in> s'\"\n    and \"(X, Y) \\<in> mult2_alt b ns s\"\n  shows \"(image_mset f X, image_mset g Y) \\<in> mult2_alt b ns' s'\"", "lemma trans_mult2_alt_local:\n  assumes ss: \"\\<And>x y z. x \\<in># X \\<Longrightarrow> y \\<in># Y \\<Longrightarrow> z \\<in># Z \\<Longrightarrow> (x, y) \\<in> s \\<Longrightarrow> (y, z) \\<in> s \\<Longrightarrow> (x, z) \\<in> s\"\n    and ns: \"\\<And>x y z. x \\<in># X \\<Longrightarrow> y \\<in># Y \\<Longrightarrow> z \\<in># Z \\<Longrightarrow> (x, y) \\<in> ns \\<Longrightarrow> (y, z) \\<in> s \\<Longrightarrow> (x, z) \\<in> s\"\n    and sn: \"\\<And>x y z. x \\<in># X \\<Longrightarrow> y \\<in># Y \\<Longrightarrow> z \\<in># Z \\<Longrightarrow> (x, y) \\<in> s \\<Longrightarrow> (y, z) \\<in> ns \\<Longrightarrow> (x, z) \\<in> s\"\n    and nn: \"\\<And>x y z. x \\<in># X \\<Longrightarrow> y \\<in># Y \\<Longrightarrow> z \\<in># Z \\<Longrightarrow> (x, y) \\<in> ns \\<Longrightarrow> (y, z) \\<in> ns \\<Longrightarrow> (x, z) \\<in> ns\"\n    and xyz: \"(X, Y) \\<in> mult2_alt b1 ns s\" \"(Y, Z) \\<in> mult2_alt b2 ns s\"\n  shows \"(X, Z) \\<in> mult2_alt (b1 \\<and> b2) ns s\"", "lemmas trans_mult2_alt_s_s_local = trans_mult2_alt_local[of _ _ _ _ _ False False, unfolded simp_thms]", "lemmas trans_mult2_alt_ns_s_local = trans_mult2_alt_local[of _ _ _ _ _ True False, unfolded simp_thms]", "lemmas trans_mult2_alt_s_ns_local = trans_mult2_alt_local[of _ _ _ _ _ False True, unfolded simp_thms]", "lemmas trans_mult2_alt_ns_ns_local = trans_mult2_alt_local[of _ _ _ _ _ True True, unfolded simp_thms]"], "translations": [["", "lemma mult_locally_cancel:\n  assumes \"trans s \" and \"locally_irrefl s (X + Z)\" and \"locally_irrefl s (Y + Z)\"\n  shows \"(X + Z, Y + Z) \\<in> mult s \\<longleftrightarrow> (X, Y) \\<in> mult s\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((X + Z, Y + Z) \\<in> mult s) = ((X, Y) \\<in> mult s)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (X + Z, Y + Z) \\<in> mult s \\<Longrightarrow> (X, Y) \\<in> mult s\n 2. (X, Y) \\<in> mult s \\<Longrightarrow> (X + Z, Y + Z) \\<in> mult s", "assume ?L"], ["proof (state)\nthis:\n  (X + Z, Y + Z) \\<in> mult s\n\ngoal (2 subgoals):\n 1. (X + Z, Y + Z) \\<in> mult s \\<Longrightarrow> (X, Y) \\<in> mult s\n 2. (X, Y) \\<in> mult s \\<Longrightarrow> (X + Z, Y + Z) \\<in> mult s", "thus ?R"], ["proof (prove)\nusing this:\n  (X + Z, Y + Z) \\<in> mult s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult s", "using assms(2, 3)"], ["proof (prove)\nusing this:\n  (X + Z, Y + Z) \\<in> mult s\n  locally_irrefl s (X + Z)\n  locally_irrefl s (Y + Z)\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult s", "proof (induct Z arbitrary: X Y)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>X Y.\n       \\<lbrakk>(X + {#}, Y + {#}) \\<in> mult s; locally_irrefl s (X + {#});\n        locally_irrefl s (Y + {#})\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult s\n 2. \\<And>x Z X Y.\n       \\<lbrakk>\\<And>X Y.\n                   \\<lbrakk>(X + Z, Y + Z) \\<in> mult s;\n                    locally_irrefl s (X + Z);\n                    locally_irrefl s (Y + Z)\\<rbrakk>\n                   \\<Longrightarrow> (X, Y) \\<in> mult s;\n        (X + add_mset x Z, Y + add_mset x Z) \\<in> mult s;\n        locally_irrefl s (X + add_mset x Z);\n        locally_irrefl s (Y + add_mset x Z)\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult s", "case (add z Z)"], ["proof (state)\nthis:\n  \\<lbrakk>(?X + Z, ?Y + Z) \\<in> mult s; locally_irrefl s (?X + Z);\n   locally_irrefl s (?Y + Z)\\<rbrakk>\n  \\<Longrightarrow> (?X, ?Y) \\<in> mult s\n  (X + add_mset z Z, Y + add_mset z Z) \\<in> mult s\n  locally_irrefl s (X + add_mset z Z)\n  locally_irrefl s (Y + add_mset z Z)\n\ngoal (2 subgoals):\n 1. \\<And>X Y.\n       \\<lbrakk>(X + {#}, Y + {#}) \\<in> mult s; locally_irrefl s (X + {#});\n        locally_irrefl s (Y + {#})\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult s\n 2. \\<And>x Z X Y.\n       \\<lbrakk>\\<And>X Y.\n                   \\<lbrakk>(X + Z, Y + Z) \\<in> mult s;\n                    locally_irrefl s (X + Z);\n                    locally_irrefl s (Y + Z)\\<rbrakk>\n                   \\<Longrightarrow> (X, Y) \\<in> mult s;\n        (X + add_mset x Z, Y + add_mset x Z) \\<in> mult s;\n        locally_irrefl s (X + add_mset x Z);\n        locally_irrefl s (Y + add_mset x Z)\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult s", "obtain X' Y' Z' where *: \"add_mset z X + Z = Z' + X'\" \"add_mset z Y + Z = Z' + Y'\" \"Y' \\<noteq> {#}\"\n      \"\\<forall>x \\<in> set_mset X'. \\<exists>y \\<in> set_mset Y'. (x, y) \\<in> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Z' X' Y'.\n        \\<lbrakk>add_mset z X + Z = Z' + X'; add_mset z Y + Z = Z' + Y';\n         Y' \\<noteq> {#};\n         \\<forall>x\\<in>#X'. \\<exists>y\\<in>#Y'. (x, y) \\<in> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using mult_implies_one_step[OF \\<open>trans s\\<close> add(2)]"], ["proof (prove)\nusing this:\n  \\<exists>I J K.\n     Y + add_mset z Z = I + J \\<and>\n     X + add_mset z Z = I + K \\<and>\n     J \\<noteq> {#} \\<and>\n     (\\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> s)\n\ngoal (1 subgoal):\n 1. (\\<And>Z' X' Y'.\n        \\<lbrakk>add_mset z X + Z = Z' + X'; add_mset z Y + Z = Z' + Y';\n         Y' \\<noteq> {#};\n         \\<forall>x\\<in>#X'. \\<exists>y\\<in>#Y'. (x, y) \\<in> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  add_mset z X + Z = Z' + X'\n  add_mset z Y + Z = Z' + Y'\n  Y' \\<noteq> {#}\n  \\<forall>x\\<in>#X'. \\<exists>y\\<in>#Y'. (x, y) \\<in> s\n\ngoal (2 subgoals):\n 1. \\<And>X Y.\n       \\<lbrakk>(X + {#}, Y + {#}) \\<in> mult s; locally_irrefl s (X + {#});\n        locally_irrefl s (Y + {#})\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult s\n 2. \\<And>x Z X Y.\n       \\<lbrakk>\\<And>X Y.\n                   \\<lbrakk>(X + Z, Y + Z) \\<in> mult s;\n                    locally_irrefl s (X + Z);\n                    locally_irrefl s (Y + Z)\\<rbrakk>\n                   \\<Longrightarrow> (X, Y) \\<in> mult s;\n        (X + add_mset x Z, Y + add_mset x Z) \\<in> mult s;\n        locally_irrefl s (X + add_mset x Z);\n        locally_irrefl s (Y + add_mset x Z)\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult s", "consider Z2 where \"Z' = add_mset z Z2\" | X2 Y2 where \"X' = add_mset z X2\" \"Y' = add_mset z Y2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Z2. Z' = add_mset z Z2 \\<Longrightarrow> thesis;\n     \\<And>X2 Y2.\n        \\<lbrakk>X' = add_mset z X2; Y' = add_mset z Y2\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using *(1,2)"], ["proof (prove)\nusing this:\n  add_mset z X + Z = Z' + X'\n  add_mset z Y + Z = Z' + Y'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Z2. Z' = add_mset z Z2 \\<Longrightarrow> thesis;\n     \\<And>X2 Y2.\n        \\<lbrakk>X' = add_mset z X2; Y' = add_mset z Y2\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (metis add_mset_remove_trivial_If insert_iff set_mset_add_mset_insert union_iff)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>Z2. Z' = add_mset z Z2 \\<Longrightarrow> ?thesis;\n   \\<And>X2 Y2.\n      \\<lbrakk>X' = add_mset z X2; Y' = add_mset z Y2\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. \\<And>X Y.\n       \\<lbrakk>(X + {#}, Y + {#}) \\<in> mult s; locally_irrefl s (X + {#});\n        locally_irrefl s (Y + {#})\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult s\n 2. \\<And>x Z X Y.\n       \\<lbrakk>\\<And>X Y.\n                   \\<lbrakk>(X + Z, Y + Z) \\<in> mult s;\n                    locally_irrefl s (X + Z);\n                    locally_irrefl s (Y + Z)\\<rbrakk>\n                   \\<Longrightarrow> (X, Y) \\<in> mult s;\n        (X + add_mset x Z, Y + add_mset x Z) \\<in> mult s;\n        locally_irrefl s (X + add_mset x Z);\n        locally_irrefl s (Y + add_mset x Z)\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>Z2. Z' = add_mset z Z2 \\<Longrightarrow> ?thesis;\n   \\<And>X2 Y2.\n      \\<lbrakk>X' = add_mset z X2; Y' = add_mset z Y2\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult s", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Z2. Z' = add_mset z Z2 \\<Longrightarrow> (X, Y) \\<in> mult s\n 2. \\<And>X2 Y2.\n       \\<lbrakk>X' = add_mset z X2; Y' = add_mset z Y2\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult s", "case 1"], ["proof (state)\nthis:\n  Z' = add_mset z Z2\n\ngoal (2 subgoals):\n 1. \\<And>Z2. Z' = add_mset z Z2 \\<Longrightarrow> (X, Y) \\<in> mult s\n 2. \\<And>X2 Y2.\n       \\<lbrakk>X' = add_mset z X2; Y' = add_mset z Y2\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult s", "thus ?thesis"], ["proof (prove)\nusing this:\n  Z' = add_mset z Z2\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult s", "using * one_step_implies_mult[of Y' X' s Z2]"], ["proof (prove)\nusing this:\n  Z' = add_mset z Z2\n  add_mset z X + Z = Z' + X'\n  add_mset z Y + Z = Z' + Y'\n  Y' \\<noteq> {#}\n  \\<forall>x\\<in>#X'. \\<exists>y\\<in>#Y'. (x, y) \\<in> s\n  \\<lbrakk>Y' \\<noteq> {#};\n   \\<forall>k\\<in>#X'. \\<exists>j\\<in>#Y'. (k, j) \\<in> s\\<rbrakk>\n  \\<Longrightarrow> (Z2 + X', Z2 + Y') \\<in> mult s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult s", "by (auto simp: add.commute[of _ \"{#_#}\"] add.assoc intro: add(1))\n          (metis add.hyps add.prems(2) add.prems(3) add_mset_add_single li_trans_l union_mset_add_mset_right)"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult s\n\ngoal (1 subgoal):\n 1. \\<And>X2 Y2.\n       \\<lbrakk>X' = add_mset z X2; Y' = add_mset z Y2\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X2 Y2.\n       \\<lbrakk>X' = add_mset z X2; Y' = add_mset z Y2\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult s", "case 2"], ["proof (state)\nthis:\n  X' = add_mset z X2\n  Y' = add_mset z Y2\n\ngoal (1 subgoal):\n 1. \\<And>X2 Y2.\n       \\<lbrakk>X' = add_mset z X2; Y' = add_mset z Y2\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult s", "then"], ["proof (chain)\npicking this:\n  X' = add_mset z X2\n  Y' = add_mset z Y2", "obtain y where \"y \\<in> set_mset Y2\" \"(z, y) \\<in> s\""], ["proof (prove)\nusing this:\n  X' = add_mset z X2\n  Y' = add_mset z Y2\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in># Y2; (z, y) \\<in> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using *(4) add(3, 4)"], ["proof (prove)\nusing this:\n  X' = add_mset z X2\n  Y' = add_mset z Y2\n  \\<forall>x\\<in>#X'. \\<exists>y\\<in>#Y'. (x, y) \\<in> s\n  locally_irrefl s (X + add_mset z Z)\n  locally_irrefl s (Y + add_mset z Z)\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in># Y2; (z, y) \\<in> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: locally_irrefl_def)"], ["proof (state)\nthis:\n  y \\<in># Y2\n  (z, y) \\<in> s\n\ngoal (1 subgoal):\n 1. \\<And>X2 Y2.\n       \\<lbrakk>X' = add_mset z X2; Y' = add_mset z Y2\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult s", "moreover"], ["proof (state)\nthis:\n  y \\<in># Y2\n  (z, y) \\<in> s\n\ngoal (1 subgoal):\n 1. \\<And>X2 Y2.\n       \\<lbrakk>X' = add_mset z X2; Y' = add_mset z Y2\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult s", "from this transD[OF \\<open>trans s\\<close> _ this(2)]"], ["proof (chain)\npicking this:\n  y \\<in># Y2\n  (z, y) \\<in> s\n  (?x, z) \\<in> s \\<Longrightarrow> (?x, y) \\<in> s", "have \"x' \\<in> set_mset X2 \\<Longrightarrow> \\<exists>y \\<in> set_mset Y2. (x', y) \\<in> s\" for x'"], ["proof (prove)\nusing this:\n  y \\<in># Y2\n  (z, y) \\<in> s\n  (?x, z) \\<in> s \\<Longrightarrow> (?x, y) \\<in> s\n\ngoal (1 subgoal):\n 1. x' \\<in># X2 \\<Longrightarrow> \\<exists>y\\<in>#Y2. (x', y) \\<in> s", "using 2 *(4)[rule_format, of x']"], ["proof (prove)\nusing this:\n  y \\<in># Y2\n  (z, y) \\<in> s\n  (?x, z) \\<in> s \\<Longrightarrow> (?x, y) \\<in> s\n  X' = add_mset z X2\n  Y' = add_mset z Y2\n  x' \\<in># X' \\<Longrightarrow> \\<exists>y\\<in>#Y'. (x', y) \\<in> s\n\ngoal (1 subgoal):\n 1. x' \\<in># X2 \\<Longrightarrow> \\<exists>y\\<in>#Y2. (x', y) \\<in> s", "by auto"], ["proof (state)\nthis:\n  ?x' \\<in># X2 \\<Longrightarrow> \\<exists>y\\<in>#Y2. (?x', y) \\<in> s\n\ngoal (1 subgoal):\n 1. \\<And>X2 Y2.\n       \\<lbrakk>X' = add_mset z X2; Y' = add_mset z Y2\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult s", "ultimately"], ["proof (chain)\npicking this:\n  y \\<in># Y2\n  (z, y) \\<in> s\n  ?x' \\<in># X2 \\<Longrightarrow> \\<exists>y\\<in>#Y2. (?x', y) \\<in> s", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<in># Y2\n  (z, y) \\<in> s\n  ?x' \\<in># X2 \\<Longrightarrow> \\<exists>y\\<in>#Y2. (?x', y) \\<in> s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult s", "using  * one_step_implies_mult[of Y2 X2 s Z'] 2 add(3, 4)"], ["proof (prove)\nusing this:\n  y \\<in># Y2\n  (z, y) \\<in> s\n  ?x' \\<in># X2 \\<Longrightarrow> \\<exists>y\\<in>#Y2. (?x', y) \\<in> s\n  add_mset z X + Z = Z' + X'\n  add_mset z Y + Z = Z' + Y'\n  Y' \\<noteq> {#}\n  \\<forall>x\\<in>#X'. \\<exists>y\\<in>#Y'. (x, y) \\<in> s\n  \\<lbrakk>Y2 \\<noteq> {#};\n   \\<forall>k\\<in>#X2. \\<exists>j\\<in>#Y2. (k, j) \\<in> s\\<rbrakk>\n  \\<Longrightarrow> (Z' + X2, Z' + Y2) \\<in> mult s\n  X' = add_mset z X2\n  Y' = add_mset z Y2\n  locally_irrefl s (X + add_mset z Z)\n  locally_irrefl s (Y + add_mset z Z)\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult s", "by (force simp: locally_irrefl_def add.commute[of \"{#_#}\"] add.assoc[symmetric] intro: add(1))"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult s\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>(X + {#}, Y + {#}) \\<in> mult s; locally_irrefl s (X + {#});\n        locally_irrefl s (Y + {#})\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult s", "qed auto"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult s \\<Longrightarrow> (X + Z, Y + Z) \\<in> mult s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult s \\<Longrightarrow> (X + Z, Y + Z) \\<in> mult s", "assume ?R"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult s \\<Longrightarrow> (X + Z, Y + Z) \\<in> mult s", "then"], ["proof (chain)\npicking this:\n  (X, Y) \\<in> mult s", "obtain I J K\n    where \"Y = I + J\" \"X = I + K\" \"J \\<noteq> {#}\" \"\\<forall>k \\<in> set_mset K. \\<exists>j \\<in> set_mset J. (k, j) \\<in> s\""], ["proof (prove)\nusing this:\n  (X, Y) \\<in> mult s\n\ngoal (1 subgoal):\n 1. (\\<And>I J K.\n        \\<lbrakk>Y = I + J; X = I + K; J \\<noteq> {#};\n         \\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using mult_implies_one_step[OF \\<open>trans s\\<close>]"], ["proof (prove)\nusing this:\n  (X, Y) \\<in> mult s\n  (?M, ?N) \\<in> mult s \\<Longrightarrow>\n  \\<exists>I J K.\n     ?N = I + J \\<and>\n     ?M = I + K \\<and>\n     J \\<noteq> {#} \\<and>\n     (\\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> s)\n\ngoal (1 subgoal):\n 1. (\\<And>I J K.\n        \\<lbrakk>Y = I + J; X = I + K; J \\<noteq> {#};\n         \\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Y = I + J\n  X = I + K\n  J \\<noteq> {#}\n  \\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult s \\<Longrightarrow> (X + Z, Y + Z) \\<in> mult s", "thus ?L"], ["proof (prove)\nusing this:\n  Y = I + J\n  X = I + K\n  J \\<noteq> {#}\n  \\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> s\n\ngoal (1 subgoal):\n 1. (X + Z, Y + Z) \\<in> mult s", "using one_step_implies_mult[of J K s \"I + Z\"]"], ["proof (prove)\nusing this:\n  Y = I + J\n  X = I + K\n  J \\<noteq> {#}\n  \\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> s\n  \\<lbrakk>J \\<noteq> {#};\n   \\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> s\\<rbrakk>\n  \\<Longrightarrow> (I + Z + K, I + Z + J) \\<in> mult s\n\ngoal (1 subgoal):\n 1. (X + Z, Y + Z) \\<in> mult s", "by (auto simp: ac_simps)"], ["proof (state)\nthis:\n  (X + Z, Y + Z) \\<in> mult s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mult_locally_cancelL:\n  assumes \"trans s\" \"locally_irrefl s (X + Z)\" \"locally_irrefl s (Y + Z)\"\n  shows \"(Z + X, Z + Y) \\<in> mult s \\<longleftrightarrow> (X, Y) \\<in> mult s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((Z + X, Z + Y) \\<in> mult s) = ((X, Y) \\<in> mult s)", "using mult_locally_cancel[OF assms]"], ["proof (prove)\nusing this:\n  ((X + Z, Y + Z) \\<in> mult s) = ((X, Y) \\<in> mult s)\n\ngoal (1 subgoal):\n 1. ((Z + X, Z + Y) \\<in> mult s) = ((X, Y) \\<in> mult s)", "by (simp only: union_commute)"], ["", "lemma mult_cancelL:\n  assumes \"trans s\" \"irrefl s\" shows \"(Z + X, Z + Y) \\<in> mult s \\<longleftrightarrow> (X, Y) \\<in> mult s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((Z + X, Z + Y) \\<in> mult s) = ((X, Y) \\<in> mult s)", "using assms mult_locally_cancelL"], ["proof (prove)\nusing this:\n  trans s\n  irrefl s\n  \\<lbrakk>trans ?s; locally_irrefl ?s (?X + ?Z);\n   locally_irrefl ?s (?Y + ?Z)\\<rbrakk>\n  \\<Longrightarrow> ((?Z + ?X, ?Z + ?Y) \\<in> mult ?s) =\n                    ((?X, ?Y) \\<in> mult ?s)\n\ngoal (1 subgoal):\n 1. ((Z + X, Z + Y) \\<in> mult s) = ((X, Y) \\<in> mult s)", "by (simp add: mult_cancel union_commute)"], ["", "lemma wf_trancl_conv:\n  shows \"wf (r\\<^sup>+) \\<longleftrightarrow> wf r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf (r\\<^sup>+) = wf r", "using wf_subset[of \"r\\<^sup>+\" r]"], ["proof (prove)\nusing this:\n  \\<lbrakk>wf (r\\<^sup>+); r \\<subseteq> r\\<^sup>+\\<rbrakk>\n  \\<Longrightarrow> wf r\n\ngoal (1 subgoal):\n 1. wf (r\\<^sup>+) = wf r", "by (force simp: wf_trancl)"], ["", "subsection \\<open>Pointwise multiset order\\<close>"], ["", "inductive_set multpw :: \"'a rel \\<Rightarrow> 'a multiset rel\" for ns :: \"'a rel\" where\n  empty: \"({#}, {#}) \\<in> multpw ns\"\n| add: \"(x, y) \\<in> ns \\<Longrightarrow> (X, Y) \\<in> multpw ns \\<Longrightarrow> (add_mset x X, add_mset y Y) \\<in> multpw ns\""], ["", "lemma multpw_emptyL [simp]:\n  \"({#}, X) \\<in> multpw ns \\<longleftrightarrow> X = {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (({#}, X) \\<in> multpw ns) = (X = {#})", "by (cases X) (auto elim: multpw.cases intro: multpw.intros)"], ["", "lemma multpw_emptyR [simp]:\n  \"(X, {#}) \\<in> multpw ns \\<longleftrightarrow> X = {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((X, {#}) \\<in> multpw ns) = (X = {#})", "by (cases X) (auto elim: multpw.cases intro: multpw.intros)"], ["", "lemma refl_multpw:\n  assumes \"refl ns\" shows \"refl (multpw ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl (multpw ns)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. refl (multpw ns)", "have \"(X, X) \\<in> multpw ns\" for X"], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, X) \\<in> multpw ns", "using assms"], ["proof (prove)\nusing this:\n  refl ns\n\ngoal (1 subgoal):\n 1. (X, X) \\<in> multpw ns", "by (induct X) (auto intro: multpw.intros simp: refl_on_def)"], ["proof (state)\nthis:\n  (?X, ?X) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. refl (multpw ns)", "then"], ["proof (chain)\npicking this:\n  (?X, ?X) \\<in> multpw ns", "show ?thesis"], ["proof (prove)\nusing this:\n  (?X, ?X) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. refl (multpw ns)", "by (auto simp: refl_on_def)"], ["proof (state)\nthis:\n  refl (multpw ns)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma multpw_Id_Id [simp]:\n  \"multpw Id = Id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. multpw Id = Id", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. multpw Id = Id", "have \"(X, Y) \\<in> multpw (Id :: 'a rel) \\<Longrightarrow> X = Y\" for X Y"], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw Id \\<Longrightarrow> X = Y", "by (induct X Y rule: multpw.induct) auto"], ["proof (state)\nthis:\n  (?X, ?Y) \\<in> multpw Id \\<Longrightarrow> ?X = ?Y\n\ngoal (1 subgoal):\n 1. multpw Id = Id", "then"], ["proof (chain)\npicking this:\n  (?X, ?Y) \\<in> multpw Id \\<Longrightarrow> ?X = ?Y", "show ?thesis"], ["proof (prove)\nusing this:\n  (?X, ?Y) \\<in> multpw Id \\<Longrightarrow> ?X = ?Y\n\ngoal (1 subgoal):\n 1. multpw Id = Id", "using refl_multpw[of Id]"], ["proof (prove)\nusing this:\n  (?X, ?Y) \\<in> multpw Id \\<Longrightarrow> ?X = ?Y\n  refl Id \\<Longrightarrow> refl (multpw Id)\n\ngoal (1 subgoal):\n 1. multpw Id = Id", "by (auto simp: refl_on_def)"], ["proof (state)\nthis:\n  multpw Id = Id\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mono_multpw:\n  assumes \"ns \\<subseteq> ns'\" shows \"multpw ns \\<subseteq> multpw ns'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. multpw ns \\<subseteq> multpw ns'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. multpw ns \\<subseteq> multpw ns'", "have \"(X, Y) \\<in> multpw ns \\<Longrightarrow> (X, Y) \\<in> multpw ns'\" for X Y"], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw ns \\<Longrightarrow> (X, Y) \\<in> multpw ns'", "by (induct X Y rule: multpw.induct) (insert assms, auto intro: multpw.intros)"], ["proof (state)\nthis:\n  (?X, ?Y) \\<in> multpw ns \\<Longrightarrow> (?X, ?Y) \\<in> multpw ns'\n\ngoal (1 subgoal):\n 1. multpw ns \\<subseteq> multpw ns'", "then"], ["proof (chain)\npicking this:\n  (?X, ?Y) \\<in> multpw ns \\<Longrightarrow> (?X, ?Y) \\<in> multpw ns'", "show ?thesis"], ["proof (prove)\nusing this:\n  (?X, ?Y) \\<in> multpw ns \\<Longrightarrow> (?X, ?Y) \\<in> multpw ns'\n\ngoal (1 subgoal):\n 1. multpw ns \\<subseteq> multpw ns'", "by auto"], ["proof (state)\nthis:\n  multpw ns \\<subseteq> multpw ns'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma multpw_converse:\n  \"multpw (ns\\<inverse>) = (multpw ns)\\<inverse>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. multpw (ns\\<inverse>) = (multpw ns)\\<inverse>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. multpw (ns\\<inverse>) = (multpw ns)\\<inverse>", "have \"(X, Y) \\<in> multpw (ns\\<inverse>) \\<Longrightarrow> (X, Y) \\<in> (multpw ns)\\<inverse>\" for X Y and ns :: \"'a rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw (ns\\<inverse>) \\<Longrightarrow>\n    (X, Y) \\<in> (multpw ns)\\<inverse>", "by (induct X Y rule: multpw.induct) (auto intro: multpw.intros)"], ["proof (state)\nthis:\n  (?X, ?Y) \\<in> multpw (?ns\\<inverse>) \\<Longrightarrow>\n  (?X, ?Y) \\<in> (multpw ?ns)\\<inverse>\n\ngoal (1 subgoal):\n 1. multpw (ns\\<inverse>) = (multpw ns)\\<inverse>", "then"], ["proof (chain)\npicking this:\n  (?X, ?Y) \\<in> multpw (?ns\\<inverse>) \\<Longrightarrow>\n  (?X, ?Y) \\<in> (multpw ?ns)\\<inverse>", "show ?thesis"], ["proof (prove)\nusing this:\n  (?X, ?Y) \\<in> multpw (?ns\\<inverse>) \\<Longrightarrow>\n  (?X, ?Y) \\<in> (multpw ?ns)\\<inverse>\n\ngoal (1 subgoal):\n 1. multpw (ns\\<inverse>) = (multpw ns)\\<inverse>", "by auto"], ["proof (state)\nthis:\n  multpw (ns\\<inverse>) = (multpw ns)\\<inverse>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma multpw_local:\n  \"(X, Y) \\<in> multpw ns \\<Longrightarrow> (X, Y) \\<in> multpw (ns \\<inter> set_mset X \\<times> set_mset Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw ns \\<Longrightarrow>\n    (X, Y) \\<in> multpw (ns \\<inter> set_mset X \\<times> set_mset Y)", "proof (induct X Y rule: multpw.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. ({#}, {#}) \\<in> multpw (Restr ns (set_mset {#}))\n 2. \\<And>x y X Y.\n       \\<lbrakk>(x, y) \\<in> ns; (X, Y) \\<in> multpw ns;\n        (X, Y)\n        \\<in> multpw (ns \\<inter> set_mset X \\<times> set_mset Y)\\<rbrakk>\n       \\<Longrightarrow> (add_mset x X, add_mset y Y)\n                         \\<in> multpw\n                                (ns \\<inter>\n                                 set_mset (add_mset x X) \\<times>\n                                 set_mset (add_mset y Y))", "case (add x y X Y)"], ["proof (state)\nthis:\n  (x, y) \\<in> ns\n  (X, Y) \\<in> multpw ns\n  (X, Y) \\<in> multpw (ns \\<inter> set_mset X \\<times> set_mset Y)\n\ngoal (2 subgoals):\n 1. ({#}, {#}) \\<in> multpw (Restr ns (set_mset {#}))\n 2. \\<And>x y X Y.\n       \\<lbrakk>(x, y) \\<in> ns; (X, Y) \\<in> multpw ns;\n        (X, Y)\n        \\<in> multpw (ns \\<inter> set_mset X \\<times> set_mset Y)\\<rbrakk>\n       \\<Longrightarrow> (add_mset x X, add_mset y Y)\n                         \\<in> multpw\n                                (ns \\<inter>\n                                 set_mset (add_mset x X) \\<times>\n                                 set_mset (add_mset y Y))", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<in> ns\n  (X, Y) \\<in> multpw ns\n  (X, Y) \\<in> multpw (ns \\<inter> set_mset X \\<times> set_mset Y)", "show ?case"], ["proof (prove)\nusing this:\n  (x, y) \\<in> ns\n  (X, Y) \\<in> multpw ns\n  (X, Y) \\<in> multpw (ns \\<inter> set_mset X \\<times> set_mset Y)\n\ngoal (1 subgoal):\n 1. (add_mset x X, add_mset y Y)\n    \\<in> multpw\n           (ns \\<inter>\n            set_mset (add_mset x X) \\<times> set_mset (add_mset y Y))", "using mono_multpw[of \"ns \\<inter> set_mset X \\<times> set_mset Y\" \"ns \\<inter> insert x (set_mset X) \\<times> insert y (set_mset Y)\"]"], ["proof (prove)\nusing this:\n  (x, y) \\<in> ns\n  (X, Y) \\<in> multpw ns\n  (X, Y) \\<in> multpw (ns \\<inter> set_mset X \\<times> set_mset Y)\n  ns \\<inter> set_mset X \\<times> set_mset Y\n  \\<subseteq> ns \\<inter>\n              insert x (set_mset X) \\<times>\n              insert y (set_mset Y) \\<Longrightarrow>\n  multpw (ns \\<inter> set_mset X \\<times> set_mset Y)\n  \\<subseteq> multpw\n               (ns \\<inter>\n                insert x (set_mset X) \\<times> insert y (set_mset Y))\n\ngoal (1 subgoal):\n 1. (add_mset x X, add_mset y Y)\n    \\<in> multpw\n           (ns \\<inter>\n            set_mset (add_mset x X) \\<times> set_mset (add_mset y Y))", "by (auto intro: multpw.intros)"], ["proof (state)\nthis:\n  (add_mset x X, add_mset y Y)\n  \\<in> multpw\n         (ns \\<inter>\n          set_mset (add_mset x X) \\<times> set_mset (add_mset y Y))\n\ngoal (1 subgoal):\n 1. ({#}, {#}) \\<in> multpw (Restr ns (set_mset {#}))", "qed auto"], ["", "lemma multpw_split1R:\n  assumes \"(add_mset x X, Y) \\<in> multpw ns\"\n  obtains z Z where \"Y = add_mset z Z\" and \"(x, z) \\<in> ns\" and \"(X, Z) \\<in> multpw ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z Z.\n        \\<lbrakk>Y = add_mset z Z; (x, z) \\<in> ns;\n         (X, Z) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  (add_mset x X, Y) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (\\<And>z Z.\n        \\<lbrakk>Y = add_mset z Z; (x, z) \\<in> ns;\n         (X, Z) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (induct  \"add_mset x X\" Y arbitrary: X thesis rule: multpw.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>X thesis.\n       \\<lbrakk>{#} = add_mset x X;\n        \\<And>z Z.\n           \\<lbrakk>{#} = add_mset z Z; (x, z) \\<in> ns;\n            (X, Z) \\<in> multpw ns\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>xa y X Y Xa thesis.\n       \\<lbrakk>(xa, y) \\<in> ns; (X, Y) \\<in> multpw ns;\n        \\<And>Xa thesis.\n           \\<lbrakk>X = add_mset x Xa;\n            \\<And>z Z.\n               \\<lbrakk>Y = add_mset z Z; (x, z) \\<in> ns;\n                (Xa, Z) \\<in> multpw ns\\<rbrakk>\n               \\<Longrightarrow> thesis\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        add_mset xa X = add_mset x Xa;\n        \\<And>z Z.\n           \\<lbrakk>add_mset y Y = add_mset z Z; (x, z) \\<in> ns;\n            (Xa, Z) \\<in> multpw ns\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (add x' y' X' Y')"], ["proof (state)\nthis:\n  (x', y') \\<in> ns\n  (X', Y') \\<in> multpw ns\n  \\<lbrakk>X' = add_mset x ?X;\n   \\<And>z Z.\n      \\<lbrakk>Y' = add_mset z Z; (x, z) \\<in> ns;\n       (?X, Z) \\<in> multpw ns\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  add_mset x' X' = add_mset x X\n  \\<lbrakk>add_mset y' Y' = add_mset ?z ?Z; (x, ?z) \\<in> ns;\n   (X, ?Z) \\<in> multpw ns\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (2 subgoals):\n 1. \\<And>X thesis.\n       \\<lbrakk>{#} = add_mset x X;\n        \\<And>z Z.\n           \\<lbrakk>{#} = add_mset z Z; (x, z) \\<in> ns;\n            (X, Z) \\<in> multpw ns\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>xa y X Y Xa thesis.\n       \\<lbrakk>(xa, y) \\<in> ns; (X, Y) \\<in> multpw ns;\n        \\<And>Xa thesis.\n           \\<lbrakk>X = add_mset x Xa;\n            \\<And>z Z.\n               \\<lbrakk>Y = add_mset z Z; (x, z) \\<in> ns;\n                (Xa, Z) \\<in> multpw ns\\<rbrakk>\n               \\<Longrightarrow> thesis\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        add_mset xa X = add_mset x Xa;\n        \\<And>z Z.\n           \\<lbrakk>add_mset y Y = add_mset z Z; (x, z) \\<in> ns;\n            (Xa, Z) \\<in> multpw ns\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  (x', y') \\<in> ns\n  (X', Y') \\<in> multpw ns\n  \\<lbrakk>X' = add_mset x ?X;\n   \\<And>z Z.\n      \\<lbrakk>Y' = add_mset z Z; (x, z) \\<in> ns;\n       (?X, Z) \\<in> multpw ns\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  add_mset x' X' = add_mset x X\n  \\<lbrakk>add_mset y' Y' = add_mset ?z ?Z; (x, ?z) \\<in> ns;\n   (X, ?Z) \\<in> multpw ns\\<rbrakk>\n  \\<Longrightarrow> thesis", "show ?case"], ["proof (prove)\nusing this:\n  (x', y') \\<in> ns\n  (X', Y') \\<in> multpw ns\n  \\<lbrakk>X' = add_mset x ?X;\n   \\<And>z Z.\n      \\<lbrakk>Y' = add_mset z Z; (x, z) \\<in> ns;\n       (?X, Z) \\<in> multpw ns\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  add_mset x' X' = add_mset x X\n  \\<lbrakk>add_mset y' Y' = add_mset ?z ?Z; (x, ?z) \\<in> ns;\n   (X, ?Z) \\<in> multpw ns\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "proof (cases \"x = x'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>(x', y') \\<in> ns; (X', Y') \\<in> multpw ns;\n     \\<And>X thesis.\n        \\<lbrakk>X' = add_mset x X;\n         \\<And>z Z.\n            \\<lbrakk>Y' = add_mset z Z; (x, z) \\<in> ns;\n             (X, Z) \\<in> multpw ns\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     add_mset x' X' = add_mset x X;\n     \\<And>z Z.\n        \\<lbrakk>add_mset y' Y' = add_mset z Z; (x, z) \\<in> ns;\n         (X, Z) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     x = x'\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>(x', y') \\<in> ns; (X', Y') \\<in> multpw ns;\n     \\<And>X thesis.\n        \\<lbrakk>X' = add_mset x X;\n         \\<And>z Z.\n            \\<lbrakk>Y' = add_mset z Z; (x, z) \\<in> ns;\n             (X, Z) \\<in> multpw ns\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     add_mset x' X' = add_mset x X;\n     \\<And>z Z.\n        \\<lbrakk>add_mset y' Y' = add_mset z Z; (x, z) \\<in> ns;\n         (X, Z) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     x \\<noteq> x'\\<rbrakk>\n    \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  x \\<noteq> x'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(x', y') \\<in> ns; (X', Y') \\<in> multpw ns;\n     \\<And>X thesis.\n        \\<lbrakk>X' = add_mset x X;\n         \\<And>z Z.\n            \\<lbrakk>Y' = add_mset z Z; (x, z) \\<in> ns;\n             (X, Z) \\<in> multpw ns\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     add_mset x' X' = add_mset x X;\n     \\<And>z Z.\n        \\<lbrakk>add_mset y' Y' = add_mset z Z; (x, z) \\<in> ns;\n         (X, Z) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     x = x'\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>(x', y') \\<in> ns; (X', Y') \\<in> multpw ns;\n     \\<And>X thesis.\n        \\<lbrakk>X' = add_mset x X;\n         \\<And>z Z.\n            \\<lbrakk>Y' = add_mset z Z; (x, z) \\<in> ns;\n             (X, Z) \\<in> multpw ns\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     add_mset x' X' = add_mset x X;\n     \\<And>z Z.\n        \\<lbrakk>add_mset y' Y' = add_mset z Z; (x, z) \\<in> ns;\n         (X, Z) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     x \\<noteq> x'\\<rbrakk>\n    \\<Longrightarrow> thesis", "obtain X'' where [simp]: \"X = add_mset x' X''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X''.\n        X = add_mset x' X'' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using add(4) False"], ["proof (prove)\nusing this:\n  add_mset x' X' = add_mset x X\n  x \\<noteq> x'\n\ngoal (1 subgoal):\n 1. (\\<And>X''.\n        X = add_mset x' X'' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis add_eq_conv_diff)"], ["proof (state)\nthis:\n  X = add_mset x' X''\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(x', y') \\<in> ns; (X', Y') \\<in> multpw ns;\n     \\<And>X thesis.\n        \\<lbrakk>X' = add_mset x X;\n         \\<And>z Z.\n            \\<lbrakk>Y' = add_mset z Z; (x, z) \\<in> ns;\n             (X, Z) \\<in> multpw ns\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     add_mset x' X' = add_mset x X;\n     \\<And>z Z.\n        \\<lbrakk>add_mset y' Y' = add_mset z Z; (x, z) \\<in> ns;\n         (X, Z) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     x = x'\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>(x', y') \\<in> ns; (X', Y') \\<in> multpw ns;\n     \\<And>X thesis.\n        \\<lbrakk>X' = add_mset x X;\n         \\<And>z Z.\n            \\<lbrakk>Y' = add_mset z Z; (x, z) \\<in> ns;\n             (X, Z) \\<in> multpw ns\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     add_mset x' X' = add_mset x X;\n     \\<And>z Z.\n        \\<lbrakk>add_mset y' Y' = add_mset z Z; (x, z) \\<in> ns;\n         (X, Z) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     x \\<noteq> x'\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"X' = add_mset x X''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X' = add_mset x X''", "using add(4)"], ["proof (prove)\nusing this:\n  add_mset x' X' = add_mset x X\n\ngoal (1 subgoal):\n 1. X' = add_mset x X''", "by (auto simp: add_eq_conv_ex)"], ["proof (state)\nthis:\n  X' = add_mset x X''\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(x', y') \\<in> ns; (X', Y') \\<in> multpw ns;\n     \\<And>X thesis.\n        \\<lbrakk>X' = add_mset x X;\n         \\<And>z Z.\n            \\<lbrakk>Y' = add_mset z Z; (x, z) \\<in> ns;\n             (X, Z) \\<in> multpw ns\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     add_mset x' X' = add_mset x X;\n     \\<And>z Z.\n        \\<lbrakk>add_mset y' Y' = add_mset z Z; (x, z) \\<in> ns;\n         (X, Z) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     x = x'\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>(x', y') \\<in> ns; (X', Y') \\<in> multpw ns;\n     \\<And>X thesis.\n        \\<lbrakk>X' = add_mset x X;\n         \\<And>z Z.\n            \\<lbrakk>Y' = add_mset z Z; (x, z) \\<in> ns;\n             (X, Z) \\<in> multpw ns\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     add_mset x' X' = add_mset x X;\n     \\<And>z Z.\n        \\<lbrakk>add_mset y' Y' = add_mset z Z; (x, z) \\<in> ns;\n         (X, Z) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     x \\<noteq> x'\\<rbrakk>\n    \\<Longrightarrow> thesis", "with add(2)"], ["proof (chain)\npicking this:\n  (X', Y') \\<in> multpw ns\n  X' = add_mset x X''", "obtain Y'' y where \"Y' = add_mset y Y''\" \"(x,y) \\<in> ns\" \"(X'', Y'') \\<in> multpw ns\""], ["proof (prove)\nusing this:\n  (X', Y') \\<in> multpw ns\n  X' = add_mset x X''\n\ngoal (1 subgoal):\n 1. (\\<And>y Y''.\n        \\<lbrakk>Y' = add_mset y Y''; (x, y) \\<in> ns;\n         (X'', Y'') \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto intro: add(3))"], ["proof (state)\nthis:\n  Y' = add_mset y Y''\n  (x, y) \\<in> ns\n  (X'', Y'') \\<in> multpw ns\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(x', y') \\<in> ns; (X', Y') \\<in> multpw ns;\n     \\<And>X thesis.\n        \\<lbrakk>X' = add_mset x X;\n         \\<And>z Z.\n            \\<lbrakk>Y' = add_mset z Z; (x, z) \\<in> ns;\n             (X, Z) \\<in> multpw ns\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     add_mset x' X' = add_mset x X;\n     \\<And>z Z.\n        \\<lbrakk>add_mset y' Y' = add_mset z Z; (x, z) \\<in> ns;\n         (X, Z) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     x = x'\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>(x', y') \\<in> ns; (X', Y') \\<in> multpw ns;\n     \\<And>X thesis.\n        \\<lbrakk>X' = add_mset x X;\n         \\<And>z Z.\n            \\<lbrakk>Y' = add_mset z Z; (x, z) \\<in> ns;\n             (X, Z) \\<in> multpw ns\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     add_mset x' X' = add_mset x X;\n     \\<And>z Z.\n        \\<lbrakk>add_mset y' Y' = add_mset z Z; (x, z) \\<in> ns;\n         (X, Z) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     x \\<noteq> x'\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  Y' = add_mset y Y''\n  (x, y) \\<in> ns\n  (X'', Y'') \\<in> multpw ns", "show ?thesis"], ["proof (prove)\nusing this:\n  Y' = add_mset y Y''\n  (x, y) \\<in> ns\n  (X'', Y'') \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. thesis", "using add(1) add(5)[of y \"add_mset y' Y''\"]"], ["proof (prove)\nusing this:\n  Y' = add_mset y Y''\n  (x, y) \\<in> ns\n  (X'', Y'') \\<in> multpw ns\n  (x', y') \\<in> ns\n  \\<lbrakk>add_mset y' Y' = add_mset y (add_mset y' Y''); (x, y) \\<in> ns;\n   (X, add_mset y' Y'') \\<in> multpw ns\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by (auto simp: ac_simps intro: multpw.intros)"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x', y') \\<in> ns; (X', Y') \\<in> multpw ns;\n     \\<And>X thesis.\n        \\<lbrakk>X' = add_mset x X;\n         \\<And>z Z.\n            \\<lbrakk>Y' = add_mset z Z; (x, z) \\<in> ns;\n             (X, Z) \\<in> multpw ns\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     add_mset x' X' = add_mset x X;\n     \\<And>z Z.\n        \\<lbrakk>add_mset y' Y' = add_mset z Z; (x, z) \\<in> ns;\n         (X, Z) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     x = x'\\<rbrakk>\n    \\<Longrightarrow> thesis", "qed auto"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>X thesis.\n       \\<lbrakk>{#} = add_mset x X;\n        \\<And>z Z.\n           \\<lbrakk>{#} = add_mset z Z; (x, z) \\<in> ns;\n            (X, Z) \\<in> multpw ns\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed auto"], ["", "lemma multpw_splitR:\n  assumes \"(X1 + X2, Y) \\<in> multpw ns\"\n  obtains Y1 Y2 where \"Y = Y1 + Y2\" and \"(X1, Y1) \\<in> multpw ns\" and \"(X2, Y2) \\<in> multpw ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Y1 Y2.\n        \\<lbrakk>Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n         (X2, Y2) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  (X1 + X2, Y) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (\\<And>Y1 Y2.\n        \\<lbrakk>Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n         (X2, Y2) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (induct X2 arbitrary: Y thesis)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Y thesis.\n       \\<lbrakk>\\<And>Y1 Y2.\n                   \\<lbrakk>Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n                    ({#}, Y2) \\<in> multpw ns\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (X1 + {#}, Y) \\<in> multpw ns\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x X2 Y thesis.\n       \\<lbrakk>\\<And>Y thesis.\n                   \\<lbrakk>\\<And>Y1 Y2.\n                               \\<lbrakk>Y = Y1 + Y2;\n                                (X1, Y1) \\<in> multpw ns;\n                                (X2, Y2) \\<in> multpw ns\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    (X1 + X2, Y) \\<in> multpw ns\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>Y1 Y2.\n           \\<lbrakk>Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n            (add_mset x X2, Y2) \\<in> multpw ns\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        (X1 + add_mset x X2, Y) \\<in> multpw ns\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (add x2 X2)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>Y1 Y2.\n              \\<lbrakk>?Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n               (X2, Y2) \\<in> multpw ns\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   (X1 + X2, ?Y) \\<in> multpw ns\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>Y = ?Y1.0 + ?Y2.0; (X1, ?Y1.0) \\<in> multpw ns;\n   (add_mset x2 X2, ?Y2.0) \\<in> multpw ns\\<rbrakk>\n  \\<Longrightarrow> thesis\n  (X1 + add_mset x2 X2, Y) \\<in> multpw ns\n\ngoal (2 subgoals):\n 1. \\<And>Y thesis.\n       \\<lbrakk>\\<And>Y1 Y2.\n                   \\<lbrakk>Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n                    ({#}, Y2) \\<in> multpw ns\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (X1 + {#}, Y) \\<in> multpw ns\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x X2 Y thesis.\n       \\<lbrakk>\\<And>Y thesis.\n                   \\<lbrakk>\\<And>Y1 Y2.\n                               \\<lbrakk>Y = Y1 + Y2;\n                                (X1, Y1) \\<in> multpw ns;\n                                (X2, Y2) \\<in> multpw ns\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    (X1 + X2, Y) \\<in> multpw ns\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>Y1 Y2.\n           \\<lbrakk>Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n            (add_mset x X2, Y2) \\<in> multpw ns\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        (X1 + add_mset x X2, Y) \\<in> multpw ns\\<rbrakk>\n       \\<Longrightarrow> thesis", "from add(3)"], ["proof (chain)\npicking this:\n  (X1 + add_mset x2 X2, Y) \\<in> multpw ns", "obtain Y' y2 where \"(X1 + X2, Y') \\<in> multpw ns\" \"(x2, y2) \\<in> ns\" \"Y = add_mset y2 Y'\""], ["proof (prove)\nusing this:\n  (X1 + add_mset x2 X2, Y) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (\\<And>Y' y2.\n        \\<lbrakk>(X1 + X2, Y') \\<in> multpw ns; (x2, y2) \\<in> ns;\n         Y = add_mset y2 Y'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: multpw_split1R simp: union_assoc[symmetric])"], ["proof (state)\nthis:\n  (X1 + X2, Y') \\<in> multpw ns\n  (x2, y2) \\<in> ns\n  Y = add_mset y2 Y'\n\ngoal (2 subgoals):\n 1. \\<And>Y thesis.\n       \\<lbrakk>\\<And>Y1 Y2.\n                   \\<lbrakk>Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n                    ({#}, Y2) \\<in> multpw ns\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (X1 + {#}, Y) \\<in> multpw ns\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x X2 Y thesis.\n       \\<lbrakk>\\<And>Y thesis.\n                   \\<lbrakk>\\<And>Y1 Y2.\n                               \\<lbrakk>Y = Y1 + Y2;\n                                (X1, Y1) \\<in> multpw ns;\n                                (X2, Y2) \\<in> multpw ns\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    (X1 + X2, Y) \\<in> multpw ns\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>Y1 Y2.\n           \\<lbrakk>Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n            (add_mset x X2, Y2) \\<in> multpw ns\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        (X1 + add_mset x X2, Y) \\<in> multpw ns\\<rbrakk>\n       \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  (X1 + X2, Y') \\<in> multpw ns\n  (x2, y2) \\<in> ns\n  Y = add_mset y2 Y'\n\ngoal (2 subgoals):\n 1. \\<And>Y thesis.\n       \\<lbrakk>\\<And>Y1 Y2.\n                   \\<lbrakk>Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n                    ({#}, Y2) \\<in> multpw ns\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (X1 + {#}, Y) \\<in> multpw ns\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x X2 Y thesis.\n       \\<lbrakk>\\<And>Y thesis.\n                   \\<lbrakk>\\<And>Y1 Y2.\n                               \\<lbrakk>Y = Y1 + Y2;\n                                (X1, Y1) \\<in> multpw ns;\n                                (X2, Y2) \\<in> multpw ns\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    (X1 + X2, Y) \\<in> multpw ns\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>Y1 Y2.\n           \\<lbrakk>Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n            (add_mset x X2, Y2) \\<in> multpw ns\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        (X1 + add_mset x X2, Y) \\<in> multpw ns\\<rbrakk>\n       \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  (X1 + X2, Y') \\<in> multpw ns\n  (x2, y2) \\<in> ns\n  Y = add_mset y2 Y'", "obtain Y1 Y2 where \"(X1, Y1) \\<in> multpw ns\" \"(X2, Y2) \\<in> multpw ns\" \"Y' = Y1 + Y2\""], ["proof (prove)\nusing this:\n  (X1 + X2, Y') \\<in> multpw ns\n  (x2, y2) \\<in> ns\n  Y = add_mset y2 Y'\n\ngoal (1 subgoal):\n 1. (\\<And>Y1 Y2.\n        \\<lbrakk>(X1, Y1) \\<in> multpw ns; (X2, Y2) \\<in> multpw ns;\n         Y' = Y1 + Y2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: add(1)[rotated])"], ["proof (state)\nthis:\n  (X1, Y1) \\<in> multpw ns\n  (X2, Y2) \\<in> multpw ns\n  Y' = Y1 + Y2\n\ngoal (2 subgoals):\n 1. \\<And>Y thesis.\n       \\<lbrakk>\\<And>Y1 Y2.\n                   \\<lbrakk>Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n                    ({#}, Y2) \\<in> multpw ns\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (X1 + {#}, Y) \\<in> multpw ns\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x X2 Y thesis.\n       \\<lbrakk>\\<And>Y thesis.\n                   \\<lbrakk>\\<And>Y1 Y2.\n                               \\<lbrakk>Y = Y1 + Y2;\n                                (X1, Y1) \\<in> multpw ns;\n                                (X2, Y2) \\<in> multpw ns\\<rbrakk>\n                               \\<Longrightarrow> thesis;\n                    (X1 + X2, Y) \\<in> multpw ns\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>Y1 Y2.\n           \\<lbrakk>Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n            (add_mset x X2, Y2) \\<in> multpw ns\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        (X1 + add_mset x X2, Y) \\<in> multpw ns\\<rbrakk>\n       \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  (X1 + X2, Y') \\<in> multpw ns\n  (x2, y2) \\<in> ns\n  Y = add_mset y2 Y'\n  (X1, Y1) \\<in> multpw ns\n  (X2, Y2) \\<in> multpw ns\n  Y' = Y1 + Y2", "show ?case"], ["proof (prove)\nusing this:\n  (X1 + X2, Y') \\<in> multpw ns\n  (x2, y2) \\<in> ns\n  Y = add_mset y2 Y'\n  (X1, Y1) \\<in> multpw ns\n  (X2, Y2) \\<in> multpw ns\n  Y' = Y1 + Y2\n\ngoal (1 subgoal):\n 1. thesis", "by (intro add(2)) (auto simp: union_assoc intro: multpw.intros)"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>Y thesis.\n       \\<lbrakk>\\<And>Y1 Y2.\n                   \\<lbrakk>Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n                    ({#}, Y2) \\<in> multpw ns\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (X1 + {#}, Y) \\<in> multpw ns\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed auto"], ["", "lemma multpw_split1L:\n  assumes \"(X, add_mset y Y) \\<in> multpw ns\"\n  obtains z Z where \"X = add_mset z Z\" and \"(z, y) \\<in> ns\" and \"(Z, Y) \\<in> multpw ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z Z.\n        \\<lbrakk>X = add_mset z Z; (z, y) \\<in> ns;\n         (Z, Y) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms multpw_split1R[of y Y X \"ns\\<inverse>\" thesis]"], ["proof (prove)\nusing this:\n  (X, add_mset y Y) \\<in> multpw ns\n  \\<lbrakk>(add_mset y Y, X) \\<in> multpw (ns\\<inverse>);\n   \\<And>z Z.\n      \\<lbrakk>X = add_mset z Z; (y, z) \\<in> ns\\<inverse>;\n       (Y, Z) \\<in> multpw (ns\\<inverse>)\\<rbrakk>\n      \\<Longrightarrow> thesis\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. (\\<And>z Z.\n        \\<lbrakk>X = add_mset z Z; (z, y) \\<in> ns;\n         (Z, Y) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: multpw_converse)"], ["", "lemma multpw_splitL:\n  assumes \"(X, Y1 + Y2) \\<in> multpw ns\"\n  obtains X1 X2 where \"X = X1 + X2\" and \"(X1, Y1) \\<in> multpw ns\" and \"(X2, Y2) \\<in> multpw ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X1 X2.\n        \\<lbrakk>X = X1 + X2; (X1, Y1) \\<in> multpw ns;\n         (X2, Y2) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms multpw_splitR[of Y1 Y2 X \"ns\\<inverse>\" thesis]"], ["proof (prove)\nusing this:\n  (X, Y1 + Y2) \\<in> multpw ns\n  \\<lbrakk>(Y1 + Y2, X) \\<in> multpw (ns\\<inverse>);\n   \\<And>Y1a Y2a.\n      \\<lbrakk>X = Y1a + Y2a; (Y1, Y1a) \\<in> multpw (ns\\<inverse>);\n       (Y2, Y2a) \\<in> multpw (ns\\<inverse>)\\<rbrakk>\n      \\<Longrightarrow> thesis\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. (\\<And>X1 X2.\n        \\<lbrakk>X = X1 + X2; (X1, Y1) \\<in> multpw ns;\n         (X2, Y2) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: multpw_converse)"], ["", "lemma locally_trans_multpw:\n  assumes \"locally_trans ns S T U\"\n    and \"(S, T) \\<in> multpw ns\"\n    and \"(T, U) \\<in> multpw ns\"\n  shows \"(S, U) \\<in> multpw ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, U) \\<in> multpw ns", "using assms(2,3,1)"], ["proof (prove)\nusing this:\n  (S, T) \\<in> multpw ns\n  (T, U) \\<in> multpw ns\n  locally_trans ns S T U\n\ngoal (1 subgoal):\n 1. (S, U) \\<in> multpw ns", "proof (induct S T arbitrary: U rule: multpw.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>U.\n       \\<lbrakk>({#}, U) \\<in> multpw ns;\n        locally_trans ns {#} {#} U\\<rbrakk>\n       \\<Longrightarrow> ({#}, U) \\<in> multpw ns\n 2. \\<And>x y X Y U.\n       \\<lbrakk>(x, y) \\<in> ns; (X, Y) \\<in> multpw ns;\n        \\<And>U.\n           \\<lbrakk>(Y, U) \\<in> multpw ns; locally_trans ns X Y U\\<rbrakk>\n           \\<Longrightarrow> (X, U) \\<in> multpw ns;\n        (add_mset y Y, U) \\<in> multpw ns;\n        locally_trans ns (add_mset x X) (add_mset y Y) U\\<rbrakk>\n       \\<Longrightarrow> (add_mset x X, U) \\<in> multpw ns", "case (add x y X Y)"], ["proof (state)\nthis:\n  (x, y) \\<in> ns\n  (X, Y) \\<in> multpw ns\n  \\<lbrakk>(Y, ?U) \\<in> multpw ns; locally_trans ns X Y ?U\\<rbrakk>\n  \\<Longrightarrow> (X, ?U) \\<in> multpw ns\n  (add_mset y Y, U) \\<in> multpw ns\n  locally_trans ns (add_mset x X) (add_mset y Y) U\n\ngoal (2 subgoals):\n 1. \\<And>U.\n       \\<lbrakk>({#}, U) \\<in> multpw ns;\n        locally_trans ns {#} {#} U\\<rbrakk>\n       \\<Longrightarrow> ({#}, U) \\<in> multpw ns\n 2. \\<And>x y X Y U.\n       \\<lbrakk>(x, y) \\<in> ns; (X, Y) \\<in> multpw ns;\n        \\<And>U.\n           \\<lbrakk>(Y, U) \\<in> multpw ns; locally_trans ns X Y U\\<rbrakk>\n           \\<Longrightarrow> (X, U) \\<in> multpw ns;\n        (add_mset y Y, U) \\<in> multpw ns;\n        locally_trans ns (add_mset x X) (add_mset y Y) U\\<rbrakk>\n       \\<Longrightarrow> (add_mset x X, U) \\<in> multpw ns", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<in> ns\n  (X, Y) \\<in> multpw ns\n  \\<lbrakk>(Y, ?U) \\<in> multpw ns; locally_trans ns X Y ?U\\<rbrakk>\n  \\<Longrightarrow> (X, ?U) \\<in> multpw ns\n  (add_mset y Y, U) \\<in> multpw ns\n  locally_trans ns (add_mset x X) (add_mset y Y) U", "show ?case"], ["proof (prove)\nusing this:\n  (x, y) \\<in> ns\n  (X, Y) \\<in> multpw ns\n  \\<lbrakk>(Y, ?U) \\<in> multpw ns; locally_trans ns X Y ?U\\<rbrakk>\n  \\<Longrightarrow> (X, ?U) \\<in> multpw ns\n  (add_mset y Y, U) \\<in> multpw ns\n  locally_trans ns (add_mset x X) (add_mset y Y) U\n\ngoal (1 subgoal):\n 1. (add_mset x X, U) \\<in> multpw ns", "unfolding locally_trans_def"], ["proof (prove)\nusing this:\n  (x, y) \\<in> ns\n  (X, Y) \\<in> multpw ns\n  \\<lbrakk>(Y, ?U) \\<in> multpw ns;\n   \\<forall>t u v.\n      t \\<in># X \\<longrightarrow>\n      u \\<in># Y \\<longrightarrow>\n      v \\<in># ?U \\<longrightarrow>\n      (t, u) \\<in> ns \\<longrightarrow>\n      (u, v) \\<in> ns \\<longrightarrow> (t, v) \\<in> ns\\<rbrakk>\n  \\<Longrightarrow> (X, ?U) \\<in> multpw ns\n  (add_mset y Y, U) \\<in> multpw ns\n  \\<forall>t u v.\n     t \\<in># add_mset x X \\<longrightarrow>\n     u \\<in># add_mset y Y \\<longrightarrow>\n     v \\<in># U \\<longrightarrow>\n     (t, u) \\<in> ns \\<longrightarrow>\n     (u, v) \\<in> ns \\<longrightarrow> (t, v) \\<in> ns\n\ngoal (1 subgoal):\n 1. (add_mset x X, U) \\<in> multpw ns", "by (auto 0 3 intro: multpw.intros elim: multpw_split1R)"], ["proof (state)\nthis:\n  (add_mset x X, U) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. \\<And>U.\n       \\<lbrakk>({#}, U) \\<in> multpw ns;\n        locally_trans ns {#} {#} U\\<rbrakk>\n       \\<Longrightarrow> ({#}, U) \\<in> multpw ns", "qed blast"], ["", "lemma trans_multpw:\n  assumes \"trans ns\" shows \"trans (multpw ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (multpw ns)", "using locally_trans_multpw"], ["proof (prove)\nusing this:\n  \\<lbrakk>locally_trans ?ns ?S ?T ?U; (?S, ?T) \\<in> multpw ?ns;\n   (?T, ?U) \\<in> multpw ?ns\\<rbrakk>\n  \\<Longrightarrow> (?S, ?U) \\<in> multpw ?ns\n\ngoal (1 subgoal):\n 1. trans (multpw ns)", "unfolding locally_trans_def trans_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>t u v.\n              t \\<in># ?S \\<longrightarrow>\n              u \\<in># ?T \\<longrightarrow>\n              v \\<in># ?U \\<longrightarrow>\n              (t, u) \\<in> ?ns \\<longrightarrow>\n              (u, v) \\<in> ?ns \\<longrightarrow> (t, v) \\<in> ?ns;\n   (?S, ?T) \\<in> multpw ?ns; (?T, ?U) \\<in> multpw ?ns\\<rbrakk>\n  \\<Longrightarrow> (?S, ?U) \\<in> multpw ?ns\n\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       (x, y) \\<in> multpw ns \\<longrightarrow>\n       (y, z) \\<in> multpw ns \\<longrightarrow> (x, z) \\<in> multpw ns", "by (meson assms locally_trans_multpw tr_ltr)"], ["", "lemma multpw_add:\n  assumes \"(X1, Y1) \\<in> multpw ns\" \"(X2, Y2) \\<in> multpw ns\" shows \"(X1 + X2, Y1 + Y2) \\<in> multpw ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X1 + X2, Y1 + Y2) \\<in> multpw ns", "using assms(2,1)"], ["proof (prove)\nusing this:\n  (X2, Y2) \\<in> multpw ns\n  (X1, Y1) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (X1 + X2, Y1 + Y2) \\<in> multpw ns", "by (induct X2 Y2 rule: multpw.induct) (auto intro: multpw.intros simp: add.assoc[symmetric])"], ["", "lemma multpw_single:\n  \"(x, y) \\<in> ns \\<Longrightarrow> ({#x#}, {#y#}) \\<in> multpw ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> ns \\<Longrightarrow> ({#x#}, {#y#}) \\<in> multpw ns", "using multpw.intros(2)[OF _ multpw.intros(1)]"], ["proof (prove)\nusing this:\n  (?x, ?y) \\<in> ?ns \\<Longrightarrow> ({#?x#}, {#?y#}) \\<in> multpw ?ns\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> ns \\<Longrightarrow> ({#x#}, {#y#}) \\<in> multpw ns", "."], ["", "lemma multpw_mult1_commute:\n  assumes compat: \"s O ns \\<subseteq> s\" and reflns: \"refl ns\"\n  shows \"mult1 s O multpw ns \\<subseteq> multpw ns O mult1 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult1 s O multpw ns \\<subseteq> multpw ns O mult1 s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mult1 s O multpw ns \\<subseteq> multpw ns O mult1 s", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. mult1 s O multpw ns \\<subseteq> multpw ns O mult1 s", "fix X Y Z"], ["proof (state)\ngoal (1 subgoal):\n 1. mult1 s O multpw ns \\<subseteq> multpw ns O mult1 s", "assume 1: \"(X, Y) \\<in> mult1 s\" \"(Y, Z) \\<in> multpw ns\""], ["proof (state)\nthis:\n  (X, Y) \\<in> mult1 s\n  (Y, Z) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. mult1 s O multpw ns \\<subseteq> multpw ns O mult1 s", "then"], ["proof (chain)\npicking this:\n  (X, Y) \\<in> mult1 s\n  (Y, Z) \\<in> multpw ns", "obtain X' Y' y where 2: \"X = Y' + X'\" \"Y = add_mset y Y'\" \"\\<forall>x. x \\<in># X' \\<longrightarrow> (x, y) \\<in> s\""], ["proof (prove)\nusing this:\n  (X, Y) \\<in> mult1 s\n  (Y, Z) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (\\<And>Y' X' y.\n        \\<lbrakk>X = Y' + X'; Y = add_mset y Y';\n         \\<forall>x. x \\<in># X' \\<longrightarrow> (x, y) \\<in> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: mult1_def)"], ["proof (state)\nthis:\n  X = Y' + X'\n  Y = add_mset y Y'\n  \\<forall>x. x \\<in># X' \\<longrightarrow> (x, y) \\<in> s\n\ngoal (1 subgoal):\n 1. mult1 s O multpw ns \\<subseteq> multpw ns O mult1 s", "moreover"], ["proof (state)\nthis:\n  X = Y' + X'\n  Y = add_mset y Y'\n  \\<forall>x. x \\<in># X' \\<longrightarrow> (x, y) \\<in> s\n\ngoal (1 subgoal):\n 1. mult1 s O multpw ns \\<subseteq> multpw ns O mult1 s", "obtain Z' z where 3: \"Z = add_mset z Z'\" \"(y, z) \\<in> ns\" \"(Y', Z') \\<in> multpw ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z Z'.\n        \\<lbrakk>Z = add_mset z Z'; (y, z) \\<in> ns;\n         (Y', Z') \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1(2) 2(2)"], ["proof (prove)\nusing this:\n  (Y, Z) \\<in> multpw ns\n  Y = add_mset y Y'\n\ngoal (1 subgoal):\n 1. (\\<And>z Z'.\n        \\<lbrakk>Z = add_mset z Z'; (y, z) \\<in> ns;\n         (Y', Z') \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: multpw_split1R)"], ["proof (state)\nthis:\n  Z = add_mset z Z'\n  (y, z) \\<in> ns\n  (Y', Z') \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. mult1 s O multpw ns \\<subseteq> multpw ns O mult1 s", "moreover"], ["proof (state)\nthis:\n  Z = add_mset z Z'\n  (y, z) \\<in> ns\n  (Y', Z') \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. mult1 s O multpw ns \\<subseteq> multpw ns O mult1 s", "have \"\\<forall>x. x \\<in># X' \\<longrightarrow> (x, z) \\<in> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in># X' \\<longrightarrow> (x, z) \\<in> s", "using 2(3) 3(2) compat"], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<in># X' \\<longrightarrow> (x, y) \\<in> s\n  (y, z) \\<in> ns\n  s O ns \\<subseteq> s\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in># X' \\<longrightarrow> (x, z) \\<in> s", "by blast"], ["proof (state)\nthis:\n  \\<forall>x. x \\<in># X' \\<longrightarrow> (x, z) \\<in> s\n\ngoal (1 subgoal):\n 1. mult1 s O multpw ns \\<subseteq> multpw ns O mult1 s", "ultimately"], ["proof (chain)\npicking this:\n  X = Y' + X'\n  Y = add_mset y Y'\n  \\<forall>x. x \\<in># X' \\<longrightarrow> (x, y) \\<in> s\n  Z = add_mset z Z'\n  (y, z) \\<in> ns\n  (Y', Z') \\<in> multpw ns\n  \\<forall>x. x \\<in># X' \\<longrightarrow> (x, z) \\<in> s", "have \"\\<exists>Y'. (X, Y') \\<in> multpw ns \\<and> (Y', Z) \\<in> mult1 s\""], ["proof (prove)\nusing this:\n  X = Y' + X'\n  Y = add_mset y Y'\n  \\<forall>x. x \\<in># X' \\<longrightarrow> (x, y) \\<in> s\n  Z = add_mset z Z'\n  (y, z) \\<in> ns\n  (Y', Z') \\<in> multpw ns\n  \\<forall>x. x \\<in># X' \\<longrightarrow> (x, z) \\<in> s\n\ngoal (1 subgoal):\n 1. \\<exists>Y'. (X, Y') \\<in> multpw ns \\<and> (Y', Z) \\<in> mult1 s", "unfolding mult1_def"], ["proof (prove)\nusing this:\n  X = Y' + X'\n  Y = add_mset y Y'\n  \\<forall>x. x \\<in># X' \\<longrightarrow> (x, y) \\<in> s\n  Z = add_mset z Z'\n  (y, z) \\<in> ns\n  (Y', Z') \\<in> multpw ns\n  \\<forall>x. x \\<in># X' \\<longrightarrow> (x, z) \\<in> s\n\ngoal (1 subgoal):\n 1. \\<exists>Y'.\n       (X, Y') \\<in> multpw ns \\<and>\n       (Y', Z)\n       \\<in> {(N, M).\n              \\<exists>a M0 K.\n                 M = add_mset a M0 \\<and>\n                 N = M0 + K \\<and>\n                 (\\<forall>b. b \\<in># K \\<longrightarrow> (b, a) \\<in> s)}", "using refl_multpw[OF reflns]"], ["proof (prove)\nusing this:\n  X = Y' + X'\n  Y = add_mset y Y'\n  \\<forall>x. x \\<in># X' \\<longrightarrow> (x, y) \\<in> s\n  Z = add_mset z Z'\n  (y, z) \\<in> ns\n  (Y', Z') \\<in> multpw ns\n  \\<forall>x. x \\<in># X' \\<longrightarrow> (x, z) \\<in> s\n  refl (multpw ns)\n\ngoal (1 subgoal):\n 1. \\<exists>Y'.\n       (X, Y') \\<in> multpw ns \\<and>\n       (Y', Z)\n       \\<in> {(N, M).\n              \\<exists>a M0 K.\n                 M = add_mset a M0 \\<and>\n                 N = M0 + K \\<and>\n                 (\\<forall>b. b \\<in># K \\<longrightarrow> (b, a) \\<in> s)}", "by (intro exI[of _ \"Z' + X'\"]) (auto intro: multpw_add simp: refl_on_def)"], ["proof (state)\nthis:\n  \\<exists>Y'. (X, Y') \\<in> multpw ns \\<and> (Y', Z) \\<in> mult1 s\n\ngoal (1 subgoal):\n 1. mult1 s O multpw ns \\<subseteq> multpw ns O mult1 s", "}"], ["proof (state)\nthis:\n  \\<lbrakk>(?X2, ?Y2) \\<in> mult1 s; (?Y2, ?Z2) \\<in> multpw ns\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Y'.\n                       (?X2, Y') \\<in> multpw ns \\<and>\n                       (Y', ?Z2) \\<in> mult1 s\n\ngoal (1 subgoal):\n 1. mult1 s O multpw ns \\<subseteq> multpw ns O mult1 s", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>(?X2, ?Y2) \\<in> mult1 s; (?Y2, ?Z2) \\<in> multpw ns\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Y'.\n                       (?X2, Y') \\<in> multpw ns \\<and>\n                       (Y', ?Z2) \\<in> mult1 s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?X2, ?Y2) \\<in> mult1 s; (?Y2, ?Z2) \\<in> multpw ns\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Y'.\n                       (?X2, Y') \\<in> multpw ns \\<and>\n                       (Y', ?Z2) \\<in> mult1 s\n\ngoal (1 subgoal):\n 1. mult1 s O multpw ns \\<subseteq> multpw ns O mult1 s", "by fast"], ["proof (state)\nthis:\n  mult1 s O multpw ns \\<subseteq> multpw ns O mult1 s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma multpw_mult_commute:\n  assumes \"s O ns \\<subseteq> s\" \"refl ns\" shows \"mult s O multpw ns \\<subseteq> multpw ns O mult s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult s O multpw ns \\<subseteq> multpw ns O mult s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mult s O multpw ns \\<subseteq> multpw ns O mult s", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. mult s O multpw ns \\<subseteq> multpw ns O mult s", "fix X Y Z"], ["proof (state)\ngoal (1 subgoal):\n 1. mult s O multpw ns \\<subseteq> multpw ns O mult s", "assume 1: \"(X, Y) \\<in> mult s\" \"(Y, Z) \\<in> multpw ns\""], ["proof (state)\nthis:\n  (X, Y) \\<in> mult s\n  (Y, Z) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. mult s O multpw ns \\<subseteq> multpw ns O mult s", "then"], ["proof (chain)\npicking this:\n  (X, Y) \\<in> mult s\n  (Y, Z) \\<in> multpw ns", "have \"\\<exists>Y'. (X, Y') \\<in> multpw ns \\<and> (Y', Z) \\<in> mult s\""], ["proof (prove)\nusing this:\n  (X, Y) \\<in> mult s\n  (Y, Z) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. \\<exists>Y'. (X, Y') \\<in> multpw ns \\<and> (Y', Z) \\<in> mult s", "unfolding mult_def"], ["proof (prove)\nusing this:\n  (X, Y) \\<in> (mult1 s)\\<^sup>+\n  (Y, Z) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. \\<exists>Y'.\n       (X, Y') \\<in> multpw ns \\<and> (Y', Z) \\<in> (mult1 s)\\<^sup>+", "using multpw_mult1_commute[OF assms]"], ["proof (prove)\nusing this:\n  (X, Y) \\<in> (mult1 s)\\<^sup>+\n  (Y, Z) \\<in> multpw ns\n  mult1 s O multpw ns \\<subseteq> multpw ns O mult1 s\n\ngoal (1 subgoal):\n 1. \\<exists>Y'.\n       (X, Y') \\<in> multpw ns \\<and> (Y', Z) \\<in> (mult1 s)\\<^sup>+", "by (induct rule: converse_trancl_induct) (auto 0 3)"], ["proof (state)\nthis:\n  \\<exists>Y'. (X, Y') \\<in> multpw ns \\<and> (Y', Z) \\<in> mult s\n\ngoal (1 subgoal):\n 1. mult s O multpw ns \\<subseteq> multpw ns O mult s", "}"], ["proof (state)\nthis:\n  \\<lbrakk>(?X2, ?Y2) \\<in> mult s; (?Y2, ?Z2) \\<in> multpw ns\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Y'.\n                       (?X2, Y') \\<in> multpw ns \\<and>\n                       (Y', ?Z2) \\<in> mult s\n\ngoal (1 subgoal):\n 1. mult s O multpw ns \\<subseteq> multpw ns O mult s", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>(?X2, ?Y2) \\<in> mult s; (?Y2, ?Z2) \\<in> multpw ns\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Y'.\n                       (?X2, Y') \\<in> multpw ns \\<and>\n                       (Y', ?Z2) \\<in> mult s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?X2, ?Y2) \\<in> mult s; (?Y2, ?Z2) \\<in> multpw ns\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Y'.\n                       (?X2, Y') \\<in> multpw ns \\<and>\n                       (Y', ?Z2) \\<in> mult s\n\ngoal (1 subgoal):\n 1. mult s O multpw ns \\<subseteq> multpw ns O mult s", "by fast"], ["proof (state)\nthis:\n  mult s O multpw ns \\<subseteq> multpw ns O mult s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wf_mult_rel_multpw:\n  assumes \"wf s\" \"s O ns \\<subseteq> s\" \"refl ns\" shows \"wf ((multpw ns)\\<^sup>* O mult s O (multpw ns)\\<^sup>*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf ((multpw ns)\\<^sup>* O mult s O (multpw ns)\\<^sup>*)", "using assms(1) multpw_mult_commute[OF assms(2,3)]"], ["proof (prove)\nusing this:\n  wf s\n  mult s O multpw ns \\<subseteq> multpw ns O mult s\n\ngoal (1 subgoal):\n 1. wf ((multpw ns)\\<^sup>* O mult s O (multpw ns)\\<^sup>*)", "by (subst qc_wf_relto_iff) (auto simp: wf_mult)"], ["", "lemma multpw_cancel1:\n  assumes \"trans ns\" \"(y, x) \\<in> ns\"\n  shows \"(add_mset x X, add_mset y Y) \\<in> multpw ns \\<Longrightarrow> (X, Y) \\<in> multpw ns\" (is \"?L \\<Longrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (add_mset x X, add_mset y Y) \\<in> multpw ns \\<Longrightarrow>\n    (X, Y) \\<in> multpw ns", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (add_mset x X, add_mset y Y) \\<in> multpw ns \\<Longrightarrow>\n    (X, Y) \\<in> multpw ns", "assume ?L"], ["proof (state)\nthis:\n  (add_mset x X, add_mset y Y) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (add_mset x X, add_mset y Y) \\<in> multpw ns \\<Longrightarrow>\n    (X, Y) \\<in> multpw ns", "then"], ["proof (chain)\npicking this:\n  (add_mset x X, add_mset y Y) \\<in> multpw ns", "obtain x' X' where X: \"(x', y) \\<in> ns\" \"add_mset x' X' = add_mset x X\" \"(X', Y) \\<in> multpw ns\""], ["proof (prove)\nusing this:\n  (add_mset x X, add_mset y Y) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (\\<And>x' X'.\n        \\<lbrakk>(x', y) \\<in> ns; add_mset x' X' = add_mset x X;\n         (X', Y) \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: multpw_split1L simp: union_assoc[symmetric])"], ["proof (state)\nthis:\n  (x', y) \\<in> ns\n  add_mset x' X' = add_mset x X\n  (X', Y) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (add_mset x X, add_mset y Y) \\<in> multpw ns \\<Longrightarrow>\n    (X, Y) \\<in> multpw ns", "then"], ["proof (chain)\npicking this:\n  (x', y) \\<in> ns\n  add_mset x' X' = add_mset x X\n  (X', Y) \\<in> multpw ns", "show ?R"], ["proof (prove)\nusing this:\n  (x', y) \\<in> ns\n  add_mset x' X' = add_mset x X\n  (X', Y) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw ns", "proof (cases \"x = x'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>(x', y) \\<in> ns; add_mset x' X' = add_mset x X;\n     (X', Y) \\<in> multpw ns; x = x'\\<rbrakk>\n    \\<Longrightarrow> (X, Y) \\<in> multpw ns\n 2. \\<lbrakk>(x', y) \\<in> ns; add_mset x' X' = add_mset x X;\n     (X', Y) \\<in> multpw ns; x \\<noteq> x'\\<rbrakk>\n    \\<Longrightarrow> (X, Y) \\<in> multpw ns", "case False"], ["proof (state)\nthis:\n  x \\<noteq> x'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(x', y) \\<in> ns; add_mset x' X' = add_mset x X;\n     (X', Y) \\<in> multpw ns; x = x'\\<rbrakk>\n    \\<Longrightarrow> (X, Y) \\<in> multpw ns\n 2. \\<lbrakk>(x', y) \\<in> ns; add_mset x' X' = add_mset x X;\n     (X', Y) \\<in> multpw ns; x \\<noteq> x'\\<rbrakk>\n    \\<Longrightarrow> (X, Y) \\<in> multpw ns", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> x'", "obtain X2 where X2: \"X' = add_mset x X2\" \"X = add_mset x' X2\""], ["proof (prove)\nusing this:\n  x \\<noteq> x'\n\ngoal (1 subgoal):\n 1. (\\<And>X2.\n        \\<lbrakk>X' = add_mset x X2; X = add_mset x' X2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using X(2)"], ["proof (prove)\nusing this:\n  x \\<noteq> x'\n  add_mset x' X' = add_mset x X\n\ngoal (1 subgoal):\n 1. (\\<And>X2.\n        \\<lbrakk>X' = add_mset x X2; X = add_mset x' X2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: add_eq_conv_ex)"], ["proof (state)\nthis:\n  X' = add_mset x X2\n  X = add_mset x' X2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(x', y) \\<in> ns; add_mset x' X' = add_mset x X;\n     (X', Y) \\<in> multpw ns; x = x'\\<rbrakk>\n    \\<Longrightarrow> (X, Y) \\<in> multpw ns\n 2. \\<lbrakk>(x', y) \\<in> ns; add_mset x' X' = add_mset x X;\n     (X', Y) \\<in> multpw ns; x \\<noteq> x'\\<rbrakk>\n    \\<Longrightarrow> (X, Y) \\<in> multpw ns", "then"], ["proof (chain)\npicking this:\n  X' = add_mset x X2\n  X = add_mset x' X2", "obtain y' Y' where Y: \"(x, y') \\<in> ns\" \"Y = add_mset y' Y'\" \"(X2, Y') \\<in> multpw ns\""], ["proof (prove)\nusing this:\n  X' = add_mset x X2\n  X = add_mset x' X2\n\ngoal (1 subgoal):\n 1. (\\<And>y' Y'.\n        \\<lbrakk>(x, y') \\<in> ns; Y = add_mset y' Y';\n         (X2, Y') \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using X(3)"], ["proof (prove)\nusing this:\n  X' = add_mset x X2\n  X = add_mset x' X2\n  (X', Y) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (\\<And>y' Y'.\n        \\<lbrakk>(x, y') \\<in> ns; Y = add_mset y' Y';\n         (X2, Y') \\<in> multpw ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: multpw_split1R)"], ["proof (state)\nthis:\n  (x, y') \\<in> ns\n  Y = add_mset y' Y'\n  (X2, Y') \\<in> multpw ns\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(x', y) \\<in> ns; add_mset x' X' = add_mset x X;\n     (X', Y) \\<in> multpw ns; x = x'\\<rbrakk>\n    \\<Longrightarrow> (X, Y) \\<in> multpw ns\n 2. \\<lbrakk>(x', y) \\<in> ns; add_mset x' X' = add_mset x X;\n     (X', Y) \\<in> multpw ns; x \\<noteq> x'\\<rbrakk>\n    \\<Longrightarrow> (X, Y) \\<in> multpw ns", "have \"(x', y') \\<in> ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x', y') \\<in> ns", "using X(1) Y(1) \\<open>trans ns\\<close> assms(2)"], ["proof (prove)\nusing this:\n  (x', y) \\<in> ns\n  (x, y') \\<in> ns\n  trans ns\n  (y, x) \\<in> ns\n\ngoal (1 subgoal):\n 1. (x', y') \\<in> ns", "by (metis trans_def)"], ["proof (state)\nthis:\n  (x', y') \\<in> ns\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(x', y) \\<in> ns; add_mset x' X' = add_mset x X;\n     (X', Y) \\<in> multpw ns; x = x'\\<rbrakk>\n    \\<Longrightarrow> (X, Y) \\<in> multpw ns\n 2. \\<lbrakk>(x', y) \\<in> ns; add_mset x' X' = add_mset x X;\n     (X', Y) \\<in> multpw ns; x \\<noteq> x'\\<rbrakk>\n    \\<Longrightarrow> (X, Y) \\<in> multpw ns", "then"], ["proof (chain)\npicking this:\n  (x', y') \\<in> ns", "show ?thesis"], ["proof (prove)\nusing this:\n  (x', y') \\<in> ns\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw ns", "using Y"], ["proof (prove)\nusing this:\n  (x', y') \\<in> ns\n  (x, y') \\<in> ns\n  Y = add_mset y' Y'\n  (X2, Y') \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw ns", "by (auto intro: multpw.intros simp: X2)"], ["proof (state)\nthis:\n  (X, Y) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x', y) \\<in> ns; add_mset x' X' = add_mset x X;\n     (X', Y) \\<in> multpw ns; x = x'\\<rbrakk>\n    \\<Longrightarrow> (X, Y) \\<in> multpw ns", "qed auto"], ["proof (state)\nthis:\n  (X, Y) \\<in> multpw ns\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma multpw_cancel:\n  assumes \"refl ns\" \"trans ns\"\n  shows \"(X + Z, Y + Z) \\<in> multpw ns \\<longleftrightarrow> (X, Y) \\<in> multpw ns\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((X + Z, Y + Z) \\<in> multpw ns) = ((X, Y) \\<in> multpw ns)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (X + Z, Y + Z) \\<in> multpw ns \\<Longrightarrow> (X, Y) \\<in> multpw ns\n 2. (X, Y) \\<in> multpw ns \\<Longrightarrow> (X + Z, Y + Z) \\<in> multpw ns", "assume ?L"], ["proof (state)\nthis:\n  (X + Z, Y + Z) \\<in> multpw ns\n\ngoal (2 subgoals):\n 1. (X + Z, Y + Z) \\<in> multpw ns \\<Longrightarrow> (X, Y) \\<in> multpw ns\n 2. (X, Y) \\<in> multpw ns \\<Longrightarrow> (X + Z, Y + Z) \\<in> multpw ns", "then"], ["proof (chain)\npicking this:\n  (X + Z, Y + Z) \\<in> multpw ns", "show ?R"], ["proof (prove)\nusing this:\n  (X + Z, Y + Z) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw ns", "proof (induct Z)"], ["proof (state)\ngoal (2 subgoals):\n 1. (X + {#}, Y + {#}) \\<in> multpw ns \\<Longrightarrow>\n    (X, Y) \\<in> multpw ns\n 2. \\<And>x Z.\n       \\<lbrakk>(X + Z, Y + Z) \\<in> multpw ns \\<Longrightarrow>\n                (X, Y) \\<in> multpw ns;\n        (X + add_mset x Z, Y + add_mset x Z) \\<in> multpw ns\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> multpw ns", "case (add z Z)"], ["proof (state)\nthis:\n  (X + Z, Y + Z) \\<in> multpw ns \\<Longrightarrow> (X, Y) \\<in> multpw ns\n  (X + add_mset z Z, Y + add_mset z Z) \\<in> multpw ns\n\ngoal (2 subgoals):\n 1. (X + {#}, Y + {#}) \\<in> multpw ns \\<Longrightarrow>\n    (X, Y) \\<in> multpw ns\n 2. \\<And>x Z.\n       \\<lbrakk>(X + Z, Y + Z) \\<in> multpw ns \\<Longrightarrow>\n                (X, Y) \\<in> multpw ns;\n        (X + add_mset x Z, Y + add_mset x Z) \\<in> multpw ns\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> multpw ns", "then"], ["proof (chain)\npicking this:\n  (X + Z, Y + Z) \\<in> multpw ns \\<Longrightarrow> (X, Y) \\<in> multpw ns\n  (X + add_mset z Z, Y + add_mset z Z) \\<in> multpw ns", "show ?case"], ["proof (prove)\nusing this:\n  (X + Z, Y + Z) \\<in> multpw ns \\<Longrightarrow> (X, Y) \\<in> multpw ns\n  (X + add_mset z Z, Y + add_mset z Z) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw ns", "using multpw_cancel1[of ns z z \"X + Z\" \"Y + Z\"] assms"], ["proof (prove)\nusing this:\n  (X + Z, Y + Z) \\<in> multpw ns \\<Longrightarrow> (X, Y) \\<in> multpw ns\n  (X + add_mset z Z, Y + add_mset z Z) \\<in> multpw ns\n  \\<lbrakk>trans ns; (z, z) \\<in> ns;\n   (add_mset z (X + Z), add_mset z (Y + Z)) \\<in> multpw ns\\<rbrakk>\n  \\<Longrightarrow> (X + Z, Y + Z) \\<in> multpw ns\n  refl ns\n  trans ns\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw ns", "by (auto simp: refl_on_def union_assoc)"], ["proof (state)\nthis:\n  (X, Y) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (X + {#}, Y + {#}) \\<in> multpw ns \\<Longrightarrow>\n    (X, Y) \\<in> multpw ns", "qed auto"], ["proof (state)\nthis:\n  (X, Y) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw ns \\<Longrightarrow> (X + Z, Y + Z) \\<in> multpw ns", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw ns \\<Longrightarrow> (X + Z, Y + Z) \\<in> multpw ns", "assume ?R"], ["proof (state)\nthis:\n  (X, Y) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw ns \\<Longrightarrow> (X + Z, Y + Z) \\<in> multpw ns", "then"], ["proof (chain)\npicking this:\n  (X, Y) \\<in> multpw ns", "show ?L"], ["proof (prove)\nusing this:\n  (X, Y) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (X + Z, Y + Z) \\<in> multpw ns", "using assms refl_multpw"], ["proof (prove)\nusing this:\n  (X, Y) \\<in> multpw ns\n  refl ns\n  trans ns\n  refl ?ns \\<Longrightarrow> refl (multpw ?ns)\n\ngoal (1 subgoal):\n 1. (X + Z, Y + Z) \\<in> multpw ns", "by (auto intro: multpw_add simp: refl_on_def)"], ["proof (state)\nthis:\n  (X + Z, Y + Z) \\<in> multpw ns\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma multpw_cancelL:\n  assumes \"refl ns\" \"trans ns\" shows \"(Z + X, Z + Y) \\<in> multpw ns \\<longleftrightarrow> (X, Y) \\<in> multpw ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((Z + X, Z + Y) \\<in> multpw ns) = ((X, Y) \\<in> multpw ns)", "using multpw_cancel[OF assms, of X Z Y]"], ["proof (prove)\nusing this:\n  ((X + Z, Y + Z) \\<in> multpw ns) = ((X, Y) \\<in> multpw ns)\n\ngoal (1 subgoal):\n 1. ((Z + X, Z + Y) \\<in> multpw ns) = ((X, Y) \\<in> multpw ns)", "by (simp only: union_commute)"], ["", "subsection \\<open>Multiset extension for order pairs via the pointwise order and @{const mult}\\<close>"], ["", "definition \"mult2_s ns s \\<equiv> multpw ns O mult s\""], ["", "definition \"mult2_ns ns s \\<equiv> multpw ns O (mult s)\\<^sup>=\""], ["", "lemma mult2_ns_conv:\n  shows \"mult2_ns ns s = mult2_s ns s \\<union> multpw ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult2_ns ns s = mult2_s ns s \\<union> multpw ns", "by (auto simp: mult2_s_def mult2_ns_def)"], ["", "lemma mono_mult2_s:\n  assumes \"ns \\<subseteq> ns'\" \"s \\<subseteq> s'\" shows \"mult2_s ns s \\<subseteq> mult2_s ns' s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult2_s ns s \\<subseteq> mult2_s ns' s'", "using mono_multpw[OF assms(1)] mono_mult[OF assms(2)]"], ["proof (prove)\nusing this:\n  multpw ns \\<subseteq> multpw ns'\n  mult s \\<subseteq> mult s'\n\ngoal (1 subgoal):\n 1. mult2_s ns s \\<subseteq> mult2_s ns' s'", "unfolding mult2_s_def"], ["proof (prove)\nusing this:\n  multpw ns \\<subseteq> multpw ns'\n  mult s \\<subseteq> mult s'\n\ngoal (1 subgoal):\n 1. multpw ns O mult s \\<subseteq> multpw ns' O mult s'", "by auto"], ["", "lemma mono_mult2_ns:\n  assumes \"ns \\<subseteq> ns'\" \"s \\<subseteq> s'\" shows \"mult2_ns ns s \\<subseteq> mult2_ns ns' s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult2_ns ns s \\<subseteq> mult2_ns ns' s'", "using mono_multpw[OF assms(1)] mono_mult[OF assms(2)]"], ["proof (prove)\nusing this:\n  multpw ns \\<subseteq> multpw ns'\n  mult s \\<subseteq> mult s'\n\ngoal (1 subgoal):\n 1. mult2_ns ns s \\<subseteq> mult2_ns ns' s'", "unfolding mult2_ns_def"], ["proof (prove)\nusing this:\n  multpw ns \\<subseteq> multpw ns'\n  mult s \\<subseteq> mult s'\n\ngoal (1 subgoal):\n 1. multpw ns O (mult s)\\<^sup>= \\<subseteq> multpw ns' O (mult s')\\<^sup>=", "by auto"], ["", "lemma wf_mult2_s:\n  assumes \"wf s\" \"s O ns \\<subseteq> s\" \"refl ns\"\n  shows \"wf (mult2_s ns s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf (mult2_s ns s)", "using wf_mult_rel_multpw[OF assms] assms"], ["proof (prove)\nusing this:\n  wf ((multpw ns)\\<^sup>* O mult s O (multpw ns)\\<^sup>*)\n  wf s\n  s O ns \\<subseteq> s\n  refl ns\n\ngoal (1 subgoal):\n 1. wf (mult2_s ns s)", "by (auto simp: mult2_s_def wf_mult intro: wf_subset)"], ["", "lemma refl_mult2_ns:\n  assumes \"refl ns\" shows \"refl (mult2_ns ns s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl (mult2_ns ns s)", "using refl_multpw[OF assms]"], ["proof (prove)\nusing this:\n  refl (multpw ns)\n\ngoal (1 subgoal):\n 1. refl (mult2_ns ns s)", "unfolding mult2_ns_def refl_on_def"], ["proof (prove)\nusing this:\n  multpw ns \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> multpw ns)\n\ngoal (1 subgoal):\n 1. multpw ns O (mult s)\\<^sup>= \\<subseteq> UNIV \\<times> UNIV \\<and>\n    (\\<forall>x\\<in>UNIV. (x, x) \\<in> multpw ns O (mult s)\\<^sup>=)", "by fast"], ["", "lemma trans_mult2_s:\n  assumes \"s O ns \\<subseteq> s\" \"refl ns\" \"trans ns\"\n  shows \"trans (mult2_s ns s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (mult2_s ns s)", "using trans_multpw[OF assms(3)] trans_trancl[of \"mult1 s\", folded mult_def] multpw_mult_commute[OF assms(1,2)]"], ["proof (prove)\nusing this:\n  trans (multpw ns)\n  trans (mult s)\n  mult s O multpw ns \\<subseteq> multpw ns O mult s\n\ngoal (1 subgoal):\n 1. trans (mult2_s ns s)", "unfolding mult2_s_def trans_O_iff"], ["proof (prove)\nusing this:\n  multpw ns O multpw ns \\<subseteq> multpw ns\n  mult s O mult s \\<subseteq> mult s\n  mult s O multpw ns \\<subseteq> multpw ns O mult s\n\ngoal (1 subgoal):\n 1. (multpw ns O mult s) O multpw ns O mult s \\<subseteq> multpw ns O mult s", "by (blast 8)"], ["", "lemma trans_mult2_ns:\n  assumes \"s O ns \\<subseteq> s\" \"refl ns\" \"trans ns\"\n  shows \"trans (mult2_ns ns s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (mult2_ns ns s)", "using trans_multpw[OF assms(3)] trans_trancl[of \"mult1 s\", folded mult_def] multpw_mult_commute[OF assms(1,2)]"], ["proof (prove)\nusing this:\n  trans (multpw ns)\n  trans (mult s)\n  mult s O multpw ns \\<subseteq> multpw ns O mult s\n\ngoal (1 subgoal):\n 1. trans (mult2_ns ns s)", "unfolding mult2_ns_def trans_O_iff"], ["proof (prove)\nusing this:\n  multpw ns O multpw ns \\<subseteq> multpw ns\n  mult s O mult s \\<subseteq> mult s\n  mult s O multpw ns \\<subseteq> multpw ns O mult s\n\ngoal (1 subgoal):\n 1. (multpw ns O (mult s)\\<^sup>=) O multpw ns O (mult s)\\<^sup>=\n    \\<subseteq> multpw ns O (mult s)\\<^sup>=", "by (blast 8)"], ["", "lemma compat_mult2:\n  assumes \"s O ns \\<subseteq> s\" \"refl ns\" \"trans ns\"\n  shows \"mult2_ns ns s O mult2_s ns s \\<subseteq> mult2_s ns s\" \"mult2_s ns s O mult2_ns ns s \\<subseteq> mult2_s ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult2_ns ns s O mult2_s ns s \\<subseteq> mult2_s ns s &&&\n    mult2_s ns s O mult2_ns ns s \\<subseteq> mult2_s ns s", "using trans_multpw[OF assms(3)] trans_trancl[of \"mult1 s\", folded mult_def] multpw_mult_commute[OF assms(1,2)]"], ["proof (prove)\nusing this:\n  trans (multpw ns)\n  trans (mult s)\n  mult s O multpw ns \\<subseteq> multpw ns O mult s\n\ngoal (1 subgoal):\n 1. mult2_ns ns s O mult2_s ns s \\<subseteq> mult2_s ns s &&&\n    mult2_s ns s O mult2_ns ns s \\<subseteq> mult2_s ns s", "unfolding mult2_s_def mult2_ns_def trans_O_iff"], ["proof (prove)\nusing this:\n  multpw ns O multpw ns \\<subseteq> multpw ns\n  mult s O mult s \\<subseteq> mult s\n  mult s O multpw ns \\<subseteq> multpw ns O mult s\n\ngoal (1 subgoal):\n 1. (multpw ns O (mult s)\\<^sup>=) O multpw ns O mult s\n    \\<subseteq> multpw ns O mult s &&&\n    (multpw ns O mult s) O multpw ns O (mult s)\\<^sup>=\n    \\<subseteq> multpw ns O mult s", "by (blast 8)+"], ["", "text \\<open>Trivial inclusions\\<close>"], ["", "lemma mult_implies_mult2_s:\n  assumes \"refl ns\" \"(X, Y) \\<in> mult s\"\n  shows \"(X, Y) \\<in> mult2_s ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "using refl_multpw[of ns] assms"], ["proof (prove)\nusing this:\n  refl ns \\<Longrightarrow> refl (multpw ns)\n  refl ns\n  (X, Y) \\<in> mult s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "unfolding mult2_s_def refl_on_def"], ["proof (prove)\nusing this:\n  ns \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> ns) \\<Longrightarrow>\n  multpw ns \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> multpw ns)\n  ns \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> ns)\n  (X, Y) \\<in> mult s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw ns O mult s", "by blast"], ["", "lemma mult_implies_mult2_ns:\n  assumes \"refl ns\" \"(X, Y) \\<in> (mult s)\\<^sup>=\"\n  shows \"(X, Y) \\<in> mult2_ns ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_ns ns s", "using refl_multpw[of ns] assms"], ["proof (prove)\nusing this:\n  refl ns \\<Longrightarrow> refl (multpw ns)\n  refl ns\n  (X, Y) \\<in> (mult s)\\<^sup>=\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_ns ns s", "unfolding mult2_ns_def refl_on_def"], ["proof (prove)\nusing this:\n  ns \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> ns) \\<Longrightarrow>\n  multpw ns \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> multpw ns)\n  ns \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> ns)\n  (X, Y) \\<in> (mult s)\\<^sup>=\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw ns O (mult s)\\<^sup>=", "by blast"], ["", "lemma multpw_implies_mult2_ns:\n  assumes \"(X, Y) \\<in> multpw ns\"\n  shows \"(X, Y) \\<in> mult2_ns ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_ns ns s", "unfolding mult2_ns_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw ns O (mult s)\\<^sup>=", "using assms"], ["proof (prove)\nusing this:\n  (X, Y) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw ns O (mult s)\\<^sup>=", "by simp"], ["", "subsection \\<open>One-step versions of the multiset extensions\\<close>"], ["", "lemma mult2_s_one_step:\n  assumes \"ns O s \\<subseteq> s\" \"refl ns\" \"trans s\"\n  shows \"(X, Y) \\<in> mult2_s ns s \\<longleftrightarrow> (\\<exists>X1 X2 Y1 Y2. X = X1 + X2 \\<and> Y = Y1 + Y2 \\<and>\n    (X1, Y1) \\<in> multpw ns \\<and> Y2 \\<noteq> {#} \\<and> (\\<forall>x. x \\<in># X2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)))\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((X, Y) \\<in> mult2_s ns s) =\n    (\\<exists>X1 X2 Y1 Y2.\n        X = X1 + X2 \\<and>\n        Y = Y1 + Y2 \\<and>\n        (X1, Y1) \\<in> multpw ns \\<and>\n        Y2 \\<noteq> {#} \\<and>\n        (\\<forall>x.\n            x \\<in># X2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (X, Y) \\<in> mult2_s ns s \\<Longrightarrow>\n    \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\n 2. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y.\n               y \\<in># Y2 \\<and> (x, y) \\<in> s)) \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s", "assume ?R"], ["proof (state)\nthis:\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and>\n     Y2 \\<noteq> {#} \\<and>\n     (\\<forall>x.\n         x \\<in># X2 \\<longrightarrow>\n         (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\n\ngoal (2 subgoals):\n 1. (X, Y) \\<in> mult2_s ns s \\<Longrightarrow>\n    \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\n 2. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y.\n               y \\<in># Y2 \\<and> (x, y) \\<in> s)) \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s", "then"], ["proof (chain)\npicking this:\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and>\n     Y2 \\<noteq> {#} \\<and>\n     (\\<forall>x.\n         x \\<in># X2 \\<longrightarrow>\n         (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))", "obtain X1 X2 Y1 Y2 where *: \"X = X1 + X2\" \"Y = Y1 + Y2\" \"(X1, Y1) \\<in> multpw ns\" and\n    \"Y2 \\<noteq> {#}\" \"\\<forall>x. x \\<in># X2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\""], ["proof (prove)\nusing this:\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and>\n     Y2 \\<noteq> {#} \\<and>\n     (\\<forall>x.\n         x \\<in># X2 \\<longrightarrow>\n         (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\n\ngoal (1 subgoal):\n 1. (\\<And>X1 X2 Y1 Y2.\n        \\<lbrakk>X = X1 + X2; Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n         Y2 \\<noteq> {#};\n         \\<forall>x.\n            x \\<in># X2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (2 subgoals):\n 1. (X, Y) \\<in> mult2_s ns s \\<Longrightarrow>\n    \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\n 2. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y.\n               y \\<in># Y2 \\<and> (x, y) \\<in> s)) \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s", "then"], ["proof (chain)\npicking this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)", "have \"(Y1 + X2, Y1 + Y2) \\<in> mult s\""], ["proof (prove)\nusing this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. (Y1 + X2, Y1 + Y2) \\<in> mult s", "using \\<open>trans s\\<close>"], ["proof (prove)\nusing this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n  trans s\n\ngoal (1 subgoal):\n 1. (Y1 + X2, Y1 + Y2) \\<in> mult s", "by (auto intro: one_step_implies_mult)"], ["proof (state)\nthis:\n  (Y1 + X2, Y1 + Y2) \\<in> mult s\n\ngoal (2 subgoals):\n 1. (X, Y) \\<in> mult2_s ns s \\<Longrightarrow>\n    \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\n 2. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y.\n               y \\<in># Y2 \\<and> (x, y) \\<in> s)) \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s", "moreover"], ["proof (state)\nthis:\n  (Y1 + X2, Y1 + Y2) \\<in> mult s\n\ngoal (2 subgoals):\n 1. (X, Y) \\<in> mult2_s ns s \\<Longrightarrow>\n    \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\n 2. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y.\n               y \\<in># Y2 \\<and> (x, y) \\<in> s)) \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s", "have \"(X1 + X2, Y1 + X2) \\<in> multpw ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X1 + X2, Y1 + X2) \\<in> multpw ns", "using \\<open>refl ns\\<close> refl_multpw[of ns]"], ["proof (prove)\nusing this:\n  refl ns\n  refl ns \\<Longrightarrow> refl (multpw ns)\n\ngoal (1 subgoal):\n 1. (X1 + X2, Y1 + X2) \\<in> multpw ns", "by (auto intro: multpw_add simp: refl_on_def *)"], ["proof (state)\nthis:\n  (X1 + X2, Y1 + X2) \\<in> multpw ns\n\ngoal (2 subgoals):\n 1. (X, Y) \\<in> mult2_s ns s \\<Longrightarrow>\n    \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\n 2. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y.\n               y \\<in># Y2 \\<and> (x, y) \\<in> s)) \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s", "ultimately"], ["proof (chain)\npicking this:\n  (Y1 + X2, Y1 + Y2) \\<in> mult s\n  (X1 + X2, Y1 + X2) \\<in> multpw ns", "show ?L"], ["proof (prove)\nusing this:\n  (Y1 + X2, Y1 + Y2) \\<in> mult s\n  (X1 + X2, Y1 + X2) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "by (auto simp: mult2_s_def *)"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult2_s ns s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s \\<Longrightarrow>\n    \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s \\<Longrightarrow>\n    \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))", "assume ?L"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult2_s ns s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s \\<Longrightarrow>\n    \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))", "then"], ["proof (chain)\npicking this:\n  (X, Y) \\<in> mult2_s ns s", "obtain X1 X2 Z1 Z2 Y2 where *: \"X = X1 + X2\" \"Y = Z1 + Y2\" \"(X1, Z1) \\<in> multpw ns\"\n    \"(X2, Z2) \\<in> multpw ns\" \"Y2 \\<noteq> {#}\" \"\\<forall>x. x \\<in># Z2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\""], ["proof (prove)\nusing this:\n  (X, Y) \\<in> mult2_s ns s\n\ngoal (1 subgoal):\n 1. (\\<And>X1 X2 Z1 Y2 Z2.\n        \\<lbrakk>X = X1 + X2; Y = Z1 + Y2; (X1, Z1) \\<in> multpw ns;\n         (X2, Z2) \\<in> multpw ns; Y2 \\<noteq> {#};\n         \\<forall>x.\n            x \\<in># Z2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto 0 3 dest!: mult_implies_one_step[OF \\<open>trans s\\<close>] simp: mult2_s_def elim!: multpw_splitL) metis"], ["proof (state)\nthis:\n  X = X1 + X2\n  Y = Z1 + Y2\n  (X1, Z1) \\<in> multpw ns\n  (X2, Z2) \\<in> multpw ns\n  Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># Z2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s \\<Longrightarrow>\n    \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))", "have \"\\<forall>x. x \\<in># X2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x,y) \\<in> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in># X2 \\<longrightarrow>\n       (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in># X2 \\<Longrightarrow>\n       \\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in># X2 \\<Longrightarrow>\n       \\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s", "assume \"x \\<in># X2\""], ["proof (state)\nthis:\n  x \\<in># X2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in># X2 \\<Longrightarrow>\n       \\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s", "then"], ["proof (chain)\npicking this:\n  x \\<in># X2", "obtain X2' where \"X2 = add_mset x X2'\""], ["proof (prove)\nusing this:\n  x \\<in># X2\n\ngoal (1 subgoal):\n 1. (\\<And>X2'.\n        X2 = add_mset x X2' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis multi_member_split)"], ["proof (state)\nthis:\n  X2 = add_mset x X2'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in># X2 \\<Longrightarrow>\n       \\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s", "then"], ["proof (chain)\npicking this:\n  X2 = add_mset x X2'", "obtain z Z2' where \"Z2 = add_mset z Z2'\" \"(x, z) \\<in> ns\""], ["proof (prove)\nusing this:\n  X2 = add_mset x X2'\n\ngoal (1 subgoal):\n 1. (\\<And>z Z2'.\n        \\<lbrakk>Z2 = add_mset z Z2'; (x, z) \\<in> ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using *(4)"], ["proof (prove)\nusing this:\n  X2 = add_mset x X2'\n  (X2, Z2) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (\\<And>z Z2'.\n        \\<lbrakk>Z2 = add_mset z Z2'; (x, z) \\<in> ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: multpw_split1R)"], ["proof (state)\nthis:\n  Z2 = add_mset z Z2'\n  (x, z) \\<in> ns\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in># X2 \\<Longrightarrow>\n       \\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s", "then"], ["proof (chain)\npicking this:\n  Z2 = add_mset z Z2'\n  (x, z) \\<in> ns", "have \"z \\<in># Z2\" \"(x, z) \\<in> ns\""], ["proof (prove)\nusing this:\n  Z2 = add_mset z Z2'\n  (x, z) \\<in> ns\n\ngoal (1 subgoal):\n 1. z \\<in># Z2 &&& (x, z) \\<in> ns", "by auto"], ["proof (state)\nthis:\n  z \\<in># Z2\n  (x, z) \\<in> ns\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in># X2 \\<Longrightarrow>\n       \\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s", "then"], ["proof (chain)\npicking this:\n  z \\<in># Z2\n  (x, z) \\<in> ns", "show \"\\<exists>y. y \\<in># Y2 \\<and> (x,y) \\<in> s\""], ["proof (prove)\nusing this:\n  z \\<in># Z2\n  (x, z) \\<in> ns\n\ngoal (1 subgoal):\n 1. \\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s", "using *(6) \\<open>ns O s \\<subseteq> s\\<close>"], ["proof (prove)\nusing this:\n  z \\<in># Z2\n  (x, z) \\<in> ns\n  \\<forall>x.\n     x \\<in># Z2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n  ns O s \\<subseteq> s\n\ngoal (1 subgoal):\n 1. \\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s", "by blast"], ["proof (state)\nthis:\n  \\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s \\<Longrightarrow>\n    \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))", "then"], ["proof (chain)\npicking this:\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)", "show ?R"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))", "using *"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n  X = X1 + X2\n  Y = Z1 + Y2\n  (X1, Z1) \\<in> multpw ns\n  (X2, Z2) \\<in> multpw ns\n  Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># Z2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       Y2 \\<noteq> {#} \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))", "by auto"], ["proof (state)\nthis:\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and>\n     Y2 \\<noteq> {#} \\<and>\n     (\\<forall>x.\n         x \\<in># X2 \\<longrightarrow>\n         (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mult2_ns_one_step:\n  assumes \"ns O s \\<subseteq> s\" \"refl ns\" \"trans s\"\n  shows \"(X, Y) \\<in> mult2_ns ns s \\<longleftrightarrow> (\\<exists>X1 X2 Y1 Y2. X = X1 + X2 \\<and> Y = Y1 + Y2 \\<and>\n    (X1, Y1) \\<in> multpw ns \\<and> (\\<forall>x. x \\<in># X2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)))\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((X, Y) \\<in> mult2_ns ns s) =\n    (\\<exists>X1 X2 Y1 Y2.\n        X = X1 + X2 \\<and>\n        Y = Y1 + Y2 \\<and>\n        (X1, Y1) \\<in> multpw ns \\<and>\n        (\\<forall>x.\n            x \\<in># X2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (X, Y) \\<in> mult2_ns ns s \\<Longrightarrow>\n    \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\n 2. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y.\n               y \\<in># Y2 \\<and> (x, y) \\<in> s)) \\<Longrightarrow>\n    (X, Y) \\<in> mult2_ns ns s", "assume ?L"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult2_ns ns s\n\ngoal (2 subgoals):\n 1. (X, Y) \\<in> mult2_ns ns s \\<Longrightarrow>\n    \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\n 2. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y.\n               y \\<in># Y2 \\<and> (x, y) \\<in> s)) \\<Longrightarrow>\n    (X, Y) \\<in> mult2_ns ns s", "then"], ["proof (chain)\npicking this:\n  (X, Y) \\<in> mult2_ns ns s", "consider \"(X, Y) \\<in> multpw ns\" | \"(X, Y) \\<in> mult2_s ns s\""], ["proof (prove)\nusing this:\n  (X, Y) \\<in> mult2_ns ns s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(X, Y) \\<in> multpw ns \\<Longrightarrow> thesis;\n     (X, Y) \\<in> mult2_s ns s \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (auto simp: mult2_s_def mult2_ns_def)"], ["proof (state)\nthis:\n  \\<lbrakk>(X, Y) \\<in> multpw ns \\<Longrightarrow> ?thesis;\n   (X, Y) \\<in> mult2_s ns s \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. (X, Y) \\<in> mult2_ns ns s \\<Longrightarrow>\n    \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\n 2. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y.\n               y \\<in># Y2 \\<and> (x, y) \\<in> s)) \\<Longrightarrow>\n    (X, Y) \\<in> mult2_ns ns s", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>(X, Y) \\<in> multpw ns \\<Longrightarrow> ?thesis;\n   (X, Y) \\<in> mult2_s ns s \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?R"], ["proof (prove)\nusing this:\n  \\<lbrakk>(X, Y) \\<in> multpw ns \\<Longrightarrow> ?thesis;\n   (X, Y) \\<in> mult2_s ns s \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))", "using mult2_s_one_step[OF assms]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(X, Y) \\<in> multpw ns \\<Longrightarrow> ?thesis;\n   (X, Y) \\<in> mult2_s ns s \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  ((?X, ?Y) \\<in> mult2_s ns s) =\n  (\\<exists>X1 X2 Y1 Y2.\n      ?X = X1 + X2 \\<and>\n      ?Y = Y1 + Y2 \\<and>\n      (X1, Y1) \\<in> multpw ns \\<and>\n      Y2 \\<noteq> {#} \\<and>\n      (\\<forall>x.\n          x \\<in># X2 \\<longrightarrow>\n          (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)))\n\ngoal (1 subgoal):\n 1. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))", "by (cases, intro exI[of _ \"{#}\", THEN exI[of _ Y, THEN exI[of _ \"{#}\", THEN exI[of _ X]]]]) auto"], ["proof (state)\nthis:\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and>\n     (\\<forall>x.\n         x \\<in># X2 \\<longrightarrow>\n         (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\n\ngoal (1 subgoal):\n 1. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y.\n               y \\<in># Y2 \\<and> (x, y) \\<in> s)) \\<Longrightarrow>\n    (X, Y) \\<in> mult2_ns ns s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y.\n               y \\<in># Y2 \\<and> (x, y) \\<in> s)) \\<Longrightarrow>\n    (X, Y) \\<in> mult2_ns ns s", "assume ?R"], ["proof (state)\nthis:\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and>\n     (\\<forall>x.\n         x \\<in># X2 \\<longrightarrow>\n         (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\n\ngoal (1 subgoal):\n 1. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y.\n               y \\<in># Y2 \\<and> (x, y) \\<in> s)) \\<Longrightarrow>\n    (X, Y) \\<in> mult2_ns ns s", "then"], ["proof (chain)\npicking this:\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and>\n     (\\<forall>x.\n         x \\<in># X2 \\<longrightarrow>\n         (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))", "obtain X1 X2 Y1 Y2 where \"X = X1 + X2\" \"Y = Y1 + Y2\"\n    \"(X1, Y1) \\<in> multpw ns\" \"\\<forall>x. x \\<in># X2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\""], ["proof (prove)\nusing this:\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and>\n     (\\<forall>x.\n         x \\<in># X2 \\<longrightarrow>\n         (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\n\ngoal (1 subgoal):\n 1. (\\<And>X1 X2 Y1 Y2.\n        \\<lbrakk>X = X1 + X2; Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n         \\<forall>x.\n            x \\<in># X2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (\\<forall>x.\n           x \\<in># X2 \\<longrightarrow>\n           (\\<exists>y.\n               y \\<in># Y2 \\<and> (x, y) \\<in> s)) \\<Longrightarrow>\n    (X, Y) \\<in> mult2_ns ns s", "then"], ["proof (chain)\npicking this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)", "show ?L"], ["proof (prove)\nusing this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_ns ns s", "using mult2_s_one_step[OF assms, of X Y] count_inject[of X2 \"{#}\"]"], ["proof (prove)\nusing this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n  ((X, Y) \\<in> mult2_s ns s) =\n  (\\<exists>X1 X2 Y1 Y2.\n      X = X1 + X2 \\<and>\n      Y = Y1 + Y2 \\<and>\n      (X1, Y1) \\<in> multpw ns \\<and>\n      Y2 \\<noteq> {#} \\<and>\n      (\\<forall>x.\n          x \\<in># X2 \\<longrightarrow>\n          (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)))\n  (count X2 = count {#}) = (X2 = {#})\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_ns ns s", "by (cases \"Y2 = {#}\") (auto simp: mult2_s_def mult2_ns_def)"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult2_ns ns s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mult2_s_locally_one_step':\n  assumes \"ns O s \\<subseteq> s\" \"refl ns\" \"locally_irrefl s X\" \"locally_irrefl s Y\" \"trans s\"\n  shows \"(X, Y) \\<in> mult2_s ns s \\<longleftrightarrow> (\\<exists>X1 X2 Y1 Y2. X = X1 + X2 \\<and> Y = Y1 + Y2 \\<and>\n    (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s)\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((X, Y) \\<in> mult2_s ns s) =\n    (\\<exists>X1 X2 Y1 Y2.\n        X = X1 + X2 \\<and>\n        Y = Y1 + Y2 \\<and>\n        (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (X, Y) \\<in> mult2_s ns s \\<Longrightarrow>\n    \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s\n 2. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (X2, Y2) \\<in> mult s \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s", "assume ?L"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult2_s ns s\n\ngoal (2 subgoals):\n 1. (X, Y) \\<in> mult2_s ns s \\<Longrightarrow>\n    \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s\n 2. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (X2, Y2) \\<in> mult s \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s", "then"], ["proof (chain)\npicking this:\n  (X, Y) \\<in> mult2_s ns s", "show ?R"], ["proof (prove)\nusing this:\n  (X, Y) \\<in> mult2_s ns s\n\ngoal (1 subgoal):\n 1. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s", "unfolding mult2_s_one_step[OF assms(1,2,5)]"], ["proof (prove)\nusing this:\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and>\n     Y2 \\<noteq> {#} \\<and>\n     (\\<forall>x.\n         x \\<in># X2 \\<longrightarrow>\n         (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\n\ngoal (1 subgoal):\n 1. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s", "using one_step_implies_mult[of _ _ s \"{#}\"]"], ["proof (prove)\nusing this:\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and>\n     Y2 \\<noteq> {#} \\<and>\n     (\\<forall>x.\n         x \\<in># X2 \\<longrightarrow>\n         (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\n  \\<lbrakk>?J \\<noteq> {#};\n   \\<forall>k\\<in>#?K. \\<exists>j\\<in>#?J. (k, j) \\<in> s\\<rbrakk>\n  \\<Longrightarrow> ({#} + ?K, {#} + ?J) \\<in> mult s\n\ngoal (1 subgoal):\n 1. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s", "by auto metis"], ["proof (state)\nthis:\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s\n\ngoal (1 subgoal):\n 1. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (X2, Y2) \\<in> mult s \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (X2, Y2) \\<in> mult s \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s", "assume ?R"], ["proof (state)\nthis:\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s\n\ngoal (1 subgoal):\n 1. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (X2, Y2) \\<in> mult s \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s", "then"], ["proof (chain)\npicking this:\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s", "obtain X1 X2 Y1 Y2 where x: \"X = X1 + X2\" and y: \"Y = Y1 + Y2\" and\n    ns: \"(X1, Y1) \\<in> multpw ns\" and s: \"(X2, Y2) \\<in> mult s\""], ["proof (prove)\nusing this:\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s\n\ngoal (1 subgoal):\n 1. (\\<And>X1 X2 Y1 Y2.\n        \\<lbrakk>X = X1 + X2; Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n         (X2, Y2) \\<in> mult s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  (X2, Y2) \\<in> mult s\n\ngoal (1 subgoal):\n 1. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (X2, Y2) \\<in> mult s \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s", "then"], ["proof (chain)\npicking this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  (X2, Y2) \\<in> mult s", "have l: \"locally_irrefl s (X2 + Y1)\" and r: \"locally_irrefl s (Y2 + Y1)\""], ["proof (prove)\nusing this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  (X2, Y2) \\<in> mult s\n\ngoal (1 subgoal):\n 1. locally_irrefl s (X2 + Y1) &&& locally_irrefl s (Y2 + Y1)", "using assms(3, 4)"], ["proof (prove)\nusing this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  (X2, Y2) \\<in> mult s\n  locally_irrefl s X\n  locally_irrefl s Y\n\ngoal (1 subgoal):\n 1. locally_irrefl s (X2 + Y1) &&& locally_irrefl s (Y2 + Y1)", "by (auto simp add: locally_irrefl_def)"], ["proof (state)\nthis:\n  locally_irrefl s (X2 + Y1)\n  locally_irrefl s (Y2 + Y1)\n\ngoal (1 subgoal):\n 1. \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and>\n       (X2, Y2) \\<in> mult s \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s", "show ?L"], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "using ns s mult_locally_cancelL[OF assms(5) l r] multpw_add[OF ns, of X2 X2] refl_multpw[OF \\<open>refl ns\\<close>]"], ["proof (prove)\nusing this:\n  (X1, Y1) \\<in> multpw ns\n  (X2, Y2) \\<in> mult s\n  ((Y1 + X2, Y1 + Y2) \\<in> mult s) = ((X2, Y2) \\<in> mult s)\n  (X2, X2) \\<in> multpw ns \\<Longrightarrow>\n  (X1 + X2, Y1 + X2) \\<in> multpw ns\n  refl (multpw ns)\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "unfolding mult2_s_def refl_on_def x y"], ["proof (prove)\nusing this:\n  (X1, Y1) \\<in> multpw ns\n  (X2, Y2) \\<in> mult s\n  ((Y1 + X2, Y1 + Y2) \\<in> mult s) = ((X2, Y2) \\<in> mult s)\n  (X2, X2) \\<in> multpw ns \\<Longrightarrow>\n  (X1 + X2, Y1 + X2) \\<in> multpw ns\n  multpw ns \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> multpw ns)\n\ngoal (1 subgoal):\n 1. (X1 + X2, Y1 + Y2) \\<in> multpw ns O mult s", "by auto"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult2_s ns s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mult2_s_one_step':\n  assumes \"ns O s \\<subseteq> s\" \"refl ns\" \"irrefl s\" \"trans s\"\n  shows \"(X, Y) \\<in> mult2_s ns s \\<longleftrightarrow> (\\<exists>X1 X2 Y1 Y2. X = X1 + X2 \\<and> Y = Y1 + Y2 \\<and>\n    (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s)\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((X, Y) \\<in> mult2_s ns s) =\n    (\\<exists>X1 X2 Y1 Y2.\n        X = X1 + X2 \\<and>\n        Y = Y1 + Y2 \\<and>\n        (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s)", "using assms mult2_s_locally_one_step'"], ["proof (prove)\nusing this:\n  ns O s \\<subseteq> s\n  refl ns\n  irrefl s\n  trans s\n  \\<lbrakk>?ns O ?s \\<subseteq> ?s; refl ?ns; locally_irrefl ?s ?X;\n   locally_irrefl ?s ?Y; trans ?s\\<rbrakk>\n  \\<Longrightarrow> ((?X, ?Y) \\<in> mult2_s ?ns ?s) =\n                    (\\<exists>X1 X2 Y1 Y2.\n                        ?X = X1 + X2 \\<and>\n                        ?Y = Y1 + Y2 \\<and>\n                        (X1, Y1) \\<in> multpw ?ns \\<and>\n                        (X2, Y2) \\<in> mult ?s)\n\ngoal (1 subgoal):\n 1. ((X, Y) \\<in> mult2_s ns s) =\n    (\\<exists>X1 X2 Y1 Y2.\n        X = X1 + X2 \\<and>\n        Y = Y1 + Y2 \\<and>\n        (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s)", "by (simp add: mult2_s_locally_one_step' irrefl_def locally_irrefl_def)"], ["", "lemma mult2_ns_one_step':\n  assumes \"ns O s \\<subseteq> s\" \"refl ns\" \"irrefl s\" \"trans s\"\n  shows \"(X, Y) \\<in> mult2_ns ns s \\<longleftrightarrow> (\\<exists>X1 X2 Y1 Y2. X = X1 + X2 \\<and> Y = Y1 + Y2 \\<and>\n    (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=)\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((X, Y) \\<in> mult2_ns ns s) =\n    (\\<exists>X1 X2 Y1 Y2.\n        X = X1 + X2 \\<and>\n        Y = Y1 + Y2 \\<and>\n        (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((X, Y) \\<in> mult2_ns ns s) =\n    (\\<exists>X1 X2 Y1 Y2.\n        X = X1 + X2 \\<and>\n        Y = Y1 + Y2 \\<and>\n        (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=)", "have \"(X, Y) \\<in> multpw ns \\<Longrightarrow> ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> multpw ns \\<Longrightarrow>\n    \\<exists>X1 X2 Y1 Y2.\n       X = X1 + X2 \\<and>\n       Y = Y1 + Y2 \\<and>\n       (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=", "by (intro exI[of _ \"{#}\", THEN exI[of _ Y, THEN exI[of _ \"{#}\", THEN exI[of _ X]]]]) auto"], ["proof (state)\nthis:\n  (X, Y) \\<in> multpw ns \\<Longrightarrow>\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=\n\ngoal (1 subgoal):\n 1. ((X, Y) \\<in> mult2_ns ns s) =\n    (\\<exists>X1 X2 Y1 Y2.\n        X = X1 + X2 \\<and>\n        Y = Y1 + Y2 \\<and>\n        (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=)", "moreover"], ["proof (state)\nthis:\n  (X, Y) \\<in> multpw ns \\<Longrightarrow>\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=\n\ngoal (1 subgoal):\n 1. ((X, Y) \\<in> mult2_ns ns s) =\n    (\\<exists>X1 X2 Y1 Y2.\n        X = X1 + X2 \\<and>\n        Y = Y1 + Y2 \\<and>\n        (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=)", "have \"X = X1 + Y2 \\<and> Y = Y1 + Y2 \\<and> (X1, Y1) \\<in> multpw ns \\<Longrightarrow> ?L\" for X1 Y1 Y2"], ["proof (prove)\ngoal (1 subgoal):\n 1. X = X1 + Y2 \\<and>\n    Y = Y1 + Y2 \\<and> (X1, Y1) \\<in> multpw ns \\<Longrightarrow>\n    (X, Y) \\<in> mult2_ns ns s", "using multpw_add[of X1 Y1 ns Y2 Y2] refl_multpw[OF \\<open>refl ns\\<close>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(X1, Y1) \\<in> multpw ns; (Y2, Y2) \\<in> multpw ns\\<rbrakk>\n  \\<Longrightarrow> (X1 + Y2, Y1 + Y2) \\<in> multpw ns\n  refl (multpw ns)\n\ngoal (1 subgoal):\n 1. X = X1 + Y2 \\<and>\n    Y = Y1 + Y2 \\<and> (X1, Y1) \\<in> multpw ns \\<Longrightarrow>\n    (X, Y) \\<in> mult2_ns ns s", "by (auto simp: mult2_ns_def refl_on_def)"], ["proof (state)\nthis:\n  X = ?X1.0 + ?Y2.0 \\<and>\n  Y = ?Y1.0 + ?Y2.0 \\<and> (?X1.0, ?Y1.0) \\<in> multpw ns \\<Longrightarrow>\n  (X, Y) \\<in> mult2_ns ns s\n\ngoal (1 subgoal):\n 1. ((X, Y) \\<in> mult2_ns ns s) =\n    (\\<exists>X1 X2 Y1 Y2.\n        X = X1 + X2 \\<and>\n        Y = Y1 + Y2 \\<and>\n        (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=)", "ultimately"], ["proof (chain)\npicking this:\n  (X, Y) \\<in> multpw ns \\<Longrightarrow>\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=\n  X = ?X1.0 + ?Y2.0 \\<and>\n  Y = ?Y1.0 + ?Y2.0 \\<and> (?X1.0, ?Y1.0) \\<in> multpw ns \\<Longrightarrow>\n  (X, Y) \\<in> mult2_ns ns s", "show ?thesis"], ["proof (prove)\nusing this:\n  (X, Y) \\<in> multpw ns \\<Longrightarrow>\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=\n  X = ?X1.0 + ?Y2.0 \\<and>\n  Y = ?Y1.0 + ?Y2.0 \\<and> (?X1.0, ?Y1.0) \\<in> multpw ns \\<Longrightarrow>\n  (X, Y) \\<in> mult2_ns ns s\n\ngoal (1 subgoal):\n 1. ((X, Y) \\<in> mult2_ns ns s) =\n    (\\<exists>X1 X2 Y1 Y2.\n        X = X1 + X2 \\<and>\n        Y = Y1 + Y2 \\<and>\n        (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=)", "using mult2_s_one_step'[OF assms]"], ["proof (prove)\nusing this:\n  (X, Y) \\<in> multpw ns \\<Longrightarrow>\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=\n  X = ?X1.0 + ?Y2.0 \\<and>\n  Y = ?Y1.0 + ?Y2.0 \\<and> (?X1.0, ?Y1.0) \\<in> multpw ns \\<Longrightarrow>\n  (X, Y) \\<in> mult2_ns ns s\n  ((?X, ?Y) \\<in> mult2_s ns s) =\n  (\\<exists>X1 X2 Y1 Y2.\n      ?X = X1 + X2 \\<and>\n      ?Y = Y1 + Y2 \\<and>\n      (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s)\n\ngoal (1 subgoal):\n 1. ((X, Y) \\<in> mult2_ns ns s) =\n    (\\<exists>X1 X2 Y1 Y2.\n        X = X1 + X2 \\<and>\n        Y = Y1 + Y2 \\<and>\n        (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=)", "unfolding mult2_ns_conv"], ["proof (prove)\nusing this:\n  (X, Y) \\<in> multpw ns \\<Longrightarrow>\n  \\<exists>X1 X2 Y1 Y2.\n     X = X1 + X2 \\<and>\n     Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=\n  X = ?X1.0 + ?Y2.0 \\<and>\n  Y = ?Y1.0 + ?Y2.0 \\<and> (?X1.0, ?Y1.0) \\<in> multpw ns \\<Longrightarrow>\n  (X, Y) \\<in> mult2_s ns s \\<union> multpw ns\n  ((?X, ?Y) \\<in> mult2_s ns s) =\n  (\\<exists>X1 X2 Y1 Y2.\n      ?X = X1 + X2 \\<and>\n      ?Y = Y1 + Y2 \\<and>\n      (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s)\n\ngoal (1 subgoal):\n 1. ((X, Y) \\<in> mult2_s ns s \\<union> multpw ns) =\n    (\\<exists>X1 X2 Y1 Y2.\n        X = X1 + X2 \\<and>\n        Y = Y1 + Y2 \\<and>\n        (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=)", "by auto blast"], ["proof (state)\nthis:\n  ((X, Y) \\<in> mult2_ns ns s) =\n  (\\<exists>X1 X2 Y1 Y2.\n      X = X1 + X2 \\<and>\n      Y = Y1 + Y2 \\<and>\n      (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> (mult s)\\<^sup>=)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Cancellation\\<close>"], ["", "lemma mult2_s_locally_cancel1:\n  assumes \"s O ns \\<subseteq> s\" \"ns O s \\<subseteq> s\" \"refl ns\" \"trans ns\" \"locally_irrefl s (add_mset z X)\" \"locally_irrefl s (add_mset z Y)\" \"trans s\"\n    \"(add_mset z X, add_mset z Y) \\<in> mult2_s ns s\"\n  shows \"(X, Y) \\<in> mult2_s ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "obtain X1 X2 Y1 Y2 where *: \"add_mset z X = X1 + X2\" \"add_mset z Y = Y1 + Y2\" \"(X1, Y1) \\<in> multpw ns\"\n    \"(X2, Y2) \\<in> mult s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X1 X2 Y1 Y2.\n        \\<lbrakk>add_mset z X = X1 + X2; add_mset z Y = Y1 + Y2;\n         (X1, Y1) \\<in> multpw ns; (X2, Y2) \\<in> mult s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(8)"], ["proof (prove)\nusing this:\n  (add_mset z X, add_mset z Y) \\<in> mult2_s ns s\n\ngoal (1 subgoal):\n 1. (\\<And>X1 X2 Y1 Y2.\n        \\<lbrakk>add_mset z X = X1 + X2; add_mset z Y = Y1 + Y2;\n         (X1, Y1) \\<in> multpw ns; (X2, Y2) \\<in> mult s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding mult2_s_locally_one_step'[OF assms(2,3,5,6,7)]"], ["proof (prove)\nusing this:\n  \\<exists>X1 X2 Y1 Y2.\n     add_mset z X = X1 + X2 \\<and>\n     add_mset z Y = Y1 + Y2 \\<and>\n     (X1, Y1) \\<in> multpw ns \\<and> (X2, Y2) \\<in> mult s\n\ngoal (1 subgoal):\n 1. (\\<And>X1 X2 Y1 Y2.\n        \\<lbrakk>add_mset z X = X1 + X2; add_mset z Y = Y1 + Y2;\n         (X1, Y1) \\<in> multpw ns; (X2, Y2) \\<in> mult s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  add_mset z X = X1 + X2\n  add_mset z Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  (X2, Y2) \\<in> mult s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "from union_single_eq_member[OF this(1)] union_single_eq_member[OF this(2)] multi_member_split"], ["proof (chain)\npicking this:\n  z \\<in># X1 + X2\n  z \\<in># Y1 + Y2\n  ?x \\<in># ?M \\<Longrightarrow> \\<exists>A. ?M = add_mset ?x A", "consider X1' where \"X1 = add_mset z X1'\" | Y1' where \"Y1 = add_mset z Y1'\"\n    | X2' Y2' where \"X2 = add_mset z X2'\" \"Y2 = add_mset z Y2'\""], ["proof (prove)\nusing this:\n  z \\<in># X1 + X2\n  z \\<in># Y1 + Y2\n  ?x \\<in># ?M \\<Longrightarrow> \\<exists>A. ?M = add_mset ?x A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>X1'. X1 = add_mset z X1' \\<Longrightarrow> thesis;\n     \\<And>Y1'. Y1 = add_mset z Y1' \\<Longrightarrow> thesis;\n     \\<And>X2' Y2'.\n        \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding set_mset_union Un_iff"], ["proof (prove)\nusing this:\n  z \\<in># X1 \\<or> z \\<in># X2\n  z \\<in># Y1 \\<or> z \\<in># Y2\n  ?x \\<in># ?M \\<Longrightarrow> \\<exists>A. ?M = add_mset ?x A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>X1'. X1 = add_mset z X1' \\<Longrightarrow> thesis;\n     \\<And>Y1'. Y1 = add_mset z Y1' \\<Longrightarrow> thesis;\n     \\<And>X2' Y2'.\n        \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>X1'. X1 = add_mset z X1' \\<Longrightarrow> ?thesis;\n   \\<And>Y1'. Y1 = add_mset z Y1' \\<Longrightarrow> ?thesis;\n   \\<And>X2' Y2'.\n      \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>X1'. X1 = add_mset z X1' \\<Longrightarrow> ?thesis;\n   \\<And>Y1'. Y1 = add_mset z Y1' \\<Longrightarrow> ?thesis;\n   \\<And>X2' Y2'.\n      \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>X1'. X1 = add_mset z X1' \\<Longrightarrow> ?thesis;\n   \\<And>Y1'. Y1 = add_mset z Y1' \\<Longrightarrow> ?thesis;\n   \\<And>X2' Y2'.\n      \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "proof (cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>X1'.\n       X1 = add_mset z X1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 2. \\<And>Y1'.\n       Y1 = add_mset z Y1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 3. \\<And>X2' Y2'.\n       \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "case 1"], ["proof (state)\nthis:\n  X1 = add_mset z X1'\n\ngoal (3 subgoals):\n 1. \\<And>X1'.\n       X1 = add_mset z X1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 2. \\<And>Y1'.\n       Y1 = add_mset z Y1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 3. \\<And>X2' Y2'.\n       \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "then"], ["proof (chain)\npicking this:\n  X1 = add_mset z X1'", "obtain Y1' z' where **: \"(X1', Y1') \\<in> multpw ns\" \"Y1 = add_mset z' Y1'\" \"(z, z') \\<in> ns\""], ["proof (prove)\nusing this:\n  X1 = add_mset z X1'\n\ngoal (1 subgoal):\n 1. (\\<And>Y1' z'.\n        \\<lbrakk>(X1', Y1') \\<in> multpw ns; Y1 = add_mset z' Y1';\n         (z, z') \\<in> ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using *"], ["proof (prove)\nusing this:\n  X1 = add_mset z X1'\n  add_mset z X = X1 + X2\n  add_mset z Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  (X2, Y2) \\<in> mult s\n\ngoal (1 subgoal):\n 1. (\\<And>Y1' z'.\n        \\<lbrakk>(X1', Y1') \\<in> multpw ns; Y1 = add_mset z' Y1';\n         (z, z') \\<in> ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: multpw_split1R)"], ["proof (state)\nthis:\n  (X1', Y1') \\<in> multpw ns\n  Y1 = add_mset z' Y1'\n  (z, z') \\<in> ns\n\ngoal (3 subgoals):\n 1. \\<And>X1'.\n       X1 = add_mset z X1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 2. \\<And>Y1'.\n       Y1 = add_mset z Y1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 3. \\<And>X2' Y2'.\n       \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "then"], ["proof (chain)\npicking this:\n  (X1', Y1') \\<in> multpw ns\n  Y1 = add_mset z' Y1'\n  (z, z') \\<in> ns", "have \"(X, Y1' + Y2) \\<in> mult2_s ns s\""], ["proof (prove)\nusing this:\n  (X1', Y1') \\<in> multpw ns\n  Y1 = add_mset z' Y1'\n  (z, z') \\<in> ns\n\ngoal (1 subgoal):\n 1. (X, Y1' + Y2) \\<in> mult2_s ns s", "using * 1"], ["proof (prove)\nusing this:\n  (X1', Y1') \\<in> multpw ns\n  Y1 = add_mset z' Y1'\n  (z, z') \\<in> ns\n  add_mset z X = X1 + X2\n  add_mset z Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  (X2, Y2) \\<in> mult s\n  X1 = add_mset z X1'\n\ngoal (1 subgoal):\n 1. (X, Y1' + Y2) \\<in> mult2_s ns s", "by auto (metis add_mset_add_single assms(2 - 7) li_trans_l mult2_s_locally_one_step')"], ["proof (state)\nthis:\n  (X, Y1' + Y2) \\<in> mult2_s ns s\n\ngoal (3 subgoals):\n 1. \\<And>X1'.\n       X1 = add_mset z X1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 2. \\<And>Y1'.\n       Y1 = add_mset z Y1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 3. \\<And>X2' Y2'.\n       \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "moreover"], ["proof (state)\nthis:\n  (X, Y1' + Y2) \\<in> mult2_s ns s\n\ngoal (3 subgoals):\n 1. \\<And>X1'.\n       X1 = add_mset z X1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 2. \\<And>Y1'.\n       Y1 = add_mset z Y1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 3. \\<And>X2' Y2'.\n       \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "have \"(Y1' + Y2, Y) \\<in> multpw ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Y1' + Y2, Y) \\<in> multpw ns", "using refl_multpw[OF \\<open>refl ns\\<close>] * ** multpw_cancel1[OF \\<open>trans ns\\<close> **(3), of \"Y1' + Y2\" Y]"], ["proof (prove)\nusing this:\n  refl (multpw ns)\n  add_mset z X = X1 + X2\n  add_mset z Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  (X2, Y2) \\<in> mult s\n  (X1', Y1') \\<in> multpw ns\n  Y1 = add_mset z' Y1'\n  (z, z') \\<in> ns\n  (add_mset z' (Y1' + Y2), add_mset z Y) \\<in> multpw ns \\<Longrightarrow>\n  (Y1' + Y2, Y) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (Y1' + Y2, Y) \\<in> multpw ns", "by (auto simp: refl_on_def)"], ["proof (state)\nthis:\n  (Y1' + Y2, Y) \\<in> multpw ns\n\ngoal (3 subgoals):\n 1. \\<And>X1'.\n       X1 = add_mset z X1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 2. \\<And>Y1'.\n       Y1 = add_mset z Y1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 3. \\<And>X2' Y2'.\n       \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "ultimately"], ["proof (chain)\npicking this:\n  (X, Y1' + Y2) \\<in> mult2_s ns s\n  (Y1' + Y2, Y) \\<in> multpw ns", "show ?thesis"], ["proof (prove)\nusing this:\n  (X, Y1' + Y2) \\<in> mult2_s ns s\n  (Y1' + Y2, Y) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "using compat_mult2[OF assms(1,3,4)]"], ["proof (prove)\nusing this:\n  (X, Y1' + Y2) \\<in> mult2_s ns s\n  (Y1' + Y2, Y) \\<in> multpw ns\n  mult2_ns ns s O mult2_s ns s \\<subseteq> mult2_s ns s\n  mult2_s ns s O mult2_ns ns s \\<subseteq> mult2_s ns s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "unfolding mult2_ns_conv"], ["proof (prove)\nusing this:\n  (X, Y1' + Y2) \\<in> mult2_s ns s\n  (Y1' + Y2, Y) \\<in> multpw ns\n  (mult2_s ns s \\<union> multpw ns) O mult2_s ns s \\<subseteq> mult2_s ns s\n  mult2_s ns s O (mult2_s ns s \\<union> multpw ns) \\<subseteq> mult2_s ns s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "by blast"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult2_s ns s\n\ngoal (2 subgoals):\n 1. \\<And>Y1'.\n       Y1 = add_mset z Y1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 2. \\<And>X2' Y2'.\n       \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Y1'.\n       Y1 = add_mset z Y1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 2. \\<And>X2' Y2'.\n       \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "case 2"], ["proof (state)\nthis:\n  Y1 = add_mset z Y1'\n\ngoal (2 subgoals):\n 1. \\<And>Y1'.\n       Y1 = add_mset z Y1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 2. \\<And>X2' Y2'.\n       \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "then"], ["proof (chain)\npicking this:\n  Y1 = add_mset z Y1'", "obtain X1' z' where **: \"(X1', Y1') \\<in> multpw ns\" \"X1 = add_mset z' X1'\" \"(z', z) \\<in> ns\""], ["proof (prove)\nusing this:\n  Y1 = add_mset z Y1'\n\ngoal (1 subgoal):\n 1. (\\<And>X1' z'.\n        \\<lbrakk>(X1', Y1') \\<in> multpw ns; X1 = add_mset z' X1';\n         (z', z) \\<in> ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using *"], ["proof (prove)\nusing this:\n  Y1 = add_mset z Y1'\n  add_mset z X = X1 + X2\n  add_mset z Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  (X2, Y2) \\<in> mult s\n\ngoal (1 subgoal):\n 1. (\\<And>X1' z'.\n        \\<lbrakk>(X1', Y1') \\<in> multpw ns; X1 = add_mset z' X1';\n         (z', z) \\<in> ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: multpw_split1L)"], ["proof (state)\nthis:\n  (X1', Y1') \\<in> multpw ns\n  X1 = add_mset z' X1'\n  (z', z) \\<in> ns\n\ngoal (2 subgoals):\n 1. \\<And>Y1'.\n       Y1 = add_mset z Y1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 2. \\<And>X2' Y2'.\n       \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "then"], ["proof (chain)\npicking this:\n  (X1', Y1') \\<in> multpw ns\n  X1 = add_mset z' X1'\n  (z', z) \\<in> ns", "have \"(X1' + X2, Y) \\<in> mult2_s ns s\""], ["proof (prove)\nusing this:\n  (X1', Y1') \\<in> multpw ns\n  X1 = add_mset z' X1'\n  (z', z) \\<in> ns\n\ngoal (1 subgoal):\n 1. (X1' + X2, Y) \\<in> mult2_s ns s", "using * 2"], ["proof (prove)\nusing this:\n  (X1', Y1') \\<in> multpw ns\n  X1 = add_mset z' X1'\n  (z', z) \\<in> ns\n  add_mset z X = X1 + X2\n  add_mset z Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  (X2, Y2) \\<in> mult s\n  Y1 = add_mset z Y1'\n\ngoal (1 subgoal):\n 1. (X1' + X2, Y) \\<in> mult2_s ns s", "by auto (metis add_mset_add_single assms(2 - 7) li_trans_l mult2_s_locally_one_step')"], ["proof (state)\nthis:\n  (X1' + X2, Y) \\<in> mult2_s ns s\n\ngoal (2 subgoals):\n 1. \\<And>Y1'.\n       Y1 = add_mset z Y1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 2. \\<And>X2' Y2'.\n       \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "moreover"], ["proof (state)\nthis:\n  (X1' + X2, Y) \\<in> mult2_s ns s\n\ngoal (2 subgoals):\n 1. \\<And>Y1'.\n       Y1 = add_mset z Y1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 2. \\<And>X2' Y2'.\n       \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "have \"(X, X1' + X2) \\<in> multpw ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, X1' + X2) \\<in> multpw ns", "using refl_multpw[OF \\<open>refl ns\\<close>] * ** multpw_cancel1[OF \\<open>trans ns\\<close> **(3), of X \"X1' + X2\"]"], ["proof (prove)\nusing this:\n  refl (multpw ns)\n  add_mset z X = X1 + X2\n  add_mset z Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  (X2, Y2) \\<in> mult s\n  (X1', Y1') \\<in> multpw ns\n  X1 = add_mset z' X1'\n  (z', z) \\<in> ns\n  (add_mset z X, add_mset z' (X1' + X2)) \\<in> multpw ns \\<Longrightarrow>\n  (X, X1' + X2) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (X, X1' + X2) \\<in> multpw ns", "by (auto simp: refl_on_def)"], ["proof (state)\nthis:\n  (X, X1' + X2) \\<in> multpw ns\n\ngoal (2 subgoals):\n 1. \\<And>Y1'.\n       Y1 = add_mset z Y1' \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 2. \\<And>X2' Y2'.\n       \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "ultimately"], ["proof (chain)\npicking this:\n  (X1' + X2, Y) \\<in> mult2_s ns s\n  (X, X1' + X2) \\<in> multpw ns", "show ?thesis"], ["proof (prove)\nusing this:\n  (X1' + X2, Y) \\<in> mult2_s ns s\n  (X, X1' + X2) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "using compat_mult2[OF assms(1,3,4)]"], ["proof (prove)\nusing this:\n  (X1' + X2, Y) \\<in> mult2_s ns s\n  (X, X1' + X2) \\<in> multpw ns\n  mult2_ns ns s O mult2_s ns s \\<subseteq> mult2_s ns s\n  mult2_s ns s O mult2_ns ns s \\<subseteq> mult2_s ns s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "unfolding mult2_ns_conv"], ["proof (prove)\nusing this:\n  (X1' + X2, Y) \\<in> mult2_s ns s\n  (X, X1' + X2) \\<in> multpw ns\n  (mult2_s ns s \\<union> multpw ns) O mult2_s ns s \\<subseteq> mult2_s ns s\n  mult2_s ns s O (mult2_s ns s \\<union> multpw ns) \\<subseteq> mult2_s ns s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "by blast"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult2_s ns s\n\ngoal (1 subgoal):\n 1. \\<And>X2' Y2'.\n       \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X2' Y2'.\n       \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "case 3"], ["proof (state)\nthis:\n  X2 = add_mset z X2'\n  Y2 = add_mset z Y2'\n\ngoal (1 subgoal):\n 1. \\<And>X2' Y2'.\n       \\<lbrakk>X2 = add_mset z X2'; Y2 = add_mset z Y2'\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "then"], ["proof (chain)\npicking this:\n  X2 = add_mset z X2'\n  Y2 = add_mset z Y2'", "show ?thesis"], ["proof (prove)\nusing this:\n  X2 = add_mset z X2'\n  Y2 = add_mset z Y2'\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "using assms *"], ["proof (prove)\nusing this:\n  X2 = add_mset z X2'\n  Y2 = add_mset z Y2'\n  s O ns \\<subseteq> s\n  ns O s \\<subseteq> s\n  refl ns\n  trans ns\n  locally_irrefl s (add_mset z X)\n  locally_irrefl s (add_mset z Y)\n  trans s\n  (add_mset z X, add_mset z Y) \\<in> mult2_s ns s\n  add_mset z X = X1 + X2\n  add_mset z Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  (X2, Y2) \\<in> mult s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "by (auto simp: mult2_s_locally_one_step' union_commute[of \"{#_#}\"] union_assoc[symmetric] mult_cancel mult_cancel_add_mset)\n        (metis \"*\"(1) \"*\"(2) add_mset_add_single li_trans_l li_trans_r mult2_s_locally_one_step' mult_locally_cancel)"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult2_s ns s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult2_s ns s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mult2_s_cancel1:\n  assumes \"s O ns \\<subseteq> s\" \"ns O s \\<subseteq> s\" \"refl ns\" \"trans ns\" \"irrefl s\" \"trans s\" \"(add_mset z X, add_mset z Y) \\<in> mult2_s ns s\"\n  shows \"(X, Y) \\<in> mult2_s ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "using assms mult2_s_locally_cancel1"], ["proof (prove)\nusing this:\n  s O ns \\<subseteq> s\n  ns O s \\<subseteq> s\n  refl ns\n  trans ns\n  irrefl s\n  trans s\n  (add_mset z X, add_mset z Y) \\<in> mult2_s ns s\n  \\<lbrakk>?s O ?ns \\<subseteq> ?s; ?ns O ?s \\<subseteq> ?s; refl ?ns;\n   trans ?ns; locally_irrefl ?s (add_mset ?z ?X);\n   locally_irrefl ?s (add_mset ?z ?Y); trans ?s;\n   (add_mset ?z ?X, add_mset ?z ?Y) \\<in> mult2_s ?ns ?s\\<rbrakk>\n  \\<Longrightarrow> (?X, ?Y) \\<in> mult2_s ?ns ?s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "by (metis irrefl_def locally_irrefl_def)"], ["", "lemma mult2_s_locally_cancel:\n  assumes \"s O ns \\<subseteq> s\" \"ns O s \\<subseteq> s\" \"refl ns\" \"trans ns\" \"locally_irrefl s (X + Z)\" \"locally_irrefl s (Y + Z)\" \"trans s\"\n  shows \"(X + Z, Y + Z) \\<in> mult2_s ns s \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X + Z, Y + Z) \\<in> mult2_s ns s \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s", "using assms(5, 6)"], ["proof (prove)\nusing this:\n  locally_irrefl s (X + Z)\n  locally_irrefl s (Y + Z)\n\ngoal (1 subgoal):\n 1. (X + Z, Y + Z) \\<in> mult2_s ns s \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s", "proof (induct Z)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>(X + {#}, Y + {#}) \\<in> mult2_s ns s;\n     locally_irrefl s (X + {#}); locally_irrefl s (Y + {#})\\<rbrakk>\n    \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 2. \\<And>x Z.\n       \\<lbrakk>\\<lbrakk>(X + Z, Y + Z) \\<in> mult2_s ns s;\n                 locally_irrefl s (X + Z); locally_irrefl s (Y + Z)\\<rbrakk>\n                \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s;\n        (X + add_mset x Z, Y + add_mset x Z) \\<in> mult2_s ns s;\n        locally_irrefl s (X + add_mset x Z);\n        locally_irrefl s (Y + add_mset x Z)\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "case (add z Z)"], ["proof (state)\nthis:\n  \\<lbrakk>(X + Z, Y + Z) \\<in> mult2_s ns s; locally_irrefl s (X + Z);\n   locally_irrefl s (Y + Z)\\<rbrakk>\n  \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n  (X + add_mset z Z, Y + add_mset z Z) \\<in> mult2_s ns s\n  locally_irrefl s (X + add_mset z Z)\n  locally_irrefl s (Y + add_mset z Z)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(X + {#}, Y + {#}) \\<in> mult2_s ns s;\n     locally_irrefl s (X + {#}); locally_irrefl s (Y + {#})\\<rbrakk>\n    \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n 2. \\<And>x Z.\n       \\<lbrakk>\\<lbrakk>(X + Z, Y + Z) \\<in> mult2_s ns s;\n                 locally_irrefl s (X + Z); locally_irrefl s (Y + Z)\\<rbrakk>\n                \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s;\n        (X + add_mset x Z, Y + add_mset x Z) \\<in> mult2_s ns s;\n        locally_irrefl s (X + add_mset x Z);\n        locally_irrefl s (Y + add_mset x Z)\\<rbrakk>\n       \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>(X + Z, Y + Z) \\<in> mult2_s ns s; locally_irrefl s (X + Z);\n   locally_irrefl s (Y + Z)\\<rbrakk>\n  \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n  (X + add_mset z Z, Y + add_mset z Z) \\<in> mult2_s ns s\n  locally_irrefl s (X + add_mset z Z)\n  locally_irrefl s (Y + add_mset z Z)", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>(X + Z, Y + Z) \\<in> mult2_s ns s; locally_irrefl s (X + Z);\n   locally_irrefl s (Y + Z)\\<rbrakk>\n  \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n  (X + add_mset z Z, Y + add_mset z Z) \\<in> mult2_s ns s\n  locally_irrefl s (X + add_mset z Z)\n  locally_irrefl s (Y + add_mset z Z)\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "using mult2_s_locally_cancel1[OF assms(1-4), of z \"X + Z\" \"Y + Z\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(X + Z, Y + Z) \\<in> mult2_s ns s; locally_irrefl s (X + Z);\n   locally_irrefl s (Y + Z)\\<rbrakk>\n  \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\n  (X + add_mset z Z, Y + add_mset z Z) \\<in> mult2_s ns s\n  locally_irrefl s (X + add_mset z Z)\n  locally_irrefl s (Y + add_mset z Z)\n  \\<lbrakk>locally_irrefl s (add_mset z (X + Z));\n   locally_irrefl s (add_mset z (Y + Z)); trans s;\n   (add_mset z (X + Z), add_mset z (Y + Z)) \\<in> mult2_s ns s\\<rbrakk>\n  \\<Longrightarrow> (X + Z, Y + Z) \\<in> mult2_s ns s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_s ns s", "by auto (metis add_mset_add_single assms(7) li_trans_l)"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult2_s ns s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(X + {#}, Y + {#}) \\<in> mult2_s ns s;\n     locally_irrefl s (X + {#}); locally_irrefl s (Y + {#})\\<rbrakk>\n    \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s", "qed auto"], ["", "lemma mult2_s_cancel:\n  assumes \"s O ns \\<subseteq> s\" \"ns O s \\<subseteq> s\" \"refl ns\" \"trans ns\" \"irrefl s\" \"trans s\"\n  shows \"(X + Z, Y + Z) \\<in> mult2_s ns s \\<Longrightarrow> (X, Y) \\<in> mult2_s ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X + Z, Y + Z) \\<in> mult2_s ns s \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s", "using mult2_s_locally_cancel assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s O ?ns \\<subseteq> ?s; ?ns O ?s \\<subseteq> ?s; refl ?ns;\n   trans ?ns; locally_irrefl ?s (?X + ?Z); locally_irrefl ?s (?Y + ?Z);\n   trans ?s; (?X + ?Z, ?Y + ?Z) \\<in> mult2_s ?ns ?s\\<rbrakk>\n  \\<Longrightarrow> (?X, ?Y) \\<in> mult2_s ?ns ?s\n  s O ns \\<subseteq> s\n  ns O s \\<subseteq> s\n  refl ns\n  trans ns\n  irrefl s\n  trans s\n\ngoal (1 subgoal):\n 1. (X + Z, Y + Z) \\<in> mult2_s ns s \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s", "by (metis irrefl_def locally_irrefl_def)"], ["", "lemma mult2_ns_cancel:\n  assumes \"s O ns \\<subseteq> s\" \"ns O s \\<subseteq> s\" \"refl ns\" \"trans s\" \"irrefl s\" \"trans ns\"\n  shows \"(X + Z, Y + Z) \\<in> mult2_s ns s \\<Longrightarrow> (X, Y) \\<in> mult2_ns ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X + Z, Y + Z) \\<in> mult2_s ns s \\<Longrightarrow>\n    (X, Y) \\<in> mult2_ns ns s", "unfolding mult2_ns_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. (X + Z, Y + Z) \\<in> mult2_s ns s \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s \\<union> multpw ns", "using assms mult2_s_cancel multpw_cancel"], ["proof (prove)\nusing this:\n  s O ns \\<subseteq> s\n  ns O s \\<subseteq> s\n  refl ns\n  trans s\n  irrefl s\n  trans ns\n  \\<lbrakk>?s O ?ns \\<subseteq> ?s; ?ns O ?s \\<subseteq> ?s; refl ?ns;\n   trans ?ns; irrefl ?s; trans ?s;\n   (?X + ?Z, ?Y + ?Z) \\<in> mult2_s ?ns ?s\\<rbrakk>\n  \\<Longrightarrow> (?X, ?Y) \\<in> mult2_s ?ns ?s\n  \\<lbrakk>refl ?ns; trans ?ns\\<rbrakk>\n  \\<Longrightarrow> ((?X + ?Z, ?Y + ?Z) \\<in> multpw ?ns) =\n                    ((?X, ?Y) \\<in> multpw ?ns)\n\ngoal (1 subgoal):\n 1. (X + Z, Y + Z) \\<in> mult2_s ns s \\<Longrightarrow>\n    (X, Y) \\<in> mult2_s ns s \\<union> multpw ns", "by blast"], ["", "subsection \\<open>Implementation friendly versions of @{const mult2_s} and @{const mult2_ns}\\<close>"], ["", "definition mult2_alt :: \"bool \\<Rightarrow> 'a rel \\<Rightarrow> 'a rel \\<Rightarrow> 'a multiset rel\" where\n  \"mult2_alt b ns s = {(X, Y). (\\<exists>X1 X2 Y1 Y2. X = X1 + X2 \\<and> Y = Y1 + Y2 \\<and>\n    (X1, Y1) \\<in> multpw ns \\<and> (b \\<or> Y2 \\<noteq> {#}) \\<and> (\\<forall>x. x \\<in># X2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)))}\""], ["", "lemma mult2_altI:\n  assumes \"X = X1 + X2\" \"Y = Y1 + Y2\" \"(X1, Y1) \\<in> multpw ns\"\n    \"b \\<or> Y2 \\<noteq> {#}\" \"\\<forall>x. x \\<in># X2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\"\n  shows \"(X, Y) \\<in> mult2_alt b ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_alt b ns s", "using assms"], ["proof (prove)\nusing this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  b \\<or> Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_alt b ns s", "unfolding mult2_alt_def"], ["proof (prove)\nusing this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  b \\<or> Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. (X, Y)\n    \\<in> {(X, Y).\n           \\<exists>X1 X2 Y1 Y2.\n              X = X1 + X2 \\<and>\n              Y = Y1 + Y2 \\<and>\n              (X1, Y1) \\<in> multpw ns \\<and>\n              (b \\<or> Y2 \\<noteq> {#}) \\<and>\n              (\\<forall>x.\n                  x \\<in># X2 \\<longrightarrow>\n                  (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))}", "by blast"], ["", "lemma mult2_altE:\n  assumes \"(X, Y) \\<in> mult2_alt b ns s\"\n  obtains X1 X2 Y1 Y2 where \"X = X1 + X2\" \"Y = Y1 + Y2\" \"(X1, Y1) \\<in> multpw ns\"\n    \"b \\<or> Y2 \\<noteq> {#}\" \"\\<forall>x. x \\<in># X2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X1 X2 Y1 Y2.\n        \\<lbrakk>X = X1 + X2; Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n         b \\<or> Y2 \\<noteq> {#};\n         \\<forall>x.\n            x \\<in># X2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  (X, Y) \\<in> mult2_alt b ns s\n\ngoal (1 subgoal):\n 1. (\\<And>X1 X2 Y1 Y2.\n        \\<lbrakk>X = X1 + X2; Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n         b \\<or> Y2 \\<noteq> {#};\n         \\<forall>x.\n            x \\<in># X2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding mult2_alt_def"], ["proof (prove)\nusing this:\n  (X, Y)\n  \\<in> {(X, Y).\n         \\<exists>X1 X2 Y1 Y2.\n            X = X1 + X2 \\<and>\n            Y = Y1 + Y2 \\<and>\n            (X1, Y1) \\<in> multpw ns \\<and>\n            (b \\<or> Y2 \\<noteq> {#}) \\<and>\n            (\\<forall>x.\n                x \\<in># X2 \\<longrightarrow>\n                (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))}\n\ngoal (1 subgoal):\n 1. (\\<And>X1 X2 Y1 Y2.\n        \\<lbrakk>X = X1 + X2; Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n         b \\<or> Y2 \\<noteq> {#};\n         \\<forall>x.\n            x \\<in># X2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma mono_mult2_alt:\n  assumes \"ns \\<subseteq> ns'\" \"s \\<subseteq> s'\" shows \"mult2_alt b ns s \\<subseteq> mult2_alt b ns' s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult2_alt b ns s \\<subseteq> mult2_alt b ns' s'", "unfolding mult2_alt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(X, Y).\n     \\<exists>X1 X2 Y1 Y2.\n        X = X1 + X2 \\<and>\n        Y = Y1 + Y2 \\<and>\n        (X1, Y1) \\<in> multpw ns \\<and>\n        (b \\<or> Y2 \\<noteq> {#}) \\<and>\n        (\\<forall>x.\n            x \\<in># X2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))}\n    \\<subseteq> {(X, Y).\n                 \\<exists>X1 X2 Y1 Y2.\n                    X = X1 + X2 \\<and>\n                    Y = Y1 + Y2 \\<and>\n                    (X1, Y1) \\<in> multpw ns' \\<and>\n                    (b \\<or> Y2 \\<noteq> {#}) \\<and>\n                    (\\<forall>x.\n                        x \\<in># X2 \\<longrightarrow>\n                        (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s'))}", "using mono_multpw[OF assms(1)] assms"], ["proof (prove)\nusing this:\n  multpw ns \\<subseteq> multpw ns'\n  ns \\<subseteq> ns'\n  s \\<subseteq> s'\n\ngoal (1 subgoal):\n 1. {(X, Y).\n     \\<exists>X1 X2 Y1 Y2.\n        X = X1 + X2 \\<and>\n        Y = Y1 + Y2 \\<and>\n        (X1, Y1) \\<in> multpw ns \\<and>\n        (b \\<or> Y2 \\<noteq> {#}) \\<and>\n        (\\<forall>x.\n            x \\<in># X2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))}\n    \\<subseteq> {(X, Y).\n                 \\<exists>X1 X2 Y1 Y2.\n                    X = X1 + X2 \\<and>\n                    Y = Y1 + Y2 \\<and>\n                    (X1, Y1) \\<in> multpw ns' \\<and>\n                    (b \\<or> Y2 \\<noteq> {#}) \\<and>\n                    (\\<forall>x.\n                        x \\<in># X2 \\<longrightarrow>\n                        (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s'))}", "by (blast 19)"], ["", "abbreviation \"mult2_alt_s \\<equiv> mult2_alt False\""], ["", "abbreviation \"mult2_alt_ns \\<equiv> mult2_alt True\""], ["", "lemmas mult2_alt_s_def = mult2_alt_def[where b = False, unfolded simp_thms]"], ["", "lemmas mult2_alt_ns_def = mult2_alt_def[where b = True, unfolded simp_thms]"], ["", "lemmas mult2_alt_sI = mult2_altI[where b = False, unfolded simp_thms]"], ["", "lemmas mult2_alt_nsI = mult2_altI[where b = True, unfolded simp_thms True_implies_equals]"], ["", "lemmas mult2_alt_sE = mult2_altE[where b = False, unfolded simp_thms]"], ["", "lemmas mult2_alt_nsE = mult2_altE[where b = True, unfolded simp_thms True_implies_equals]"], ["", "paragraph \\<open>Equivalence to @{const mult2_s} and @{const mult2_ns}\\<close>"], ["", "lemma mult2_s_eq_mult2_s_alt:\n  assumes \"ns O s \\<subseteq> s\" \"refl ns\" \"trans s\"\n  shows \"mult2_alt_s ns s = mult2_s ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult2_alt_s ns s = mult2_s ns s", "using mult2_s_one_step[OF assms]"], ["proof (prove)\nusing this:\n  ((?X, ?Y) \\<in> mult2_s ns s) =\n  (\\<exists>X1 X2 Y1 Y2.\n      ?X = X1 + X2 \\<and>\n      ?Y = Y1 + Y2 \\<and>\n      (X1, Y1) \\<in> multpw ns \\<and>\n      Y2 \\<noteq> {#} \\<and>\n      (\\<forall>x.\n          x \\<in># X2 \\<longrightarrow>\n          (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)))\n\ngoal (1 subgoal):\n 1. mult2_alt_s ns s = mult2_s ns s", "unfolding mult2_alt_s_def"], ["proof (prove)\nusing this:\n  ((?X, ?Y) \\<in> mult2_s ns s) =\n  (\\<exists>X1 X2 Y1 Y2.\n      ?X = X1 + X2 \\<and>\n      ?Y = Y1 + Y2 \\<and>\n      (X1, Y1) \\<in> multpw ns \\<and>\n      Y2 \\<noteq> {#} \\<and>\n      (\\<forall>x.\n          x \\<in># X2 \\<longrightarrow>\n          (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)))\n\ngoal (1 subgoal):\n 1. {(X, Y).\n     \\<exists>X1 X2 Y1 Y2.\n        X = X1 + X2 \\<and>\n        Y = Y1 + Y2 \\<and>\n        (X1, Y1) \\<in> multpw ns \\<and>\n        Y2 \\<noteq> {#} \\<and>\n        (\\<forall>x.\n            x \\<in># X2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))} =\n    mult2_s ns s", "by blast"], ["", "lemma mult2_ns_eq_mult2_ns_alt:\n  assumes \"ns O s \\<subseteq> s\" \"refl ns\" \"trans s\"\n  shows \"mult2_alt_ns ns s = mult2_ns ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult2_alt_ns ns s = mult2_ns ns s", "using mult2_ns_one_step[OF assms]"], ["proof (prove)\nusing this:\n  ((?X, ?Y) \\<in> mult2_ns ns s) =\n  (\\<exists>X1 X2 Y1 Y2.\n      ?X = X1 + X2 \\<and>\n      ?Y = Y1 + Y2 \\<and>\n      (X1, Y1) \\<in> multpw ns \\<and>\n      (\\<forall>x.\n          x \\<in># X2 \\<longrightarrow>\n          (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)))\n\ngoal (1 subgoal):\n 1. mult2_alt_ns ns s = mult2_ns ns s", "unfolding mult2_alt_ns_def"], ["proof (prove)\nusing this:\n  ((?X, ?Y) \\<in> mult2_ns ns s) =\n  (\\<exists>X1 X2 Y1 Y2.\n      ?X = X1 + X2 \\<and>\n      ?Y = Y1 + Y2 \\<and>\n      (X1, Y1) \\<in> multpw ns \\<and>\n      (\\<forall>x.\n          x \\<in># X2 \\<longrightarrow>\n          (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)))\n\ngoal (1 subgoal):\n 1. {(X, Y).\n     \\<exists>X1 X2 Y1 Y2.\n        X = X1 + X2 \\<and>\n        Y = Y1 + Y2 \\<and>\n        (X1, Y1) \\<in> multpw ns \\<and>\n        (\\<forall>x.\n            x \\<in># X2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))} =\n    mult2_ns ns s", "by blast"], ["", "lemma mult2_alt_local:\n  assumes \"(X, Y) \\<in> mult2_alt b ns s\"\n  shows \"(X, Y) \\<in> mult2_alt b (ns \\<inter> set_mset X \\<times> set_mset Y) (s \\<inter> set_mset X \\<times> set_mset Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Y)\n    \\<in> mult2_alt b (ns \\<inter> set_mset X \\<times> set_mset Y)\n           (s \\<inter> set_mset X \\<times> set_mset Y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (X, Y)\n    \\<in> mult2_alt b (ns \\<inter> set_mset X \\<times> set_mset Y)\n           (s \\<inter> set_mset X \\<times> set_mset Y)", "from assms"], ["proof (chain)\npicking this:\n  (X, Y) \\<in> mult2_alt b ns s", "obtain X1 X2 Y1 Y2 where *: \"X = X1 + X2\" \"Y = Y1 + Y2\" and\n    \"(X1, Y1) \\<in> multpw ns\" \"(b \\<or> Y2 \\<noteq> {#})\" \"(\\<forall>x. x \\<in># X2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))\""], ["proof (prove)\nusing this:\n  (X, Y) \\<in> mult2_alt b ns s\n\ngoal (1 subgoal):\n 1. (\\<And>X1 X2 Y1 Y2.\n        \\<lbrakk>X = X1 + X2; Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n         b \\<or> Y2 \\<noteq> {#};\n         \\<forall>x.\n            x \\<in># X2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding mult2_alt_def"], ["proof (prove)\nusing this:\n  (X, Y)\n  \\<in> {(X, Y).\n         \\<exists>X1 X2 Y1 Y2.\n            X = X1 + X2 \\<and>\n            Y = Y1 + Y2 \\<and>\n            (X1, Y1) \\<in> multpw ns \\<and>\n            (b \\<or> Y2 \\<noteq> {#}) \\<and>\n            (\\<forall>x.\n                x \\<in># X2 \\<longrightarrow>\n                (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))}\n\ngoal (1 subgoal):\n 1. (\\<And>X1 X2 Y1 Y2.\n        \\<lbrakk>X = X1 + X2; Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n         b \\<or> Y2 \\<noteq> {#};\n         \\<forall>x.\n            x \\<in># X2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  b \\<or> Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. (X, Y)\n    \\<in> mult2_alt b (ns \\<inter> set_mset X \\<times> set_mset Y)\n           (s \\<inter> set_mset X \\<times> set_mset Y)", "then"], ["proof (chain)\npicking this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  b \\<or> Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)", "have \"X = X1 + X2 \\<and> Y = Y1 + Y2 \\<and>\n    (X1, Y1) \\<in> multpw (ns \\<inter> set_mset X \\<times> set_mset Y) \\<and> (b \\<or> Y2 \\<noteq> {#}) \\<and>\n    (\\<forall>x. x \\<in># X2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s \\<inter> set_mset X \\<times> set_mset Y))\""], ["proof (prove)\nusing this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  b \\<or> Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. X = X1 + X2 \\<and>\n    Y = Y1 + Y2 \\<and>\n    (X1, Y1)\n    \\<in> multpw (ns \\<inter> set_mset X \\<times> set_mset Y) \\<and>\n    (b \\<or> Y2 \\<noteq> {#}) \\<and>\n    (\\<forall>x.\n        x \\<in># X2 \\<longrightarrow>\n        (\\<exists>y.\n            y \\<in># Y2 \\<and>\n            (x, y) \\<in> s \\<inter> set_mset X \\<times> set_mset Y))", "using multpw_local[of X1 Y1 ns]\n      mono_multpw[of \"ns \\<inter> set_mset X1 \\<times> set_mset Y1\" \"ns \\<inter> set_mset X \\<times> set_mset Y\"] assms"], ["proof (prove)\nusing this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  b \\<or> Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n  (X1, Y1) \\<in> multpw ns \\<Longrightarrow>\n  (X1, Y1) \\<in> multpw (ns \\<inter> set_mset X1 \\<times> set_mset Y1)\n  ns \\<inter> set_mset X1 \\<times> set_mset Y1\n  \\<subseteq> ns \\<inter> set_mset X \\<times> set_mset Y \\<Longrightarrow>\n  multpw (ns \\<inter> set_mset X1 \\<times> set_mset Y1)\n  \\<subseteq> multpw (ns \\<inter> set_mset X \\<times> set_mset Y)\n  (X, Y) \\<in> mult2_alt b ns s\n\ngoal (1 subgoal):\n 1. X = X1 + X2 \\<and>\n    Y = Y1 + Y2 \\<and>\n    (X1, Y1)\n    \\<in> multpw (ns \\<inter> set_mset X \\<times> set_mset Y) \\<and>\n    (b \\<or> Y2 \\<noteq> {#}) \\<and>\n    (\\<forall>x.\n        x \\<in># X2 \\<longrightarrow>\n        (\\<exists>y.\n            y \\<in># Y2 \\<and>\n            (x, y) \\<in> s \\<inter> set_mset X \\<times> set_mset Y))", "unfolding * set_mset_union"], ["proof (prove)\nusing this:\n  X1 + X2 = X1 + X2\n  Y1 + Y2 = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  b \\<or> Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n  (X1, Y1) \\<in> multpw ns \\<Longrightarrow>\n  (X1, Y1) \\<in> multpw (ns \\<inter> set_mset X1 \\<times> set_mset Y1)\n  ns \\<inter> set_mset X1 \\<times> set_mset Y1\n  \\<subseteq> ns \\<inter>\n              (set_mset X1 \\<union> set_mset X2) \\<times>\n              (set_mset Y1 \\<union> set_mset Y2) \\<Longrightarrow>\n  multpw (ns \\<inter> set_mset X1 \\<times> set_mset Y1)\n  \\<subseteq> multpw\n               (ns \\<inter>\n                (set_mset X1 \\<union> set_mset X2) \\<times>\n                (set_mset Y1 \\<union> set_mset Y2))\n  (X1 + X2, Y1 + Y2) \\<in> mult2_alt b ns s\n\ngoal (1 subgoal):\n 1. X1 + X2 = X1 + X2 \\<and>\n    Y1 + Y2 = Y1 + Y2 \\<and>\n    (X1, Y1)\n    \\<in> multpw\n           (ns \\<inter>\n            (set_mset X1 \\<union> set_mset X2) \\<times>\n            (set_mset Y1 \\<union> set_mset Y2)) \\<and>\n    (b \\<or> Y2 \\<noteq> {#}) \\<and>\n    (\\<forall>x.\n        x \\<in># X2 \\<longrightarrow>\n        (\\<exists>y.\n            y \\<in># Y2 \\<and>\n            (x, y)\n            \\<in> s \\<inter>\n                  (set_mset X1 \\<union> set_mset X2) \\<times>\n                  (set_mset Y1 \\<union> set_mset Y2)))", "unfolding set_mset_def"], ["proof (prove)\nusing this:\n  X1 + X2 = X1 + X2\n  Y1 + Y2 = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  b \\<or> Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in> {x. 0 < count X2 x} \\<longrightarrow>\n     (\\<exists>y. y \\<in> {x. 0 < count Y2 x} \\<and> (x, y) \\<in> s)\n  (X1, Y1) \\<in> multpw ns \\<Longrightarrow>\n  (X1, Y1)\n  \\<in> multpw\n         (ns \\<inter> {x. 0 < count X1 x} \\<times> {x. 0 < count Y1 x})\n  ns \\<inter> {x. 0 < count X1 x} \\<times> {x. 0 < count Y1 x}\n  \\<subseteq> ns \\<inter>\n              ({x. 0 < count X1 x} \\<union> {x. 0 < count X2 x}) \\<times>\n              ({x. 0 < count Y1 x} \\<union>\n               {x. 0 < count Y2 x}) \\<Longrightarrow>\n  multpw (ns \\<inter> {x. 0 < count X1 x} \\<times> {x. 0 < count Y1 x})\n  \\<subseteq> multpw\n               (ns \\<inter>\n                ({x. 0 < count X1 x} \\<union> {x. 0 < count X2 x}) \\<times>\n                ({x. 0 < count Y1 x} \\<union> {x. 0 < count Y2 x}))\n  (X1 + X2, Y1 + Y2) \\<in> mult2_alt b ns s\n\ngoal (1 subgoal):\n 1. X1 + X2 = X1 + X2 \\<and>\n    Y1 + Y2 = Y1 + Y2 \\<and>\n    (X1, Y1)\n    \\<in> multpw\n           (ns \\<inter>\n            ({x. 0 < count X1 x} \\<union> {x. 0 < count X2 x}) \\<times>\n            ({x. 0 < count Y1 x} \\<union> {x. 0 < count Y2 x})) \\<and>\n    (b \\<or> Y2 \\<noteq> {#}) \\<and>\n    (\\<forall>x.\n        x \\<in> {x. 0 < count X2 x} \\<longrightarrow>\n        (\\<exists>y.\n            y \\<in> {x. 0 < count Y2 x} \\<and>\n            (x, y)\n            \\<in> s \\<inter>\n                  ({x. 0 < count X1 x} \\<union>\n                   {x. 0 < count X2 x}) \\<times>\n                  ({x. 0 < count Y1 x} \\<union> {x. 0 < count Y2 x})))", "by blast"], ["proof (state)\nthis:\n  X = X1 + X2 \\<and>\n  Y = Y1 + Y2 \\<and>\n  (X1, Y1) \\<in> multpw (ns \\<inter> set_mset X \\<times> set_mset Y) \\<and>\n  (b \\<or> Y2 \\<noteq> {#}) \\<and>\n  (\\<forall>x.\n      x \\<in># X2 \\<longrightarrow>\n      (\\<exists>y.\n          y \\<in># Y2 \\<and>\n          (x, y) \\<in> s \\<inter> set_mset X \\<times> set_mset Y))\n\ngoal (1 subgoal):\n 1. (X, Y)\n    \\<in> mult2_alt b (ns \\<inter> set_mset X \\<times> set_mset Y)\n           (s \\<inter> set_mset X \\<times> set_mset Y)", "then"], ["proof (chain)\npicking this:\n  X = X1 + X2 \\<and>\n  Y = Y1 + Y2 \\<and>\n  (X1, Y1) \\<in> multpw (ns \\<inter> set_mset X \\<times> set_mset Y) \\<and>\n  (b \\<or> Y2 \\<noteq> {#}) \\<and>\n  (\\<forall>x.\n      x \\<in># X2 \\<longrightarrow>\n      (\\<exists>y.\n          y \\<in># Y2 \\<and>\n          (x, y) \\<in> s \\<inter> set_mset X \\<times> set_mset Y))", "show ?thesis"], ["proof (prove)\nusing this:\n  X = X1 + X2 \\<and>\n  Y = Y1 + Y2 \\<and>\n  (X1, Y1) \\<in> multpw (ns \\<inter> set_mset X \\<times> set_mset Y) \\<and>\n  (b \\<or> Y2 \\<noteq> {#}) \\<and>\n  (\\<forall>x.\n      x \\<in># X2 \\<longrightarrow>\n      (\\<exists>y.\n          y \\<in># Y2 \\<and>\n          (x, y) \\<in> s \\<inter> set_mset X \\<times> set_mset Y))\n\ngoal (1 subgoal):\n 1. (X, Y)\n    \\<in> mult2_alt b (ns \\<inter> set_mset X \\<times> set_mset Y)\n           (s \\<inter> set_mset X \\<times> set_mset Y)", "unfolding mult2_alt_def"], ["proof (prove)\nusing this:\n  X = X1 + X2 \\<and>\n  Y = Y1 + Y2 \\<and>\n  (X1, Y1) \\<in> multpw (ns \\<inter> set_mset X \\<times> set_mset Y) \\<and>\n  (b \\<or> Y2 \\<noteq> {#}) \\<and>\n  (\\<forall>x.\n      x \\<in># X2 \\<longrightarrow>\n      (\\<exists>y.\n          y \\<in># Y2 \\<and>\n          (x, y) \\<in> s \\<inter> set_mset X \\<times> set_mset Y))\n\ngoal (1 subgoal):\n 1. (X, Y)\n    \\<in> {(Xa, Ya).\n           \\<exists>X1 X2 Y1 Y2.\n              Xa = X1 + X2 \\<and>\n              Ya = Y1 + Y2 \\<and>\n              (X1, Y1)\n              \\<in> multpw\n                     (ns \\<inter> set_mset X \\<times> set_mset Y) \\<and>\n              (b \\<or> Y2 \\<noteq> {#}) \\<and>\n              (\\<forall>x.\n                  x \\<in># X2 \\<longrightarrow>\n                  (\\<exists>y.\n                      y \\<in># Y2 \\<and>\n                      (x, y)\n                      \\<in> s \\<inter> set_mset X \\<times> set_mset Y))}", "by blast"], ["proof (state)\nthis:\n  (X, Y)\n  \\<in> mult2_alt b (ns \\<inter> set_mset X \\<times> set_mset Y)\n         (s \\<inter> set_mset X \\<times> set_mset Y)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Local well-foundedness: restriction to downward closure of a set\\<close>"], ["", "definition wf_below :: \"'a rel \\<Rightarrow> 'a set \\<Rightarrow> bool\" where\n  \"wf_below r A = wf (Restr r ((r\\<^sup>*)\\<inverse> `` A))\""], ["", "lemma wf_below_UNIV[simp]:\n  shows \"wf_below r UNIV \\<longleftrightarrow> wf r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_below r UNIV = wf r", "by (auto simp: wf_below_def rtrancl_converse[symmetric] Image_closed_trancl[OF subset_UNIV])"], ["", "lemma wf_below_mono1:\n  assumes \"r \\<subseteq> r'\" \"wf_below r' A\" shows \"wf_below r A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_below r A", "using assms"], ["proof (prove)\nusing this:\n  r \\<subseteq> r'\n  wf_below r' A\n\ngoal (1 subgoal):\n 1. wf_below r A", "unfolding wf_below_def"], ["proof (prove)\nusing this:\n  r \\<subseteq> r'\n  wf (Restr r' ((r'\\<^sup>*)\\<inverse> `` A))\n\ngoal (1 subgoal):\n 1. wf (Restr r ((r\\<^sup>*)\\<inverse> `` A))", "by (intro wf_subset[OF assms(2)[unfolded wf_below_def]] Int_mono Sigma_mono Image_mono\n      iffD2[OF converse_mono] rtrancl_mono subset_refl)"], ["", "lemma wf_below_mono2:\n  assumes \"A \\<subseteq> A'\" \"wf_below r A'\" shows \"wf_below r A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_below r A", "using assms"], ["proof (prove)\nusing this:\n  A \\<subseteq> A'\n  wf_below r A'\n\ngoal (1 subgoal):\n 1. wf_below r A", "unfolding wf_below_def"], ["proof (prove)\nusing this:\n  A \\<subseteq> A'\n  wf (Restr r ((r\\<^sup>*)\\<inverse> `` A'))\n\ngoal (1 subgoal):\n 1. wf (Restr r ((r\\<^sup>*)\\<inverse> `` A))", "by (intro wf_subset[OF assms(2)[unfolded wf_below_def]]) blast"], ["", "lemma wf_below_pointwise:\n  \"wf_below r A \\<longleftrightarrow> (\\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a})\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_below r A = (\\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. wf_below r A \\<Longrightarrow>\n    \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a}\n 2. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a} \\<Longrightarrow>\n    wf_below r A", "assume ?L"], ["proof (state)\nthis:\n  wf_below r A\n\ngoal (2 subgoals):\n 1. wf_below r A \\<Longrightarrow>\n    \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a}\n 2. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a} \\<Longrightarrow>\n    wf_below r A", "then"], ["proof (chain)\npicking this:\n  wf_below r A", "show ?R"], ["proof (prove)\nusing this:\n  wf_below r A\n\ngoal (1 subgoal):\n 1. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a}", "using wf_below_mono2[of \"{_}\" A r]"], ["proof (prove)\nusing this:\n  wf_below r A\n  \\<lbrakk>{?uu3} \\<subseteq> A; wf_below r A\\<rbrakk>\n  \\<Longrightarrow> wf_below r {?uu3}\n\ngoal (1 subgoal):\n 1. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a}", "by blast"], ["proof (state)\nthis:\n  \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a}\n\ngoal (1 subgoal):\n 1. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a} \\<Longrightarrow>\n    wf_below r A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a} \\<Longrightarrow>\n    wf_below r A", "have *: \"(r\\<^sup>*)\\<inverse> `` A = \\<Union>{(r\\<^sup>*)\\<inverse> `` {a} |a. a \\<in> A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r\\<^sup>*)\\<inverse> `` A =\n    \\<Union> {(r\\<^sup>*)\\<inverse> `` {a} |a. a \\<in> A}", "unfolding Image_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>A. (x, y) \\<in> (r\\<^sup>*)\\<inverse>} =\n    \\<Union>\n     {{y. \\<exists>x\\<in>{a}. (x, y) \\<in> (r\\<^sup>*)\\<inverse>} |a.\n      a \\<in> A}", "by blast"], ["proof (state)\nthis:\n  (r\\<^sup>*)\\<inverse> `` A =\n  \\<Union> {(r\\<^sup>*)\\<inverse> `` {a} |a. a \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a} \\<Longrightarrow>\n    wf_below r A", "assume ?R"], ["proof (state)\nthis:\n  \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a}\n\ngoal (1 subgoal):\n 1. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a} \\<Longrightarrow>\n    wf_below r A", "{"], ["proof (state)\nthis:\n  \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a}\n\ngoal (1 subgoal):\n 1. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a} \\<Longrightarrow>\n    wf_below r A", "fix x X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a} \\<Longrightarrow>\n    wf_below r A", "assume *: \"X \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` A) `` X\" \"x \\<in> X\""], ["proof (state)\nthis:\n  X \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` A) `` X\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a} \\<Longrightarrow>\n    wf_below r A", "then"], ["proof (chain)\npicking this:\n  X \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` A) `` X\n  x \\<in> X", "obtain a where **: \"a \\<in> A\" \"(x, a) \\<in> r\\<^sup>*\""], ["proof (prove)\nusing this:\n  X \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` A) `` X\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> A; (x, a) \\<in> r\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Image_def"], ["proof (prove)\nusing this:\n  X \\<subseteq> {y. \\<exists>x\\<in>X.\n                       (x, y)\n                       \\<in> Restr r\n                              {y. \\<exists>x\\<in>A.\n                                     (x, y) \\<in> (r\\<^sup>*)\\<inverse>}}\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> A; (x, a) \\<in> r\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a \\<in> A\n  (x, a) \\<in> r\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a} \\<Longrightarrow>\n    wf_below r A", "from *"], ["proof (chain)\npicking this:\n  X \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` A) `` X\n  x \\<in> X", "have \"X \\<inter> ((r\\<^sup>*)\\<inverse> `` {a}) \\<subseteq> (Restr r ((r\\<^sup>*)\\<inverse> `` A) `` X) \\<inter> ((r\\<^sup>*)\\<inverse> `` {a})\""], ["proof (prove)\nusing this:\n  X \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` A) `` X\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. X \\<inter> (r\\<^sup>*)\\<inverse> `` {a}\n    \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` A) `` X \\<inter>\n                (r\\<^sup>*)\\<inverse> `` {a}", "by auto"], ["proof (state)\nthis:\n  X \\<inter> (r\\<^sup>*)\\<inverse> `` {a}\n  \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` A) `` X \\<inter>\n              (r\\<^sup>*)\\<inverse> `` {a}\n\ngoal (1 subgoal):\n 1. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a} \\<Longrightarrow>\n    wf_below r A", "also"], ["proof (state)\nthis:\n  X \\<inter> (r\\<^sup>*)\\<inverse> `` {a}\n  \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` A) `` X \\<inter>\n              (r\\<^sup>*)\\<inverse> `` {a}\n\ngoal (1 subgoal):\n 1. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a} \\<Longrightarrow>\n    wf_below r A", "have \"... \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` {a}) `` (X  \\<inter> ((r\\<^sup>*)\\<inverse> `` {a}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Restr r ((r\\<^sup>*)\\<inverse> `` A) `` X \\<inter>\n    (r\\<^sup>*)\\<inverse> `` {a}\n    \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` {a}) ``\n                (X \\<inter> (r\\<^sup>*)\\<inverse> `` {a})", "unfolding Image_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>X.\n           (x, y)\n           \\<in> Restr r\n                  {y. \\<exists>x\\<in>A.\n                         (x, y) \\<in> (r\\<^sup>*)\\<inverse>}} \\<inter>\n    {y. \\<exists>x\\<in>{a}. (x, y) \\<in> (r\\<^sup>*)\\<inverse>}\n    \\<subseteq> {y. \\<exists>x\\<in>X \\<inter>\n                                   {y. \\<exists>x\\<in>{a}.\n    (x, y) \\<in> (r\\<^sup>*)\\<inverse>}.\n                       (x, y)\n                       \\<in> Restr r\n                              {y. \\<exists>x\\<in>{a}.\n                                     (x, y) \\<in> (r\\<^sup>*)\\<inverse>}}", "by fastforce"], ["proof (state)\nthis:\n  Restr r ((r\\<^sup>*)\\<inverse> `` A) `` X \\<inter>\n  (r\\<^sup>*)\\<inverse> `` {a}\n  \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` {a}) ``\n              (X \\<inter> (r\\<^sup>*)\\<inverse> `` {a})\n\ngoal (1 subgoal):\n 1. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a} \\<Longrightarrow>\n    wf_below r A", "finally"], ["proof (chain)\npicking this:\n  X \\<inter> (r\\<^sup>*)\\<inverse> `` {a}\n  \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` {a}) ``\n              (X \\<inter> (r\\<^sup>*)\\<inverse> `` {a})", "have \"X \\<inter> ((r\\<^sup>*)\\<inverse> `` {a}) = {}\""], ["proof (prove)\nusing this:\n  X \\<inter> (r\\<^sup>*)\\<inverse> `` {a}\n  \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` {a}) ``\n              (X \\<inter> (r\\<^sup>*)\\<inverse> `` {a})\n\ngoal (1 subgoal):\n 1. X \\<inter> (r\\<^sup>*)\\<inverse> `` {a} = {}", "using \\<open>?R\\<close> **(1)"], ["proof (prove)\nusing this:\n  X \\<inter> (r\\<^sup>*)\\<inverse> `` {a}\n  \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` {a}) ``\n              (X \\<inter> (r\\<^sup>*)\\<inverse> `` {a})\n  \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a}\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. X \\<inter> (r\\<^sup>*)\\<inverse> `` {a} = {}", "unfolding wf_below_def"], ["proof (prove)\nusing this:\n  X \\<inter> (r\\<^sup>*)\\<inverse> `` {a}\n  \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` {a}) ``\n              (X \\<inter> (r\\<^sup>*)\\<inverse> `` {a})\n  \\<forall>a.\n     a \\<in> A \\<longrightarrow> wf (Restr r ((r\\<^sup>*)\\<inverse> `` {a}))\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. X \\<inter> (r\\<^sup>*)\\<inverse> `` {a} = {}", "by (intro wfE_pf[of \"Restr r ((r\\<^sup>*)\\<inverse> `` {a})\"]) (auto simp: Image_def)"], ["proof (state)\nthis:\n  X \\<inter> (r\\<^sup>*)\\<inverse> `` {a} = {}\n\ngoal (1 subgoal):\n 1. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a} \\<Longrightarrow>\n    wf_below r A", "then"], ["proof (chain)\npicking this:\n  X \\<inter> (r\\<^sup>*)\\<inverse> `` {a} = {}", "have False"], ["proof (prove)\nusing this:\n  X \\<inter> (r\\<^sup>*)\\<inverse> `` {a} = {}\n\ngoal (1 subgoal):\n 1. False", "using *(2) **"], ["proof (prove)\nusing this:\n  X \\<inter> (r\\<^sup>*)\\<inverse> `` {a} = {}\n  x \\<in> X\n  a \\<in> A\n  (x, a) \\<in> r\\<^sup>*\n\ngoal (1 subgoal):\n 1. False", "unfolding Image_def"], ["proof (prove)\nusing this:\n  X \\<inter> {y. \\<exists>x\\<in>{a}. (x, y) \\<in> (r\\<^sup>*)\\<inverse>} =\n  {}\n  x \\<in> X\n  a \\<in> A\n  (x, a) \\<in> r\\<^sup>*\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a} \\<Longrightarrow>\n    wf_below r A", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?X2 \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` A) `` ?X2;\n   ?x2 \\<in> ?X2\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<forall>a. a \\<in> A \\<longrightarrow> wf_below r {a} \\<Longrightarrow>\n    wf_below r A", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?X2 \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` A) `` ?X2;\n   ?x2 \\<in> ?X2\\<rbrakk>\n  \\<Longrightarrow> False", "show ?L"], ["proof (prove)\nusing this:\n  \\<lbrakk>?X2 \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` A) `` ?X2;\n   ?x2 \\<in> ?X2\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. wf_below r A", "unfolding wf_below_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?X2 \\<subseteq> Restr r ((r\\<^sup>*)\\<inverse> `` A) `` ?X2;\n   ?x2 \\<in> ?X2\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. wf (Restr r ((r\\<^sup>*)\\<inverse> `` A))", "by (intro wfI_pf) auto"], ["proof (state)\nthis:\n  wf_below r A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SN_on_Image_rtrancl_conv:\n  \"SN_on r A \\<longleftrightarrow> SN_on r (r\\<^sup>* `` A)\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_on r A = SN_on r (r\\<^sup>* `` A)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. SN_on r A \\<Longrightarrow> SN_on r (r\\<^sup>* `` A)\n 2. SN_on r (r\\<^sup>* `` A) \\<Longrightarrow> SN_on r A", "assume ?L"], ["proof (state)\nthis:\n  SN_on r A\n\ngoal (2 subgoals):\n 1. SN_on r A \\<Longrightarrow> SN_on r (r\\<^sup>* `` A)\n 2. SN_on r (r\\<^sup>* `` A) \\<Longrightarrow> SN_on r A", "then"], ["proof (chain)\npicking this:\n  SN_on r A", "show ?R"], ["proof (prove)\nusing this:\n  SN_on r A\n\ngoal (1 subgoal):\n 1. SN_on r (r\\<^sup>* `` A)", "by (auto simp: SN_on_Image_rtrancl)"], ["proof (state)\nthis:\n  SN_on r (r\\<^sup>* `` A)\n\ngoal (1 subgoal):\n 1. SN_on r (r\\<^sup>* `` A) \\<Longrightarrow> SN_on r A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_on r (r\\<^sup>* `` A) \\<Longrightarrow> SN_on r A", "assume ?R"], ["proof (state)\nthis:\n  SN_on r (r\\<^sup>* `` A)\n\ngoal (1 subgoal):\n 1. SN_on r (r\\<^sup>* `` A) \\<Longrightarrow> SN_on r A", "then"], ["proof (chain)\npicking this:\n  SN_on r (r\\<^sup>* `` A)", "show ?L"], ["proof (prove)\nusing this:\n  SN_on r (r\\<^sup>* `` A)\n\ngoal (1 subgoal):\n 1. SN_on r A", "by (auto simp: SN_on_def)"], ["proof (state)\nthis:\n  SN_on r A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SN_on_iff_wf_below:\n  \"SN_on r A \\<longleftrightarrow> wf_below (r\\<inverse>) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_on r A = wf_below (r\\<inverse>) A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_on r A = wf_below (r\\<inverse>) A", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_on r A = wf_below (r\\<inverse>) A", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_on r A = wf_below (r\\<inverse>) A", "assume \"f 0 \\<in> r\\<^sup>* `` A\" and **: \"(f i, f (Suc i)) \\<in> r\" for i"], ["proof (state)\nthis:\n  f 0 \\<in> r\\<^sup>* `` A\n  (f ?i, f (Suc ?i)) \\<in> r\n\ngoal (1 subgoal):\n 1. SN_on r A = wf_below (r\\<inverse>) A", "then"], ["proof (chain)\npicking this:\n  f 0 \\<in> r\\<^sup>* `` A\n  (f ?i, f (Suc ?i)) \\<in> r", "have \"f i \\<in> r\\<^sup>* `` A\" for i"], ["proof (prove)\nusing this:\n  f 0 \\<in> r\\<^sup>* `` A\n  (f ?i, f (Suc ?i)) \\<in> r\n\ngoal (1 subgoal):\n 1. f i \\<in> r\\<^sup>* `` A", "by (induct i) (auto simp: Image_def, metis UnCI relcomp.relcompI rtrancl_unfold)"], ["proof (state)\nthis:\n  f ?i \\<in> r\\<^sup>* `` A\n\ngoal (1 subgoal):\n 1. SN_on r A = wf_below (r\\<inverse>) A", "then"], ["proof (chain)\npicking this:\n  f ?i \\<in> r\\<^sup>* `` A", "have \"(f i, f (Suc i)) \\<in> Restr r (r\\<^sup>* `` A)\" for i"], ["proof (prove)\nusing this:\n  f ?i \\<in> r\\<^sup>* `` A\n\ngoal (1 subgoal):\n 1. (f i, f (Suc i)) \\<in> Restr r (r\\<^sup>* `` A)", "using **"], ["proof (prove)\nusing this:\n  f ?i \\<in> r\\<^sup>* `` A\n  (f ?i, f (Suc ?i)) \\<in> r\n\ngoal (1 subgoal):\n 1. (f i, f (Suc i)) \\<in> Restr r (r\\<^sup>* `` A)", "by auto"], ["proof (state)\nthis:\n  (f ?i, f (Suc ?i)) \\<in> Restr r (r\\<^sup>* `` A)\n\ngoal (1 subgoal):\n 1. SN_on r A = wf_below (r\\<inverse>) A", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?f3 0 \\<in> r\\<^sup>* `` A;\n   \\<And>i. (?f3 i, ?f3 (Suc i)) \\<in> r\\<rbrakk>\n  \\<Longrightarrow> (?f3 ?i, ?f3 (Suc ?i)) \\<in> Restr r (r\\<^sup>* `` A)\n\ngoal (1 subgoal):\n 1. SN_on r A = wf_below (r\\<inverse>) A", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>?f3 0 \\<in> r\\<^sup>* `` A;\n   \\<And>i. (?f3 i, ?f3 (Suc i)) \\<in> r\\<rbrakk>\n  \\<Longrightarrow> (?f3 ?i, ?f3 (Suc ?i)) \\<in> Restr r (r\\<^sup>* `` A)\n\ngoal (1 subgoal):\n 1. SN_on r A = wf_below (r\\<inverse>) A", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?f3 0 \\<in> r\\<^sup>* `` A;\n   \\<And>i. (?f3 i, ?f3 (Suc i)) \\<in> r\\<rbrakk>\n  \\<Longrightarrow> (?f3 ?i, ?f3 (Suc ?i)) \\<in> Restr r (r\\<^sup>* `` A)", "have \"SN_on r (r\\<^sup>* `` A) \\<longleftrightarrow> SN_on (Restr r (r\\<^sup>* `` A)) (r\\<^sup>* `` A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?f3 0 \\<in> r\\<^sup>* `` A;\n   \\<And>i. (?f3 i, ?f3 (Suc i)) \\<in> r\\<rbrakk>\n  \\<Longrightarrow> (?f3 ?i, ?f3 (Suc ?i)) \\<in> Restr r (r\\<^sup>* `` A)\n\ngoal (1 subgoal):\n 1. SN_on r (r\\<^sup>* `` A) =\n    SN_on (Restr r (r\\<^sup>* `` A)) (r\\<^sup>* `` A)", "unfolding SN_on_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?f3 0 \\<in> r\\<^sup>* `` A;\n   \\<And>i. (?f3 i, ?f3 (Suc i)) \\<in> r\\<rbrakk>\n  \\<Longrightarrow> (?f3 ?i, ?f3 (Suc ?i)) \\<in> Restr r (r\\<^sup>* `` A)\n\ngoal (1 subgoal):\n 1. (\\<nexists>f.\n        f 0 \\<in> r\\<^sup>* `` A \\<and>\n        (\\<forall>i. (f i, f (Suc i)) \\<in> r)) =\n    (\\<nexists>f.\n        f 0 \\<in> r\\<^sup>* `` A \\<and>\n        (\\<forall>i. (f i, f (Suc i)) \\<in> Restr r (r\\<^sup>* `` A)))", "by auto blast"], ["proof (state)\nthis:\n  SN_on r (r\\<^sup>* `` A) =\n  SN_on (Restr r (r\\<^sup>* `` A)) (r\\<^sup>* `` A)\n\ngoal (1 subgoal):\n 1. SN_on r A = wf_below (r\\<inverse>) A", "moreover"], ["proof (state)\nthis:\n  SN_on r (r\\<^sup>* `` A) =\n  SN_on (Restr r (r\\<^sup>* `` A)) (r\\<^sup>* `` A)\n\ngoal (1 subgoal):\n 1. SN_on r A = wf_below (r\\<inverse>) A", "have \"(\\<And>i. (f i, f (Suc i)) \\<in> Restr r (r\\<^sup>* `` A)) \\<Longrightarrow> f 0 \\<in> r\\<^sup>* `` A\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (f i, f (Suc i)) \\<in> Restr r (r\\<^sup>* `` A)) \\<Longrightarrow>\n    f 0 \\<in> r\\<^sup>* `` A", "by auto"], ["proof (state)\nthis:\n  (\\<And>i.\n      (?f i, ?f (Suc i)) \\<in> Restr r (r\\<^sup>* `` A)) \\<Longrightarrow>\n  ?f 0 \\<in> r\\<^sup>* `` A\n\ngoal (1 subgoal):\n 1. SN_on r A = wf_below (r\\<inverse>) A", "then"], ["proof (chain)\npicking this:\n  (\\<And>i.\n      (?f i, ?f (Suc i)) \\<in> Restr r (r\\<^sup>* `` A)) \\<Longrightarrow>\n  ?f 0 \\<in> r\\<^sup>* `` A", "have \"SN_on (Restr r (r\\<^sup>* `` A)) (r\\<^sup>* `` A) \\<longleftrightarrow> SN_on (Restr r (r\\<^sup>* `` A)) UNIV\""], ["proof (prove)\nusing this:\n  (\\<And>i.\n      (?f i, ?f (Suc i)) \\<in> Restr r (r\\<^sup>* `` A)) \\<Longrightarrow>\n  ?f 0 \\<in> r\\<^sup>* `` A\n\ngoal (1 subgoal):\n 1. SN_on (Restr r (r\\<^sup>* `` A)) (r\\<^sup>* `` A) =\n    SN (Restr r (r\\<^sup>* `` A))", "unfolding SN_on_def"], ["proof (prove)\nusing this:\n  (\\<And>i.\n      (?f i, ?f (Suc i)) \\<in> Restr r (r\\<^sup>* `` A)) \\<Longrightarrow>\n  ?f 0 \\<in> r\\<^sup>* `` A\n\ngoal (1 subgoal):\n 1. (\\<nexists>f.\n        f 0 \\<in> r\\<^sup>* `` A \\<and>\n        (\\<forall>i. (f i, f (Suc i)) \\<in> Restr r (r\\<^sup>* `` A))) =\n    (\\<nexists>f.\n        f 0 \\<in> UNIV \\<and>\n        (\\<forall>i. (f i, f (Suc i)) \\<in> Restr r (r\\<^sup>* `` A)))", "by auto"], ["proof (state)\nthis:\n  SN_on (Restr r (r\\<^sup>* `` A)) (r\\<^sup>* `` A) =\n  SN (Restr r (r\\<^sup>* `` A))\n\ngoal (1 subgoal):\n 1. SN_on r A = wf_below (r\\<inverse>) A", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>?f3 0 \\<in> r\\<^sup>* `` A;\n   \\<And>i. (?f3 i, ?f3 (Suc i)) \\<in> r\\<rbrakk>\n  \\<Longrightarrow> (?f3 ?i, ?f3 (Suc ?i)) \\<in> Restr r (r\\<^sup>* `` A)\n  SN_on r (r\\<^sup>* `` A) =\n  SN_on (Restr r (r\\<^sup>* `` A)) (r\\<^sup>* `` A)\n  SN_on (Restr r (r\\<^sup>* `` A)) (r\\<^sup>* `` A) =\n  SN (Restr r (r\\<^sup>* `` A))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?f3 0 \\<in> r\\<^sup>* `` A;\n   \\<And>i. (?f3 i, ?f3 (Suc i)) \\<in> r\\<rbrakk>\n  \\<Longrightarrow> (?f3 ?i, ?f3 (Suc ?i)) \\<in> Restr r (r\\<^sup>* `` A)\n  SN_on r (r\\<^sup>* `` A) =\n  SN_on (Restr r (r\\<^sup>* `` A)) (r\\<^sup>* `` A)\n  SN_on (Restr r (r\\<^sup>* `` A)) (r\\<^sup>* `` A) =\n  SN (Restr r (r\\<^sup>* `` A))\n\ngoal (1 subgoal):\n 1. SN_on r A = wf_below (r\\<inverse>) A", "unfolding SN_on_Image_rtrancl_conv [of _ A]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?f3 0 \\<in> r\\<^sup>* `` A;\n   \\<And>i. (?f3 i, ?f3 (Suc i)) \\<in> r\\<rbrakk>\n  \\<Longrightarrow> (?f3 ?i, ?f3 (Suc ?i)) \\<in> Restr r (r\\<^sup>* `` A)\n  SN_on r (r\\<^sup>* `` A) =\n  SN_on (Restr r (r\\<^sup>* `` A)) (r\\<^sup>* `` A)\n  SN_on (Restr r (r\\<^sup>* `` A)) (r\\<^sup>* `` A) =\n  SN (Restr r (r\\<^sup>* `` A))\n\ngoal (1 subgoal):\n 1. SN_on r (r\\<^sup>* `` A) = wf_below (r\\<inverse>) A", "by (simp add: wf_below_def SN_iff_wf rtrancl_converse converse_Int converse_Times)"], ["proof (state)\nthis:\n  SN_on r A = wf_below (r\\<inverse>) A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma restr_trancl_under:\n  shows \"Restr (r\\<^sup>+) ((r\\<^sup>*)\\<inverse> `` A) = (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Restr (r\\<^sup>+) ((r\\<^sup>*)\\<inverse> `` A) =\n    (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+", "proof (intro equalityI subrelI, elim IntE conjE[OF iffD1[OF mem_Sigma_iff]])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>(x, y) \\<in> r\\<^sup>+; x \\<in> (r\\<^sup>*)\\<inverse> `` A;\n        y \\<in> (r\\<^sup>*)\\<inverse> `` A\\<rbrakk>\n       \\<Longrightarrow> (x, y)\n                         \\<in> (Restr r\n                                 ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+\n 2. \\<And>x y.\n       (x, y)\n       \\<in> (Restr r\n               ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<Longrightarrow>\n       (x, y) \\<in> Restr (r\\<^sup>+) ((r\\<^sup>*)\\<inverse> `` A)", "fix a b"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>(x, y) \\<in> r\\<^sup>+; x \\<in> (r\\<^sup>*)\\<inverse> `` A;\n        y \\<in> (r\\<^sup>*)\\<inverse> `` A\\<rbrakk>\n       \\<Longrightarrow> (x, y)\n                         \\<in> (Restr r\n                                 ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+\n 2. \\<And>x y.\n       (x, y)\n       \\<in> (Restr r\n               ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<Longrightarrow>\n       (x, y) \\<in> Restr (r\\<^sup>+) ((r\\<^sup>*)\\<inverse> `` A)", "assume *: \"(a, b) \\<in> r\\<^sup>+\" \"b \\<in> (r\\<^sup>*)\\<inverse> `` A\""], ["proof (state)\nthis:\n  (a, b) \\<in> r\\<^sup>+\n  b \\<in> (r\\<^sup>*)\\<inverse> `` A\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>(x, y) \\<in> r\\<^sup>+; x \\<in> (r\\<^sup>*)\\<inverse> `` A;\n        y \\<in> (r\\<^sup>*)\\<inverse> `` A\\<rbrakk>\n       \\<Longrightarrow> (x, y)\n                         \\<in> (Restr r\n                                 ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+\n 2. \\<And>x y.\n       (x, y)\n       \\<in> (Restr r\n               ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<Longrightarrow>\n       (x, y) \\<in> Restr (r\\<^sup>+) ((r\\<^sup>*)\\<inverse> `` A)", "then"], ["proof (chain)\npicking this:\n  (a, b) \\<in> r\\<^sup>+\n  b \\<in> (r\\<^sup>*)\\<inverse> `` A", "have \"(a, b) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and> a \\<in> (r\\<^sup>*)\\<inverse> `` A\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> r\\<^sup>+\n  b \\<in> (r\\<^sup>*)\\<inverse> `` A\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n    a \\<in> (r\\<^sup>*)\\<inverse> `` A", "proof (induct rule: trancl_trans_induct[consumes 1])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>(x, y) \\<in> r; y \\<in> (r\\<^sup>*)\\<inverse> `` A\\<rbrakk>\n       \\<Longrightarrow> (x, y)\n                         \\<in> (Restr r\n                                 ((r\\<^sup>*)\\<inverse> ``\n                                  A))\\<^sup>+ \\<and>\n                         x \\<in> (r\\<^sup>*)\\<inverse> `` A\n 2. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> r\\<^sup>+;\n        y \\<in> (r\\<^sup>*)\\<inverse> `` A \\<Longrightarrow>\n        (x, y) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n        x \\<in> (r\\<^sup>*)\\<inverse> `` A;\n        (y, z) \\<in> r\\<^sup>+;\n        z \\<in> (r\\<^sup>*)\\<inverse> `` A \\<Longrightarrow>\n        (y, z) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n        y \\<in> (r\\<^sup>*)\\<inverse> `` A;\n        z \\<in> (r\\<^sup>*)\\<inverse> `` A\\<rbrakk>\n       \\<Longrightarrow> (x, z)\n                         \\<in> (Restr r\n                                 ((r\\<^sup>*)\\<inverse> ``\n                                  A))\\<^sup>+ \\<and>\n                         x \\<in> (r\\<^sup>*)\\<inverse> `` A", "case 1"], ["proof (state)\nthis:\n  (x_, y_) \\<in> r\n  y_ \\<in> (r\\<^sup>*)\\<inverse> `` A\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>(x, y) \\<in> r; y \\<in> (r\\<^sup>*)\\<inverse> `` A\\<rbrakk>\n       \\<Longrightarrow> (x, y)\n                         \\<in> (Restr r\n                                 ((r\\<^sup>*)\\<inverse> ``\n                                  A))\\<^sup>+ \\<and>\n                         x \\<in> (r\\<^sup>*)\\<inverse> `` A\n 2. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> r\\<^sup>+;\n        y \\<in> (r\\<^sup>*)\\<inverse> `` A \\<Longrightarrow>\n        (x, y) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n        x \\<in> (r\\<^sup>*)\\<inverse> `` A;\n        (y, z) \\<in> r\\<^sup>+;\n        z \\<in> (r\\<^sup>*)\\<inverse> `` A \\<Longrightarrow>\n        (y, z) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n        y \\<in> (r\\<^sup>*)\\<inverse> `` A;\n        z \\<in> (r\\<^sup>*)\\<inverse> `` A\\<rbrakk>\n       \\<Longrightarrow> (x, z)\n                         \\<in> (Restr r\n                                 ((r\\<^sup>*)\\<inverse> ``\n                                  A))\\<^sup>+ \\<and>\n                         x \\<in> (r\\<^sup>*)\\<inverse> `` A", "then"], ["proof (chain)\npicking this:\n  (x_, y_) \\<in> r\n  y_ \\<in> (r\\<^sup>*)\\<inverse> `` A", "show ?case"], ["proof (prove)\nusing this:\n  (x_, y_) \\<in> r\n  y_ \\<in> (r\\<^sup>*)\\<inverse> `` A\n\ngoal (1 subgoal):\n 1. (x_, y_) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n    x_ \\<in> (r\\<^sup>*)\\<inverse> `` A", "by (auto simp: Image_def intro: converse_rtrancl_into_rtrancl)"], ["proof (state)\nthis:\n  (x_, y_) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n  x_ \\<in> (r\\<^sup>*)\\<inverse> `` A\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> r\\<^sup>+;\n        y \\<in> (r\\<^sup>*)\\<inverse> `` A \\<Longrightarrow>\n        (x, y) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n        x \\<in> (r\\<^sup>*)\\<inverse> `` A;\n        (y, z) \\<in> r\\<^sup>+;\n        z \\<in> (r\\<^sup>*)\\<inverse> `` A \\<Longrightarrow>\n        (y, z) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n        y \\<in> (r\\<^sup>*)\\<inverse> `` A;\n        z \\<in> (r\\<^sup>*)\\<inverse> `` A\\<rbrakk>\n       \\<Longrightarrow> (x, z)\n                         \\<in> (Restr r\n                                 ((r\\<^sup>*)\\<inverse> ``\n                                  A))\\<^sup>+ \\<and>\n                         x \\<in> (r\\<^sup>*)\\<inverse> `` A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> r\\<^sup>+;\n        y \\<in> (r\\<^sup>*)\\<inverse> `` A \\<Longrightarrow>\n        (x, y) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n        x \\<in> (r\\<^sup>*)\\<inverse> `` A;\n        (y, z) \\<in> r\\<^sup>+;\n        z \\<in> (r\\<^sup>*)\\<inverse> `` A \\<Longrightarrow>\n        (y, z) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n        y \\<in> (r\\<^sup>*)\\<inverse> `` A;\n        z \\<in> (r\\<^sup>*)\\<inverse> `` A\\<rbrakk>\n       \\<Longrightarrow> (x, z)\n                         \\<in> (Restr r\n                                 ((r\\<^sup>*)\\<inverse> ``\n                                  A))\\<^sup>+ \\<and>\n                         x \\<in> (r\\<^sup>*)\\<inverse> `` A", "case 2"], ["proof (state)\nthis:\n  (x_, y_) \\<in> r\\<^sup>+\n  y_ \\<in> (r\\<^sup>*)\\<inverse> `` A \\<Longrightarrow>\n  (x_, y_) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n  x_ \\<in> (r\\<^sup>*)\\<inverse> `` A\n  (y_, z_) \\<in> r\\<^sup>+\n  z_ \\<in> (r\\<^sup>*)\\<inverse> `` A \\<Longrightarrow>\n  (y_, z_) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n  y_ \\<in> (r\\<^sup>*)\\<inverse> `` A\n  z_ \\<in> (r\\<^sup>*)\\<inverse> `` A\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> r\\<^sup>+;\n        y \\<in> (r\\<^sup>*)\\<inverse> `` A \\<Longrightarrow>\n        (x, y) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n        x \\<in> (r\\<^sup>*)\\<inverse> `` A;\n        (y, z) \\<in> r\\<^sup>+;\n        z \\<in> (r\\<^sup>*)\\<inverse> `` A \\<Longrightarrow>\n        (y, z) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n        y \\<in> (r\\<^sup>*)\\<inverse> `` A;\n        z \\<in> (r\\<^sup>*)\\<inverse> `` A\\<rbrakk>\n       \\<Longrightarrow> (x, z)\n                         \\<in> (Restr r\n                                 ((r\\<^sup>*)\\<inverse> ``\n                                  A))\\<^sup>+ \\<and>\n                         x \\<in> (r\\<^sup>*)\\<inverse> `` A", "then"], ["proof (chain)\npicking this:\n  (x_, y_) \\<in> r\\<^sup>+\n  y_ \\<in> (r\\<^sup>*)\\<inverse> `` A \\<Longrightarrow>\n  (x_, y_) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n  x_ \\<in> (r\\<^sup>*)\\<inverse> `` A\n  (y_, z_) \\<in> r\\<^sup>+\n  z_ \\<in> (r\\<^sup>*)\\<inverse> `` A \\<Longrightarrow>\n  (y_, z_) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n  y_ \\<in> (r\\<^sup>*)\\<inverse> `` A\n  z_ \\<in> (r\\<^sup>*)\\<inverse> `` A", "show ?case"], ["proof (prove)\nusing this:\n  (x_, y_) \\<in> r\\<^sup>+\n  y_ \\<in> (r\\<^sup>*)\\<inverse> `` A \\<Longrightarrow>\n  (x_, y_) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n  x_ \\<in> (r\\<^sup>*)\\<inverse> `` A\n  (y_, z_) \\<in> r\\<^sup>+\n  z_ \\<in> (r\\<^sup>*)\\<inverse> `` A \\<Longrightarrow>\n  (y_, z_) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n  y_ \\<in> (r\\<^sup>*)\\<inverse> `` A\n  z_ \\<in> (r\\<^sup>*)\\<inverse> `` A\n\ngoal (1 subgoal):\n 1. (x_, z_) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n    x_ \\<in> (r\\<^sup>*)\\<inverse> `` A", "by (auto simp del: Int_iff del: ImageE)"], ["proof (state)\nthis:\n  (x_, z_) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n  x_ \\<in> (r\\<^sup>*)\\<inverse> `` A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (a, b) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n  a \\<in> (r\\<^sup>*)\\<inverse> `` A\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>(x, y) \\<in> r\\<^sup>+; x \\<in> (r\\<^sup>*)\\<inverse> `` A;\n        y \\<in> (r\\<^sup>*)\\<inverse> `` A\\<rbrakk>\n       \\<Longrightarrow> (x, y)\n                         \\<in> (Restr r\n                                 ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+\n 2. \\<And>x y.\n       (x, y)\n       \\<in> (Restr r\n               ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<Longrightarrow>\n       (x, y) \\<in> Restr (r\\<^sup>+) ((r\\<^sup>*)\\<inverse> `` A)", "then"], ["proof (chain)\npicking this:\n  (a, b) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n  a \\<in> (r\\<^sup>*)\\<inverse> `` A", "show \"(a, b) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<and>\n  a \\<in> (r\\<^sup>*)\\<inverse> `` A\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  (a, b) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y)\n       \\<in> (Restr r\n               ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<Longrightarrow>\n       (x, y) \\<in> Restr (r\\<^sup>+) ((r\\<^sup>*)\\<inverse> `` A)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y)\n       \\<in> (Restr r\n               ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<Longrightarrow>\n       (x, y) \\<in> Restr (r\\<^sup>+) ((r\\<^sup>*)\\<inverse> `` A)", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y)\n       \\<in> (Restr r\n               ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<Longrightarrow>\n       (x, y) \\<in> Restr (r\\<^sup>+) ((r\\<^sup>*)\\<inverse> `` A)", "assume \"(a, b) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+\""], ["proof (state)\nthis:\n  (a, b) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y)\n       \\<in> (Restr r\n               ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+ \\<Longrightarrow>\n       (x, y) \\<in> Restr (r\\<^sup>+) ((r\\<^sup>*)\\<inverse> `` A)", "then"], ["proof (chain)\npicking this:\n  (a, b) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+", "show \"(a, b) : Restr (r\\<^sup>+) ((r\\<^sup>*)\\<inverse> `` A)\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> Restr (r\\<^sup>+) ((r\\<^sup>*)\\<inverse> `` A)", "by induct auto"], ["proof (state)\nthis:\n  (a, b) \\<in> Restr (r\\<^sup>+) ((r\\<^sup>*)\\<inverse> `` A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wf_below_trancl:\n  shows \"wf_below (r\\<^sup>+) A \\<longleftrightarrow> wf_below r A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_below (r\\<^sup>+) A = wf_below r A", "using restr_trancl_under[of r A]"], ["proof (prove)\nusing this:\n  Restr (r\\<^sup>+) ((r\\<^sup>*)\\<inverse> `` A) =\n  (Restr r ((r\\<^sup>*)\\<inverse> `` A))\\<^sup>+\n\ngoal (1 subgoal):\n 1. wf_below (r\\<^sup>+) A = wf_below r A", "by (simp add: wf_below_def wf_trancl_conv)"], ["", "lemma wf_below_mult_local:\n  assumes \"wf_below r (set_mset X)\" shows \"wf_below (mult r) {X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_below (mult r) {X}", "(* this is actually an equivalence; is the other direction useful as well? *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_below (mult r) {X}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. wf_below (mult r) {X}", "have foo: \"mult r \\<subseteq> mult (r\\<^sup>+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult r \\<subseteq> mult (r\\<^sup>+)", "using mono_mult[of r \"r\\<^sup>+\"]"], ["proof (prove)\nusing this:\n  r \\<subseteq> r\\<^sup>+ \\<Longrightarrow>\n  mult r \\<subseteq> mult (r\\<^sup>+)\n\ngoal (1 subgoal):\n 1. mult r \\<subseteq> mult (r\\<^sup>+)", "by force"], ["proof (state)\nthis:\n  mult r \\<subseteq> mult (r\\<^sup>+)\n\ngoal (1 subgoal):\n 1. wf_below (mult r) {X}", "have \"(Y, X) \\<in> (mult (r\\<^sup>+))\\<^sup>* \\<Longrightarrow> set_mset Y \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\" for Y"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Y, X) \\<in> (mult (r\\<^sup>+))\\<^sup>* \\<Longrightarrow>\n    set_mset Y \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X", "proof (induct rule: converse_rtrancl_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. set_mset X \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> mult (r\\<^sup>+);\n        (z, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*;\n        set_mset z\n        \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\\<rbrakk>\n       \\<Longrightarrow> set_mset y\n                         \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> ``\n                                     set_mset X", "case (step Z Y)"], ["proof (state)\nthis:\n  (Z, Y) \\<in> mult (r\\<^sup>+)\n  (Y, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*\n  set_mset Y \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n\ngoal (2 subgoals):\n 1. set_mset X \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> mult (r\\<^sup>+);\n        (z, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*;\n        set_mset z\n        \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\\<rbrakk>\n       \\<Longrightarrow> set_mset y\n                         \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> ``\n                                     set_mset X", "obtain I J K where *: \"Y = I + J\" \"Z = I + K\" \"(\\<forall>k \\<in> set_mset K. \\<exists>j \\<in> set_mset J. (k, j) \\<in> r\\<^sup>+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>I J K.\n        \\<lbrakk>Y = I + J; Z = I + K;\n         \\<forall>k\\<in>#K.\n            \\<exists>j\\<in>#J. (k, j) \\<in> r\\<^sup>+\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using mult_implies_one_step[OF _ step(1)]"], ["proof (prove)\nusing this:\n  trans (r\\<^sup>+) \\<Longrightarrow>\n  \\<exists>I J K.\n     Y = I + J \\<and>\n     Z = I + K \\<and>\n     J \\<noteq> {#} \\<and>\n     (\\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> r\\<^sup>+)\n\ngoal (1 subgoal):\n 1. (\\<And>I J K.\n        \\<lbrakk>Y = I + J; Z = I + K;\n         \\<forall>k\\<in>#K.\n            \\<exists>j\\<in>#J. (k, j) \\<in> r\\<^sup>+\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Y = I + J\n  Z = I + K\n  \\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> r\\<^sup>+\n\ngoal (2 subgoals):\n 1. set_mset X \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> mult (r\\<^sup>+);\n        (z, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*;\n        set_mset z\n        \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\\<rbrakk>\n       \\<Longrightarrow> set_mset y\n                         \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> ``\n                                     set_mset X", "{"], ["proof (state)\nthis:\n  Y = I + J\n  Z = I + K\n  \\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> r\\<^sup>+\n\ngoal (2 subgoals):\n 1. set_mset X \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> mult (r\\<^sup>+);\n        (z, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*;\n        set_mset z\n        \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\\<rbrakk>\n       \\<Longrightarrow> set_mset y\n                         \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> ``\n                                     set_mset X", "fix k"], ["proof (state)\ngoal (2 subgoals):\n 1. set_mset X \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> mult (r\\<^sup>+);\n        (z, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*;\n        set_mset z\n        \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\\<rbrakk>\n       \\<Longrightarrow> set_mset y\n                         \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> ``\n                                     set_mset X", "assume \"k \\<in># K\""], ["proof (state)\nthis:\n  k \\<in># K\n\ngoal (2 subgoals):\n 1. set_mset X \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> mult (r\\<^sup>+);\n        (z, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*;\n        set_mset z\n        \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\\<rbrakk>\n       \\<Longrightarrow> set_mset y\n                         \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> ``\n                                     set_mset X", "then"], ["proof (chain)\npicking this:\n  k \\<in># K", "obtain j where \"j \\<in># J\" \"(k, j) \\<in> r\\<^sup>+\""], ["proof (prove)\nusing this:\n  k \\<in># K\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>j \\<in># J; (k, j) \\<in> r\\<^sup>+\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using *(3)"], ["proof (prove)\nusing this:\n  k \\<in># K\n  \\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> r\\<^sup>+\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>j \\<in># J; (k, j) \\<in> r\\<^sup>+\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  j \\<in># J\n  (k, j) \\<in> r\\<^sup>+\n\ngoal (2 subgoals):\n 1. set_mset X \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> mult (r\\<^sup>+);\n        (z, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*;\n        set_mset z\n        \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\\<rbrakk>\n       \\<Longrightarrow> set_mset y\n                         \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> ``\n                                     set_mset X", "moreover"], ["proof (state)\nthis:\n  j \\<in># J\n  (k, j) \\<in> r\\<^sup>+\n\ngoal (2 subgoals):\n 1. set_mset X \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> mult (r\\<^sup>+);\n        (z, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*;\n        set_mset z\n        \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\\<rbrakk>\n       \\<Longrightarrow> set_mset y\n                         \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> ``\n                                     set_mset X", "then"], ["proof (chain)\npicking this:\n  j \\<in># J\n  (k, j) \\<in> r\\<^sup>+", "obtain x where \"x \\<in># X\" \"(j, x) \\<in> r\\<^sup>*\""], ["proof (prove)\nusing this:\n  j \\<in># J\n  (k, j) \\<in> r\\<^sup>+\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in># X; (j, x) \\<in> r\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using step(3)"], ["proof (prove)\nusing this:\n  j \\<in># J\n  (k, j) \\<in> r\\<^sup>+\n  set_mset Y \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in># X; (j, x) \\<in> r\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: *)"], ["proof (state)\nthis:\n  x \\<in># X\n  (j, x) \\<in> r\\<^sup>*\n\ngoal (2 subgoals):\n 1. set_mset X \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> mult (r\\<^sup>+);\n        (z, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*;\n        set_mset z\n        \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\\<rbrakk>\n       \\<Longrightarrow> set_mset y\n                         \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> ``\n                                     set_mset X", "ultimately"], ["proof (chain)\npicking this:\n  j \\<in># J\n  (k, j) \\<in> r\\<^sup>+\n  x \\<in># X\n  (j, x) \\<in> r\\<^sup>*", "have \"\\<exists>x. x \\<in># X \\<and> (k, x) \\<in> r\\<^sup>*\""], ["proof (prove)\nusing this:\n  j \\<in># J\n  (k, j) \\<in> r\\<^sup>+\n  x \\<in># X\n  (j, x) \\<in> r\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in># X \\<and> (k, x) \\<in> r\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  \\<exists>x. x \\<in># X \\<and> (k, x) \\<in> r\\<^sup>*\n\ngoal (2 subgoals):\n 1. set_mset X \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> mult (r\\<^sup>+);\n        (z, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*;\n        set_mset z\n        \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\\<rbrakk>\n       \\<Longrightarrow> set_mset y\n                         \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> ``\n                                     set_mset X", "}"], ["proof (state)\nthis:\n  ?k2 \\<in># K \\<Longrightarrow>\n  \\<exists>x. x \\<in># X \\<and> (?k2, x) \\<in> r\\<^sup>*\n\ngoal (2 subgoals):\n 1. set_mset X \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> mult (r\\<^sup>+);\n        (z, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*;\n        set_mset z\n        \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\\<rbrakk>\n       \\<Longrightarrow> set_mset y\n                         \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> ``\n                                     set_mset X", "then"], ["proof (chain)\npicking this:\n  ?k2 \\<in># K \\<Longrightarrow>\n  \\<exists>x. x \\<in># X \\<and> (?k2, x) \\<in> r\\<^sup>*", "show ?case"], ["proof (prove)\nusing this:\n  ?k2 \\<in># K \\<Longrightarrow>\n  \\<exists>x. x \\<in># X \\<and> (?k2, x) \\<in> r\\<^sup>*\n\ngoal (1 subgoal):\n 1. set_mset Z \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X", "using * step(3)"], ["proof (prove)\nusing this:\n  ?k2 \\<in># K \\<Longrightarrow>\n  \\<exists>x. x \\<in># X \\<and> (?k2, x) \\<in> r\\<^sup>*\n  Y = I + J\n  Z = I + K\n  \\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> r\\<^sup>+\n  set_mset Y \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n\ngoal (1 subgoal):\n 1. set_mset Z \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X", "by (auto simp: Image_def) metis"], ["proof (state)\nthis:\n  set_mset Z \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n\ngoal (1 subgoal):\n 1. set_mset X \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X", "qed auto"], ["proof (state)\nthis:\n  (?Y, X) \\<in> (mult (r\\<^sup>+))\\<^sup>* \\<Longrightarrow>\n  set_mset ?Y \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n\ngoal (1 subgoal):\n 1. wf_below (mult r) {X}", "then"], ["proof (chain)\npicking this:\n  (?Y, X) \\<in> (mult (r\\<^sup>+))\\<^sup>* \\<Longrightarrow>\n  set_mset ?Y \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X", "have q: \"(Y, X) \\<in> (mult (r\\<^sup>+))\\<^sup>* \\<Longrightarrow> y \\<in># Y  \\<Longrightarrow> y \\<in> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\" for Y y"], ["proof (prove)\nusing this:\n  (?Y, X) \\<in> (mult (r\\<^sup>+))\\<^sup>* \\<Longrightarrow>\n  set_mset ?Y \\<subseteq> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(Y, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*; y \\<in># Y\\<rbrakk>\n    \\<Longrightarrow> y \\<in> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X", "by force"], ["proof (state)\nthis:\n  \\<lbrakk>(?Y, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*; ?y \\<in># ?Y\\<rbrakk>\n  \\<Longrightarrow> ?y \\<in> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n\ngoal (1 subgoal):\n 1. wf_below (mult r) {X}", "have \"Restr (mult (r\\<^sup>+)) (((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> `` {X}) \\<subseteq> mult (Restr (r\\<^sup>+) (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Restr (mult (r\\<^sup>+)) (((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> `` {X})\n    \\<subseteq> mult\n                 (Restr (r\\<^sup>+)\n                   (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))", "proof (intro subrelI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y)\n       \\<in> Restr (mult (r\\<^sup>+))\n              (((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> ``\n               {X}) \\<Longrightarrow>\n       (x, y)\n       \\<in> mult\n              (Restr (r\\<^sup>+)\n                (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))", "fix N M"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y)\n       \\<in> Restr (mult (r\\<^sup>+))\n              (((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> ``\n               {X}) \\<Longrightarrow>\n       (x, y)\n       \\<in> mult\n              (Restr (r\\<^sup>+)\n                (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))", "assume \"(N, M) \\<in> Restr (mult (r\\<^sup>+)) (((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> `` {X})\""], ["proof (state)\nthis:\n  (N, M)\n  \\<in> Restr (mult (r\\<^sup>+))\n         (((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> `` {X})\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y)\n       \\<in> Restr (mult (r\\<^sup>+))\n              (((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> ``\n               {X}) \\<Longrightarrow>\n       (x, y)\n       \\<in> mult\n              (Restr (r\\<^sup>+)\n                (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))", "then"], ["proof (chain)\npicking this:\n  (N, M)\n  \\<in> Restr (mult (r\\<^sup>+))\n         (((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> `` {X})", "have **:  \"(N, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*\" \"(M, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*\" \"(N, M) \\<in> mult (r\\<^sup>+)\""], ["proof (prove)\nusing this:\n  (N, M)\n  \\<in> Restr (mult (r\\<^sup>+))\n         (((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> `` {X})\n\ngoal (1 subgoal):\n 1. (N, X) \\<in> (mult (r\\<^sup>+))\\<^sup>* &&&\n    (M, X) \\<in> (mult (r\\<^sup>+))\\<^sup>* &&&\n    (N, M) \\<in> mult (r\\<^sup>+)", "by auto"], ["proof (state)\nthis:\n  (N, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*\n  (M, X) \\<in> (mult (r\\<^sup>+))\\<^sup>*\n  (N, M) \\<in> mult (r\\<^sup>+)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y)\n       \\<in> Restr (mult (r\\<^sup>+))\n              (((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> ``\n               {X}) \\<Longrightarrow>\n       (x, y)\n       \\<in> mult\n              (Restr (r\\<^sup>+)\n                (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))", "obtain I J K where *: \"M = I + J\" \"N = I + K\" \"J \\<noteq> {#}\" \"\\<forall>k \\<in> set_mset K. \\<exists>j \\<in> set_mset J. (k, j) \\<in> r\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>I J K.\n        \\<lbrakk>M = I + J; N = I + K; J \\<noteq> {#};\n         \\<forall>k\\<in>#K.\n            \\<exists>j\\<in>#J. (k, j) \\<in> r\\<^sup>+\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using mult_implies_one_step[OF _ \\<open>(N, M) \\<in> mult (r\\<^sup>+)\\<close>]"], ["proof (prove)\nusing this:\n  trans (r\\<^sup>+) \\<Longrightarrow>\n  \\<exists>I J K.\n     M = I + J \\<and>\n     N = I + K \\<and>\n     J \\<noteq> {#} \\<and>\n     (\\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> r\\<^sup>+)\n\ngoal (1 subgoal):\n 1. (\\<And>I J K.\n        \\<lbrakk>M = I + J; N = I + K; J \\<noteq> {#};\n         \\<forall>k\\<in>#K.\n            \\<exists>j\\<in>#J. (k, j) \\<in> r\\<^sup>+\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  M = I + J\n  N = I + K\n  J \\<noteq> {#}\n  \\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> r\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y)\n       \\<in> Restr (mult (r\\<^sup>+))\n              (((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> ``\n               {X}) \\<Longrightarrow>\n       (x, y)\n       \\<in> mult\n              (Restr (r\\<^sup>+)\n                (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))", "then"], ["proof (chain)\npicking this:\n  M = I + J\n  N = I + K\n  J \\<noteq> {#}\n  \\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> r\\<^sup>+", "show \"(N, M) \\<in> mult (Restr (r\\<^sup>+) (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))\""], ["proof (prove)\nusing this:\n  M = I + J\n  N = I + K\n  J \\<noteq> {#}\n  \\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> r\\<^sup>+\n\ngoal (1 subgoal):\n 1. (N, M)\n    \\<in> mult\n           (Restr (r\\<^sup>+)\n             (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))", "using q[OF **(1)] q[OF **(2)]"], ["proof (prove)\nusing this:\n  M = I + J\n  N = I + K\n  J \\<noteq> {#}\n  \\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> r\\<^sup>+\n  ?y \\<in># N \\<Longrightarrow>\n  ?y \\<in> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n  ?y \\<in># M \\<Longrightarrow>\n  ?y \\<in> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n\ngoal (1 subgoal):\n 1. (N, M)\n    \\<in> mult\n           (Restr (r\\<^sup>+)\n             (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))", "unfolding *"], ["proof (prove)\nusing this:\n  I + J = I + J\n  I + K = I + K\n  J \\<noteq> {#}\n  \\<forall>k\\<in>#K. \\<exists>j\\<in>#J. (k, j) \\<in> r\\<^sup>+\n  ?y \\<in># I + K \\<Longrightarrow>\n  ?y \\<in> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n  ?y \\<in># I + J \\<Longrightarrow>\n  ?y \\<in> ((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X\n\ngoal (1 subgoal):\n 1. (I + K, I + J)\n    \\<in> mult\n           (Restr (r\\<^sup>+)\n             (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))", "by (auto intro: one_step_implies_mult)"], ["proof (state)\nthis:\n  (N, M)\n  \\<in> mult\n         (Restr (r\\<^sup>+) (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Restr (mult (r\\<^sup>+)) (((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> `` {X})\n  \\<subseteq> mult\n               (Restr (r\\<^sup>+)\n                 (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))\n\ngoal (1 subgoal):\n 1. wf_below (mult r) {X}", "note bar = subset_trans[OF Int_mono[OF foo Sigma_mono] this]"], ["proof (state)\nthis:\n  \\<lbrakk>?A2 \\<subseteq> ((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> `` {X};\n   \\<And>x.\n      x \\<in> ?A2 \\<Longrightarrow>\n      ?B2 x\n      \\<subseteq> ((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> `` {X}\\<rbrakk>\n  \\<Longrightarrow> mult r \\<inter> Sigma ?A2 ?B2\n                    \\<subseteq> mult\n                                 (Restr (r\\<^sup>+)\n                                   (((r\\<^sup>+)\\<^sup>*)\\<inverse> ``\n                                    set_mset X))\n\ngoal (1 subgoal):\n 1. wf_below (mult r) {X}", "have \"((mult r)\\<^sup>*)\\<inverse> `` {X} \\<subseteq> ((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> `` {X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((mult r)\\<^sup>*)\\<inverse> `` {X}\n    \\<subseteq> ((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> `` {X}", "using foo"], ["proof (prove)\nusing this:\n  mult r \\<subseteq> mult (r\\<^sup>+)\n\ngoal (1 subgoal):\n 1. ((mult r)\\<^sup>*)\\<inverse> `` {X}\n    \\<subseteq> ((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> `` {X}", "by (simp add: Image_mono rtrancl_mono)"], ["proof (state)\nthis:\n  ((mult r)\\<^sup>*)\\<inverse> `` {X}\n  \\<subseteq> ((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> `` {X}\n\ngoal (1 subgoal):\n 1. wf_below (mult r) {X}", "then"], ["proof (chain)\npicking this:\n  ((mult r)\\<^sup>*)\\<inverse> `` {X}\n  \\<subseteq> ((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> `` {X}", "have \"Restr (mult r) (((mult r)\\<^sup>*)\\<inverse> `` {X}) \\<subseteq> mult (Restr (r\\<^sup>+) (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))\""], ["proof (prove)\nusing this:\n  ((mult r)\\<^sup>*)\\<inverse> `` {X}\n  \\<subseteq> ((mult (r\\<^sup>+))\\<^sup>*)\\<inverse> `` {X}\n\ngoal (1 subgoal):\n 1. Restr (mult r) (((mult r)\\<^sup>*)\\<inverse> `` {X})\n    \\<subseteq> mult\n                 (Restr (r\\<^sup>+)\n                   (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))", "by (intro bar) auto"], ["proof (state)\nthis:\n  Restr (mult r) (((mult r)\\<^sup>*)\\<inverse> `` {X})\n  \\<subseteq> mult\n               (Restr (r\\<^sup>+)\n                 (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))\n\ngoal (1 subgoal):\n 1. wf_below (mult r) {X}", "then"], ["proof (chain)\npicking this:\n  Restr (mult r) (((mult r)\\<^sup>*)\\<inverse> `` {X})\n  \\<subseteq> mult\n               (Restr (r\\<^sup>+)\n                 (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))", "show ?thesis"], ["proof (prove)\nusing this:\n  Restr (mult r) (((mult r)\\<^sup>*)\\<inverse> `` {X})\n  \\<subseteq> mult\n               (Restr (r\\<^sup>+)\n                 (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))\n\ngoal (1 subgoal):\n 1. wf_below (mult r) {X}", "using wf_mult assms wf_subset"], ["proof (prove)\nusing this:\n  Restr (mult r) (((mult r)\\<^sup>*)\\<inverse> `` {X})\n  \\<subseteq> mult\n               (Restr (r\\<^sup>+)\n                 (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))\n  wf ?r \\<Longrightarrow> wf (mult ?r)\n  wf_below r (set_mset X)\n  \\<lbrakk>wf ?r; ?p \\<subseteq> ?r\\<rbrakk> \\<Longrightarrow> wf ?p\n\ngoal (1 subgoal):\n 1. wf_below (mult r) {X}", "unfolding wf_below_trancl[of r, symmetric]"], ["proof (prove)\nusing this:\n  Restr (mult r) (((mult r)\\<^sup>*)\\<inverse> `` {X})\n  \\<subseteq> mult\n               (Restr (r\\<^sup>+)\n                 (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))\n  wf ?r \\<Longrightarrow> wf (mult ?r)\n  wf_below (r\\<^sup>+) (set_mset X)\n  \\<lbrakk>wf ?r; ?p \\<subseteq> ?r\\<rbrakk> \\<Longrightarrow> wf ?p\n\ngoal (1 subgoal):\n 1. wf_below (mult r) {X}", "unfolding wf_below_def"], ["proof (prove)\nusing this:\n  Restr (mult r) (((mult r)\\<^sup>*)\\<inverse> `` {X})\n  \\<subseteq> mult\n               (Restr (r\\<^sup>+)\n                 (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))\n  wf ?r \\<Longrightarrow> wf (mult ?r)\n  wf (Restr (r\\<^sup>+) (((r\\<^sup>+)\\<^sup>*)\\<inverse> `` set_mset X))\n  \\<lbrakk>wf ?r; ?p \\<subseteq> ?r\\<rbrakk> \\<Longrightarrow> wf ?p\n\ngoal (1 subgoal):\n 1. wf (Restr (mult r) (((mult r)\\<^sup>*)\\<inverse> `` {X}))", "by blast"], ["proof (state)\nthis:\n  wf_below (mult r) {X}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qc_wf_below:\n  assumes \"s O ns \\<subseteq> (s \\<union> ns)\\<^sup>* O s\" \"wf_below s A\"\n  shows \"wf_below (ns\\<^sup>* O s O ns\\<^sup>*) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_below (ns\\<^sup>* O s O ns\\<^sup>*) A", "unfolding wf_below_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf (Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n         (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> `` A))", "proof (intro wfI_pf)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       Aa \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                       (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> ``\n                        A) ``\n                      Aa \\<Longrightarrow>\n       Aa = {}", "let ?A' = \"((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> `` A\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       Aa \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                       (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> ``\n                        A) ``\n                      Aa \\<Longrightarrow>\n       Aa = {}", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       Aa \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                       (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> ``\n                        A) ``\n                      Aa \\<Longrightarrow>\n       Aa = {}", "assume X: \"X \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*) ?A' `` X\""], ["proof (state)\nthis:\n  X \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                 (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> `` A) ``\n                X\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       Aa \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                       (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> ``\n                        A) ``\n                      Aa \\<Longrightarrow>\n       Aa = {}", "let ?X' = \"((s \\<union> ns)\\<^sup>* \\<inter> UNIV \\<times> ((s\\<^sup>*)\\<inverse> `` A)) `` X\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       Aa \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                       (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> ``\n                        A) ``\n                      Aa \\<Longrightarrow>\n       Aa = {}", "have *: \"s O (s \\<union> ns)\\<^sup>* \\<subseteq> (s \\<union> ns)\\<^sup>* O s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s O (s \\<union> ns)\\<^sup>* \\<subseteq> (s \\<union> ns)\\<^sup>* O s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s O (s \\<union> ns)\\<^sup>* \\<subseteq> (s \\<union> ns)\\<^sup>* O s", "(* taken from the proof of qc_wf_relto_iff *)"], ["proof (state)\ngoal (1 subgoal):\n 1. s O (s \\<union> ns)\\<^sup>* \\<subseteq> (s \\<union> ns)\\<^sup>* O s", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. s O (s \\<union> ns)\\<^sup>* \\<subseteq> (s \\<union> ns)\\<^sup>* O s", "fix x y z"], ["proof (state)\ngoal (1 subgoal):\n 1. s O (s \\<union> ns)\\<^sup>* \\<subseteq> (s \\<union> ns)\\<^sup>* O s", "assume \"(y, z) \\<in> (s \\<union> ns)\\<^sup>*\" and \"(x, y) \\<in> s\""], ["proof (state)\nthis:\n  (y, z) \\<in> (s \\<union> ns)\\<^sup>*\n  (x, y) \\<in> s\n\ngoal (1 subgoal):\n 1. s O (s \\<union> ns)\\<^sup>* \\<subseteq> (s \\<union> ns)\\<^sup>* O s", "then"], ["proof (chain)\npicking this:\n  (y, z) \\<in> (s \\<union> ns)\\<^sup>*\n  (x, y) \\<in> s", "have \"(x, z) \\<in> (s \\<union> ns)\\<^sup>* O s\""], ["proof (prove)\nusing this:\n  (y, z) \\<in> (s \\<union> ns)\\<^sup>*\n  (x, y) \\<in> s\n\ngoal (1 subgoal):\n 1. (x, z) \\<in> (s \\<union> ns)\\<^sup>* O s", "proof (induct y z)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a.\n       (x, a) \\<in> s \\<Longrightarrow>\n       (x, a) \\<in> (s \\<union> ns)\\<^sup>* O s\n 2. \\<And>a b c.\n       \\<lbrakk>(a, b) \\<in> (s \\<union> ns)\\<^sup>*;\n        (x, a) \\<in> s \\<Longrightarrow>\n        (x, b) \\<in> (s \\<union> ns)\\<^sup>* O s;\n        (b, c) \\<in> s \\<union> ns; (x, a) \\<in> s\\<rbrakk>\n       \\<Longrightarrow> (x, c) \\<in> (s \\<union> ns)\\<^sup>* O s", "case rtrancl_refl"], ["proof (state)\nthis:\n  (x, a_) \\<in> s\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       (x, a) \\<in> s \\<Longrightarrow>\n       (x, a) \\<in> (s \\<union> ns)\\<^sup>* O s\n 2. \\<And>a b c.\n       \\<lbrakk>(a, b) \\<in> (s \\<union> ns)\\<^sup>*;\n        (x, a) \\<in> s \\<Longrightarrow>\n        (x, b) \\<in> (s \\<union> ns)\\<^sup>* O s;\n        (b, c) \\<in> s \\<union> ns; (x, a) \\<in> s\\<rbrakk>\n       \\<Longrightarrow> (x, c) \\<in> (s \\<union> ns)\\<^sup>* O s", "then"], ["proof (chain)\npicking this:\n  (x, a_) \\<in> s", "show ?case"], ["proof (prove)\nusing this:\n  (x, a_) \\<in> s\n\ngoal (1 subgoal):\n 1. (x, a_) \\<in> (s \\<union> ns)\\<^sup>* O s", "by auto"], ["proof (state)\nthis:\n  (x, a_) \\<in> (s \\<union> ns)\\<^sup>* O s\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>(a, b) \\<in> (s \\<union> ns)\\<^sup>*;\n        (x, a) \\<in> s \\<Longrightarrow>\n        (x, b) \\<in> (s \\<union> ns)\\<^sup>* O s;\n        (b, c) \\<in> s \\<union> ns; (x, a) \\<in> s\\<rbrakk>\n       \\<Longrightarrow> (x, c) \\<in> (s \\<union> ns)\\<^sup>* O s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>(a, b) \\<in> (s \\<union> ns)\\<^sup>*;\n        (x, a) \\<in> s \\<Longrightarrow>\n        (x, b) \\<in> (s \\<union> ns)\\<^sup>* O s;\n        (b, c) \\<in> s \\<union> ns; (x, a) \\<in> s\\<rbrakk>\n       \\<Longrightarrow> (x, c) \\<in> (s \\<union> ns)\\<^sup>* O s", "case (rtrancl_into_rtrancl a b c)"], ["proof (state)\nthis:\n  (a, b) \\<in> (s \\<union> ns)\\<^sup>*\n  (x, a) \\<in> s \\<Longrightarrow> (x, b) \\<in> (s \\<union> ns)\\<^sup>* O s\n  (b, c) \\<in> s \\<union> ns\n  (x, a) \\<in> s\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>(a, b) \\<in> (s \\<union> ns)\\<^sup>*;\n        (x, a) \\<in> s \\<Longrightarrow>\n        (x, b) \\<in> (s \\<union> ns)\\<^sup>* O s;\n        (b, c) \\<in> s \\<union> ns; (x, a) \\<in> s\\<rbrakk>\n       \\<Longrightarrow> (x, c) \\<in> (s \\<union> ns)\\<^sup>* O s", "then"], ["proof (chain)\npicking this:\n  (a, b) \\<in> (s \\<union> ns)\\<^sup>*\n  (x, a) \\<in> s \\<Longrightarrow> (x, b) \\<in> (s \\<union> ns)\\<^sup>* O s\n  (b, c) \\<in> s \\<union> ns\n  (x, a) \\<in> s", "have \"(x, c) \\<in> ((s \\<union> ns)\\<^sup>* O (s \\<union> ns)\\<^sup>*) O s\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> (s \\<union> ns)\\<^sup>*\n  (x, a) \\<in> s \\<Longrightarrow> (x, b) \\<in> (s \\<union> ns)\\<^sup>* O s\n  (b, c) \\<in> s \\<union> ns\n  (x, a) \\<in> s\n\ngoal (1 subgoal):\n 1. (x, c) \\<in> ((s \\<union> ns)\\<^sup>* O (s \\<union> ns)\\<^sup>*) O s", "using assms"], ["proof (prove)\nusing this:\n  (a, b) \\<in> (s \\<union> ns)\\<^sup>*\n  (x, a) \\<in> s \\<Longrightarrow> (x, b) \\<in> (s \\<union> ns)\\<^sup>* O s\n  (b, c) \\<in> s \\<union> ns\n  (x, a) \\<in> s\n  s O ns \\<subseteq> (s \\<union> ns)\\<^sup>* O s\n  wf_below s A\n\ngoal (1 subgoal):\n 1. (x, c) \\<in> ((s \\<union> ns)\\<^sup>* O (s \\<union> ns)\\<^sup>*) O s", "by blast"], ["proof (state)\nthis:\n  (x, c) \\<in> ((s \\<union> ns)\\<^sup>* O (s \\<union> ns)\\<^sup>*) O s\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>(a, b) \\<in> (s \\<union> ns)\\<^sup>*;\n        (x, a) \\<in> s \\<Longrightarrow>\n        (x, b) \\<in> (s \\<union> ns)\\<^sup>* O s;\n        (b, c) \\<in> s \\<union> ns; (x, a) \\<in> s\\<rbrakk>\n       \\<Longrightarrow> (x, c) \\<in> (s \\<union> ns)\\<^sup>* O s", "then"], ["proof (chain)\npicking this:\n  (x, c) \\<in> ((s \\<union> ns)\\<^sup>* O (s \\<union> ns)\\<^sup>*) O s", "show ?case"], ["proof (prove)\nusing this:\n  (x, c) \\<in> ((s \\<union> ns)\\<^sup>* O (s \\<union> ns)\\<^sup>*) O s\n\ngoal (1 subgoal):\n 1. (x, c) \\<in> (s \\<union> ns)\\<^sup>* O s", "by simp"], ["proof (state)\nthis:\n  (x, c) \\<in> (s \\<union> ns)\\<^sup>* O s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x, z) \\<in> (s \\<union> ns)\\<^sup>* O s\n\ngoal (1 subgoal):\n 1. s O (s \\<union> ns)\\<^sup>* \\<subseteq> (s \\<union> ns)\\<^sup>* O s", "}"], ["proof (state)\nthis:\n  \\<lbrakk>(?y2, ?z2) \\<in> (s \\<union> ns)\\<^sup>*;\n   (?x2, ?y2) \\<in> s\\<rbrakk>\n  \\<Longrightarrow> (?x2, ?z2) \\<in> (s \\<union> ns)\\<^sup>* O s\n\ngoal (1 subgoal):\n 1. s O (s \\<union> ns)\\<^sup>* \\<subseteq> (s \\<union> ns)\\<^sup>* O s", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>(?y2, ?z2) \\<in> (s \\<union> ns)\\<^sup>*;\n   (?x2, ?y2) \\<in> s\\<rbrakk>\n  \\<Longrightarrow> (?x2, ?z2) \\<in> (s \\<union> ns)\\<^sup>* O s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?y2, ?z2) \\<in> (s \\<union> ns)\\<^sup>*;\n   (?x2, ?y2) \\<in> s\\<rbrakk>\n  \\<Longrightarrow> (?x2, ?z2) \\<in> (s \\<union> ns)\\<^sup>* O s\n\ngoal (1 subgoal):\n 1. s O (s \\<union> ns)\\<^sup>* \\<subseteq> (s \\<union> ns)\\<^sup>* O s", "by auto"], ["proof (state)\nthis:\n  s O (s \\<union> ns)\\<^sup>* \\<subseteq> (s \\<union> ns)\\<^sup>* O s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s O (s \\<union> ns)\\<^sup>* \\<subseteq> (s \\<union> ns)\\<^sup>* O s\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       Aa \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                       (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> ``\n                        A) ``\n                      Aa \\<Longrightarrow>\n       Aa = {}", "{"], ["proof (state)\nthis:\n  s O (s \\<union> ns)\\<^sup>* \\<subseteq> (s \\<union> ns)\\<^sup>* O s\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       Aa \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                       (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> ``\n                        A) ``\n                      Aa \\<Longrightarrow>\n       Aa = {}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       Aa \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                       (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> ``\n                        A) ``\n                      Aa \\<Longrightarrow>\n       Aa = {}", "assume \"x \\<in> Restr (ns\\<^sup>* O s O ns\\<^sup>*) ?A' `` X\""], ["proof (state)\nthis:\n  x \\<in> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n           (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> `` A) ``\n          X\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       Aa \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                       (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> ``\n                        A) ``\n                      Aa \\<Longrightarrow>\n       Aa = {}", "then"], ["proof (chain)\npicking this:\n  x \\<in> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n           (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> `` A) ``\n          X", "obtain y z where **: \"y \\<in> X\" \"z \\<in> A\" \"(y, x) \\<in> ns\\<^sup>* O s O ns\\<^sup>*\" \"(x, z) \\<in> (ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*\""], ["proof (prove)\nusing this:\n  x \\<in> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n           (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> `` A) ``\n          X\n\ngoal (1 subgoal):\n 1. (\\<And>y z.\n        \\<lbrakk>y \\<in> X; z \\<in> A;\n         (y, x) \\<in> ns\\<^sup>* O s O ns\\<^sup>*;\n         (x, z) \\<in> (ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  y \\<in> X\n  z \\<in> A\n  (y, x) \\<in> ns\\<^sup>* O s O ns\\<^sup>*\n  (x, z) \\<in> (ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       Aa \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                       (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> ``\n                        A) ``\n                      Aa \\<Longrightarrow>\n       Aa = {}", "have \"(ns\\<^sup>* O s O ns\\<^sup>*) O (ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>* \\<subseteq> (s \\<union> ns)\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ns\\<^sup>* O s O ns\\<^sup>*) O (ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*\n    \\<subseteq> (s \\<union> ns)\\<^sup>*", "by regexp"], ["proof (state)\nthis:\n  (ns\\<^sup>* O s O ns\\<^sup>*) O (ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*\n  \\<subseteq> (s \\<union> ns)\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       Aa \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                       (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> ``\n                        A) ``\n                      Aa \\<Longrightarrow>\n       Aa = {}", "then"], ["proof (chain)\npicking this:\n  (ns\\<^sup>* O s O ns\\<^sup>*) O (ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*\n  \\<subseteq> (s \\<union> ns)\\<^sup>*", "have \"(y, z) \\<in> (s \\<union> ns)\\<^sup>*\""], ["proof (prove)\nusing this:\n  (ns\\<^sup>* O s O ns\\<^sup>*) O (ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*\n  \\<subseteq> (s \\<union> ns)\\<^sup>*\n\ngoal (1 subgoal):\n 1. (y, z) \\<in> (s \\<union> ns)\\<^sup>*", "using **(3,4)"], ["proof (prove)\nusing this:\n  (ns\\<^sup>* O s O ns\\<^sup>*) O (ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*\n  \\<subseteq> (s \\<union> ns)\\<^sup>*\n  (y, x) \\<in> ns\\<^sup>* O s O ns\\<^sup>*\n  (x, z) \\<in> (ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*\n\ngoal (1 subgoal):\n 1. (y, z) \\<in> (s \\<union> ns)\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  (y, z) \\<in> (s \\<union> ns)\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       Aa \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                       (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> ``\n                        A) ``\n                      Aa \\<Longrightarrow>\n       Aa = {}", "moreover"], ["proof (state)\nthis:\n  (y, z) \\<in> (s \\<union> ns)\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       Aa \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                       (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> ``\n                        A) ``\n                      Aa \\<Longrightarrow>\n       Aa = {}", "have \"?X' = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((s \\<union> ns)\\<^sup>* \\<inter>\n     UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n    X =\n    {}", "proof (intro wfE_pf[OF assms(2)[unfolded wf_below_def]] subsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X \\<Longrightarrow>\n       x \\<in> Restr s ((s\\<^sup>*)\\<inverse> `` A) ``\n               ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X \\<Longrightarrow>\n       x \\<in> Restr s ((s\\<^sup>*)\\<inverse> `` A) ``\n               ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X", "assume \"x \\<in> ?X'\""], ["proof (state)\nthis:\n  x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n           UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n          X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X \\<Longrightarrow>\n       x \\<in> Restr s ((s\\<^sup>*)\\<inverse> `` A) ``\n               ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X", "then"], ["proof (chain)\npicking this:\n  x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n           UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n          X", "have \"x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter> UNIV \\<times> ((s\\<^sup>*)\\<inverse> `` A)) `` Restr (ns\\<^sup>* O s O ns\\<^sup>*) ?A' `` X\""], ["proof (prove)\nusing this:\n  x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n           UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n          X\n\ngoal (1 subgoal):\n 1. x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n             UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n            Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n             (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> `` A) ``\n            X", "using X"], ["proof (prove)\nusing this:\n  x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n           UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n          X\n  X \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                 (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> `` A) ``\n                X\n\ngoal (1 subgoal):\n 1. x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n             UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n            Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n             (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> `` A) ``\n            X", "by auto"], ["proof (state)\nthis:\n  x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n           UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n          Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n           (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> `` A) ``\n          X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X \\<Longrightarrow>\n       x \\<in> Restr s ((s\\<^sup>*)\\<inverse> `` A) ``\n               ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X", "then"], ["proof (chain)\npicking this:\n  x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n           UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n          Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n           (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> `` A) ``\n          X", "obtain x0 y z where **: \"z \\<in> X\" \"x0 \\<in> A\" \"(z, y) \\<in> ns\\<^sup>* O s O ns\\<^sup>*\" \"(y, x) \\<in> (s \\<union> ns)\\<^sup>*\" \"(x, x0) \\<in> s\\<^sup>*\""], ["proof (prove)\nusing this:\n  x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n           UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n          Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n           (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> `` A) ``\n          X\n\ngoal (1 subgoal):\n 1. (\\<And>z x0 y.\n        \\<lbrakk>z \\<in> X; x0 \\<in> A;\n         (z, y) \\<in> ns\\<^sup>* O s O ns\\<^sup>*;\n         (y, x) \\<in> (s \\<union> ns)\\<^sup>*;\n         (x, x0) \\<in> s\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Image_def"], ["proof (prove)\nusing this:\n  x \\<in> {y. \\<exists>x\\<in>{y. \\<exists>x\\<in>X.\n                                    (x, y)\n                                    \\<in> Restr\n     (ns\\<^sup>* O s O ns\\<^sup>*)\n     {y. \\<exists>x\\<in>A.\n            (x, y)\n            \\<in> ((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse>}}.\n                 (x, y)\n                 \\<in> (s \\<union> ns)\\<^sup>* \\<inter>\n                       UNIV \\<times>\n                       {y. \\<exists>x\\<in>A.\n                              (x, y) \\<in> (s\\<^sup>*)\\<inverse>}}\n\ngoal (1 subgoal):\n 1. (\\<And>z x0 y.\n        \\<lbrakk>z \\<in> X; x0 \\<in> A;\n         (z, y) \\<in> ns\\<^sup>* O s O ns\\<^sup>*;\n         (y, x) \\<in> (s \\<union> ns)\\<^sup>*;\n         (x, x0) \\<in> s\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  z \\<in> X\n  x0 \\<in> A\n  (z, y) \\<in> ns\\<^sup>* O s O ns\\<^sup>*\n  (y, x) \\<in> (s \\<union> ns)\\<^sup>*\n  (x, x0) \\<in> s\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X \\<Longrightarrow>\n       x \\<in> Restr s ((s\\<^sup>*)\\<inverse> `` A) ``\n               ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X", "have \"(ns\\<^sup>* O s O ns\\<^sup>*) O (s \\<union> ns)\\<^sup>* \\<subseteq> ns\\<^sup>* O (s O (s \\<union> ns)\\<^sup>*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ns\\<^sup>* O s O ns\\<^sup>*) O (s \\<union> ns)\\<^sup>*\n    \\<subseteq> ns\\<^sup>* O s O (s \\<union> ns)\\<^sup>*", "by regexp"], ["proof (state)\nthis:\n  (ns\\<^sup>* O s O ns\\<^sup>*) O (s \\<union> ns)\\<^sup>*\n  \\<subseteq> ns\\<^sup>* O s O (s \\<union> ns)\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X \\<Longrightarrow>\n       x \\<in> Restr s ((s\\<^sup>*)\\<inverse> `` A) ``\n               ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X", "with **(3,4)"], ["proof (chain)\npicking this:\n  (z, y) \\<in> ns\\<^sup>* O s O ns\\<^sup>*\n  (y, x) \\<in> (s \\<union> ns)\\<^sup>*\n  (ns\\<^sup>* O s O ns\\<^sup>*) O (s \\<union> ns)\\<^sup>*\n  \\<subseteq> ns\\<^sup>* O s O (s \\<union> ns)\\<^sup>*", "have \"(z, x) \\<in> ns\\<^sup>* O (s O (s \\<union> ns)\\<^sup>*)\""], ["proof (prove)\nusing this:\n  (z, y) \\<in> ns\\<^sup>* O s O ns\\<^sup>*\n  (y, x) \\<in> (s \\<union> ns)\\<^sup>*\n  (ns\\<^sup>* O s O ns\\<^sup>*) O (s \\<union> ns)\\<^sup>*\n  \\<subseteq> ns\\<^sup>* O s O (s \\<union> ns)\\<^sup>*\n\ngoal (1 subgoal):\n 1. (z, x) \\<in> ns\\<^sup>* O s O (s \\<union> ns)\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  (z, x) \\<in> ns\\<^sup>* O s O (s \\<union> ns)\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X \\<Longrightarrow>\n       x \\<in> Restr s ((s\\<^sup>*)\\<inverse> `` A) ``\n               ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X", "moreover"], ["proof (state)\nthis:\n  (z, x) \\<in> ns\\<^sup>* O s O (s \\<union> ns)\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X \\<Longrightarrow>\n       x \\<in> Restr s ((s\\<^sup>*)\\<inverse> `` A) ``\n               ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X", "have \"ns\\<^sup>* O ((s \\<union> ns)\\<^sup>* O s) \\<subseteq> (s \\<union> ns)\\<^sup>* O s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ns\\<^sup>* O (s \\<union> ns)\\<^sup>* O s\n    \\<subseteq> (s \\<union> ns)\\<^sup>* O s", "by regexp"], ["proof (state)\nthis:\n  ns\\<^sup>* O (s \\<union> ns)\\<^sup>* O s\n  \\<subseteq> (s \\<union> ns)\\<^sup>* O s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X \\<Longrightarrow>\n       x \\<in> Restr s ((s\\<^sup>*)\\<inverse> `` A) ``\n               ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X", "ultimately"], ["proof (chain)\npicking this:\n  (z, x) \\<in> ns\\<^sup>* O s O (s \\<union> ns)\\<^sup>*\n  ns\\<^sup>* O (s \\<union> ns)\\<^sup>* O s\n  \\<subseteq> (s \\<union> ns)\\<^sup>* O s", "have \"(z, x) \\<in> (s \\<union> ns)\\<^sup>* O s\""], ["proof (prove)\nusing this:\n  (z, x) \\<in> ns\\<^sup>* O s O (s \\<union> ns)\\<^sup>*\n  ns\\<^sup>* O (s \\<union> ns)\\<^sup>* O s\n  \\<subseteq> (s \\<union> ns)\\<^sup>* O s\n\ngoal (1 subgoal):\n 1. (z, x) \\<in> (s \\<union> ns)\\<^sup>* O s", "using *"], ["proof (prove)\nusing this:\n  (z, x) \\<in> ns\\<^sup>* O s O (s \\<union> ns)\\<^sup>*\n  ns\\<^sup>* O (s \\<union> ns)\\<^sup>* O s\n  \\<subseteq> (s \\<union> ns)\\<^sup>* O s\n  s O (s \\<union> ns)\\<^sup>* \\<subseteq> (s \\<union> ns)\\<^sup>* O s\n\ngoal (1 subgoal):\n 1. (z, x) \\<in> (s \\<union> ns)\\<^sup>* O s", "by blast"], ["proof (state)\nthis:\n  (z, x) \\<in> (s \\<union> ns)\\<^sup>* O s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X \\<Longrightarrow>\n       x \\<in> Restr s ((s\\<^sup>*)\\<inverse> `` A) ``\n               ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X", "then"], ["proof (chain)\npicking this:\n  (z, x) \\<in> (s \\<union> ns)\\<^sup>* O s", "obtain x' where \"z \\<in> X\" \"(z, x') \\<in> (s \\<union> ns)\\<^sup>*\"  \"(x', x) \\<in> s\" \"(x', x0) \\<in> s\\<^sup>*\" \"(x, x0) \\<in> s\\<^sup>*\" \"x0 \\<in> A\""], ["proof (prove)\nusing this:\n  (z, x) \\<in> (s \\<union> ns)\\<^sup>* O s\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>z \\<in> X; (z, x') \\<in> (s \\<union> ns)\\<^sup>*;\n         (x', x) \\<in> s; (x', x0) \\<in> s\\<^sup>*; (x, x0) \\<in> s\\<^sup>*;\n         x0 \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using **(1,2,5) converse_rtrancl_into_rtrancl[OF _ **(5)]"], ["proof (prove)\nusing this:\n  (z, x) \\<in> (s \\<union> ns)\\<^sup>* O s\n  z \\<in> X\n  x0 \\<in> A\n  (x, x0) \\<in> s\\<^sup>*\n  (?a, x) \\<in> s \\<Longrightarrow> (?a, x0) \\<in> s\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>z \\<in> X; (z, x') \\<in> (s \\<union> ns)\\<^sup>*;\n         (x', x) \\<in> s; (x', x0) \\<in> s\\<^sup>*; (x, x0) \\<in> s\\<^sup>*;\n         x0 \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  z \\<in> X\n  (z, x') \\<in> (s \\<union> ns)\\<^sup>*\n  (x', x) \\<in> s\n  (x', x0) \\<in> s\\<^sup>*\n  (x, x0) \\<in> s\\<^sup>*\n  x0 \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X \\<Longrightarrow>\n       x \\<in> Restr s ((s\\<^sup>*)\\<inverse> `` A) ``\n               ((s \\<union> ns)\\<^sup>* \\<inter>\n                UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n               X", "then"], ["proof (chain)\npicking this:\n  z \\<in> X\n  (z, x') \\<in> (s \\<union> ns)\\<^sup>*\n  (x', x) \\<in> s\n  (x', x0) \\<in> s\\<^sup>*\n  (x, x0) \\<in> s\\<^sup>*\n  x0 \\<in> A", "show \"x \\<in> Restr s ((s\\<^sup>*)\\<inverse> `` A) `` ?X'\""], ["proof (prove)\nusing this:\n  z \\<in> X\n  (z, x') \\<in> (s \\<union> ns)\\<^sup>*\n  (x', x) \\<in> s\n  (x', x0) \\<in> s\\<^sup>*\n  (x, x0) \\<in> s\\<^sup>*\n  x0 \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> Restr s ((s\\<^sup>*)\\<inverse> `` A) ``\n            ((s \\<union> ns)\\<^sup>* \\<inter>\n             UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n            X", "unfolding Image_def"], ["proof (prove)\nusing this:\n  z \\<in> X\n  (z, x') \\<in> (s \\<union> ns)\\<^sup>*\n  (x', x) \\<in> s\n  (x', x0) \\<in> s\\<^sup>*\n  (x, x0) \\<in> s\\<^sup>*\n  x0 \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> {y. \\<exists>x\\<in>{y. \\<exists>x\\<in>X.\n(x, y)\n\\<in> (s \\<union> ns)\\<^sup>* \\<inter>\n      UNIV \\<times>\n      {y. \\<exists>x\\<in>A. (x, y) \\<in> (s\\<^sup>*)\\<inverse>}}.\n                   (x, y)\n                   \\<in> Restr s\n                          {y. \\<exists>x\\<in>A.\n                                 (x, y) \\<in> (s\\<^sup>*)\\<inverse>}}", "by blast"], ["proof (state)\nthis:\n  x \\<in> Restr s ((s\\<^sup>*)\\<inverse> `` A) ``\n          ((s \\<union> ns)\\<^sup>* \\<inter>\n           UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n          X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((s \\<union> ns)\\<^sup>* \\<inter>\n   UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n  X =\n  {}\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       Aa \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                       (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> ``\n                        A) ``\n                      Aa \\<Longrightarrow>\n       Aa = {}", "ultimately"], ["proof (chain)\npicking this:\n  (y, z) \\<in> (s \\<union> ns)\\<^sup>*\n  ((s \\<union> ns)\\<^sup>* \\<inter>\n   UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n  X =\n  {}", "have False"], ["proof (prove)\nusing this:\n  (y, z) \\<in> (s \\<union> ns)\\<^sup>*\n  ((s \\<union> ns)\\<^sup>* \\<inter>\n   UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n  X =\n  {}\n\ngoal (1 subgoal):\n 1. False", "using **(1,2)"], ["proof (prove)\nusing this:\n  (y, z) \\<in> (s \\<union> ns)\\<^sup>*\n  ((s \\<union> ns)\\<^sup>* \\<inter>\n   UNIV \\<times> (s\\<^sup>*)\\<inverse> `` A) ``\n  X =\n  {}\n  y \\<in> X\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. False", "unfolding Image_def"], ["proof (prove)\nusing this:\n  (y, z) \\<in> (s \\<union> ns)\\<^sup>*\n  {y. \\<exists>x\\<in>X.\n         (x, y)\n         \\<in> (s \\<union> ns)\\<^sup>* \\<inter>\n               UNIV \\<times>\n               {y. \\<exists>x\\<in>A. (x, y) \\<in> (s\\<^sup>*)\\<inverse>}} =\n  {}\n  y \\<in> X\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       Aa \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                       (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> ``\n                        A) ``\n                      Aa \\<Longrightarrow>\n       Aa = {}", "}"], ["proof (state)\nthis:\n  ?x2\n  \\<in> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n         (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> `` A) ``\n        X \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       Aa \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                       (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> ``\n                        A) ``\n                      Aa \\<Longrightarrow>\n       Aa = {}", "then"], ["proof (chain)\npicking this:\n  ?x2\n  \\<in> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n         (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> `` A) ``\n        X \\<Longrightarrow>\n  False", "show \"X = {}\""], ["proof (prove)\nusing this:\n  ?x2\n  \\<in> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n         (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> `` A) ``\n        X \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. X = {}", "using X"], ["proof (prove)\nusing this:\n  ?x2\n  \\<in> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n         (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> `` A) ``\n        X \\<Longrightarrow>\n  False\n  X \\<subseteq> Restr (ns\\<^sup>* O s O ns\\<^sup>*)\n                 (((ns\\<^sup>* O s O ns\\<^sup>*)\\<^sup>*)\\<inverse> `` A) ``\n                X\n\ngoal (1 subgoal):\n 1. X = {}", "by blast"], ["proof (state)\nthis:\n  X = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wf_below_mult2_s_local:\n  assumes \"wf_below s (set_mset X)\" \"s O ns \\<subseteq> s\" \"refl ns\" \"trans ns\"\n  shows \"wf_below (mult2_s ns s) {X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_below (mult2_s ns s) {X}", "using wf_below_mult_local[of s X] assms multpw_mult_commute[of s ns]\n    wf_below_mono1[of \"multpw ns O mult s\" \"(multpw ns)\\<^sup>* O mult s O (multpw ns)\\<^sup>*\" \"{X}\"]\n    qc_wf_below[of \"mult s\" \"multpw ns\" \"{X}\"]"], ["proof (prove)\nusing this:\n  wf_below s (set_mset X) \\<Longrightarrow> wf_below (mult s) {X}\n  wf_below s (set_mset X)\n  s O ns \\<subseteq> s\n  refl ns\n  trans ns\n  \\<lbrakk>s O ns \\<subseteq> s; refl ns\\<rbrakk>\n  \\<Longrightarrow> mult s O multpw ns \\<subseteq> multpw ns O mult s\n  \\<lbrakk>multpw ns O mult s\n           \\<subseteq> (multpw ns)\\<^sup>* O mult s O (multpw ns)\\<^sup>*;\n   wf_below ((multpw ns)\\<^sup>* O mult s O (multpw ns)\\<^sup>*)\n    {X}\\<rbrakk>\n  \\<Longrightarrow> wf_below (multpw ns O mult s) {X}\n  \\<lbrakk>mult s O multpw ns\n           \\<subseteq> (mult s \\<union> multpw ns)\\<^sup>* O mult s;\n   wf_below (mult s) {X}\\<rbrakk>\n  \\<Longrightarrow> wf_below\n                     ((multpw ns)\\<^sup>* O mult s O (multpw ns)\\<^sup>*)\n                     {X}\n\ngoal (1 subgoal):\n 1. wf_below (mult2_s ns s) {X}", "unfolding mult2_s_def"], ["proof (prove)\nusing this:\n  wf_below s (set_mset X) \\<Longrightarrow> wf_below (mult s) {X}\n  wf_below s (set_mset X)\n  s O ns \\<subseteq> s\n  refl ns\n  trans ns\n  \\<lbrakk>s O ns \\<subseteq> s; refl ns\\<rbrakk>\n  \\<Longrightarrow> mult s O multpw ns \\<subseteq> multpw ns O mult s\n  \\<lbrakk>multpw ns O mult s\n           \\<subseteq> (multpw ns)\\<^sup>* O mult s O (multpw ns)\\<^sup>*;\n   wf_below ((multpw ns)\\<^sup>* O mult s O (multpw ns)\\<^sup>*)\n    {X}\\<rbrakk>\n  \\<Longrightarrow> wf_below (multpw ns O mult s) {X}\n  \\<lbrakk>mult s O multpw ns\n           \\<subseteq> (mult s \\<union> multpw ns)\\<^sup>* O mult s;\n   wf_below (mult s) {X}\\<rbrakk>\n  \\<Longrightarrow> wf_below\n                     ((multpw ns)\\<^sup>* O mult s O (multpw ns)\\<^sup>*)\n                     {X}\n\ngoal (1 subgoal):\n 1. wf_below (multpw ns O mult s) {X}", "by blast"], ["", "subsection \\<open>Trivial cases\\<close>"], ["", "lemma mult2_alt_emptyL:\n  \"({#}, Y) \\<in> mult2_alt b ns s \\<longleftrightarrow> b \\<or> Y \\<noteq> {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (({#}, Y) \\<in> mult2_alt b ns s) = (b \\<or> Y \\<noteq> {#})", "unfolding mult2_alt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (({#}, Y)\n     \\<in> {(X, Y).\n            \\<exists>X1 X2 Y1 Y2.\n               X = X1 + X2 \\<and>\n               Y = Y1 + Y2 \\<and>\n               (X1, Y1) \\<in> multpw ns \\<and>\n               (b \\<or> Y2 \\<noteq> {#}) \\<and>\n               (\\<forall>x.\n                   x \\<in># X2 \\<longrightarrow>\n                   (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))}) =\n    (b \\<or> Y \\<noteq> {#})", "by auto"], ["", "lemma mult2_alt_emptyR:\n  \"(X, {#}) \\<in> mult2_alt b ns s \\<longleftrightarrow> b \\<and> X = {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((X, {#}) \\<in> mult2_alt b ns s) = (b \\<and> X = {#})", "unfolding mult2_alt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((X, {#})\n     \\<in> {(X, Y).\n            \\<exists>X1 X2 Y1 Y2.\n               X = X1 + X2 \\<and>\n               Y = Y1 + Y2 \\<and>\n               (X1, Y1) \\<in> multpw ns \\<and>\n               (b \\<or> Y2 \\<noteq> {#}) \\<and>\n               (\\<forall>x.\n                   x \\<in># X2 \\<longrightarrow>\n                   (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))}) =\n    (b \\<and> X = {#})", "by (auto intro: multiset_eqI)"], ["", "lemma mult2_alt_s_single:\n  \"(a, b) \\<in> s \\<Longrightarrow> ({#a#}, {#b#}) \\<in> mult2_alt_s ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> s \\<Longrightarrow> ({#a#}, {#b#}) \\<in> mult2_alt_s ns s", "using mult2_altI[of _ \"{#}\" _ _ \"{#}\" _ ns False s]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?X = {#} + ?X2.0; ?Y = {#} + ?Y2.0; ({#}, {#}) \\<in> multpw ns;\n   False \\<or> ?Y2.0 \\<noteq> {#};\n   \\<forall>x.\n      x \\<in># ?X2.0 \\<longrightarrow>\n      (\\<exists>y. y \\<in># ?Y2.0 \\<and> (x, y) \\<in> s)\\<rbrakk>\n  \\<Longrightarrow> (?X, ?Y) \\<in> mult2_alt_s ns s\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> s \\<Longrightarrow> ({#a#}, {#b#}) \\<in> mult2_alt_s ns s", "by auto"], ["", "lemma multpw_implies_mult2_alt_ns:\n  assumes \"(X, Y) \\<in> multpw ns\"\n  shows \"(X, Y) \\<in> mult2_alt_ns ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_alt_ns ns s", "using assms"], ["proof (prove)\nusing this:\n  (X, Y) \\<in> multpw ns\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_alt_ns ns s", "by (intro mult2_alt_nsI[of X X \"{#}\" Y Y \"{#}\"]) auto"], ["", "lemma mult2_alt_ns_conv:\n  \"mult2_alt_ns ns s = mult2_alt_s ns s \\<union> multpw ns\" (is \"?l = ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. mult2_alt_ns ns s = mult2_alt_s ns s \\<union> multpw ns", "proof (intro equalityI subrelI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (x, y) \\<in> mult2_alt_ns ns s \\<Longrightarrow>\n       (x, y) \\<in> mult2_alt_s ns s \\<union> multpw ns\n 2. \\<And>x y.\n       (x, y) \\<in> mult2_alt_s ns s \\<union> multpw ns \\<Longrightarrow>\n       (x, y) \\<in> mult2_alt_ns ns s", "fix X Y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (x, y) \\<in> mult2_alt_ns ns s \\<Longrightarrow>\n       (x, y) \\<in> mult2_alt_s ns s \\<union> multpw ns\n 2. \\<And>x y.\n       (x, y) \\<in> mult2_alt_s ns s \\<union> multpw ns \\<Longrightarrow>\n       (x, y) \\<in> mult2_alt_ns ns s", "assume \"(X, Y) \\<in> ?l\""], ["proof (state)\nthis:\n  (X, Y) \\<in> mult2_alt_ns ns s\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (x, y) \\<in> mult2_alt_ns ns s \\<Longrightarrow>\n       (x, y) \\<in> mult2_alt_s ns s \\<union> multpw ns\n 2. \\<And>x y.\n       (x, y) \\<in> mult2_alt_s ns s \\<union> multpw ns \\<Longrightarrow>\n       (x, y) \\<in> mult2_alt_ns ns s", "thm mult2_alt_nsE"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult2_alt_ns ns s\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (x, y) \\<in> mult2_alt_ns ns s \\<Longrightarrow>\n       (x, y) \\<in> mult2_alt_s ns s \\<union> multpw ns\n 2. \\<And>x y.\n       (x, y) \\<in> mult2_alt_s ns s \\<union> multpw ns \\<Longrightarrow>\n       (x, y) \\<in> mult2_alt_ns ns s", "then"], ["proof (chain)\npicking this:\n  (X, Y) \\<in> mult2_alt_ns ns s", "obtain X1 X2 Y1 Y2 where \"X = X1 + X2\" \"Y = Y1 + Y2\" \"(X1, Y1) \\<in> multpw ns\"\n    \"\\<forall>x. x \\<in># X2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\""], ["proof (prove)\nusing this:\n  (X, Y) \\<in> mult2_alt_ns ns s\n\ngoal (1 subgoal):\n 1. (\\<And>X1 X2 Y1 Y2.\n        \\<lbrakk>X = X1 + X2; Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n         \\<forall>x.\n            x \\<in># X2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: mult2_alt_nsE)"], ["proof (state)\nthis:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (x, y) \\<in> mult2_alt_ns ns s \\<Longrightarrow>\n       (x, y) \\<in> mult2_alt_s ns s \\<union> multpw ns\n 2. \\<And>x y.\n       (x, y) \\<in> mult2_alt_s ns s \\<union> multpw ns \\<Longrightarrow>\n       (x, y) \\<in> mult2_alt_ns ns s", "then"], ["proof (chain)\npicking this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)", "show \"(X, Y) \\<in> ?r\""], ["proof (prove)\nusing this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_alt_s ns s \\<union> multpw ns", "using count_inject[of X2 \"{#}\"]"], ["proof (prove)\nusing this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n  (count X2 = count {#}) = (X2 = {#})\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_alt_s ns s \\<union> multpw ns", "by (cases \"Y2 = {#}\") (auto intro: mult2_alt_sI elim: mult2_alt_nsE mult2_alt_sE)"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult2_alt_s ns s \\<union> multpw ns\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> mult2_alt_s ns s \\<union> multpw ns \\<Longrightarrow>\n       (x, y) \\<in> mult2_alt_ns ns s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> mult2_alt_s ns s \\<union> multpw ns \\<Longrightarrow>\n       (x, y) \\<in> mult2_alt_ns ns s", "fix X Y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> mult2_alt_s ns s \\<union> multpw ns \\<Longrightarrow>\n       (x, y) \\<in> mult2_alt_ns ns s", "assume \"(X, Y) \\<in> ?r\""], ["proof (state)\nthis:\n  (X, Y) \\<in> mult2_alt_s ns s \\<union> multpw ns\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> mult2_alt_s ns s \\<union> multpw ns \\<Longrightarrow>\n       (x, y) \\<in> mult2_alt_ns ns s", "then"], ["proof (chain)\npicking this:\n  (X, Y) \\<in> mult2_alt_s ns s \\<union> multpw ns", "show \"(X, Y) \\<in> ?l\""], ["proof (prove)\nusing this:\n  (X, Y) \\<in> mult2_alt_s ns s \\<union> multpw ns\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_alt_ns ns s", "by (auto intro: mult2_alt_nsI multpw_implies_mult2_alt_ns elim: mult2_alt_sE)"], ["proof (state)\nthis:\n  (X, Y) \\<in> mult2_alt_ns ns s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mult2_alt_s_implies_mult2_alt_ns:\n  assumes \"(X, Y) \\<in> mult2_alt_s ns s\"\n  shows \"(X, Y) \\<in> mult2_alt_ns ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_alt_ns ns s", "using assms"], ["proof (prove)\nusing this:\n  (X, Y) \\<in> mult2_alt_s ns s\n\ngoal (1 subgoal):\n 1. (X, Y) \\<in> mult2_alt_ns ns s", "by (auto intro: mult2_alt_nsI elim: mult2_alt_sE)"], ["", "lemma mult2_alt_add:\n  assumes \"(X1, Y1) \\<in> mult2_alt b1 ns s\" and \"(X2, Y2) \\<in> mult2_alt b2 ns s\"\n  shows \"(X1 + X2, Y1 + Y2) \\<in> mult2_alt (b1 \\<and> b2) ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X1 + X2, Y1 + Y2) \\<in> mult2_alt (b1 \\<and> b2) ns s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (X1 + X2, Y1 + Y2) \\<in> mult2_alt (b1 \\<and> b2) ns s", "from assms"], ["proof (chain)\npicking this:\n  (X1, Y1) \\<in> mult2_alt b1 ns s\n  (X2, Y2) \\<in> mult2_alt b2 ns s", "obtain X11 X12 Y11 Y12 X21 X22 Y21 Y22 where\n    \"X1 = X11 + X12\" \"Y1 = Y11 + Y12\"\n    \"(X11, Y11) \\<in> multpw ns\" \"(b1 \\<or> Y12 \\<noteq> {#})\" \"(\\<forall>x. x \\<in># X12 \\<longrightarrow> (\\<exists>y. y \\<in># Y12 \\<and> (x, y) \\<in> s))\"\n    \"X2 = X21 + X22\" \"Y2 = Y21 + Y22\"\n    \"(X21, Y21) \\<in> multpw ns\" \"(b2 \\<or> Y22 \\<noteq> {#})\" \"(\\<forall>x. x \\<in># X22 \\<longrightarrow> (\\<exists>y. y \\<in># Y22 \\<and> (x, y) \\<in> s))\""], ["proof (prove)\nusing this:\n  (X1, Y1) \\<in> mult2_alt b1 ns s\n  (X2, Y2) \\<in> mult2_alt b2 ns s\n\ngoal (1 subgoal):\n 1. (\\<And>X11 X12 Y11 Y12 X21 X22 Y21 Y22.\n        \\<lbrakk>X1 = X11 + X12; Y1 = Y11 + Y12; (X11, Y11) \\<in> multpw ns;\n         b1 \\<or> Y12 \\<noteq> {#};\n         \\<forall>x.\n            x \\<in># X12 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y12 \\<and> (x, y) \\<in> s);\n         X2 = X21 + X22; Y2 = Y21 + Y22; (X21, Y21) \\<in> multpw ns;\n         b2 \\<or> Y22 \\<noteq> {#};\n         \\<forall>x.\n            x \\<in># X22 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y22 \\<and> (x, y) \\<in> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding mult2_alt_def"], ["proof (prove)\nusing this:\n  (X1, Y1)\n  \\<in> {(X, Y).\n         \\<exists>X1 X2 Y1 Y2.\n            X = X1 + X2 \\<and>\n            Y = Y1 + Y2 \\<and>\n            (X1, Y1) \\<in> multpw ns \\<and>\n            (b1 \\<or> Y2 \\<noteq> {#}) \\<and>\n            (\\<forall>x.\n                x \\<in># X2 \\<longrightarrow>\n                (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))}\n  (X2, Y2)\n  \\<in> {(X, Y).\n         \\<exists>X1 X2 Y1 Y2.\n            X = X1 + X2 \\<and>\n            Y = Y1 + Y2 \\<and>\n            (X1, Y1) \\<in> multpw ns \\<and>\n            (b2 \\<or> Y2 \\<noteq> {#}) \\<and>\n            (\\<forall>x.\n                x \\<in># X2 \\<longrightarrow>\n                (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s))}\n\ngoal (1 subgoal):\n 1. (\\<And>X11 X12 Y11 Y12 X21 X22 Y21 Y22.\n        \\<lbrakk>X1 = X11 + X12; Y1 = Y11 + Y12; (X11, Y11) \\<in> multpw ns;\n         b1 \\<or> Y12 \\<noteq> {#};\n         \\<forall>x.\n            x \\<in># X12 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y12 \\<and> (x, y) \\<in> s);\n         X2 = X21 + X22; Y2 = Y21 + Y22; (X21, Y21) \\<in> multpw ns;\n         b2 \\<or> Y22 \\<noteq> {#};\n         \\<forall>x.\n            x \\<in># X22 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y22 \\<and> (x, y) \\<in> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast 9)"], ["proof (state)\nthis:\n  X1 = X11 + X12\n  Y1 = Y11 + Y12\n  (X11, Y11) \\<in> multpw ns\n  b1 \\<or> Y12 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X12 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y12 \\<and> (x, y) \\<in> s)\n  X2 = X21 + X22\n  Y2 = Y21 + Y22\n  (X21, Y21) \\<in> multpw ns\n  b2 \\<or> Y22 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X22 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y22 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. (X1 + X2, Y1 + Y2) \\<in> mult2_alt (b1 \\<and> b2) ns s", "then"], ["proof (chain)\npicking this:\n  X1 = X11 + X12\n  Y1 = Y11 + Y12\n  (X11, Y11) \\<in> multpw ns\n  b1 \\<or> Y12 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X12 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y12 \\<and> (x, y) \\<in> s)\n  X2 = X21 + X22\n  Y2 = Y21 + Y22\n  (X21, Y21) \\<in> multpw ns\n  b2 \\<or> Y22 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X22 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y22 \\<and> (x, y) \\<in> s)", "show ?thesis"], ["proof (prove)\nusing this:\n  X1 = X11 + X12\n  Y1 = Y11 + Y12\n  (X11, Y11) \\<in> multpw ns\n  b1 \\<or> Y12 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X12 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y12 \\<and> (x, y) \\<in> s)\n  X2 = X21 + X22\n  Y2 = Y21 + Y22\n  (X21, Y21) \\<in> multpw ns\n  b2 \\<or> Y22 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X22 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y22 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. (X1 + X2, Y1 + Y2) \\<in> mult2_alt (b1 \\<and> b2) ns s", "by (intro mult2_altI[of _ \"X11 + X21\" \"X12 + X22\" _ \"Y11 + Y21\" \"Y12 + Y22\"])\n      (auto intro: multpw_add simp: ac_simps)"], ["proof (state)\nthis:\n  (X1 + X2, Y1 + Y2) \\<in> mult2_alt (b1 \\<and> b2) ns s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas mult2_alt_s_s_add = mult2_alt_add[of _ _ False _ _ _ _ False, unfolded simp_thms]"], ["", "lemmas mult2_alt_ns_s_add = mult2_alt_add[of _ _ True _ _ _ _ False, unfolded simp_thms]"], ["", "lemmas mult2_alt_s_ns_add = mult2_alt_add[of _ _ False _ _ _ _ True, unfolded simp_thms]"], ["", "lemmas mult2_alt_ns_ns_add = mult2_alt_add[of _ _ True _ _ _ _ True, unfolded simp_thms]"], ["", "lemma multpw_map:\n  assumes \"\\<And>x y. x \\<in># X \\<Longrightarrow> y \\<in># Y \\<Longrightarrow> (x, y) \\<in> ns \\<Longrightarrow> (f x, g y) \\<in> ns'\"\n    and \"(X, Y) \\<in> multpw ns\"\n  shows \"(image_mset f X, image_mset g Y) \\<in> multpw ns'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (image_mset f X, image_mset g Y) \\<in> multpw ns'", "using assms(2,1)"], ["proof (prove)\nusing this:\n  (X, Y) \\<in> multpw ns\n  \\<lbrakk>?x \\<in># X; ?y \\<in># Y; (?x, ?y) \\<in> ns\\<rbrakk>\n  \\<Longrightarrow> (f ?x, g ?y) \\<in> ns'\n\ngoal (1 subgoal):\n 1. (image_mset f X, image_mset g Y) \\<in> multpw ns'", "by (induct X Y rule: multpw.induct) (auto intro: multpw.intros)"], ["", "lemma mult2_alt_map:\n  assumes \"\\<And>x y. x \\<in># X \\<Longrightarrow> y \\<in># Y \\<Longrightarrow> (x, y) \\<in> ns \\<Longrightarrow> (f x, g y) \\<in> ns'\"\n    and \"\\<And>x y. x \\<in># X \\<Longrightarrow> y \\<in># Y \\<Longrightarrow> (x, y) \\<in> s \\<Longrightarrow> (f x, g y) \\<in> s'\"\n    and \"(X, Y) \\<in> mult2_alt b ns s\"\n  shows \"(image_mset f X, image_mset g Y) \\<in> mult2_alt b ns' s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (image_mset f X, image_mset g Y) \\<in> mult2_alt b ns' s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (image_mset f X, image_mset g Y) \\<in> mult2_alt b ns' s'", "from assms(3)"], ["proof (chain)\npicking this:\n  (X, Y) \\<in> mult2_alt b ns s", "obtain X1 X2 Y1 Y2 where \"X = X1 + X2\" \"Y = Y1 + Y2\" \"(X1, Y1) \\<in> multpw ns\"\n    \"b \\<or> Y2 \\<noteq> {#}\" \"\\<forall>x. x \\<in># X2 \\<longrightarrow> (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\""], ["proof (prove)\nusing this:\n  (X, Y) \\<in> mult2_alt b ns s\n\ngoal (1 subgoal):\n 1. (\\<And>X1 X2 Y1 Y2.\n        \\<lbrakk>X = X1 + X2; Y = Y1 + Y2; (X1, Y1) \\<in> multpw ns;\n         b \\<or> Y2 \\<noteq> {#};\n         \\<forall>x.\n            x \\<in># X2 \\<longrightarrow>\n            (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: mult2_altE)"], ["proof (state)\nthis:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  b \\<or> Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. (image_mset f X, image_mset g Y) \\<in> mult2_alt b ns' s'", "moreover"], ["proof (state)\nthis:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  b \\<or> Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. (image_mset f X, image_mset g Y) \\<in> mult2_alt b ns' s'", "from this(1,2,5)"], ["proof (chain)\npicking this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)", "have \"\\<forall>x. x \\<in># image_mset f X2 \\<longrightarrow> (\\<exists>y. y \\<in># image_mset g Y2 \\<and> (x, y) \\<in> s')\""], ["proof (prove)\nusing this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in># image_mset f X2 \\<longrightarrow>\n       (\\<exists>y. y \\<in># image_mset g Y2 \\<and> (x, y) \\<in> s')", "using assms(2)"], ["proof (prove)\nusing this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n  \\<lbrakk>?x \\<in># X; ?y \\<in># Y; (?x, ?y) \\<in> s\\<rbrakk>\n  \\<Longrightarrow> (f ?x, g ?y) \\<in> s'\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in># image_mset f X2 \\<longrightarrow>\n       (\\<exists>y. y \\<in># image_mset g Y2 \\<and> (x, y) \\<in> s')", "by (simp add: in_image_mset image_iff) blast"], ["proof (state)\nthis:\n  \\<forall>x.\n     x \\<in># image_mset f X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># image_mset g Y2 \\<and> (x, y) \\<in> s')\n\ngoal (1 subgoal):\n 1. (image_mset f X, image_mset g Y) \\<in> mult2_alt b ns' s'", "ultimately"], ["proof (chain)\npicking this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  b \\<or> Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n  \\<forall>x.\n     x \\<in># image_mset f X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># image_mset g Y2 \\<and> (x, y) \\<in> s')", "show ?thesis"], ["proof (prove)\nusing this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  b \\<or> Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n  \\<forall>x.\n     x \\<in># image_mset f X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># image_mset g Y2 \\<and> (x, y) \\<in> s')\n\ngoal (1 subgoal):\n 1. (image_mset f X, image_mset g Y) \\<in> mult2_alt b ns' s'", "using assms multpw_map[of X1 Y1 ns f g]"], ["proof (prove)\nusing this:\n  X = X1 + X2\n  Y = Y1 + Y2\n  (X1, Y1) \\<in> multpw ns\n  b \\<or> Y2 \\<noteq> {#}\n  \\<forall>x.\n     x \\<in># X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># Y2 \\<and> (x, y) \\<in> s)\n  \\<forall>x.\n     x \\<in># image_mset f X2 \\<longrightarrow>\n     (\\<exists>y. y \\<in># image_mset g Y2 \\<and> (x, y) \\<in> s')\n  \\<lbrakk>?x \\<in># X; ?y \\<in># Y; (?x, ?y) \\<in> ns\\<rbrakk>\n  \\<Longrightarrow> (f ?x, g ?y) \\<in> ns'\n  \\<lbrakk>?x \\<in># X; ?y \\<in># Y; (?x, ?y) \\<in> s\\<rbrakk>\n  \\<Longrightarrow> (f ?x, g ?y) \\<in> s'\n  (X, Y) \\<in> mult2_alt b ns s\n  \\<lbrakk>\\<And>x y.\n              \\<lbrakk>x \\<in># X1; y \\<in># Y1; (x, y) \\<in> ns\\<rbrakk>\n              \\<Longrightarrow> (f x, g y) \\<in> ?ns';\n   (X1, Y1) \\<in> multpw ns\\<rbrakk>\n  \\<Longrightarrow> (image_mset f X1, image_mset g Y1) \\<in> multpw ?ns'\n\ngoal (1 subgoal):\n 1. (image_mset f X, image_mset g Y) \\<in> mult2_alt b ns' s'", "by (intro mult2_altI[of _ \"image_mset f X1\" \"image_mset f X2\" _ \"image_mset g Y1\" \"image_mset g Y2\"]) auto"], ["proof (state)\nthis:\n  (image_mset f X, image_mset g Y) \\<in> mult2_alt b ns' s'\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Local transitivity of @{const mult2_alt}\\<close>"], ["", "lemma trans_mult2_alt_local:\n  assumes ss: \"\\<And>x y z. x \\<in># X \\<Longrightarrow> y \\<in># Y \\<Longrightarrow> z \\<in># Z \\<Longrightarrow> (x, y) \\<in> s \\<Longrightarrow> (y, z) \\<in> s \\<Longrightarrow> (x, z) \\<in> s\"\n    and ns: \"\\<And>x y z. x \\<in># X \\<Longrightarrow> y \\<in># Y \\<Longrightarrow> z \\<in># Z \\<Longrightarrow> (x, y) \\<in> ns \\<Longrightarrow> (y, z) \\<in> s \\<Longrightarrow> (x, z) \\<in> s\"\n    and sn: \"\\<And>x y z. x \\<in># X \\<Longrightarrow> y \\<in># Y \\<Longrightarrow> z \\<in># Z \\<Longrightarrow> (x, y) \\<in> s \\<Longrightarrow> (y, z) \\<in> ns \\<Longrightarrow> (x, z) \\<in> s\"\n    and nn: \"\\<And>x y z. x \\<in># X \\<Longrightarrow> y \\<in># Y \\<Longrightarrow> z \\<in># Z \\<Longrightarrow> (x, y) \\<in> ns \\<Longrightarrow> (y, z) \\<in> ns \\<Longrightarrow> (x, z) \\<in> ns\"\n    and xyz: \"(X, Y) \\<in> mult2_alt b1 ns s\" \"(Y, Z) \\<in> mult2_alt b2 ns s\"\n  shows \"(X, Z) \\<in> mult2_alt (b1 \\<and> b2) ns s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt (b1 \\<and> b2) ns s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt (b1 \\<and> b2) ns s", "let ?a1 = Enum.finite_3.a\\<^sub>1 and ?a2 = Enum.finite_3.a\\<^sub>2 and ?a3 = Enum.finite_3.a\\<^sub>3"], ["proof (state)\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt (b1 \\<and> b2) ns s", "let ?t = \"{(?a1, ?a2), (?a1, ?a3), (?a2, ?a3)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt (b1 \\<and> b2) ns s", "let ?A = \"{(?a1, x) |x. x \\<in># X} \\<union> {(?a2, y) |y. y \\<in># Y} \\<union> {(?a3, z) |z. z \\<in># Z}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt (b1 \\<and> b2) ns s", "define s' where \"s' = Restr {((a, x), (b, y)) |a x b y. (a, b) \\<in> ?t \\<and> (x, y) \\<in> s} ?A\""], ["proof (state)\nthis:\n  s' =\n  Restr\n   {((a, x), b, y) |a x b y.\n    (a, b)\n    \\<in> {(a\\<^sub>1, a\\<^sub>2), (a\\<^sub>1, a\\<^sub>3),\n           (a\\<^sub>2, a\\<^sub>3)} \\<and>\n    (x, y) \\<in> s}\n   ({(a\\<^sub>1, x) |x. x \\<in># X} \\<union>\n    {(a\\<^sub>2, y) |y. y \\<in># Y} \\<union>\n    {(a\\<^sub>3, z) |z. z \\<in># Z})\n\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt (b1 \\<and> b2) ns s", "define ns' where \"ns' = (Restr {((a, x), (b, y)) |a x b y. (a, b) \\<in> ?t \\<and> (x, y) \\<in> ns} ?A)\\<^sup>=\""], ["proof (state)\nthis:\n  ns' =\n  (Restr\n    {((a, x), b, y) |a x b y.\n     (a, b)\n     \\<in> {(a\\<^sub>1, a\\<^sub>2), (a\\<^sub>1, a\\<^sub>3),\n            (a\\<^sub>2, a\\<^sub>3)} \\<and>\n     (x, y) \\<in> ns}\n    ({(a\\<^sub>1, x) |x. x \\<in># X} \\<union>\n     {(a\\<^sub>2, y) |y. y \\<in># Y} \\<union>\n     {(a\\<^sub>3, z) |z. z \\<in># Z}))\\<^sup>=\n\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt (b1 \\<and> b2) ns s", "have *: \"refl ns'\" \"trans ns'\" \"trans s'\" \"s' O ns' \\<subseteq> s'\" \"ns' O s' \\<subseteq> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (refl ns' &&& trans ns') &&&\n    trans s' &&& s' O ns' \\<subseteq> s' &&& ns' O s' \\<subseteq> s'", "by (force simp: trans_def ss ns sn nn s'_def ns'_def)+"], ["proof (state)\nthis:\n  refl ns'\n  trans ns'\n  trans s'\n  s' O ns' \\<subseteq> s'\n  ns' O s' \\<subseteq> s'\n\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt (b1 \\<and> b2) ns s", "have \"({#(?a1, x). x \\<in># X#}, {#(?a2, y). y \\<in># Y#}) \\<in> mult2_alt b1 ns' s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (image_mset (Pair a\\<^sub>1) X, image_mset (Pair a\\<^sub>2) Y)\n    \\<in> mult2_alt b1 ns' s'", "by (auto intro: mult2_alt_map[OF _ _ xyz(1)] simp: s'_def ns'_def)"], ["proof (state)\nthis:\n  (image_mset (Pair a\\<^sub>1) X, image_mset (Pair a\\<^sub>2) Y)\n  \\<in> mult2_alt b1 ns' s'\n\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt (b1 \\<and> b2) ns s", "moreover"], ["proof (state)\nthis:\n  (image_mset (Pair a\\<^sub>1) X, image_mset (Pair a\\<^sub>2) Y)\n  \\<in> mult2_alt b1 ns' s'\n\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt (b1 \\<and> b2) ns s", "have \"({#(?a2, y). y \\<in># Y#}, {#(?a3, z). z \\<in># Z#}) \\<in> mult2_alt b2 ns' s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (image_mset (Pair a\\<^sub>2) Y, image_mset (Pair a\\<^sub>3) Z)\n    \\<in> mult2_alt b2 ns' s'", "by (auto intro: mult2_alt_map[OF _ _ xyz(2)] simp: s'_def ns'_def)"], ["proof (state)\nthis:\n  (image_mset (Pair a\\<^sub>2) Y, image_mset (Pair a\\<^sub>3) Z)\n  \\<in> mult2_alt b2 ns' s'\n\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt (b1 \\<and> b2) ns s", "ultimately"], ["proof (chain)\npicking this:\n  (image_mset (Pair a\\<^sub>1) X, image_mset (Pair a\\<^sub>2) Y)\n  \\<in> mult2_alt b1 ns' s'\n  (image_mset (Pair a\\<^sub>2) Y, image_mset (Pair a\\<^sub>3) Z)\n  \\<in> mult2_alt b2 ns' s'", "have \"({#(?a1, x). x \\<in># X#}, {#(?a3, z). z \\<in># Z#}) \\<in> mult2_alt (b1 \\<and> b2) ns' s'\""], ["proof (prove)\nusing this:\n  (image_mset (Pair a\\<^sub>1) X, image_mset (Pair a\\<^sub>2) Y)\n  \\<in> mult2_alt b1 ns' s'\n  (image_mset (Pair a\\<^sub>2) Y, image_mset (Pair a\\<^sub>3) Z)\n  \\<in> mult2_alt b2 ns' s'\n\ngoal (1 subgoal):\n 1. (image_mset (Pair a\\<^sub>1) X, image_mset (Pair a\\<^sub>3) Z)\n    \\<in> mult2_alt (b1 \\<and> b2) ns' s'", "using mult2_s_eq_mult2_s_alt[OF *(5,1,3)] mult2_ns_eq_mult2_ns_alt[OF *(5,1,3)]\n      trans_mult2_s[OF *(4,1,2)] trans_mult2_ns[OF *(4,1,2)] compat_mult2[OF *(4,1,2)]"], ["proof (prove)\nusing this:\n  (image_mset (Pair a\\<^sub>1) X, image_mset (Pair a\\<^sub>2) Y)\n  \\<in> mult2_alt b1 ns' s'\n  (image_mset (Pair a\\<^sub>2) Y, image_mset (Pair a\\<^sub>3) Z)\n  \\<in> mult2_alt b2 ns' s'\n  mult2_alt_s ns' s' = mult2_s ns' s'\n  mult2_alt_ns ns' s' = mult2_ns ns' s'\n  trans (mult2_s ns' s')\n  trans (mult2_ns ns' s')\n  mult2_ns ns' s' O mult2_s ns' s' \\<subseteq> mult2_s ns' s'\n  mult2_s ns' s' O mult2_ns ns' s' \\<subseteq> mult2_s ns' s'\n\ngoal (1 subgoal):\n 1. (image_mset (Pair a\\<^sub>1) X, image_mset (Pair a\\<^sub>3) Z)\n    \\<in> mult2_alt (b1 \\<and> b2) ns' s'", "by (cases b1; cases b2) (auto simp: trans_O_iff)"], ["proof (state)\nthis:\n  (image_mset (Pair a\\<^sub>1) X, image_mset (Pair a\\<^sub>3) Z)\n  \\<in> mult2_alt (b1 \\<and> b2) ns' s'\n\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt (b1 \\<and> b2) ns s", "from mult2_alt_map[OF _ _ this, of snd snd ns s]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x y.\n              \\<lbrakk>x \\<in># image_mset (Pair a\\<^sub>1) X;\n               y \\<in># image_mset (Pair a\\<^sub>3) Z;\n               (x, y) \\<in> ns'\\<rbrakk>\n              \\<Longrightarrow> (snd x, snd y) \\<in> ns;\n   \\<And>x y.\n      \\<lbrakk>x \\<in># image_mset (Pair a\\<^sub>1) X;\n       y \\<in># image_mset (Pair a\\<^sub>3) Z; (x, y) \\<in> s'\\<rbrakk>\n      \\<Longrightarrow> (snd x, snd y) \\<in> s\\<rbrakk>\n  \\<Longrightarrow> (image_mset snd (image_mset (Pair a\\<^sub>1) X),\n                     image_mset snd (image_mset (Pair a\\<^sub>3) Z))\n                    \\<in> mult2_alt (b1 \\<and> b2) ns s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y.\n              \\<lbrakk>x \\<in># image_mset (Pair a\\<^sub>1) X;\n               y \\<in># image_mset (Pair a\\<^sub>3) Z;\n               (x, y) \\<in> ns'\\<rbrakk>\n              \\<Longrightarrow> (snd x, snd y) \\<in> ns;\n   \\<And>x y.\n      \\<lbrakk>x \\<in># image_mset (Pair a\\<^sub>1) X;\n       y \\<in># image_mset (Pair a\\<^sub>3) Z; (x, y) \\<in> s'\\<rbrakk>\n      \\<Longrightarrow> (snd x, snd y) \\<in> s\\<rbrakk>\n  \\<Longrightarrow> (image_mset snd (image_mset (Pair a\\<^sub>1) X),\n                     image_mset snd (image_mset (Pair a\\<^sub>3) Z))\n                    \\<in> mult2_alt (b1 \\<and> b2) ns s\n\ngoal (1 subgoal):\n 1. (X, Z) \\<in> mult2_alt (b1 \\<and> b2) ns s", "by (auto simp: s'_def ns'_def image_mset.compositionality comp_def in_image_mset image_iff)"], ["proof (state)\nthis:\n  (X, Z) \\<in> mult2_alt (b1 \\<and> b2) ns s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas trans_mult2_alt_s_s_local = trans_mult2_alt_local[of _ _ _ _ _ False False, unfolded simp_thms]"], ["", "lemmas trans_mult2_alt_ns_s_local = trans_mult2_alt_local[of _ _ _ _ _ True False, unfolded simp_thms]"], ["", "lemmas trans_mult2_alt_s_ns_local = trans_mult2_alt_local[of _ _ _ _ _ False True, unfolded simp_thms]"], ["", "lemmas trans_mult2_alt_ns_ns_local = trans_mult2_alt_local[of _ _ _ _ _ True True, unfolded simp_thms]"], ["", "end"]]}