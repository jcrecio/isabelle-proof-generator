{"file_name": "/home/qj213/afp-2021-10-22/thys/Weighted_Path_Order/Status.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Weighted_Path_Order", "problem_names": ["lemma status: \"set (status \\<sigma> (f, n)) \\<subseteq> {0 ..< n}\"", "lemma status_aux[termination_simp]: \"i \\<in> set (status \\<sigma> (f, length ss)) \\<Longrightarrow> ss ! i \\<in> set ss\"", "lemma status_termination_simps[termination_simp]:\n  assumes i1: \"i < length (status \\<sigma> (f, length xs))\"\n  shows \"size (xs ! (status \\<sigma> (f, length xs) ! i)) < Suc (size_list size xs)\" (is \"?a < ?c\")", "lemma status_ne:\n  \"status \\<sigma> (f, n) \\<noteq> [] \\<Longrightarrow> \\<exists>i < n. i \\<in> set (status \\<sigma> (f, n))\"", "lemma set_status_nth:\n  \"length xs = n \\<Longrightarrow> i \\<in> set (status \\<sigma> (f, n)) \\<Longrightarrow> i < length xs \\<and> xs ! i \\<in> set xs\"", "lemma full_status[simp]: \"status full_status (f, n) = [0 ..< n]\"", "lemma simple_arg_posI: \"\\<lbrakk>\\<And> ts. length ts = n \\<Longrightarrow> i < n \\<Longrightarrow> (Fun f ts, ts ! i) \\<in> rel\\<rbrakk> \\<Longrightarrow> simple_arg_pos rel (f, n) i\""], "translations": [["", "lemma status: \"set (status \\<sigma> (f, n)) \\<subseteq> {0 ..< n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (status \\<sigma> (f, n)) \\<subseteq> {0..<n}", "by (transfer) auto"], ["", "lemma status_aux[termination_simp]: \"i \\<in> set (status \\<sigma> (f, length ss)) \\<Longrightarrow> ss ! i \\<in> set ss\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> set (status \\<sigma> (f, length ss)) \\<Longrightarrow>\n    ss ! i \\<in> set ss", "using status[of \\<sigma> f \"length ss\"]"], ["proof (prove)\nusing this:\n  set (status \\<sigma> (f, length ss)) \\<subseteq> {0..<length ss}\n\ngoal (1 subgoal):\n 1. i \\<in> set (status \\<sigma> (f, length ss)) \\<Longrightarrow>\n    ss ! i \\<in> set ss", "unfolding set_conv_nth"], ["proof (prove)\nusing this:\n  {status \\<sigma> (f, length ss) ! i |i.\n   i < length (status \\<sigma> (f, length ss))}\n  \\<subseteq> {0..<length ss}\n\ngoal (1 subgoal):\n 1. i \\<in> {status \\<sigma> (f, length ss) ! i |i.\n             i < length (status \\<sigma> (f, length ss))} \\<Longrightarrow>\n    ss ! i \\<in> {ss ! i |i. i < length ss}", "by force"], ["", "lemma status_termination_simps[termination_simp]:\n  assumes i1: \"i < length (status \\<sigma> (f, length xs))\"\n  shows \"size (xs ! (status \\<sigma> (f, length xs) ! i)) < Suc (size_list size xs)\" (is \"?a < ?c\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. size (xs ! (status \\<sigma> (f, length xs) ! i))\n    < Suc (size_list size xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. size (xs ! (status \\<sigma> (f, length xs) ! i))\n    < Suc (size_list size xs)", "from i1"], ["proof (chain)\npicking this:\n  i < length (status \\<sigma> (f, length xs))", "have \"status \\<sigma> (f, length xs) ! i \\<in> set (status \\<sigma> (f, length xs))\""], ["proof (prove)\nusing this:\n  i < length (status \\<sigma> (f, length xs))\n\ngoal (1 subgoal):\n 1. status \\<sigma> (f, length xs) ! i\n    \\<in> set (status \\<sigma> (f, length xs))", "by auto"], ["proof (state)\nthis:\n  status \\<sigma> (f, length xs) ! i\n  \\<in> set (status \\<sigma> (f, length xs))\n\ngoal (1 subgoal):\n 1. size (xs ! (status \\<sigma> (f, length xs) ! i))\n    < Suc (size_list size xs)", "from status_aux[OF this]"], ["proof (chain)\npicking this:\n  xs ! (status \\<sigma> (f, length xs) ! i) \\<in> set xs", "have \"?a \\<le> size_list size xs\""], ["proof (prove)\nusing this:\n  xs ! (status \\<sigma> (f, length xs) ! i) \\<in> set xs\n\ngoal (1 subgoal):\n 1. size (xs ! (status \\<sigma> (f, length xs) ! i)) \\<le> size_list size xs", "by (auto simp: termination_simp)"], ["proof (state)\nthis:\n  size (xs ! (status \\<sigma> (f, length xs) ! i)) \\<le> size_list size xs\n\ngoal (1 subgoal):\n 1. size (xs ! (status \\<sigma> (f, length xs) ! i))\n    < Suc (size_list size xs)", "then"], ["proof (chain)\npicking this:\n  size (xs ! (status \\<sigma> (f, length xs) ! i)) \\<le> size_list size xs", "show ?thesis"], ["proof (prove)\nusing this:\n  size (xs ! (status \\<sigma> (f, length xs) ! i)) \\<le> size_list size xs\n\ngoal (1 subgoal):\n 1. size (xs ! (status \\<sigma> (f, length xs) ! i))\n    < Suc (size_list size xs)", "by auto"], ["proof (state)\nthis:\n  size (xs ! (status \\<sigma> (f, length xs) ! i)) < Suc (size_list size xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma status_ne:\n  \"status \\<sigma> (f, n) \\<noteq> [] \\<Longrightarrow> \\<exists>i < n. i \\<in> set (status \\<sigma> (f, n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status \\<sigma> (f, n) \\<noteq> [] \\<Longrightarrow>\n    \\<exists>i<n. i \\<in> set (status \\<sigma> (f, n))", "using status [of \\<sigma> f n]"], ["proof (prove)\nusing this:\n  set (status \\<sigma> (f, n)) \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. status \\<sigma> (f, n) \\<noteq> [] \\<Longrightarrow>\n    \\<exists>i<n. i \\<in> set (status \\<sigma> (f, n))", "by (meson atLeastLessThan_iff set_empty subsetCE subsetI subset_empty)"], ["", "lemma set_status_nth:\n  \"length xs = n \\<Longrightarrow> i \\<in> set (status \\<sigma> (f, n)) \\<Longrightarrow> i < length xs \\<and> xs ! i \\<in> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs = n; i \\<in> set (status \\<sigma> (f, n))\\<rbrakk>\n    \\<Longrightarrow> i < length xs \\<and> xs ! i \\<in> set xs", "using status [of \\<sigma> f n]"], ["proof (prove)\nusing this:\n  set (status \\<sigma> (f, n)) \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs = n; i \\<in> set (status \\<sigma> (f, n))\\<rbrakk>\n    \\<Longrightarrow> i < length xs \\<and> xs ! i \\<in> set xs", "by force"], ["", "lift_definition full_status :: \"'f status\" is \"\\<lambda> (f, n). [0 ..< n]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f nat.\n       set (case (f, nat) of (f, x) \\<Rightarrow> [0..<x])\n       \\<subseteq> {0..<nat}", "by auto"], ["", "lemma full_status[simp]: \"status full_status (f, n) = [0 ..< n]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status full_status (f, n) = [0..<n]", "by transfer auto"], ["", "text \\<open>An argument position i is simple wrt. some term relation, if the i-th subterm is in relation to the\n  full term.\\<close>"], ["", "definition simple_arg_pos :: \"('f, 'v) term rel \\<Rightarrow> 'f \\<times> nat \\<Rightarrow> nat \\<Rightarrow> bool\" where \n  \"simple_arg_pos rel f i \\<equiv> \\<forall> ts. i < snd f \\<longrightarrow> length ts = snd f \\<longrightarrow> (Fun (fst f) ts, ts ! i) \\<in> rel\""], ["", "lemma simple_arg_posI: \"\\<lbrakk>\\<And> ts. length ts = n \\<Longrightarrow> i < n \\<Longrightarrow> (Fun f ts, ts ! i) \\<in> rel\\<rbrakk> \\<Longrightarrow> simple_arg_pos rel (f, n) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ts.\n        \\<lbrakk>length ts = n; i < n\\<rbrakk>\n        \\<Longrightarrow> (Fun f ts, ts ! i) \\<in> rel) \\<Longrightarrow>\n    simple_arg_pos rel (f, n) i", "unfolding simple_arg_pos_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ts.\n        \\<lbrakk>length ts = n; i < n\\<rbrakk>\n        \\<Longrightarrow> (Fun f ts, ts ! i) \\<in> rel) \\<Longrightarrow>\n    \\<forall>ts.\n       i < snd (f, n) \\<longrightarrow>\n       length ts = snd (f, n) \\<longrightarrow>\n       (Fun (fst (f, n)) ts, ts ! i) \\<in> rel", "by auto"], ["", "end"]]}