{"file_name": "/home/qj213/afp-2021-10-22/thys/Saturation_Framework/Intersection_Calculus.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Saturation_Framework", "problem_names": ["lemma sat_int_to_sat_q: \"calculus.saturated Inf Red_I N \\<longleftrightarrow>\n  (\\<forall>qi \\<in> Q. calculus.saturated Inf (Red_I_q qi) N)\" for N", "lemma stat_ref_comp_from_bot_in_sat:\n  \"(\\<forall>N. calculus.saturated Inf Red_I N \\<and> (\\<forall>B \\<in> Bot. B \\<notin> N) \\<longrightarrow>\n      (\\<exists>B \\<in> Bot. \\<exists>qi \\<in> Q. \\<not> entails_q qi N {B})) \\<Longrightarrow>\n   statically_complete_calculus Bot Inf entails Red_I Red_F\""], "translations": [["", "lemma sat_int_to_sat_q: \"calculus.saturated Inf Red_I N \\<longleftrightarrow>\n  (\\<forall>qi \\<in> Q. calculus.saturated Inf (Red_I_q qi) N)\" for N"], ["proof (prove)\ngoal (1 subgoal):\n 1. saturated N = (\\<forall>qi\\<in>Q. calculus.saturated Inf (Red_I_q qi) N)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. saturated N \\<Longrightarrow>\n    \\<forall>qi\\<in>Q. calculus.saturated Inf (Red_I_q qi) N\n 2. \\<forall>qi\\<in>Q.\n       calculus.saturated Inf (Red_I_q qi) N \\<Longrightarrow>\n    saturated N", "fix N"], ["proof (state)\ngoal (2 subgoals):\n 1. saturated N \\<Longrightarrow>\n    \\<forall>qi\\<in>Q. calculus.saturated Inf (Red_I_q qi) N\n 2. \\<forall>qi\\<in>Q.\n       calculus.saturated Inf (Red_I_q qi) N \\<Longrightarrow>\n    saturated N", "assume inter_sat: \"calculus.saturated Inf Red_I N\""], ["proof (state)\nthis:\n  saturated N\n\ngoal (2 subgoals):\n 1. saturated N \\<Longrightarrow>\n    \\<forall>qi\\<in>Q. calculus.saturated Inf (Red_I_q qi) N\n 2. \\<forall>qi\\<in>Q.\n       calculus.saturated Inf (Red_I_q qi) N \\<Longrightarrow>\n    saturated N", "show \"\\<forall>qi \\<in> Q. calculus.saturated Inf (Red_I_q qi) N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>qi\\<in>Q. calculus.saturated Inf (Red_I_q qi) N", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>qi.\n       qi \\<in> Q \\<Longrightarrow> calculus.saturated Inf (Red_I_q qi) N", "fix qi"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>qi.\n       qi \\<in> Q \\<Longrightarrow> calculus.saturated Inf (Red_I_q qi) N", "assume qi_in: \"qi \\<in> Q\""], ["proof (state)\nthis:\n  qi \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<And>qi.\n       qi \\<in> Q \\<Longrightarrow> calculus.saturated Inf (Red_I_q qi) N", "then"], ["proof (chain)\npicking this:\n  qi \\<in> Q", "interpret one: calculus Bot Inf \"entails_q qi\" \"Red_I_q qi\" \"Red_F_q qi\""], ["proof (prove)\nusing this:\n  qi \\<in> Q\n\ngoal (1 subgoal):\n 1. calculus Bot Inf (entails_q qi) (Red_I_q qi) (Red_F_q qi)", "by (metis all_red_crit)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>qi.\n       qi \\<in> Q \\<Longrightarrow> calculus.saturated Inf (Red_I_q qi) N", "show \"one.saturated N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one.saturated N", "using qi_in inter_sat"], ["proof (prove)\nusing this:\n  qi \\<in> Q\n  saturated N\n\ngoal (1 subgoal):\n 1. one.saturated N", "unfolding one.saturated_def saturated_def Red_I_def"], ["proof (prove)\nusing this:\n  qi \\<in> Q\n  Inf_from N \\<subseteq> (\\<Inter>q\\<in>Q. Red_I_q q N)\n\ngoal (1 subgoal):\n 1. Inf_from N \\<subseteq> Red_I_q qi N", "by blast"], ["proof (state)\nthis:\n  one.saturated N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>qi\\<in>Q. calculus.saturated Inf (Red_I_q qi) N\n\ngoal (1 subgoal):\n 1. \\<forall>qi\\<in>Q.\n       calculus.saturated Inf (Red_I_q qi) N \\<Longrightarrow>\n    saturated N", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>qi\\<in>Q.\n       calculus.saturated Inf (Red_I_q qi) N \\<Longrightarrow>\n    saturated N", "fix N"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>qi\\<in>Q.\n       calculus.saturated Inf (Red_I_q qi) N \\<Longrightarrow>\n    saturated N", "assume all_sat: \"\\<forall>qi \\<in> Q. calculus.saturated Inf (Red_I_q qi) N\""], ["proof (state)\nthis:\n  \\<forall>qi\\<in>Q. calculus.saturated Inf (Red_I_q qi) N\n\ngoal (1 subgoal):\n 1. \\<forall>qi\\<in>Q.\n       calculus.saturated Inf (Red_I_q qi) N \\<Longrightarrow>\n    saturated N", "show \"saturated N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. saturated N", "unfolding saturated_def Red_I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from N \\<subseteq> (\\<Inter>q\\<in>Q. Red_I_q q N)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from N \\<Longrightarrow>\n       x \\<in> (\\<Inter>q\\<in>Q. Red_I_q q N)", "fix \\<iota>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from N \\<Longrightarrow>\n       x \\<in> (\\<Inter>q\\<in>Q. Red_I_q q N)", "assume \\<iota>_in: \"\\<iota> \\<in> Inf_from N\""], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from N \\<Longrightarrow>\n       x \\<in> (\\<Inter>q\\<in>Q. Red_I_q q N)", "have \"\\<forall>Red_I_qi \\<in> Red_I_q ` Q. \\<iota> \\<in> Red_I_qi N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Red_I_qi\\<in>Red_I_q ` Q. \\<iota> \\<in> Red_I_qi N", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Red_I_qi.\n       Red_I_qi \\<in> Red_I_q ` Q \\<Longrightarrow> \\<iota> \\<in> Red_I_qi N", "fix Red_I_qi"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Red_I_qi.\n       Red_I_qi \\<in> Red_I_q ` Q \\<Longrightarrow> \\<iota> \\<in> Red_I_qi N", "assume red_inf_in: \"Red_I_qi \\<in> Red_I_q ` Q\""], ["proof (state)\nthis:\n  Red_I_qi \\<in> Red_I_q ` Q\n\ngoal (1 subgoal):\n 1. \\<And>Red_I_qi.\n       Red_I_qi \\<in> Red_I_q ` Q \\<Longrightarrow> \\<iota> \\<in> Red_I_qi N", "then"], ["proof (chain)\npicking this:\n  Red_I_qi \\<in> Red_I_q ` Q", "obtain qi where\n        qi_in: \"qi \\<in> Q\" and\n        red_inf_qi_def: \"Red_I_qi = Red_I_q qi\""], ["proof (prove)\nusing this:\n  Red_I_qi \\<in> Red_I_q ` Q\n\ngoal (1 subgoal):\n 1. (\\<And>qi.\n        \\<lbrakk>qi \\<in> Q; Red_I_qi = Red_I_q qi\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  qi \\<in> Q\n  Red_I_qi = Red_I_q qi\n\ngoal (1 subgoal):\n 1. \\<And>Red_I_qi.\n       Red_I_qi \\<in> Red_I_q ` Q \\<Longrightarrow> \\<iota> \\<in> Red_I_qi N", "then"], ["proof (chain)\npicking this:\n  qi \\<in> Q\n  Red_I_qi = Red_I_q qi", "interpret one: calculus Bot Inf \"entails_q qi\" \"Red_I_q qi\" \"Red_F_q qi\""], ["proof (prove)\nusing this:\n  qi \\<in> Q\n  Red_I_qi = Red_I_q qi\n\ngoal (1 subgoal):\n 1. calculus Bot Inf (entails_q qi) (Red_I_q qi) (Red_F_q qi)", "by (metis all_red_crit)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Red_I_qi.\n       Red_I_qi \\<in> Red_I_q ` Q \\<Longrightarrow> \\<iota> \\<in> Red_I_qi N", "have \"one.saturated N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one.saturated N", "using qi_in all_sat red_inf_qi_def"], ["proof (prove)\nusing this:\n  qi \\<in> Q\n  \\<forall>qi\\<in>Q. calculus.saturated Inf (Red_I_q qi) N\n  Red_I_qi = Red_I_q qi\n\ngoal (1 subgoal):\n 1. one.saturated N", "by blast"], ["proof (state)\nthis:\n  one.saturated N\n\ngoal (1 subgoal):\n 1. \\<And>Red_I_qi.\n       Red_I_qi \\<in> Red_I_q ` Q \\<Longrightarrow> \\<iota> \\<in> Red_I_qi N", "then"], ["proof (chain)\npicking this:\n  one.saturated N", "show \"\\<iota> \\<in> Red_I_qi N\""], ["proof (prove)\nusing this:\n  one.saturated N\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_qi N", "unfolding one.saturated_def"], ["proof (prove)\nusing this:\n  Inf_from N \\<subseteq> Red_I_q qi N\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_qi N", "using \\<iota>_in red_inf_qi_def"], ["proof (prove)\nusing this:\n  Inf_from N \\<subseteq> Red_I_q qi N\n  \\<iota> \\<in> Inf_from N\n  Red_I_qi = Red_I_q qi\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_qi N", "by blast"], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_I_qi N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>Red_I_qi\\<in>Red_I_q ` Q. \\<iota> \\<in> Red_I_qi N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from N \\<Longrightarrow>\n       x \\<in> (\\<Inter>q\\<in>Q. Red_I_q q N)", "then"], ["proof (chain)\npicking this:\n  \\<forall>Red_I_qi\\<in>Red_I_q ` Q. \\<iota> \\<in> Red_I_qi N", "show \"\\<iota> \\<in> (\\<Inter>q \\<in> Q. Red_I_q q N)\""], ["proof (prove)\nusing this:\n  \\<forall>Red_I_qi\\<in>Red_I_q ` Q. \\<iota> \\<in> Red_I_qi N\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> (\\<Inter>q\\<in>Q. Red_I_q q N)", "by blast"], ["proof (state)\nthis:\n  \\<iota> \\<in> (\\<Inter>q\\<in>Q. Red_I_q q N)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  saturated N\n\ngoal:\nNo subgoals!", "qed"], ["", "(* lem:checking-static-ref-compl-for-intersections *)"], ["", "lemma stat_ref_comp_from_bot_in_sat:\n  \"(\\<forall>N. calculus.saturated Inf Red_I N \\<and> (\\<forall>B \\<in> Bot. B \\<notin> N) \\<longrightarrow>\n      (\\<exists>B \\<in> Bot. \\<exists>qi \\<in> Q. \\<not> entails_q qi N {B})) \\<Longrightarrow>\n   statically_complete_calculus Bot Inf entails Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>N.\n       saturated N \\<and>\n       (\\<forall>B\\<in>Bot. B \\<notin> N) \\<longrightarrow>\n       (\\<exists>B\\<in>Bot.\n           \\<exists>qi\\<in>Q. \\<not> entails_q qi N {B}) \\<Longrightarrow>\n    statically_complete_calculus Bot Inf (\\<Turnstile>Q) Red_I Red_F", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>N.\n                saturated N \\<and>\n                (\\<forall>B\\<in>Bot. B \\<notin> N) \\<longrightarrow>\n                (\\<exists>B\\<in>Bot.\n                    \\<exists>qi\\<in>Q. \\<not> entails_q qi N {B});\n     \\<not> statically_complete_calculus Bot Inf (\\<Turnstile>Q) Red_I\n             Red_F\\<rbrakk>\n    \\<Longrightarrow> False", "assume\n    N_saturated: \"\\<forall>N. (calculus.saturated Inf Red_I N \\<and> (\\<forall>B \\<in> Bot. B \\<notin> N)) \\<longrightarrow>\n      (\\<exists>B \\<in> Bot. \\<exists>qi \\<in> Q. \\<not> entails_q qi N {B})\" and\n    no_stat_ref_comp: \"\\<not> statically_complete_calculus Bot Inf (\\<Turnstile>Q) Red_I Red_F\""], ["proof (state)\nthis:\n  \\<forall>N.\n     saturated N \\<and> (\\<forall>B\\<in>Bot. B \\<notin> N) \\<longrightarrow>\n     (\\<exists>B\\<in>Bot. \\<exists>qi\\<in>Q. \\<not> entails_q qi N {B})\n  \\<not> statically_complete_calculus Bot Inf (\\<Turnstile>Q) Red_I Red_F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>N.\n                saturated N \\<and>\n                (\\<forall>B\\<in>Bot. B \\<notin> N) \\<longrightarrow>\n                (\\<exists>B\\<in>Bot.\n                    \\<exists>qi\\<in>Q. \\<not> entails_q qi N {B});\n     \\<not> statically_complete_calculus Bot Inf (\\<Turnstile>Q) Red_I\n             Red_F\\<rbrakk>\n    \\<Longrightarrow> False", "obtain N1 B1 where B1_in:\n    \"B1 \\<in> Bot\" and N1_saturated: \"calculus.saturated Inf Red_I N1\" and\n    N1_unsat: \"N1 \\<Turnstile>Q {B1}\" and no_B_in_N1: \"\\<forall>B \\<in> Bot. B \\<notin> N1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B1 N1.\n        \\<lbrakk>B1 \\<in> Bot; saturated N1; N1 \\<Turnstile>Q {B1};\n         \\<forall>B\\<in>Bot. B \\<notin> N1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using no_stat_ref_comp"], ["proof (prove)\nusing this:\n  \\<not> statically_complete_calculus Bot Inf (\\<Turnstile>Q) Red_I Red_F\n\ngoal (1 subgoal):\n 1. (\\<And>B1 N1.\n        \\<lbrakk>B1 \\<in> Bot; saturated N1; N1 \\<Turnstile>Q {B1};\n         \\<forall>B\\<in>Bot. B \\<notin> N1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis calculus_axioms statically_complete_calculus.intro\n        statically_complete_calculus_axioms.intro)"], ["proof (state)\nthis:\n  B1 \\<in> Bot\n  saturated N1\n  N1 \\<Turnstile>Q {B1}\n  \\<forall>B\\<in>Bot. B \\<notin> N1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>N.\n                saturated N \\<and>\n                (\\<forall>B\\<in>Bot. B \\<notin> N) \\<longrightarrow>\n                (\\<exists>B\\<in>Bot.\n                    \\<exists>qi\\<in>Q. \\<not> entails_q qi N {B});\n     \\<not> statically_complete_calculus Bot Inf (\\<Turnstile>Q) Red_I\n             Red_F\\<rbrakk>\n    \\<Longrightarrow> False", "obtain B2 qi where\n    qi_in: \"qi \\<in> Q\" and\n    no_qi: \"\\<not> entails_q qi N1 {B2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>qi B2.\n        \\<lbrakk>qi \\<in> Q; \\<not> entails_q qi N1 {B2}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using N_saturated N1_saturated no_B_in_N1"], ["proof (prove)\nusing this:\n  \\<forall>N.\n     saturated N \\<and> (\\<forall>B\\<in>Bot. B \\<notin> N) \\<longrightarrow>\n     (\\<exists>B\\<in>Bot. \\<exists>qi\\<in>Q. \\<not> entails_q qi N {B})\n  saturated N1\n  \\<forall>B\\<in>Bot. B \\<notin> N1\n\ngoal (1 subgoal):\n 1. (\\<And>qi B2.\n        \\<lbrakk>qi \\<in> Q; \\<not> entails_q qi N1 {B2}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  qi \\<in> Q\n  \\<not> entails_q qi N1 {B2}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>N.\n                saturated N \\<and>\n                (\\<forall>B\\<in>Bot. B \\<notin> N) \\<longrightarrow>\n                (\\<exists>B\\<in>Bot.\n                    \\<exists>qi\\<in>Q. \\<not> entails_q qi N {B});\n     \\<not> statically_complete_calculus Bot Inf (\\<Turnstile>Q) Red_I\n             Red_F\\<rbrakk>\n    \\<Longrightarrow> False", "have \"N1 \\<Turnstile>Q {B2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N1 \\<Turnstile>Q {B2}", "using N1_unsat B1_in intersect_cons_rel_family"], ["proof (prove)\nusing this:\n  N1 \\<Turnstile>Q {B1}\n  B1 \\<in> Bot\n  consequence_relation Bot (\\<Turnstile>Q)\n\ngoal (1 subgoal):\n 1. N1 \\<Turnstile>Q {B2}", "unfolding consequence_relation_def"], ["proof (prove)\nusing this:\n  N1 \\<Turnstile>Q {B1}\n  B1 \\<in> Bot\n  (Bot \\<noteq> {} \\<and>\n   (\\<forall>B N1.\n       B \\<in> Bot \\<longrightarrow> {B} \\<Turnstile>Q N1)) \\<and>\n  (\\<forall>N2 N1.\n      N2 \\<subseteq> N1 \\<longrightarrow> N1 \\<Turnstile>Q N2) \\<and>\n  (\\<forall>N2 N1.\n      (\\<forall>C\\<in>N2. N1 \\<Turnstile>Q {C}) \\<longrightarrow>\n      N1 \\<Turnstile>Q N2) \\<and>\n  (\\<forall>N1 N2 N3.\n      N1 \\<Turnstile>Q N2 \\<longrightarrow>\n      N2 \\<Turnstile>Q N3 \\<longrightarrow> N1 \\<Turnstile>Q N3)\n\ngoal (1 subgoal):\n 1. N1 \\<Turnstile>Q {B2}", "by metis"], ["proof (state)\nthis:\n  N1 \\<Turnstile>Q {B2}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>N.\n                saturated N \\<and>\n                (\\<forall>B\\<in>Bot. B \\<notin> N) \\<longrightarrow>\n                (\\<exists>B\\<in>Bot.\n                    \\<exists>qi\\<in>Q. \\<not> entails_q qi N {B});\n     \\<not> statically_complete_calculus Bot Inf (\\<Turnstile>Q) Red_I\n             Red_F\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  N1 \\<Turnstile>Q {B2}", "have \"entails_q qi N1 {B2}\""], ["proof (prove)\nusing this:\n  N1 \\<Turnstile>Q {B2}\n\ngoal (1 subgoal):\n 1. entails_q qi N1 {B2}", "unfolding entails_def"], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>Q. entails_q q N1 {B2}\n\ngoal (1 subgoal):\n 1. entails_q qi N1 {B2}", "using qi_in"], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>Q. entails_q q N1 {B2}\n  qi \\<in> Q\n\ngoal (1 subgoal):\n 1. entails_q qi N1 {B2}", "by blast"], ["proof (state)\nthis:\n  entails_q qi N1 {B2}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>N.\n                saturated N \\<and>\n                (\\<forall>B\\<in>Bot. B \\<notin> N) \\<longrightarrow>\n                (\\<exists>B\\<in>Bot.\n                    \\<exists>qi\\<in>Q. \\<not> entails_q qi N {B});\n     \\<not> statically_complete_calculus Bot Inf (\\<Turnstile>Q) Red_I\n             Red_F\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  entails_q qi N1 {B2}", "show False"], ["proof (prove)\nusing this:\n  entails_q qi N1 {B2}\n\ngoal (1 subgoal):\n 1. False", "using no_qi"], ["proof (prove)\nusing this:\n  entails_q qi N1 {B2}\n  \\<not> entails_q qi N1 {B2}\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}