{"file_name": "/home/qj213/afp-2021-10-22/thys/Saturation_Framework/Given_Clause_Architectures.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Saturation_Framework", "problem_names": ["lemma irrefl_prec_F: \"\\<not> C \\<prec>\\<cdot> C\"", "lemma trans_prec_F: \"C1 \\<prec>\\<cdot> C2 \\<Longrightarrow> C2 \\<prec>\\<cdot> C3 \\<Longrightarrow> C1 \\<prec>\\<cdot> C3\"", "lemma wf_prec_FL: \"minimal_element (\\<sqsubset>) UNIV\"", "lemma active_subset_insert[simp]:\n  \"active_subset (insert Cl N) = (if snd Cl = active then {Cl} else {}) \\<union> active_subset N\"", "lemma active_subset_union[simp]: \"active_subset (M \\<union> N) = active_subset M \\<union> active_subset N\"", "lemma passive_subset_insert[simp]:\n  \"passive_subset (insert Cl N) = (if snd Cl \\<noteq> active then {Cl} else {}) \\<union> passive_subset N\"", "lemma passive_subset_union[simp]: \"passive_subset (M \\<union> N) = passive_subset M \\<union> passive_subset N\"", "lemma labeled_tiebreaker_lifting:\n  assumes q_in: \"q \\<in> Q\"\n  shows \"tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n    (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q) (\\<lambda>g. Prec_FL)\"", "lemma std_Red_I_eq: \"std.Red_I = Red_I_\\<G>\"", "lemma std_Red_F_eq: \"std.Red_F = Red_F_\\<G>_empty\"", "lemma labeled_red_inf_eq_red_inf:\n  assumes i_in: \"\\<iota> \\<in> Inf_FL\"\n  shows \"\\<iota> \\<in> Red_I N \\<longleftrightarrow> to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N)\"", "lemma red_labeled_clauses:\n  assumes \\<open>C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N) \\<or>\n    (\\<exists>C' \\<in> fst ` N. C' \\<prec>\\<cdot> C) \\<or> (\\<exists>(C', L') \\<in> N. L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C)\\<close>\n  shows \\<open>(C, L) \\<in> Red_F N\\<close>", "lemma labeled_inf_have_prems: \"\\<iota> \\<in> Inf_FL \\<Longrightarrow> prems_of \\<iota> \\<noteq> []\"", "lemma one_step_equiv: \"N1 \\<leadsto>GC N2 \\<Longrightarrow> N1 \\<rhd>L N2\"", "lemma gc_to_red: \"chain (\\<leadsto>GC) Ns \\<Longrightarrow> chain (\\<rhd>L) Ns\"", "lemma (in-) all_ex_finite_set: \"(\\<forall>(j::nat)\\<in>{0..<m}. \\<exists>(n::nat). P j n) \\<Longrightarrow>\n  (\\<forall>n1 n2. \\<forall>j\\<in>{0..<m}. P j n1 \\<longrightarrow> P j n2 \\<longrightarrow> n1 = n2) \\<Longrightarrow> finite {n. \\<exists>j \\<in> {0..<m}. P j n}\" for m P", "lemma gc_fair:\n  assumes\n    deriv: \"chain (\\<leadsto>GC) Ns\" and\n    init_state: \"active_subset (lhd Ns) = {}\" and\n    final_state: \"passive_subset (Liminf_llist Ns) = {}\"\n  shows \"fair Ns\"", "theorem gc_complete_Liminf:\n  assumes\n    deriv: \"chain (\\<leadsto>GC) Ns\" and\n    init_state: \"active_subset (lhd Ns) = {}\" and\n    final_state: \"passive_subset (Liminf_llist Ns) = {}\" and\n    b_in: \"B \\<in> Bot_F\" and\n    bot_entailed: \"no_labels.entails_\\<G> (fst ` lhd Ns) {B}\"\n  shows \"\\<exists>BL \\<in> Bot_FL. BL \\<in> Liminf_llist Ns\"", "theorem gc_complete:\n  assumes\n    deriv: \"chain (\\<leadsto>GC) Ns\" and\n    init_state: \"active_subset (lhd Ns) = {}\" and\n    final_state: \"passive_subset (Liminf_llist Ns) = {}\" and\n    b_in: \"B \\<in> Bot_F\" and\n    bot_entailed: \"no_labels.entails_\\<G> (fst ` lhd Ns) {B}\"\n  shows \"\\<exists>i. enat i < llength Ns \\<and> (\\<exists>BL \\<in> Bot_FL. BL \\<in> lnth Ns i)\"", "lemma premise_free_inf_always_from: \"\\<iota> \\<in> Inf_F \\<Longrightarrow> prems_of \\<iota> = [] \\<Longrightarrow> \\<iota> \\<in> no_labels.Inf_from N\"", "lemma one_step_equiv: \"(T1, N1) \\<leadsto>LGC (T2, N2) \\<Longrightarrow> N1 \\<rhd>L N2\"", "lemma lgc_to_red: \"chain (\\<leadsto>LGC) Ns \\<Longrightarrow> chain (\\<rhd>L) (lmap snd Ns)\"", "lemma lgc_fair:\n  assumes\n    deriv: \"chain (\\<leadsto>LGC) Ns\" and\n    init_state: \"active_subset (snd (lhd Ns)) = {}\" and\n    final_state: \"passive_subset (Liminf_llist (lmap snd Ns)) = {}\" and\n    no_prems_init_active: \"\\<forall>\\<iota> \\<in> Inf_F. prems_of \\<iota> = [] \\<longrightarrow> \\<iota> \\<in> fst (lhd Ns)\" and\n    final_schedule: \"Liminf_llist (lmap fst Ns) = {}\"\n  shows \"fair (lmap snd Ns)\"", "theorem lgc_complete_Liminf:\n  assumes\n    deriv: \"chain (\\<leadsto>LGC) Ns\" and\n    init_state: \"active_subset (snd (lhd Ns)) = {}\" and\n    final_state: \"passive_subset (Liminf_llist (lmap snd Ns)) = {}\" and\n    no_prems_init_active: \"\\<forall>\\<iota> \\<in> Inf_F. prems_of \\<iota> = [] \\<longrightarrow> \\<iota> \\<in> fst (lhd Ns)\" and\n    final_schedule: \"Liminf_llist (lmap fst Ns) = {}\" and\n    b_in: \"B \\<in> Bot_F\" and\n    bot_entailed: \"no_labels.entails_\\<G> (fst ` snd (lhd Ns)) {B}\"\n  shows \"\\<exists>BL \\<in> Bot_FL. BL \\<in> Liminf_llist (lmap snd Ns)\"", "theorem lgc_complete:\n  assumes\n    deriv: \"chain (\\<leadsto>LGC) Ns\" and\n    init_state: \"active_subset (snd (lhd Ns)) = {}\" and\n    final_state: \"passive_subset (Liminf_llist (lmap snd Ns)) = {}\" and\n    no_prems_init_active: \"\\<forall>\\<iota> \\<in> Inf_F. prems_of \\<iota> = [] \\<longrightarrow> \\<iota> \\<in> fst (lhd Ns)\" and\n    final_schedule: \"Liminf_llist (lmap fst Ns) = {}\" and\n    b_in: \"B \\<in> Bot_F\" and\n    bot_entailed: \"no_labels.entails_\\<G> (fst ` snd (lhd Ns)) {B}\"\n  shows \"\\<exists>i. enat i < llength Ns \\<and> (\\<exists>BL \\<in> Bot_FL. BL \\<in> snd (lnth Ns i))\""], "translations": [["", "lemma irrefl_prec_F: \"\\<not> C \\<prec>\\<cdot> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> C \\<prec>\\<cdot> C", "by (simp add: minimal_element.po[OF wf_prec_F, unfolded po_on_def irreflp_on_def])"], ["", "lemma trans_prec_F: \"C1 \\<prec>\\<cdot> C2 \\<Longrightarrow> C2 \\<prec>\\<cdot> C3 \\<Longrightarrow> C1 \\<prec>\\<cdot> C3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C1 \\<prec>\\<cdot> C2; C2 \\<prec>\\<cdot> C3\\<rbrakk>\n    \\<Longrightarrow> C1 \\<prec>\\<cdot> C3", "by (auto intro: minimal_element.po[OF wf_prec_F, unfolded po_on_def transp_on_def, THEN conjunct2,\n        simplified, rule_format])"], ["", "lemma wf_prec_FL: \"minimal_element (\\<sqsubset>) UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. minimal_element (\\<sqsubset>) UNIV", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. po_on (\\<sqsubset>) UNIV\n 2. wfp_on (\\<sqsubset>) UNIV", "show \"po_on (\\<sqsubset>) UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. po_on (\\<sqsubset>) UNIV", "unfolding po_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. irreflp_on (\\<sqsubset>) UNIV \\<and> transp_on (\\<sqsubset>) UNIV", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. irreflp_on (\\<sqsubset>) UNIV\n 2. transp_on (\\<sqsubset>) UNIV", "show \"irreflp_on (\\<sqsubset>) UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreflp_on (\\<sqsubset>) UNIV", "unfolding irreflp_on_def Prec_FL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>UNIV.\n       \\<not> (fst a \\<prec>\\<cdot> fst a \\<or>\n               fst a \\<doteq> fst a \\<and> snd a \\<sqsubset>L snd a)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> UNIV \\<Longrightarrow>\n       \\<not> (fst a \\<prec>\\<cdot> fst a \\<or>\n               fst a \\<doteq> fst a \\<and> snd a \\<sqsubset>L snd a)", "fix Cl"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> UNIV \\<Longrightarrow>\n       \\<not> (fst a \\<prec>\\<cdot> fst a \\<or>\n               fst a \\<doteq> fst a \\<and> snd a \\<sqsubset>L snd a)", "assume a_in: \"Cl \\<in> (UNIV::('f \\<times> 'l) set)\""], ["proof (state)\nthis:\n  Cl \\<in> UNIV\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> UNIV \\<Longrightarrow>\n       \\<not> (fst a \\<prec>\\<cdot> fst a \\<or>\n               fst a \\<doteq> fst a \\<and> snd a \\<sqsubset>L snd a)", "have \"\\<not> (fst Cl \\<prec>\\<cdot> fst Cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> fst Cl \\<prec>\\<cdot> fst Cl", "using wf_prec_F minimal_element.min_elt_ex"], ["proof (prove)\nusing this:\n  minimal_element (\\<prec>\\<cdot>) UNIV\n  \\<lbrakk>minimal_element ?P ?A; ?B \\<subseteq> ?A; ?B \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x.\n                       x \\<in> ?B \\<and>\n                       (\\<forall>y\\<in>?A.\n                           ?P y x \\<longrightarrow> y \\<notin> ?B)\n\ngoal (1 subgoal):\n 1. \\<not> fst Cl \\<prec>\\<cdot> fst Cl", "by force"], ["proof (state)\nthis:\n  \\<not> fst Cl \\<prec>\\<cdot> fst Cl\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> UNIV \\<Longrightarrow>\n       \\<not> (fst a \\<prec>\\<cdot> fst a \\<or>\n               fst a \\<doteq> fst a \\<and> snd a \\<sqsubset>L snd a)", "moreover"], ["proof (state)\nthis:\n  \\<not> fst Cl \\<prec>\\<cdot> fst Cl\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> UNIV \\<Longrightarrow>\n       \\<not> (fst a \\<prec>\\<cdot> fst a \\<or>\n               fst a \\<doteq> fst a \\<and> snd a \\<sqsubset>L snd a)", "have \"\\<not> (snd Cl \\<sqsubset>L snd Cl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> snd Cl \\<sqsubset>L snd Cl", "using wf_prec_L minimal_element.min_elt_ex"], ["proof (prove)\nusing this:\n  minimal_element (\\<sqsubset>L) UNIV\n  \\<lbrakk>minimal_element ?P ?A; ?B \\<subseteq> ?A; ?B \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x.\n                       x \\<in> ?B \\<and>\n                       (\\<forall>y\\<in>?A.\n                           ?P y x \\<longrightarrow> y \\<notin> ?B)\n\ngoal (1 subgoal):\n 1. \\<not> snd Cl \\<sqsubset>L snd Cl", "by force"], ["proof (state)\nthis:\n  \\<not> snd Cl \\<sqsubset>L snd Cl\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> UNIV \\<Longrightarrow>\n       \\<not> (fst a \\<prec>\\<cdot> fst a \\<or>\n               fst a \\<doteq> fst a \\<and> snd a \\<sqsubset>L snd a)", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> fst Cl \\<prec>\\<cdot> fst Cl\n  \\<not> snd Cl \\<sqsubset>L snd Cl", "show \"\\<not> (fst Cl \\<prec>\\<cdot> fst Cl \\<or> fst Cl \\<doteq> fst Cl \\<and> snd Cl \\<sqsubset>L snd Cl)\""], ["proof (prove)\nusing this:\n  \\<not> fst Cl \\<prec>\\<cdot> fst Cl\n  \\<not> snd Cl \\<sqsubset>L snd Cl\n\ngoal (1 subgoal):\n 1. \\<not> (fst Cl \\<prec>\\<cdot> fst Cl \\<or>\n            fst Cl \\<doteq> fst Cl \\<and> snd Cl \\<sqsubset>L snd Cl)", "by blast"], ["proof (state)\nthis:\n  \\<not> (fst Cl \\<prec>\\<cdot> fst Cl \\<or>\n          fst Cl \\<doteq> fst Cl \\<and> snd Cl \\<sqsubset>L snd Cl)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  irreflp_on (\\<sqsubset>) UNIV\n\ngoal (1 subgoal):\n 1. transp_on (\\<sqsubset>) UNIV", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. transp_on (\\<sqsubset>) UNIV", "show \"transp_on (\\<sqsubset>) UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp_on (\\<sqsubset>) UNIV", "unfolding transp_on_def Prec_FL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       \\<forall>y\\<in>UNIV.\n          \\<forall>z\\<in>UNIV.\n             (fst x \\<prec>\\<cdot> fst y \\<or>\n              fst x \\<doteq> fst y \\<and> snd x \\<sqsubset>L snd y) \\<and>\n             (fst y \\<prec>\\<cdot> fst z \\<or>\n              fst y \\<doteq> fst z \\<and>\n              snd y \\<sqsubset>L snd z) \\<longrightarrow>\n             fst x \\<prec>\\<cdot> fst z \\<or>\n             fst x \\<doteq> fst z \\<and> snd x \\<sqsubset>L snd z", "proof (simp, intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab bb.\n       (a \\<prec>\\<cdot> aa \\<or>\n        a \\<doteq> aa \\<and> b \\<sqsubset>L ba) \\<and>\n       (aa \\<prec>\\<cdot> ab \\<or>\n        aa \\<doteq> ab \\<and> ba \\<sqsubset>L bb) \\<Longrightarrow>\n       a \\<prec>\\<cdot> ab \\<or> a \\<doteq> ab \\<and> b \\<sqsubset>L bb", "fix C1 l1 C2 l2 C3 l3"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab bb.\n       (a \\<prec>\\<cdot> aa \\<or>\n        a \\<doteq> aa \\<and> b \\<sqsubset>L ba) \\<and>\n       (aa \\<prec>\\<cdot> ab \\<or>\n        aa \\<doteq> ab \\<and> ba \\<sqsubset>L bb) \\<Longrightarrow>\n       a \\<prec>\\<cdot> ab \\<or> a \\<doteq> ab \\<and> b \\<sqsubset>L bb", "assume trans_hyp: \"(C1 \\<prec>\\<cdot> C2 \\<or> C1 \\<doteq> C2 \\<and> l1 \\<sqsubset>L l2) \\<and> (C2 \\<prec>\\<cdot> C3 \\<or> C2 \\<doteq> C3 \\<and> l2 \\<sqsubset>L l3)\""], ["proof (state)\nthis:\n  (C1 \\<prec>\\<cdot> C2 \\<or>\n   C1 \\<doteq> C2 \\<and> l1 \\<sqsubset>L l2) \\<and>\n  (C2 \\<prec>\\<cdot> C3 \\<or> C2 \\<doteq> C3 \\<and> l2 \\<sqsubset>L l3)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab bb.\n       (a \\<prec>\\<cdot> aa \\<or>\n        a \\<doteq> aa \\<and> b \\<sqsubset>L ba) \\<and>\n       (aa \\<prec>\\<cdot> ab \\<or>\n        aa \\<doteq> ab \\<and> ba \\<sqsubset>L bb) \\<Longrightarrow>\n       a \\<prec>\\<cdot> ab \\<or> a \\<doteq> ab \\<and> b \\<sqsubset>L bb", "have \"C1 \\<prec>\\<cdot> C2 \\<Longrightarrow> C2 \\<doteq> C3 \\<Longrightarrow> C1 \\<prec>\\<cdot> C3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C1 \\<prec>\\<cdot> C2; C2 \\<doteq> C3\\<rbrakk>\n    \\<Longrightarrow> C1 \\<prec>\\<cdot> C3", "using compat_equiv_prec"], ["proof (prove)\nusing this:\n  \\<lbrakk>?C1.0 \\<doteq> ?D1.0; ?C2.0 \\<doteq> ?D2.0;\n   ?C1.0 \\<prec>\\<cdot> ?C2.0\\<rbrakk>\n  \\<Longrightarrow> ?D1.0 \\<prec>\\<cdot> ?D2.0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C1 \\<prec>\\<cdot> C2; C2 \\<doteq> C3\\<rbrakk>\n    \\<Longrightarrow> C1 \\<prec>\\<cdot> C3", "by (metis equiv_equiv_F equivp_def)"], ["proof (state)\nthis:\n  \\<lbrakk>C1 \\<prec>\\<cdot> C2; C2 \\<doteq> C3\\<rbrakk>\n  \\<Longrightarrow> C1 \\<prec>\\<cdot> C3\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab bb.\n       (a \\<prec>\\<cdot> aa \\<or>\n        a \\<doteq> aa \\<and> b \\<sqsubset>L ba) \\<and>\n       (aa \\<prec>\\<cdot> ab \\<or>\n        aa \\<doteq> ab \\<and> ba \\<sqsubset>L bb) \\<Longrightarrow>\n       a \\<prec>\\<cdot> ab \\<or> a \\<doteq> ab \\<and> b \\<sqsubset>L bb", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>C1 \\<prec>\\<cdot> C2; C2 \\<doteq> C3\\<rbrakk>\n  \\<Longrightarrow> C1 \\<prec>\\<cdot> C3\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab bb.\n       (a \\<prec>\\<cdot> aa \\<or>\n        a \\<doteq> aa \\<and> b \\<sqsubset>L ba) \\<and>\n       (aa \\<prec>\\<cdot> ab \\<or>\n        aa \\<doteq> ab \\<and> ba \\<sqsubset>L bb) \\<Longrightarrow>\n       a \\<prec>\\<cdot> ab \\<or> a \\<doteq> ab \\<and> b \\<sqsubset>L bb", "have \"C1 \\<doteq> C2 \\<Longrightarrow> C2 \\<prec>\\<cdot> C3 \\<Longrightarrow> C1 \\<prec>\\<cdot> C3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C1 \\<doteq> C2; C2 \\<prec>\\<cdot> C3\\<rbrakk>\n    \\<Longrightarrow> C1 \\<prec>\\<cdot> C3", "using compat_equiv_prec"], ["proof (prove)\nusing this:\n  \\<lbrakk>?C1.0 \\<doteq> ?D1.0; ?C2.0 \\<doteq> ?D2.0;\n   ?C1.0 \\<prec>\\<cdot> ?C2.0\\<rbrakk>\n  \\<Longrightarrow> ?D1.0 \\<prec>\\<cdot> ?D2.0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C1 \\<doteq> C2; C2 \\<prec>\\<cdot> C3\\<rbrakk>\n    \\<Longrightarrow> C1 \\<prec>\\<cdot> C3", "by (metis equiv_equiv_F equivp_def)"], ["proof (state)\nthis:\n  \\<lbrakk>C1 \\<doteq> C2; C2 \\<prec>\\<cdot> C3\\<rbrakk>\n  \\<Longrightarrow> C1 \\<prec>\\<cdot> C3\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab bb.\n       (a \\<prec>\\<cdot> aa \\<or>\n        a \\<doteq> aa \\<and> b \\<sqsubset>L ba) \\<and>\n       (aa \\<prec>\\<cdot> ab \\<or>\n        aa \\<doteq> ab \\<and> ba \\<sqsubset>L bb) \\<Longrightarrow>\n       a \\<prec>\\<cdot> ab \\<or> a \\<doteq> ab \\<and> b \\<sqsubset>L bb", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>C1 \\<doteq> C2; C2 \\<prec>\\<cdot> C3\\<rbrakk>\n  \\<Longrightarrow> C1 \\<prec>\\<cdot> C3\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab bb.\n       (a \\<prec>\\<cdot> aa \\<or>\n        a \\<doteq> aa \\<and> b \\<sqsubset>L ba) \\<and>\n       (aa \\<prec>\\<cdot> ab \\<or>\n        aa \\<doteq> ab \\<and> ba \\<sqsubset>L bb) \\<Longrightarrow>\n       a \\<prec>\\<cdot> ab \\<or> a \\<doteq> ab \\<and> b \\<sqsubset>L bb", "have \"l1 \\<sqsubset>L l2 \\<Longrightarrow> l2 \\<sqsubset>L l3 \\<Longrightarrow> l1 \\<sqsubset>L l3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>l1 \\<sqsubset>L l2; l2 \\<sqsubset>L l3\\<rbrakk>\n    \\<Longrightarrow> l1 \\<sqsubset>L l3", "using wf_prec_L"], ["proof (prove)\nusing this:\n  minimal_element (\\<sqsubset>L) UNIV\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l1 \\<sqsubset>L l2; l2 \\<sqsubset>L l3\\<rbrakk>\n    \\<Longrightarrow> l1 \\<sqsubset>L l3", "unfolding minimal_element_def po_on_def transp_on_def"], ["proof (prove)\nusing this:\n  (irreflp_on (\\<sqsubset>L) UNIV \\<and>\n   (\\<forall>x\\<in>UNIV.\n       \\<forall>y\\<in>UNIV.\n          \\<forall>z\\<in>UNIV.\n             x \\<sqsubset>L y \\<and> y \\<sqsubset>L z \\<longrightarrow>\n             x \\<sqsubset>L z)) \\<and>\n  wfp_on (\\<sqsubset>L) UNIV\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l1 \\<sqsubset>L l2; l2 \\<sqsubset>L l3\\<rbrakk>\n    \\<Longrightarrow> l1 \\<sqsubset>L l3", "by (meson UNIV_I)"], ["proof (state)\nthis:\n  \\<lbrakk>l1 \\<sqsubset>L l2; l2 \\<sqsubset>L l3\\<rbrakk>\n  \\<Longrightarrow> l1 \\<sqsubset>L l3\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab bb.\n       (a \\<prec>\\<cdot> aa \\<or>\n        a \\<doteq> aa \\<and> b \\<sqsubset>L ba) \\<and>\n       (aa \\<prec>\\<cdot> ab \\<or>\n        aa \\<doteq> ab \\<and> ba \\<sqsubset>L bb) \\<Longrightarrow>\n       a \\<prec>\\<cdot> ab \\<or> a \\<doteq> ab \\<and> b \\<sqsubset>L bb", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>l1 \\<sqsubset>L l2; l2 \\<sqsubset>L l3\\<rbrakk>\n  \\<Longrightarrow> l1 \\<sqsubset>L l3\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab bb.\n       (a \\<prec>\\<cdot> aa \\<or>\n        a \\<doteq> aa \\<and> b \\<sqsubset>L ba) \\<and>\n       (aa \\<prec>\\<cdot> ab \\<or>\n        aa \\<doteq> ab \\<and> ba \\<sqsubset>L bb) \\<Longrightarrow>\n       a \\<prec>\\<cdot> ab \\<or> a \\<doteq> ab \\<and> b \\<sqsubset>L bb", "have \"C1 \\<doteq> C2 \\<Longrightarrow> C2 \\<doteq> C3 \\<Longrightarrow> C1 \\<doteq> C3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C1 \\<doteq> C2; C2 \\<doteq> C3\\<rbrakk>\n    \\<Longrightarrow> C1 \\<doteq> C3", "using equiv_equiv_F"], ["proof (prove)\nusing this:\n  equivp (\\<doteq>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C1 \\<doteq> C2; C2 \\<doteq> C3\\<rbrakk>\n    \\<Longrightarrow> C1 \\<doteq> C3", "by (meson equivp_transp)"], ["proof (state)\nthis:\n  \\<lbrakk>C1 \\<doteq> C2; C2 \\<doteq> C3\\<rbrakk>\n  \\<Longrightarrow> C1 \\<doteq> C3\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab bb.\n       (a \\<prec>\\<cdot> aa \\<or>\n        a \\<doteq> aa \\<and> b \\<sqsubset>L ba) \\<and>\n       (aa \\<prec>\\<cdot> ab \\<or>\n        aa \\<doteq> ab \\<and> ba \\<sqsubset>L bb) \\<Longrightarrow>\n       a \\<prec>\\<cdot> ab \\<or> a \\<doteq> ab \\<and> b \\<sqsubset>L bb", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>C1 \\<prec>\\<cdot> C2; C2 \\<doteq> C3\\<rbrakk>\n  \\<Longrightarrow> C1 \\<prec>\\<cdot> C3\n  \\<lbrakk>C1 \\<doteq> C2; C2 \\<prec>\\<cdot> C3\\<rbrakk>\n  \\<Longrightarrow> C1 \\<prec>\\<cdot> C3\n  \\<lbrakk>l1 \\<sqsubset>L l2; l2 \\<sqsubset>L l3\\<rbrakk>\n  \\<Longrightarrow> l1 \\<sqsubset>L l3\n  \\<lbrakk>C1 \\<doteq> C2; C2 \\<doteq> C3\\<rbrakk>\n  \\<Longrightarrow> C1 \\<doteq> C3", "show \"C1 \\<prec>\\<cdot> C3 \\<or> C1 \\<doteq> C3 \\<and> l1 \\<sqsubset>L l3\""], ["proof (prove)\nusing this:\n  \\<lbrakk>C1 \\<prec>\\<cdot> C2; C2 \\<doteq> C3\\<rbrakk>\n  \\<Longrightarrow> C1 \\<prec>\\<cdot> C3\n  \\<lbrakk>C1 \\<doteq> C2; C2 \\<prec>\\<cdot> C3\\<rbrakk>\n  \\<Longrightarrow> C1 \\<prec>\\<cdot> C3\n  \\<lbrakk>l1 \\<sqsubset>L l2; l2 \\<sqsubset>L l3\\<rbrakk>\n  \\<Longrightarrow> l1 \\<sqsubset>L l3\n  \\<lbrakk>C1 \\<doteq> C2; C2 \\<doteq> C3\\<rbrakk>\n  \\<Longrightarrow> C1 \\<doteq> C3\n\ngoal (1 subgoal):\n 1. C1 \\<prec>\\<cdot> C3 \\<or> C1 \\<doteq> C3 \\<and> l1 \\<sqsubset>L l3", "using trans_hyp"], ["proof (prove)\nusing this:\n  \\<lbrakk>C1 \\<prec>\\<cdot> C2; C2 \\<doteq> C3\\<rbrakk>\n  \\<Longrightarrow> C1 \\<prec>\\<cdot> C3\n  \\<lbrakk>C1 \\<doteq> C2; C2 \\<prec>\\<cdot> C3\\<rbrakk>\n  \\<Longrightarrow> C1 \\<prec>\\<cdot> C3\n  \\<lbrakk>l1 \\<sqsubset>L l2; l2 \\<sqsubset>L l3\\<rbrakk>\n  \\<Longrightarrow> l1 \\<sqsubset>L l3\n  \\<lbrakk>C1 \\<doteq> C2; C2 \\<doteq> C3\\<rbrakk>\n  \\<Longrightarrow> C1 \\<doteq> C3\n  (C1 \\<prec>\\<cdot> C2 \\<or>\n   C1 \\<doteq> C2 \\<and> l1 \\<sqsubset>L l2) \\<and>\n  (C2 \\<prec>\\<cdot> C3 \\<or> C2 \\<doteq> C3 \\<and> l2 \\<sqsubset>L l3)\n\ngoal (1 subgoal):\n 1. C1 \\<prec>\\<cdot> C3 \\<or> C1 \\<doteq> C3 \\<and> l1 \\<sqsubset>L l3", "using trans_prec_F"], ["proof (prove)\nusing this:\n  \\<lbrakk>C1 \\<prec>\\<cdot> C2; C2 \\<doteq> C3\\<rbrakk>\n  \\<Longrightarrow> C1 \\<prec>\\<cdot> C3\n  \\<lbrakk>C1 \\<doteq> C2; C2 \\<prec>\\<cdot> C3\\<rbrakk>\n  \\<Longrightarrow> C1 \\<prec>\\<cdot> C3\n  \\<lbrakk>l1 \\<sqsubset>L l2; l2 \\<sqsubset>L l3\\<rbrakk>\n  \\<Longrightarrow> l1 \\<sqsubset>L l3\n  \\<lbrakk>C1 \\<doteq> C2; C2 \\<doteq> C3\\<rbrakk>\n  \\<Longrightarrow> C1 \\<doteq> C3\n  (C1 \\<prec>\\<cdot> C2 \\<or>\n   C1 \\<doteq> C2 \\<and> l1 \\<sqsubset>L l2) \\<and>\n  (C2 \\<prec>\\<cdot> C3 \\<or> C2 \\<doteq> C3 \\<and> l2 \\<sqsubset>L l3)\n  \\<lbrakk>?C1.0 \\<prec>\\<cdot> ?C2.0; ?C2.0 \\<prec>\\<cdot> ?C3.0\\<rbrakk>\n  \\<Longrightarrow> ?C1.0 \\<prec>\\<cdot> ?C3.0\n\ngoal (1 subgoal):\n 1. C1 \\<prec>\\<cdot> C3 \\<or> C1 \\<doteq> C3 \\<and> l1 \\<sqsubset>L l3", "by blast"], ["proof (state)\nthis:\n  C1 \\<prec>\\<cdot> C3 \\<or> C1 \\<doteq> C3 \\<and> l1 \\<sqsubset>L l3\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  transp_on (\\<sqsubset>) UNIV\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  po_on (\\<sqsubset>) UNIV\n\ngoal (1 subgoal):\n 1. wfp_on (\\<sqsubset>) UNIV", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. wfp_on (\\<sqsubset>) UNIV", "show \"wfp_on (\\<sqsubset>) UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on (\\<sqsubset>) UNIV", "unfolding wfp_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>f. \\<forall>i. f i \\<in> UNIV \\<and> f (Suc i) \\<sqsubset> f i", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>i.\n          f i \\<in> UNIV \\<and> f (Suc i) \\<sqsubset> f i \\<Longrightarrow>\n    False", "assume contra: \"\\<exists>f. \\<forall>i. f i \\<in> UNIV \\<and> f (Suc i) \\<sqsubset> f i\""], ["proof (state)\nthis:\n  \\<exists>f. \\<forall>i. f i \\<in> UNIV \\<and> f (Suc i) \\<sqsubset> f i\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>i.\n          f i \\<in> UNIV \\<and> f (Suc i) \\<sqsubset> f i \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>f. \\<forall>i. f i \\<in> UNIV \\<and> f (Suc i) \\<sqsubset> f i", "obtain f where\n      f_suc: \"\\<forall>i. f (Suc i) \\<sqsubset> f i\""], ["proof (prove)\nusing this:\n  \\<exists>f. \\<forall>i. f i \\<in> UNIV \\<and> f (Suc i) \\<sqsubset> f i\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<forall>i. f (Suc i) \\<sqsubset> f i \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>i. f (Suc i) \\<sqsubset> f i\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>i.\n          f i \\<in> UNIV \\<and> f (Suc i) \\<sqsubset> f i \\<Longrightarrow>\n    False", "define R :: \"(('f \\<times> 'l) \\<times> ('f \\<times> 'l)) set\" where\n      \"R = {(Cl1, Cl2). fst Cl1 \\<prec>\\<cdot> fst Cl2}\""], ["proof (state)\nthis:\n  R = {(Cl1, Cl2). fst Cl1 \\<prec>\\<cdot> fst Cl2}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>i.\n          f i \\<in> UNIV \\<and> f (Suc i) \\<sqsubset> f i \\<Longrightarrow>\n    False", "define S :: \"(('f \\<times> 'l) \\<times> ('f \\<times> 'l)) set\" where\n      \"S = {(Cl1, Cl2). fst Cl1 \\<doteq> fst Cl2 \\<and> snd Cl1 \\<sqsubset>L snd Cl2}\""], ["proof (state)\nthis:\n  S =\n  {(Cl1, Cl2). fst Cl1 \\<doteq> fst Cl2 \\<and> snd Cl1 \\<sqsubset>L snd Cl2}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>i.\n          f i \\<in> UNIV \\<and> f (Suc i) \\<sqsubset> f i \\<Longrightarrow>\n    False", "obtain k where\n      f_chain: \"\\<forall>i. (f (Suc (i + k)), f (i + k)) \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<forall>i. (f (Suc (i + k)), f (i + k)) \\<in> S \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof (atomize_elim, rule wf_infinite_down_chain_compatible[of R f S])"], ["proof (state)\ngoal (3 subgoals):\n 1. wf R\n 2. \\<forall>i. (f (Suc i), f i) \\<in> R \\<union> S\n 3. R O S \\<subseteq> R", "show \"wf R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf R", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf {(Cl1, Cl2). fst Cl1 \\<prec>\\<cdot> fst Cl2}", "using wf_app[OF wf_prec_F[unfolded minimal_element_def, THEN conjunct2,\n              unfolded wfp_on_UNIV wfP_def]]"], ["proof (prove)\nusing this:\n  wf {(x, y). (?f x, ?f y) \\<in> {(x, y). x \\<prec>\\<cdot> y}}\n\ngoal (1 subgoal):\n 1. wf {(Cl1, Cl2). fst Cl1 \\<prec>\\<cdot> fst Cl2}", "by force"], ["proof (state)\nthis:\n  wf R\n\ngoal (2 subgoals):\n 1. \\<forall>i. (f (Suc i), f i) \\<in> R \\<union> S\n 2. R O S \\<subseteq> R", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>i. (f (Suc i), f i) \\<in> R \\<union> S\n 2. R O S \\<subseteq> R", "show \"\\<forall>i. (f (Suc i), f i) \\<in> R \\<union> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i. (f (Suc i), f i) \\<in> R \\<union> S", "using f_suc"], ["proof (prove)\nusing this:\n  \\<forall>i. f (Suc i) \\<sqsubset> f i\n\ngoal (1 subgoal):\n 1. \\<forall>i. (f (Suc i), f i) \\<in> R \\<union> S", "unfolding R_def S_def Prec_FL_def"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     fst (f (Suc i)) \\<prec>\\<cdot> fst (f i) \\<or>\n     fst (f (Suc i)) \\<doteq> fst (f i) \\<and>\n     snd (f (Suc i)) \\<sqsubset>L snd (f i)\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (f (Suc i), f i)\n       \\<in> {(Cl1, Cl2). fst Cl1 \\<prec>\\<cdot> fst Cl2} \\<union>\n             {(Cl1, Cl2).\n              fst Cl1 \\<doteq> fst Cl2 \\<and> snd Cl1 \\<sqsubset>L snd Cl2}", "by blast"], ["proof (state)\nthis:\n  \\<forall>i. (f (Suc i), f i) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. R O S \\<subseteq> R", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. R O S \\<subseteq> R", "show \"R O S \\<subseteq> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R O S \\<subseteq> R", "unfolding R_def S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(Cl1, Cl2). fst Cl1 \\<prec>\\<cdot> fst Cl2} O\n    {(Cl1, Cl2).\n     fst Cl1 \\<doteq> fst Cl2 \\<and> snd Cl1 \\<sqsubset>L snd Cl2}\n    \\<subseteq> {(Cl1, Cl2). fst Cl1 \\<prec>\\<cdot> fst Cl2}", "using compat_equiv_prec equiv_equiv_F equivp_reflp"], ["proof (prove)\nusing this:\n  \\<lbrakk>?C1.0 \\<doteq> ?D1.0; ?C2.0 \\<doteq> ?D2.0;\n   ?C1.0 \\<prec>\\<cdot> ?C2.0\\<rbrakk>\n  \\<Longrightarrow> ?D1.0 \\<prec>\\<cdot> ?D2.0\n  equivp (\\<doteq>)\n  equivp ?R \\<Longrightarrow> ?R ?x ?x\n\ngoal (1 subgoal):\n 1. {(Cl1, Cl2). fst Cl1 \\<prec>\\<cdot> fst Cl2} O\n    {(Cl1, Cl2).\n     fst Cl1 \\<doteq> fst Cl2 \\<and> snd Cl1 \\<sqsubset>L snd Cl2}\n    \\<subseteq> {(Cl1, Cl2). fst Cl1 \\<prec>\\<cdot> fst Cl2}", "by fastforce"], ["proof (state)\nthis:\n  R O S \\<subseteq> R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i. (f (Suc (i + k)), f (i + k)) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>i.\n          f i \\<in> UNIV \\<and> f (Suc i) \\<sqsubset> f i \\<Longrightarrow>\n    False", "define g where\n      \"\\<And>i. g i = f (i + k)\""], ["proof (state)\nthis:\n  g ?i = f (?i + k)\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>i.\n          f i \\<in> UNIV \\<and> f (Suc i) \\<sqsubset> f i \\<Longrightarrow>\n    False", "have g_chain: \"\\<forall>i. (g (Suc i), g i) \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i. (g (Suc i), g i) \\<in> S", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i. (f (Suc i + k), f (i + k)) \\<in> S", "using f_chain"], ["proof (prove)\nusing this:\n  \\<forall>i. (f (Suc (i + k)), f (i + k)) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>i. (f (Suc i + k), f (i + k)) \\<in> S", "by simp"], ["proof (state)\nthis:\n  \\<forall>i. (g (Suc i), g i) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>i.\n          f i \\<in> UNIV \\<and> f (Suc i) \\<sqsubset> f i \\<Longrightarrow>\n    False", "have wf_s: \"wf S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf S", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf {(Cl1, Cl2).\n        fst Cl1 \\<doteq> fst Cl2 \\<and> snd Cl1 \\<sqsubset>L snd Cl2}", "by (rule wf_subset[OF wf_app[OF wf_prec_L[unfolded minimal_element_def, THEN conjunct2,\n                unfolded wfp_on_UNIV wfP_def], of snd]])\n        fast"], ["proof (state)\nthis:\n  wf S\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>i.\n          f i \\<in> UNIV \\<and> f (Suc i) \\<sqsubset> f i \\<Longrightarrow>\n    False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using g_chain[unfolded S_def]\n        wf_s[unfolded S_def, folded wfP_def wfp_on_UNIV, unfolded wfp_on_def]"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (g (Suc i), g i)\n     \\<in> {(Cl1, Cl2).\n            fst Cl1 \\<doteq> fst Cl2 \\<and> snd Cl1 \\<sqsubset>L snd Cl2}\n  \\<nexists>f.\n     \\<forall>i.\n        f i \\<in> UNIV \\<and>\n        fst (f (Suc i)) \\<doteq> fst (f i) \\<and>\n        snd (f (Suc i)) \\<sqsubset>L snd (f i)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wfp_on (\\<sqsubset>) UNIV\n\ngoal:\nNo subgoals!", "qed"], ["", "definition active_subset :: \"('f \\<times> 'l) set \\<Rightarrow> ('f \\<times> 'l) set\" where\n  \"active_subset M = {CL \\<in> M. snd CL = active}\""], ["", "definition passive_subset :: \"('f \\<times> 'l) set \\<Rightarrow> ('f \\<times> 'l) set\" where\n  \"passive_subset M = {CL \\<in> M. snd CL \\<noteq> active}\""], ["", "lemma active_subset_insert[simp]:\n  \"active_subset (insert Cl N) = (if snd Cl = active then {Cl} else {}) \\<union> active_subset N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. active_subset (insert Cl N) =\n    (if snd Cl = active then {Cl} else {}) \\<union> active_subset N", "unfolding active_subset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {CL \\<in> insert Cl N. snd CL = active} =\n    (if snd Cl = active then {Cl} else {}) \\<union>\n    {CL \\<in> N. snd CL = active}", "by auto"], ["", "lemma active_subset_union[simp]: \"active_subset (M \\<union> N) = active_subset M \\<union> active_subset N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. active_subset (M \\<union> N) = active_subset M \\<union> active_subset N", "unfolding active_subset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {CL \\<in> M \\<union> N. snd CL = active} =\n    {CL \\<in> M. snd CL = active} \\<union> {CL \\<in> N. snd CL = active}", "by auto"], ["", "lemma passive_subset_insert[simp]:\n  \"passive_subset (insert Cl N) = (if snd Cl \\<noteq> active then {Cl} else {}) \\<union> passive_subset N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. passive_subset (insert Cl N) =\n    (if snd Cl \\<noteq> active then {Cl} else {}) \\<union> passive_subset N", "unfolding passive_subset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {CL \\<in> insert Cl N. snd CL \\<noteq> active} =\n    (if snd Cl \\<noteq> active then {Cl} else {}) \\<union>\n    {CL \\<in> N. snd CL \\<noteq> active}", "by auto"], ["", "lemma passive_subset_union[simp]: \"passive_subset (M \\<union> N) = passive_subset M \\<union> passive_subset N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. passive_subset (M \\<union> N) =\n    passive_subset M \\<union> passive_subset N", "unfolding passive_subset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {CL \\<in> M \\<union> N. snd CL \\<noteq> active} =\n    {CL \\<in> M. snd CL \\<noteq> active} \\<union>\n    {CL \\<in> N. snd CL \\<noteq> active}", "by auto"], ["", "sublocale std?: statically_complete_calculus Bot_FL Inf_FL \"(\\<Turnstile>\\<inter>\\<G>L)\" Red_I Red_F"], ["proof (prove)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot_FL Inf_FL (\\<Turnstile>\\<inter>\\<G>L)\n     Red_I Red_F", "using labeled_static_ref[OF static_ref_comp]"], ["proof (prove)\nusing this:\n  statically_complete_calculus Bot_FL Inf_FL (\\<Turnstile>\\<inter>\\<G>L)\n   Red_I Red_F\n\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot_FL Inf_FL (\\<Turnstile>\\<inter>\\<G>L)\n     Red_I Red_F", "."], ["", "lemma labeled_tiebreaker_lifting:\n  assumes q_in: \"q \\<in> Q\"\n  shows \"tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n    (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q) (\\<lambda>g. Prec_FL)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n     (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n     (\\<lambda>g. (\\<sqsubset>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n     (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n     (\\<lambda>g. (\\<sqsubset>))", "have \"tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n    (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q) (\\<lambda>g Cl Cl'. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n     (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n     (\\<lambda>g Cl Cl'. False)", "using ord_fam_lifted_q[OF q_in]"], ["proof (prove)\nusing this:\n  tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n   (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n   (\\<lambda>g Cl Cl'. False)\n\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n     (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n     (\\<lambda>g Cl Cl'. False)", "."], ["proof (state)\nthis:\n  tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n   (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n   (\\<lambda>g Cl Cl'. False)\n\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n     (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n     (\\<lambda>g. (\\<sqsubset>))", "then"], ["proof (chain)\npicking this:\n  tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n   (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n   (\\<lambda>g Cl Cl'. False)", "have \"standard_lifting Inf_FL Bot_G (Inf_G_q q) (entails_q q) (Red_I_q q)\n    (Red_F_q q) Bot_FL (\\<G>_F_L_q q) (\\<G>_I_L_q q)\""], ["proof (prove)\nusing this:\n  tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n   (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n   (\\<lambda>g Cl Cl'. False)\n\ngoal (1 subgoal):\n 1. standard_lifting Inf_FL Bot_G (Inf_G_q q) (entails_q q) (Red_I_q q)\n     (Red_F_q q) Bot_FL (\\<G>_F_L_q q) (\\<G>_I_L_q q)", "using lifted_q[OF q_in]"], ["proof (prove)\nusing this:\n  tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n   (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n   (\\<lambda>g Cl Cl'. False)\n  standard_lifting Inf_FL Bot_G (Inf_G_q q) (entails_q q) (Red_I_q q)\n   (Red_F_q q) Bot_FL (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n\ngoal (1 subgoal):\n 1. standard_lifting Inf_FL Bot_G (Inf_G_q q) (entails_q q) (Red_I_q q)\n     (Red_F_q q) Bot_FL (\\<G>_F_L_q q) (\\<G>_I_L_q q)", "by blast"], ["proof (state)\nthis:\n  standard_lifting Inf_FL Bot_G (Inf_G_q q) (entails_q q) (Red_I_q q)\n   (Red_F_q q) Bot_FL (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n     (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n     (\\<lambda>g. (\\<sqsubset>))", "then"], ["proof (chain)\npicking this:\n  standard_lifting Inf_FL Bot_G (Inf_G_q q) (entails_q q) (Red_I_q q)\n   (Red_F_q q) Bot_FL (\\<G>_F_L_q q) (\\<G>_I_L_q q)", "show \"tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n    (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q) (\\<lambda>g. Prec_FL)\""], ["proof (prove)\nusing this:\n  standard_lifting Inf_FL Bot_G (Inf_G_q q) (entails_q q) (Red_I_q q)\n   (Red_F_q q) Bot_FL (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n     (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n     (\\<lambda>g. (\\<sqsubset>))", "using wf_prec_FL"], ["proof (prove)\nusing this:\n  standard_lifting Inf_FL Bot_G (Inf_G_q q) (entails_q q) (Red_I_q q)\n   (Red_F_q q) Bot_FL (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n  minimal_element (\\<sqsubset>) UNIV\n\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n     (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n     (\\<lambda>g. (\\<sqsubset>))", "by (simp add: tiebreaker_lifting.intro tiebreaker_lifting_axioms.intro)"], ["proof (state)\nthis:\n  tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q q) (Inf_G_q q)\n   (Red_I_q q) (Red_F_q q) (\\<G>_F_L_q q) (\\<G>_I_L_q q)\n   (\\<lambda>g. (\\<sqsubset>))\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale lifting_intersection Inf_FL Bot_G Q Inf_G_q entails_q Red_I_q Red_F_q\n  Bot_FL \\<G>_F_L_q \\<G>_I_L_q \"\\<lambda>g. Prec_FL\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lifting_intersection Inf_FL Bot_G Q Inf_G_q entails_q Red_I_q Red_F_q\n     Bot_FL \\<G>_F_L_q \\<G>_I_L_q (\\<lambda>g. (\\<sqsubset>))", "using labeled_tiebreaker_lifting"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow>\n  tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q ?q) (Inf_G_q ?q)\n   (Red_I_q ?q) (Red_F_q ?q) (\\<G>_F_L_q ?q) (\\<G>_I_L_q ?q)\n   (\\<lambda>g. (\\<sqsubset>))\n\ngoal (1 subgoal):\n 1. lifting_intersection Inf_FL Bot_G Q Inf_G_q entails_q Red_I_q Red_F_q\n     Bot_FL \\<G>_F_L_q \\<G>_I_L_q (\\<lambda>g. (\\<sqsubset>))", "unfolding lifting_intersection_def"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow>\n  tiebreaker_lifting Bot_FL Inf_FL Bot_G (entails_q ?q) (Inf_G_q ?q)\n   (Red_I_q ?q) (Red_F_q ?q) (\\<G>_F_L_q ?q) (\\<G>_I_L_q ?q)\n   (\\<lambda>g. (\\<sqsubset>))\n\ngoal (1 subgoal):\n 1. inference_system_family Q \\<and>\n    consequence_relation_family Bot_G Q entails_q \\<and>\n    lifting_intersection_axioms Inf_FL Bot_G Q Inf_G_q entails_q Red_I_q\n     Red_F_q Bot_FL \\<G>_F_L_q \\<G>_I_L_q (\\<lambda>g. (\\<sqsubset>))", "by (simp add: lifting_intersection_axioms.intro\n      no_labels.ground.consequence_relation_family_axioms\n      no_labels.ground.inference_system_family_axioms)"], ["", "notation derive (infix \"\\<rhd>L\" 50)"], ["", "lemma std_Red_I_eq: \"std.Red_I = Red_I_\\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. std.Red_I = Red_I_\\<G>", "unfolding Red_I_\\<G>_q_def Red_I_\\<G>_L_q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. intersection_calculus.Red_I Q\n     (\\<lambda>q N.\n         {\\<iota> \\<in> Inf_FL.\n          \\<G>_I_L_q q \\<iota> \\<noteq> None \\<and>\n          the (\\<G>_I_L_q q \\<iota>)\n          \\<subseteq> Red_I_q q (\\<Union> (\\<G>_F_L_q q ` N)) \\<or>\n          \\<G>_I_L_q q \\<iota> = None \\<and>\n          \\<G>_F_L_q q (concl_of \\<iota>)\n          \\<subseteq> \\<Union> (\\<G>_F_L_q q ` N) \\<union>\n                      Red_F_q q (\\<Union> (\\<G>_F_L_q q ` N))}) =\n    intersection_calculus.Red_I Q\n     (\\<lambda>q N.\n         {\\<iota> \\<in> Inf_FL.\n          \\<G>_I_L_q q \\<iota> \\<noteq> None \\<and>\n          the (\\<G>_I_L_q q \\<iota>)\n          \\<subseteq> Red_I_q q (\\<Union> (\\<G>_F_L_q q ` N)) \\<or>\n          \\<G>_I_L_q q \\<iota> = None \\<and>\n          \\<G>_F_L_q q (concl_of \\<iota>)\n          \\<subseteq> \\<Union> (\\<G>_F_L_q q ` N) \\<union>\n                      Red_F_q q (\\<Union> (\\<G>_F_L_q q ` N))})", "by simp"], ["", "lemma std_Red_F_eq: \"std.Red_F = Red_F_\\<G>_empty\""], ["proof (prove)\ngoal (1 subgoal):\n 1. std.Red_F = Red_F_\\<G>_empty", "unfolding Red_F_\\<G>_empty_q_def Red_F_\\<G>_empty_L_q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. intersection_calculus.Red_F Q\n     (\\<lambda>q N.\n         {C. \\<forall>D\\<in>\\<G>_F_L_q q C.\n                D \\<in> Red_F_q q (\\<Union> (\\<G>_F_L_q q ` N)) \\<or>\n                (\\<exists>E\\<in>N. False \\<and> D \\<in> \\<G>_F_L_q q E)}) =\n    intersection_calculus.Red_F Q\n     (\\<lambda>q N.\n         {C. \\<forall>D\\<in>\\<G>_F_L_q q C.\n                D \\<in> Red_F_q q (\\<Union> (\\<G>_F_L_q q ` N))})", "by simp"], ["", "sublocale statically_complete_calculus Bot_FL Inf_FL \"(\\<Turnstile>\\<inter>\\<G>L)\" Red_I Red_F"], ["proof (prove)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot_FL Inf_FL entails_\\<G> Red_I_\\<G>\n     Red_F_\\<G>", "by unfold_locales (use statically_complete std_Red_I_eq in auto)"], ["", "(* lem:redundant-labeled-inferences *)"], ["", "lemma labeled_red_inf_eq_red_inf:\n  assumes i_in: \"\\<iota> \\<in> Inf_FL\"\n  shows \"\\<iota> \\<in> Red_I N \\<longleftrightarrow> to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<iota> \\<in> Red_I_\\<G> N) =\n    (to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<iota> \\<in> Red_I_\\<G> N \\<Longrightarrow>\n    to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N)\n 2. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N) \\<Longrightarrow>\n    \\<iota> \\<in> Red_I_\\<G> N", "assume i_in2: \"\\<iota> \\<in> Red_I N\""], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_I_\\<G> N\n\ngoal (2 subgoals):\n 1. \\<iota> \\<in> Red_I_\\<G> N \\<Longrightarrow>\n    to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N)\n 2. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N) \\<Longrightarrow>\n    \\<iota> \\<in> Red_I_\\<G> N", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Red_I_\\<G> N", "have \"X \\<in> Red_I_\\<G>_q ` Q \\<Longrightarrow> \\<iota> \\<in> X N\" for X"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Red_I_\\<G> N\n\ngoal (1 subgoal):\n 1. X \\<in> Red_I_\\<G>_q ` Q \\<Longrightarrow> \\<iota> \\<in> X N", "unfolding Red_I_def"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> (\\<Inter>q\\<in>Q. Red_I_\\<G>_q q N)\n\ngoal (1 subgoal):\n 1. X \\<in> Red_I_\\<G>_q ` Q \\<Longrightarrow> \\<iota> \\<in> X N", "by blast"], ["proof (state)\nthis:\n  ?X \\<in> Red_I_\\<G>_q ` Q \\<Longrightarrow> \\<iota> \\<in> ?X N\n\ngoal (2 subgoals):\n 1. \\<iota> \\<in> Red_I_\\<G> N \\<Longrightarrow>\n    to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N)\n 2. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N) \\<Longrightarrow>\n    \\<iota> \\<in> Red_I_\\<G> N", "obtain X0 where \"X0 \\<in> Red_I_\\<G>_q ` Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X0.\n        X0 \\<in> Red_I_\\<G>_q ` Q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using Q_nonempty"], ["proof (prove)\nusing this:\n  Q \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>X0.\n        X0 \\<in> Red_I_\\<G>_q ` Q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  X0 \\<in> Red_I_\\<G>_q ` Q\n\ngoal (2 subgoals):\n 1. \\<iota> \\<in> Red_I_\\<G> N \\<Longrightarrow>\n    to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N)\n 2. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N) \\<Longrightarrow>\n    \\<iota> \\<in> Red_I_\\<G> N", "then"], ["proof (chain)\npicking this:\n  X0 \\<in> Red_I_\\<G>_q ` Q", "obtain q0 where x0_is: \"X0 N = Red_I_\\<G>_q q0 N\""], ["proof (prove)\nusing this:\n  X0 \\<in> Red_I_\\<G>_q ` Q\n\ngoal (1 subgoal):\n 1. (\\<And>q0.\n        X0 N = Red_I_\\<G>_q q0 N \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  X0 N = Red_I_\\<G>_q q0 N\n\ngoal (2 subgoals):\n 1. \\<iota> \\<in> Red_I_\\<G> N \\<Longrightarrow>\n    to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N)\n 2. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N) \\<Longrightarrow>\n    \\<iota> \\<in> Red_I_\\<G> N", "then"], ["proof (chain)\npicking this:\n  X0 N = Red_I_\\<G>_q q0 N", "obtain Y0 where y0_is: \"Y0 (fst ` N) = to_F ` (X0 N)\""], ["proof (prove)\nusing this:\n  X0 N = Red_I_\\<G>_q q0 N\n\ngoal (1 subgoal):\n 1. (\\<And>Y0.\n        Y0 (fst ` N) = to_F ` X0 N \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Y0 (fst ` N) = to_F ` X0 N\n\ngoal (2 subgoals):\n 1. \\<iota> \\<in> Red_I_\\<G> N \\<Longrightarrow>\n    to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N)\n 2. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N) \\<Longrightarrow>\n    \\<iota> \\<in> Red_I_\\<G> N", "have \"Y0 (fst ` N) = no_labels.Red_I_\\<G>_q q0 (fst ` N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Y0 (fst ` N) = no_labels.Red_I_\\<G>_q q0 (fst ` N)", "unfolding  y0_is"], ["proof (prove)\ngoal (1 subgoal):\n 1. to_F ` X0 N = no_labels.Red_I_\\<G>_q q0 (fst ` N)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. to_F ` X0 N \\<subseteq> no_labels.Red_I_\\<G>_q q0 (fst ` N)\n 2. no_labels.Red_I_\\<G>_q q0 (fst ` N) \\<subseteq> to_F ` X0 N", "show \"to_F ` X0 N \\<subseteq> no_labels.Red_I_\\<G>_q q0 (fst ` N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_F ` X0 N \\<subseteq> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> to_F ` X0 N \\<Longrightarrow>\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "fix \\<iota>0"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> to_F ` X0 N \\<Longrightarrow>\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "assume i0_in: \"\\<iota>0 \\<in> to_F ` X0 N\""], ["proof (state)\nthis:\n  \\<iota>0 \\<in> to_F ` X0 N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> to_F ` X0 N \\<Longrightarrow>\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "then"], ["proof (chain)\npicking this:\n  \\<iota>0 \\<in> to_F ` X0 N", "have i0_in2: \"\\<iota>0 \\<in> to_F ` Red_I_\\<G>_q q0 N\""], ["proof (prove)\nusing this:\n  \\<iota>0 \\<in> to_F ` X0 N\n\ngoal (1 subgoal):\n 1. \\<iota>0 \\<in> to_F ` Red_I_\\<G>_q q0 N", "using x0_is"], ["proof (prove)\nusing this:\n  \\<iota>0 \\<in> to_F ` X0 N\n  X0 N = Red_I_\\<G>_q q0 N\n\ngoal (1 subgoal):\n 1. \\<iota>0 \\<in> to_F ` Red_I_\\<G>_q q0 N", "by argo"], ["proof (state)\nthis:\n  \\<iota>0 \\<in> to_F ` Red_I_\\<G>_q q0 N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> to_F ` X0 N \\<Longrightarrow>\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "then"], ["proof (chain)\npicking this:\n  \\<iota>0 \\<in> to_F ` Red_I_\\<G>_q q0 N", "obtain \\<iota>0_FL where i0_FL_in: \"\\<iota>0_FL \\<in> Inf_FL\" and i0_to_i0_FL: \"\\<iota>0 = to_F \\<iota>0_FL\" and\n        subs1: \"((\\<G>_I_L_q q0 \\<iota>0_FL) \\<noteq> None \\<and>\n            the (\\<G>_I_L_q q0 \\<iota>0_FL) \\<subseteq> Red_I_q q0 (\\<G>_Fset_q q0 N))\n            \\<or> ((\\<G>_I_L_q q0 \\<iota>0_FL = None) \\<and>\n            \\<G>_F_L_q q0 (concl_of \\<iota>0_FL) \\<subseteq> \\<G>_Fset_q q0 N \\<union> Red_F_q q0 (\\<G>_Fset_q q0 N))\""], ["proof (prove)\nusing this:\n  \\<iota>0 \\<in> to_F ` Red_I_\\<G>_q q0 N\n\ngoal (1 subgoal):\n 1. (\\<And>\\<iota>0_FL.\n        \\<lbrakk>\\<iota>0_FL \\<in> Inf_FL; \\<iota>0 = to_F \\<iota>0_FL;\n         \\<G>_I_L_q q0 \\<iota>0_FL \\<noteq> None \\<and>\n         the (\\<G>_I_L_q q0 \\<iota>0_FL)\n         \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n         \\<G>_I_L_q q0 \\<iota>0_FL = None \\<and>\n         \\<G>_F_L_q q0 (concl_of \\<iota>0_FL)\n         \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n                     Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Red_I_\\<G>_q_def"], ["proof (prove)\nusing this:\n  \\<iota>0\n  \\<in> to_F `\n        {\\<iota> \\<in> Inf_FL.\n         \\<G>_I_L_q q0 \\<iota> \\<noteq> None \\<and>\n         the (\\<G>_I_L_q q0 \\<iota>)\n         \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n         \\<G>_I_L_q q0 \\<iota> = None \\<and>\n         \\<G>_F_L_q q0 (concl_of \\<iota>)\n         \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n                     Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<iota>0_FL.\n        \\<lbrakk>\\<iota>0_FL \\<in> Inf_FL; \\<iota>0 = to_F \\<iota>0_FL;\n         \\<G>_I_L_q q0 \\<iota>0_FL \\<noteq> None \\<and>\n         the (\\<G>_I_L_q q0 \\<iota>0_FL)\n         \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n         \\<G>_I_L_q q0 \\<iota>0_FL = None \\<and>\n         \\<G>_F_L_q q0 (concl_of \\<iota>0_FL)\n         \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n                     Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<iota>0_FL \\<in> Inf_FL\n  \\<iota>0 = to_F \\<iota>0_FL\n  \\<G>_I_L_q q0 \\<iota>0_FL \\<noteq> None \\<and>\n  the (\\<G>_I_L_q q0 \\<iota>0_FL)\n  \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n  \\<G>_I_L_q q0 \\<iota>0_FL = None \\<and>\n  \\<G>_F_L_q q0 (concl_of \\<iota>0_FL)\n  \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n              Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> to_F ` X0 N \\<Longrightarrow>\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "have concl_swap: \"fst (concl_of \\<iota>0_FL) = concl_of \\<iota>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (concl_of \\<iota>0_FL) = concl_of \\<iota>0", "unfolding concl_of_def i0_to_i0_FL to_F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (case \\<iota>0_FL of Infer x1 x2 \\<Rightarrow> x2) =\n    (case Infer (map fst (prems_of \\<iota>0_FL))\n           (fst (case \\<iota>0_FL of Infer x1 x2 \\<Rightarrow> x2)) of\n     Infer x1 x2 \\<Rightarrow> x2)", "by simp"], ["proof (state)\nthis:\n  fst (concl_of \\<iota>0_FL) = concl_of \\<iota>0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> to_F ` X0 N \\<Longrightarrow>\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "have i0_in3: \"\\<iota>0 \\<in> Inf_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota>0 \\<in> Inf_F", "using i0_to_i0_FL Inf_FL_to_Inf_F[OF i0_FL_in]"], ["proof (prove)\nusing this:\n  \\<iota>0 = to_F \\<iota>0_FL\n  Infer (map fst (prems_of \\<iota>0_FL)) (fst (concl_of \\<iota>0_FL))\n  \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. \\<iota>0 \\<in> Inf_F", "unfolding to_F_def"], ["proof (prove)\nusing this:\n  \\<iota>0 =\n  Infer (map fst (prems_of \\<iota>0_FL)) (fst (concl_of \\<iota>0_FL))\n  Infer (map fst (prems_of \\<iota>0_FL)) (fst (concl_of \\<iota>0_FL))\n  \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. \\<iota>0 \\<in> Inf_F", "by blast"], ["proof (state)\nthis:\n  \\<iota>0 \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> to_F ` X0 N \\<Longrightarrow>\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "{"], ["proof (state)\nthis:\n  \\<iota>0 \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> to_F ` X0 N \\<Longrightarrow>\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "assume\n          not_none: \"\\<G>_I_q q0 \\<iota>0 \\<noteq> None\" and\n          \"the (\\<G>_I_q q0 \\<iota>0) \\<noteq> {}\""], ["proof (state)\nthis:\n  \\<G>_I_q q0 \\<iota>0 \\<noteq> None\n  the (\\<G>_I_q q0 \\<iota>0) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> to_F ` X0 N \\<Longrightarrow>\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "then"], ["proof (chain)\npicking this:\n  \\<G>_I_q q0 \\<iota>0 \\<noteq> None\n  the (\\<G>_I_q q0 \\<iota>0) \\<noteq> {}", "obtain \\<iota>1 where i1_in: \"\\<iota>1 \\<in> the (\\<G>_I_q q0 \\<iota>0)\""], ["proof (prove)\nusing this:\n  \\<G>_I_q q0 \\<iota>0 \\<noteq> None\n  the (\\<G>_I_q q0 \\<iota>0) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<iota>1.\n        \\<iota>1 \\<in> the (\\<G>_I_q q0 \\<iota>0) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<iota>1 \\<in> the (\\<G>_I_q q0 \\<iota>0)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> to_F ` X0 N \\<Longrightarrow>\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "have \"the (\\<G>_I_q q0 \\<iota>0) \\<subseteq> Red_I_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the (\\<G>_I_q q0 \\<iota>0)\n    \\<subseteq> Red_I_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))", "using subs1 i0_to_i0_FL not_none"], ["proof (prove)\nusing this:\n  \\<G>_I_L_q q0 \\<iota>0_FL \\<noteq> None \\<and>\n  the (\\<G>_I_L_q q0 \\<iota>0_FL)\n  \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n  \\<G>_I_L_q q0 \\<iota>0_FL = None \\<and>\n  \\<G>_F_L_q q0 (concl_of \\<iota>0_FL)\n  \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n              Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))\n  \\<iota>0 = to_F \\<iota>0_FL\n  \\<G>_I_q q0 \\<iota>0 \\<noteq> None\n\ngoal (1 subgoal):\n 1. the (\\<G>_I_q q0 \\<iota>0)\n    \\<subseteq> Red_I_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))", "by auto"], ["proof (state)\nthis:\n  the (\\<G>_I_q q0 \\<iota>0)\n  \\<subseteq> Red_I_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> to_F ` X0 N \\<Longrightarrow>\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<G>_I_q q0 \\<iota>0 \\<noteq> None;\n   the (\\<G>_I_q q0 \\<iota>0) \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> the (\\<G>_I_q q0 \\<iota>0)\n                    \\<subseteq> Red_I_q q0\n                                 (no_labels.\\<G>_Fset_q q0 (fst ` N))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> to_F ` X0 N \\<Longrightarrow>\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>\\<G>_I_q q0 \\<iota>0 \\<noteq> None;\n   the (\\<G>_I_q q0 \\<iota>0) \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> the (\\<G>_I_q q0 \\<iota>0)\n                    \\<subseteq> Red_I_q q0\n                                 (no_labels.\\<G>_Fset_q q0 (fst ` N))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> to_F ` X0 N \\<Longrightarrow>\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "{"], ["proof (state)\nthis:\n  \\<lbrakk>\\<G>_I_q q0 \\<iota>0 \\<noteq> None;\n   the (\\<G>_I_q q0 \\<iota>0) \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> the (\\<G>_I_q q0 \\<iota>0)\n                    \\<subseteq> Red_I_q q0\n                                 (no_labels.\\<G>_Fset_q q0 (fst ` N))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> to_F ` X0 N \\<Longrightarrow>\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "assume\n          is_none: \"\\<G>_I_q q0 \\<iota>0 = None\""], ["proof (state)\nthis:\n  \\<G>_I_q q0 \\<iota>0 = None\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> to_F ` X0 N \\<Longrightarrow>\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "then"], ["proof (chain)\npicking this:\n  \\<G>_I_q q0 \\<iota>0 = None", "have \"\\<G>_F_q q0 (concl_of \\<iota>0) \\<subseteq> no_labels.\\<G>_Fset_q q0 (fst ` N)\n            \\<union> Red_F_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))\""], ["proof (prove)\nusing this:\n  \\<G>_I_q q0 \\<iota>0 = None\n\ngoal (1 subgoal):\n 1. \\<G>_F_q q0 (concl_of \\<iota>0)\n    \\<subseteq> no_labels.\\<G>_Fset_q q0 (fst ` N) \\<union>\n                Red_F_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))", "using subs1 i0_to_i0_FL concl_swap"], ["proof (prove)\nusing this:\n  \\<G>_I_q q0 \\<iota>0 = None\n  \\<G>_I_L_q q0 \\<iota>0_FL \\<noteq> None \\<and>\n  the (\\<G>_I_L_q q0 \\<iota>0_FL)\n  \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n  \\<G>_I_L_q q0 \\<iota>0_FL = None \\<and>\n  \\<G>_F_L_q q0 (concl_of \\<iota>0_FL)\n  \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n              Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))\n  \\<iota>0 = to_F \\<iota>0_FL\n  fst (concl_of \\<iota>0_FL) = concl_of \\<iota>0\n\ngoal (1 subgoal):\n 1. \\<G>_F_q q0 (concl_of \\<iota>0)\n    \\<subseteq> no_labels.\\<G>_Fset_q q0 (fst ` N) \\<union>\n                Red_F_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))", "by simp"], ["proof (state)\nthis:\n  \\<G>_F_q q0 (concl_of \\<iota>0)\n  \\<subseteq> no_labels.\\<G>_Fset_q q0 (fst ` N) \\<union>\n              Red_F_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> to_F ` X0 N \\<Longrightarrow>\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "}"], ["proof (state)\nthis:\n  \\<G>_I_q q0 \\<iota>0 = None \\<Longrightarrow>\n  \\<G>_F_q q0 (concl_of \\<iota>0)\n  \\<subseteq> no_labels.\\<G>_Fset_q q0 (fst ` N) \\<union>\n              Red_F_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> to_F ` X0 N \\<Longrightarrow>\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<G>_I_q q0 \\<iota>0 \\<noteq> None;\n   the (\\<G>_I_q q0 \\<iota>0) \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> the (\\<G>_I_q q0 \\<iota>0)\n                    \\<subseteq> Red_I_q q0\n                                 (no_labels.\\<G>_Fset_q q0 (fst ` N))\n  \\<G>_I_q q0 \\<iota>0 = None \\<Longrightarrow>\n  \\<G>_F_q q0 (concl_of \\<iota>0)\n  \\<subseteq> no_labels.\\<G>_Fset_q q0 (fst ` N) \\<union>\n              Red_F_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))", "show \"\\<iota>0 \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<G>_I_q q0 \\<iota>0 \\<noteq> None;\n   the (\\<G>_I_q q0 \\<iota>0) \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> the (\\<G>_I_q q0 \\<iota>0)\n                    \\<subseteq> Red_I_q q0\n                                 (no_labels.\\<G>_Fset_q q0 (fst ` N))\n  \\<G>_I_q q0 \\<iota>0 = None \\<Longrightarrow>\n  \\<G>_F_q q0 (concl_of \\<iota>0)\n  \\<subseteq> no_labels.\\<G>_Fset_q q0 (fst ` N) \\<union>\n              Red_F_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))\n\ngoal (1 subgoal):\n 1. \\<iota>0 \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "unfolding no_labels.Red_I_\\<G>_q_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<G>_I_q q0 \\<iota>0 \\<noteq> None;\n   the (\\<G>_I_q q0 \\<iota>0) \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> the (\\<G>_I_q q0 \\<iota>0)\n                    \\<subseteq> Red_I_q q0\n                                 (no_labels.\\<G>_Fset_q q0 (fst ` N))\n  \\<G>_I_q q0 \\<iota>0 = None \\<Longrightarrow>\n  \\<G>_F_q q0 (concl_of \\<iota>0)\n  \\<subseteq> no_labels.\\<G>_Fset_q q0 (fst ` N) \\<union>\n              Red_F_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))\n\ngoal (1 subgoal):\n 1. \\<iota>0\n    \\<in> {\\<iota> \\<in> Inf_F.\n           \\<G>_I_q q0 \\<iota> \\<noteq> None \\<and>\n           the (\\<G>_I_q q0 \\<iota>)\n           \\<subseteq> Red_I_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N)) \\<or>\n           \\<G>_I_q q0 \\<iota> = None \\<and>\n           \\<G>_F_q q0 (concl_of \\<iota>)\n           \\<subseteq> no_labels.\\<G>_Fset_q q0 (fst ` N) \\<union>\n                       Red_F_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))}", "using i0_in3"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<G>_I_q q0 \\<iota>0 \\<noteq> None;\n   the (\\<G>_I_q q0 \\<iota>0) \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> the (\\<G>_I_q q0 \\<iota>0)\n                    \\<subseteq> Red_I_q q0\n                                 (no_labels.\\<G>_Fset_q q0 (fst ` N))\n  \\<G>_I_q q0 \\<iota>0 = None \\<Longrightarrow>\n  \\<G>_F_q q0 (concl_of \\<iota>0)\n  \\<subseteq> no_labels.\\<G>_Fset_q q0 (fst ` N) \\<union>\n              Red_F_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))\n  \\<iota>0 \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. \\<iota>0\n    \\<in> {\\<iota> \\<in> Inf_F.\n           \\<G>_I_q q0 \\<iota> \\<noteq> None \\<and>\n           the (\\<G>_I_q q0 \\<iota>)\n           \\<subseteq> Red_I_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N)) \\<or>\n           \\<G>_I_q q0 \\<iota> = None \\<and>\n           \\<G>_F_q q0 (concl_of \\<iota>)\n           \\<subseteq> no_labels.\\<G>_Fset_q q0 (fst ` N) \\<union>\n                       Red_F_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))}", "by auto"], ["proof (state)\nthis:\n  \\<iota>0 \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  to_F ` X0 N \\<subseteq> no_labels.Red_I_\\<G>_q q0 (fst ` N)\n\ngoal (1 subgoal):\n 1. no_labels.Red_I_\\<G>_q q0 (fst ` N) \\<subseteq> to_F ` X0 N", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no_labels.Red_I_\\<G>_q q0 (fst ` N) \\<subseteq> to_F ` X0 N", "show \"no_labels.Red_I_\\<G>_q q0 (fst ` N) \\<subseteq> to_F ` X0 N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. no_labels.Red_I_\\<G>_q q0 (fst ` N) \\<subseteq> to_F ` X0 N", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N) \\<Longrightarrow>\n       x \\<in> to_F ` X0 N", "fix \\<iota>0"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N) \\<Longrightarrow>\n       x \\<in> to_F ` X0 N", "assume i0_in: \"\\<iota>0 \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)\""], ["proof (state)\nthis:\n  \\<iota>0 \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N) \\<Longrightarrow>\n       x \\<in> to_F ` X0 N", "then"], ["proof (chain)\npicking this:\n  \\<iota>0 \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "have i0_in2: \"\\<iota>0 \\<in> Inf_F\""], ["proof (prove)\nusing this:\n  \\<iota>0 \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)\n\ngoal (1 subgoal):\n 1. \\<iota>0 \\<in> Inf_F", "unfolding no_labels.Red_I_\\<G>_q_def"], ["proof (prove)\nusing this:\n  \\<iota>0\n  \\<in> {\\<iota> \\<in> Inf_F.\n         \\<G>_I_q q0 \\<iota> \\<noteq> None \\<and>\n         the (\\<G>_I_q q0 \\<iota>)\n         \\<subseteq> Red_I_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N)) \\<or>\n         \\<G>_I_q q0 \\<iota> = None \\<and>\n         \\<G>_F_q q0 (concl_of \\<iota>)\n         \\<subseteq> no_labels.\\<G>_Fset_q q0 (fst ` N) \\<union>\n                     Red_F_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))}\n\ngoal (1 subgoal):\n 1. \\<iota>0 \\<in> Inf_F", "by blast"], ["proof (state)\nthis:\n  \\<iota>0 \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N) \\<Longrightarrow>\n       x \\<in> to_F ` X0 N", "obtain \\<iota>0_FL where i0_FL_in: \"\\<iota>0_FL \\<in> Inf_FL\" and i0_to_i0_FL: \"\\<iota>0 = to_F \\<iota>0_FL\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<iota>0_FL.\n        \\<lbrakk>\\<iota>0_FL \\<in> Inf_FL;\n         \\<iota>0 = to_F \\<iota>0_FL\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Inf_F_to_Inf_FL[OF i0_in2]"], ["proof (prove)\nusing this:\n  length ?Ll = length (prems_of \\<iota>0) \\<Longrightarrow>\n  \\<exists>L0.\n     Infer (zip (prems_of \\<iota>0) ?Ll) (concl_of \\<iota>0, L0)\n     \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. (\\<And>\\<iota>0_FL.\n        \\<lbrakk>\\<iota>0_FL \\<in> Inf_FL;\n         \\<iota>0 = to_F \\<iota>0_FL\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding to_F_def"], ["proof (prove)\nusing this:\n  length ?Ll = length (prems_of \\<iota>0) \\<Longrightarrow>\n  \\<exists>L0.\n     Infer (zip (prems_of \\<iota>0) ?Ll) (concl_of \\<iota>0, L0)\n     \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. (\\<And>\\<iota>0_FL.\n        \\<lbrakk>\\<iota>0_FL \\<in> Inf_FL;\n         \\<iota>0 =\n         Infer (map fst (prems_of \\<iota>0_FL))\n          (fst (concl_of \\<iota>0_FL))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Ex_list_of_length fst_conv inference.exhaust_sel inference.inject map_fst_zip)"], ["proof (state)\nthis:\n  \\<iota>0_FL \\<in> Inf_FL\n  \\<iota>0 = to_F \\<iota>0_FL\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N) \\<Longrightarrow>\n       x \\<in> to_F ` X0 N", "have concl_swap: \"fst (concl_of \\<iota>0_FL) = concl_of \\<iota>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (concl_of \\<iota>0_FL) = concl_of \\<iota>0", "unfolding concl_of_def i0_to_i0_FL to_F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (case \\<iota>0_FL of Infer x1 x2 \\<Rightarrow> x2) =\n    (case Infer (map fst (prems_of \\<iota>0_FL))\n           (fst (case \\<iota>0_FL of Infer x1 x2 \\<Rightarrow> x2)) of\n     Infer x1 x2 \\<Rightarrow> x2)", "by simp"], ["proof (state)\nthis:\n  fst (concl_of \\<iota>0_FL) = concl_of \\<iota>0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N) \\<Longrightarrow>\n       x \\<in> to_F ` X0 N", "have subs1: \"((\\<G>_I_L_q q0 \\<iota>0_FL) \\<noteq> None \\<and>\n           the (\\<G>_I_L_q q0 \\<iota>0_FL) \\<subseteq> Red_I_q q0 (\\<G>_Fset_q q0 N))\n           \\<or> ((\\<G>_I_L_q q0 \\<iota>0_FL = None) \\<and>\n           \\<G>_F_L_q q0 (concl_of \\<iota>0_FL) \\<subseteq> (\\<G>_Fset_q q0 N \\<union> Red_F_q q0 (\\<G>_Fset_q q0 N)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G>_I_L_q q0 \\<iota>0_FL \\<noteq> None \\<and>\n    the (\\<G>_I_L_q q0 \\<iota>0_FL)\n    \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n    \\<G>_I_L_q q0 \\<iota>0_FL = None \\<and>\n    \\<G>_F_L_q q0 (concl_of \\<iota>0_FL)\n    \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n                Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))", "using i0_in i0_to_i0_FL concl_swap"], ["proof (prove)\nusing this:\n  \\<iota>0 \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)\n  \\<iota>0 = to_F \\<iota>0_FL\n  fst (concl_of \\<iota>0_FL) = concl_of \\<iota>0\n\ngoal (1 subgoal):\n 1. \\<G>_I_L_q q0 \\<iota>0_FL \\<noteq> None \\<and>\n    the (\\<G>_I_L_q q0 \\<iota>0_FL)\n    \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n    \\<G>_I_L_q q0 \\<iota>0_FL = None \\<and>\n    \\<G>_F_L_q q0 (concl_of \\<iota>0_FL)\n    \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n                Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))", "unfolding no_labels.Red_I_\\<G>_q_def"], ["proof (prove)\nusing this:\n  \\<iota>0\n  \\<in> {\\<iota> \\<in> Inf_F.\n         \\<G>_I_q q0 \\<iota> \\<noteq> None \\<and>\n         the (\\<G>_I_q q0 \\<iota>)\n         \\<subseteq> Red_I_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N)) \\<or>\n         \\<G>_I_q q0 \\<iota> = None \\<and>\n         \\<G>_F_q q0 (concl_of \\<iota>)\n         \\<subseteq> no_labels.\\<G>_Fset_q q0 (fst ` N) \\<union>\n                     Red_F_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))}\n  \\<iota>0 = to_F \\<iota>0_FL\n  fst (concl_of \\<iota>0_FL) = concl_of \\<iota>0\n\ngoal (1 subgoal):\n 1. \\<G>_I_L_q q0 \\<iota>0_FL \\<noteq> None \\<and>\n    the (\\<G>_I_L_q q0 \\<iota>0_FL)\n    \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n    \\<G>_I_L_q q0 \\<iota>0_FL = None \\<and>\n    \\<G>_F_L_q q0 (concl_of \\<iota>0_FL)\n    \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n                Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))", "by simp"], ["proof (state)\nthis:\n  \\<G>_I_L_q q0 \\<iota>0_FL \\<noteq> None \\<and>\n  the (\\<G>_I_L_q q0 \\<iota>0_FL)\n  \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n  \\<G>_I_L_q q0 \\<iota>0_FL = None \\<and>\n  \\<G>_F_L_q q0 (concl_of \\<iota>0_FL)\n  \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n              Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N) \\<Longrightarrow>\n       x \\<in> to_F ` X0 N", "then"], ["proof (chain)\npicking this:\n  \\<G>_I_L_q q0 \\<iota>0_FL \\<noteq> None \\<and>\n  the (\\<G>_I_L_q q0 \\<iota>0_FL)\n  \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n  \\<G>_I_L_q q0 \\<iota>0_FL = None \\<and>\n  \\<G>_F_L_q q0 (concl_of \\<iota>0_FL)\n  \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n              Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))", "have \"\\<iota>0_FL \\<in> Red_I_\\<G>_q q0 N\""], ["proof (prove)\nusing this:\n  \\<G>_I_L_q q0 \\<iota>0_FL \\<noteq> None \\<and>\n  the (\\<G>_I_L_q q0 \\<iota>0_FL)\n  \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n  \\<G>_I_L_q q0 \\<iota>0_FL = None \\<and>\n  \\<G>_F_L_q q0 (concl_of \\<iota>0_FL)\n  \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n              Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))\n\ngoal (1 subgoal):\n 1. \\<iota>0_FL \\<in> Red_I_\\<G>_q q0 N", "using i0_FL_in"], ["proof (prove)\nusing this:\n  \\<G>_I_L_q q0 \\<iota>0_FL \\<noteq> None \\<and>\n  the (\\<G>_I_L_q q0 \\<iota>0_FL)\n  \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n  \\<G>_I_L_q q0 \\<iota>0_FL = None \\<and>\n  \\<G>_F_L_q q0 (concl_of \\<iota>0_FL)\n  \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n              Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))\n  \\<iota>0_FL \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota>0_FL \\<in> Red_I_\\<G>_q q0 N", "unfolding Red_I_\\<G>_q_def"], ["proof (prove)\nusing this:\n  \\<G>_I_L_q q0 \\<iota>0_FL \\<noteq> None \\<and>\n  the (\\<G>_I_L_q q0 \\<iota>0_FL)\n  \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n  \\<G>_I_L_q q0 \\<iota>0_FL = None \\<and>\n  \\<G>_F_L_q q0 (concl_of \\<iota>0_FL)\n  \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n              Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))\n  \\<iota>0_FL \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota>0_FL\n    \\<in> {\\<iota> \\<in> Inf_FL.\n           \\<G>_I_L_q q0 \\<iota> \\<noteq> None \\<and>\n           the (\\<G>_I_L_q q0 \\<iota>)\n           \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n           \\<G>_I_L_q q0 \\<iota> = None \\<and>\n           \\<G>_F_L_q q0 (concl_of \\<iota>)\n           \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n                       Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))}", "by simp"], ["proof (state)\nthis:\n  \\<iota>0_FL \\<in> Red_I_\\<G>_q q0 N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N) \\<Longrightarrow>\n       x \\<in> to_F ` X0 N", "then"], ["proof (chain)\npicking this:\n  \\<iota>0_FL \\<in> Red_I_\\<G>_q q0 N", "show \"\\<iota>0 \\<in> to_F ` X0 N\""], ["proof (prove)\nusing this:\n  \\<iota>0_FL \\<in> Red_I_\\<G>_q q0 N\n\ngoal (1 subgoal):\n 1. \\<iota>0 \\<in> to_F ` X0 N", "using x0_is i0_to_i0_FL i0_in2"], ["proof (prove)\nusing this:\n  \\<iota>0_FL \\<in> Red_I_\\<G>_q q0 N\n  X0 N = Red_I_\\<G>_q q0 N\n  \\<iota>0 = to_F \\<iota>0_FL\n  \\<iota>0 \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. \\<iota>0 \\<in> to_F ` X0 N", "by blast"], ["proof (state)\nthis:\n  \\<iota>0 \\<in> to_F ` X0 N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  no_labels.Red_I_\\<G>_q q0 (fst ` N) \\<subseteq> to_F ` X0 N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Y0 (fst ` N) = no_labels.Red_I_\\<G>_q q0 (fst ` N)\n\ngoal (2 subgoals):\n 1. \\<iota> \\<in> Red_I_\\<G> N \\<Longrightarrow>\n    to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N)\n 2. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N) \\<Longrightarrow>\n    \\<iota> \\<in> Red_I_\\<G> N", "then"], ["proof (chain)\npicking this:\n  Y0 (fst ` N) = no_labels.Red_I_\\<G>_q q0 (fst ` N)", "have \"Y \\<in> no_labels.Red_I_\\<G>_q ` Q \\<Longrightarrow> to_F \\<iota> \\<in> Y (fst ` N)\" for Y"], ["proof (prove)\nusing this:\n  Y0 (fst ` N) = no_labels.Red_I_\\<G>_q q0 (fst ` N)\n\ngoal (1 subgoal):\n 1. Y \\<in> no_labels.Red_I_\\<G>_q ` Q \\<Longrightarrow>\n    to_F \\<iota> \\<in> Y (fst ` N)", "using i_in2 no_labels.Red_I_def std_Red_I_eq red_inf_impl"], ["proof (prove)\nusing this:\n  Y0 (fst ` N) = no_labels.Red_I_\\<G>_q q0 (fst ` N)\n  \\<iota> \\<in> Red_I_\\<G> N\n  no_labels.Red_I_\\<G> ?N = (\\<Inter>q\\<in>Q. no_labels.Red_I_\\<G>_q q ?N)\n  std.Red_I = Red_I_\\<G>\n  ?\\<iota> \\<in> std.Red_I ?NL \\<Longrightarrow>\n  to_F ?\\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` ?NL)\n\ngoal (1 subgoal):\n 1. Y \\<in> no_labels.Red_I_\\<G>_q ` Q \\<Longrightarrow>\n    to_F \\<iota> \\<in> Y (fst ` N)", "by force"], ["proof (state)\nthis:\n  ?Y \\<in> no_labels.Red_I_\\<G>_q ` Q \\<Longrightarrow>\n  to_F \\<iota> \\<in> ?Y (fst ` N)\n\ngoal (2 subgoals):\n 1. \\<iota> \\<in> Red_I_\\<G> N \\<Longrightarrow>\n    to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N)\n 2. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N) \\<Longrightarrow>\n    \\<iota> \\<in> Red_I_\\<G> N", "then"], ["proof (chain)\npicking this:\n  ?Y \\<in> no_labels.Red_I_\\<G>_q ` Q \\<Longrightarrow>\n  to_F \\<iota> \\<in> ?Y (fst ` N)", "show \"to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N)\""], ["proof (prove)\nusing this:\n  ?Y \\<in> no_labels.Red_I_\\<G>_q ` Q \\<Longrightarrow>\n  to_F \\<iota> \\<in> ?Y (fst ` N)\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N)", "unfolding Red_I_def no_labels.Red_I_\\<G>_def"], ["proof (prove)\nusing this:\n  ?Y \\<in> no_labels.Red_I_\\<G>_q ` Q \\<Longrightarrow>\n  to_F \\<iota> \\<in> ?Y (fst ` N)\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> (\\<Inter>q\\<in>Q. no_labels.Red_I_\\<G>_q q (fst ` N))", "by blast"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N)\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N) \\<Longrightarrow>\n    \\<iota> \\<in> Red_I_\\<G> N", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N) \\<Longrightarrow>\n    \\<iota> \\<in> Red_I_\\<G> N", "assume to_F_in: \"to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N)\""], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N)\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N) \\<Longrightarrow>\n    \\<iota> \\<in> Red_I_\\<G> N", "have imp_to_F: \"X \\<in> no_labels.Red_I_\\<G>_q ` Q \\<Longrightarrow> to_F \\<iota> \\<in> X (fst ` N)\" for X"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> no_labels.Red_I_\\<G>_q ` Q \\<Longrightarrow>\n    to_F \\<iota> \\<in> X (fst ` N)", "using to_F_in"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N)\n\ngoal (1 subgoal):\n 1. X \\<in> no_labels.Red_I_\\<G>_q ` Q \\<Longrightarrow>\n    to_F \\<iota> \\<in> X (fst ` N)", "unfolding no_labels.Red_I_\\<G>_def"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> (\\<Inter>q\\<in>Q. no_labels.Red_I_\\<G>_q q (fst ` N))\n\ngoal (1 subgoal):\n 1. X \\<in> no_labels.Red_I_\\<G>_q ` Q \\<Longrightarrow>\n    to_F \\<iota> \\<in> X (fst ` N)", "by blast"], ["proof (state)\nthis:\n  ?X \\<in> no_labels.Red_I_\\<G>_q ` Q \\<Longrightarrow>\n  to_F \\<iota> \\<in> ?X (fst ` N)\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N) \\<Longrightarrow>\n    \\<iota> \\<in> Red_I_\\<G> N", "then"], ["proof (chain)\npicking this:\n  ?X \\<in> no_labels.Red_I_\\<G>_q ` Q \\<Longrightarrow>\n  to_F \\<iota> \\<in> ?X (fst ` N)", "have to_F_in2: \"to_F \\<iota> \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)\" if \"q \\<in> Q\" for q"], ["proof (prove)\nusing this:\n  ?X \\<in> no_labels.Red_I_\\<G>_q ` Q \\<Longrightarrow>\n  to_F \\<iota> \\<in> ?X (fst ` N)\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)", "using that"], ["proof (prove)\nusing this:\n  ?X \\<in> no_labels.Red_I_\\<G>_q ` Q \\<Longrightarrow>\n  to_F \\<iota> \\<in> ?X (fst ` N)\n  q \\<in> Q\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)", "by auto"], ["proof (state)\nthis:\n  ?q \\<in> Q \\<Longrightarrow>\n  to_F \\<iota> \\<in> no_labels.Red_I_\\<G>_q ?q (fst ` N)\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N) \\<Longrightarrow>\n    \\<iota> \\<in> Red_I_\\<G> N", "have \"Red_I_\\<G>_q q N = {\\<iota>0_FL \\<in> Inf_FL. to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}\" for q"], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_I_\\<G>_q q N =\n    {\\<iota>0_FL \\<in> Inf_FL.\n     to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Red_I_\\<G>_q q N\n    \\<subseteq> {\\<iota>0_FL \\<in> Inf_FL.\n                 to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}\n 2. {\\<iota>0_FL \\<in> Inf_FL.\n     to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}\n    \\<subseteq> Red_I_\\<G>_q q N", "show \"Red_I_\\<G>_q q N \\<subseteq> {\\<iota>0_FL \\<in> Inf_FL. to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_I_\\<G>_q q N\n    \\<subseteq> {\\<iota>0_FL \\<in> Inf_FL.\n                 to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Red_I_\\<G>_q q N \\<Longrightarrow>\n       x \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n                to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}", "fix q0 \\<iota>1"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Red_I_\\<G>_q q N \\<Longrightarrow>\n       x \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n                to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}", "assume\n        i1_in: \"\\<iota>1 \\<in> Red_I_\\<G>_q q0 N\""], ["proof (state)\nthis:\n  \\<iota>1 \\<in> Red_I_\\<G>_q q0 N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Red_I_\\<G>_q q N \\<Longrightarrow>\n       x \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n                to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}", "have i1_in2: \"\\<iota>1 \\<in> Inf_FL\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota>1 \\<in> Inf_FL", "using i1_in"], ["proof (prove)\nusing this:\n  \\<iota>1 \\<in> Red_I_\\<G>_q q0 N\n\ngoal (1 subgoal):\n 1. \\<iota>1 \\<in> Inf_FL", "unfolding Red_I_\\<G>_q_def"], ["proof (prove)\nusing this:\n  \\<iota>1\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         \\<G>_I_L_q q0 \\<iota> \\<noteq> None \\<and>\n         the (\\<G>_I_L_q q0 \\<iota>)\n         \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n         \\<G>_I_L_q q0 \\<iota> = None \\<and>\n         \\<G>_F_L_q q0 (concl_of \\<iota>)\n         \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n                     Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))}\n\ngoal (1 subgoal):\n 1. \\<iota>1 \\<in> Inf_FL", "by blast"], ["proof (state)\nthis:\n  \\<iota>1 \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Red_I_\\<G>_q q N \\<Longrightarrow>\n       x \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n                to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}", "then"], ["proof (chain)\npicking this:\n  \\<iota>1 \\<in> Inf_FL", "have to_F_i1_in: \"to_F \\<iota>1 \\<in> Inf_F\""], ["proof (prove)\nusing this:\n  \\<iota>1 \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. to_F \\<iota>1 \\<in> Inf_F", "using Inf_FL_to_Inf_F"], ["proof (prove)\nusing this:\n  \\<iota>1 \\<in> Inf_FL\n  ?\\<iota>\\<^sub>F\\<^sub>L \\<in> Inf_FL \\<Longrightarrow>\n  Infer (map fst (prems_of ?\\<iota>\\<^sub>F\\<^sub>L))\n   (fst (concl_of ?\\<iota>\\<^sub>F\\<^sub>L))\n  \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. to_F \\<iota>1 \\<in> Inf_F", "unfolding to_F_def"], ["proof (prove)\nusing this:\n  \\<iota>1 \\<in> Inf_FL\n  ?\\<iota>\\<^sub>F\\<^sub>L \\<in> Inf_FL \\<Longrightarrow>\n  Infer (map fst (prems_of ?\\<iota>\\<^sub>F\\<^sub>L))\n   (fst (concl_of ?\\<iota>\\<^sub>F\\<^sub>L))\n  \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. Infer (map fst (prems_of \\<iota>1)) (fst (concl_of \\<iota>1))\n    \\<in> Inf_F", "by simp"], ["proof (state)\nthis:\n  to_F \\<iota>1 \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Red_I_\\<G>_q q N \\<Longrightarrow>\n       x \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n                to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}", "have concl_swap: \"fst (concl_of \\<iota>1) = concl_of (to_F \\<iota>1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (concl_of \\<iota>1) = concl_of (to_F \\<iota>1)", "unfolding concl_of_def to_F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (case \\<iota>1 of Infer x1 x2 \\<Rightarrow> x2) =\n    (case Infer (map fst (prems_of \\<iota>1))\n           (fst (case \\<iota>1 of Infer x1 x2 \\<Rightarrow> x2)) of\n     Infer x1 x2 \\<Rightarrow> x2)", "by simp"], ["proof (state)\nthis:\n  fst (concl_of \\<iota>1) = concl_of (to_F \\<iota>1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Red_I_\\<G>_q q N \\<Longrightarrow>\n       x \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n                to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}", "then"], ["proof (chain)\npicking this:\n  fst (concl_of \\<iota>1) = concl_of (to_F \\<iota>1)", "have i1_to_F_in: \"to_F \\<iota>1 \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)\""], ["proof (prove)\nusing this:\n  fst (concl_of \\<iota>1) = concl_of (to_F \\<iota>1)\n\ngoal (1 subgoal):\n 1. to_F \\<iota>1 \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "using i1_in to_F_i1_in"], ["proof (prove)\nusing this:\n  fst (concl_of \\<iota>1) = concl_of (to_F \\<iota>1)\n  \\<iota>1 \\<in> Red_I_\\<G>_q q0 N\n  to_F \\<iota>1 \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. to_F \\<iota>1 \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)", "unfolding Red_I_\\<G>_q_def no_labels.Red_I_\\<G>_q_def"], ["proof (prove)\nusing this:\n  fst (concl_of \\<iota>1) = concl_of (to_F \\<iota>1)\n  \\<iota>1\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         \\<G>_I_L_q q0 \\<iota> \\<noteq> None \\<and>\n         the (\\<G>_I_L_q q0 \\<iota>)\n         \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n         \\<G>_I_L_q q0 \\<iota> = None \\<and>\n         \\<G>_F_L_q q0 (concl_of \\<iota>)\n         \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n                     Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))}\n  to_F \\<iota>1 \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. to_F \\<iota>1\n    \\<in> {\\<iota> \\<in> Inf_F.\n           \\<G>_I_q q0 \\<iota> \\<noteq> None \\<and>\n           the (\\<G>_I_q q0 \\<iota>)\n           \\<subseteq> Red_I_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N)) \\<or>\n           \\<G>_I_q q0 \\<iota> = None \\<and>\n           \\<G>_F_q q0 (concl_of \\<iota>)\n           \\<subseteq> no_labels.\\<G>_Fset_q q0 (fst ` N) \\<union>\n                       Red_F_q q0 (no_labels.\\<G>_Fset_q q0 (fst ` N))}", "by force"], ["proof (state)\nthis:\n  to_F \\<iota>1 \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Red_I_\\<G>_q q N \\<Longrightarrow>\n       x \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n                to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}", "show \"\\<iota>1 \\<in> {\\<iota>0_FL \\<in> Inf_FL. to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota>1\n    \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n           to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)}", "using i1_in2 i1_to_F_in"], ["proof (prove)\nusing this:\n  \\<iota>1 \\<in> Inf_FL\n  to_F \\<iota>1 \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)\n\ngoal (1 subgoal):\n 1. \\<iota>1\n    \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n           to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)}", "by blast"], ["proof (state)\nthis:\n  \\<iota>1\n  \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n         to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Red_I_\\<G>_q q N\n  \\<subseteq> {\\<iota>0_FL \\<in> Inf_FL.\n               to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}\n\ngoal (1 subgoal):\n 1. {\\<iota>0_FL \\<in> Inf_FL.\n     to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}\n    \\<subseteq> Red_I_\\<G>_q q N", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {\\<iota>0_FL \\<in> Inf_FL.\n     to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}\n    \\<subseteq> Red_I_\\<G>_q q N", "show \"{\\<iota>0_FL \\<in> Inf_FL. to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)} \\<subseteq> Red_I_\\<G>_q q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<iota>0_FL \\<in> Inf_FL.\n     to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}\n    \\<subseteq> Red_I_\\<G>_q q N", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n                to_F \\<iota>0_FL\n                \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)} \\<Longrightarrow>\n       x \\<in> Red_I_\\<G>_q q N", "fix q0 \\<iota>1"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n                to_F \\<iota>0_FL\n                \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)} \\<Longrightarrow>\n       x \\<in> Red_I_\\<G>_q q N", "assume\n        i1_in: \"\\<iota>1 \\<in> {\\<iota>0_FL \\<in> Inf_FL. to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)}\""], ["proof (state)\nthis:\n  \\<iota>1\n  \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n         to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n                to_F \\<iota>0_FL\n                \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)} \\<Longrightarrow>\n       x \\<in> Red_I_\\<G>_q q N", "then"], ["proof (chain)\npicking this:\n  \\<iota>1\n  \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n         to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)}", "have i1_in2: \"\\<iota>1 \\<in> Inf_FL\""], ["proof (prove)\nusing this:\n  \\<iota>1\n  \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n         to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)}\n\ngoal (1 subgoal):\n 1. \\<iota>1 \\<in> Inf_FL", "by blast"], ["proof (state)\nthis:\n  \\<iota>1 \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n                to_F \\<iota>0_FL\n                \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)} \\<Longrightarrow>\n       x \\<in> Red_I_\\<G>_q q N", "then"], ["proof (chain)\npicking this:\n  \\<iota>1 \\<in> Inf_FL", "have to_F_i1_in: \"to_F \\<iota>1 \\<in> Inf_F\""], ["proof (prove)\nusing this:\n  \\<iota>1 \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. to_F \\<iota>1 \\<in> Inf_F", "using Inf_FL_to_Inf_F"], ["proof (prove)\nusing this:\n  \\<iota>1 \\<in> Inf_FL\n  ?\\<iota>\\<^sub>F\\<^sub>L \\<in> Inf_FL \\<Longrightarrow>\n  Infer (map fst (prems_of ?\\<iota>\\<^sub>F\\<^sub>L))\n   (fst (concl_of ?\\<iota>\\<^sub>F\\<^sub>L))\n  \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. to_F \\<iota>1 \\<in> Inf_F", "unfolding to_F_def"], ["proof (prove)\nusing this:\n  \\<iota>1 \\<in> Inf_FL\n  ?\\<iota>\\<^sub>F\\<^sub>L \\<in> Inf_FL \\<Longrightarrow>\n  Infer (map fst (prems_of ?\\<iota>\\<^sub>F\\<^sub>L))\n   (fst (concl_of ?\\<iota>\\<^sub>F\\<^sub>L))\n  \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. Infer (map fst (prems_of \\<iota>1)) (fst (concl_of \\<iota>1))\n    \\<in> Inf_F", "by simp"], ["proof (state)\nthis:\n  to_F \\<iota>1 \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n                to_F \\<iota>0_FL\n                \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)} \\<Longrightarrow>\n       x \\<in> Red_I_\\<G>_q q N", "have concl_swap: \"fst (concl_of \\<iota>1) = concl_of (to_F \\<iota>1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (concl_of \\<iota>1) = concl_of (to_F \\<iota>1)", "unfolding concl_of_def to_F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (case \\<iota>1 of Infer x1 x2 \\<Rightarrow> x2) =\n    (case Infer (map fst (prems_of \\<iota>1))\n           (fst (case \\<iota>1 of Infer x1 x2 \\<Rightarrow> x2)) of\n     Infer x1 x2 \\<Rightarrow> x2)", "by simp"], ["proof (state)\nthis:\n  fst (concl_of \\<iota>1) = concl_of (to_F \\<iota>1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n                to_F \\<iota>0_FL\n                \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)} \\<Longrightarrow>\n       x \\<in> Red_I_\\<G>_q q N", "then"], ["proof (chain)\npicking this:\n  fst (concl_of \\<iota>1) = concl_of (to_F \\<iota>1)", "have \"((\\<G>_I_L_q q0 \\<iota>1) \\<noteq> None \\<and> the (\\<G>_I_L_q q0 \\<iota>1) \\<subseteq> Red_I_q q0 (\\<G>_Fset_q q0 N))\n        \\<or> (\\<G>_I_L_q q0 \\<iota>1 = None \\<and>\n          \\<G>_F_L_q q0 (concl_of \\<iota>1) \\<subseteq> \\<G>_Fset_q q0 N \\<union> Red_F_q q0 (\\<G>_Fset_q q0 N))\""], ["proof (prove)\nusing this:\n  fst (concl_of \\<iota>1) = concl_of (to_F \\<iota>1)\n\ngoal (1 subgoal):\n 1. \\<G>_I_L_q q0 \\<iota>1 \\<noteq> None \\<and>\n    the (\\<G>_I_L_q q0 \\<iota>1)\n    \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n    \\<G>_I_L_q q0 \\<iota>1 = None \\<and>\n    \\<G>_F_L_q q0 (concl_of \\<iota>1)\n    \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n                Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))", "using i1_in"], ["proof (prove)\nusing this:\n  fst (concl_of \\<iota>1) = concl_of (to_F \\<iota>1)\n  \\<iota>1\n  \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n         to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q0 (fst ` N)}\n\ngoal (1 subgoal):\n 1. \\<G>_I_L_q q0 \\<iota>1 \\<noteq> None \\<and>\n    the (\\<G>_I_L_q q0 \\<iota>1)\n    \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n    \\<G>_I_L_q q0 \\<iota>1 = None \\<and>\n    \\<G>_F_L_q q0 (concl_of \\<iota>1)\n    \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n                Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))", "unfolding no_labels.Red_I_\\<G>_q_def"], ["proof (prove)\nusing this:\n  fst (concl_of \\<iota>1) = concl_of (to_F \\<iota>1)\n  \\<iota>1\n  \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n         to_F \\<iota>0_FL\n         \\<in> {\\<iota> \\<in> Inf_F.\n                \\<G>_I_q q0 \\<iota> \\<noteq> None \\<and>\n                the (\\<G>_I_q q0 \\<iota>)\n                \\<subseteq> Red_I_q q0\n                             (no_labels.\\<G>_Fset_q q0 (fst ` N)) \\<or>\n                \\<G>_I_q q0 \\<iota> = None \\<and>\n                \\<G>_F_q q0 (concl_of \\<iota>)\n                \\<subseteq> no_labels.\\<G>_Fset_q q0 (fst ` N) \\<union>\n                            Red_F_q q0\n                             (no_labels.\\<G>_Fset_q q0 (fst ` N))}}\n\ngoal (1 subgoal):\n 1. \\<G>_I_L_q q0 \\<iota>1 \\<noteq> None \\<and>\n    the (\\<G>_I_L_q q0 \\<iota>1)\n    \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n    \\<G>_I_L_q q0 \\<iota>1 = None \\<and>\n    \\<G>_F_L_q q0 (concl_of \\<iota>1)\n    \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n                Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))", "by auto"], ["proof (state)\nthis:\n  \\<G>_I_L_q q0 \\<iota>1 \\<noteq> None \\<and>\n  the (\\<G>_I_L_q q0 \\<iota>1)\n  \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n  \\<G>_I_L_q q0 \\<iota>1 = None \\<and>\n  \\<G>_F_L_q q0 (concl_of \\<iota>1)\n  \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n              Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {\\<iota>0_FL \\<in> Inf_FL.\n                to_F \\<iota>0_FL\n                \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)} \\<Longrightarrow>\n       x \\<in> Red_I_\\<G>_q q N", "then"], ["proof (chain)\npicking this:\n  \\<G>_I_L_q q0 \\<iota>1 \\<noteq> None \\<and>\n  the (\\<G>_I_L_q q0 \\<iota>1)\n  \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n  \\<G>_I_L_q q0 \\<iota>1 = None \\<and>\n  \\<G>_F_L_q q0 (concl_of \\<iota>1)\n  \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n              Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))", "show \"\\<iota>1 \\<in> Red_I_\\<G>_q q0 N\""], ["proof (prove)\nusing this:\n  \\<G>_I_L_q q0 \\<iota>1 \\<noteq> None \\<and>\n  the (\\<G>_I_L_q q0 \\<iota>1)\n  \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n  \\<G>_I_L_q q0 \\<iota>1 = None \\<and>\n  \\<G>_F_L_q q0 (concl_of \\<iota>1)\n  \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n              Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))\n\ngoal (1 subgoal):\n 1. \\<iota>1 \\<in> Red_I_\\<G>_q q0 N", "using i1_in2"], ["proof (prove)\nusing this:\n  \\<G>_I_L_q q0 \\<iota>1 \\<noteq> None \\<and>\n  the (\\<G>_I_L_q q0 \\<iota>1)\n  \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n  \\<G>_I_L_q q0 \\<iota>1 = None \\<and>\n  \\<G>_F_L_q q0 (concl_of \\<iota>1)\n  \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n              Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))\n  \\<iota>1 \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota>1 \\<in> Red_I_\\<G>_q q0 N", "unfolding Red_I_\\<G>_q_def"], ["proof (prove)\nusing this:\n  \\<G>_I_L_q q0 \\<iota>1 \\<noteq> None \\<and>\n  the (\\<G>_I_L_q q0 \\<iota>1)\n  \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n  \\<G>_I_L_q q0 \\<iota>1 = None \\<and>\n  \\<G>_F_L_q q0 (concl_of \\<iota>1)\n  \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n              Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))\n  \\<iota>1 \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota>1\n    \\<in> {\\<iota> \\<in> Inf_FL.\n           \\<G>_I_L_q q0 \\<iota> \\<noteq> None \\<and>\n           the (\\<G>_I_L_q q0 \\<iota>)\n           \\<subseteq> Red_I_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N)) \\<or>\n           \\<G>_I_L_q q0 \\<iota> = None \\<and>\n           \\<G>_F_L_q q0 (concl_of \\<iota>)\n           \\<subseteq> \\<Union> (\\<G>_F_L_q q0 ` N) \\<union>\n                       Red_F_q q0 (\\<Union> (\\<G>_F_L_q q0 ` N))}", "by blast"], ["proof (state)\nthis:\n  \\<iota>1 \\<in> Red_I_\\<G>_q q0 N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {\\<iota>0_FL \\<in> Inf_FL.\n   to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q q (fst ` N)}\n  \\<subseteq> Red_I_\\<G>_q q N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Red_I_\\<G>_q ?q N =\n  {\\<iota>0_FL \\<in> Inf_FL.\n   to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q ?q (fst ` N)}\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N) \\<Longrightarrow>\n    \\<iota> \\<in> Red_I_\\<G> N", "then"], ["proof (chain)\npicking this:\n  Red_I_\\<G>_q ?q N =\n  {\\<iota>0_FL \\<in> Inf_FL.\n   to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q ?q (fst ` N)}", "have \"\\<iota> \\<in> Red_I_\\<G>_q q N\" if \"q \\<in> Q\" for q"], ["proof (prove)\nusing this:\n  Red_I_\\<G>_q ?q N =\n  {\\<iota>0_FL \\<in> Inf_FL.\n   to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q ?q (fst ` N)}\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G>_q q N", "using that to_F_in2 i_in"], ["proof (prove)\nusing this:\n  Red_I_\\<G>_q ?q N =\n  {\\<iota>0_FL \\<in> Inf_FL.\n   to_F \\<iota>0_FL \\<in> no_labels.Red_I_\\<G>_q ?q (fst ` N)}\n  q \\<in> Q\n  ?q \\<in> Q \\<Longrightarrow>\n  to_F \\<iota> \\<in> no_labels.Red_I_\\<G>_q ?q (fst ` N)\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G>_q q N", "unfolding Red_I_\\<G>_q_def no_labels.Red_I_\\<G>_q_def"], ["proof (prove)\nusing this:\n  {\\<iota> \\<in> Inf_FL.\n   \\<G>_I_L_q ?q \\<iota> \\<noteq> None \\<and>\n   the (\\<G>_I_L_q ?q \\<iota>)\n   \\<subseteq> Red_I_q ?q (\\<Union> (\\<G>_F_L_q ?q ` N)) \\<or>\n   \\<G>_I_L_q ?q \\<iota> = None \\<and>\n   \\<G>_F_L_q ?q (concl_of \\<iota>)\n   \\<subseteq> \\<Union> (\\<G>_F_L_q ?q ` N) \\<union>\n               Red_F_q ?q (\\<Union> (\\<G>_F_L_q ?q ` N))} =\n  {\\<iota>0_FL \\<in> Inf_FL.\n   to_F \\<iota>0_FL\n   \\<in> {\\<iota> \\<in> Inf_F.\n          \\<G>_I_q ?q \\<iota> \\<noteq> None \\<and>\n          the (\\<G>_I_q ?q \\<iota>)\n          \\<subseteq> Red_I_q ?q (no_labels.\\<G>_Fset_q ?q (fst ` N)) \\<or>\n          \\<G>_I_q ?q \\<iota> = None \\<and>\n          \\<G>_F_q ?q (concl_of \\<iota>)\n          \\<subseteq> no_labels.\\<G>_Fset_q ?q (fst ` N) \\<union>\n                      Red_F_q ?q (no_labels.\\<G>_Fset_q ?q (fst ` N))}}\n  q \\<in> Q\n  ?q \\<in> Q \\<Longrightarrow>\n  to_F \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_F.\n         \\<G>_I_q ?q \\<iota> \\<noteq> None \\<and>\n         the (\\<G>_I_q ?q \\<iota>)\n         \\<subseteq> Red_I_q ?q (no_labels.\\<G>_Fset_q ?q (fst ` N)) \\<or>\n         \\<G>_I_q ?q \\<iota> = None \\<and>\n         \\<G>_F_q ?q (concl_of \\<iota>)\n         \\<subseteq> no_labels.\\<G>_Fset_q ?q (fst ` N) \\<union>\n                     Red_F_q ?q (no_labels.\\<G>_Fset_q ?q (fst ` N))}\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> {\\<iota> \\<in> Inf_FL.\n           \\<G>_I_L_q q \\<iota> \\<noteq> None \\<and>\n           the (\\<G>_I_L_q q \\<iota>)\n           \\<subseteq> Red_I_q q (\\<Union> (\\<G>_F_L_q q ` N)) \\<or>\n           \\<G>_I_L_q q \\<iota> = None \\<and>\n           \\<G>_F_L_q q (concl_of \\<iota>)\n           \\<subseteq> \\<Union> (\\<G>_F_L_q q ` N) \\<union>\n                       Red_F_q q (\\<Union> (\\<G>_F_L_q q ` N))}", "by auto"], ["proof (state)\nthis:\n  ?q \\<in> Q \\<Longrightarrow> \\<iota> \\<in> Red_I_\\<G>_q ?q N\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` N) \\<Longrightarrow>\n    \\<iota> \\<in> Red_I_\\<G> N", "then"], ["proof (chain)\npicking this:\n  ?q \\<in> Q \\<Longrightarrow> \\<iota> \\<in> Red_I_\\<G>_q ?q N", "show \"\\<iota> \\<in> Red_I_\\<G> N\""], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow> \\<iota> \\<in> Red_I_\\<G>_q ?q N\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> N", "unfolding Red_I_\\<G>_def"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow> \\<iota> \\<in> Red_I_\\<G>_q ?q N\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> (\\<Inter>q\\<in>Q. Red_I_\\<G>_q q N)", "by blast"], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_I_\\<G> N\n\ngoal:\nNo subgoals!", "qed"], ["", "(* lem:redundant-labeled-formulas *)"], ["", "lemma red_labeled_clauses:\n  assumes \\<open>C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N) \\<or>\n    (\\<exists>C' \\<in> fst ` N. C' \\<prec>\\<cdot> C) \\<or> (\\<exists>(C', L') \\<in> N. L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C)\\<close>\n  shows \\<open>(C, L) \\<in> Red_F N\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G> N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G> N", "note assms"], ["proof (state)\nthis:\n  C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N) \\<or>\n  (\\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C) \\<or>\n  (\\<exists>(C', L')\\<in>N. L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C)\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G> N", "moreover"], ["proof (state)\nthis:\n  C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N) \\<or>\n  (\\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C) \\<or>\n  (\\<exists>(C', L')\\<in>N. L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C)\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G> N", "have i: \\<open>C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N) \\<Longrightarrow> (C, L) \\<in> Red_F N\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N) \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N) \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "assume \"C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N)\""], ["proof (state)\nthis:\n  C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N)\n\ngoal (1 subgoal):\n 1. C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N) \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "then"], ["proof (chain)\npicking this:\n  C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N)", "have \"C \\<in> no_labels.Red_F_\\<G>_empty_q q (fst ` N)\" if \"q \\<in> Q\" for q"], ["proof (prove)\nusing this:\n  C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N)\n\ngoal (1 subgoal):\n 1. C \\<in> no_labels.Red_F_\\<G>_empty_q q (fst ` N)", "unfolding no_labels.Red_F_\\<G>_empty_def"], ["proof (prove)\nusing this:\n  C \\<in> (\\<Inter>q\\<in>Q. no_labels.Red_F_\\<G>_empty_q q (fst ` N))\n\ngoal (1 subgoal):\n 1. C \\<in> no_labels.Red_F_\\<G>_empty_q q (fst ` N)", "using that"], ["proof (prove)\nusing this:\n  C \\<in> (\\<Inter>q\\<in>Q. no_labels.Red_F_\\<G>_empty_q q (fst ` N))\n  q \\<in> Q\n\ngoal (1 subgoal):\n 1. C \\<in> no_labels.Red_F_\\<G>_empty_q q (fst ` N)", "by fast"], ["proof (state)\nthis:\n  ?q \\<in> Q \\<Longrightarrow>\n  C \\<in> no_labels.Red_F_\\<G>_empty_q ?q (fst ` N)\n\ngoal (1 subgoal):\n 1. C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N) \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "then"], ["proof (chain)\npicking this:\n  ?q \\<in> Q \\<Longrightarrow>\n  C \\<in> no_labels.Red_F_\\<G>_empty_q ?q (fst ` N)", "have g_in_red: \"\\<G>_F_q q C \\<subseteq> Red_F_q q (no_labels.\\<G>_Fset_q q (fst ` N))\" if \"q \\<in> Q\" for q"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow>\n  C \\<in> no_labels.Red_F_\\<G>_empty_q ?q (fst ` N)\n\ngoal (1 subgoal):\n 1. \\<G>_F_q q C \\<subseteq> Red_F_q q (no_labels.\\<G>_Fset_q q (fst ` N))", "unfolding no_labels.Red_F_\\<G>_empty_q_def"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow>\n  C \\<in> {C. \\<forall>D\\<in>\\<G>_F_q ?q C.\n                 D \\<in> Red_F_q ?q (no_labels.\\<G>_Fset_q ?q (fst ` N))}\n\ngoal (1 subgoal):\n 1. \\<G>_F_q q C \\<subseteq> Red_F_q q (no_labels.\\<G>_Fset_q q (fst ` N))", "using that"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow>\n  C \\<in> {C. \\<forall>D\\<in>\\<G>_F_q ?q C.\n                 D \\<in> Red_F_q ?q (no_labels.\\<G>_Fset_q ?q (fst ` N))}\n  q \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<G>_F_q q C \\<subseteq> Red_F_q q (no_labels.\\<G>_Fset_q q (fst ` N))", "by blast"], ["proof (state)\nthis:\n  ?q \\<in> Q \\<Longrightarrow>\n  \\<G>_F_q ?q C \\<subseteq> Red_F_q ?q (no_labels.\\<G>_Fset_q ?q (fst ` N))\n\ngoal (1 subgoal):\n 1. C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N) \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "have \"\\<G>_F_L_q q (C, L) \\<subseteq> Red_F_q q (\\<G>_Fset_q q N)\" if \"q \\<in> Q\" for q"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G>_F_L_q q (C, L) \\<subseteq> Red_F_q q (\\<Union> (\\<G>_F_L_q q ` N))", "using that g_in_red"], ["proof (prove)\nusing this:\n  q \\<in> Q\n  ?q \\<in> Q \\<Longrightarrow>\n  \\<G>_F_q ?q C \\<subseteq> Red_F_q ?q (no_labels.\\<G>_Fset_q ?q (fst ` N))\n\ngoal (1 subgoal):\n 1. \\<G>_F_L_q q (C, L) \\<subseteq> Red_F_q q (\\<Union> (\\<G>_F_L_q q ` N))", "by simp"], ["proof (state)\nthis:\n  ?q \\<in> Q \\<Longrightarrow>\n  \\<G>_F_L_q ?q (C, L) \\<subseteq> Red_F_q ?q (\\<Union> (\\<G>_F_L_q ?q ` N))\n\ngoal (1 subgoal):\n 1. C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N) \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "then"], ["proof (chain)\npicking this:\n  ?q \\<in> Q \\<Longrightarrow>\n  \\<G>_F_L_q ?q (C, L) \\<subseteq> Red_F_q ?q (\\<Union> (\\<G>_F_L_q ?q ` N))", "show ?thesis"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow>\n  \\<G>_F_L_q ?q (C, L) \\<subseteq> Red_F_q ?q (\\<Union> (\\<G>_F_L_q ?q ` N))\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G> N", "unfolding Red_F_def Red_F_\\<G>_q_def"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow>\n  \\<G>_F_L_q ?q (C, L) \\<subseteq> Red_F_q ?q (\\<Union> (\\<G>_F_L_q ?q ` N))\n\ngoal (1 subgoal):\n 1. (C, L)\n    \\<in> (\\<Inter>q\\<in>Q.\n              {C. \\<forall>D\\<in>\\<G>_F_L_q q C.\n                     D \\<in> Red_F_q q (\\<Union> (\\<G>_F_L_q q ` N)) \\<or>\n                     (\\<exists>E\\<in>N.\n                         E \\<sqsubset> C \\<and> D \\<in> \\<G>_F_L_q q E)})", "by blast"], ["proof (state)\nthis:\n  (C, L) \\<in> Red_F_\\<G> N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N) \\<Longrightarrow>\n  (C, L) \\<in> Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G> N", "moreover"], ["proof (state)\nthis:\n  C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N) \\<Longrightarrow>\n  (C, L) \\<in> Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G> N", "have ii: \\<open>\\<exists>C' \\<in> fst ` N. C' \\<prec>\\<cdot> C \\<Longrightarrow> (C, L) \\<in> Red_F N\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "assume \"\\<exists>C' \\<in> fst ` N. C' \\<prec>\\<cdot> C\""], ["proof (state)\nthis:\n  \\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C\n\ngoal (1 subgoal):\n 1. \\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "then"], ["proof (chain)\npicking this:\n  \\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C", "obtain C' where c'_in: \"C' \\<in> fst ` N\" and c_prec_c': \"C' \\<prec>\\<cdot> C\""], ["proof (prove)\nusing this:\n  \\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C\n\ngoal (1 subgoal):\n 1. (\\<And>C'.\n        \\<lbrakk>C' \\<in> fst ` N; C' \\<prec>\\<cdot> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  C' \\<in> fst ` N\n  C' \\<prec>\\<cdot> C\n\ngoal (1 subgoal):\n 1. \\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "obtain L' where c'_l'_in: \"(C', L') \\<in> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>L'. (C', L') \\<in> N \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using c'_in"], ["proof (prove)\nusing this:\n  C' \\<in> fst ` N\n\ngoal (1 subgoal):\n 1. (\\<And>L'. (C', L') \\<in> N \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (C', L') \\<in> N\n\ngoal (1 subgoal):\n 1. \\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "have c'_l'_prec: \"(C', L') \\<sqsubset> (C, L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C', L') \\<sqsubset> (C, L)", "using c_prec_c'"], ["proof (prove)\nusing this:\n  C' \\<prec>\\<cdot> C\n\ngoal (1 subgoal):\n 1. (C', L') \\<sqsubset> (C, L)", "unfolding Prec_FL_def"], ["proof (prove)\nusing this:\n  C' \\<prec>\\<cdot> C\n\ngoal (1 subgoal):\n 1. fst (C', L') \\<prec>\\<cdot> fst (C, L) \\<or>\n    fst (C', L') \\<doteq> fst (C, L) \\<and>\n    snd (C', L') \\<sqsubset>L snd (C, L)", "by simp"], ["proof (state)\nthis:\n  (C', L') \\<sqsubset> (C, L)\n\ngoal (1 subgoal):\n 1. \\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "have c_in_c'_g: \"\\<G>_F_q q C \\<subseteq> \\<G>_F_q q C'\" if \"q \\<in> Q\" for q"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G>_F_q q C \\<subseteq> \\<G>_F_q q C'", "using prec_F_grounding[OF that c_prec_c']"], ["proof (prove)\nusing this:\n  \\<G>_F_q q C \\<subseteq> \\<G>_F_q q C'\n\ngoal (1 subgoal):\n 1. \\<G>_F_q q C \\<subseteq> \\<G>_F_q q C'", "by presburger"], ["proof (state)\nthis:\n  ?q \\<in> Q \\<Longrightarrow> \\<G>_F_q ?q C \\<subseteq> \\<G>_F_q ?q C'\n\ngoal (1 subgoal):\n 1. \\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "then"], ["proof (chain)\npicking this:\n  ?q \\<in> Q \\<Longrightarrow> \\<G>_F_q ?q C \\<subseteq> \\<G>_F_q ?q C'", "have \"\\<G>_F_L_q q (C, L) \\<subseteq> \\<G>_F_L_q q (C', L')\" if \"q \\<in> Q\" for q"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow> \\<G>_F_q ?q C \\<subseteq> \\<G>_F_q ?q C'\n\ngoal (1 subgoal):\n 1. \\<G>_F_L_q q (C, L) \\<subseteq> \\<G>_F_L_q q (C', L')", "using that"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow> \\<G>_F_q ?q C \\<subseteq> \\<G>_F_q ?q C'\n  q \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<G>_F_L_q q (C, L) \\<subseteq> \\<G>_F_L_q q (C', L')", "by auto"], ["proof (state)\nthis:\n  ?q \\<in> Q \\<Longrightarrow>\n  \\<G>_F_L_q ?q (C, L) \\<subseteq> \\<G>_F_L_q ?q (C', L')\n\ngoal (1 subgoal):\n 1. \\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "then"], ["proof (chain)\npicking this:\n  ?q \\<in> Q \\<Longrightarrow>\n  \\<G>_F_L_q ?q (C, L) \\<subseteq> \\<G>_F_L_q ?q (C', L')", "have \"(C, L) \\<in> Red_F_\\<G>_q q N\" if \"q \\<in> Q\" for q"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow>\n  \\<G>_F_L_q ?q (C, L) \\<subseteq> \\<G>_F_L_q ?q (C', L')\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G>_q q N", "unfolding Red_F_\\<G>_q_def"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow>\n  \\<G>_F_L_q ?q (C, L) \\<subseteq> \\<G>_F_L_q ?q (C', L')\n\ngoal (1 subgoal):\n 1. (C, L)\n    \\<in> {C. \\<forall>D\\<in>\\<G>_F_L_q q C.\n                 D \\<in> Red_F_q q (\\<Union> (\\<G>_F_L_q q ` N)) \\<or>\n                 (\\<exists>E\\<in>N.\n                     E \\<sqsubset> C \\<and> D \\<in> \\<G>_F_L_q q E)}", "using that c'_l'_in c'_l'_prec"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow>\n  \\<G>_F_L_q ?q (C, L) \\<subseteq> \\<G>_F_L_q ?q (C', L')\n  q \\<in> Q\n  (C', L') \\<in> N\n  (C', L') \\<sqsubset> (C, L)\n\ngoal (1 subgoal):\n 1. (C, L)\n    \\<in> {C. \\<forall>D\\<in>\\<G>_F_L_q q C.\n                 D \\<in> Red_F_q q (\\<Union> (\\<G>_F_L_q q ` N)) \\<or>\n                 (\\<exists>E\\<in>N.\n                     E \\<sqsubset> C \\<and> D \\<in> \\<G>_F_L_q q E)}", "by blast"], ["proof (state)\nthis:\n  ?q \\<in> Q \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G>_q ?q N\n\ngoal (1 subgoal):\n 1. \\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "then"], ["proof (chain)\npicking this:\n  ?q \\<in> Q \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G>_q ?q N", "show ?thesis"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G>_q ?q N\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G> N", "unfolding Red_F_def"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G>_q ?q N\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> (\\<Inter>q\\<in>Q. Red_F_\\<G>_q q N)", "by blast"], ["proof (state)\nthis:\n  (C, L) \\<in> Red_F_\\<G> N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C \\<Longrightarrow>\n  (C, L) \\<in> Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G> N", "moreover"], ["proof (state)\nthis:\n  \\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C \\<Longrightarrow>\n  (C, L) \\<in> Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G> N", "have iii: \\<open>\\<exists>(C', L') \\<in> N. L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow> (C, L) \\<in> Red_F N\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>(C', L')\\<in>N.\n       L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>(C', L')\\<in>N.\n       L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "assume \"\\<exists>(C', L') \\<in> N. L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C\""], ["proof (state)\nthis:\n  \\<exists>(C', L')\\<in>N. L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C\n\ngoal (1 subgoal):\n 1. \\<exists>(C', L')\\<in>N.\n       L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "then"], ["proof (chain)\npicking this:\n  \\<exists>(C', L')\\<in>N. L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C", "obtain C' L' where c'_l'_in: \"(C', L') \\<in> N\" and l'_sub_l: \"L' \\<sqsubset>L L\" and c'_sub_c: \"C' \\<preceq>\\<cdot> C\""], ["proof (prove)\nusing this:\n  \\<exists>(C', L')\\<in>N. L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C\n\ngoal (1 subgoal):\n 1. (\\<And>C' L'.\n        \\<lbrakk>(C', L') \\<in> N; L' \\<sqsubset>L L;\n         C' \\<preceq>\\<cdot> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  (C', L') \\<in> N\n  L' \\<sqsubset>L L\n  C' \\<preceq>\\<cdot> C\n\ngoal (1 subgoal):\n 1. \\<exists>(C', L')\\<in>N.\n       L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "have \"(C, L) \\<in> Red_F N\" if \"C' \\<prec>\\<cdot> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G> N", "using that c'_l'_in ii"], ["proof (prove)\nusing this:\n  C' \\<prec>\\<cdot> C\n  (C', L') \\<in> N\n  \\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C \\<Longrightarrow>\n  (C, L) \\<in> Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G> N", "by fastforce"], ["proof (state)\nthis:\n  C' \\<prec>\\<cdot> C \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. \\<exists>(C', L')\\<in>N.\n       L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "moreover"], ["proof (state)\nthis:\n  C' \\<prec>\\<cdot> C \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. \\<exists>(C', L')\\<in>N.\n       L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "{"], ["proof (state)\nthis:\n  C' \\<prec>\\<cdot> C \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. \\<exists>(C', L')\\<in>N.\n       L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "assume equiv_c_c': \"C \\<doteq> C'\""], ["proof (state)\nthis:\n  C \\<doteq> C'\n\ngoal (1 subgoal):\n 1. \\<exists>(C', L')\\<in>N.\n       L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "then"], ["proof (chain)\npicking this:\n  C \\<doteq> C'", "have equiv_c'_c: \"C' \\<doteq> C\""], ["proof (prove)\nusing this:\n  C \\<doteq> C'\n\ngoal (1 subgoal):\n 1. C' \\<doteq> C", "using equiv_equiv_F"], ["proof (prove)\nusing this:\n  C \\<doteq> C'\n  equivp (\\<doteq>)\n\ngoal (1 subgoal):\n 1. C' \\<doteq> C", "by (simp add: equivp_symp)"], ["proof (state)\nthis:\n  C' \\<doteq> C\n\ngoal (1 subgoal):\n 1. \\<exists>(C', L')\\<in>N.\n       L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "then"], ["proof (chain)\npicking this:\n  C' \\<doteq> C", "have c'_l'_prec: \"(C', L') \\<sqsubset> (C, L)\""], ["proof (prove)\nusing this:\n  C' \\<doteq> C\n\ngoal (1 subgoal):\n 1. (C', L') \\<sqsubset> (C, L)", "using l'_sub_l"], ["proof (prove)\nusing this:\n  C' \\<doteq> C\n  L' \\<sqsubset>L L\n\ngoal (1 subgoal):\n 1. (C', L') \\<sqsubset> (C, L)", "unfolding Prec_FL_def"], ["proof (prove)\nusing this:\n  C' \\<doteq> C\n  L' \\<sqsubset>L L\n\ngoal (1 subgoal):\n 1. fst (C', L') \\<prec>\\<cdot> fst (C, L) \\<or>\n    fst (C', L') \\<doteq> fst (C, L) \\<and>\n    snd (C', L') \\<sqsubset>L snd (C, L)", "by simp"], ["proof (state)\nthis:\n  (C', L') \\<sqsubset> (C, L)\n\ngoal (1 subgoal):\n 1. \\<exists>(C', L')\\<in>N.\n       L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "have \"\\<G>_F_q q C = \\<G>_F_q q C'\" if \"q \\<in> Q\" for q"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G>_F_q q C = \\<G>_F_q q C'", "using that equiv_F_grounding equiv_c_c' equiv_c'_c"], ["proof (prove)\nusing this:\n  q \\<in> Q\n  \\<lbrakk>?q \\<in> Q; ?C1.0 \\<doteq> ?C2.0\\<rbrakk>\n  \\<Longrightarrow> \\<G>_F_q ?q ?C1.0 \\<subseteq> \\<G>_F_q ?q ?C2.0\n  C \\<doteq> C'\n  C' \\<doteq> C\n\ngoal (1 subgoal):\n 1. \\<G>_F_q q C = \\<G>_F_q q C'", "by (simp add: set_eq_subset)"], ["proof (state)\nthis:\n  ?q \\<in> Q \\<Longrightarrow> \\<G>_F_q ?q C = \\<G>_F_q ?q C'\n\ngoal (1 subgoal):\n 1. \\<exists>(C', L')\\<in>N.\n       L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "then"], ["proof (chain)\npicking this:\n  ?q \\<in> Q \\<Longrightarrow> \\<G>_F_q ?q C = \\<G>_F_q ?q C'", "have \"\\<G>_F_L_q q (C, L) = \\<G>_F_L_q q (C', L')\" if \"q \\<in> Q\" for q"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow> \\<G>_F_q ?q C = \\<G>_F_q ?q C'\n\ngoal (1 subgoal):\n 1. \\<G>_F_L_q q (C, L) = \\<G>_F_L_q q (C', L')", "using that"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow> \\<G>_F_q ?q C = \\<G>_F_q ?q C'\n  q \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<G>_F_L_q q (C, L) = \\<G>_F_L_q q (C', L')", "by auto"], ["proof (state)\nthis:\n  ?q \\<in> Q \\<Longrightarrow> \\<G>_F_L_q ?q (C, L) = \\<G>_F_L_q ?q (C', L')\n\ngoal (1 subgoal):\n 1. \\<exists>(C', L')\\<in>N.\n       L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "then"], ["proof (chain)\npicking this:\n  ?q \\<in> Q \\<Longrightarrow> \\<G>_F_L_q ?q (C, L) = \\<G>_F_L_q ?q (C', L')", "have \"(C, L) \\<in> Red_F_\\<G>_q q N\" if \"q \\<in> Q\" for q"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow> \\<G>_F_L_q ?q (C, L) = \\<G>_F_L_q ?q (C', L')\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G>_q q N", "unfolding Red_F_\\<G>_q_def"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow> \\<G>_F_L_q ?q (C, L) = \\<G>_F_L_q ?q (C', L')\n\ngoal (1 subgoal):\n 1. (C, L)\n    \\<in> {C. \\<forall>D\\<in>\\<G>_F_L_q q C.\n                 D \\<in> Red_F_q q (\\<Union> (\\<G>_F_L_q q ` N)) \\<or>\n                 (\\<exists>E\\<in>N.\n                     E \\<sqsubset> C \\<and> D \\<in> \\<G>_F_L_q q E)}", "using that c'_l'_in c'_l'_prec"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow> \\<G>_F_L_q ?q (C, L) = \\<G>_F_L_q ?q (C', L')\n  q \\<in> Q\n  (C', L') \\<in> N\n  (C', L') \\<sqsubset> (C, L)\n\ngoal (1 subgoal):\n 1. (C, L)\n    \\<in> {C. \\<forall>D\\<in>\\<G>_F_L_q q C.\n                 D \\<in> Red_F_q q (\\<Union> (\\<G>_F_L_q q ` N)) \\<or>\n                 (\\<exists>E\\<in>N.\n                     E \\<sqsubset> C \\<and> D \\<in> \\<G>_F_L_q q E)}", "by blast"], ["proof (state)\nthis:\n  ?q \\<in> Q \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G>_q ?q N\n\ngoal (1 subgoal):\n 1. \\<exists>(C', L')\\<in>N.\n       L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "then"], ["proof (chain)\npicking this:\n  ?q \\<in> Q \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G>_q ?q N", "have ?thesis"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G>_q ?q N\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G> N", "unfolding Red_F_def"], ["proof (prove)\nusing this:\n  ?q \\<in> Q \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G>_q ?q N\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> (\\<Inter>q\\<in>Q. Red_F_\\<G>_q q N)", "by blast"], ["proof (state)\nthis:\n  (C, L) \\<in> Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. \\<exists>(C', L')\\<in>N.\n       L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "}"], ["proof (state)\nthis:\n  C \\<doteq> C' \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. \\<exists>(C', L')\\<in>N.\n       L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n    (C, L) \\<in> Red_F_\\<G> N", "ultimately"], ["proof (chain)\npicking this:\n  C' \\<prec>\\<cdot> C \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G> N\n  C \\<doteq> C' \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G> N", "show ?thesis"], ["proof (prove)\nusing this:\n  C' \\<prec>\\<cdot> C \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G> N\n  C \\<doteq> C' \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G> N", "using c'_sub_c equiv_equiv_F equivp_symp"], ["proof (prove)\nusing this:\n  C' \\<prec>\\<cdot> C \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G> N\n  C \\<doteq> C' \\<Longrightarrow> (C, L) \\<in> Red_F_\\<G> N\n  C' \\<preceq>\\<cdot> C\n  equivp (\\<doteq>)\n  \\<lbrakk>equivp ?R; ?R ?x ?y\\<rbrakk> \\<Longrightarrow> ?R ?y ?x\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G> N", "by fastforce"], ["proof (state)\nthis:\n  (C, L) \\<in> Red_F_\\<G> N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>(C', L')\\<in>N.\n     L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n  (C, L) \\<in> Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G> N", "ultimately"], ["proof (chain)\npicking this:\n  C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N) \\<or>\n  (\\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C) \\<or>\n  (\\<exists>(C', L')\\<in>N. L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C)\n  C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N) \\<Longrightarrow>\n  (C, L) \\<in> Red_F_\\<G> N\n  \\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C \\<Longrightarrow>\n  (C, L) \\<in> Red_F_\\<G> N\n  \\<exists>(C', L')\\<in>N.\n     L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n  (C, L) \\<in> Red_F_\\<G> N", "show ?thesis"], ["proof (prove)\nusing this:\n  C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N) \\<or>\n  (\\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C) \\<or>\n  (\\<exists>(C', L')\\<in>N. L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C)\n  C \\<in> no_labels.Red_F_\\<G>_empty (fst ` N) \\<Longrightarrow>\n  (C, L) \\<in> Red_F_\\<G> N\n  \\<exists>C'\\<in>fst ` N. C' \\<prec>\\<cdot> C \\<Longrightarrow>\n  (C, L) \\<in> Red_F_\\<G> N\n  \\<exists>(C', L')\\<in>N.\n     L' \\<sqsubset>L L \\<and> C' \\<preceq>\\<cdot> C \\<Longrightarrow>\n  (C, L) \\<in> Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. (C, L) \\<in> Red_F_\\<G> N", "by blast"], ["proof (state)\nthis:\n  (C, L) \\<in> Red_F_\\<G> N\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Given Clause Procedure\\<close>"], ["", "locale given_clause = given_clause_basis Bot_F Inf_F Bot_G Q entails_q Inf_G_q Red_I_q\n  Red_F_q \\<G>_F_q \\<G>_I_q Inf_FL Equiv_F Prec_F Prec_L active\n  for\n    Bot_F :: \"'f set\" and\n    Inf_F :: \"'f inference set\" and\n    Bot_G :: \"'g set\" and\n    Q :: \"'q set\" and\n    entails_q :: \"'q \\<Rightarrow> 'g set \\<Rightarrow> 'g set \\<Rightarrow> bool\" and\n    Inf_G_q :: \\<open>'q \\<Rightarrow> 'g inference set\\<close> and\n    Red_I_q :: \"'q \\<Rightarrow> 'g set \\<Rightarrow> 'g inference set\" and\n    Red_F_q :: \"'q \\<Rightarrow> 'g set \\<Rightarrow> 'g set\" and\n    \\<G>_F_q :: \"'q \\<Rightarrow> 'f \\<Rightarrow> 'g set\"  and\n    \\<G>_I_q :: \"'q \\<Rightarrow> 'f inference \\<Rightarrow> 'g inference set option\" and\n    Inf_FL :: \\<open>('f \\<times> 'l) inference set\\<close> and\n    Equiv_F :: \"'f \\<Rightarrow> 'f \\<Rightarrow> bool\" (infix \"\\<doteq>\" 50) and\n    Prec_F :: \"'f \\<Rightarrow> 'f \\<Rightarrow> bool\" (infix \"\\<prec>\\<cdot>\" 50) and\n    Prec_L :: \"'l \\<Rightarrow> 'l \\<Rightarrow> bool\" (infix \"\\<sqsubset>L\" 50) and\n    active :: 'l +\n  assumes\n    inf_have_prems: \"\\<iota>F \\<in> Inf_F \\<Longrightarrow> prems_of \\<iota>F \\<noteq> []\"\nbegin"], ["", "lemma labeled_inf_have_prems: \"\\<iota> \\<in> Inf_FL \\<Longrightarrow> prems_of \\<iota> \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_FL \\<Longrightarrow> prems_of \\<iota> \\<noteq> []", "using inf_have_prems Inf_FL_to_Inf_F"], ["proof (prove)\nusing this:\n  ?\\<iota>F \\<in> Inf_F \\<Longrightarrow> prems_of ?\\<iota>F \\<noteq> []\n  ?\\<iota>\\<^sub>F\\<^sub>L \\<in> Inf_FL \\<Longrightarrow>\n  Infer (map fst (prems_of ?\\<iota>\\<^sub>F\\<^sub>L))\n   (fst (concl_of ?\\<iota>\\<^sub>F\\<^sub>L))\n  \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_FL \\<Longrightarrow> prems_of \\<iota> \\<noteq> []", "by fastforce"], ["", "inductive step :: \"('f \\<times> 'l) set \\<Rightarrow> ('f \\<times> 'l) set \\<Rightarrow> bool\" (infix \"\\<leadsto>GC\" 50) where\n  process: \"N1 = N \\<union> M \\<Longrightarrow> N2 = N \\<union> M' \\<Longrightarrow> M \\<subseteq> Red_F (N \\<union> M') \\<Longrightarrow>\n    active_subset M' = {} \\<Longrightarrow> N1 \\<leadsto>GC N2\"\n| infer: \"N1 = N \\<union> {(C, L)} \\<Longrightarrow> N2 = N \\<union> {(C, active)} \\<union> M \\<Longrightarrow> L \\<noteq> active \\<Longrightarrow>\n    active_subset M = {} \\<Longrightarrow>\n    no_labels.Inf_between (fst ` (active_subset N)) {C}\n    \\<subseteq> no_labels.Red_I (fst ` (N \\<union> {(C, active)} \\<union> M)) \\<Longrightarrow>\n    N1 \\<leadsto>GC N2\""], ["", "lemma one_step_equiv: \"N1 \\<leadsto>GC N2 \\<Longrightarrow> N1 \\<rhd>L N2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N1 \\<leadsto>GC N2 \\<Longrightarrow> N1 \\<rhd>L N2", "proof (cases N1 N2 rule: step.cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. N1 \\<leadsto>GC N2 \\<Longrightarrow> N1 \\<leadsto>GC N2\n 2. \\<And>N M M'.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> M; N2 = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "show \"N1 \\<leadsto>GC N2 \\<Longrightarrow> N1 \\<leadsto>GC N2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N1 \\<leadsto>GC N2 \\<Longrightarrow> N1 \\<leadsto>GC N2", "by blast"], ["proof (state)\nthis:\n  N1 \\<leadsto>GC N2 \\<Longrightarrow> N1 \\<leadsto>GC N2\n\ngoal (2 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> M; N2 = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> M; N2 = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "fix N M M'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> M; N2 = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "assume\n    gc_step: \"N1 \\<leadsto>GC N2\" and\n    n1_is: \"N1 = N \\<union> M\" and\n    n2_is: \"N2 = N \\<union> M'\" and\n    m_red: \"M \\<subseteq> Red_F (N \\<union> M')\" and\n    active_empty: \"active_subset M' = {}\""], ["proof (state)\nthis:\n  N1 \\<leadsto>GC N2\n  N1 = N \\<union> M\n  N2 = N \\<union> M'\n  M \\<subseteq> Red_F_\\<G> (N \\<union> M')\n  active_subset M' = {}\n\ngoal (2 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> M; N2 = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "have \"N1 - N2 \\<subseteq> Red_F N2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N1 - N2 \\<subseteq> Red_F_\\<G> N2", "using n1_is n2_is m_red"], ["proof (prove)\nusing this:\n  N1 = N \\<union> M\n  N2 = N \\<union> M'\n  M \\<subseteq> Red_F_\\<G> (N \\<union> M')\n\ngoal (1 subgoal):\n 1. N1 - N2 \\<subseteq> Red_F_\\<G> N2", "by auto"], ["proof (state)\nthis:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (2 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> M; N2 = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "then"], ["proof (chain)\npicking this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2", "show \"N1 \\<rhd>L N2\""], ["proof (prove)\nusing this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (1 subgoal):\n 1. N1 \\<rhd>L N2", "unfolding derive.simps"], ["proof (prove)\nusing this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (1 subgoal):\n 1. \\<exists>M N. N1 = M \\<and> N2 = N \\<and> M - N \\<subseteq> Red_F_\\<G> N", "by blast"], ["proof (state)\nthis:\n  N1 \\<rhd>L N2\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "fix N C L M"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "assume\n    gc_step: \"N1 \\<leadsto>GC N2\" and\n    n1_is: \"N1 = N \\<union> {(C, L)}\" and\n    not_active: \"L \\<noteq> active\" and\n    n2_is: \"N2 = N \\<union> {(C, active)} \\<union> M\" and\n    active_empty: \"active_subset M = {}\""], ["proof (state)\nthis:\n  N1 \\<leadsto>GC N2\n  N1 = N \\<union> {(C, L)}\n  L \\<noteq> active\n  N2 = N \\<union> {(C, active)} \\<union> M\n  active_subset M = {}\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "have \"(C, active) \\<in> N2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, active) \\<in> N2", "using n2_is"], ["proof (prove)\nusing this:\n  N2 = N \\<union> {(C, active)} \\<union> M\n\ngoal (1 subgoal):\n 1. (C, active) \\<in> N2", "by auto"], ["proof (state)\nthis:\n  (C, active) \\<in> N2\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "moreover"], ["proof (state)\nthis:\n  (C, active) \\<in> N2\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "have \"C \\<preceq>\\<cdot> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<preceq>\\<cdot> C", "using equiv_equiv_F"], ["proof (prove)\nusing this:\n  equivp (\\<doteq>)\n\ngoal (1 subgoal):\n 1. C \\<preceq>\\<cdot> C", "by (metis equivp_def)"], ["proof (state)\nthis:\n  C \\<preceq>\\<cdot> C\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "moreover"], ["proof (state)\nthis:\n  C \\<preceq>\\<cdot> C\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "have \"active \\<sqsubset>L L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. active \\<sqsubset>L L", "using active_minimal[OF not_active]"], ["proof (prove)\nusing this:\n  active \\<sqsubset>L L\n\ngoal (1 subgoal):\n 1. active \\<sqsubset>L L", "."], ["proof (state)\nthis:\n  active \\<sqsubset>L L\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "ultimately"], ["proof (chain)\npicking this:\n  (C, active) \\<in> N2\n  C \\<preceq>\\<cdot> C\n  active \\<sqsubset>L L", "have \"{(C, L)} \\<subseteq> Red_F N2\""], ["proof (prove)\nusing this:\n  (C, active) \\<in> N2\n  C \\<preceq>\\<cdot> C\n  active \\<sqsubset>L L\n\ngoal (1 subgoal):\n 1. {(C, L)} \\<subseteq> Red_F_\\<G> N2", "using red_labeled_clauses"], ["proof (prove)\nusing this:\n  (C, active) \\<in> N2\n  C \\<preceq>\\<cdot> C\n  active \\<sqsubset>L L\n  ?C \\<in> no_labels.Red_F_\\<G>_empty (fst ` ?N) \\<or>\n  (\\<exists>C'\\<in>fst ` ?N. C' \\<prec>\\<cdot> ?C) \\<or>\n  (\\<exists>(C', L')\\<in>?N.\n      L' \\<sqsubset>L ?L \\<and> C' \\<preceq>\\<cdot> ?C) \\<Longrightarrow>\n  (?C, ?L) \\<in> Red_F_\\<G> ?N\n\ngoal (1 subgoal):\n 1. {(C, L)} \\<subseteq> Red_F_\\<G> N2", "by blast"], ["proof (state)\nthis:\n  {(C, L)} \\<subseteq> Red_F_\\<G> N2\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "moreover"], ["proof (state)\nthis:\n  {(C, L)} \\<subseteq> Red_F_\\<G> N2\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "have \"N1 - N2 = {} \\<or> N1 - N2 = {(C, L)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N1 - N2 = {} \\<or> N1 - N2 = {(C, L)}", "using n1_is n2_is"], ["proof (prove)\nusing this:\n  N1 = N \\<union> {(C, L)}\n  N2 = N \\<union> {(C, active)} \\<union> M\n\ngoal (1 subgoal):\n 1. N1 - N2 = {} \\<or> N1 - N2 = {(C, L)}", "by blast"], ["proof (state)\nthis:\n  N1 - N2 = {} \\<or> N1 - N2 = {(C, L)}\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "ultimately"], ["proof (chain)\npicking this:\n  {(C, L)} \\<subseteq> Red_F_\\<G> N2\n  N1 - N2 = {} \\<or> N1 - N2 = {(C, L)}", "have \"N1 - N2 \\<subseteq> Red_F N2\""], ["proof (prove)\nusing this:\n  {(C, L)} \\<subseteq> Red_F_\\<G> N2\n  N1 - N2 = {} \\<or> N1 - N2 = {(C, L)}\n\ngoal (1 subgoal):\n 1. N1 - N2 \\<subseteq> Red_F_\\<G> N2", "using std_Red_F_eq"], ["proof (prove)\nusing this:\n  {(C, L)} \\<subseteq> Red_F_\\<G> N2\n  N1 - N2 = {} \\<or> N1 - N2 = {(C, L)}\n  std.Red_F = Red_F_\\<G>_empty\n\ngoal (1 subgoal):\n 1. N1 - N2 \\<subseteq> Red_F_\\<G> N2", "by blast"], ["proof (state)\nthis:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>N1 \\<leadsto>GC N2; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)} \\<union> M; L \\<noteq> active;\n        active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "then"], ["proof (chain)\npicking this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2", "show \"N1 \\<rhd>L N2\""], ["proof (prove)\nusing this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (1 subgoal):\n 1. N1 \\<rhd>L N2", "unfolding derive.simps"], ["proof (prove)\nusing this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (1 subgoal):\n 1. \\<exists>M N. N1 = M \\<and> N2 = N \\<and> M - N \\<subseteq> Red_F_\\<G> N", "by blast"], ["proof (state)\nthis:\n  N1 \\<rhd>L N2\n\ngoal:\nNo subgoals!", "qed"], ["", "(* lem:gc-derivations-are-red-derivations *)"], ["", "lemma gc_to_red: \"chain (\\<leadsto>GC) Ns \\<Longrightarrow> chain (\\<rhd>L) Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain (\\<leadsto>GC) Ns \\<Longrightarrow> chain (\\<rhd>L) Ns", "using one_step_equiv Lazy_List_Chain.chain_mono"], ["proof (prove)\nusing this:\n  ?N1.0 \\<leadsto>GC ?N2.0 \\<Longrightarrow> ?N1.0 \\<rhd>L ?N2.0\n  \\<lbrakk>\\<forall>x y. ?R x y \\<longrightarrow> ?R' x y;\n   chain ?R ?xs\\<rbrakk>\n  \\<Longrightarrow> chain ?R' ?xs\n\ngoal (1 subgoal):\n 1. chain (\\<leadsto>GC) Ns \\<Longrightarrow> chain (\\<rhd>L) Ns", "by blast"], ["", "lemma (in-) all_ex_finite_set: \"(\\<forall>(j::nat)\\<in>{0..<m}. \\<exists>(n::nat). P j n) \\<Longrightarrow>\n  (\\<forall>n1 n2. \\<forall>j\\<in>{0..<m}. P j n1 \\<longrightarrow> P j n2 \\<longrightarrow> n1 = n2) \\<Longrightarrow> finite {n. \\<exists>j \\<in> {0..<m}. P j n}\" for m P"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>j\\<in>{0..<m}. \\<exists>n. P j n;\n     \\<forall>n1 n2.\n        \\<forall>j\\<in>{0..<m}.\n           P j n1 \\<longrightarrow>\n           P j n2 \\<longrightarrow> n1 = n2\\<rbrakk>\n    \\<Longrightarrow> finite {n. \\<exists>j\\<in>{0..<m}. P j n}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>j\\<in>{0..<m}. \\<exists>n. P j n;\n     \\<forall>n1 n2.\n        \\<forall>j\\<in>{0..<m}.\n           P j n1 \\<longrightarrow>\n           P j n2 \\<longrightarrow> n1 = n2\\<rbrakk>\n    \\<Longrightarrow> finite {n. \\<exists>j\\<in>{0..<m}. P j n}", "fix m::nat and P:: \"nat \\<Rightarrow> nat \\<Rightarrow> bool\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>j\\<in>{0..<m}. \\<exists>n. P j n;\n     \\<forall>n1 n2.\n        \\<forall>j\\<in>{0..<m}.\n           P j n1 \\<longrightarrow>\n           P j n2 \\<longrightarrow> n1 = n2\\<rbrakk>\n    \\<Longrightarrow> finite {n. \\<exists>j\\<in>{0..<m}. P j n}", "assume\n    allj_exn: \"\\<forall>j\\<in>{0..<m}. \\<exists>n. P j n\" and\n    uniq_n: \"\\<forall>n1 n2. \\<forall>j\\<in>{0..<m}. P j n1 \\<longrightarrow> P j n2 \\<longrightarrow> n1 = n2\""], ["proof (state)\nthis:\n  \\<forall>j\\<in>{0..<m}. \\<exists>n. P j n\n  \\<forall>n1 n2.\n     \\<forall>j\\<in>{0..<m}.\n        P j n1 \\<longrightarrow> P j n2 \\<longrightarrow> n1 = n2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>j\\<in>{0..<m}. \\<exists>n. P j n;\n     \\<forall>n1 n2.\n        \\<forall>j\\<in>{0..<m}.\n           P j n1 \\<longrightarrow>\n           P j n2 \\<longrightarrow> n1 = n2\\<rbrakk>\n    \\<Longrightarrow> finite {n. \\<exists>j\\<in>{0..<m}. P j n}", "have \"{n. \\<exists>j \\<in> {0..<m}. P j n} = (\\<Union>((\\<lambda>j. {n. P j n}) ` {0..<m}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {n. \\<exists>j\\<in>{0..<m}. P j n} = (\\<Union>j\\<in>{0..<m}. {n. P j n})", "by blast"], ["proof (state)\nthis:\n  {n. \\<exists>j\\<in>{0..<m}. P j n} = (\\<Union>j\\<in>{0..<m}. {n. P j n})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>j\\<in>{0..<m}. \\<exists>n. P j n;\n     \\<forall>n1 n2.\n        \\<forall>j\\<in>{0..<m}.\n           P j n1 \\<longrightarrow>\n           P j n2 \\<longrightarrow> n1 = n2\\<rbrakk>\n    \\<Longrightarrow> finite {n. \\<exists>j\\<in>{0..<m}. P j n}", "then"], ["proof (chain)\npicking this:\n  {n. \\<exists>j\\<in>{0..<m}. P j n} = (\\<Union>j\\<in>{0..<m}. {n. P j n})", "have imp_finite: \"(\\<forall>j\\<in>{0..<m}. finite {n. P j n}) \\<Longrightarrow> finite {n. \\<exists>j \\<in> {0..<m}. P j n}\""], ["proof (prove)\nusing this:\n  {n. \\<exists>j\\<in>{0..<m}. P j n} = (\\<Union>j\\<in>{0..<m}. {n. P j n})\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>{0..<m}. finite {n. P j n} \\<Longrightarrow>\n    finite {n. \\<exists>j\\<in>{0..<m}. P j n}", "using finite_UN[of \"{0..<m}\" \"\\<lambda>j. {n. P j n}\"]"], ["proof (prove)\nusing this:\n  {n. \\<exists>j\\<in>{0..<m}. P j n} = (\\<Union>j\\<in>{0..<m}. {n. P j n})\n  finite {0..<m} \\<Longrightarrow>\n  finite (\\<Union>j\\<in>{0..<m}. {n. P j n}) =\n  (\\<forall>x\\<in>{0..<m}. finite {n. P x n})\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>{0..<m}. finite {n. P j n} \\<Longrightarrow>\n    finite {n. \\<exists>j\\<in>{0..<m}. P j n}", "by simp"], ["proof (state)\nthis:\n  \\<forall>j\\<in>{0..<m}. finite {n. P j n} \\<Longrightarrow>\n  finite {n. \\<exists>j\\<in>{0..<m}. P j n}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>j\\<in>{0..<m}. \\<exists>n. P j n;\n     \\<forall>n1 n2.\n        \\<forall>j\\<in>{0..<m}.\n           P j n1 \\<longrightarrow>\n           P j n2 \\<longrightarrow> n1 = n2\\<rbrakk>\n    \\<Longrightarrow> finite {n. \\<exists>j\\<in>{0..<m}. P j n}", "have \"\\<forall>j\\<in>{0..<m}. \\<exists>!n. P j n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>{0..<m}. \\<exists>!n. P j n", "using allj_exn uniq_n"], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{0..<m}. \\<exists>n. P j n\n  \\<forall>n1 n2.\n     \\<forall>j\\<in>{0..<m}.\n        P j n1 \\<longrightarrow> P j n2 \\<longrightarrow> n1 = n2\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>{0..<m}. \\<exists>!n. P j n", "by blast"], ["proof (state)\nthis:\n  \\<forall>j\\<in>{0..<m}. \\<exists>!n. P j n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>j\\<in>{0..<m}. \\<exists>n. P j n;\n     \\<forall>n1 n2.\n        \\<forall>j\\<in>{0..<m}.\n           P j n1 \\<longrightarrow>\n           P j n2 \\<longrightarrow> n1 = n2\\<rbrakk>\n    \\<Longrightarrow> finite {n. \\<exists>j\\<in>{0..<m}. P j n}", "then"], ["proof (chain)\npicking this:\n  \\<forall>j\\<in>{0..<m}. \\<exists>!n. P j n", "have \"\\<forall>j\\<in>{0..<m}. finite {n. P j n}\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{0..<m}. \\<exists>!n. P j n\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>{0..<m}. finite {n. P j n}", "by (metis bounded_nat_set_is_finite lessI mem_Collect_eq)"], ["proof (state)\nthis:\n  \\<forall>j\\<in>{0..<m}. finite {n. P j n}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>j\\<in>{0..<m}. \\<exists>n. P j n;\n     \\<forall>n1 n2.\n        \\<forall>j\\<in>{0..<m}.\n           P j n1 \\<longrightarrow>\n           P j n2 \\<longrightarrow> n1 = n2\\<rbrakk>\n    \\<Longrightarrow> finite {n. \\<exists>j\\<in>{0..<m}. P j n}", "then"], ["proof (chain)\npicking this:\n  \\<forall>j\\<in>{0..<m}. finite {n. P j n}", "show \"finite {n. \\<exists>j \\<in> {0..<m}. P j n}\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{0..<m}. finite {n. P j n}\n\ngoal (1 subgoal):\n 1. finite {n. \\<exists>j\\<in>{0..<m}. P j n}", "using imp_finite"], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{0..<m}. finite {n. P j n}\n  \\<forall>j\\<in>{0..<m}. finite {n. P j n} \\<Longrightarrow>\n  finite {n. \\<exists>j\\<in>{0..<m}. P j n}\n\ngoal (1 subgoal):\n 1. finite {n. \\<exists>j\\<in>{0..<m}. P j n}", "by simp"], ["proof (state)\nthis:\n  finite {n. \\<exists>j\\<in>{0..<m}. P j n}\n\ngoal:\nNo subgoals!", "qed"], ["", "(* lem:fair-gc-derivations *)"], ["", "lemma gc_fair:\n  assumes\n    deriv: \"chain (\\<leadsto>GC) Ns\" and\n    init_state: \"active_subset (lhd Ns) = {}\" and\n    final_state: \"passive_subset (Liminf_llist Ns) = {}\"\n  shows \"fair Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. empty_ord.fair Ns", "unfolding fair_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns) \\<subseteq> Sup_llist (lmap Red_I_\\<G> Ns)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "fix \\<iota>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "assume i_in: \"\\<iota> \\<in> Inf_from (Liminf_llist Ns)\""], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from (Liminf_llist Ns)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "note lhd_is = lhd_conv_lnth[OF chain_not_lnull[OF deriv]]"], ["proof (state)\nthis:\n  lhd Ns = lnth Ns 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "have i_in_inf_fl: \"\\<iota> \\<in> Inf_FL\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_FL", "using i_in"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (Liminf_llist Ns)\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_FL", "unfolding Inf_from_def"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>) \\<subseteq> Liminf_llist Ns}\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_FL", "by blast"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "have \"Liminf_llist Ns = active_subset (Liminf_llist Ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Liminf_llist Ns = active_subset (Liminf_llist Ns)", "using final_state"], ["proof (prove)\nusing this:\n  passive_subset (Liminf_llist Ns) = {}\n\ngoal (1 subgoal):\n 1. Liminf_llist Ns = active_subset (Liminf_llist Ns)", "unfolding passive_subset_def active_subset_def"], ["proof (prove)\nusing this:\n  {CL \\<in> Liminf_llist Ns. snd CL \\<noteq> active} = {}\n\ngoal (1 subgoal):\n 1. Liminf_llist Ns = {CL \\<in> Liminf_llist Ns. snd CL = active}", "by blast"], ["proof (state)\nthis:\n  Liminf_llist Ns = active_subset (Liminf_llist Ns)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "then"], ["proof (chain)\npicking this:\n  Liminf_llist Ns = active_subset (Liminf_llist Ns)", "have i_in2: \"\\<iota> \\<in> Inf_from (active_subset (Liminf_llist Ns))\""], ["proof (prove)\nusing this:\n  Liminf_llist Ns = active_subset (Liminf_llist Ns)\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_from (active_subset (Liminf_llist Ns))", "using i_in"], ["proof (prove)\nusing this:\n  Liminf_llist Ns = active_subset (Liminf_llist Ns)\n  \\<iota> \\<in> Inf_from (Liminf_llist Ns)\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_from (active_subset (Liminf_llist Ns))", "by simp"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from (active_subset (Liminf_llist Ns))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "define m where \"m = length (prems_of \\<iota>)\""], ["proof (state)\nthis:\n  m = length (prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "then"], ["proof (chain)\npicking this:\n  m = length (prems_of \\<iota>)", "have m_def_F: \"m = length (prems_of (to_F \\<iota>))\""], ["proof (prove)\nusing this:\n  m = length (prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. m = length (prems_of (to_F \\<iota>))", "unfolding to_F_def"], ["proof (prove)\nusing this:\n  m = length (prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. m =\n    length\n     (prems_of\n       (Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))))", "by simp"], ["proof (state)\nthis:\n  m = length (prems_of (to_F \\<iota>))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "have i_in_F: \"to_F \\<iota> \\<in> Inf_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> Inf_F", "using i_in Inf_FL_to_Inf_F"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (Liminf_llist Ns)\n  ?\\<iota>\\<^sub>F\\<^sub>L \\<in> Inf_FL \\<Longrightarrow>\n  Infer (map fst (prems_of ?\\<iota>\\<^sub>F\\<^sub>L))\n   (fst (concl_of ?\\<iota>\\<^sub>F\\<^sub>L))\n  \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> Inf_F", "unfolding Inf_from_def to_F_def"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>) \\<subseteq> Liminf_llist Ns}\n  ?\\<iota>\\<^sub>F\\<^sub>L \\<in> Inf_FL \\<Longrightarrow>\n  Infer (map fst (prems_of ?\\<iota>\\<^sub>F\\<^sub>L))\n   (fst (concl_of ?\\<iota>\\<^sub>F\\<^sub>L))\n  \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>)) \\<in> Inf_F", "by blast"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "then"], ["proof (chain)\npicking this:\n  to_F \\<iota> \\<in> Inf_F", "have m_pos: \"m > 0\""], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. 0 < m", "using m_def_F"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> Inf_F\n  m = length (prems_of (to_F \\<iota>))\n\ngoal (1 subgoal):\n 1. 0 < m", "using inf_have_prems"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> Inf_F\n  m = length (prems_of (to_F \\<iota>))\n  ?\\<iota>F \\<in> Inf_F \\<Longrightarrow> prems_of ?\\<iota>F \\<noteq> []\n\ngoal (1 subgoal):\n 1. 0 < m", "by blast"], ["proof (state)\nthis:\n  0 < m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "have exist_nj: \"\\<forall>j \\<in> {0..<m}. (\\<exists>nj. enat (Suc nj) < llength Ns \\<and>\n      prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n      (\\<forall>k. k > nj \\<longrightarrow> enat k < llength Ns \\<longrightarrow> prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>{0..<m}.\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "assume j_in: \"j \\<in> {0..<m}\""], ["proof (state)\nthis:\n  j \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "then"], ["proof (chain)\npicking this:\n  j \\<in> {0..<m}", "obtain C where c_is: \"(C, active) = prems_of \\<iota> ! j\""], ["proof (prove)\nusing this:\n  j \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        (C, active) = prems_of \\<iota> ! j \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using i_in2"], ["proof (prove)\nusing this:\n  j \\<in> {0..<m}\n  \\<iota> \\<in> Inf_from (active_subset (Liminf_llist Ns))\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        (C, active) = prems_of \\<iota> ! j \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding m_def Inf_from_def active_subset_def"], ["proof (prove)\nusing this:\n  j \\<in> {0..<length (prems_of \\<iota>)}\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>)\n         \\<subseteq> {CL \\<in> Liminf_llist Ns. snd CL = active}}\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        (C, active) = prems_of \\<iota> ! j \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (smt Collect_mem_eq Collect_mono_iff atLeastLessThan_iff nth_mem old.prod.exhaust snd_conv)"], ["proof (state)\nthis:\n  (C, active) = prems_of \\<iota> ! j\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "then"], ["proof (chain)\npicking this:\n  (C, active) = prems_of \\<iota> ! j", "have \"(C, active) \\<in> Liminf_llist Ns\""], ["proof (prove)\nusing this:\n  (C, active) = prems_of \\<iota> ! j\n\ngoal (1 subgoal):\n 1. (C, active) \\<in> Liminf_llist Ns", "using j_in i_in"], ["proof (prove)\nusing this:\n  (C, active) = prems_of \\<iota> ! j\n  j \\<in> {0..<m}\n  \\<iota> \\<in> Inf_from (Liminf_llist Ns)\n\ngoal (1 subgoal):\n 1. (C, active) \\<in> Liminf_llist Ns", "unfolding m_def Inf_from_def"], ["proof (prove)\nusing this:\n  (C, active) = prems_of \\<iota> ! j\n  j \\<in> {0..<length (prems_of \\<iota>)}\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>) \\<subseteq> Liminf_llist Ns}\n\ngoal (1 subgoal):\n 1. (C, active) \\<in> Liminf_llist Ns", "by force"], ["proof (state)\nthis:\n  (C, active) \\<in> Liminf_llist Ns\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "then"], ["proof (chain)\npicking this:\n  (C, active) \\<in> Liminf_llist Ns", "obtain nj where nj_is: \"enat nj < llength Ns\" and\n      c_in2: \"(C, active) \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})\""], ["proof (prove)\nusing this:\n  (C, active) \\<in> Liminf_llist Ns\n\ngoal (1 subgoal):\n 1. (\\<And>nj.\n        \\<lbrakk>enat nj < llength Ns;\n         (C, active)\n         \\<in> \\<Inter>\n                (lnth Ns `\n                 {k. nj \\<le> k \\<and> enat k < llength Ns})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Liminf_llist_def"], ["proof (prove)\nusing this:\n  (C, active)\n  \\<in> (\\<Union>i\\<in>{i. enat i < llength Ns}.\n            \\<Inter> (lnth Ns ` {j. i \\<le> j \\<and> enat j < llength Ns}))\n\ngoal (1 subgoal):\n 1. (\\<And>nj.\n        \\<lbrakk>enat nj < llength Ns;\n         (C, active)\n         \\<in> \\<Inter>\n                (lnth Ns `\n                 {k. nj \\<le> k \\<and> enat k < llength Ns})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using init_state"], ["proof (prove)\nusing this:\n  (C, active)\n  \\<in> (\\<Union>i\\<in>{i. enat i < llength Ns}.\n            \\<Inter> (lnth Ns ` {j. i \\<le> j \\<and> enat j < llength Ns}))\n  active_subset (lhd Ns) = {}\n\ngoal (1 subgoal):\n 1. (\\<And>nj.\n        \\<lbrakk>enat nj < llength Ns;\n         (C, active)\n         \\<in> \\<Inter>\n                (lnth Ns `\n                 {k. nj \\<le> k \\<and> enat k < llength Ns})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  enat nj < llength Ns\n  (C, active)\n  \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "then"], ["proof (chain)\npicking this:\n  enat nj < llength Ns\n  (C, active)\n  \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})", "have c_in3: \"\\<forall>k. k \\<ge> nj \\<longrightarrow> enat k < llength Ns \\<longrightarrow> (C, active) \\<in> lnth Ns k\""], ["proof (prove)\nusing this:\n  enat nj < llength Ns\n  (C, active)\n  \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>nj.\n       enat k < llength Ns \\<longrightarrow> (C, active) \\<in> lnth Ns k", "by blast"], ["proof (state)\nthis:\n  \\<forall>k\\<ge>nj.\n     enat k < llength Ns \\<longrightarrow> (C, active) \\<in> lnth Ns k\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "have nj_pos: \"nj > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < nj", "using init_state c_in2 nj_is"], ["proof (prove)\nusing this:\n  active_subset (lhd Ns) = {}\n  (C, active)\n  \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})\n  enat nj < llength Ns\n\ngoal (1 subgoal):\n 1. 0 < nj", "unfolding active_subset_def lhd_is"], ["proof (prove)\nusing this:\n  {CL \\<in> lnth Ns 0. snd CL = active} = {}\n  (C, active)\n  \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})\n  enat nj < llength Ns\n\ngoal (1 subgoal):\n 1. 0 < nj", "by force"], ["proof (state)\nthis:\n  0 < nj\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "obtain nj_min where nj_min_is: \"nj_min = (LEAST nj. enat nj < llength Ns \\<and>\n        (C, active) \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>nj_min.\n        nj_min =\n        (LEAST nj.\n            enat nj < llength Ns \\<and>\n            (C, active)\n            \\<in> \\<Inter>\n                   (lnth Ns `\n                    {k. nj \\<le> k \\<and>\n                        enat k < llength Ns})) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  nj_min =\n  (LEAST nj.\n      enat nj < llength Ns \\<and>\n      (C, active)\n      \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "then"], ["proof (chain)\npicking this:\n  nj_min =\n  (LEAST nj.\n      enat nj < llength Ns \\<and>\n      (C, active)\n      \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))", "have in_allk: \"\\<forall>k. k \\<ge> nj_min \\<longrightarrow> enat k < llength Ns \\<longrightarrow> (C, active) \\<in> (lnth Ns k)\""], ["proof (prove)\nusing this:\n  nj_min =\n  (LEAST nj.\n      enat nj < llength Ns \\<and>\n      (C, active)\n      \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>nj_min.\n       enat k < llength Ns \\<longrightarrow> (C, active) \\<in> lnth Ns k", "using c_in3 nj_is c_in2"], ["proof (prove)\nusing this:\n  nj_min =\n  (LEAST nj.\n      enat nj < llength Ns \\<and>\n      (C, active)\n      \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\n  \\<forall>k\\<ge>nj.\n     enat k < llength Ns \\<longrightarrow> (C, active) \\<in> lnth Ns k\n  enat nj < llength Ns\n  (C, active)\n  \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>nj_min.\n       enat k < llength Ns \\<longrightarrow> (C, active) \\<in> lnth Ns k", "by (metis (mono_tags, lifting) INT_E LeastI_ex mem_Collect_eq)"], ["proof (state)\nthis:\n  \\<forall>k\\<ge>nj_min.\n     enat k < llength Ns \\<longrightarrow> (C, active) \\<in> lnth Ns k\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "have njm_smaller_D: \"enat nj_min < llength Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat nj_min < llength Ns", "using nj_min_is"], ["proof (prove)\nusing this:\n  nj_min =\n  (LEAST nj.\n      enat nj < llength Ns \\<and>\n      (C, active)\n      \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\n\ngoal (1 subgoal):\n 1. enat nj_min < llength Ns", "by (smt LeastI_ex \\<open>\\<And>thesis. (\\<And>nj. \\<lbrakk>enat nj < llength Ns;\n          (C, active) \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})\\<rbrakk> \\<Longrightarrow> thesis) \\<Longrightarrow> thesis\\<close>)"], ["proof (state)\nthis:\n  enat nj_min < llength Ns\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "have \"nj_min > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < nj_min", "using nj_is c_in2 nj_pos nj_min_is lhd_is"], ["proof (prove)\nusing this:\n  enat nj < llength Ns\n  (C, active)\n  \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})\n  0 < nj\n  nj_min =\n  (LEAST nj.\n      enat nj < llength Ns \\<and>\n      (C, active)\n      \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\n  lhd Ns = lnth Ns 0\n\ngoal (1 subgoal):\n 1. 0 < nj_min", "by (metis (mono_tags, lifting) Collect_empty_eq \\<open>(C, active) \\<in> Liminf_llist Ns\\<close>\n          \\<open>Liminf_llist Ns = active_subset (Liminf_llist Ns)\\<close>\n          \\<open>\\<forall>k\\<ge>nj_min. enat k < llength Ns \\<longrightarrow> (C, active) \\<in> lnth Ns k\\<close> active_subset_def init_state\n          linorder_not_less mem_Collect_eq zero_enat_def chain_length_pos[OF deriv])"], ["proof (state)\nthis:\n  0 < nj_min\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "then"], ["proof (chain)\npicking this:\n  0 < nj_min", "obtain njm_prec where nj_prec_is: \"Suc njm_prec = nj_min\""], ["proof (prove)\nusing this:\n  0 < nj_min\n\ngoal (1 subgoal):\n 1. (\\<And>njm_prec.\n        Suc njm_prec = nj_min \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using gr0_conv_Suc"], ["proof (prove)\nusing this:\n  0 < nj_min\n  (0 < ?n) = (\\<exists>m. ?n = Suc m)\n\ngoal (1 subgoal):\n 1. (\\<And>njm_prec.\n        Suc njm_prec = nj_min \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Suc njm_prec = nj_min\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "then"], ["proof (chain)\npicking this:\n  Suc njm_prec = nj_min", "have njm_prec_njm: \"njm_prec < nj_min\""], ["proof (prove)\nusing this:\n  Suc njm_prec = nj_min\n\ngoal (1 subgoal):\n 1. njm_prec < nj_min", "by blast"], ["proof (state)\nthis:\n  njm_prec < nj_min\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "then"], ["proof (chain)\npicking this:\n  njm_prec < nj_min", "have njm_prec_njm_enat: \"enat njm_prec < enat nj_min\""], ["proof (prove)\nusing this:\n  njm_prec < nj_min\n\ngoal (1 subgoal):\n 1. enat njm_prec < enat nj_min", "by simp"], ["proof (state)\nthis:\n  enat njm_prec < enat nj_min\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "have njm_prec_smaller_d: \"njm_prec < llength Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat njm_prec < llength Ns", "using HOL.no_atp(15)[OF njm_smaller_D njm_prec_njm_enat]"], ["proof (prove)\nusing this:\n  enat njm_prec < llength Ns\n\ngoal (1 subgoal):\n 1. enat njm_prec < llength Ns", "."], ["proof (state)\nthis:\n  enat njm_prec < llength Ns\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "have njm_prec_all_suc: \"\\<forall>k>njm_prec. enat k < llength Ns \\<longrightarrow> (C, active) \\<in> lnth Ns k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k>njm_prec.\n       enat k < llength Ns \\<longrightarrow> (C, active) \\<in> lnth Ns k", "using nj_prec_is in_allk"], ["proof (prove)\nusing this:\n  Suc njm_prec = nj_min\n  \\<forall>k\\<ge>nj_min.\n     enat k < llength Ns \\<longrightarrow> (C, active) \\<in> lnth Ns k\n\ngoal (1 subgoal):\n 1. \\<forall>k>njm_prec.\n       enat k < llength Ns \\<longrightarrow> (C, active) \\<in> lnth Ns k", "by simp"], ["proof (state)\nthis:\n  \\<forall>k>njm_prec.\n     enat k < llength Ns \\<longrightarrow> (C, active) \\<in> lnth Ns k\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "have notin_njm_prec: \"(C, active) \\<notin> lnth Ns njm_prec\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, active) \\<notin> lnth Ns njm_prec", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (C, active) \\<notin> lnth Ns njm_prec \\<Longrightarrow> False", "assume \"\\<not> (C, active) \\<notin> lnth Ns njm_prec\""], ["proof (state)\nthis:\n  \\<not> (C, active) \\<notin> lnth Ns njm_prec\n\ngoal (1 subgoal):\n 1. \\<not> (C, active) \\<notin> lnth Ns njm_prec \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> (C, active) \\<notin> lnth Ns njm_prec", "have absurd_hyp: \"(C, active) \\<in> lnth Ns njm_prec\""], ["proof (prove)\nusing this:\n  \\<not> (C, active) \\<notin> lnth Ns njm_prec\n\ngoal (1 subgoal):\n 1. (C, active) \\<in> lnth Ns njm_prec", "by simp"], ["proof (state)\nthis:\n  (C, active) \\<in> lnth Ns njm_prec\n\ngoal (1 subgoal):\n 1. \\<not> (C, active) \\<notin> lnth Ns njm_prec \\<Longrightarrow> False", "have prec_smaller: \"enat njm_prec < llength Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat njm_prec < llength Ns", "using nj_min_is nj_prec_is"], ["proof (prove)\nusing this:\n  nj_min =\n  (LEAST nj.\n      enat nj < llength Ns \\<and>\n      (C, active)\n      \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\n  Suc njm_prec = nj_min\n\ngoal (1 subgoal):\n 1. enat njm_prec < llength Ns", "by (smt LeastI_ex Suc_leD \\<open>\\<And>thesis. (\\<And>nj. \\<lbrakk>enat nj < llength Ns;\n            (C, active) \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})\\<rbrakk> \\<Longrightarrow> thesis) \\<Longrightarrow> thesis\\<close>\n            enat_ord_simps(1) le_eq_less_or_eq le_less_trans)"], ["proof (state)\nthis:\n  enat njm_prec < llength Ns\n\ngoal (1 subgoal):\n 1. \\<not> (C, active) \\<notin> lnth Ns njm_prec \\<Longrightarrow> False", "have \"(C, active) \\<in> \\<Inter> (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "assume k_in: \"njm_prec \\<le> k \\<and> enat k < llength Ns\""], ["proof (state)\nthis:\n  njm_prec \\<le> k \\<and> enat k < llength Ns\n\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "have \"k = njm_prec \\<Longrightarrow> (C, active) \\<in> lnth Ns k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k = njm_prec \\<Longrightarrow> (C, active) \\<in> lnth Ns k", "using absurd_hyp"], ["proof (prove)\nusing this:\n  (C, active) \\<in> lnth Ns njm_prec\n\ngoal (1 subgoal):\n 1. k = njm_prec \\<Longrightarrow> (C, active) \\<in> lnth Ns k", "by simp"], ["proof (state)\nthis:\n  k = njm_prec \\<Longrightarrow> (C, active) \\<in> lnth Ns k\n\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "moreover"], ["proof (state)\nthis:\n  k = njm_prec \\<Longrightarrow> (C, active) \\<in> lnth Ns k\n\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "have \"njm_prec < k \\<Longrightarrow> (C, active) \\<in> lnth Ns k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. njm_prec < k \\<Longrightarrow> (C, active) \\<in> lnth Ns k", "using nj_prec_is in_allk k_in"], ["proof (prove)\nusing this:\n  Suc njm_prec = nj_min\n  \\<forall>k\\<ge>nj_min.\n     enat k < llength Ns \\<longrightarrow> (C, active) \\<in> lnth Ns k\n  njm_prec \\<le> k \\<and> enat k < llength Ns\n\ngoal (1 subgoal):\n 1. njm_prec < k \\<Longrightarrow> (C, active) \\<in> lnth Ns k", "by simp"], ["proof (state)\nthis:\n  njm_prec < k \\<Longrightarrow> (C, active) \\<in> lnth Ns k\n\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "ultimately"], ["proof (chain)\npicking this:\n  k = njm_prec \\<Longrightarrow> (C, active) \\<in> lnth Ns k\n  njm_prec < k \\<Longrightarrow> (C, active) \\<in> lnth Ns k", "have \"(C, active) \\<in> lnth Ns k\""], ["proof (prove)\nusing this:\n  k = njm_prec \\<Longrightarrow> (C, active) \\<in> lnth Ns k\n  njm_prec < k \\<Longrightarrow> (C, active) \\<in> lnth Ns k\n\ngoal (1 subgoal):\n 1. (C, active) \\<in> lnth Ns k", "using k_in"], ["proof (prove)\nusing this:\n  k = njm_prec \\<Longrightarrow> (C, active) \\<in> lnth Ns k\n  njm_prec < k \\<Longrightarrow> (C, active) \\<in> lnth Ns k\n  njm_prec \\<le> k \\<and> enat k < llength Ns\n\ngoal (1 subgoal):\n 1. (C, active) \\<in> lnth Ns k", "by fastforce"], ["proof (state)\nthis:\n  (C, active) \\<in> lnth Ns k\n\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "}"], ["proof (state)\nthis:\n  njm_prec \\<le> ?k2 \\<and> enat ?k2 < llength Ns \\<Longrightarrow>\n  (C, active) \\<in> lnth Ns ?k2\n\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "then"], ["proof (chain)\npicking this:\n  njm_prec \\<le> ?k2 \\<and> enat ?k2 < llength Ns \\<Longrightarrow>\n  (C, active) \\<in> lnth Ns ?k2", "show \"(C, active) \\<in> \\<Inter> (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})\""], ["proof (prove)\nusing this:\n  njm_prec \\<le> ?k2 \\<and> enat ?k2 < llength Ns \\<Longrightarrow>\n  (C, active) \\<in> lnth Ns ?k2\n\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "by blast"], ["proof (state)\nthis:\n  (C, active)\n  \\<in> \\<Inter>\n         (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (C, active)\n  \\<in> \\<Inter>\n         (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})\n\ngoal (1 subgoal):\n 1. \\<not> (C, active) \\<notin> lnth Ns njm_prec \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (C, active)\n  \\<in> \\<Inter>\n         (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "have \"enat njm_prec < llength Ns \\<and>\n          (C, active) \\<in> \\<Inter> (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})\""], ["proof (prove)\nusing this:\n  (C, active)\n  \\<in> \\<Inter>\n         (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})\n\ngoal (1 subgoal):\n 1. enat njm_prec < llength Ns \\<and>\n    (C, active)\n    \\<in> \\<Inter>\n           (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "using prec_smaller"], ["proof (prove)\nusing this:\n  (C, active)\n  \\<in> \\<Inter>\n         (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})\n  enat njm_prec < llength Ns\n\ngoal (1 subgoal):\n 1. enat njm_prec < llength Ns \\<and>\n    (C, active)\n    \\<in> \\<Inter>\n           (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "by blast"], ["proof (state)\nthis:\n  enat njm_prec < llength Ns \\<and>\n  (C, active)\n  \\<in> \\<Inter>\n         (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})\n\ngoal (1 subgoal):\n 1. \\<not> (C, active) \\<notin> lnth Ns njm_prec \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  enat njm_prec < llength Ns \\<and>\n  (C, active)\n  \\<in> \\<Inter>\n         (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "show False"], ["proof (prove)\nusing this:\n  enat njm_prec < llength Ns \\<and>\n  (C, active)\n  \\<in> \\<Inter>\n         (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})\n\ngoal (1 subgoal):\n 1. False", "using nj_min_is nj_prec_is Orderings.wellorder_class.not_less_Least njm_prec_njm"], ["proof (prove)\nusing this:\n  enat njm_prec < llength Ns \\<and>\n  (C, active)\n  \\<in> \\<Inter>\n         (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})\n  nj_min =\n  (LEAST nj.\n      enat nj < llength Ns \\<and>\n      (C, active)\n      \\<in> \\<Inter> (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\n  Suc njm_prec = nj_min\n  ?k < (LEAST x. ?P x) \\<Longrightarrow> \\<not> ?P ?k\n  njm_prec < nj_min\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (C, active) \\<notin> lnth Ns njm_prec\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "then"], ["proof (chain)\npicking this:\n  (C, active) \\<notin> lnth Ns njm_prec", "have notin_active_subs_njm_prec: \"(C, active) \\<notin> active_subset (lnth Ns njm_prec)\""], ["proof (prove)\nusing this:\n  (C, active) \\<notin> lnth Ns njm_prec\n\ngoal (1 subgoal):\n 1. (C, active) \\<notin> active_subset (lnth Ns njm_prec)", "unfolding active_subset_def"], ["proof (prove)\nusing this:\n  (C, active) \\<notin> lnth Ns njm_prec\n\ngoal (1 subgoal):\n 1. (C, active) \\<notin> {CL \\<in> lnth Ns njm_prec. snd CL = active}", "by blast"], ["proof (state)\nthis:\n  (C, active) \\<notin> active_subset (lnth Ns njm_prec)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "then"], ["proof (chain)\npicking this:\n  (C, active) \\<notin> active_subset (lnth Ns njm_prec)", "show \"\\<exists>nj. enat (Suc nj) < llength Ns \\<and> prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n        (\\<forall>k. k > nj \\<longrightarrow> enat k < llength Ns \\<longrightarrow> prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))\""], ["proof (prove)\nusing this:\n  (C, active) \\<notin> active_subset (lnth Ns njm_prec)\n\ngoal (1 subgoal):\n 1. \\<exists>nj.\n       enat (Suc nj) < llength Ns \\<and>\n       prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n       (\\<forall>k>nj.\n           enat k < llength Ns \\<longrightarrow>\n           prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "using c_is njm_prec_all_suc njm_prec_smaller_d"], ["proof (prove)\nusing this:\n  (C, active) \\<notin> active_subset (lnth Ns njm_prec)\n  (C, active) = prems_of \\<iota> ! j\n  \\<forall>k>njm_prec.\n     enat k < llength Ns \\<longrightarrow> (C, active) \\<in> lnth Ns k\n  enat njm_prec < llength Ns\n\ngoal (1 subgoal):\n 1. \\<exists>nj.\n       enat (Suc nj) < llength Ns \\<and>\n       prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n       (\\<forall>k>nj.\n           enat k < llength Ns \\<longrightarrow>\n           prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))", "by (metis (mono_tags, lifting)\n          active_subset_def mem_Collect_eq nj_prec_is njm_smaller_D snd_conv)"], ["proof (state)\nthis:\n  \\<exists>nj.\n     enat (Suc nj) < llength Ns \\<and>\n     prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n     (\\<forall>k>nj.\n         enat k < llength Ns \\<longrightarrow>\n         prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>j\\<in>{0..<m}.\n     \\<exists>nj.\n        enat (Suc nj) < llength Ns \\<and>\n        prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n        (\\<forall>k>nj.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "define nj_set where \"nj_set = {nj. (\\<exists>j\\<in>{0..<m}. enat (Suc nj) < llength Ns \\<and>\n      prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n      (\\<forall>k. k > nj \\<longrightarrow> enat k < llength Ns \\<longrightarrow> prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k)))}\""], ["proof (state)\nthis:\n  nj_set =\n  {nj.\n   \\<exists>j\\<in>{0..<m}.\n      enat (Suc nj) < llength Ns \\<and>\n      prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n      (\\<forall>k>nj.\n          enat k < llength Ns \\<longrightarrow>\n          prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "then"], ["proof (chain)\npicking this:\n  nj_set =\n  {nj.\n   \\<exists>j\\<in>{0..<m}.\n      enat (Suc nj) < llength Ns \\<and>\n      prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n      (\\<forall>k>nj.\n          enat k < llength Ns \\<longrightarrow>\n          prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))}", "have nj_not_empty: \"nj_set \\<noteq> {}\""], ["proof (prove)\nusing this:\n  nj_set =\n  {nj.\n   \\<exists>j\\<in>{0..<m}.\n      enat (Suc nj) < llength Ns \\<and>\n      prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n      (\\<forall>k>nj.\n          enat k < llength Ns \\<longrightarrow>\n          prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))}\n\ngoal (1 subgoal):\n 1. nj_set \\<noteq> {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nj_set =\n    {nj.\n     \\<exists>j\\<in>{0..<m}.\n        enat (Suc nj) < llength Ns \\<and>\n        prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n        (\\<forall>k>nj.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j\n            \\<in> active_subset (lnth Ns k))} \\<Longrightarrow>\n    nj_set \\<noteq> {}", "have zero_in: \"0 \\<in> {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in> {0..<m}", "using m_pos"], ["proof (prove)\nusing this:\n  0 < m\n\ngoal (1 subgoal):\n 1. 0 \\<in> {0..<m}", "by simp"], ["proof (state)\nthis:\n  0 \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. nj_set =\n    {nj.\n     \\<exists>j\\<in>{0..<m}.\n        enat (Suc nj) < llength Ns \\<and>\n        prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n        (\\<forall>k>nj.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j\n            \\<in> active_subset (lnth Ns k))} \\<Longrightarrow>\n    nj_set \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  0 \\<in> {0..<m}", "obtain n0 where \"enat (Suc n0) < llength Ns\" and\n      \"prems_of \\<iota> ! 0 \\<notin> active_subset (lnth Ns n0)\" and\n      \"\\<forall>k>n0. enat k < llength Ns \\<longrightarrow> prems_of \\<iota> ! 0 \\<in> active_subset (lnth Ns k)\""], ["proof (prove)\nusing this:\n  0 \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. (\\<And>n0.\n        \\<lbrakk>enat (Suc n0) < llength Ns;\n         prems_of \\<iota> ! 0 \\<notin> active_subset (lnth Ns n0);\n         \\<forall>k>n0.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! 0 \\<in> active_subset (lnth Ns k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using exist_nj"], ["proof (prove)\nusing this:\n  0 \\<in> {0..<m}\n  \\<forall>j\\<in>{0..<m}.\n     \\<exists>nj.\n        enat (Suc nj) < llength Ns \\<and>\n        prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n        (\\<forall>k>nj.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))\n\ngoal (1 subgoal):\n 1. (\\<And>n0.\n        \\<lbrakk>enat (Suc n0) < llength Ns;\n         prems_of \\<iota> ! 0 \\<notin> active_subset (lnth Ns n0);\n         \\<forall>k>n0.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! 0 \\<in> active_subset (lnth Ns k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  enat (Suc n0) < llength Ns\n  prems_of \\<iota> ! 0 \\<notin> active_subset (lnth Ns n0)\n  \\<forall>k>n0.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! 0 \\<in> active_subset (lnth Ns k)\n\ngoal (1 subgoal):\n 1. nj_set =\n    {nj.\n     \\<exists>j\\<in>{0..<m}.\n        enat (Suc nj) < llength Ns \\<and>\n        prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n        (\\<forall>k>nj.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j\n            \\<in> active_subset (lnth Ns k))} \\<Longrightarrow>\n    nj_set \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  enat (Suc n0) < llength Ns\n  prems_of \\<iota> ! 0 \\<notin> active_subset (lnth Ns n0)\n  \\<forall>k>n0.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! 0 \\<in> active_subset (lnth Ns k)", "have \"n0 \\<in> nj_set\""], ["proof (prove)\nusing this:\n  enat (Suc n0) < llength Ns\n  prems_of \\<iota> ! 0 \\<notin> active_subset (lnth Ns n0)\n  \\<forall>k>n0.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! 0 \\<in> active_subset (lnth Ns k)\n\ngoal (1 subgoal):\n 1. n0 \\<in> nj_set", "unfolding nj_set_def"], ["proof (prove)\nusing this:\n  enat (Suc n0) < llength Ns\n  prems_of \\<iota> ! 0 \\<notin> active_subset (lnth Ns n0)\n  \\<forall>k>n0.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! 0 \\<in> active_subset (lnth Ns k)\n\ngoal (1 subgoal):\n 1. n0 \\<in> {nj.\n              \\<exists>j\\<in>{0..<m}.\n                 enat (Suc nj) < llength Ns \\<and>\n                 prems_of \\<iota> ! j\n                 \\<notin> active_subset (lnth Ns nj) \\<and>\n                 (\\<forall>k>nj.\n                     enat k < llength Ns \\<longrightarrow>\n                     prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))}", "using zero_in"], ["proof (prove)\nusing this:\n  enat (Suc n0) < llength Ns\n  prems_of \\<iota> ! 0 \\<notin> active_subset (lnth Ns n0)\n  \\<forall>k>n0.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! 0 \\<in> active_subset (lnth Ns k)\n  0 \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. n0 \\<in> {nj.\n              \\<exists>j\\<in>{0..<m}.\n                 enat (Suc nj) < llength Ns \\<and>\n                 prems_of \\<iota> ! j\n                 \\<notin> active_subset (lnth Ns nj) \\<and>\n                 (\\<forall>k>nj.\n                     enat k < llength Ns \\<longrightarrow>\n                     prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))}", "by blast"], ["proof (state)\nthis:\n  n0 \\<in> nj_set\n\ngoal (1 subgoal):\n 1. nj_set =\n    {nj.\n     \\<exists>j\\<in>{0..<m}.\n        enat (Suc nj) < llength Ns \\<and>\n        prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n        (\\<forall>k>nj.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j\n            \\<in> active_subset (lnth Ns k))} \\<Longrightarrow>\n    nj_set \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  n0 \\<in> nj_set", "show \"nj_set \\<noteq> {}\""], ["proof (prove)\nusing this:\n  n0 \\<in> nj_set\n\ngoal (1 subgoal):\n 1. nj_set \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  nj_set \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nj_set \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "have nj_finite: \"finite nj_set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite nj_set", "using all_ex_finite_set[OF exist_nj]"], ["proof (prove)\nusing this:\n  \\<forall>n1 n2.\n     \\<forall>j\\<in>{0..<m}.\n        enat (Suc n1) < llength Ns \\<and>\n        prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns n1) \\<and>\n        (\\<forall>k>n1.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j\n            \\<in> active_subset (lnth Ns k)) \\<longrightarrow>\n        enat (Suc n2) < llength Ns \\<and>\n        prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns n2) \\<and>\n        (\\<forall>k>n2.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j\n            \\<in> active_subset (lnth Ns k)) \\<longrightarrow>\n        n1 = n2 \\<Longrightarrow>\n  finite\n   {n. \\<exists>j\\<in>{0..<m}.\n          enat (Suc n) < llength Ns \\<and>\n          prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns n) \\<and>\n          (\\<forall>k>n.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))}\n\ngoal (1 subgoal):\n 1. finite nj_set", "by (metis (no_types, lifting) Suc_ile_eq dual_order.strict_implies_order\n        linorder_neqE_nat nj_set_def)"], ["proof (state)\nthis:\n  finite nj_set\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "(* the n below in the n-1 from the pen-and-paper proof *)"], ["proof (state)\nthis:\n  finite nj_set\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "have \"\\<exists>n \\<in> nj_set. \\<forall>nj \\<in> nj_set. nj \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>nj_set. \\<forall>nj\\<in>nj_set. nj \\<le> n", "using nj_not_empty nj_finite"], ["proof (prove)\nusing this:\n  nj_set \\<noteq> {}\n  finite nj_set\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>nj_set. \\<forall>nj\\<in>nj_set. nj \\<le> n", "using Max_ge Max_in"], ["proof (prove)\nusing this:\n  nj_set \\<noteq> {}\n  finite nj_set\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk> \\<Longrightarrow> ?x \\<le> Max ?A\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max ?A \\<in> ?A\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>nj_set. \\<forall>nj\\<in>nj_set. nj \\<le> n", "by blast"], ["proof (state)\nthis:\n  \\<exists>n\\<in>nj_set. \\<forall>nj\\<in>nj_set. nj \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "then"], ["proof (chain)\npicking this:\n  \\<exists>n\\<in>nj_set. \\<forall>nj\\<in>nj_set. nj \\<le> n", "obtain n where n_in: \"n \\<in> nj_set\" and n_bigger: \"\\<forall>nj \\<in> nj_set. nj \\<le> n\""], ["proof (prove)\nusing this:\n  \\<exists>n\\<in>nj_set. \\<forall>nj\\<in>nj_set. nj \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in> nj_set; \\<forall>nj\\<in>nj_set. nj \\<le> n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  n \\<in> nj_set\n  \\<forall>nj\\<in>nj_set. nj \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "then"], ["proof (chain)\npicking this:\n  n \\<in> nj_set\n  \\<forall>nj\\<in>nj_set. nj \\<le> n", "obtain j0 where j0_in: \"j0 \\<in> {0..<m}\" and suc_n_length: \"enat (Suc n) < llength Ns\" and\n    j0_notin: \"prems_of \\<iota> ! j0 \\<notin> active_subset (lnth Ns n)\" and\n    j0_allin: \"(\\<forall>k. k > n \\<longrightarrow> enat k < llength Ns \\<longrightarrow> prems_of \\<iota> ! j0 \\<in> active_subset (lnth Ns k))\""], ["proof (prove)\nusing this:\n  n \\<in> nj_set\n  \\<forall>nj\\<in>nj_set. nj \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>j0.\n        \\<lbrakk>j0 \\<in> {0..<m}; enat (Suc n) < llength Ns;\n         prems_of \\<iota> ! j0 \\<notin> active_subset (lnth Ns n);\n         \\<forall>k>n.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j0 \\<in> active_subset (lnth Ns k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding nj_set_def"], ["proof (prove)\nusing this:\n  n \\<in> {nj.\n           \\<exists>j\\<in>{0..<m}.\n              enat (Suc nj) < llength Ns \\<and>\n              prems_of \\<iota> ! j\n              \\<notin> active_subset (lnth Ns nj) \\<and>\n              (\\<forall>k>nj.\n                  enat k < llength Ns \\<longrightarrow>\n                  prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))}\n  \\<forall>nj\\<in>{nj.\n                   \\<exists>j\\<in>{0..<m}.\n                      enat (Suc nj) < llength Ns \\<and>\n                      prems_of \\<iota> ! j\n                      \\<notin> active_subset (lnth Ns nj) \\<and>\n                      (\\<forall>k>nj.\n                          enat k < llength Ns \\<longrightarrow>\n                          prems_of \\<iota> ! j\n                          \\<in> active_subset (lnth Ns k))}.\n     nj \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>j0.\n        \\<lbrakk>j0 \\<in> {0..<m}; enat (Suc n) < llength Ns;\n         prems_of \\<iota> ! j0 \\<notin> active_subset (lnth Ns n);\n         \\<forall>k>n.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j0 \\<in> active_subset (lnth Ns k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  j0 \\<in> {0..<m}\n  enat (Suc n) < llength Ns\n  prems_of \\<iota> ! j0 \\<notin> active_subset (lnth Ns n)\n  \\<forall>k>n.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j0 \\<in> active_subset (lnth Ns k)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "obtain C0 where C0_is: \"prems_of \\<iota> ! j0 = (C0, active)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>C0.\n        prems_of \\<iota> ! j0 = (C0, active) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using j0_in"], ["proof (prove)\nusing this:\n  j0 \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. (\\<And>C0.\n        prems_of \\<iota> ! j0 = (C0, active) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using i_in2"], ["proof (prove)\nusing this:\n  j0 \\<in> {0..<m}\n  \\<iota> \\<in> Inf_from (active_subset (Liminf_llist Ns))\n\ngoal (1 subgoal):\n 1. (\\<And>C0.\n        prems_of \\<iota> ! j0 = (C0, active) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding m_def Inf_from_def active_subset_def"], ["proof (prove)\nusing this:\n  j0 \\<in> {0..<length (prems_of \\<iota>)}\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>)\n         \\<subseteq> {CL \\<in> Liminf_llist Ns. snd CL = active}}\n\ngoal (1 subgoal):\n 1. (\\<And>C0.\n        prems_of \\<iota> ! j0 = (C0, active) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (smt Collect_mem_eq Collect_mono_iff atLeastLessThan_iff nth_mem old.prod.exhaust snd_conv)"], ["proof (state)\nthis:\n  prems_of \\<iota> ! j0 = (C0, active)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "then"], ["proof (chain)\npicking this:\n  prems_of \\<iota> ! j0 = (C0, active)", "have C0_prems_i: \"(C0, active) \\<in> set (prems_of \\<iota>)\""], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j0 = (C0, active)\n\ngoal (1 subgoal):\n 1. (C0, active) \\<in> set (prems_of \\<iota>)", "using in_set_conv_nth j0_in m_def"], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j0 = (C0, active)\n  (?x \\<in> set ?xs) = (\\<exists>i<length ?xs. ?xs ! i = ?x)\n  j0 \\<in> {0..<m}\n  m = length (prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. (C0, active) \\<in> set (prems_of \\<iota>)", "by force"], ["proof (state)\nthis:\n  (C0, active) \\<in> set (prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "have C0_in: \"(C0, active) \\<in> (lnth Ns (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C0, active) \\<in> lnth Ns (Suc n)", "using C0_is j0_allin suc_n_length"], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j0 = (C0, active)\n  \\<forall>k>n.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j0 \\<in> active_subset (lnth Ns k)\n  enat (Suc n) < llength Ns\n\ngoal (1 subgoal):\n 1. (C0, active) \\<in> lnth Ns (Suc n)", "by (simp add: active_subset_def)"], ["proof (state)\nthis:\n  (C0, active) \\<in> lnth Ns (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "have C0_notin: \"(C0, active) \\<notin> (lnth Ns n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C0, active) \\<notin> lnth Ns n", "using C0_is j0_notin"], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j0 = (C0, active)\n  prems_of \\<iota> ! j0 \\<notin> active_subset (lnth Ns n)\n\ngoal (1 subgoal):\n 1. (C0, active) \\<notin> lnth Ns n", "unfolding active_subset_def"], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j0 = (C0, active)\n  prems_of \\<iota> ! j0 \\<notin> {CL \\<in> lnth Ns n. snd CL = active}\n\ngoal (1 subgoal):\n 1. (C0, active) \\<notin> lnth Ns n", "by simp"], ["proof (state)\nthis:\n  (C0, active) \\<notin> lnth Ns n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "have step_n: \"lnth Ns n \\<leadsto>GC lnth Ns (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth Ns n \\<leadsto>GC lnth Ns (Suc n)", "using deriv chain_lnth_rel n_in"], ["proof (prove)\nusing this:\n  chain (\\<leadsto>GC) Ns\n  \\<lbrakk>chain ?R ?xs; enat (Suc ?j) < llength ?xs\\<rbrakk>\n  \\<Longrightarrow> ?R (lnth ?xs ?j) (lnth ?xs (Suc ?j))\n  n \\<in> nj_set\n\ngoal (1 subgoal):\n 1. lnth Ns n \\<leadsto>GC lnth Ns (Suc n)", "unfolding nj_set_def"], ["proof (prove)\nusing this:\n  chain (\\<leadsto>GC) Ns\n  \\<lbrakk>chain ?R ?xs; enat (Suc ?j) < llength ?xs\\<rbrakk>\n  \\<Longrightarrow> ?R (lnth ?xs ?j) (lnth ?xs (Suc ?j))\n  n \\<in> {nj.\n           \\<exists>j\\<in>{0..<m}.\n              enat (Suc nj) < llength Ns \\<and>\n              prems_of \\<iota> ! j\n              \\<notin> active_subset (lnth Ns nj) \\<and>\n              (\\<forall>k>nj.\n                  enat k < llength Ns \\<longrightarrow>\n                  prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))}\n\ngoal (1 subgoal):\n 1. lnth Ns n \\<leadsto>GC lnth Ns (Suc n)", "by blast"], ["proof (state)\nthis:\n  lnth Ns n \\<leadsto>GC lnth Ns (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "have \"\\<exists>N C L M. (lnth Ns n = N \\<union> {(C, L)} \\<and>\n      lnth Ns (Suc n) = N \\<union> {(C, active)} \\<union> M \\<and> L \\<noteq> active \\<and> active_subset M = {} \\<and>\n      no_labels.Inf_between (fst ` (active_subset N)) {C}\n      \\<subseteq> no_labels.Red_I (fst ` (N \\<union> {(C, active)} \\<union> M)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>N C L M.\n       lnth Ns n = N \\<union> {(C, L)} \\<and>\n       lnth Ns (Suc n) = N \\<union> {(C, active)} \\<union> M \\<and>\n       L \\<noteq> active \\<and>\n       active_subset M = {} \\<and>\n       no_labels.Inf_between (fst ` active_subset N) {C}\n       \\<subseteq> no_labels.Red_I_\\<G>\n                    (fst ` (N \\<union> {(C, active)} \\<union> M))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>N C L M.\n       lnth Ns n = N \\<union> {(C, L)} \\<and>\n       lnth Ns (Suc n) = N \\<union> {(C, active)} \\<union> M \\<and>\n       L \\<noteq> active \\<and>\n       active_subset M = {} \\<and>\n       no_labels.Inf_between (fst ` active_subset N) {C}\n       \\<subseteq> no_labels.Red_I_\\<G>\n                    (fst ` (N \\<union> {(C, active)} \\<union> M))", "have proc_or_infer: \"(\\<exists>N1 N M N2 M'. lnth Ns n = N1 \\<and> lnth Ns (Suc n) = N2 \\<and> N1 = N \\<union> M \\<and>\n         N2 = N \\<union> M' \\<and> M \\<subseteq> Red_F (N \\<union> M') \\<and> active_subset M' = {}) \\<or>\n       (\\<exists>N1 N C L N2 M. lnth Ns n = N1 \\<and> lnth Ns (Suc n) = N2 \\<and> N1 = N \\<union> {(C, L)} \\<and>\n         N2 = N \\<union> {(C, active)} \\<union> M \\<and> L \\<noteq> active \\<and> active_subset M = {} \\<and>\n         no_labels.Inf_between (fst ` (active_subset N)) {C} \\<subseteq>\n           no_labels.Red_I (fst ` (N \\<union> {(C, active)} \\<union> M)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>N1 N M N2 M'.\n        lnth Ns n = N1 \\<and>\n        lnth Ns (Suc n) = N2 \\<and>\n        N1 = N \\<union> M \\<and>\n        N2 = N \\<union> M' \\<and>\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M') \\<and>\n        active_subset M' = {}) \\<or>\n    (\\<exists>N1 N C L N2 M.\n        lnth Ns n = N1 \\<and>\n        lnth Ns (Suc n) = N2 \\<and>\n        N1 = N \\<union> {(C, L)} \\<and>\n        N2 = N \\<union> {(C, active)} \\<union> M \\<and>\n        L \\<noteq> active \\<and>\n        active_subset M = {} \\<and>\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M)))", "using step.simps[of \"lnth Ns n\" \"lnth Ns (Suc n)\"] step_n"], ["proof (prove)\nusing this:\n  (lnth Ns n \\<leadsto>GC lnth Ns (Suc n)) =\n  ((\\<exists>N1 N M N2 M'.\n       lnth Ns n = N1 \\<and>\n       lnth Ns (Suc n) = N2 \\<and>\n       N1 = N \\<union> M \\<and>\n       N2 = N \\<union> M' \\<and>\n       M \\<subseteq> Red_F_\\<G> (N \\<union> M') \\<and>\n       active_subset M' = {}) \\<or>\n   (\\<exists>N1 N C L N2 M.\n       lnth Ns n = N1 \\<and>\n       lnth Ns (Suc n) = N2 \\<and>\n       N1 = N \\<union> {(C, L)} \\<and>\n       N2 = N \\<union> {(C, active)} \\<union> M \\<and>\n       L \\<noteq> active \\<and>\n       active_subset M = {} \\<and>\n       no_labels.Inf_between (fst ` active_subset N) {C}\n       \\<subseteq> no_labels.Red_I_\\<G>\n                    (fst ` (N \\<union> {(C, active)} \\<union> M))))\n  lnth Ns n \\<leadsto>GC lnth Ns (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<exists>N1 N M N2 M'.\n        lnth Ns n = N1 \\<and>\n        lnth Ns (Suc n) = N2 \\<and>\n        N1 = N \\<union> M \\<and>\n        N2 = N \\<union> M' \\<and>\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M') \\<and>\n        active_subset M' = {}) \\<or>\n    (\\<exists>N1 N C L N2 M.\n        lnth Ns n = N1 \\<and>\n        lnth Ns (Suc n) = N2 \\<and>\n        N1 = N \\<union> {(C, L)} \\<and>\n        N2 = N \\<union> {(C, active)} \\<union> M \\<and>\n        L \\<noteq> active \\<and>\n        active_subset M = {} \\<and>\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M)))", "by blast"], ["proof (state)\nthis:\n  (\\<exists>N1 N M N2 M'.\n      lnth Ns n = N1 \\<and>\n      lnth Ns (Suc n) = N2 \\<and>\n      N1 = N \\<union> M \\<and>\n      N2 = N \\<union> M' \\<and>\n      M \\<subseteq> Red_F_\\<G> (N \\<union> M') \\<and>\n      active_subset M' = {}) \\<or>\n  (\\<exists>N1 N C L N2 M.\n      lnth Ns n = N1 \\<and>\n      lnth Ns (Suc n) = N2 \\<and>\n      N1 = N \\<union> {(C, L)} \\<and>\n      N2 = N \\<union> {(C, active)} \\<union> M \\<and>\n      L \\<noteq> active \\<and>\n      active_subset M = {} \\<and>\n      no_labels.Inf_between (fst ` active_subset N) {C}\n      \\<subseteq> no_labels.Red_I_\\<G>\n                   (fst ` (N \\<union> {(C, active)} \\<union> M)))\n\ngoal (1 subgoal):\n 1. \\<exists>N C L M.\n       lnth Ns n = N \\<union> {(C, L)} \\<and>\n       lnth Ns (Suc n) = N \\<union> {(C, active)} \\<union> M \\<and>\n       L \\<noteq> active \\<and>\n       active_subset M = {} \\<and>\n       no_labels.Inf_between (fst ` active_subset N) {C}\n       \\<subseteq> no_labels.Red_I_\\<G>\n                    (fst ` (N \\<union> {(C, active)} \\<union> M))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>N C L M.\n       lnth Ns n = N \\<union> {(C, L)} \\<and>\n       lnth Ns (Suc n) = N \\<union> {(C, active)} \\<union> M \\<and>\n       L \\<noteq> active \\<and>\n       active_subset M = {} \\<and>\n       no_labels.Inf_between (fst ` active_subset N) {C}\n       \\<subseteq> no_labels.Red_I_\\<G>\n                    (fst ` (N \\<union> {(C, active)} \\<union> M))", "using C0_in C0_notin proc_or_infer j0_in C0_is"], ["proof (prove)\nusing this:\n  (C0, active) \\<in> lnth Ns (Suc n)\n  (C0, active) \\<notin> lnth Ns n\n  (\\<exists>N1 N M N2 M'.\n      lnth Ns n = N1 \\<and>\n      lnth Ns (Suc n) = N2 \\<and>\n      N1 = N \\<union> M \\<and>\n      N2 = N \\<union> M' \\<and>\n      M \\<subseteq> Red_F_\\<G> (N \\<union> M') \\<and>\n      active_subset M' = {}) \\<or>\n  (\\<exists>N1 N C L N2 M.\n      lnth Ns n = N1 \\<and>\n      lnth Ns (Suc n) = N2 \\<and>\n      N1 = N \\<union> {(C, L)} \\<and>\n      N2 = N \\<union> {(C, active)} \\<union> M \\<and>\n      L \\<noteq> active \\<and>\n      active_subset M = {} \\<and>\n      no_labels.Inf_between (fst ` active_subset N) {C}\n      \\<subseteq> no_labels.Red_I_\\<G>\n                   (fst ` (N \\<union> {(C, active)} \\<union> M)))\n  j0 \\<in> {0..<m}\n  prems_of \\<iota> ! j0 = (C0, active)\n\ngoal (1 subgoal):\n 1. \\<exists>N C L M.\n       lnth Ns n = N \\<union> {(C, L)} \\<and>\n       lnth Ns (Suc n) = N \\<union> {(C, active)} \\<union> M \\<and>\n       L \\<noteq> active \\<and>\n       active_subset M = {} \\<and>\n       no_labels.Inf_between (fst ` active_subset N) {C}\n       \\<subseteq> no_labels.Red_I_\\<G>\n                    (fst ` (N \\<union> {(C, active)} \\<union> M))", "by (smt Un_iff active_subset_def mem_Collect_eq snd_conv sup_bot.right_neutral)"], ["proof (state)\nthis:\n  \\<exists>N C L M.\n     lnth Ns n = N \\<union> {(C, L)} \\<and>\n     lnth Ns (Suc n) = N \\<union> {(C, active)} \\<union> M \\<and>\n     L \\<noteq> active \\<and>\n     active_subset M = {} \\<and>\n     no_labels.Inf_between (fst ` active_subset N) {C}\n     \\<subseteq> no_labels.Red_I_\\<G>\n                  (fst ` (N \\<union> {(C, active)} \\<union> M))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>N C L M.\n     lnth Ns n = N \\<union> {(C, L)} \\<and>\n     lnth Ns (Suc n) = N \\<union> {(C, active)} \\<union> M \\<and>\n     L \\<noteq> active \\<and>\n     active_subset M = {} \\<and>\n     no_labels.Inf_between (fst ` active_subset N) {C}\n     \\<subseteq> no_labels.Red_I_\\<G>\n                  (fst ` (N \\<union> {(C, active)} \\<union> M))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "then"], ["proof (chain)\npicking this:\n  \\<exists>N C L M.\n     lnth Ns n = N \\<union> {(C, L)} \\<and>\n     lnth Ns (Suc n) = N \\<union> {(C, active)} \\<union> M \\<and>\n     L \\<noteq> active \\<and>\n     active_subset M = {} \\<and>\n     no_labels.Inf_between (fst ` active_subset N) {C}\n     \\<subseteq> no_labels.Red_I_\\<G>\n                  (fst ` (N \\<union> {(C, active)} \\<union> M))", "obtain N M L where inf_from_subs:\n    \"no_labels.Inf_between (fst ` (active_subset N)) {C0}\n     \\<subseteq> no_labels.Red_I (fst ` (N \\<union> {(C0, active)} \\<union> M))\" and\n    nth_d_is: \"lnth Ns n = N \\<union> {(C0, L)}\" and\n    suc_nth_d_is: \"lnth Ns (Suc n) = N \\<union> {(C0, active)} \\<union> M\" and\n    l_not_active: \"L \\<noteq> active\""], ["proof (prove)\nusing this:\n  \\<exists>N C L M.\n     lnth Ns n = N \\<union> {(C, L)} \\<and>\n     lnth Ns (Suc n) = N \\<union> {(C, active)} \\<union> M \\<and>\n     L \\<noteq> active \\<and>\n     active_subset M = {} \\<and>\n     no_labels.Inf_between (fst ` active_subset N) {C}\n     \\<subseteq> no_labels.Red_I_\\<G>\n                  (fst ` (N \\<union> {(C, active)} \\<union> M))\n\ngoal (1 subgoal):\n 1. (\\<And>N M L.\n        \\<lbrakk>no_labels.Inf_between (fst ` active_subset N) {C0}\n                 \\<subseteq> no_labels.Red_I_\\<G>\n                              (fst `\n                               (N \\<union> {(C0, active)} \\<union> M));\n         lnth Ns n = N \\<union> {(C0, L)};\n         lnth Ns (Suc n) = N \\<union> {(C0, active)} \\<union> M;\n         L \\<noteq> active\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using C0_in C0_notin j0_in C0_is"], ["proof (prove)\nusing this:\n  \\<exists>N C L M.\n     lnth Ns n = N \\<union> {(C, L)} \\<and>\n     lnth Ns (Suc n) = N \\<union> {(C, active)} \\<union> M \\<and>\n     L \\<noteq> active \\<and>\n     active_subset M = {} \\<and>\n     no_labels.Inf_between (fst ` active_subset N) {C}\n     \\<subseteq> no_labels.Red_I_\\<G>\n                  (fst ` (N \\<union> {(C, active)} \\<union> M))\n  (C0, active) \\<in> lnth Ns (Suc n)\n  (C0, active) \\<notin> lnth Ns n\n  j0 \\<in> {0..<m}\n  prems_of \\<iota> ! j0 = (C0, active)\n\ngoal (1 subgoal):\n 1. (\\<And>N M L.\n        \\<lbrakk>no_labels.Inf_between (fst ` active_subset N) {C0}\n                 \\<subseteq> no_labels.Red_I_\\<G>\n                              (fst `\n                               (N \\<union> {(C0, active)} \\<union> M));\n         lnth Ns n = N \\<union> {(C0, L)};\n         lnth Ns (Suc n) = N \\<union> {(C0, active)} \\<union> M;\n         L \\<noteq> active\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using active_subset_def"], ["proof (prove)\nusing this:\n  \\<exists>N C L M.\n     lnth Ns n = N \\<union> {(C, L)} \\<and>\n     lnth Ns (Suc n) = N \\<union> {(C, active)} \\<union> M \\<and>\n     L \\<noteq> active \\<and>\n     active_subset M = {} \\<and>\n     no_labels.Inf_between (fst ` active_subset N) {C}\n     \\<subseteq> no_labels.Red_I_\\<G>\n                  (fst ` (N \\<union> {(C, active)} \\<union> M))\n  (C0, active) \\<in> lnth Ns (Suc n)\n  (C0, active) \\<notin> lnth Ns n\n  j0 \\<in> {0..<m}\n  prems_of \\<iota> ! j0 = (C0, active)\n  active_subset ?M = {CL \\<in> ?M. snd CL = active}\n\ngoal (1 subgoal):\n 1. (\\<And>N M L.\n        \\<lbrakk>no_labels.Inf_between (fst ` active_subset N) {C0}\n                 \\<subseteq> no_labels.Red_I_\\<G>\n                              (fst `\n                               (N \\<union> {(C0, active)} \\<union> M));\n         lnth Ns n = N \\<union> {(C0, L)};\n         lnth Ns (Suc n) = N \\<union> {(C0, active)} \\<union> M;\n         L \\<noteq> active\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  no_labels.Inf_between (fst ` active_subset N) {C0}\n  \\<subseteq> no_labels.Red_I_\\<G>\n               (fst ` (N \\<union> {(C0, active)} \\<union> M))\n  lnth Ns n = N \\<union> {(C0, L)}\n  lnth Ns (Suc n) = N \\<union> {(C0, active)} \\<union> M\n  L \\<noteq> active\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "have \"j \\<in> {0..<m} \\<Longrightarrow> prems_of \\<iota> ! j \\<noteq> prems_of \\<iota> ! j0 \\<Longrightarrow> prems_of \\<iota> ! j \\<in> (active_subset N)\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>j \\<in> {0..<m};\n     prems_of \\<iota> ! j \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j \\<in> active_subset N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>j \\<in> {0..<m};\n     prems_of \\<iota> ! j \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j \\<in> active_subset N", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>j__ \\<in> {0..<m};\n     prems_of \\<iota> ! j__ \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j__ \\<in> active_subset N", "assume j_in: \"j \\<in> {0..<m}\" and\n      j_not_j0: \"prems_of \\<iota> ! j \\<noteq> prems_of \\<iota> ! j0\""], ["proof (state)\nthis:\n  j \\<in> {0..<m}\n  prems_of \\<iota> ! j \\<noteq> prems_of \\<iota> ! j0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j__ \\<in> {0..<m};\n     prems_of \\<iota> ! j__ \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j__ \\<in> active_subset N", "obtain nj where nj_len: \"enat (Suc nj) < llength Ns\" and\n      nj_prems: \"prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj)\" and\n      nj_greater: \"(\\<forall>k. k > nj \\<longrightarrow> enat k < llength Ns \\<longrightarrow> prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>nj.\n        \\<lbrakk>enat (Suc nj) < llength Ns;\n         prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj);\n         \\<forall>k>nj.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using exist_nj j_in"], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{0..<m}.\n     \\<exists>nj.\n        enat (Suc nj) < llength Ns \\<and>\n        prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj) \\<and>\n        (\\<forall>k>nj.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))\n  j \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. (\\<And>nj.\n        \\<lbrakk>enat (Suc nj) < llength Ns;\n         prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj);\n         \\<forall>k>nj.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  enat (Suc nj) < llength Ns\n  prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj)\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j__ \\<in> {0..<m};\n     prems_of \\<iota> ! j__ \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j__ \\<in> active_subset N", "then"], ["proof (chain)\npicking this:\n  enat (Suc nj) < llength Ns\n  prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj)\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k)", "have \"nj \\<in> nj_set\""], ["proof (prove)\nusing this:\n  enat (Suc nj) < llength Ns\n  prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj)\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k)\n\ngoal (1 subgoal):\n 1. nj \\<in> nj_set", "unfolding nj_set_def"], ["proof (prove)\nusing this:\n  enat (Suc nj) < llength Ns\n  prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj)\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k)\n\ngoal (1 subgoal):\n 1. nj \\<in> {nj.\n              \\<exists>j\\<in>{0..<m}.\n                 enat (Suc nj) < llength Ns \\<and>\n                 prems_of \\<iota> ! j\n                 \\<notin> active_subset (lnth Ns nj) \\<and>\n                 (\\<forall>k>nj.\n                     enat k < llength Ns \\<longrightarrow>\n                     prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))}", "using j_in"], ["proof (prove)\nusing this:\n  enat (Suc nj) < llength Ns\n  prems_of \\<iota> ! j \\<notin> active_subset (lnth Ns nj)\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k)\n  j \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. nj \\<in> {nj.\n              \\<exists>j\\<in>{0..<m}.\n                 enat (Suc nj) < llength Ns \\<and>\n                 prems_of \\<iota> ! j\n                 \\<notin> active_subset (lnth Ns nj) \\<and>\n                 (\\<forall>k>nj.\n                     enat k < llength Ns \\<longrightarrow>\n                     prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))}", "by blast"], ["proof (state)\nthis:\n  nj \\<in> nj_set\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j__ \\<in> {0..<m};\n     prems_of \\<iota> ! j__ \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j__ \\<in> active_subset N", "moreover"], ["proof (state)\nthis:\n  nj \\<in> nj_set\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j__ \\<in> {0..<m};\n     prems_of \\<iota> ! j__ \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j__ \\<in> active_subset N", "have \"nj \\<noteq> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nj \\<noteq> n", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> nj \\<noteq> n \\<Longrightarrow> False", "assume \"\\<not> nj \\<noteq> n\""], ["proof (state)\nthis:\n  \\<not> nj \\<noteq> n\n\ngoal (1 subgoal):\n 1. \\<not> nj \\<noteq> n \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> nj \\<noteq> n", "have \"prems_of \\<iota> ! j = (C0, active)\""], ["proof (prove)\nusing this:\n  \\<not> nj \\<noteq> n\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j = (C0, active)", "using C0_in C0_notin step.simps[of \"lnth Ns n\" \"lnth Ns (Suc n)\"] step_n"], ["proof (prove)\nusing this:\n  \\<not> nj \\<noteq> n\n  (C0, active) \\<in> lnth Ns (Suc n)\n  (C0, active) \\<notin> lnth Ns n\n  (lnth Ns n \\<leadsto>GC lnth Ns (Suc n)) =\n  ((\\<exists>N1 N M N2 M'.\n       lnth Ns n = N1 \\<and>\n       lnth Ns (Suc n) = N2 \\<and>\n       N1 = N \\<union> M \\<and>\n       N2 = N \\<union> M' \\<and>\n       M \\<subseteq> Red_F_\\<G> (N \\<union> M') \\<and>\n       active_subset M' = {}) \\<or>\n   (\\<exists>N1 N C L N2 M.\n       lnth Ns n = N1 \\<and>\n       lnth Ns (Suc n) = N2 \\<and>\n       N1 = N \\<union> {(C, L)} \\<and>\n       N2 = N \\<union> {(C, active)} \\<union> M \\<and>\n       L \\<noteq> active \\<and>\n       active_subset M = {} \\<and>\n       no_labels.Inf_between (fst ` active_subset N) {C}\n       \\<subseteq> no_labels.Red_I_\\<G>\n                    (fst ` (N \\<union> {(C, active)} \\<union> M))))\n  lnth Ns n \\<leadsto>GC lnth Ns (Suc n)\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j = (C0, active)", "by (smt Un_iff nth_d_is suc_nth_d_is l_not_active active_subset_def insertCI insertE lessI\n            mem_Collect_eq nj_greater nj_prems snd_conv suc_n_length)"], ["proof (state)\nthis:\n  prems_of \\<iota> ! j = (C0, active)\n\ngoal (1 subgoal):\n 1. \\<not> nj \\<noteq> n \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  prems_of \\<iota> ! j = (C0, active)", "show False"], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j = (C0, active)\n\ngoal (1 subgoal):\n 1. False", "using j_not_j0 C0_is"], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j = (C0, active)\n  prems_of \\<iota> ! j \\<noteq> prems_of \\<iota> ! j0\n  prems_of \\<iota> ! j0 = (C0, active)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nj \\<noteq> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j__ \\<in> {0..<m};\n     prems_of \\<iota> ! j__ \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j__ \\<in> active_subset N", "ultimately"], ["proof (chain)\npicking this:\n  nj \\<in> nj_set\n  nj \\<noteq> n", "have \"nj < n\""], ["proof (prove)\nusing this:\n  nj \\<in> nj_set\n  nj \\<noteq> n\n\ngoal (1 subgoal):\n 1. nj < n", "using n_bigger"], ["proof (prove)\nusing this:\n  nj \\<in> nj_set\n  nj \\<noteq> n\n  \\<forall>nj\\<in>nj_set. nj \\<le> n\n\ngoal (1 subgoal):\n 1. nj < n", "by force"], ["proof (state)\nthis:\n  nj < n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j__ \\<in> {0..<m};\n     prems_of \\<iota> ! j__ \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j__ \\<in> active_subset N", "then"], ["proof (chain)\npicking this:\n  nj < n", "have \"prems_of \\<iota> ! j \\<in> (active_subset (lnth Ns n))\""], ["proof (prove)\nusing this:\n  nj < n\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j \\<in> active_subset (lnth Ns n)", "using nj_greater n_in Suc_ile_eq dual_order.strict_implies_order"], ["proof (prove)\nusing this:\n  nj < n\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k)\n  n \\<in> nj_set\n  (enat (Suc ?m) \\<le> ?n) = (enat ?m < ?n)\n  ?b < ?a \\<Longrightarrow> ?b \\<le> ?a\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j \\<in> active_subset (lnth Ns n)", "unfolding nj_set_def"], ["proof (prove)\nusing this:\n  nj < n\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k)\n  n \\<in> {nj.\n           \\<exists>j\\<in>{0..<m}.\n              enat (Suc nj) < llength Ns \\<and>\n              prems_of \\<iota> ! j\n              \\<notin> active_subset (lnth Ns nj) \\<and>\n              (\\<forall>k>nj.\n                  enat k < llength Ns \\<longrightarrow>\n                  prems_of \\<iota> ! j \\<in> active_subset (lnth Ns k))}\n  (enat (Suc ?m) \\<le> ?n) = (enat ?m < ?n)\n  ?b < ?a \\<Longrightarrow> ?b \\<le> ?a\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j \\<in> active_subset (lnth Ns n)", "by blast"], ["proof (state)\nthis:\n  prems_of \\<iota> ! j \\<in> active_subset (lnth Ns n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j__ \\<in> {0..<m};\n     prems_of \\<iota> ! j__ \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j__ \\<in> active_subset N", "then"], ["proof (chain)\npicking this:\n  prems_of \\<iota> ! j \\<in> active_subset (lnth Ns n)", "show \"prems_of \\<iota> ! j \\<in> (active_subset N)\""], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j \\<in> active_subset (lnth Ns n)\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j \\<in> active_subset N", "using nth_d_is l_not_active"], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j \\<in> active_subset (lnth Ns n)\n  lnth Ns n = N \\<union> {(C0, L)}\n  L \\<noteq> active\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j \\<in> active_subset N", "unfolding active_subset_def"], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j \\<in> {CL \\<in> lnth Ns n. snd CL = active}\n  lnth Ns n = N \\<union> {(C0, L)}\n  L \\<noteq> active\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j \\<in> {CL \\<in> N. snd CL = active}", "by force"], ["proof (state)\nthis:\n  prems_of \\<iota> ! j \\<in> active_subset N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?j \\<in> {0..<m};\n   prems_of \\<iota> ! ?j \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n  \\<Longrightarrow> prems_of \\<iota> ! ?j \\<in> active_subset N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?j \\<in> {0..<m};\n   prems_of \\<iota> ! ?j \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n  \\<Longrightarrow> prems_of \\<iota> ! ?j \\<in> active_subset N", "have \"set (prems_of \\<iota>) \\<subseteq> active_subset N \\<union> {(C0, active)}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?j \\<in> {0..<m};\n   prems_of \\<iota> ! ?j \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n  \\<Longrightarrow> prems_of \\<iota> ! ?j \\<in> active_subset N\n\ngoal (1 subgoal):\n 1. set (prems_of \\<iota>)\n    \\<subseteq> active_subset N \\<union> {(C0, active)}", "using C0_prems_i C0_is m_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?j \\<in> {0..<m};\n   prems_of \\<iota> ! ?j \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n  \\<Longrightarrow> prems_of \\<iota> ! ?j \\<in> active_subset N\n  (C0, active) \\<in> set (prems_of \\<iota>)\n  prems_of \\<iota> ! j0 = (C0, active)\n  m = length (prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. set (prems_of \\<iota>)\n    \\<subseteq> active_subset N \\<union> {(C0, active)}", "by (metis Un_iff atLeast0LessThan in_set_conv_nth insertCI lessThan_iff subrelI)"], ["proof (state)\nthis:\n  set (prems_of \\<iota>) \\<subseteq> active_subset N \\<union> {(C0, active)}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "moreover"], ["proof (state)\nthis:\n  set (prems_of \\<iota>) \\<subseteq> active_subset N \\<union> {(C0, active)}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "have \"\\<not> (set (prems_of \\<iota>) \\<subseteq> active_subset N - {(C0, active)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> set (prems_of \\<iota>)\n           \\<subseteq> active_subset N - {(C0, active)}", "using C0_prems_i"], ["proof (prove)\nusing this:\n  (C0, active) \\<in> set (prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. \\<not> set (prems_of \\<iota>)\n           \\<subseteq> active_subset N - {(C0, active)}", "by blast"], ["proof (state)\nthis:\n  \\<not> set (prems_of \\<iota>) \\<subseteq> active_subset N - {(C0, active)}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "ultimately"], ["proof (chain)\npicking this:\n  set (prems_of \\<iota>) \\<subseteq> active_subset N \\<union> {(C0, active)}\n  \\<not> set (prems_of \\<iota>) \\<subseteq> active_subset N - {(C0, active)}", "have \"\\<iota> \\<in> Inf_between (active_subset N) {(C0, active)}\""], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>) \\<subseteq> active_subset N \\<union> {(C0, active)}\n  \\<not> set (prems_of \\<iota>) \\<subseteq> active_subset N - {(C0, active)}\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_between (active_subset N) {(C0, active)}", "using i_in_inf_fl"], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>) \\<subseteq> active_subset N \\<union> {(C0, active)}\n  \\<not> set (prems_of \\<iota>) \\<subseteq> active_subset N - {(C0, active)}\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_between (active_subset N) {(C0, active)}", "unfolding Inf_between_def Inf_from_def"], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>) \\<subseteq> active_subset N \\<union> {(C0, active)}\n  \\<not> set (prems_of \\<iota>) \\<subseteq> active_subset N - {(C0, active)}\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> {\\<iota> \\<in> Inf_FL.\n           set (prems_of \\<iota>)\n           \\<subseteq> active_subset N \\<union> {(C0, active)}} -\n          {\\<iota> \\<in> Inf_FL.\n           set (prems_of \\<iota>)\n           \\<subseteq> active_subset N - {(C0, active)}}", "by blast"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_between (active_subset N) {(C0, active)}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Inf_between (active_subset N) {(C0, active)}", "have \"to_F \\<iota> \\<in> no_labels.Inf_between (fst ` (active_subset N)) {C0}\""], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_between (active_subset N) {(C0, active)}\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C0}", "unfolding to_F_def Inf_between_def Inf_from_def\n      no_labels.Inf_between_def no_labels.Inf_from_def"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>)\n         \\<subseteq> active_subset N \\<union> {(C0, active)}} -\n        {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>)\n         \\<subseteq> active_subset N - {(C0, active)}}\n\ngoal (1 subgoal):\n 1. Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))\n    \\<in> {\\<iota> \\<in> Inf_F.\n           set (prems_of \\<iota>)\n           \\<subseteq> fst ` active_subset N \\<union> {C0}} -\n          {\\<iota> \\<in> Inf_F.\n           set (prems_of \\<iota>) \\<subseteq> fst ` active_subset N - {C0}}", "using Inf_FL_to_Inf_F"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>)\n         \\<subseteq> active_subset N \\<union> {(C0, active)}} -\n        {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>)\n         \\<subseteq> active_subset N - {(C0, active)}}\n  ?\\<iota>\\<^sub>F\\<^sub>L \\<in> Inf_FL \\<Longrightarrow>\n  Infer (map fst (prems_of ?\\<iota>\\<^sub>F\\<^sub>L))\n   (fst (concl_of ?\\<iota>\\<^sub>F\\<^sub>L))\n  \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))\n    \\<in> {\\<iota> \\<in> Inf_F.\n           set (prems_of \\<iota>)\n           \\<subseteq> fst ` active_subset N \\<union> {C0}} -\n          {\\<iota> \\<in> Inf_F.\n           set (prems_of \\<iota>) \\<subseteq> fst ` active_subset N - {C0}}", "by force"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C0}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "then"], ["proof (chain)\npicking this:\n  to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C0}", "have \"to_F \\<iota> \\<in> no_labels.Red_I (fst ` (lnth Ns (Suc n)))\""], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C0}\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` lnth Ns (Suc n))", "using suc_nth_d_is inf_from_subs"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C0}\n  lnth Ns (Suc n) = N \\<union> {(C0, active)} \\<union> M\n  no_labels.Inf_between (fst ` active_subset N) {C0}\n  \\<subseteq> no_labels.Red_I_\\<G>\n               (fst ` (N \\<union> {(C0, active)} \\<union> M))\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` lnth Ns (Suc n))", "by fastforce"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` lnth Ns (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "then"], ["proof (chain)\npicking this:\n  to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` lnth Ns (Suc n))", "have \"\\<forall>q \\<in> Q. (\\<G>_I_q q (to_F \\<iota>) \\<noteq> None \\<and>\n      the (\\<G>_I_q q (to_F \\<iota>)) \\<subseteq> Red_I_q q (\\<Union> (\\<G>_F_q q ` fst ` lnth Ns (Suc n))))\n      \\<or> (\\<G>_I_q q (to_F \\<iota>) = None \\<and>\n      \\<G>_F_q q (concl_of (to_F \\<iota>)) \\<subseteq> \\<Union> (\\<G>_F_q q ` fst ` lnth Ns (Suc n)) \\<union>\n        Red_F_q q (\\<Union> (\\<G>_F_q q ` fst ` lnth Ns (Suc n))))\""], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` lnth Ns (Suc n))\n\ngoal (1 subgoal):\n 1. \\<forall>q\\<in>Q.\n       \\<G>_I_L_q q \\<iota> \\<noteq> None \\<and>\n       the (\\<G>_I_L_q q \\<iota>)\n       \\<subseteq> Red_I_q q\n                    (no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n))) \\<or>\n       \\<G>_I_L_q q \\<iota> = None \\<and>\n       \\<G>_F_q q (concl_of (to_F \\<iota>))\n       \\<subseteq> no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n)) \\<union>\n                   Red_F_q q\n                    (no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n)))", "unfolding to_F_def no_labels.Red_I_def no_labels.Red_I_\\<G>_q_def"], ["proof (prove)\nusing this:\n  Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))\n  \\<in> (\\<Inter>q\\<in>Q.\n            {\\<iota> \\<in> Inf_F.\n             \\<G>_I_q q \\<iota> \\<noteq> None \\<and>\n             the (\\<G>_I_q q \\<iota>)\n             \\<subseteq> Red_I_q q\n                          (no_labels.\\<G>_Fset_q q\n                            (fst ` lnth Ns (Suc n))) \\<or>\n             \\<G>_I_q q \\<iota> = None \\<and>\n             \\<G>_F_q q (concl_of \\<iota>)\n             \\<subseteq> no_labels.\\<G>_Fset_q q\n                          (fst ` lnth Ns (Suc n)) \\<union>\n                         Red_F_q q\n                          (no_labels.\\<G>_Fset_q q\n                            (fst ` lnth Ns (Suc n)))})\n\ngoal (1 subgoal):\n 1. \\<forall>q\\<in>Q.\n       \\<G>_I_q q\n        (Infer (map fst (prems_of \\<iota>))\n          (fst (concl_of \\<iota>))) \\<noteq>\n       None \\<and>\n       the (\\<G>_I_q q\n             (Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))))\n       \\<subseteq> Red_I_q q\n                    (no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n))) \\<or>\n       \\<G>_I_q q\n        (Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))) =\n       None \\<and>\n       \\<G>_F_q q\n        (concl_of\n          (Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))))\n       \\<subseteq> no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n)) \\<union>\n                   Red_F_q q\n                    (no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n)))", "by blast"], ["proof (state)\nthis:\n  \\<forall>q\\<in>Q.\n     \\<G>_I_L_q q \\<iota> \\<noteq> None \\<and>\n     the (\\<G>_I_L_q q \\<iota>)\n     \\<subseteq> Red_I_q q\n                  (no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n))) \\<or>\n     \\<G>_I_L_q q \\<iota> = None \\<and>\n     \\<G>_F_q q (concl_of (to_F \\<iota>))\n     \\<subseteq> no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n)) \\<union>\n                 Red_F_q q (no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "then"], ["proof (chain)\npicking this:\n  \\<forall>q\\<in>Q.\n     \\<G>_I_L_q q \\<iota> \\<noteq> None \\<and>\n     the (\\<G>_I_L_q q \\<iota>)\n     \\<subseteq> Red_I_q q\n                  (no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n))) \\<or>\n     \\<G>_I_L_q q \\<iota> = None \\<and>\n     \\<G>_F_q q (concl_of (to_F \\<iota>))\n     \\<subseteq> no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n)) \\<union>\n                 Red_F_q q (no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n)))", "have \"\\<iota> \\<in> Red_I_\\<G> (lnth Ns (Suc n))\""], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>Q.\n     \\<G>_I_L_q q \\<iota> \\<noteq> None \\<and>\n     the (\\<G>_I_L_q q \\<iota>)\n     \\<subseteq> Red_I_q q\n                  (no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n))) \\<or>\n     \\<G>_I_L_q q \\<iota> = None \\<and>\n     \\<G>_F_q q (concl_of (to_F \\<iota>))\n     \\<subseteq> no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n)) \\<union>\n                 Red_F_q q (no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n)))\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> (lnth Ns (Suc n))", "using i_in_inf_fl"], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>Q.\n     \\<G>_I_L_q q \\<iota> \\<noteq> None \\<and>\n     the (\\<G>_I_L_q q \\<iota>)\n     \\<subseteq> Red_I_q q\n                  (no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n))) \\<or>\n     \\<G>_I_L_q q \\<iota> = None \\<and>\n     \\<G>_F_q q (concl_of (to_F \\<iota>))\n     \\<subseteq> no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n)) \\<union>\n                 Red_F_q q (no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n)))\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> (lnth Ns (Suc n))", "unfolding Red_I_\\<G>_def Red_I_\\<G>_q_def"], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>Q.\n     \\<G>_I_L_q q \\<iota> \\<noteq> None \\<and>\n     the (\\<G>_I_L_q q \\<iota>)\n     \\<subseteq> Red_I_q q\n                  (no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n))) \\<or>\n     \\<G>_I_L_q q \\<iota> = None \\<and>\n     \\<G>_F_q q (concl_of (to_F \\<iota>))\n     \\<subseteq> no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n)) \\<union>\n                 Red_F_q q (no_labels.\\<G>_Fset_q q (fst ` lnth Ns (Suc n)))\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> (\\<Inter>q\\<in>Q.\n              {\\<iota> \\<in> Inf_FL.\n               \\<G>_I_L_q q \\<iota> \\<noteq> None \\<and>\n               the (\\<G>_I_L_q q \\<iota>)\n               \\<subseteq> Red_I_q q\n                            (\\<Union>\n                              (\\<G>_F_L_q q ` lnth Ns (Suc n))) \\<or>\n               \\<G>_I_L_q q \\<iota> = None \\<and>\n               \\<G>_F_L_q q (concl_of \\<iota>)\n               \\<subseteq> \\<Union>\n                            (\\<G>_F_L_q q ` lnth Ns (Suc n)) \\<union>\n                           Red_F_q q\n                            (\\<Union> (\\<G>_F_L_q q ` lnth Ns (Suc n)))})", "by (simp add: to_F_def)"], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_I_\\<G> (lnth Ns (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist Ns) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Red_I_\\<G> (lnth Ns (Suc n))", "show \"\\<iota> \\<in> Sup_llist (lmap Red_I_\\<G> Ns)\""], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Red_I_\\<G> (lnth Ns (Suc n))\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "unfolding Sup_llist_def"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Red_I_\\<G> (lnth Ns (Suc n))\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union>\n           (lnth (lmap Red_I_\\<G> Ns) `\n            {i. enat i < llength (lmap Red_I_\\<G> Ns)})", "using suc_n_length"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Red_I_\\<G> (lnth Ns (Suc n))\n  enat (Suc n) < llength Ns\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union>\n           (lnth (lmap Red_I_\\<G> Ns) `\n            {i. enat i < llength (lmap Red_I_\\<G> Ns)})", "by auto"], ["proof (state)\nthis:\n  \\<iota> \\<in> Sup_llist (lmap Red_I_\\<G> Ns)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem gc_complete_Liminf:\n  assumes\n    deriv: \"chain (\\<leadsto>GC) Ns\" and\n    init_state: \"active_subset (lhd Ns) = {}\" and\n    final_state: \"passive_subset (Liminf_llist Ns) = {}\" and\n    b_in: \"B \\<in> Bot_F\" and\n    bot_entailed: \"no_labels.entails_\\<G> (fst ` lhd Ns) {B}\"\n  shows \"\\<exists>BL \\<in> Bot_FL. BL \\<in> Liminf_llist Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist Ns", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist Ns", "note lhd_is = lhd_conv_lnth[OF chain_not_lnull[OF deriv]]"], ["proof (state)\nthis:\n  lhd Ns = lnth Ns 0\n\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist Ns", "have labeled_b_in: \"(B, active) \\<in> Bot_FL\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (B, active) \\<in> Bot_FL", "using b_in"], ["proof (prove)\nusing this:\n  B \\<in> Bot_F\n\ngoal (1 subgoal):\n 1. (B, active) \\<in> Bot_FL", "by simp"], ["proof (state)\nthis:\n  (B, active) \\<in> Bot_FL\n\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist Ns", "have labeled_bot_entailed: \"entails_\\<G>_L (lhd Ns) {(B, active)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. entails_\\<G> (lhd Ns) {(B, active)}", "using labeled_entailment_lifting bot_entailed lhd_is"], ["proof (prove)\nusing this:\n  entails_\\<G> ?NL1.0 ?NL2.0 =\n  (fst ` ?NL1.0 \\<Turnstile>\\<inter>\\<G> fst ` ?NL2.0)\n  fst ` lhd Ns \\<Turnstile>\\<inter>\\<G> {B}\n  lhd Ns = lnth Ns 0\n\ngoal (1 subgoal):\n 1. entails_\\<G> (lhd Ns) {(B, active)}", "by fastforce"], ["proof (state)\nthis:\n  entails_\\<G> (lhd Ns) {(B, active)}\n\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist Ns", "have fair: \"fair Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. empty_ord.fair Ns", "using gc_fair[OF deriv init_state final_state]"], ["proof (prove)\nusing this:\n  empty_ord.fair Ns\n\ngoal (1 subgoal):\n 1. empty_ord.fair Ns", "."], ["proof (state)\nthis:\n  empty_ord.fair Ns\n\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist Ns", "then"], ["proof (chain)\npicking this:\n  empty_ord.fair Ns", "show ?thesis"], ["proof (prove)\nusing this:\n  empty_ord.fair Ns\n\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist Ns", "using dynamically_complete_Liminf[OF labeled_b_in gc_to_red[OF deriv] fair\n        labeled_bot_entailed]"], ["proof (prove)\nusing this:\n  empty_ord.fair Ns\n  \\<exists>B'\\<in>Bot_FL. B' \\<in> Liminf_llist Ns\n\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist Ns", "by blast"], ["proof (state)\nthis:\n  \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist Ns\n\ngoal:\nNo subgoals!", "qed"], ["", "(* thm:gc-completeness *)"], ["", "theorem gc_complete:\n  assumes\n    deriv: \"chain (\\<leadsto>GC) Ns\" and\n    init_state: \"active_subset (lhd Ns) = {}\" and\n    final_state: \"passive_subset (Liminf_llist Ns) = {}\" and\n    b_in: \"B \\<in> Bot_F\" and\n    bot_entailed: \"no_labels.entails_\\<G> (fst ` lhd Ns) {B}\"\n  shows \"\\<exists>i. enat i < llength Ns \\<and> (\\<exists>BL \\<in> Bot_FL. BL \\<in> lnth Ns i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength Ns \\<and>\n       (\\<exists>BL\\<in>Bot_FL. BL \\<in> lnth Ns i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength Ns \\<and>\n       (\\<exists>BL\\<in>Bot_FL. BL \\<in> lnth Ns i)", "note lhd_is = lhd_conv_lnth[OF chain_not_lnull[OF deriv]]"], ["proof (state)\nthis:\n  lhd Ns = lnth Ns 0\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength Ns \\<and>\n       (\\<exists>BL\\<in>Bot_FL. BL \\<in> lnth Ns i)", "have \"\\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist Ns", "using assms"], ["proof (prove)\nusing this:\n  chain (\\<leadsto>GC) Ns\n  active_subset (lhd Ns) = {}\n  passive_subset (Liminf_llist Ns) = {}\n  B \\<in> Bot_F\n  fst ` lhd Ns \\<Turnstile>\\<inter>\\<G> {B}\n\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist Ns", "by (rule gc_complete_Liminf)"], ["proof (state)\nthis:\n  \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist Ns\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength Ns \\<and>\n       (\\<exists>BL\\<in>Bot_FL. BL \\<in> lnth Ns i)", "then"], ["proof (chain)\npicking this:\n  \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist Ns", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist Ns\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength Ns \\<and>\n       (\\<exists>BL\\<in>Bot_FL. BL \\<in> lnth Ns i)", "unfolding Liminf_llist_def"], ["proof (prove)\nusing this:\n  \\<exists>BL\\<in>Bot_FL.\n     BL \\<in> (\\<Union>i\\<in>{i. enat i < llength Ns}.\n                  \\<Inter>\n                   (lnth Ns ` {j. i \\<le> j \\<and> enat j < llength Ns}))\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength Ns \\<and>\n       (\\<exists>BL\\<in>Bot_FL. BL \\<in> lnth Ns i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i.\n     enat i < llength Ns \\<and> (\\<exists>BL\\<in>Bot_FL. BL \\<in> lnth Ns i)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Lazy Given Clause Procedure\\<close>"], ["", "locale lazy_given_clause = given_clause_basis Bot_F Inf_F Bot_G Q entails_q Inf_G_q Red_I_q\n  Red_F_q \\<G>_F_q \\<G>_I_q Inf_FL Equiv_F Prec_F Prec_L active\n  for\n    Bot_F :: \"'f set\" and\n    Inf_F :: \"'f inference set\" and\n    Bot_G :: \"'g set\" and\n    Q :: \"'q set\" and\n    entails_q :: \"'q \\<Rightarrow> 'g set \\<Rightarrow> 'g set \\<Rightarrow> bool\" and\n    Inf_G_q :: \\<open>'q \\<Rightarrow> 'g inference set\\<close> and\n    Red_I_q :: \"'q \\<Rightarrow> 'g set \\<Rightarrow> 'g inference set\" and\n    Red_F_q :: \"'q \\<Rightarrow> 'g set \\<Rightarrow> 'g set\" and\n    \\<G>_F_q :: \"'q \\<Rightarrow> 'f \\<Rightarrow> 'g set\"  and\n    \\<G>_I_q :: \"'q \\<Rightarrow> 'f inference \\<Rightarrow> 'g inference set option\" and\n    Inf_FL :: \\<open>('f \\<times> 'l) inference set\\<close> and\n    Equiv_F :: \"'f \\<Rightarrow> 'f \\<Rightarrow> bool\" (infix \"\\<doteq>\" 50) and\n    Prec_F :: \"'f \\<Rightarrow> 'f \\<Rightarrow> bool\" (infix \"\\<prec>\\<cdot>\" 50) and\n    Prec_L :: \"'l \\<Rightarrow> 'l \\<Rightarrow> bool\" (infix \"\\<sqsubset>L\" 50) and\n    active :: 'l\nbegin"], ["", "inductive step :: \"'f inference set \\<times> ('f \\<times> 'l) set \\<Rightarrow>\n  'f inference set \\<times> ('f \\<times> 'l) set \\<Rightarrow> bool\" (infix \"\\<leadsto>LGC\" 50) where\n  process: \"N1 = N \\<union> M \\<Longrightarrow> N2 = N \\<union> M' \\<Longrightarrow> M \\<subseteq> Red_F (N \\<union> M') \\<Longrightarrow>\n    active_subset M' = {} \\<Longrightarrow> (T, N1) \\<leadsto>LGC (T, N2)\" |\n  schedule_infer: \"T2 = T1 \\<union> T' \\<Longrightarrow> N1 = N \\<union> {(C, L)} \\<Longrightarrow> N2 = N \\<union> {(C, active)} \\<Longrightarrow>\n    L \\<noteq> active \\<Longrightarrow> T' = no_labels.Inf_between (fst ` (active_subset N)) {C} \\<Longrightarrow>\n    (T1, N1) \\<leadsto>LGC (T2, N2)\" |\n  compute_infer: \"T1 = T2 \\<union> {\\<iota>} \\<Longrightarrow> N2 = N1 \\<union> M \\<Longrightarrow> active_subset M = {} \\<Longrightarrow>\n    \\<iota> \\<in> no_labels.Red_I (fst ` (N1 \\<union> M)) \\<Longrightarrow> (T1, N1) \\<leadsto>LGC (T2, N2)\" |\n  delete_orphans: \"T1 = T2 \\<union> T' \\<Longrightarrow>\n    T' \\<inter> no_labels.Inf_from (fst ` (active_subset N)) = {} \\<Longrightarrow> (T1, N) \\<leadsto>LGC (T2, N)\""], ["", "lemma premise_free_inf_always_from: \"\\<iota> \\<in> Inf_F \\<Longrightarrow> prems_of \\<iota> = [] \\<Longrightarrow> \\<iota> \\<in> no_labels.Inf_from N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<iota> \\<in> Inf_F; prems_of \\<iota> = []\\<rbrakk>\n    \\<Longrightarrow> \\<iota> \\<in> no_labels.Inf_from N", "unfolding no_labels.Inf_from_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<iota> \\<in> Inf_F; prems_of \\<iota> = []\\<rbrakk>\n    \\<Longrightarrow> \\<iota>\n                      \\<in> {\\<iota> \\<in> Inf_F.\n                             set (prems_of \\<iota>) \\<subseteq> N}", "by simp"], ["", "lemma one_step_equiv: \"(T1, N1) \\<leadsto>LGC (T2, N2) \\<Longrightarrow> N1 \\<rhd>L N2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T1, N1) \\<leadsto>LGC (T2, N2) \\<Longrightarrow> N1 \\<rhd>L N2", "proof (cases \"(T1, N1)\" \"(T2, N2)\" rule: step.cases)"], ["proof (state)\ngoal (5 subgoals):\n 1. (T1, N1) \\<leadsto>LGC (T2, N2) \\<Longrightarrow>\n    (T1, N1) \\<leadsto>LGC (T2, N2)\n 2. \\<And>N M M'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1; N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>T' N C L.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1 \\<union> T';\n        N1 = N \\<union> {(C, L)}; N2 = N \\<union> {(C, active)};\n        L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 4. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 5. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "show \"(T1, N1) \\<leadsto>LGC (T2, N2) \\<Longrightarrow> (T1, N1) \\<leadsto>LGC (T2, N2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T1, N1) \\<leadsto>LGC (T2, N2) \\<Longrightarrow>\n    (T1, N1) \\<leadsto>LGC (T2, N2)", "by blast"], ["proof (state)\nthis:\n  (T1, N1) \\<leadsto>LGC (T2, N2) \\<Longrightarrow>\n  (T1, N1) \\<leadsto>LGC (T2, N2)\n\ngoal (4 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1; N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>T' N C L.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1 \\<union> T';\n        N1 = N \\<union> {(C, L)}; N2 = N \\<union> {(C, active)};\n        L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 4. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1; N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>T' N C L.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1 \\<union> T';\n        N1 = N \\<union> {(C, L)}; N2 = N \\<union> {(C, active)};\n        L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 4. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "fix N M M'"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1; N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>T' N C L.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1 \\<union> T';\n        N1 = N \\<union> {(C, L)}; N2 = N \\<union> {(C, active)};\n        L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 4. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "assume\n    n1_is: \"N1 = N \\<union> M\" and\n    n2_is: \"N2 = N \\<union> M'\" and\n    m_red: \"M \\<subseteq> Red_F (N \\<union> M')\""], ["proof (state)\nthis:\n  N1 = N \\<union> M\n  N2 = N \\<union> M'\n  M \\<subseteq> Red_F_\\<G> (N \\<union> M')\n\ngoal (4 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1; N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>T' N C L.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1 \\<union> T';\n        N1 = N \\<union> {(C, L)}; N2 = N \\<union> {(C, active)};\n        L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 4. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "have \"N1 - N2 \\<subseteq> Red_F N2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N1 - N2 \\<subseteq> Red_F_\\<G> N2", "using n1_is n2_is m_red"], ["proof (prove)\nusing this:\n  N1 = N \\<union> M\n  N2 = N \\<union> M'\n  M \\<subseteq> Red_F_\\<G> (N \\<union> M')\n\ngoal (1 subgoal):\n 1. N1 - N2 \\<subseteq> Red_F_\\<G> N2", "by auto"], ["proof (state)\nthis:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (4 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1; N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>T' N C L.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1 \\<union> T';\n        N1 = N \\<union> {(C, L)}; N2 = N \\<union> {(C, active)};\n        L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 4. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "then"], ["proof (chain)\npicking this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2", "show \"N1 \\<rhd>L N2\""], ["proof (prove)\nusing this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (1 subgoal):\n 1. N1 \\<rhd>L N2", "unfolding derive.simps"], ["proof (prove)\nusing this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (1 subgoal):\n 1. \\<exists>M N. N1 = M \\<and> N2 = N \\<and> M - N \\<subseteq> Red_F_\\<G> N", "by blast"], ["proof (state)\nthis:\n  N1 \\<rhd>L N2\n\ngoal (3 subgoals):\n 1. \\<And>T' N C L.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1 \\<union> T';\n        N1 = N \\<union> {(C, L)}; N2 = N \\<union> {(C, active)};\n        L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>T' N C L.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1 \\<union> T';\n        N1 = N \\<union> {(C, L)}; N2 = N \\<union> {(C, active)};\n        L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "fix N C L M"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>T' N C L.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1 \\<union> T';\n        N1 = N \\<union> {(C, L)}; N2 = N \\<union> {(C, active)};\n        L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "assume\n    n1_is: \"N1 = N \\<union> {(C, L)}\" and\n    not_active: \"L \\<noteq> active\" and\n    n2_is: \"N2 = N \\<union> {(C, active)}\""], ["proof (state)\nthis:\n  N1 = N \\<union> {(C, L)}\n  L \\<noteq> active\n  N2 = N \\<union> {(C, active)}\n\ngoal (3 subgoals):\n 1. \\<And>T' N C L.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1 \\<union> T';\n        N1 = N \\<union> {(C, L)}; N2 = N \\<union> {(C, active)};\n        L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "have \"(C, active) \\<in> N2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, active) \\<in> N2", "using n2_is"], ["proof (prove)\nusing this:\n  N2 = N \\<union> {(C, active)}\n\ngoal (1 subgoal):\n 1. (C, active) \\<in> N2", "by auto"], ["proof (state)\nthis:\n  (C, active) \\<in> N2\n\ngoal (3 subgoals):\n 1. \\<And>T' N C L.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1 \\<union> T';\n        N1 = N \\<union> {(C, L)}; N2 = N \\<union> {(C, active)};\n        L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "moreover"], ["proof (state)\nthis:\n  (C, active) \\<in> N2\n\ngoal (3 subgoals):\n 1. \\<And>T' N C L.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1 \\<union> T';\n        N1 = N \\<union> {(C, L)}; N2 = N \\<union> {(C, active)};\n        L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "have \"C \\<preceq>\\<cdot> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<preceq>\\<cdot> C", "by (metis equivp_def equiv_equiv_F)"], ["proof (state)\nthis:\n  C \\<preceq>\\<cdot> C\n\ngoal (3 subgoals):\n 1. \\<And>T' N C L.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1 \\<union> T';\n        N1 = N \\<union> {(C, L)}; N2 = N \\<union> {(C, active)};\n        L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "moreover"], ["proof (state)\nthis:\n  C \\<preceq>\\<cdot> C\n\ngoal (3 subgoals):\n 1. \\<And>T' N C L.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1 \\<union> T';\n        N1 = N \\<union> {(C, L)}; N2 = N \\<union> {(C, active)};\n        L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "have \"active \\<sqsubset>L L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. active \\<sqsubset>L L", "using active_minimal[OF not_active]"], ["proof (prove)\nusing this:\n  active \\<sqsubset>L L\n\ngoal (1 subgoal):\n 1. active \\<sqsubset>L L", "."], ["proof (state)\nthis:\n  active \\<sqsubset>L L\n\ngoal (3 subgoals):\n 1. \\<And>T' N C L.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1 \\<union> T';\n        N1 = N \\<union> {(C, L)}; N2 = N \\<union> {(C, active)};\n        L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "ultimately"], ["proof (chain)\npicking this:\n  (C, active) \\<in> N2\n  C \\<preceq>\\<cdot> C\n  active \\<sqsubset>L L", "have \"{(C, L)} \\<subseteq> Red_F N2\""], ["proof (prove)\nusing this:\n  (C, active) \\<in> N2\n  C \\<preceq>\\<cdot> C\n  active \\<sqsubset>L L\n\ngoal (1 subgoal):\n 1. {(C, L)} \\<subseteq> Red_F_\\<G> N2", "using red_labeled_clauses"], ["proof (prove)\nusing this:\n  (C, active) \\<in> N2\n  C \\<preceq>\\<cdot> C\n  active \\<sqsubset>L L\n  ?C \\<in> no_labels.Red_F_\\<G>_empty (fst ` ?N) \\<or>\n  (\\<exists>C'\\<in>fst ` ?N. C' \\<prec>\\<cdot> ?C) \\<or>\n  (\\<exists>(C', L')\\<in>?N.\n      L' \\<sqsubset>L ?L \\<and> C' \\<preceq>\\<cdot> ?C) \\<Longrightarrow>\n  (?C, ?L) \\<in> Red_F_\\<G> ?N\n\ngoal (1 subgoal):\n 1. {(C, L)} \\<subseteq> Red_F_\\<G> N2", "by blast"], ["proof (state)\nthis:\n  {(C, L)} \\<subseteq> Red_F_\\<G> N2\n\ngoal (3 subgoals):\n 1. \\<And>T' N C L.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1 \\<union> T';\n        N1 = N \\<union> {(C, L)}; N2 = N \\<union> {(C, active)};\n        L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "then"], ["proof (chain)\npicking this:\n  {(C, L)} \\<subseteq> Red_F_\\<G> N2", "have \"N1 - N2 \\<subseteq> Red_F N2\""], ["proof (prove)\nusing this:\n  {(C, L)} \\<subseteq> Red_F_\\<G> N2\n\ngoal (1 subgoal):\n 1. N1 - N2 \\<subseteq> Red_F_\\<G> N2", "using std_Red_F_eq"], ["proof (prove)\nusing this:\n  {(C, L)} \\<subseteq> Red_F_\\<G> N2\n  std.Red_F = Red_F_\\<G>_empty\n\ngoal (1 subgoal):\n 1. N1 - N2 \\<subseteq> Red_F_\\<G> N2", "using n1_is n2_is"], ["proof (prove)\nusing this:\n  {(C, L)} \\<subseteq> Red_F_\\<G> N2\n  std.Red_F = Red_F_\\<G>_empty\n  N1 = N \\<union> {(C, L)}\n  N2 = N \\<union> {(C, active)}\n\ngoal (1 subgoal):\n 1. N1 - N2 \\<subseteq> Red_F_\\<G> N2", "by blast"], ["proof (state)\nthis:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (3 subgoals):\n 1. \\<And>T' N C L.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T2 = T1 \\<union> T';\n        N1 = N \\<union> {(C, L)}; N2 = N \\<union> {(C, active)};\n        L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 3. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "then"], ["proof (chain)\npicking this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2", "show \"N1 \\<rhd>L N2\""], ["proof (prove)\nusing this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (1 subgoal):\n 1. N1 \\<rhd>L N2", "unfolding derive.simps"], ["proof (prove)\nusing this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (1 subgoal):\n 1. \\<exists>M N. N1 = M \\<and> N2 = N \\<and> M - N \\<subseteq> Red_F_\\<G> N", "by blast"], ["proof (state)\nthis:\n  N1 \\<rhd>L N2\n\ngoal (2 subgoals):\n 1. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "fix M"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "assume\n    n2_is: \"N2 = N1 \\<union> M\""], ["proof (state)\nthis:\n  N2 = N1 \\<union> M\n\ngoal (2 subgoals):\n 1. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "have \"N1 - N2 \\<subseteq> Red_F N2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N1 - N2 \\<subseteq> Red_F_\\<G> N2", "using n2_is"], ["proof (prove)\nusing this:\n  N2 = N1 \\<union> M\n\ngoal (1 subgoal):\n 1. N1 - N2 \\<subseteq> Red_F_\\<G> N2", "by blast"], ["proof (state)\nthis:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (2 subgoals):\n 1. \\<And>\\<iota> M.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); T1 = T2 \\<union> {\\<iota>};\n        N2 = N1 \\<union> M; active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2\n 2. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "then"], ["proof (chain)\npicking this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2", "show \"N1 \\<rhd>L N2\""], ["proof (prove)\nusing this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (1 subgoal):\n 1. N1 \\<rhd>L N2", "unfolding derive.simps"], ["proof (prove)\nusing this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (1 subgoal):\n 1. \\<exists>M N. N1 = M \\<and> N2 = N \\<and> M - N \\<subseteq> Red_F_\\<G> N", "by blast"], ["proof (state)\nthis:\n  N1 \\<rhd>L N2\n\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "assume n2_is: \"N2 = N1\""], ["proof (state)\nthis:\n  N2 = N1\n\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "have \"N1 - N2 \\<subseteq> Red_F N2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N1 - N2 \\<subseteq> Red_F_\\<G> N2", "using n2_is"], ["proof (prove)\nusing this:\n  N2 = N1\n\ngoal (1 subgoal):\n 1. N1 - N2 \\<subseteq> Red_F_\\<G> N2", "by blast"], ["proof (state)\nthis:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>(T1, N1) \\<leadsto>LGC (T2, N2); N2 = N1;\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N1) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> N1 \\<rhd>L N2", "then"], ["proof (chain)\npicking this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2", "show \"N1 \\<rhd>L N2\""], ["proof (prove)\nusing this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (1 subgoal):\n 1. N1 \\<rhd>L N2", "unfolding derive.simps"], ["proof (prove)\nusing this:\n  N1 - N2 \\<subseteq> Red_F_\\<G> N2\n\ngoal (1 subgoal):\n 1. \\<exists>M N. N1 = M \\<and> N2 = N \\<and> M - N \\<subseteq> Red_F_\\<G> N", "by blast"], ["proof (state)\nthis:\n  N1 \\<rhd>L N2\n\ngoal:\nNo subgoals!", "qed"], ["", "(* lem:lgc-derivations-are-red-derivations *)"], ["", "lemma lgc_to_red: \"chain (\\<leadsto>LGC) Ns \\<Longrightarrow> chain (\\<rhd>L) (lmap snd Ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain (\\<leadsto>LGC) Ns \\<Longrightarrow> chain (\\<rhd>L) (lmap snd Ns)", "using one_step_equiv Lazy_List_Chain.chain_mono"], ["proof (prove)\nusing this:\n  (?T1.0, ?N1.0) \\<leadsto>LGC (?T2.0, ?N2.0) \\<Longrightarrow>\n  ?N1.0 \\<rhd>L ?N2.0\n  \\<lbrakk>\\<forall>x y. ?R x y \\<longrightarrow> ?R' x y;\n   chain ?R ?xs\\<rbrakk>\n  \\<Longrightarrow> chain ?R' ?xs\n\ngoal (1 subgoal):\n 1. chain (\\<leadsto>LGC) Ns \\<Longrightarrow> chain (\\<rhd>L) (lmap snd Ns)", "by (smt chain_lmap prod.collapse)"], ["", "(* lem:fair-lgc-derivations *)"], ["", "lemma lgc_fair:\n  assumes\n    deriv: \"chain (\\<leadsto>LGC) Ns\" and\n    init_state: \"active_subset (snd (lhd Ns)) = {}\" and\n    final_state: \"passive_subset (Liminf_llist (lmap snd Ns)) = {}\" and\n    no_prems_init_active: \"\\<forall>\\<iota> \\<in> Inf_F. prems_of \\<iota> = [] \\<longrightarrow> \\<iota> \\<in> fst (lhd Ns)\" and\n    final_schedule: \"Liminf_llist (lmap fst Ns) = {}\"\n  shows \"fair (lmap snd Ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. empty_ord.fair (lmap snd Ns)", "unfolding fair_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist (lmap snd Ns))\n    \\<subseteq> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "fix \\<iota>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "assume i_in: \"\\<iota> \\<in> Inf_from (Liminf_llist (lmap snd Ns))\""], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from (Liminf_llist (lmap snd Ns))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "note lhd_is = lhd_conv_lnth[OF chain_not_lnull[OF deriv]]"], ["proof (state)\nthis:\n  lhd Ns = lnth Ns 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have i_in_inf_fl: \"\\<iota> \\<in> Inf_FL\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_FL", "using i_in"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (Liminf_llist (lmap snd Ns))\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_FL", "unfolding Inf_from_def"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>) \\<subseteq> Liminf_llist (lmap snd Ns)}\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_FL", "by blast"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have \"Liminf_llist (lmap snd Ns) = active_subset (Liminf_llist (lmap snd Ns))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Liminf_llist (lmap snd Ns) = active_subset (Liminf_llist (lmap snd Ns))", "using final_state"], ["proof (prove)\nusing this:\n  passive_subset (Liminf_llist (lmap snd Ns)) = {}\n\ngoal (1 subgoal):\n 1. Liminf_llist (lmap snd Ns) = active_subset (Liminf_llist (lmap snd Ns))", "unfolding passive_subset_def active_subset_def"], ["proof (prove)\nusing this:\n  {CL \\<in> Liminf_llist (lmap snd Ns). snd CL \\<noteq> active} = {}\n\ngoal (1 subgoal):\n 1. Liminf_llist (lmap snd Ns) =\n    {CL \\<in> Liminf_llist (lmap snd Ns). snd CL = active}", "by blast"], ["proof (state)\nthis:\n  Liminf_llist (lmap snd Ns) = active_subset (Liminf_llist (lmap snd Ns))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  Liminf_llist (lmap snd Ns) = active_subset (Liminf_llist (lmap snd Ns))", "have i_in2: \"\\<iota> \\<in> Inf_from (active_subset (Liminf_llist (lmap snd Ns)))\""], ["proof (prove)\nusing this:\n  Liminf_llist (lmap snd Ns) = active_subset (Liminf_llist (lmap snd Ns))\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_from (active_subset (Liminf_llist (lmap snd Ns)))", "using i_in"], ["proof (prove)\nusing this:\n  Liminf_llist (lmap snd Ns) = active_subset (Liminf_llist (lmap snd Ns))\n  \\<iota> \\<in> Inf_from (Liminf_llist (lmap snd Ns))\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_from (active_subset (Liminf_llist (lmap snd Ns)))", "by simp"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from (active_subset (Liminf_llist (lmap snd Ns)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "define m where \"m = length (prems_of \\<iota>)\""], ["proof (state)\nthis:\n  m = length (prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  m = length (prems_of \\<iota>)", "have m_def_F: \"m = length (prems_of (to_F \\<iota>))\""], ["proof (prove)\nusing this:\n  m = length (prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. m = length (prems_of (to_F \\<iota>))", "unfolding to_F_def"], ["proof (prove)\nusing this:\n  m = length (prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. m =\n    length\n     (prems_of\n       (Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))))", "by simp"], ["proof (state)\nthis:\n  m = length (prems_of (to_F \\<iota>))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have i_in_F: \"to_F \\<iota> \\<in> Inf_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> Inf_F", "using i_in Inf_FL_to_Inf_F"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (Liminf_llist (lmap snd Ns))\n  ?\\<iota>\\<^sub>F\\<^sub>L \\<in> Inf_FL \\<Longrightarrow>\n  Infer (map fst (prems_of ?\\<iota>\\<^sub>F\\<^sub>L))\n   (fst (concl_of ?\\<iota>\\<^sub>F\\<^sub>L))\n  \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> Inf_F", "unfolding Inf_from_def to_F_def"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>) \\<subseteq> Liminf_llist (lmap snd Ns)}\n  ?\\<iota>\\<^sub>F\\<^sub>L \\<in> Inf_FL \\<Longrightarrow>\n  Infer (map fst (prems_of ?\\<iota>\\<^sub>F\\<^sub>L))\n   (fst (concl_of ?\\<iota>\\<^sub>F\\<^sub>L))\n  \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>)) \\<in> Inf_F", "by blast"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have exist_nj: \"\\<forall>j \\<in> {0..<m}. (\\<exists>nj. enat (Suc nj) < llength Ns \\<and>\n      prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n      (\\<forall>k. k > nj \\<longrightarrow> enat k < llength Ns \\<longrightarrow> prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>{0..<m}.\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "assume j_in: \"j \\<in> {0..<m}\""], ["proof (state)\nthis:\n  j \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "then"], ["proof (chain)\npicking this:\n  j \\<in> {0..<m}", "obtain C where c_is: \"(C, active) = prems_of \\<iota> ! j\""], ["proof (prove)\nusing this:\n  j \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        (C, active) = prems_of \\<iota> ! j \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using i_in2"], ["proof (prove)\nusing this:\n  j \\<in> {0..<m}\n  \\<iota> \\<in> Inf_from (active_subset (Liminf_llist (lmap snd Ns)))\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        (C, active) = prems_of \\<iota> ! j \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding m_def Inf_from_def active_subset_def"], ["proof (prove)\nusing this:\n  j \\<in> {0..<length (prems_of \\<iota>)}\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>)\n         \\<subseteq> {CL \\<in> Liminf_llist (lmap snd Ns). snd CL = active}}\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        (C, active) = prems_of \\<iota> ! j \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (smt Collect_mem_eq Collect_mono_iff atLeastLessThan_iff nth_mem old.prod.exhaust snd_conv)"], ["proof (state)\nthis:\n  (C, active) = prems_of \\<iota> ! j\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "then"], ["proof (chain)\npicking this:\n  (C, active) = prems_of \\<iota> ! j", "have \"(C, active) \\<in> Liminf_llist (lmap snd Ns)\""], ["proof (prove)\nusing this:\n  (C, active) = prems_of \\<iota> ! j\n\ngoal (1 subgoal):\n 1. (C, active) \\<in> Liminf_llist (lmap snd Ns)", "using j_in i_in"], ["proof (prove)\nusing this:\n  (C, active) = prems_of \\<iota> ! j\n  j \\<in> {0..<m}\n  \\<iota> \\<in> Inf_from (Liminf_llist (lmap snd Ns))\n\ngoal (1 subgoal):\n 1. (C, active) \\<in> Liminf_llist (lmap snd Ns)", "unfolding m_def Inf_from_def"], ["proof (prove)\nusing this:\n  (C, active) = prems_of \\<iota> ! j\n  j \\<in> {0..<length (prems_of \\<iota>)}\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>) \\<subseteq> Liminf_llist (lmap snd Ns)}\n\ngoal (1 subgoal):\n 1. (C, active) \\<in> Liminf_llist (lmap snd Ns)", "by force"], ["proof (state)\nthis:\n  (C, active) \\<in> Liminf_llist (lmap snd Ns)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "then"], ["proof (chain)\npicking this:\n  (C, active) \\<in> Liminf_llist (lmap snd Ns)", "obtain nj where nj_is: \"enat nj < llength Ns\" and\n      c_in2: \"(C, active) \\<in> \\<Inter> (snd ` (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\""], ["proof (prove)\nusing this:\n  (C, active) \\<in> Liminf_llist (lmap snd Ns)\n\ngoal (1 subgoal):\n 1. (\\<And>nj.\n        \\<lbrakk>enat nj < llength Ns;\n         (C, active)\n         \\<in> \\<Inter>\n                (snd `\n                 lnth Ns `\n                 {k. nj \\<le> k \\<and> enat k < llength Ns})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Liminf_llist_def"], ["proof (prove)\nusing this:\n  (C, active)\n  \\<in> (\\<Union>i\\<in>{i. enat i < llength (lmap snd Ns)}.\n            \\<Inter>\n             (lnth (lmap snd Ns) `\n              {j. i \\<le> j \\<and> enat j < llength (lmap snd Ns)}))\n\ngoal (1 subgoal):\n 1. (\\<And>nj.\n        \\<lbrakk>enat nj < llength Ns;\n         (C, active)\n         \\<in> \\<Inter>\n                (snd `\n                 lnth Ns `\n                 {k. nj \\<le> k \\<and> enat k < llength Ns})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using init_state"], ["proof (prove)\nusing this:\n  (C, active)\n  \\<in> (\\<Union>i\\<in>{i. enat i < llength (lmap snd Ns)}.\n            \\<Inter>\n             (lnth (lmap snd Ns) `\n              {j. i \\<le> j \\<and> enat j < llength (lmap snd Ns)}))\n  active_subset (snd (lhd Ns)) = {}\n\ngoal (1 subgoal):\n 1. (\\<And>nj.\n        \\<lbrakk>enat nj < llength Ns;\n         (C, active)\n         \\<in> \\<Inter>\n                (snd `\n                 lnth Ns `\n                 {k. nj \\<le> k \\<and> enat k < llength Ns})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  enat nj < llength Ns\n  (C, active)\n  \\<in> \\<Inter>\n         (snd ` lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "then"], ["proof (chain)\npicking this:\n  enat nj < llength Ns\n  (C, active)\n  \\<in> \\<Inter>\n         (snd ` lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})", "have c_in3: \"\\<forall>k. k \\<ge> nj \\<longrightarrow> enat k < llength Ns \\<longrightarrow> (C, active) \\<in> snd (lnth Ns k)\""], ["proof (prove)\nusing this:\n  enat nj < llength Ns\n  (C, active)\n  \\<in> \\<Inter>\n         (snd ` lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>nj.\n       enat k < llength Ns \\<longrightarrow>\n       (C, active) \\<in> snd (lnth Ns k)", "by blast"], ["proof (state)\nthis:\n  \\<forall>k\\<ge>nj.\n     enat k < llength Ns \\<longrightarrow> (C, active) \\<in> snd (lnth Ns k)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "have nj_pos: \"nj > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < nj", "using init_state c_in2 nj_is"], ["proof (prove)\nusing this:\n  active_subset (snd (lhd Ns)) = {}\n  (C, active)\n  \\<in> \\<Inter>\n         (snd ` lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})\n  enat nj < llength Ns\n\ngoal (1 subgoal):\n 1. 0 < nj", "unfolding active_subset_def lhd_is"], ["proof (prove)\nusing this:\n  {CL \\<in> snd (lnth Ns 0). snd CL = active} = {}\n  (C, active)\n  \\<in> \\<Inter>\n         (snd ` lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})\n  enat nj < llength Ns\n\ngoal (1 subgoal):\n 1. 0 < nj", "by fastforce"], ["proof (state)\nthis:\n  0 < nj\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "obtain nj_min where nj_min_is: \"nj_min = (LEAST nj. enat nj < llength Ns \\<and>\n        (C, active) \\<in> \\<Inter> (snd ` (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>nj_min.\n        nj_min =\n        (LEAST nj.\n            enat nj < llength Ns \\<and>\n            (C, active)\n            \\<in> \\<Inter>\n                   (snd `\n                    lnth Ns `\n                    {k. nj \\<le> k \\<and>\n                        enat k < llength Ns})) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  nj_min =\n  (LEAST nj.\n      enat nj < llength Ns \\<and>\n      (C, active)\n      \\<in> \\<Inter>\n             (snd ` lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "then"], ["proof (chain)\npicking this:\n  nj_min =\n  (LEAST nj.\n      enat nj < llength Ns \\<and>\n      (C, active)\n      \\<in> \\<Inter>\n             (snd ` lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))", "have in_allk: \"\\<forall>k. k \\<ge> nj_min \\<longrightarrow> enat k < llength Ns \\<longrightarrow> (C, active) \\<in> snd (lnth Ns k)\""], ["proof (prove)\nusing this:\n  nj_min =\n  (LEAST nj.\n      enat nj < llength Ns \\<and>\n      (C, active)\n      \\<in> \\<Inter>\n             (snd ` lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>nj_min.\n       enat k < llength Ns \\<longrightarrow>\n       (C, active) \\<in> snd (lnth Ns k)", "using c_in3 nj_is c_in2 INT_E LeastI_ex"], ["proof (prove)\nusing this:\n  nj_min =\n  (LEAST nj.\n      enat nj < llength Ns \\<and>\n      (C, active)\n      \\<in> \\<Inter>\n             (snd ` lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\n  \\<forall>k\\<ge>nj.\n     enat k < llength Ns \\<longrightarrow> (C, active) \\<in> snd (lnth Ns k)\n  enat nj < llength Ns\n  (C, active)\n  \\<in> \\<Inter>\n         (snd ` lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})\n  \\<lbrakk>?b \\<in> \\<Inter> (?B ` ?A); ?b \\<in> ?B ?a \\<Longrightarrow> ?R;\n   ?a \\<notin> ?A \\<Longrightarrow> ?R\\<rbrakk>\n  \\<Longrightarrow> ?R\n  \\<exists>x. ?P x \\<Longrightarrow> ?P (Least ?P)\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>nj_min.\n       enat k < llength Ns \\<longrightarrow>\n       (C, active) \\<in> snd (lnth Ns k)", "by (smt INT_iff INT_simps(10) c_is image_eqI mem_Collect_eq)"], ["proof (state)\nthis:\n  \\<forall>k\\<ge>nj_min.\n     enat k < llength Ns \\<longrightarrow> (C, active) \\<in> snd (lnth Ns k)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "have njm_smaller_D: \"enat nj_min < llength Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat nj_min < llength Ns", "using nj_min_is"], ["proof (prove)\nusing this:\n  nj_min =\n  (LEAST nj.\n      enat nj < llength Ns \\<and>\n      (C, active)\n      \\<in> \\<Inter>\n             (snd ` lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\n\ngoal (1 subgoal):\n 1. enat nj_min < llength Ns", "by (smt LeastI_ex \\<open>\\<And>thesis. (\\<And>nj. \\<lbrakk>enat nj < llength Ns;\n          (C, active) \\<in> \\<Inter> (snd ` (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\\<rbrakk> \\<Longrightarrow> thesis) \\<Longrightarrow> thesis\\<close>)"], ["proof (state)\nthis:\n  enat nj_min < llength Ns\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "have \"nj_min > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < nj_min", "using nj_is c_in2 nj_pos nj_min_is lhd_is"], ["proof (prove)\nusing this:\n  enat nj < llength Ns\n  (C, active)\n  \\<in> \\<Inter>\n         (snd ` lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns})\n  0 < nj\n  nj_min =\n  (LEAST nj.\n      enat nj < llength Ns \\<and>\n      (C, active)\n      \\<in> \\<Inter>\n             (snd ` lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\n  lhd Ns = lnth Ns 0\n\ngoal (1 subgoal):\n 1. 0 < nj_min", "by (metis (mono_tags, lifting) active_subset_def emptyE in_allk init_state mem_Collect_eq\n          not_less snd_conv zero_enat_def chain_length_pos[OF deriv])"], ["proof (state)\nthis:\n  0 < nj_min\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "then"], ["proof (chain)\npicking this:\n  0 < nj_min", "obtain njm_prec where nj_prec_is: \"Suc njm_prec = nj_min\""], ["proof (prove)\nusing this:\n  0 < nj_min\n\ngoal (1 subgoal):\n 1. (\\<And>njm_prec.\n        Suc njm_prec = nj_min \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using gr0_conv_Suc"], ["proof (prove)\nusing this:\n  0 < nj_min\n  (0 < ?n) = (\\<exists>m. ?n = Suc m)\n\ngoal (1 subgoal):\n 1. (\\<And>njm_prec.\n        Suc njm_prec = nj_min \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Suc njm_prec = nj_min\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "then"], ["proof (chain)\npicking this:\n  Suc njm_prec = nj_min", "have njm_prec_njm: \"njm_prec < nj_min\""], ["proof (prove)\nusing this:\n  Suc njm_prec = nj_min\n\ngoal (1 subgoal):\n 1. njm_prec < nj_min", "by blast"], ["proof (state)\nthis:\n  njm_prec < nj_min\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "then"], ["proof (chain)\npicking this:\n  njm_prec < nj_min", "have njm_prec_njm_enat: \"enat njm_prec < enat nj_min\""], ["proof (prove)\nusing this:\n  njm_prec < nj_min\n\ngoal (1 subgoal):\n 1. enat njm_prec < enat nj_min", "by simp"], ["proof (state)\nthis:\n  enat njm_prec < enat nj_min\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "have njm_prec_smaller_d: \"njm_prec < llength Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat njm_prec < llength Ns", "using HOL.no_atp(15)[OF njm_smaller_D njm_prec_njm_enat]"], ["proof (prove)\nusing this:\n  enat njm_prec < llength Ns\n\ngoal (1 subgoal):\n 1. enat njm_prec < llength Ns", "."], ["proof (state)\nthis:\n  enat njm_prec < llength Ns\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "have njm_prec_all_suc: \"\\<forall>k>njm_prec. enat k < llength Ns \\<longrightarrow> (C, active) \\<in> snd (lnth Ns k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k>njm_prec.\n       enat k < llength Ns \\<longrightarrow>\n       (C, active) \\<in> snd (lnth Ns k)", "using nj_prec_is in_allk"], ["proof (prove)\nusing this:\n  Suc njm_prec = nj_min\n  \\<forall>k\\<ge>nj_min.\n     enat k < llength Ns \\<longrightarrow> (C, active) \\<in> snd (lnth Ns k)\n\ngoal (1 subgoal):\n 1. \\<forall>k>njm_prec.\n       enat k < llength Ns \\<longrightarrow>\n       (C, active) \\<in> snd (lnth Ns k)", "by simp"], ["proof (state)\nthis:\n  \\<forall>k>njm_prec.\n     enat k < llength Ns \\<longrightarrow> (C, active) \\<in> snd (lnth Ns k)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "have notin_njm_prec: \"(C, active) \\<notin> snd (lnth Ns njm_prec)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, active) \\<notin> snd (lnth Ns njm_prec)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (C, active) \\<notin> snd (lnth Ns njm_prec) \\<Longrightarrow>\n    False", "assume \"\\<not> (C, active) \\<notin> snd (lnth Ns njm_prec)\""], ["proof (state)\nthis:\n  \\<not> (C, active) \\<notin> snd (lnth Ns njm_prec)\n\ngoal (1 subgoal):\n 1. \\<not> (C, active) \\<notin> snd (lnth Ns njm_prec) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (C, active) \\<notin> snd (lnth Ns njm_prec)", "have absurd_hyp: \"(C, active) \\<in> snd (lnth Ns njm_prec)\""], ["proof (prove)\nusing this:\n  \\<not> (C, active) \\<notin> snd (lnth Ns njm_prec)\n\ngoal (1 subgoal):\n 1. (C, active) \\<in> snd (lnth Ns njm_prec)", "by simp"], ["proof (state)\nthis:\n  (C, active) \\<in> snd (lnth Ns njm_prec)\n\ngoal (1 subgoal):\n 1. \\<not> (C, active) \\<notin> snd (lnth Ns njm_prec) \\<Longrightarrow>\n    False", "have prec_smaller: \"enat njm_prec < llength Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat njm_prec < llength Ns", "using nj_min_is nj_prec_is"], ["proof (prove)\nusing this:\n  nj_min =\n  (LEAST nj.\n      enat nj < llength Ns \\<and>\n      (C, active)\n      \\<in> \\<Inter>\n             (snd ` lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\n  Suc njm_prec = nj_min\n\ngoal (1 subgoal):\n 1. enat njm_prec < llength Ns", "by (smt LeastI_ex Suc_leD \\<open>\\<And>thesis. (\\<And>nj. \\<lbrakk>enat nj < llength Ns;\n            (C, active) \\<in> \\<Inter> (snd ` (lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\\<rbrakk> \\<Longrightarrow> thesis) \\<Longrightarrow> thesis\\<close>\n            enat_ord_simps(1) le_eq_less_or_eq le_less_trans)"], ["proof (state)\nthis:\n  enat njm_prec < llength Ns\n\ngoal (1 subgoal):\n 1. \\<not> (C, active) \\<notin> snd (lnth Ns njm_prec) \\<Longrightarrow>\n    False", "have \"(C, active) \\<in> \\<Inter> (snd ` (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (snd `\n            lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (snd `\n            lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (snd `\n            lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (snd `\n            lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "assume k_in: \"njm_prec \\<le> k \\<and> enat k < llength Ns\""], ["proof (state)\nthis:\n  njm_prec \\<le> k \\<and> enat k < llength Ns\n\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (snd `\n            lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "have \"k = njm_prec \\<Longrightarrow> (C, active) \\<in> snd (lnth Ns k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k = njm_prec \\<Longrightarrow> (C, active) \\<in> snd (lnth Ns k)", "using absurd_hyp"], ["proof (prove)\nusing this:\n  (C, active) \\<in> snd (lnth Ns njm_prec)\n\ngoal (1 subgoal):\n 1. k = njm_prec \\<Longrightarrow> (C, active) \\<in> snd (lnth Ns k)", "by simp"], ["proof (state)\nthis:\n  k = njm_prec \\<Longrightarrow> (C, active) \\<in> snd (lnth Ns k)\n\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (snd `\n            lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "moreover"], ["proof (state)\nthis:\n  k = njm_prec \\<Longrightarrow> (C, active) \\<in> snd (lnth Ns k)\n\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (snd `\n            lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "have \"njm_prec < k \\<Longrightarrow> (C, active) \\<in> snd (lnth Ns k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. njm_prec < k \\<Longrightarrow> (C, active) \\<in> snd (lnth Ns k)", "using nj_prec_is in_allk k_in"], ["proof (prove)\nusing this:\n  Suc njm_prec = nj_min\n  \\<forall>k\\<ge>nj_min.\n     enat k < llength Ns \\<longrightarrow> (C, active) \\<in> snd (lnth Ns k)\n  njm_prec \\<le> k \\<and> enat k < llength Ns\n\ngoal (1 subgoal):\n 1. njm_prec < k \\<Longrightarrow> (C, active) \\<in> snd (lnth Ns k)", "by simp"], ["proof (state)\nthis:\n  njm_prec < k \\<Longrightarrow> (C, active) \\<in> snd (lnth Ns k)\n\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (snd `\n            lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "ultimately"], ["proof (chain)\npicking this:\n  k = njm_prec \\<Longrightarrow> (C, active) \\<in> snd (lnth Ns k)\n  njm_prec < k \\<Longrightarrow> (C, active) \\<in> snd (lnth Ns k)", "have \"(C, active) \\<in> snd (lnth Ns k)\""], ["proof (prove)\nusing this:\n  k = njm_prec \\<Longrightarrow> (C, active) \\<in> snd (lnth Ns k)\n  njm_prec < k \\<Longrightarrow> (C, active) \\<in> snd (lnth Ns k)\n\ngoal (1 subgoal):\n 1. (C, active) \\<in> snd (lnth Ns k)", "using k_in"], ["proof (prove)\nusing this:\n  k = njm_prec \\<Longrightarrow> (C, active) \\<in> snd (lnth Ns k)\n  njm_prec < k \\<Longrightarrow> (C, active) \\<in> snd (lnth Ns k)\n  njm_prec \\<le> k \\<and> enat k < llength Ns\n\ngoal (1 subgoal):\n 1. (C, active) \\<in> snd (lnth Ns k)", "by fastforce"], ["proof (state)\nthis:\n  (C, active) \\<in> snd (lnth Ns k)\n\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (snd `\n            lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "}"], ["proof (state)\nthis:\n  njm_prec \\<le> ?k2 \\<and> enat ?k2 < llength Ns \\<Longrightarrow>\n  (C, active) \\<in> snd (lnth Ns ?k2)\n\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (snd `\n            lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "then"], ["proof (chain)\npicking this:\n  njm_prec \\<le> ?k2 \\<and> enat ?k2 < llength Ns \\<Longrightarrow>\n  (C, active) \\<in> snd (lnth Ns ?k2)", "show \"(C, active) \\<in> \\<Inter> (snd ` (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns}))\""], ["proof (prove)\nusing this:\n  njm_prec \\<le> ?k2 \\<and> enat ?k2 < llength Ns \\<Longrightarrow>\n  (C, active) \\<in> snd (lnth Ns ?k2)\n\ngoal (1 subgoal):\n 1. (C, active)\n    \\<in> \\<Inter>\n           (snd `\n            lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "by blast"], ["proof (state)\nthis:\n  (C, active)\n  \\<in> \\<Inter>\n         (snd ` lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (C, active)\n  \\<in> \\<Inter>\n         (snd ` lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})\n\ngoal (1 subgoal):\n 1. \\<not> (C, active) \\<notin> snd (lnth Ns njm_prec) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  (C, active)\n  \\<in> \\<Inter>\n         (snd ` lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "have \"enat njm_prec < llength Ns \\<and>\n          (C, active) \\<in> \\<Inter> (snd ` (lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns}))\""], ["proof (prove)\nusing this:\n  (C, active)\n  \\<in> \\<Inter>\n         (snd ` lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})\n\ngoal (1 subgoal):\n 1. enat njm_prec < llength Ns \\<and>\n    (C, active)\n    \\<in> \\<Inter>\n           (snd `\n            lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "using prec_smaller"], ["proof (prove)\nusing this:\n  (C, active)\n  \\<in> \\<Inter>\n         (snd ` lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})\n  enat njm_prec < llength Ns\n\ngoal (1 subgoal):\n 1. enat njm_prec < llength Ns \\<and>\n    (C, active)\n    \\<in> \\<Inter>\n           (snd `\n            lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "by blast"], ["proof (state)\nthis:\n  enat njm_prec < llength Ns \\<and>\n  (C, active)\n  \\<in> \\<Inter>\n         (snd ` lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})\n\ngoal (1 subgoal):\n 1. \\<not> (C, active) \\<notin> snd (lnth Ns njm_prec) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  enat njm_prec < llength Ns \\<and>\n  (C, active)\n  \\<in> \\<Inter>\n         (snd ` lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})", "show False"], ["proof (prove)\nusing this:\n  enat njm_prec < llength Ns \\<and>\n  (C, active)\n  \\<in> \\<Inter>\n         (snd ` lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})\n\ngoal (1 subgoal):\n 1. False", "using nj_min_is nj_prec_is Orderings.wellorder_class.not_less_Least njm_prec_njm"], ["proof (prove)\nusing this:\n  enat njm_prec < llength Ns \\<and>\n  (C, active)\n  \\<in> \\<Inter>\n         (snd ` lnth Ns ` {k. njm_prec \\<le> k \\<and> enat k < llength Ns})\n  nj_min =\n  (LEAST nj.\n      enat nj < llength Ns \\<and>\n      (C, active)\n      \\<in> \\<Inter>\n             (snd ` lnth Ns ` {k. nj \\<le> k \\<and> enat k < llength Ns}))\n  Suc njm_prec = nj_min\n  ?k < (LEAST x. ?P x) \\<Longrightarrow> \\<not> ?P ?k\n  njm_prec < nj_min\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (C, active) \\<notin> snd (lnth Ns njm_prec)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "then"], ["proof (chain)\npicking this:\n  (C, active) \\<notin> snd (lnth Ns njm_prec)", "have notin_active_subs_njm_prec: \"(C, active) \\<notin> active_subset (snd (lnth Ns njm_prec))\""], ["proof (prove)\nusing this:\n  (C, active) \\<notin> snd (lnth Ns njm_prec)\n\ngoal (1 subgoal):\n 1. (C, active) \\<notin> active_subset (snd (lnth Ns njm_prec))", "unfolding active_subset_def"], ["proof (prove)\nusing this:\n  (C, active) \\<notin> snd (lnth Ns njm_prec)\n\ngoal (1 subgoal):\n 1. (C, active) \\<notin> {CL \\<in> snd (lnth Ns njm_prec). snd CL = active}", "by blast"], ["proof (state)\nthis:\n  (C, active) \\<notin> active_subset (snd (lnth Ns njm_prec))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<m} \\<Longrightarrow>\n       \\<exists>nj.\n          enat (Suc nj) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n          (\\<forall>k>nj.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "then"], ["proof (chain)\npicking this:\n  (C, active) \\<notin> active_subset (snd (lnth Ns njm_prec))", "show \"\\<exists>nj. enat (Suc nj) < llength Ns \\<and> prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n        (\\<forall>k. k > nj \\<longrightarrow> enat k < llength Ns \\<longrightarrow> prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))\""], ["proof (prove)\nusing this:\n  (C, active) \\<notin> active_subset (snd (lnth Ns njm_prec))\n\ngoal (1 subgoal):\n 1. \\<exists>nj.\n       enat (Suc nj) < llength Ns \\<and>\n       prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n       (\\<forall>k>nj.\n           enat k < llength Ns \\<longrightarrow>\n           prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "using c_is njm_prec_all_suc njm_prec_smaller_d"], ["proof (prove)\nusing this:\n  (C, active) \\<notin> active_subset (snd (lnth Ns njm_prec))\n  (C, active) = prems_of \\<iota> ! j\n  \\<forall>k>njm_prec.\n     enat k < llength Ns \\<longrightarrow> (C, active) \\<in> snd (lnth Ns k)\n  enat njm_prec < llength Ns\n\ngoal (1 subgoal):\n 1. \\<exists>nj.\n       enat (Suc nj) < llength Ns \\<and>\n       prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n       (\\<forall>k>nj.\n           enat k < llength Ns \\<longrightarrow>\n           prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))", "by (metis (mono_tags, lifting)\n          active_subset_def mem_Collect_eq nj_prec_is njm_smaller_D snd_conv)"], ["proof (state)\nthis:\n  \\<exists>nj.\n     enat (Suc nj) < llength Ns \\<and>\n     prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n     (\\<forall>k>nj.\n         enat k < llength Ns \\<longrightarrow>\n         prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>j\\<in>{0..<m}.\n     \\<exists>nj.\n        enat (Suc nj) < llength Ns \\<and>\n        prems_of \\<iota> ! j\n        \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n        (\\<forall>k>nj.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "define nj_set where \"nj_set = {nj. (\\<exists>j\\<in>{0..<m}. enat (Suc nj) < llength Ns \\<and>\n      prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n      (\\<forall>k. k > nj \\<longrightarrow> enat k < llength Ns \\<longrightarrow> prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))))}\""], ["proof (state)\nthis:\n  nj_set =\n  {nj.\n   \\<exists>j\\<in>{0..<m}.\n      enat (Suc nj) < llength Ns \\<and>\n      prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n      (\\<forall>k>nj.\n          enat k < llength Ns \\<longrightarrow>\n          prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "{"], ["proof (state)\nthis:\n  nj_set =\n  {nj.\n   \\<exists>j\\<in>{0..<m}.\n      enat (Suc nj) < llength Ns \\<and>\n      prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n      (\\<forall>k>nj.\n          enat k < llength Ns \\<longrightarrow>\n          prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "assume m_null: \"m = 0\""], ["proof (state)\nthis:\n  m = 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  m = 0", "have \"enat 0 < llength Ns \\<and> to_F \\<iota> \\<in> fst (lhd Ns)\""], ["proof (prove)\nusing this:\n  m = 0\n\ngoal (1 subgoal):\n 1. enat 0 < llength Ns \\<and> to_F \\<iota> \\<in> fst (lhd Ns)", "using no_prems_init_active i_in_F m_def_F zero_enat_def chain_length_pos[OF deriv]"], ["proof (prove)\nusing this:\n  m = 0\n  \\<forall>\\<iota>\\<in>Inf_F.\n     prems_of \\<iota> = [] \\<longrightarrow> \\<iota> \\<in> fst (lhd Ns)\n  to_F \\<iota> \\<in> Inf_F\n  m = length (prems_of (to_F \\<iota>))\n  0 = enat 0\n  0 < llength Ns\n\ngoal (1 subgoal):\n 1. enat 0 < llength Ns \\<and> to_F \\<iota> \\<in> fst (lhd Ns)", "by auto"], ["proof (state)\nthis:\n  enat 0 < llength Ns \\<and> to_F \\<iota> \\<in> fst (lhd Ns)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  enat 0 < llength Ns \\<and> to_F \\<iota> \\<in> fst (lhd Ns)", "have \"\\<exists>n. enat n < llength Ns \\<and> to_F \\<iota> \\<in> fst (lnth Ns n)\""], ["proof (prove)\nusing this:\n  enat 0 < llength Ns \\<and> to_F \\<iota> \\<in> fst (lhd Ns)\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       enat n < llength Ns \\<and> to_F \\<iota> \\<in> fst (lnth Ns n)", "unfolding lhd_is"], ["proof (prove)\nusing this:\n  enat 0 < llength Ns \\<and> to_F \\<iota> \\<in> fst (lnth Ns 0)\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       enat n < llength Ns \\<and> to_F \\<iota> \\<in> fst (lnth Ns n)", "by blast"], ["proof (state)\nthis:\n  \\<exists>n. enat n < llength Ns \\<and> to_F \\<iota> \\<in> fst (lnth Ns n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "}"], ["proof (state)\nthis:\n  m = 0 \\<Longrightarrow>\n  \\<exists>n. enat n < llength Ns \\<and> to_F \\<iota> \\<in> fst (lnth Ns n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "moreover"], ["proof (state)\nthis:\n  m = 0 \\<Longrightarrow>\n  \\<exists>n. enat n < llength Ns \\<and> to_F \\<iota> \\<in> fst (lnth Ns n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "{"], ["proof (state)\nthis:\n  m = 0 \\<Longrightarrow>\n  \\<exists>n. enat n < llength Ns \\<and> to_F \\<iota> \\<in> fst (lnth Ns n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "assume m_pos: \"m > 0\""], ["proof (state)\nthis:\n  0 < m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have nj_not_empty: \"nj_set \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nj_set \\<noteq> {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nj_set \\<noteq> {}", "have zero_in: \"0 \\<in> {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in> {0..<m}", "using m_pos"], ["proof (prove)\nusing this:\n  0 < m\n\ngoal (1 subgoal):\n 1. 0 \\<in> {0..<m}", "by simp"], ["proof (state)\nthis:\n  0 \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. nj_set \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  0 \\<in> {0..<m}", "obtain n0 where \"enat (Suc n0) < llength Ns\" and\n        \"prems_of \\<iota> ! 0 \\<notin> active_subset (snd (lnth Ns n0))\" and\n        \"\\<forall>k>n0. enat k < llength Ns \\<longrightarrow> prems_of \\<iota> ! 0 \\<in> active_subset (snd (lnth Ns k))\""], ["proof (prove)\nusing this:\n  0 \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. (\\<And>n0.\n        \\<lbrakk>enat (Suc n0) < llength Ns;\n         prems_of \\<iota> ! 0 \\<notin> active_subset (snd (lnth Ns n0));\n         \\<forall>k>n0.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! 0\n            \\<in> active_subset (snd (lnth Ns k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using exist_nj"], ["proof (prove)\nusing this:\n  0 \\<in> {0..<m}\n  \\<forall>j\\<in>{0..<m}.\n     \\<exists>nj.\n        enat (Suc nj) < llength Ns \\<and>\n        prems_of \\<iota> ! j\n        \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n        (\\<forall>k>nj.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))\n\ngoal (1 subgoal):\n 1. (\\<And>n0.\n        \\<lbrakk>enat (Suc n0) < llength Ns;\n         prems_of \\<iota> ! 0 \\<notin> active_subset (snd (lnth Ns n0));\n         \\<forall>k>n0.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! 0\n            \\<in> active_subset (snd (lnth Ns k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  enat (Suc n0) < llength Ns\n  prems_of \\<iota> ! 0 \\<notin> active_subset (snd (lnth Ns n0))\n  \\<forall>k>n0.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! 0 \\<in> active_subset (snd (lnth Ns k))\n\ngoal (1 subgoal):\n 1. nj_set \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  enat (Suc n0) < llength Ns\n  prems_of \\<iota> ! 0 \\<notin> active_subset (snd (lnth Ns n0))\n  \\<forall>k>n0.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! 0 \\<in> active_subset (snd (lnth Ns k))", "have \"n0 \\<in> nj_set\""], ["proof (prove)\nusing this:\n  enat (Suc n0) < llength Ns\n  prems_of \\<iota> ! 0 \\<notin> active_subset (snd (lnth Ns n0))\n  \\<forall>k>n0.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! 0 \\<in> active_subset (snd (lnth Ns k))\n\ngoal (1 subgoal):\n 1. n0 \\<in> nj_set", "unfolding nj_set_def"], ["proof (prove)\nusing this:\n  enat (Suc n0) < llength Ns\n  prems_of \\<iota> ! 0 \\<notin> active_subset (snd (lnth Ns n0))\n  \\<forall>k>n0.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! 0 \\<in> active_subset (snd (lnth Ns k))\n\ngoal (1 subgoal):\n 1. n0 \\<in> {nj.\n              \\<exists>j\\<in>{0..<m}.\n                 enat (Suc nj) < llength Ns \\<and>\n                 prems_of \\<iota> ! j\n                 \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n                 (\\<forall>k>nj.\n                     enat k < llength Ns \\<longrightarrow>\n                     prems_of \\<iota> ! j\n                     \\<in> active_subset (snd (lnth Ns k)))}", "using zero_in"], ["proof (prove)\nusing this:\n  enat (Suc n0) < llength Ns\n  prems_of \\<iota> ! 0 \\<notin> active_subset (snd (lnth Ns n0))\n  \\<forall>k>n0.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! 0 \\<in> active_subset (snd (lnth Ns k))\n  0 \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. n0 \\<in> {nj.\n              \\<exists>j\\<in>{0..<m}.\n                 enat (Suc nj) < llength Ns \\<and>\n                 prems_of \\<iota> ! j\n                 \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n                 (\\<forall>k>nj.\n                     enat k < llength Ns \\<longrightarrow>\n                     prems_of \\<iota> ! j\n                     \\<in> active_subset (snd (lnth Ns k)))}", "by blast"], ["proof (state)\nthis:\n  n0 \\<in> nj_set\n\ngoal (1 subgoal):\n 1. nj_set \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  n0 \\<in> nj_set", "show \"nj_set \\<noteq> {}\""], ["proof (prove)\nusing this:\n  n0 \\<in> nj_set\n\ngoal (1 subgoal):\n 1. nj_set \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  nj_set \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nj_set \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have nj_finite: \"finite nj_set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite nj_set", "using all_ex_finite_set[OF exist_nj]"], ["proof (prove)\nusing this:\n  \\<forall>n1 n2.\n     \\<forall>j\\<in>{0..<m}.\n        enat (Suc n1) < llength Ns \\<and>\n        prems_of \\<iota> ! j\n        \\<notin> active_subset (snd (lnth Ns n1)) \\<and>\n        (\\<forall>k>n1.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j\n            \\<in> active_subset (snd (lnth Ns k))) \\<longrightarrow>\n        enat (Suc n2) < llength Ns \\<and>\n        prems_of \\<iota> ! j\n        \\<notin> active_subset (snd (lnth Ns n2)) \\<and>\n        (\\<forall>k>n2.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j\n            \\<in> active_subset (snd (lnth Ns k))) \\<longrightarrow>\n        n1 = n2 \\<Longrightarrow>\n  finite\n   {n. \\<exists>j\\<in>{0..<m}.\n          enat (Suc n) < llength Ns \\<and>\n          prems_of \\<iota> ! j\n          \\<notin> active_subset (snd (lnth Ns n)) \\<and>\n          (\\<forall>k>n.\n              enat k < llength Ns \\<longrightarrow>\n              prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))}\n\ngoal (1 subgoal):\n 1. finite nj_set", "by (metis (no_types, lifting) Suc_ile_eq\n          dual_order.strict_implies_order linorder_neqE_nat nj_set_def)"], ["proof (state)\nthis:\n  finite nj_set\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have \"\\<exists>n \\<in> nj_set. \\<forall>nj \\<in> nj_set. nj \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>nj_set. \\<forall>nj\\<in>nj_set. nj \\<le> n", "using nj_not_empty nj_finite"], ["proof (prove)\nusing this:\n  nj_set \\<noteq> {}\n  finite nj_set\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>nj_set. \\<forall>nj\\<in>nj_set. nj \\<le> n", "using Max_ge Max_in"], ["proof (prove)\nusing this:\n  nj_set \\<noteq> {}\n  finite nj_set\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk> \\<Longrightarrow> ?x \\<le> Max ?A\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max ?A \\<in> ?A\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>nj_set. \\<forall>nj\\<in>nj_set. nj \\<le> n", "by blast"], ["proof (state)\nthis:\n  \\<exists>n\\<in>nj_set. \\<forall>nj\\<in>nj_set. nj \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  \\<exists>n\\<in>nj_set. \\<forall>nj\\<in>nj_set. nj \\<le> n", "obtain n where n_in: \"n \\<in> nj_set\" and n_bigger: \"\\<forall>nj \\<in> nj_set. nj \\<le> n\""], ["proof (prove)\nusing this:\n  \\<exists>n\\<in>nj_set. \\<forall>nj\\<in>nj_set. nj \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in> nj_set; \\<forall>nj\\<in>nj_set. nj \\<le> n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  n \\<in> nj_set\n  \\<forall>nj\\<in>nj_set. nj \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  n \\<in> nj_set\n  \\<forall>nj\\<in>nj_set. nj \\<le> n", "obtain j0 where j0_in: \"j0 \\<in> {0..<m}\" and suc_n_length: \"enat (Suc n) < llength Ns\" and\n      j0_notin: \"prems_of \\<iota> ! j0 \\<notin> active_subset (snd (lnth Ns n))\" and\n      j0_allin: \"(\\<forall>k. k > n \\<longrightarrow> enat k < llength Ns \\<longrightarrow>\n          prems_of \\<iota> ! j0 \\<in> active_subset (snd (lnth Ns k)))\""], ["proof (prove)\nusing this:\n  n \\<in> nj_set\n  \\<forall>nj\\<in>nj_set. nj \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>j0.\n        \\<lbrakk>j0 \\<in> {0..<m}; enat (Suc n) < llength Ns;\n         prems_of \\<iota> ! j0 \\<notin> active_subset (snd (lnth Ns n));\n         \\<forall>k>n.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j0\n            \\<in> active_subset (snd (lnth Ns k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding nj_set_def"], ["proof (prove)\nusing this:\n  n \\<in> {nj.\n           \\<exists>j\\<in>{0..<m}.\n              enat (Suc nj) < llength Ns \\<and>\n              prems_of \\<iota> ! j\n              \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n              (\\<forall>k>nj.\n                  enat k < llength Ns \\<longrightarrow>\n                  prems_of \\<iota> ! j\n                  \\<in> active_subset (snd (lnth Ns k)))}\n  \\<forall>nj\\<in>{nj.\n                   \\<exists>j\\<in>{0..<m}.\n                      enat (Suc nj) < llength Ns \\<and>\n                      prems_of \\<iota> ! j\n                      \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n                      (\\<forall>k>nj.\n                          enat k < llength Ns \\<longrightarrow>\n                          prems_of \\<iota> ! j\n                          \\<in> active_subset (snd (lnth Ns k)))}.\n     nj \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>j0.\n        \\<lbrakk>j0 \\<in> {0..<m}; enat (Suc n) < llength Ns;\n         prems_of \\<iota> ! j0 \\<notin> active_subset (snd (lnth Ns n));\n         \\<forall>k>n.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j0\n            \\<in> active_subset (snd (lnth Ns k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  j0 \\<in> {0..<m}\n  enat (Suc n) < llength Ns\n  prems_of \\<iota> ! j0 \\<notin> active_subset (snd (lnth Ns n))\n  \\<forall>k>n.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j0 \\<in> active_subset (snd (lnth Ns k))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "obtain C0 where C0_is: \"prems_of \\<iota> ! j0 = (C0, active)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>C0.\n        prems_of \\<iota> ! j0 = (C0, active) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using j0_in i_in2"], ["proof (prove)\nusing this:\n  j0 \\<in> {0..<m}\n  \\<iota> \\<in> Inf_from (active_subset (Liminf_llist (lmap snd Ns)))\n\ngoal (1 subgoal):\n 1. (\\<And>C0.\n        prems_of \\<iota> ! j0 = (C0, active) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding m_def Inf_from_def active_subset_def"], ["proof (prove)\nusing this:\n  j0 \\<in> {0..<length (prems_of \\<iota>)}\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>)\n         \\<subseteq> {CL \\<in> Liminf_llist (lmap snd Ns). snd CL = active}}\n\ngoal (1 subgoal):\n 1. (\\<And>C0.\n        prems_of \\<iota> ! j0 = (C0, active) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (smt Collect_mem_eq Collect_mono_iff atLeastLessThan_iff nth_mem old.prod.exhaust snd_conv)"], ["proof (state)\nthis:\n  prems_of \\<iota> ! j0 = (C0, active)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  prems_of \\<iota> ! j0 = (C0, active)", "have C0_prems_i: \"(C0, active) \\<in> set (prems_of \\<iota>)\""], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j0 = (C0, active)\n\ngoal (1 subgoal):\n 1. (C0, active) \\<in> set (prems_of \\<iota>)", "using in_set_conv_nth j0_in m_def"], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j0 = (C0, active)\n  (?x \\<in> set ?xs) = (\\<exists>i<length ?xs. ?xs ! i = ?x)\n  j0 \\<in> {0..<m}\n  m = length (prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. (C0, active) \\<in> set (prems_of \\<iota>)", "by force"], ["proof (state)\nthis:\n  (C0, active) \\<in> set (prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have C0_in: \"(C0, active) \\<in> (snd (lnth Ns (Suc n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C0, active) \\<in> snd (lnth Ns (Suc n))", "using C0_is j0_allin suc_n_length"], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j0 = (C0, active)\n  \\<forall>k>n.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j0 \\<in> active_subset (snd (lnth Ns k))\n  enat (Suc n) < llength Ns\n\ngoal (1 subgoal):\n 1. (C0, active) \\<in> snd (lnth Ns (Suc n))", "by (simp add: active_subset_def)"], ["proof (state)\nthis:\n  (C0, active) \\<in> snd (lnth Ns (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have C0_notin: \"(C0, active) \\<notin> (snd (lnth Ns n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C0, active) \\<notin> snd (lnth Ns n)", "using C0_is j0_notin"], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j0 = (C0, active)\n  prems_of \\<iota> ! j0 \\<notin> active_subset (snd (lnth Ns n))\n\ngoal (1 subgoal):\n 1. (C0, active) \\<notin> snd (lnth Ns n)", "unfolding active_subset_def"], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j0 = (C0, active)\n  prems_of \\<iota> ! j0 \\<notin> {CL \\<in> snd (lnth Ns n). snd CL = active}\n\ngoal (1 subgoal):\n 1. (C0, active) \\<notin> snd (lnth Ns n)", "by simp"], ["proof (state)\nthis:\n  (C0, active) \\<notin> snd (lnth Ns n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have step_n: \"lnth Ns n \\<leadsto>LGC lnth Ns (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth Ns n \\<leadsto>LGC lnth Ns (Suc n)", "using deriv chain_lnth_rel n_in"], ["proof (prove)\nusing this:\n  chain (\\<leadsto>LGC) Ns\n  \\<lbrakk>chain ?R ?xs; enat (Suc ?j) < llength ?xs\\<rbrakk>\n  \\<Longrightarrow> ?R (lnth ?xs ?j) (lnth ?xs (Suc ?j))\n  n \\<in> nj_set\n\ngoal (1 subgoal):\n 1. lnth Ns n \\<leadsto>LGC lnth Ns (Suc n)", "unfolding nj_set_def"], ["proof (prove)\nusing this:\n  chain (\\<leadsto>LGC) Ns\n  \\<lbrakk>chain ?R ?xs; enat (Suc ?j) < llength ?xs\\<rbrakk>\n  \\<Longrightarrow> ?R (lnth ?xs ?j) (lnth ?xs (Suc ?j))\n  n \\<in> {nj.\n           \\<exists>j\\<in>{0..<m}.\n              enat (Suc nj) < llength Ns \\<and>\n              prems_of \\<iota> ! j\n              \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n              (\\<forall>k>nj.\n                  enat k < llength Ns \\<longrightarrow>\n                  prems_of \\<iota> ! j\n                  \\<in> active_subset (snd (lnth Ns k)))}\n\ngoal (1 subgoal):\n 1. lnth Ns n \\<leadsto>LGC lnth Ns (Suc n)", "by blast"], ["proof (state)\nthis:\n  lnth Ns n \\<leadsto>LGC lnth Ns (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have is_scheduled: \"\\<exists>T2 T1 T' N1 N C L N2. lnth Ns n = (T1, N1) \\<and> lnth Ns (Suc n) = (T2, N2) \\<and>\n        T2 = T1 \\<union> T' \\<and> N1 = N \\<union> {(C, L)} \\<and> N2 = N \\<union> {(C, active)} \\<and> L \\<noteq> active \\<and>\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>T2 T1 T' N1 N C L N2.\n       lnth Ns n = (T1, N1) \\<and>\n       lnth Ns (Suc n) = (T2, N2) \\<and>\n       T2 = T1 \\<union> T' \\<and>\n       N1 = N \\<union> {(C, L)} \\<and>\n       N2 = N \\<union> {(C, active)} \\<and>\n       L \\<noteq> active \\<and>\n       T' = no_labels.Inf_between (fst ` active_subset N) {C}", "using step.simps[of \"lnth Ns n\" \"lnth Ns (Suc n)\"] step_n C0_in C0_notin"], ["proof (prove)\nusing this:\n  (lnth Ns n \\<leadsto>LGC lnth Ns (Suc n)) =\n  ((\\<exists>N1 N M N2 M' T.\n       lnth Ns n = (T, N1) \\<and>\n       lnth Ns (Suc n) = (T, N2) \\<and>\n       N1 = N \\<union> M \\<and>\n       N2 = N \\<union> M' \\<and>\n       M \\<subseteq> Red_F_\\<G> (N \\<union> M') \\<and>\n       active_subset M' = {}) \\<or>\n   (\\<exists>T2 T1 T' N1 N C L N2.\n       lnth Ns n = (T1, N1) \\<and>\n       lnth Ns (Suc n) = (T2, N2) \\<and>\n       T2 = T1 \\<union> T' \\<and>\n       N1 = N \\<union> {(C, L)} \\<and>\n       N2 = N \\<union> {(C, active)} \\<and>\n       L \\<noteq> active \\<and>\n       T' = no_labels.Inf_between (fst ` active_subset N) {C}) \\<or>\n   (\\<exists>T1 T2 \\<iota> N2 N1 M.\n       lnth Ns n = (T1, N1) \\<and>\n       lnth Ns (Suc n) = (T2, N2) \\<and>\n       T1 = T2 \\<union> {\\<iota>} \\<and>\n       N2 = N1 \\<union> M \\<and>\n       active_subset M = {} \\<and>\n       \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))) \\<or>\n   (\\<exists>T1 T2 T' N.\n       lnth Ns n = (T1, N) \\<and>\n       lnth Ns (Suc n) = (T2, N) \\<and>\n       T1 = T2 \\<union> T' \\<and>\n       T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}))\n  lnth Ns n \\<leadsto>LGC lnth Ns (Suc n)\n  (C0, active) \\<in> snd (lnth Ns (Suc n))\n  (C0, active) \\<notin> snd (lnth Ns n)\n\ngoal (1 subgoal):\n 1. \\<exists>T2 T1 T' N1 N C L N2.\n       lnth Ns n = (T1, N1) \\<and>\n       lnth Ns (Suc n) = (T2, N2) \\<and>\n       T2 = T1 \\<union> T' \\<and>\n       N1 = N \\<union> {(C, L)} \\<and>\n       N2 = N \\<union> {(C, active)} \\<and>\n       L \\<noteq> active \\<and>\n       T' = no_labels.Inf_between (fst ` active_subset N) {C}", "unfolding active_subset_def"], ["proof (prove)\nusing this:\n  (lnth Ns n \\<leadsto>LGC lnth Ns (Suc n)) =\n  ((\\<exists>N1 N M N2 M' T.\n       lnth Ns n = (T, N1) \\<and>\n       lnth Ns (Suc n) = (T, N2) \\<and>\n       N1 = N \\<union> M \\<and>\n       N2 = N \\<union> M' \\<and>\n       M \\<subseteq> Red_F_\\<G> (N \\<union> M') \\<and>\n       {CL \\<in> M'. snd CL = active} = {}) \\<or>\n   (\\<exists>T2 T1 T' N1 N C L N2.\n       lnth Ns n = (T1, N1) \\<and>\n       lnth Ns (Suc n) = (T2, N2) \\<and>\n       T2 = T1 \\<union> T' \\<and>\n       N1 = N \\<union> {(C, L)} \\<and>\n       N2 = N \\<union> {(C, active)} \\<and>\n       L \\<noteq> active \\<and>\n       T' =\n       no_labels.Inf_between (fst ` {CL \\<in> N. snd CL = active})\n        {C}) \\<or>\n   (\\<exists>T1 T2 \\<iota> N2 N1 M.\n       lnth Ns n = (T1, N1) \\<and>\n       lnth Ns (Suc n) = (T2, N2) \\<and>\n       T1 = T2 \\<union> {\\<iota>} \\<and>\n       N2 = N1 \\<union> M \\<and>\n       {CL \\<in> M. snd CL = active} = {} \\<and>\n       \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))) \\<or>\n   (\\<exists>T1 T2 T' N.\n       lnth Ns n = (T1, N) \\<and>\n       lnth Ns (Suc n) = (T2, N) \\<and>\n       T1 = T2 \\<union> T' \\<and>\n       T' \\<inter>\n       no_labels.Inf_from (fst ` {CL \\<in> N. snd CL = active}) =\n       {}))\n  lnth Ns n \\<leadsto>LGC lnth Ns (Suc n)\n  (C0, active) \\<in> snd (lnth Ns (Suc n))\n  (C0, active) \\<notin> snd (lnth Ns n)\n\ngoal (1 subgoal):\n 1. \\<exists>T2 T1 T' N1 N C L N2.\n       lnth Ns n = (T1, N1) \\<and>\n       lnth Ns (Suc n) = (T2, N2) \\<and>\n       T2 = T1 \\<union> T' \\<and>\n       N1 = N \\<union> {(C, L)} \\<and>\n       N2 = N \\<union> {(C, active)} \\<and>\n       L \\<noteq> active \\<and>\n       T' = no_labels.Inf_between (fst ` {CL \\<in> N. snd CL = active}) {C}", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>T2 T1 T' N1 N C L N2.\n     lnth Ns n = (T1, N1) \\<and>\n     lnth Ns (Suc n) = (T2, N2) \\<and>\n     T2 = T1 \\<union> T' \\<and>\n     N1 = N \\<union> {(C, L)} \\<and>\n     N2 = N \\<union> {(C, active)} \\<and>\n     L \\<noteq> active \\<and>\n     T' = no_labels.Inf_between (fst ` active_subset N) {C}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  \\<exists>T2 T1 T' N1 N C L N2.\n     lnth Ns n = (T1, N1) \\<and>\n     lnth Ns (Suc n) = (T2, N2) \\<and>\n     T2 = T1 \\<union> T' \\<and>\n     N1 = N \\<union> {(C, L)} \\<and>\n     N2 = N \\<union> {(C, active)} \\<and>\n     L \\<noteq> active \\<and>\n     T' = no_labels.Inf_between (fst ` active_subset N) {C}", "obtain T2 T1 T' N1 N L N2 where nth_d_is: \"lnth Ns n = (T1, N1)\" and\n      suc_nth_d_is: \"lnth Ns (Suc n) = (T2, N2)\" and t2_is: \"T2 = T1 \\<union> T'\" and\n      n1_is: \"N1 = N \\<union> {(C0, L)}\" \"N2 = N \\<union> {(C0, active)}\" and\n      l_not_active: \"L \\<noteq> active\" and\n      tp_is: \"T' = no_labels.Inf_between (fst ` active_subset N) {C0}\""], ["proof (prove)\nusing this:\n  \\<exists>T2 T1 T' N1 N C L N2.\n     lnth Ns n = (T1, N1) \\<and>\n     lnth Ns (Suc n) = (T2, N2) \\<and>\n     T2 = T1 \\<union> T' \\<and>\n     N1 = N \\<union> {(C, L)} \\<and>\n     N2 = N \\<union> {(C, active)} \\<and>\n     L \\<noteq> active \\<and>\n     T' = no_labels.Inf_between (fst ` active_subset N) {C}\n\ngoal (1 subgoal):\n 1. (\\<And>T1 N1 T2 N2 T' N L.\n        \\<lbrakk>lnth Ns n = (T1, N1); lnth Ns (Suc n) = (T2, N2);\n         T2 = T1 \\<union> T'; N1 = N \\<union> {(C0, L)};\n         N2 = N \\<union> {(C0, active)}; L \\<noteq> active;\n         T' = no_labels.Inf_between (fst ` active_subset N) {C0}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using C0_in C0_notin j0_in C0_is"], ["proof (prove)\nusing this:\n  \\<exists>T2 T1 T' N1 N C L N2.\n     lnth Ns n = (T1, N1) \\<and>\n     lnth Ns (Suc n) = (T2, N2) \\<and>\n     T2 = T1 \\<union> T' \\<and>\n     N1 = N \\<union> {(C, L)} \\<and>\n     N2 = N \\<union> {(C, active)} \\<and>\n     L \\<noteq> active \\<and>\n     T' = no_labels.Inf_between (fst ` active_subset N) {C}\n  (C0, active) \\<in> snd (lnth Ns (Suc n))\n  (C0, active) \\<notin> snd (lnth Ns n)\n  j0 \\<in> {0..<m}\n  prems_of \\<iota> ! j0 = (C0, active)\n\ngoal (1 subgoal):\n 1. (\\<And>T1 N1 T2 N2 T' N L.\n        \\<lbrakk>lnth Ns n = (T1, N1); lnth Ns (Suc n) = (T2, N2);\n         T2 = T1 \\<union> T'; N1 = N \\<union> {(C0, L)};\n         N2 = N \\<union> {(C0, active)}; L \\<noteq> active;\n         T' = no_labels.Inf_between (fst ` active_subset N) {C0}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using active_subset_def"], ["proof (prove)\nusing this:\n  \\<exists>T2 T1 T' N1 N C L N2.\n     lnth Ns n = (T1, N1) \\<and>\n     lnth Ns (Suc n) = (T2, N2) \\<and>\n     T2 = T1 \\<union> T' \\<and>\n     N1 = N \\<union> {(C, L)} \\<and>\n     N2 = N \\<union> {(C, active)} \\<and>\n     L \\<noteq> active \\<and>\n     T' = no_labels.Inf_between (fst ` active_subset N) {C}\n  (C0, active) \\<in> snd (lnth Ns (Suc n))\n  (C0, active) \\<notin> snd (lnth Ns n)\n  j0 \\<in> {0..<m}\n  prems_of \\<iota> ! j0 = (C0, active)\n  active_subset ?M = {CL \\<in> ?M. snd CL = active}\n\ngoal (1 subgoal):\n 1. (\\<And>T1 N1 T2 N2 T' N L.\n        \\<lbrakk>lnth Ns n = (T1, N1); lnth Ns (Suc n) = (T2, N2);\n         T2 = T1 \\<union> T'; N1 = N \\<union> {(C0, L)};\n         N2 = N \\<union> {(C0, active)}; L \\<noteq> active;\n         T' = no_labels.Inf_between (fst ` active_subset N) {C0}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  lnth Ns n = (T1, N1)\n  lnth Ns (Suc n) = (T2, N2)\n  T2 = T1 \\<union> T'\n  N1 = N \\<union> {(C0, L)}\n  N2 = N \\<union> {(C0, active)}\n  L \\<noteq> active\n  T' = no_labels.Inf_between (fst ` active_subset N) {C0}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have \"j \\<in> {0..<m} \\<Longrightarrow> prems_of \\<iota> ! j \\<noteq> prems_of \\<iota> ! j0 \\<Longrightarrow> prems_of \\<iota> ! j \\<in> (active_subset N)\"\n      for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>j \\<in> {0..<m};\n     prems_of \\<iota> ! j \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j \\<in> active_subset N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>j \\<in> {0..<m};\n     prems_of \\<iota> ! j \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j \\<in> active_subset N", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>j__ \\<in> {0..<m};\n     prems_of \\<iota> ! j__ \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j__ \\<in> active_subset N", "assume j_in: \"j \\<in> {0..<m}\" and\n        j_not_j0: \"prems_of \\<iota> ! j \\<noteq> prems_of \\<iota> ! j0\""], ["proof (state)\nthis:\n  j \\<in> {0..<m}\n  prems_of \\<iota> ! j \\<noteq> prems_of \\<iota> ! j0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j__ \\<in> {0..<m};\n     prems_of \\<iota> ! j__ \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j__ \\<in> active_subset N", "obtain nj where nj_len: \"enat (Suc nj) < llength Ns\" and\n        nj_prems: \"prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj))\" and\n        nj_greater: \"(\\<forall>k. k > nj \\<longrightarrow> enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>nj.\n        \\<lbrakk>enat (Suc nj) < llength Ns;\n         prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj));\n         \\<forall>k>nj.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j\n            \\<in> active_subset (snd (lnth Ns k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using exist_nj j_in"], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{0..<m}.\n     \\<exists>nj.\n        enat (Suc nj) < llength Ns \\<and>\n        prems_of \\<iota> ! j\n        \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n        (\\<forall>k>nj.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))\n  j \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. (\\<And>nj.\n        \\<lbrakk>enat (Suc nj) < llength Ns;\n         prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj));\n         \\<forall>k>nj.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j\n            \\<in> active_subset (snd (lnth Ns k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  enat (Suc nj) < llength Ns\n  prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj))\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j__ \\<in> {0..<m};\n     prems_of \\<iota> ! j__ \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j__ \\<in> active_subset N", "then"], ["proof (chain)\npicking this:\n  enat (Suc nj) < llength Ns\n  prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj))\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))", "have \"nj \\<in> nj_set\""], ["proof (prove)\nusing this:\n  enat (Suc nj) < llength Ns\n  prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj))\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))\n\ngoal (1 subgoal):\n 1. nj \\<in> nj_set", "unfolding nj_set_def"], ["proof (prove)\nusing this:\n  enat (Suc nj) < llength Ns\n  prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj))\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))\n\ngoal (1 subgoal):\n 1. nj \\<in> {nj.\n              \\<exists>j\\<in>{0..<m}.\n                 enat (Suc nj) < llength Ns \\<and>\n                 prems_of \\<iota> ! j\n                 \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n                 (\\<forall>k>nj.\n                     enat k < llength Ns \\<longrightarrow>\n                     prems_of \\<iota> ! j\n                     \\<in> active_subset (snd (lnth Ns k)))}", "using j_in"], ["proof (prove)\nusing this:\n  enat (Suc nj) < llength Ns\n  prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj))\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))\n  j \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. nj \\<in> {nj.\n              \\<exists>j\\<in>{0..<m}.\n                 enat (Suc nj) < llength Ns \\<and>\n                 prems_of \\<iota> ! j\n                 \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n                 (\\<forall>k>nj.\n                     enat k < llength Ns \\<longrightarrow>\n                     prems_of \\<iota> ! j\n                     \\<in> active_subset (snd (lnth Ns k)))}", "by blast"], ["proof (state)\nthis:\n  nj \\<in> nj_set\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j__ \\<in> {0..<m};\n     prems_of \\<iota> ! j__ \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j__ \\<in> active_subset N", "moreover"], ["proof (state)\nthis:\n  nj \\<in> nj_set\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j__ \\<in> {0..<m};\n     prems_of \\<iota> ! j__ \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j__ \\<in> active_subset N", "have \"nj \\<noteq> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nj \\<noteq> n", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> nj \\<noteq> n \\<Longrightarrow> False", "assume \"\\<not> nj \\<noteq> n\""], ["proof (state)\nthis:\n  \\<not> nj \\<noteq> n\n\ngoal (1 subgoal):\n 1. \\<not> nj \\<noteq> n \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> nj \\<noteq> n", "have \"prems_of \\<iota> ! j = (C0, active)\""], ["proof (prove)\nusing this:\n  \\<not> nj \\<noteq> n\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j = (C0, active)", "using C0_in C0_notin step.simps[of \"lnth Ns n\" \"lnth Ns (Suc n)\"] step_n\n            active_subset_def is_scheduled nj_greater nj_prems suc_n_length"], ["proof (prove)\nusing this:\n  \\<not> nj \\<noteq> n\n  (C0, active) \\<in> snd (lnth Ns (Suc n))\n  (C0, active) \\<notin> snd (lnth Ns n)\n  (lnth Ns n \\<leadsto>LGC lnth Ns (Suc n)) =\n  ((\\<exists>N1 N M N2 M' T.\n       lnth Ns n = (T, N1) \\<and>\n       lnth Ns (Suc n) = (T, N2) \\<and>\n       N1 = N \\<union> M \\<and>\n       N2 = N \\<union> M' \\<and>\n       M \\<subseteq> Red_F_\\<G> (N \\<union> M') \\<and>\n       active_subset M' = {}) \\<or>\n   (\\<exists>T2 T1 T' N1 N C L N2.\n       lnth Ns n = (T1, N1) \\<and>\n       lnth Ns (Suc n) = (T2, N2) \\<and>\n       T2 = T1 \\<union> T' \\<and>\n       N1 = N \\<union> {(C, L)} \\<and>\n       N2 = N \\<union> {(C, active)} \\<and>\n       L \\<noteq> active \\<and>\n       T' = no_labels.Inf_between (fst ` active_subset N) {C}) \\<or>\n   (\\<exists>T1 T2 \\<iota> N2 N1 M.\n       lnth Ns n = (T1, N1) \\<and>\n       lnth Ns (Suc n) = (T2, N2) \\<and>\n       T1 = T2 \\<union> {\\<iota>} \\<and>\n       N2 = N1 \\<union> M \\<and>\n       active_subset M = {} \\<and>\n       \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))) \\<or>\n   (\\<exists>T1 T2 T' N.\n       lnth Ns n = (T1, N) \\<and>\n       lnth Ns (Suc n) = (T2, N) \\<and>\n       T1 = T2 \\<union> T' \\<and>\n       T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}))\n  lnth Ns n \\<leadsto>LGC lnth Ns (Suc n)\n  active_subset ?M = {CL \\<in> ?M. snd CL = active}\n  \\<exists>T2 T1 T' N1 N C L N2.\n     lnth Ns n = (T1, N1) \\<and>\n     lnth Ns (Suc n) = (T2, N2) \\<and>\n     T2 = T1 \\<union> T' \\<and>\n     N1 = N \\<union> {(C, L)} \\<and>\n     N2 = N \\<union> {(C, active)} \\<and>\n     L \\<noteq> active \\<and>\n     T' = no_labels.Inf_between (fst ` active_subset N) {C}\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))\n  prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj))\n  enat (Suc n) < llength Ns\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j = (C0, active)", "by auto"], ["proof (state)\nthis:\n  prems_of \\<iota> ! j = (C0, active)\n\ngoal (1 subgoal):\n 1. \\<not> nj \\<noteq> n \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  prems_of \\<iota> ! j = (C0, active)", "show False"], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j = (C0, active)\n\ngoal (1 subgoal):\n 1. False", "using j_not_j0 C0_is"], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j = (C0, active)\n  prems_of \\<iota> ! j \\<noteq> prems_of \\<iota> ! j0\n  prems_of \\<iota> ! j0 = (C0, active)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nj \\<noteq> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j__ \\<in> {0..<m};\n     prems_of \\<iota> ! j__ \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j__ \\<in> active_subset N", "ultimately"], ["proof (chain)\npicking this:\n  nj \\<in> nj_set\n  nj \\<noteq> n", "have \"nj < n\""], ["proof (prove)\nusing this:\n  nj \\<in> nj_set\n  nj \\<noteq> n\n\ngoal (1 subgoal):\n 1. nj < n", "using n_bigger"], ["proof (prove)\nusing this:\n  nj \\<in> nj_set\n  nj \\<noteq> n\n  \\<forall>nj\\<in>nj_set. nj \\<le> n\n\ngoal (1 subgoal):\n 1. nj < n", "by force"], ["proof (state)\nthis:\n  nj < n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j__ \\<in> {0..<m};\n     prems_of \\<iota> ! j__ \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j__ \\<in> active_subset N", "then"], ["proof (chain)\npicking this:\n  nj < n", "have \"prems_of \\<iota> ! j \\<in> (active_subset (snd (lnth Ns n)))\""], ["proof (prove)\nusing this:\n  nj < n\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns n))", "using nj_greater n_in Suc_ile_eq dual_order.strict_implies_order"], ["proof (prove)\nusing this:\n  nj < n\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))\n  n \\<in> nj_set\n  (enat (Suc ?m) \\<le> ?n) = (enat ?m < ?n)\n  ?b < ?a \\<Longrightarrow> ?b \\<le> ?a\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns n))", "unfolding nj_set_def"], ["proof (prove)\nusing this:\n  nj < n\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))\n  n \\<in> {nj.\n           \\<exists>j\\<in>{0..<m}.\n              enat (Suc nj) < llength Ns \\<and>\n              prems_of \\<iota> ! j\n              \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n              (\\<forall>k>nj.\n                  enat k < llength Ns \\<longrightarrow>\n                  prems_of \\<iota> ! j\n                  \\<in> active_subset (snd (lnth Ns k)))}\n  (enat (Suc ?m) \\<le> ?n) = (enat ?m < ?n)\n  ?b < ?a \\<Longrightarrow> ?b \\<le> ?a\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns n))", "by blast"], ["proof (state)\nthis:\n  prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns n))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j__ \\<in> {0..<m};\n     prems_of \\<iota> ! j__ \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n    \\<Longrightarrow> prems_of \\<iota> ! j__ \\<in> active_subset N", "then"], ["proof (chain)\npicking this:\n  prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns n))", "show \"prems_of \\<iota> ! j \\<in> (active_subset N)\""], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns n))\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j \\<in> active_subset N", "using nth_d_is l_not_active n1_is"], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns n))\n  lnth Ns n = (T1, N1)\n  L \\<noteq> active\n  N1 = N \\<union> {(C0, L)}\n  N2 = N \\<union> {(C0, active)}\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j \\<in> active_subset N", "unfolding active_subset_def"], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j \\<in> {CL \\<in> snd (lnth Ns n). snd CL = active}\n  lnth Ns n = (T1, N1)\n  L \\<noteq> active\n  N1 = N \\<union> {(C0, L)}\n  N2 = N \\<union> {(C0, active)}\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j \\<in> {CL \\<in> N. snd CL = active}", "by force"], ["proof (state)\nthis:\n  prems_of \\<iota> ! j \\<in> active_subset N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?j \\<in> {0..<m};\n   prems_of \\<iota> ! ?j \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n  \\<Longrightarrow> prems_of \\<iota> ! ?j \\<in> active_subset N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?j \\<in> {0..<m};\n   prems_of \\<iota> ! ?j \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n  \\<Longrightarrow> prems_of \\<iota> ! ?j \\<in> active_subset N", "have prems_i_active: \"set (prems_of \\<iota>) \\<subseteq> active_subset N \\<union> {(C0, active)}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?j \\<in> {0..<m};\n   prems_of \\<iota> ! ?j \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n  \\<Longrightarrow> prems_of \\<iota> ! ?j \\<in> active_subset N\n\ngoal (1 subgoal):\n 1. set (prems_of \\<iota>)\n    \\<subseteq> active_subset N \\<union> {(C0, active)}", "using C0_prems_i C0_is m_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?j \\<in> {0..<m};\n   prems_of \\<iota> ! ?j \\<noteq> prems_of \\<iota> ! j0\\<rbrakk>\n  \\<Longrightarrow> prems_of \\<iota> ! ?j \\<in> active_subset N\n  (C0, active) \\<in> set (prems_of \\<iota>)\n  prems_of \\<iota> ! j0 = (C0, active)\n  m = length (prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. set (prems_of \\<iota>)\n    \\<subseteq> active_subset N \\<union> {(C0, active)}", "by (metis Un_iff atLeast0LessThan in_set_conv_nth insertCI lessThan_iff subrelI)"], ["proof (state)\nthis:\n  set (prems_of \\<iota>) \\<subseteq> active_subset N \\<union> {(C0, active)}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "moreover"], ["proof (state)\nthis:\n  set (prems_of \\<iota>) \\<subseteq> active_subset N \\<union> {(C0, active)}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have \"\\<not> (set (prems_of \\<iota>) \\<subseteq> active_subset N - {(C0, active)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> set (prems_of \\<iota>)\n           \\<subseteq> active_subset N - {(C0, active)}", "using C0_prems_i"], ["proof (prove)\nusing this:\n  (C0, active) \\<in> set (prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. \\<not> set (prems_of \\<iota>)\n           \\<subseteq> active_subset N - {(C0, active)}", "by blast"], ["proof (state)\nthis:\n  \\<not> set (prems_of \\<iota>) \\<subseteq> active_subset N - {(C0, active)}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "ultimately"], ["proof (chain)\npicking this:\n  set (prems_of \\<iota>) \\<subseteq> active_subset N \\<union> {(C0, active)}\n  \\<not> set (prems_of \\<iota>) \\<subseteq> active_subset N - {(C0, active)}", "have \"\\<iota> \\<in> Inf_between (active_subset N) {(C0, active)}\""], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>) \\<subseteq> active_subset N \\<union> {(C0, active)}\n  \\<not> set (prems_of \\<iota>) \\<subseteq> active_subset N - {(C0, active)}\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_between (active_subset N) {(C0, active)}", "using i_in_inf_fl prems_i_active"], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>) \\<subseteq> active_subset N \\<union> {(C0, active)}\n  \\<not> set (prems_of \\<iota>) \\<subseteq> active_subset N - {(C0, active)}\n  \\<iota> \\<in> Inf_FL\n  set (prems_of \\<iota>) \\<subseteq> active_subset N \\<union> {(C0, active)}\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_between (active_subset N) {(C0, active)}", "unfolding Inf_between_def Inf_from_def"], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>) \\<subseteq> active_subset N \\<union> {(C0, active)}\n  \\<not> set (prems_of \\<iota>) \\<subseteq> active_subset N - {(C0, active)}\n  \\<iota> \\<in> Inf_FL\n  set (prems_of \\<iota>) \\<subseteq> active_subset N \\<union> {(C0, active)}\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> {\\<iota> \\<in> Inf_FL.\n           set (prems_of \\<iota>)\n           \\<subseteq> active_subset N \\<union> {(C0, active)}} -\n          {\\<iota> \\<in> Inf_FL.\n           set (prems_of \\<iota>)\n           \\<subseteq> active_subset N - {(C0, active)}}", "by blast"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_between (active_subset N) {(C0, active)}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Inf_between (active_subset N) {(C0, active)}", "have \"to_F \\<iota> \\<in> no_labels.Inf_between (fst ` (active_subset N)) {C0}\""], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_between (active_subset N) {(C0, active)}\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C0}", "unfolding to_F_def Inf_between_def Inf_from_def\n        no_labels.Inf_between_def no_labels.Inf_from_def"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>)\n         \\<subseteq> active_subset N \\<union> {(C0, active)}} -\n        {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>)\n         \\<subseteq> active_subset N - {(C0, active)}}\n\ngoal (1 subgoal):\n 1. Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))\n    \\<in> {\\<iota> \\<in> Inf_F.\n           set (prems_of \\<iota>)\n           \\<subseteq> fst ` active_subset N \\<union> {C0}} -\n          {\\<iota> \\<in> Inf_F.\n           set (prems_of \\<iota>) \\<subseteq> fst ` active_subset N - {C0}}", "using Inf_FL_to_Inf_F"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>)\n         \\<subseteq> active_subset N \\<union> {(C0, active)}} -\n        {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>)\n         \\<subseteq> active_subset N - {(C0, active)}}\n  ?\\<iota>\\<^sub>F\\<^sub>L \\<in> Inf_FL \\<Longrightarrow>\n  Infer (map fst (prems_of ?\\<iota>\\<^sub>F\\<^sub>L))\n   (fst (concl_of ?\\<iota>\\<^sub>F\\<^sub>L))\n  \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))\n    \\<in> {\\<iota> \\<in> Inf_F.\n           set (prems_of \\<iota>)\n           \\<subseteq> fst ` active_subset N \\<union> {C0}} -\n          {\\<iota> \\<in> Inf_F.\n           set (prems_of \\<iota>) \\<subseteq> fst ` active_subset N - {C0}}", "by force"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C0}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C0}", "have i_in_t2: \"to_F \\<iota> \\<in> T2\""], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C0}\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> T2", "using tp_is t2_is"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C0}\n  T' = no_labels.Inf_between (fst ` active_subset N) {C0}\n  T2 = T1 \\<union> T'\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> T2", "by simp"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> T2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have \"j \\<in> {0..<m} \\<Longrightarrow> (\\<forall>k. k > n \\<longrightarrow> enat k < llength Ns \\<longrightarrow>\n        prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<in> {0..<m} \\<Longrightarrow>\n    \\<forall>k>n.\n       enat k < llength Ns \\<longrightarrow>\n       prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))", "proof (cases \"j = j0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>j \\<in> {0..<m}; j = j0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>k>n.\n                         enat k < llength Ns \\<longrightarrow>\n                         prems_of \\<iota> ! j\n                         \\<in> active_subset (snd (lnth Ns k))\n 2. \\<lbrakk>j \\<in> {0..<m}; j \\<noteq> j0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>k>n.\n                         enat k < llength Ns \\<longrightarrow>\n                         prems_of \\<iota> ! j\n                         \\<in> active_subset (snd (lnth Ns k))", "case True"], ["proof (state)\nthis:\n  j = j0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>j \\<in> {0..<m}; j = j0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>k>n.\n                         enat k < llength Ns \\<longrightarrow>\n                         prems_of \\<iota> ! j\n                         \\<in> active_subset (snd (lnth Ns k))\n 2. \\<lbrakk>j \\<in> {0..<m}; j \\<noteq> j0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>k>n.\n                         enat k < llength Ns \\<longrightarrow>\n                         prems_of \\<iota> ! j\n                         \\<in> active_subset (snd (lnth Ns k))", "assume \"j = j0\""], ["proof (state)\nthis:\n  j = j0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>j \\<in> {0..<m}; j = j0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>k>n.\n                         enat k < llength Ns \\<longrightarrow>\n                         prems_of \\<iota> ! j\n                         \\<in> active_subset (snd (lnth Ns k))\n 2. \\<lbrakk>j \\<in> {0..<m}; j \\<noteq> j0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>k>n.\n                         enat k < llength Ns \\<longrightarrow>\n                         prems_of \\<iota> ! j\n                         \\<in> active_subset (snd (lnth Ns k))", "then"], ["proof (chain)\npicking this:\n  j = j0", "show \"(\\<forall>k. k > n \\<longrightarrow> enat k < llength Ns \\<longrightarrow>\n          prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))\""], ["proof (prove)\nusing this:\n  j = j0\n\ngoal (1 subgoal):\n 1. \\<forall>k>n.\n       enat k < llength Ns \\<longrightarrow>\n       prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))", "using j0_allin"], ["proof (prove)\nusing this:\n  j = j0\n  \\<forall>k>n.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j0 \\<in> active_subset (snd (lnth Ns k))\n\ngoal (1 subgoal):\n 1. \\<forall>k>n.\n       enat k < llength Ns \\<longrightarrow>\n       prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))", "by simp"], ["proof (state)\nthis:\n  \\<forall>k>n.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j \\<in> {0..<m}; j \\<noteq> j0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>k>n.\n                         enat k < llength Ns \\<longrightarrow>\n                         prems_of \\<iota> ! j\n                         \\<in> active_subset (snd (lnth Ns k))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>j \\<in> {0..<m}; j \\<noteq> j0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>k>n.\n                         enat k < llength Ns \\<longrightarrow>\n                         prems_of \\<iota> ! j\n                         \\<in> active_subset (snd (lnth Ns k))", "case False"], ["proof (state)\nthis:\n  j \\<noteq> j0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j \\<in> {0..<m}; j \\<noteq> j0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>k>n.\n                         enat k < llength Ns \\<longrightarrow>\n                         prems_of \\<iota> ! j\n                         \\<in> active_subset (snd (lnth Ns k))", "assume j_in: \"j \\<in> {0..<m}\" and\n        \"j \\<noteq> j0\""], ["proof (state)\nthis:\n  j \\<in> {0..<m}\n  j \\<noteq> j0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j \\<in> {0..<m}; j \\<noteq> j0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>k>n.\n                         enat k < llength Ns \\<longrightarrow>\n                         prems_of \\<iota> ! j\n                         \\<in> active_subset (snd (lnth Ns k))", "obtain nj where nj_len: \"enat (Suc nj) < llength Ns\" and\n        nj_prems: \"prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj))\" and\n        nj_greater: \"(\\<forall>k. k > nj \\<longrightarrow> enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>nj.\n        \\<lbrakk>enat (Suc nj) < llength Ns;\n         prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj));\n         \\<forall>k>nj.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j\n            \\<in> active_subset (snd (lnth Ns k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using exist_nj j_in"], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{0..<m}.\n     \\<exists>nj.\n        enat (Suc nj) < llength Ns \\<and>\n        prems_of \\<iota> ! j\n        \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n        (\\<forall>k>nj.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))\n  j \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. (\\<And>nj.\n        \\<lbrakk>enat (Suc nj) < llength Ns;\n         prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj));\n         \\<forall>k>nj.\n            enat k < llength Ns \\<longrightarrow>\n            prems_of \\<iota> ! j\n            \\<in> active_subset (snd (lnth Ns k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  enat (Suc nj) < llength Ns\n  prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj))\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j \\<in> {0..<m}; j \\<noteq> j0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>k>n.\n                         enat k < llength Ns \\<longrightarrow>\n                         prems_of \\<iota> ! j\n                         \\<in> active_subset (snd (lnth Ns k))", "then"], ["proof (chain)\npicking this:\n  enat (Suc nj) < llength Ns\n  prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj))\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))", "have \"nj \\<in> nj_set\""], ["proof (prove)\nusing this:\n  enat (Suc nj) < llength Ns\n  prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj))\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))\n\ngoal (1 subgoal):\n 1. nj \\<in> nj_set", "unfolding nj_set_def"], ["proof (prove)\nusing this:\n  enat (Suc nj) < llength Ns\n  prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj))\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))\n\ngoal (1 subgoal):\n 1. nj \\<in> {nj.\n              \\<exists>j\\<in>{0..<m}.\n                 enat (Suc nj) < llength Ns \\<and>\n                 prems_of \\<iota> ! j\n                 \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n                 (\\<forall>k>nj.\n                     enat k < llength Ns \\<longrightarrow>\n                     prems_of \\<iota> ! j\n                     \\<in> active_subset (snd (lnth Ns k)))}", "using j_in"], ["proof (prove)\nusing this:\n  enat (Suc nj) < llength Ns\n  prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj))\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))\n  j \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. nj \\<in> {nj.\n              \\<exists>j\\<in>{0..<m}.\n                 enat (Suc nj) < llength Ns \\<and>\n                 prems_of \\<iota> ! j\n                 \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n                 (\\<forall>k>nj.\n                     enat k < llength Ns \\<longrightarrow>\n                     prems_of \\<iota> ! j\n                     \\<in> active_subset (snd (lnth Ns k)))}", "by blast"], ["proof (state)\nthis:\n  nj \\<in> nj_set\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j \\<in> {0..<m}; j \\<noteq> j0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>k>n.\n                         enat k < llength Ns \\<longrightarrow>\n                         prems_of \\<iota> ! j\n                         \\<in> active_subset (snd (lnth Ns k))", "then"], ["proof (chain)\npicking this:\n  nj \\<in> nj_set", "show \"(\\<forall>k. k > n \\<longrightarrow> enat k < llength Ns \\<longrightarrow>\n          prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))\""], ["proof (prove)\nusing this:\n  nj \\<in> nj_set\n\ngoal (1 subgoal):\n 1. \\<forall>k>n.\n       enat k < llength Ns \\<longrightarrow>\n       prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))", "using nj_greater n_bigger"], ["proof (prove)\nusing this:\n  nj \\<in> nj_set\n  \\<forall>k>nj.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))\n  \\<forall>nj\\<in>nj_set. nj \\<le> n\n\ngoal (1 subgoal):\n 1. \\<forall>k>n.\n       enat k < llength Ns \\<longrightarrow>\n       prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))", "by auto"], ["proof (state)\nthis:\n  \\<forall>k>n.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?j \\<in> {0..<m} \\<Longrightarrow>\n  \\<forall>k>n.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! ?j \\<in> active_subset (snd (lnth Ns k))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  ?j \\<in> {0..<m} \\<Longrightarrow>\n  \\<forall>k>n.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! ?j \\<in> active_subset (snd (lnth Ns k))", "have allj_allk: \"(\\<forall>c\\<in> set (prems_of \\<iota>). (\\<forall>k. k > n \\<longrightarrow> enat k < llength Ns \\<longrightarrow>\n        c \\<in> active_subset (snd (lnth Ns k))))\""], ["proof (prove)\nusing this:\n  ?j \\<in> {0..<m} \\<Longrightarrow>\n  \\<forall>k>n.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! ?j \\<in> active_subset (snd (lnth Ns k))\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set (prems_of \\<iota>).\n       \\<forall>k>n.\n          enat k < llength Ns \\<longrightarrow>\n          c \\<in> active_subset (snd (lnth Ns k))", "using m_def"], ["proof (prove)\nusing this:\n  ?j \\<in> {0..<m} \\<Longrightarrow>\n  \\<forall>k>n.\n     enat k < llength Ns \\<longrightarrow>\n     prems_of \\<iota> ! ?j \\<in> active_subset (snd (lnth Ns k))\n  m = length (prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set (prems_of \\<iota>).\n       \\<forall>k>n.\n          enat k < llength Ns \\<longrightarrow>\n          c \\<in> active_subset (snd (lnth Ns k))", "by (metis atLeast0LessThan in_set_conv_nth lessThan_iff)"], ["proof (state)\nthis:\n  \\<forall>c\\<in>set (prems_of \\<iota>).\n     \\<forall>k>n.\n        enat k < llength Ns \\<longrightarrow>\n        c \\<in> active_subset (snd (lnth Ns k))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have \"\\<forall>c\\<in> set (prems_of \\<iota>). snd c = active\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set (prems_of \\<iota>). snd c = active", "using prems_i_active"], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>) \\<subseteq> active_subset N \\<union> {(C0, active)}\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set (prems_of \\<iota>). snd c = active", "unfolding active_subset_def"], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>)\n  \\<subseteq> {CL \\<in> N. snd CL = active} \\<union> {(C0, active)}\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set (prems_of \\<iota>). snd c = active", "by auto"], ["proof (state)\nthis:\n  \\<forall>c\\<in>set (prems_of \\<iota>). snd c = active\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>set (prems_of \\<iota>). snd c = active", "have ex_n_i_in: \"\\<exists>n. enat (Suc n) < llength Ns \\<and> to_F \\<iota> \\<in> fst (lnth Ns (Suc n)) \\<and>\n        (\\<forall>c\\<in> set (prems_of \\<iota>). snd c = active) \\<and>\n        (\\<forall>c\\<in> set (prems_of \\<iota>). (\\<forall>k. k > n \\<longrightarrow> enat k < llength Ns \\<longrightarrow>\n          c \\<in> active_subset (snd (lnth Ns k))))\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set (prems_of \\<iota>). snd c = active\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       enat (Suc n) < llength Ns \\<and>\n       to_F \\<iota> \\<in> fst (lnth Ns (Suc n)) \\<and>\n       (\\<forall>c\\<in>set (prems_of \\<iota>). snd c = active) \\<and>\n       (\\<forall>c\\<in>set (prems_of \\<iota>).\n           \\<forall>k>n.\n              enat k < llength Ns \\<longrightarrow>\n              c \\<in> active_subset (snd (lnth Ns k)))", "using allj_allk i_in_t2 suc_nth_d_is fstI n_in nj_set_def"], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set (prems_of \\<iota>). snd c = active\n  \\<forall>c\\<in>set (prems_of \\<iota>).\n     \\<forall>k>n.\n        enat k < llength Ns \\<longrightarrow>\n        c \\<in> active_subset (snd (lnth Ns k))\n  to_F \\<iota> \\<in> T2\n  lnth Ns (Suc n) = (T2, N2)\n  ?x = (?y, ?z) \\<Longrightarrow> fst ?x = ?y\n  n \\<in> nj_set\n  nj_set =\n  {nj.\n   \\<exists>j\\<in>{0..<m}.\n      enat (Suc nj) < llength Ns \\<and>\n      prems_of \\<iota> ! j \\<notin> active_subset (snd (lnth Ns nj)) \\<and>\n      (\\<forall>k>nj.\n          enat k < llength Ns \\<longrightarrow>\n          prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns k)))}\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       enat (Suc n) < llength Ns \\<and>\n       to_F \\<iota> \\<in> fst (lnth Ns (Suc n)) \\<and>\n       (\\<forall>c\\<in>set (prems_of \\<iota>). snd c = active) \\<and>\n       (\\<forall>c\\<in>set (prems_of \\<iota>).\n           \\<forall>k>n.\n              enat k < llength Ns \\<longrightarrow>\n              c \\<in> active_subset (snd (lnth Ns k)))", "by auto"], ["proof (state)\nthis:\n  \\<exists>n.\n     enat (Suc n) < llength Ns \\<and>\n     to_F \\<iota> \\<in> fst (lnth Ns (Suc n)) \\<and>\n     (\\<forall>c\\<in>set (prems_of \\<iota>). snd c = active) \\<and>\n     (\\<forall>c\\<in>set (prems_of \\<iota>).\n         \\<forall>k>n.\n            enat k < llength Ns \\<longrightarrow>\n            c \\<in> active_subset (snd (lnth Ns k)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  \\<exists>n.\n     enat (Suc n) < llength Ns \\<and>\n     to_F \\<iota> \\<in> fst (lnth Ns (Suc n)) \\<and>\n     (\\<forall>c\\<in>set (prems_of \\<iota>). snd c = active) \\<and>\n     (\\<forall>c\\<in>set (prems_of \\<iota>).\n         \\<forall>k>n.\n            enat k < llength Ns \\<longrightarrow>\n            c \\<in> active_subset (snd (lnth Ns k)))", "have \"\\<exists>n. enat n < llength Ns \\<and> to_F \\<iota> \\<in> fst (lnth Ns n) \\<and>\n        (\\<forall>c\\<in> set (prems_of \\<iota>). snd c = active) \\<and> (\\<forall>c\\<in> set (prems_of \\<iota>). (\\<forall>k. k \\<ge> n \\<longrightarrow>\n          enat k < llength Ns \\<longrightarrow> c \\<in> active_subset (snd (lnth Ns k))))\""], ["proof (prove)\nusing this:\n  \\<exists>n.\n     enat (Suc n) < llength Ns \\<and>\n     to_F \\<iota> \\<in> fst (lnth Ns (Suc n)) \\<and>\n     (\\<forall>c\\<in>set (prems_of \\<iota>). snd c = active) \\<and>\n     (\\<forall>c\\<in>set (prems_of \\<iota>).\n         \\<forall>k>n.\n            enat k < llength Ns \\<longrightarrow>\n            c \\<in> active_subset (snd (lnth Ns k)))\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       enat n < llength Ns \\<and>\n       to_F \\<iota> \\<in> fst (lnth Ns n) \\<and>\n       (\\<forall>c\\<in>set (prems_of \\<iota>). snd c = active) \\<and>\n       (\\<forall>c\\<in>set (prems_of \\<iota>).\n           \\<forall>k\\<ge>n.\n              enat k < llength Ns \\<longrightarrow>\n              c \\<in> active_subset (snd (lnth Ns k)))", "by auto"], ["proof (state)\nthis:\n  \\<exists>n.\n     enat n < llength Ns \\<and>\n     to_F \\<iota> \\<in> fst (lnth Ns n) \\<and>\n     (\\<forall>c\\<in>set (prems_of \\<iota>). snd c = active) \\<and>\n     (\\<forall>c\\<in>set (prems_of \\<iota>).\n         \\<forall>k\\<ge>n.\n            enat k < llength Ns \\<longrightarrow>\n            c \\<in> active_subset (snd (lnth Ns k)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "}"], ["proof (state)\nthis:\n  0 < m \\<Longrightarrow>\n  \\<exists>n.\n     enat n < llength Ns \\<and>\n     to_F \\<iota> \\<in> fst (lnth Ns n) \\<and>\n     (\\<forall>c\\<in>set (prems_of \\<iota>). snd c = active) \\<and>\n     (\\<forall>c\\<in>set (prems_of \\<iota>).\n         \\<forall>k\\<ge>n.\n            enat k < llength Ns \\<longrightarrow>\n            c \\<in> active_subset (snd (lnth Ns k)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "ultimately"], ["proof (chain)\npicking this:\n  m = 0 \\<Longrightarrow>\n  \\<exists>n. enat n < llength Ns \\<and> to_F \\<iota> \\<in> fst (lnth Ns n)\n  0 < m \\<Longrightarrow>\n  \\<exists>n.\n     enat n < llength Ns \\<and>\n     to_F \\<iota> \\<in> fst (lnth Ns n) \\<and>\n     (\\<forall>c\\<in>set (prems_of \\<iota>). snd c = active) \\<and>\n     (\\<forall>c\\<in>set (prems_of \\<iota>).\n         \\<forall>k\\<ge>n.\n            enat k < llength Ns \\<longrightarrow>\n            c \\<in> active_subset (snd (lnth Ns k)))", "obtain n T2 N2 where i_in_suc_n: \"to_F \\<iota> \\<in> fst (lnth Ns n)\" and\n    all_prems_active_after: \"m > 0 \\<Longrightarrow> (\\<forall>c\\<in> set (prems_of \\<iota>). (\\<forall>k. k \\<ge> n \\<longrightarrow> enat k < llength Ns \\<longrightarrow>\n                  c \\<in> active_subset (snd (lnth Ns k))))\" and\n    suc_n_length: \"enat n < llength Ns\" and suc_nth_d_is: \"lnth Ns n = (T2, N2)\""], ["proof (prove)\nusing this:\n  m = 0 \\<Longrightarrow>\n  \\<exists>n. enat n < llength Ns \\<and> to_F \\<iota> \\<in> fst (lnth Ns n)\n  0 < m \\<Longrightarrow>\n  \\<exists>n.\n     enat n < llength Ns \\<and>\n     to_F \\<iota> \\<in> fst (lnth Ns n) \\<and>\n     (\\<forall>c\\<in>set (prems_of \\<iota>). snd c = active) \\<and>\n     (\\<forall>c\\<in>set (prems_of \\<iota>).\n         \\<forall>k\\<ge>n.\n            enat k < llength Ns \\<longrightarrow>\n            c \\<in> active_subset (snd (lnth Ns k)))\n\ngoal (1 subgoal):\n 1. (\\<And>n T2 N2.\n        \\<lbrakk>to_F \\<iota> \\<in> fst (lnth Ns n);\n         0 < m \\<Longrightarrow>\n         \\<forall>c\\<in>set (prems_of \\<iota>).\n            \\<forall>k\\<ge>n.\n               enat k < llength Ns \\<longrightarrow>\n               c \\<in> active_subset (snd (lnth Ns k));\n         enat n < llength Ns; lnth Ns n = (T2, N2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis less_antisym old.prod.exhaust zero_less_Suc)"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> fst (lnth Ns n)\n  0 < m \\<Longrightarrow>\n  \\<forall>c\\<in>set (prems_of \\<iota>).\n     \\<forall>k\\<ge>n.\n        enat k < llength Ns \\<longrightarrow>\n        c \\<in> active_subset (snd (lnth Ns k))\n  enat n < llength Ns\n  lnth Ns n = (T2, N2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  to_F \\<iota> \\<in> fst (lnth Ns n)\n  0 < m \\<Longrightarrow>\n  \\<forall>c\\<in>set (prems_of \\<iota>).\n     \\<forall>k\\<ge>n.\n        enat k < llength Ns \\<longrightarrow>\n        c \\<in> active_subset (snd (lnth Ns k))\n  enat n < llength Ns\n  lnth Ns n = (T2, N2)", "have i_in_t2: \"to_F \\<iota> \\<in> T2\""], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> fst (lnth Ns n)\n  0 < m \\<Longrightarrow>\n  \\<forall>c\\<in>set (prems_of \\<iota>).\n     \\<forall>k\\<ge>n.\n        enat k < llength Ns \\<longrightarrow>\n        c \\<in> active_subset (snd (lnth Ns k))\n  enat n < llength Ns\n  lnth Ns n = (T2, N2)\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> T2", "by simp"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> T2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have \"\\<exists>p\\<ge>n. enat (Suc p) < llength Ns \\<and> to_F \\<iota> \\<in> (fst (lnth Ns p)) \\<and> to_F \\<iota> \\<notin> (fst (lnth Ns (Suc p)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p\\<ge>n.\n       enat (Suc p) < llength Ns \\<and>\n       to_F \\<iota> \\<in> fst (lnth Ns p) \\<and>\n       to_F \\<iota> \\<notin> fst (lnth Ns (Suc p))", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p\\<ge>n.\n               enat (Suc p) < llength Ns \\<and>\n               to_F \\<iota> \\<in> fst (lnth Ns p) \\<and>\n               to_F \\<iota>\n               \\<notin> fst (lnth Ns (Suc p))) \\<Longrightarrow>\n    False", "assume\n      contra: \"\\<not> (\\<exists>p\\<ge>n. enat (Suc p) < llength Ns \\<and> to_F \\<iota> \\<in> (fst (lnth Ns p)) \\<and>\n                     to_F \\<iota> \\<notin> (fst (lnth Ns (Suc p))))\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>p\\<ge>n.\n             enat (Suc p) < llength Ns \\<and>\n             to_F \\<iota> \\<in> fst (lnth Ns p) \\<and>\n             to_F \\<iota> \\<notin> fst (lnth Ns (Suc p)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p\\<ge>n.\n               enat (Suc p) < llength Ns \\<and>\n               to_F \\<iota> \\<in> fst (lnth Ns p) \\<and>\n               to_F \\<iota>\n               \\<notin> fst (lnth Ns (Suc p))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>p\\<ge>n.\n             enat (Suc p) < llength Ns \\<and>\n             to_F \\<iota> \\<in> fst (lnth Ns p) \\<and>\n             to_F \\<iota> \\<notin> fst (lnth Ns (Suc p)))", "have i_in_suc: \"p0 \\<ge> n \\<Longrightarrow> enat (Suc p0) < llength Ns \\<Longrightarrow> to_F \\<iota> \\<in> (fst (lnth Ns p0)) \\<Longrightarrow>\n        to_F \\<iota> \\<in> (fst (lnth Ns (Suc p0)))\" for p0"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>p\\<ge>n.\n             enat (Suc p) < llength Ns \\<and>\n             to_F \\<iota> \\<in> fst (lnth Ns p) \\<and>\n             to_F \\<iota> \\<notin> fst (lnth Ns (Suc p)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> p0; enat (Suc p0) < llength Ns;\n     to_F \\<iota> \\<in> fst (lnth Ns p0)\\<rbrakk>\n    \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns (Suc p0))", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>n \\<le> ?p0.0; enat (Suc ?p0.0) < llength Ns;\n   to_F \\<iota> \\<in> fst (lnth Ns ?p0.0)\\<rbrakk>\n  \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns (Suc ?p0.0))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p\\<ge>n.\n               enat (Suc p) < llength Ns \\<and>\n               to_F \\<iota> \\<in> fst (lnth Ns p) \\<and>\n               to_F \\<iota>\n               \\<notin> fst (lnth Ns (Suc p))) \\<Longrightarrow>\n    False", "have \"p0 \\<ge> n \\<Longrightarrow> enat p0 < llength Ns \\<Longrightarrow> to_F \\<iota> \\<in> (fst (lnth Ns p0))\" for p0"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> p0; enat p0 < llength Ns\\<rbrakk>\n    \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns p0)", "proof (induction rule: nat_induct_at_least)"], ["proof (state)\ngoal (2 subgoals):\n 1. enat n < llength Ns \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns n)\n 2. \\<And>na.\n       \\<lbrakk>n \\<le> na;\n        enat na < llength Ns \\<Longrightarrow>\n        to_F \\<iota> \\<in> fst (lnth Ns na);\n        enat (Suc na) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns (Suc na))", "case base"], ["proof (state)\nthis:\n  enat n < llength Ns\n\ngoal (2 subgoals):\n 1. enat n < llength Ns \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns n)\n 2. \\<And>na.\n       \\<lbrakk>n \\<le> na;\n        enat na < llength Ns \\<Longrightarrow>\n        to_F \\<iota> \\<in> fst (lnth Ns na);\n        enat (Suc na) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns (Suc na))", "then"], ["proof (chain)\npicking this:\n  enat n < llength Ns", "show ?case"], ["proof (prove)\nusing this:\n  enat n < llength Ns\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> fst (lnth Ns n)", "using i_in_t2 suc_nth_d_is"], ["proof (prove)\nusing this:\n  enat n < llength Ns\n  to_F \\<iota> \\<in> T2\n  lnth Ns n = (T2, N2)\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> fst (lnth Ns n)", "by simp"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> fst (lnth Ns n)\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na;\n        enat na < llength Ns \\<Longrightarrow>\n        to_F \\<iota> \\<in> fst (lnth Ns na);\n        enat (Suc na) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns (Suc na))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na;\n        enat na < llength Ns \\<Longrightarrow>\n        to_F \\<iota> \\<in> fst (lnth Ns na);\n        enat (Suc na) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns (Suc na))", "case (Suc p0)"], ["proof (state)\nthis:\n  n \\<le> p0\n  enat p0 < llength Ns \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns p0)\n  enat (Suc p0) < llength Ns\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na;\n        enat na < llength Ns \\<Longrightarrow>\n        to_F \\<iota> \\<in> fst (lnth Ns na);\n        enat (Suc na) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns (Suc na))", "assume p_bigger_n: \"n \\<le> p0\" and\n        induct_hyp: \"enat p0 < llength Ns \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns p0)\" and\n        sucsuc_smaller_d: \"enat (Suc p0) < llength Ns\""], ["proof (state)\nthis:\n  n \\<le> p0\n  enat p0 < llength Ns \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns p0)\n  enat (Suc p0) < llength Ns\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na;\n        enat na < llength Ns \\<Longrightarrow>\n        to_F \\<iota> \\<in> fst (lnth Ns na);\n        enat (Suc na) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns (Suc na))", "have suc_p_bigger_n: \"n \\<le> p0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> p0", "using p_bigger_n"], ["proof (prove)\nusing this:\n  n \\<le> p0\n\ngoal (1 subgoal):\n 1. n \\<le> p0", "by simp"], ["proof (state)\nthis:\n  n \\<le> p0\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na;\n        enat na < llength Ns \\<Longrightarrow>\n        to_F \\<iota> \\<in> fst (lnth Ns na);\n        enat (Suc na) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns (Suc na))", "have suc_smaller_d: \"enat p0 < llength Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat p0 < llength Ns", "using sucsuc_smaller_d Suc_ile_eq dual_order.strict_implies_order"], ["proof (prove)\nusing this:\n  enat (Suc p0) < llength Ns\n  (enat (Suc ?m) \\<le> ?n) = (enat ?m < ?n)\n  ?b < ?a \\<Longrightarrow> ?b \\<le> ?a\n\ngoal (1 subgoal):\n 1. enat p0 < llength Ns", "by blast"], ["proof (state)\nthis:\n  enat p0 < llength Ns\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na;\n        enat na < llength Ns \\<Longrightarrow>\n        to_F \\<iota> \\<in> fst (lnth Ns na);\n        enat (Suc na) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns (Suc na))", "then"], ["proof (chain)\npicking this:\n  enat p0 < llength Ns", "have \"to_F \\<iota> \\<in> fst (lnth Ns p0)\""], ["proof (prove)\nusing this:\n  enat p0 < llength Ns\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> fst (lnth Ns p0)", "using induct_hyp"], ["proof (prove)\nusing this:\n  enat p0 < llength Ns\n  enat p0 < llength Ns \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns p0)\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> fst (lnth Ns p0)", "by blast"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> fst (lnth Ns p0)\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na;\n        enat na < llength Ns \\<Longrightarrow>\n        to_F \\<iota> \\<in> fst (lnth Ns na);\n        enat (Suc na) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns (Suc na))", "then"], ["proof (chain)\npicking this:\n  to_F \\<iota> \\<in> fst (lnth Ns p0)", "show ?case"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> fst (lnth Ns p0)\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> fst (lnth Ns (Suc p0))", "using i_in_suc[OF suc_p_bigger_n sucsuc_smaller_d]"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> fst (lnth Ns p0)\n  to_F \\<iota> \\<in> fst (lnth Ns p0) \\<Longrightarrow>\n  to_F \\<iota> \\<in> fst (lnth Ns (Suc p0))\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> fst (lnth Ns (Suc p0))", "by blast"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> fst (lnth Ns (Suc p0))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>n \\<le> ?p0.0; enat ?p0.0 < llength Ns\\<rbrakk>\n  \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns ?p0.0)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p\\<ge>n.\n               enat (Suc p) < llength Ns \\<and>\n               to_F \\<iota> \\<in> fst (lnth Ns p) \\<and>\n               to_F \\<iota>\n               \\<notin> fst (lnth Ns (Suc p))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>n \\<le> ?p0.0; enat ?p0.0 < llength Ns\\<rbrakk>\n  \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns ?p0.0)", "have i_in_all_bigger_n: \"\\<forall>j. j \\<ge> n \\<and> enat j < llength Ns \\<longrightarrow> to_F \\<iota> \\<in> (fst (lnth Ns j))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>n \\<le> ?p0.0; enat ?p0.0 < llength Ns\\<rbrakk>\n  \\<Longrightarrow> to_F \\<iota> \\<in> fst (lnth Ns ?p0.0)\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       n \\<le> j \\<and> enat j < llength Ns \\<longrightarrow>\n       to_F \\<iota> \\<in> fst (lnth Ns j)", "by presburger"], ["proof (state)\nthis:\n  \\<forall>j.\n     n \\<le> j \\<and> enat j < llength Ns \\<longrightarrow>\n     to_F \\<iota> \\<in> fst (lnth Ns j)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p\\<ge>n.\n               enat (Suc p) < llength Ns \\<and>\n               to_F \\<iota> \\<in> fst (lnth Ns p) \\<and>\n               to_F \\<iota>\n               \\<notin> fst (lnth Ns (Suc p))) \\<Longrightarrow>\n    False", "have \"llength (lmap fst Ns) = llength Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. llength (lmap fst Ns) = llength Ns", "by force"], ["proof (state)\nthis:\n  llength (lmap fst Ns) = llength Ns\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p\\<ge>n.\n               enat (Suc p) < llength Ns \\<and>\n               to_F \\<iota> \\<in> fst (lnth Ns p) \\<and>\n               to_F \\<iota>\n               \\<notin> fst (lnth Ns (Suc p))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  llength (lmap fst Ns) = llength Ns", "have \"to_F \\<iota> \\<in> \\<Inter> (lnth (lmap fst Ns) ` {j. n \\<le> j \\<and> enat j < llength (lmap fst Ns)})\""], ["proof (prove)\nusing this:\n  llength (lmap fst Ns) = llength Ns\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<in> \\<Inter>\n           (lnth (lmap fst Ns) `\n            {j. n \\<le> j \\<and> enat j < llength (lmap fst Ns)})", "using i_in_all_bigger_n"], ["proof (prove)\nusing this:\n  llength (lmap fst Ns) = llength Ns\n  \\<forall>j.\n     n \\<le> j \\<and> enat j < llength Ns \\<longrightarrow>\n     to_F \\<iota> \\<in> fst (lnth Ns j)\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<in> \\<Inter>\n           (lnth (lmap fst Ns) `\n            {j. n \\<le> j \\<and> enat j < llength (lmap fst Ns)})", "using Suc_le_D"], ["proof (prove)\nusing this:\n  llength (lmap fst Ns) = llength Ns\n  \\<forall>j.\n     n \\<le> j \\<and> enat j < llength Ns \\<longrightarrow>\n     to_F \\<iota> \\<in> fst (lnth Ns j)\n  Suc ?n \\<le> ?m' \\<Longrightarrow> \\<exists>m. ?m' = Suc m\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<in> \\<Inter>\n           (lnth (lmap fst Ns) `\n            {j. n \\<le> j \\<and> enat j < llength (lmap fst Ns)})", "by auto"], ["proof (state)\nthis:\n  to_F \\<iota>\n  \\<in> \\<Inter>\n         (lnth (lmap fst Ns) `\n          {j. n \\<le> j \\<and> enat j < llength (lmap fst Ns)})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p\\<ge>n.\n               enat (Suc p) < llength Ns \\<and>\n               to_F \\<iota> \\<in> fst (lnth Ns p) \\<and>\n               to_F \\<iota>\n               \\<notin> fst (lnth Ns (Suc p))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  to_F \\<iota>\n  \\<in> \\<Inter>\n         (lnth (lmap fst Ns) `\n          {j. n \\<le> j \\<and> enat j < llength (lmap fst Ns)})", "have \"to_F \\<iota> \\<in> Liminf_llist (lmap fst Ns)\""], ["proof (prove)\nusing this:\n  to_F \\<iota>\n  \\<in> \\<Inter>\n         (lnth (lmap fst Ns) `\n          {j. n \\<le> j \\<and> enat j < llength (lmap fst Ns)})\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> Liminf_llist (lmap fst Ns)", "unfolding Liminf_llist_def"], ["proof (prove)\nusing this:\n  to_F \\<iota>\n  \\<in> \\<Inter>\n         (lnth (lmap fst Ns) `\n          {j. n \\<le> j \\<and> enat j < llength (lmap fst Ns)})\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<in> (\\<Union>i\\<in>{i. enat i < llength (lmap fst Ns)}.\n              \\<Inter>\n               (lnth (lmap fst Ns) `\n                {j. i \\<le> j \\<and> enat j < llength (lmap fst Ns)}))", "using suc_n_length"], ["proof (prove)\nusing this:\n  to_F \\<iota>\n  \\<in> \\<Inter>\n         (lnth (lmap fst Ns) `\n          {j. n \\<le> j \\<and> enat j < llength (lmap fst Ns)})\n  enat n < llength Ns\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<in> (\\<Union>i\\<in>{i. enat i < llength (lmap fst Ns)}.\n              \\<Inter>\n               (lnth (lmap fst Ns) `\n                {j. i \\<le> j \\<and> enat j < llength (lmap fst Ns)}))", "by auto"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> Liminf_llist (lmap fst Ns)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p\\<ge>n.\n               enat (Suc p) < llength Ns \\<and>\n               to_F \\<iota> \\<in> fst (lnth Ns p) \\<and>\n               to_F \\<iota>\n               \\<notin> fst (lnth Ns (Suc p))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  to_F \\<iota> \\<in> Liminf_llist (lmap fst Ns)", "show False"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> Liminf_llist (lmap fst Ns)\n\ngoal (1 subgoal):\n 1. False", "using final_schedule"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> Liminf_llist (lmap fst Ns)\n  Liminf_llist (lmap fst Ns) = {}\n\ngoal (1 subgoal):\n 1. False", "by fast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>p\\<ge>n.\n     enat (Suc p) < llength Ns \\<and>\n     to_F \\<iota> \\<in> fst (lnth Ns p) \\<and>\n     to_F \\<iota> \\<notin> fst (lnth Ns (Suc p))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  \\<exists>p\\<ge>n.\n     enat (Suc p) < llength Ns \\<and>\n     to_F \\<iota> \\<in> fst (lnth Ns p) \\<and>\n     to_F \\<iota> \\<notin> fst (lnth Ns (Suc p))", "obtain p where p_greater_n: \"p \\<ge> n\" and p_smaller_d: \"enat (Suc p) < llength Ns\" and\n    i_in_p: \"to_F \\<iota> \\<in> (fst (lnth Ns p))\" and i_notin_suc_p: \"to_F \\<iota> \\<notin> (fst (lnth Ns (Suc p)))\""], ["proof (prove)\nusing this:\n  \\<exists>p\\<ge>n.\n     enat (Suc p) < llength Ns \\<and>\n     to_F \\<iota> \\<in> fst (lnth Ns p) \\<and>\n     to_F \\<iota> \\<notin> fst (lnth Ns (Suc p))\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>n \\<le> p; enat (Suc p) < llength Ns;\n         to_F \\<iota> \\<in> fst (lnth Ns p);\n         to_F \\<iota> \\<notin> fst (lnth Ns (Suc p))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  n \\<le> p\n  enat (Suc p) < llength Ns\n  to_F \\<iota> \\<in> fst (lnth Ns p)\n  to_F \\<iota> \\<notin> fst (lnth Ns (Suc p))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have p_neq_n: \"Suc p \\<noteq> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc p \\<noteq> n", "using i_notin_suc_p i_in_suc_n"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<notin> fst (lnth Ns (Suc p))\n  to_F \\<iota> \\<in> fst (lnth Ns n)\n\ngoal (1 subgoal):\n 1. Suc p \\<noteq> n", "by blast"], ["proof (state)\nthis:\n  Suc p \\<noteq> n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have step_p: \"lnth Ns p \\<leadsto>LGC lnth Ns (Suc p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth Ns p \\<leadsto>LGC lnth Ns (Suc p)", "using deriv p_smaller_d chain_lnth_rel"], ["proof (prove)\nusing this:\n  chain (\\<leadsto>LGC) Ns\n  enat (Suc p) < llength Ns\n  \\<lbrakk>chain ?R ?xs; enat (Suc ?j) < llength ?xs\\<rbrakk>\n  \\<Longrightarrow> ?R (lnth ?xs ?j) (lnth ?xs (Suc ?j))\n\ngoal (1 subgoal):\n 1. lnth Ns p \\<leadsto>LGC lnth Ns (Suc p)", "by blast"], ["proof (state)\nthis:\n  lnth Ns p \\<leadsto>LGC lnth Ns (Suc p)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  lnth Ns p \\<leadsto>LGC lnth Ns (Suc p)", "have \"\\<exists>T1 T2 \\<iota> N2 N1 M. lnth Ns p = (T1, N1) \\<and> lnth Ns (Suc p) = (T2, N2) \\<and>\n      T1 = T2 \\<union> {\\<iota>} \\<and> N2 = N1 \\<union> M \\<and> active_subset M = {} \\<and>\n      \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\""], ["proof (prove)\nusing this:\n  lnth Ns p \\<leadsto>LGC lnth Ns (Suc p)\n\ngoal (1 subgoal):\n 1. \\<exists>T1 T2 \\<iota> N2 N1 M.\n       lnth Ns p = (T1, N1) \\<and>\n       lnth Ns (Suc p) = (T2, N2) \\<and>\n       T1 = T2 \\<union> {\\<iota>} \\<and>\n       N2 = N1 \\<union> M \\<and>\n       active_subset M = {} \\<and>\n       \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lnth Ns p \\<leadsto>LGC lnth Ns (Suc p) \\<Longrightarrow>\n    \\<exists>T1 T2 \\<iota> N2 N1 M.\n       lnth Ns p = (T1, N1) \\<and>\n       lnth Ns (Suc p) = (T2, N2) \\<and>\n       T1 = T2 \\<union> {\\<iota>} \\<and>\n       N2 = N1 \\<union> M \\<and>\n       active_subset M = {} \\<and>\n       \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))", "have ci_or_do: \"(\\<exists>T1 T2 \\<iota> N2 N1 M. lnth Ns p = (T1, N1) \\<and> lnth Ns (Suc p) = (T2, N2) \\<and>\n        T1 = T2 \\<union> {\\<iota>} \\<and> N2 = N1 \\<union> M \\<and> active_subset M = {} \\<and>\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))) \\<or>\n        (\\<exists>T1 T2 T' N. lnth Ns p = (T1, N) \\<and> lnth Ns (Suc p) = (T2, N) \\<and>\n        T1 = T2 \\<union> T' \\<and> T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>T1 T2 \\<iota> N2 N1 M.\n        lnth Ns p = (T1, N1) \\<and>\n        lnth Ns (Suc p) = (T2, N2) \\<and>\n        T1 = T2 \\<union> {\\<iota>} \\<and>\n        N2 = N1 \\<union> M \\<and>\n        active_subset M = {} \\<and>\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))) \\<or>\n    (\\<exists>T1 T2 T' N.\n        lnth Ns p = (T1, N) \\<and>\n        lnth Ns (Suc p) = (T2, N) \\<and>\n        T1 = T2 \\<union> T' \\<and>\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {})", "using step.simps[of \"lnth Ns p\" \"lnth Ns (Suc p)\"] step_p i_in_p i_notin_suc_p"], ["proof (prove)\nusing this:\n  (lnth Ns p \\<leadsto>LGC lnth Ns (Suc p)) =\n  ((\\<exists>N1 N M N2 M' T.\n       lnth Ns p = (T, N1) \\<and>\n       lnth Ns (Suc p) = (T, N2) \\<and>\n       N1 = N \\<union> M \\<and>\n       N2 = N \\<union> M' \\<and>\n       M \\<subseteq> Red_F_\\<G> (N \\<union> M') \\<and>\n       active_subset M' = {}) \\<or>\n   (\\<exists>T2 T1 T' N1 N C L N2.\n       lnth Ns p = (T1, N1) \\<and>\n       lnth Ns (Suc p) = (T2, N2) \\<and>\n       T2 = T1 \\<union> T' \\<and>\n       N1 = N \\<union> {(C, L)} \\<and>\n       N2 = N \\<union> {(C, active)} \\<and>\n       L \\<noteq> active \\<and>\n       T' = no_labels.Inf_between (fst ` active_subset N) {C}) \\<or>\n   (\\<exists>T1 T2 \\<iota> N2 N1 M.\n       lnth Ns p = (T1, N1) \\<and>\n       lnth Ns (Suc p) = (T2, N2) \\<and>\n       T1 = T2 \\<union> {\\<iota>} \\<and>\n       N2 = N1 \\<union> M \\<and>\n       active_subset M = {} \\<and>\n       \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))) \\<or>\n   (\\<exists>T1 T2 T' N.\n       lnth Ns p = (T1, N) \\<and>\n       lnth Ns (Suc p) = (T2, N) \\<and>\n       T1 = T2 \\<union> T' \\<and>\n       T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}))\n  lnth Ns p \\<leadsto>LGC lnth Ns (Suc p)\n  to_F \\<iota> \\<in> fst (lnth Ns p)\n  to_F \\<iota> \\<notin> fst (lnth Ns (Suc p))\n\ngoal (1 subgoal):\n 1. (\\<exists>T1 T2 \\<iota> N2 N1 M.\n        lnth Ns p = (T1, N1) \\<and>\n        lnth Ns (Suc p) = (T2, N2) \\<and>\n        T1 = T2 \\<union> {\\<iota>} \\<and>\n        N2 = N1 \\<union> M \\<and>\n        active_subset M = {} \\<and>\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))) \\<or>\n    (\\<exists>T1 T2 T' N.\n        lnth Ns p = (T1, N) \\<and>\n        lnth Ns (Suc p) = (T2, N) \\<and>\n        T1 = T2 \\<union> T' \\<and>\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {})", "by fastforce"], ["proof (state)\nthis:\n  (\\<exists>T1 T2 \\<iota> N2 N1 M.\n      lnth Ns p = (T1, N1) \\<and>\n      lnth Ns (Suc p) = (T2, N2) \\<and>\n      T1 = T2 \\<union> {\\<iota>} \\<and>\n      N2 = N1 \\<union> M \\<and>\n      active_subset M = {} \\<and>\n      \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))) \\<or>\n  (\\<exists>T1 T2 T' N.\n      lnth Ns p = (T1, N) \\<and>\n      lnth Ns (Suc p) = (T2, N) \\<and>\n      T1 = T2 \\<union> T' \\<and>\n      T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {})\n\ngoal (1 subgoal):\n 1. lnth Ns p \\<leadsto>LGC lnth Ns (Suc p) \\<Longrightarrow>\n    \\<exists>T1 T2 \\<iota> N2 N1 M.\n       lnth Ns p = (T1, N1) \\<and>\n       lnth Ns (Suc p) = (T2, N2) \\<and>\n       T1 = T2 \\<union> {\\<iota>} \\<and>\n       N2 = N1 \\<union> M \\<and>\n       active_subset M = {} \\<and>\n       \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))", "then"], ["proof (chain)\npicking this:\n  (\\<exists>T1 T2 \\<iota> N2 N1 M.\n      lnth Ns p = (T1, N1) \\<and>\n      lnth Ns (Suc p) = (T2, N2) \\<and>\n      T1 = T2 \\<union> {\\<iota>} \\<and>\n      N2 = N1 \\<union> M \\<and>\n      active_subset M = {} \\<and>\n      \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))) \\<or>\n  (\\<exists>T1 T2 T' N.\n      lnth Ns p = (T1, N) \\<and>\n      lnth Ns (Suc p) = (T2, N) \\<and>\n      T1 = T2 \\<union> T' \\<and>\n      T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {})", "have p_greater_n_strict: \"n < Suc p\""], ["proof (prove)\nusing this:\n  (\\<exists>T1 T2 \\<iota> N2 N1 M.\n      lnth Ns p = (T1, N1) \\<and>\n      lnth Ns (Suc p) = (T2, N2) \\<and>\n      T1 = T2 \\<union> {\\<iota>} \\<and>\n      N2 = N1 \\<union> M \\<and>\n      active_subset M = {} \\<and>\n      \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))) \\<or>\n  (\\<exists>T1 T2 T' N.\n      lnth Ns p = (T1, N) \\<and>\n      lnth Ns (Suc p) = (T2, N) \\<and>\n      T1 = T2 \\<union> T' \\<and>\n      T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {})\n\ngoal (1 subgoal):\n 1. n < Suc p", "using suc_nth_d_is p_greater_n i_in_t2 i_notin_suc_p le_eq_less_or_eq"], ["proof (prove)\nusing this:\n  (\\<exists>T1 T2 \\<iota> N2 N1 M.\n      lnth Ns p = (T1, N1) \\<and>\n      lnth Ns (Suc p) = (T2, N2) \\<and>\n      T1 = T2 \\<union> {\\<iota>} \\<and>\n      N2 = N1 \\<union> M \\<and>\n      active_subset M = {} \\<and>\n      \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))) \\<or>\n  (\\<exists>T1 T2 T' N.\n      lnth Ns p = (T1, N) \\<and>\n      lnth Ns (Suc p) = (T2, N) \\<and>\n      T1 = T2 \\<union> T' \\<and>\n      T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {})\n  lnth Ns n = (T2, N2)\n  n \\<le> p\n  to_F \\<iota> \\<in> T2\n  to_F \\<iota> \\<notin> fst (lnth Ns (Suc p))\n  (?m \\<le> ?n) = (?m < ?n \\<or> ?m = ?n)\n\ngoal (1 subgoal):\n 1. n < Suc p", "by force"], ["proof (state)\nthis:\n  n < Suc p\n\ngoal (1 subgoal):\n 1. lnth Ns p \\<leadsto>LGC lnth Ns (Suc p) \\<Longrightarrow>\n    \\<exists>T1 T2 \\<iota> N2 N1 M.\n       lnth Ns p = (T1, N1) \\<and>\n       lnth Ns (Suc p) = (T2, N2) \\<and>\n       T1 = T2 \\<union> {\\<iota>} \\<and>\n       N2 = N1 \\<union> M \\<and>\n       active_subset M = {} \\<and>\n       \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))", "have \"m > 0 \\<Longrightarrow> j \\<in> {0..<m} \\<Longrightarrow> prems_of (to_F \\<iota>) ! j \\<in> fst ` active_subset (snd (lnth Ns p))\"\n      for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; j \\<in> {0..<m}\\<rbrakk>\n    \\<Longrightarrow> prems_of (to_F \\<iota>) ! j\n                      \\<in> fst ` active_subset (snd (lnth Ns p))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; j \\<in> {0..<m}\\<rbrakk>\n    \\<Longrightarrow> prems_of (to_F \\<iota>) ! j\n                      \\<in> fst ` active_subset (snd (lnth Ns p))", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; j__ \\<in> {0..<m}\\<rbrakk>\n    \\<Longrightarrow> prems_of (to_F \\<iota>) ! j__\n                      \\<in> fst ` active_subset (snd (lnth Ns p))", "assume\n        m_pos: \"m > 0\" and\n        j_in: \"j \\<in> {0..<m}\""], ["proof (state)\nthis:\n  0 < m\n  j \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; j__ \\<in> {0..<m}\\<rbrakk>\n    \\<Longrightarrow> prems_of (to_F \\<iota>) ! j__\n                      \\<in> fst ` active_subset (snd (lnth Ns p))", "then"], ["proof (chain)\npicking this:\n  0 < m\n  j \\<in> {0..<m}", "have \"prems_of \\<iota> ! j \\<in> (active_subset (snd (lnth Ns p)))\""], ["proof (prove)\nusing this:\n  0 < m\n  j \\<in> {0..<m}\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns p))", "using all_prems_active_after[OF m_pos] p_smaller_d m_def p_greater_n p_neq_n"], ["proof (prove)\nusing this:\n  0 < m\n  j \\<in> {0..<m}\n  \\<forall>c\\<in>set (prems_of \\<iota>).\n     \\<forall>k\\<ge>n.\n        enat k < llength Ns \\<longrightarrow>\n        c \\<in> active_subset (snd (lnth Ns k))\n  enat (Suc p) < llength Ns\n  m = length (prems_of \\<iota>)\n  n \\<le> p\n  Suc p \\<noteq> n\n\ngoal (1 subgoal):\n 1. prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns p))", "by (meson Suc_ile_eq atLeastLessThan_iff dual_order.strict_implies_order nth_mem\n            p_greater_n_strict)"], ["proof (state)\nthis:\n  prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns p))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; j__ \\<in> {0..<m}\\<rbrakk>\n    \\<Longrightarrow> prems_of (to_F \\<iota>) ! j__\n                      \\<in> fst ` active_subset (snd (lnth Ns p))", "then"], ["proof (chain)\npicking this:\n  prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns p))", "have \"fst (prems_of \\<iota> ! j) \\<in> fst ` active_subset (snd (lnth Ns p))\""], ["proof (prove)\nusing this:\n  prems_of \\<iota> ! j \\<in> active_subset (snd (lnth Ns p))\n\ngoal (1 subgoal):\n 1. fst (prems_of \\<iota> ! j) \\<in> fst ` active_subset (snd (lnth Ns p))", "by blast"], ["proof (state)\nthis:\n  fst (prems_of \\<iota> ! j) \\<in> fst ` active_subset (snd (lnth Ns p))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; j__ \\<in> {0..<m}\\<rbrakk>\n    \\<Longrightarrow> prems_of (to_F \\<iota>) ! j__\n                      \\<in> fst ` active_subset (snd (lnth Ns p))", "then"], ["proof (chain)\npicking this:\n  fst (prems_of \\<iota> ! j) \\<in> fst ` active_subset (snd (lnth Ns p))", "show \"prems_of (to_F \\<iota>) ! j \\<in> fst ` active_subset (snd (lnth Ns p))\""], ["proof (prove)\nusing this:\n  fst (prems_of \\<iota> ! j) \\<in> fst ` active_subset (snd (lnth Ns p))\n\ngoal (1 subgoal):\n 1. prems_of (to_F \\<iota>) ! j \\<in> fst ` active_subset (snd (lnth Ns p))", "unfolding to_F_def"], ["proof (prove)\nusing this:\n  fst (prems_of \\<iota> ! j) \\<in> fst ` active_subset (snd (lnth Ns p))\n\ngoal (1 subgoal):\n 1. prems_of (Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))) !\n    j\n    \\<in> fst ` active_subset (snd (lnth Ns p))", "using j_in m_def"], ["proof (prove)\nusing this:\n  fst (prems_of \\<iota> ! j) \\<in> fst ` active_subset (snd (lnth Ns p))\n  j \\<in> {0..<m}\n  m = length (prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. prems_of (Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))) !\n    j\n    \\<in> fst ` active_subset (snd (lnth Ns p))", "by simp"], ["proof (state)\nthis:\n  prems_of (to_F \\<iota>) ! j \\<in> fst ` active_subset (snd (lnth Ns p))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>0 < m; ?j \\<in> {0..<m}\\<rbrakk>\n  \\<Longrightarrow> prems_of (to_F \\<iota>) ! ?j\n                    \\<in> fst ` active_subset (snd (lnth Ns p))\n\ngoal (1 subgoal):\n 1. lnth Ns p \\<leadsto>LGC lnth Ns (Suc p) \\<Longrightarrow>\n    \\<exists>T1 T2 \\<iota> N2 N1 M.\n       lnth Ns p = (T1, N1) \\<and>\n       lnth Ns (Suc p) = (T2, N2) \\<and>\n       T1 = T2 \\<union> {\\<iota>} \\<and>\n       N2 = N1 \\<union> M \\<and>\n       active_subset M = {} \\<and>\n       \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < m; ?j \\<in> {0..<m}\\<rbrakk>\n  \\<Longrightarrow> prems_of (to_F \\<iota>) ! ?j\n                    \\<in> fst ` active_subset (snd (lnth Ns p))", "have prems_i_active_p: \"m > 0 \\<Longrightarrow>\n        to_F \\<iota> \\<in> no_labels.Inf_from (fst ` active_subset (snd (lnth Ns p)))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < m; ?j \\<in> {0..<m}\\<rbrakk>\n  \\<Longrightarrow> prems_of (to_F \\<iota>) ! ?j\n                    \\<in> fst ` active_subset (snd (lnth Ns p))\n\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow>\n    to_F \\<iota>\n    \\<in> no_labels.Inf_from (fst ` active_subset (snd (lnth Ns p)))", "using i_in_F"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < m; ?j \\<in> {0..<m}\\<rbrakk>\n  \\<Longrightarrow> prems_of (to_F \\<iota>) ! ?j\n                    \\<in> fst ` active_subset (snd (lnth Ns p))\n  to_F \\<iota> \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow>\n    to_F \\<iota>\n    \\<in> no_labels.Inf_from (fst ` active_subset (snd (lnth Ns p)))", "unfolding no_labels.Inf_from_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < m; ?j \\<in> {0..<m}\\<rbrakk>\n  \\<Longrightarrow> prems_of (to_F \\<iota>) ! ?j\n                    \\<in> fst ` active_subset (snd (lnth Ns p))\n  to_F \\<iota> \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow>\n    to_F \\<iota>\n    \\<in> {\\<iota> \\<in> Inf_F.\n           set (prems_of \\<iota>)\n           \\<subseteq> fst ` active_subset (snd (lnth Ns p))}", "by (smt atLeast0LessThan in_set_conv_nth lessThan_iff m_def_F mem_Collect_eq subsetI)"], ["proof (state)\nthis:\n  0 < m \\<Longrightarrow>\n  to_F \\<iota>\n  \\<in> no_labels.Inf_from (fst ` active_subset (snd (lnth Ns p)))\n\ngoal (1 subgoal):\n 1. lnth Ns p \\<leadsto>LGC lnth Ns (Suc p) \\<Longrightarrow>\n    \\<exists>T1 T2 \\<iota> N2 N1 M.\n       lnth Ns p = (T1, N1) \\<and>\n       lnth Ns (Suc p) = (T2, N2) \\<and>\n       T1 = T2 \\<union> {\\<iota>} \\<and>\n       N2 = N1 \\<union> M \\<and>\n       active_subset M = {} \\<and>\n       \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))", "have \"m = 0 \\<Longrightarrow> (\\<exists>T1 T2 \\<iota> N2 N1 M. lnth Ns p = (T1, N1) \\<and> lnth Ns (Suc p) = (T2, N2) \\<and>\n        T1 = T2 \\<union> {\\<iota>} \\<and> N2 = N1 \\<union> M \\<and> active_subset M = {} \\<and>\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m = 0 \\<Longrightarrow>\n    \\<exists>T1 T2 \\<iota> N2 N1 M.\n       lnth Ns p = (T1, N1) \\<and>\n       lnth Ns (Suc p) = (T2, N2) \\<and>\n       T1 = T2 \\<union> {\\<iota>} \\<and>\n       N2 = N1 \\<union> M \\<and>\n       active_subset M = {} \\<and>\n       \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))", "using ci_or_do premise_free_inf_always_from[of \"to_F \\<iota>\" \"fst ` active_subset _\", OF i_in_F]\n        m_def i_in_p i_notin_suc_p m_def_F"], ["proof (prove)\nusing this:\n  (\\<exists>T1 T2 \\<iota> N2 N1 M.\n      lnth Ns p = (T1, N1) \\<and>\n      lnth Ns (Suc p) = (T2, N2) \\<and>\n      T1 = T2 \\<union> {\\<iota>} \\<and>\n      N2 = N1 \\<union> M \\<and>\n      active_subset M = {} \\<and>\n      \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))) \\<or>\n  (\\<exists>T1 T2 T' N.\n      lnth Ns p = (T1, N) \\<and>\n      lnth Ns (Suc p) = (T2, N) \\<and>\n      T1 = T2 \\<union> T' \\<and>\n      T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {})\n  prems_of (to_F \\<iota>) = [] \\<Longrightarrow>\n  to_F \\<iota> \\<in> no_labels.Inf_from (fst ` active_subset ?uu3)\n  m = length (prems_of \\<iota>)\n  to_F \\<iota> \\<in> fst (lnth Ns p)\n  to_F \\<iota> \\<notin> fst (lnth Ns (Suc p))\n  m = length (prems_of (to_F \\<iota>))\n\ngoal (1 subgoal):\n 1. m = 0 \\<Longrightarrow>\n    \\<exists>T1 T2 \\<iota> N2 N1 M.\n       lnth Ns p = (T1, N1) \\<and>\n       lnth Ns (Suc p) = (T2, N2) \\<and>\n       T1 = T2 \\<union> {\\<iota>} \\<and>\n       N2 = N1 \\<union> M \\<and>\n       active_subset M = {} \\<and>\n       \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))", "by auto"], ["proof (state)\nthis:\n  m = 0 \\<Longrightarrow>\n  \\<exists>T1 T2 \\<iota> N2 N1 M.\n     lnth Ns p = (T1, N1) \\<and>\n     lnth Ns (Suc p) = (T2, N2) \\<and>\n     T1 = T2 \\<union> {\\<iota>} \\<and>\n     N2 = N1 \\<union> M \\<and>\n     active_subset M = {} \\<and>\n     \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\n\ngoal (1 subgoal):\n 1. lnth Ns p \\<leadsto>LGC lnth Ns (Suc p) \\<Longrightarrow>\n    \\<exists>T1 T2 \\<iota> N2 N1 M.\n       lnth Ns p = (T1, N1) \\<and>\n       lnth Ns (Suc p) = (T2, N2) \\<and>\n       T1 = T2 \\<union> {\\<iota>} \\<and>\n       N2 = N1 \\<union> M \\<and>\n       active_subset M = {} \\<and>\n       \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))", "then"], ["proof (chain)\npicking this:\n  m = 0 \\<Longrightarrow>\n  \\<exists>T1 T2 \\<iota> N2 N1 M.\n     lnth Ns p = (T1, N1) \\<and>\n     lnth Ns (Suc p) = (T2, N2) \\<and>\n     T1 = T2 \\<union> {\\<iota>} \\<and>\n     N2 = N1 \\<union> M \\<and>\n     active_subset M = {} \\<and>\n     \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))", "show \"(\\<exists>T1 T2 \\<iota> N2 N1 M. lnth Ns p = (T1, N1) \\<and> lnth Ns (Suc p) = (T2, N2) \\<and>\n        T1 = T2 \\<union> {\\<iota>} \\<and> N2 = N1 \\<union> M \\<and> active_subset M = {} \\<and>\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M)))\""], ["proof (prove)\nusing this:\n  m = 0 \\<Longrightarrow>\n  \\<exists>T1 T2 \\<iota> N2 N1 M.\n     lnth Ns p = (T1, N1) \\<and>\n     lnth Ns (Suc p) = (T2, N2) \\<and>\n     T1 = T2 \\<union> {\\<iota>} \\<and>\n     N2 = N1 \\<union> M \\<and>\n     active_subset M = {} \\<and>\n     \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\n\ngoal (1 subgoal):\n 1. \\<exists>T1 T2 \\<iota> N2 N1 M.\n       lnth Ns p = (T1, N1) \\<and>\n       lnth Ns (Suc p) = (T2, N2) \\<and>\n       T1 = T2 \\<union> {\\<iota>} \\<and>\n       N2 = N1 \\<union> M \\<and>\n       active_subset M = {} \\<and>\n       \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))", "using ci_or_do i_in_p i_notin_suc_p prems_i_active_p"], ["proof (prove)\nusing this:\n  m = 0 \\<Longrightarrow>\n  \\<exists>T1 T2 \\<iota> N2 N1 M.\n     lnth Ns p = (T1, N1) \\<and>\n     lnth Ns (Suc p) = (T2, N2) \\<and>\n     T1 = T2 \\<union> {\\<iota>} \\<and>\n     N2 = N1 \\<union> M \\<and>\n     active_subset M = {} \\<and>\n     \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\n  (\\<exists>T1 T2 \\<iota> N2 N1 M.\n      lnth Ns p = (T1, N1) \\<and>\n      lnth Ns (Suc p) = (T2, N2) \\<and>\n      T1 = T2 \\<union> {\\<iota>} \\<and>\n      N2 = N1 \\<union> M \\<and>\n      active_subset M = {} \\<and>\n      \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))) \\<or>\n  (\\<exists>T1 T2 T' N.\n      lnth Ns p = (T1, N) \\<and>\n      lnth Ns (Suc p) = (T2, N) \\<and>\n      T1 = T2 \\<union> T' \\<and>\n      T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {})\n  to_F \\<iota> \\<in> fst (lnth Ns p)\n  to_F \\<iota> \\<notin> fst (lnth Ns (Suc p))\n  0 < m \\<Longrightarrow>\n  to_F \\<iota>\n  \\<in> no_labels.Inf_from (fst ` active_subset (snd (lnth Ns p)))\n\ngoal (1 subgoal):\n 1. \\<exists>T1 T2 \\<iota> N2 N1 M.\n       lnth Ns p = (T1, N1) \\<and>\n       lnth Ns (Suc p) = (T2, N2) \\<and>\n       T1 = T2 \\<union> {\\<iota>} \\<and>\n       N2 = N1 \\<union> M \\<and>\n       active_subset M = {} \\<and>\n       \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))", "unfolding active_subset_def"], ["proof (prove)\nusing this:\n  m = 0 \\<Longrightarrow>\n  \\<exists>T1 T2 \\<iota> N2 N1 M.\n     lnth Ns p = (T1, N1) \\<and>\n     lnth Ns (Suc p) = (T2, N2) \\<and>\n     T1 = T2 \\<union> {\\<iota>} \\<and>\n     N2 = N1 \\<union> M \\<and>\n     {CL \\<in> M. snd CL = active} = {} \\<and>\n     \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\n  (\\<exists>T1 T2 \\<iota> N2 N1 M.\n      lnth Ns p = (T1, N1) \\<and>\n      lnth Ns (Suc p) = (T2, N2) \\<and>\n      T1 = T2 \\<union> {\\<iota>} \\<and>\n      N2 = N1 \\<union> M \\<and>\n      {CL \\<in> M. snd CL = active} = {} \\<and>\n      \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))) \\<or>\n  (\\<exists>T1 T2 T' N.\n      lnth Ns p = (T1, N) \\<and>\n      lnth Ns (Suc p) = (T2, N) \\<and>\n      T1 = T2 \\<union> T' \\<and>\n      T' \\<inter> no_labels.Inf_from (fst ` {CL \\<in> N. snd CL = active}) =\n      {})\n  to_F \\<iota> \\<in> fst (lnth Ns p)\n  to_F \\<iota> \\<notin> fst (lnth Ns (Suc p))\n  0 < m \\<Longrightarrow>\n  to_F \\<iota>\n  \\<in> no_labels.Inf_from\n         (fst ` {CL \\<in> snd (lnth Ns p). snd CL = active})\n\ngoal (1 subgoal):\n 1. \\<exists>T1 T2 \\<iota> N2 N1 M.\n       lnth Ns p = (T1, N1) \\<and>\n       lnth Ns (Suc p) = (T2, N2) \\<and>\n       T1 = T2 \\<union> {\\<iota>} \\<and>\n       N2 = N1 \\<union> M \\<and>\n       {CL \\<in> M. snd CL = active} = {} \\<and>\n       \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))", "by force"], ["proof (state)\nthis:\n  \\<exists>T1 T2 \\<iota> N2 N1 M.\n     lnth Ns p = (T1, N1) \\<and>\n     lnth Ns (Suc p) = (T2, N2) \\<and>\n     T1 = T2 \\<union> {\\<iota>} \\<and>\n     N2 = N1 \\<union> M \\<and>\n     active_subset M = {} \\<and>\n     \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>T1 T2 \\<iota> N2 N1 M.\n     lnth Ns p = (T1, N1) \\<and>\n     lnth Ns (Suc p) = (T2, N2) \\<and>\n     T1 = T2 \\<union> {\\<iota>} \\<and>\n     N2 = N1 \\<union> M \\<and>\n     active_subset M = {} \\<and>\n     \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  \\<exists>T1 T2 \\<iota> N2 N1 M.\n     lnth Ns p = (T1, N1) \\<and>\n     lnth Ns (Suc p) = (T2, N2) \\<and>\n     T1 = T2 \\<union> {\\<iota>} \\<and>\n     N2 = N1 \\<union> M \\<and>\n     active_subset M = {} \\<and>\n     \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))", "obtain T1p T2p N1p N2p Mp where  \"lnth Ns p = (T1p, N1p)\" and\n    suc_p_is: \"lnth Ns (Suc p) = (T2p, N2p)\" and \"T1p = T2p \\<union> {to_F \\<iota>}\" and \"T2p \\<inter> {to_F \\<iota>} = {}\" and\n    n2p_is: \"N2p = N1p \\<union> Mp\"and \"active_subset Mp = {}\" and\n    i_in_red_inf: \"to_F \\<iota> \\<in> no_labels.Red_I_\\<G>\n        (fst ` (N1p \\<union> Mp))\""], ["proof (prove)\nusing this:\n  \\<exists>T1 T2 \\<iota> N2 N1 M.\n     lnth Ns p = (T1, N1) \\<and>\n     lnth Ns (Suc p) = (T2, N2) \\<and>\n     T1 = T2 \\<union> {\\<iota>} \\<and>\n     N2 = N1 \\<union> M \\<and>\n     active_subset M = {} \\<and>\n     \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\n\ngoal (1 subgoal):\n 1. (\\<And>T1p N1p T2p N2p Mp.\n        \\<lbrakk>lnth Ns p = (T1p, N1p); lnth Ns (Suc p) = (T2p, N2p);\n         T1p = T2p \\<union> {to_F \\<iota>};\n         T2p \\<inter> {to_F \\<iota>} = {}; N2p = N1p \\<union> Mp;\n         active_subset Mp = {};\n         to_F \\<iota>\n         \\<in> no_labels.Red_I_\\<G> (fst ` (N1p \\<union> Mp))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using i_in_p i_notin_suc_p"], ["proof (prove)\nusing this:\n  \\<exists>T1 T2 \\<iota> N2 N1 M.\n     lnth Ns p = (T1, N1) \\<and>\n     lnth Ns (Suc p) = (T2, N2) \\<and>\n     T1 = T2 \\<union> {\\<iota>} \\<and>\n     N2 = N1 \\<union> M \\<and>\n     active_subset M = {} \\<and>\n     \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\n  to_F \\<iota> \\<in> fst (lnth Ns p)\n  to_F \\<iota> \\<notin> fst (lnth Ns (Suc p))\n\ngoal (1 subgoal):\n 1. (\\<And>T1p N1p T2p N2p Mp.\n        \\<lbrakk>lnth Ns p = (T1p, N1p); lnth Ns (Suc p) = (T2p, N2p);\n         T1p = T2p \\<union> {to_F \\<iota>};\n         T2p \\<inter> {to_F \\<iota>} = {}; N2p = N1p \\<union> Mp;\n         active_subset Mp = {};\n         to_F \\<iota>\n         \\<in> no_labels.Red_I_\\<G> (fst ` (N1p \\<union> Mp))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  lnth Ns p = (T1p, N1p)\n  lnth Ns (Suc p) = (T2p, N2p)\n  T1p = T2p \\<union> {to_F \\<iota>}\n  T2p \\<inter> {to_F \\<iota>} = {}\n  N2p = N1p \\<union> Mp\n  active_subset Mp = {}\n  to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1p \\<union> Mp))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "have \"to_F \\<iota> \\<in> no_labels.Red_I (fst ` (snd (lnth Ns (Suc p))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` snd (lnth Ns (Suc p)))", "using i_in_red_inf suc_p_is n2p_is"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1p \\<union> Mp))\n  lnth Ns (Suc p) = (T2p, N2p)\n  N2p = N1p \\<union> Mp\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` snd (lnth Ns (Suc p)))", "by fastforce"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` snd (lnth Ns (Suc p)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` snd (lnth Ns (Suc p)))", "have \"\\<forall>q \\<in> Q. (\\<G>_I_q q (to_F \\<iota>) \\<noteq> None \\<and>\n      the (\\<G>_I_q q (to_F \\<iota>)) \\<subseteq> Red_I_q q (\\<Union> (\\<G>_F_q q ` fst ` snd (lnth Ns (Suc p)))))\n      \\<or> (\\<G>_I_q q (to_F \\<iota>) = None \\<and>\n      \\<G>_F_q q (concl_of (to_F \\<iota>)) \\<subseteq> \\<Union> (\\<G>_F_q q ` fst ` snd (lnth Ns (Suc p))) \\<union>\n        Red_F_q q (\\<Union> (\\<G>_F_q q ` fst ` snd (lnth Ns (Suc p)))))\""], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` snd (lnth Ns (Suc p)))\n\ngoal (1 subgoal):\n 1. \\<forall>q\\<in>Q.\n       \\<G>_I_L_q q \\<iota> \\<noteq> None \\<and>\n       the (\\<G>_I_L_q q \\<iota>)\n       \\<subseteq> Red_I_q q\n                    (no_labels.\\<G>_Fset_q q\n                      (fst ` snd (lnth Ns (Suc p)))) \\<or>\n       \\<G>_I_L_q q \\<iota> = None \\<and>\n       \\<G>_F_q q (concl_of (to_F \\<iota>))\n       \\<subseteq> no_labels.\\<G>_Fset_q q\n                    (fst ` snd (lnth Ns (Suc p))) \\<union>\n                   Red_F_q q\n                    (no_labels.\\<G>_Fset_q q (fst ` snd (lnth Ns (Suc p))))", "unfolding to_F_def no_labels.Red_I_def no_labels.Red_I_\\<G>_q_def"], ["proof (prove)\nusing this:\n  Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))\n  \\<in> (\\<Inter>q\\<in>Q.\n            {\\<iota> \\<in> Inf_F.\n             \\<G>_I_q q \\<iota> \\<noteq> None \\<and>\n             the (\\<G>_I_q q \\<iota>)\n             \\<subseteq> Red_I_q q\n                          (no_labels.\\<G>_Fset_q q\n                            (fst ` snd (lnth Ns (Suc p)))) \\<or>\n             \\<G>_I_q q \\<iota> = None \\<and>\n             \\<G>_F_q q (concl_of \\<iota>)\n             \\<subseteq> no_labels.\\<G>_Fset_q q\n                          (fst ` snd (lnth Ns (Suc p))) \\<union>\n                         Red_F_q q\n                          (no_labels.\\<G>_Fset_q q\n                            (fst ` snd (lnth Ns (Suc p))))})\n\ngoal (1 subgoal):\n 1. \\<forall>q\\<in>Q.\n       \\<G>_I_q q\n        (Infer (map fst (prems_of \\<iota>))\n          (fst (concl_of \\<iota>))) \\<noteq>\n       None \\<and>\n       the (\\<G>_I_q q\n             (Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))))\n       \\<subseteq> Red_I_q q\n                    (no_labels.\\<G>_Fset_q q\n                      (fst ` snd (lnth Ns (Suc p)))) \\<or>\n       \\<G>_I_q q\n        (Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))) =\n       None \\<and>\n       \\<G>_F_q q\n        (concl_of\n          (Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))))\n       \\<subseteq> no_labels.\\<G>_Fset_q q\n                    (fst ` snd (lnth Ns (Suc p))) \\<union>\n                   Red_F_q q\n                    (no_labels.\\<G>_Fset_q q (fst ` snd (lnth Ns (Suc p))))", "by blast"], ["proof (state)\nthis:\n  \\<forall>q\\<in>Q.\n     \\<G>_I_L_q q \\<iota> \\<noteq> None \\<and>\n     the (\\<G>_I_L_q q \\<iota>)\n     \\<subseteq> Red_I_q q\n                  (no_labels.\\<G>_Fset_q q\n                    (fst ` snd (lnth Ns (Suc p)))) \\<or>\n     \\<G>_I_L_q q \\<iota> = None \\<and>\n     \\<G>_F_q q (concl_of (to_F \\<iota>))\n     \\<subseteq> no_labels.\\<G>_Fset_q q\n                  (fst ` snd (lnth Ns (Suc p))) \\<union>\n                 Red_F_q q\n                  (no_labels.\\<G>_Fset_q q (fst ` snd (lnth Ns (Suc p))))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  \\<forall>q\\<in>Q.\n     \\<G>_I_L_q q \\<iota> \\<noteq> None \\<and>\n     the (\\<G>_I_L_q q \\<iota>)\n     \\<subseteq> Red_I_q q\n                  (no_labels.\\<G>_Fset_q q\n                    (fst ` snd (lnth Ns (Suc p)))) \\<or>\n     \\<G>_I_L_q q \\<iota> = None \\<and>\n     \\<G>_F_q q (concl_of (to_F \\<iota>))\n     \\<subseteq> no_labels.\\<G>_Fset_q q\n                  (fst ` snd (lnth Ns (Suc p))) \\<union>\n                 Red_F_q q\n                  (no_labels.\\<G>_Fset_q q (fst ` snd (lnth Ns (Suc p))))", "have \"\\<iota> \\<in> Red_I_\\<G> (snd (lnth Ns (Suc p)))\""], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>Q.\n     \\<G>_I_L_q q \\<iota> \\<noteq> None \\<and>\n     the (\\<G>_I_L_q q \\<iota>)\n     \\<subseteq> Red_I_q q\n                  (no_labels.\\<G>_Fset_q q\n                    (fst ` snd (lnth Ns (Suc p)))) \\<or>\n     \\<G>_I_L_q q \\<iota> = None \\<and>\n     \\<G>_F_q q (concl_of (to_F \\<iota>))\n     \\<subseteq> no_labels.\\<G>_Fset_q q\n                  (fst ` snd (lnth Ns (Suc p))) \\<union>\n                 Red_F_q q\n                  (no_labels.\\<G>_Fset_q q (fst ` snd (lnth Ns (Suc p))))\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> (snd (lnth Ns (Suc p)))", "using i_in_inf_fl"], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>Q.\n     \\<G>_I_L_q q \\<iota> \\<noteq> None \\<and>\n     the (\\<G>_I_L_q q \\<iota>)\n     \\<subseteq> Red_I_q q\n                  (no_labels.\\<G>_Fset_q q\n                    (fst ` snd (lnth Ns (Suc p)))) \\<or>\n     \\<G>_I_L_q q \\<iota> = None \\<and>\n     \\<G>_F_q q (concl_of (to_F \\<iota>))\n     \\<subseteq> no_labels.\\<G>_Fset_q q\n                  (fst ` snd (lnth Ns (Suc p))) \\<union>\n                 Red_F_q q\n                  (no_labels.\\<G>_Fset_q q (fst ` snd (lnth Ns (Suc p))))\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> (snd (lnth Ns (Suc p)))", "unfolding Red_I_\\<G>_def Red_I_\\<G>_q_def"], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>Q.\n     \\<G>_I_L_q q \\<iota> \\<noteq> None \\<and>\n     the (\\<G>_I_L_q q \\<iota>)\n     \\<subseteq> Red_I_q q\n                  (no_labels.\\<G>_Fset_q q\n                    (fst ` snd (lnth Ns (Suc p)))) \\<or>\n     \\<G>_I_L_q q \\<iota> = None \\<and>\n     \\<G>_F_q q (concl_of (to_F \\<iota>))\n     \\<subseteq> no_labels.\\<G>_Fset_q q\n                  (fst ` snd (lnth Ns (Suc p))) \\<union>\n                 Red_F_q q\n                  (no_labels.\\<G>_Fset_q q (fst ` snd (lnth Ns (Suc p))))\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> (\\<Inter>q\\<in>Q.\n              {\\<iota> \\<in> Inf_FL.\n               \\<G>_I_L_q q \\<iota> \\<noteq> None \\<and>\n               the (\\<G>_I_L_q q \\<iota>)\n               \\<subseteq> Red_I_q q\n                            (\\<Union>\n                              (\\<G>_F_L_q q ` snd (lnth Ns (Suc p)))) \\<or>\n               \\<G>_I_L_q q \\<iota> = None \\<and>\n               \\<G>_F_L_q q (concl_of \\<iota>)\n               \\<subseteq> \\<Union>\n                            (\\<G>_F_L_q q ` snd (lnth Ns (Suc p))) \\<union>\n                           Red_F_q q\n                            (\\<Union>\n                              (\\<G>_F_L_q q ` snd (lnth Ns (Suc p))))})", "by (simp add: to_F_def)"], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_I_\\<G> (snd (lnth Ns (Suc p)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (Liminf_llist (lmap snd Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Red_I_\\<G> (snd (lnth Ns (Suc p)))", "show \"\\<iota> \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))\""], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Red_I_\\<G> (snd (lnth Ns (Suc p)))\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))", "unfolding Sup_llist_def"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Red_I_\\<G> (snd (lnth Ns (Suc p)))\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union>\n           (lnth (lmap Red_I_\\<G> (lmap snd Ns)) `\n            {i. enat i < llength (lmap Red_I_\\<G> (lmap snd Ns))})", "using suc_n_length p_smaller_d"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Red_I_\\<G> (snd (lnth Ns (Suc p)))\n  enat n < llength Ns\n  enat (Suc p) < llength Ns\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union>\n           (lnth (lmap Red_I_\\<G> (lmap snd Ns)) `\n            {i. enat i < llength (lmap Red_I_\\<G> (lmap snd Ns))})", "by auto"], ["proof (state)\nthis:\n  \\<iota> \\<in> Sup_llist (lmap Red_I_\\<G> (lmap snd Ns))\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem lgc_complete_Liminf:\n  assumes\n    deriv: \"chain (\\<leadsto>LGC) Ns\" and\n    init_state: \"active_subset (snd (lhd Ns)) = {}\" and\n    final_state: \"passive_subset (Liminf_llist (lmap snd Ns)) = {}\" and\n    no_prems_init_active: \"\\<forall>\\<iota> \\<in> Inf_F. prems_of \\<iota> = [] \\<longrightarrow> \\<iota> \\<in> fst (lhd Ns)\" and\n    final_schedule: \"Liminf_llist (lmap fst Ns) = {}\" and\n    b_in: \"B \\<in> Bot_F\" and\n    bot_entailed: \"no_labels.entails_\\<G> (fst ` snd (lhd Ns)) {B}\"\n  shows \"\\<exists>BL \\<in> Bot_FL. BL \\<in> Liminf_llist (lmap snd Ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist (lmap snd Ns)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist (lmap snd Ns)", "have labeled_b_in: \"(B, active) \\<in> Bot_FL\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (B, active) \\<in> Bot_FL", "using b_in"], ["proof (prove)\nusing this:\n  B \\<in> Bot_F\n\ngoal (1 subgoal):\n 1. (B, active) \\<in> Bot_FL", "by simp"], ["proof (state)\nthis:\n  (B, active) \\<in> Bot_FL\n\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist (lmap snd Ns)", "have simp_snd_lmap: \"lhd (lmap snd Ns) = snd (lhd Ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lhd (lmap snd Ns) = snd (lhd Ns)", "by (rule llist.map_sel(1)[OF chain_not_lnull[OF deriv]])"], ["proof (state)\nthis:\n  lhd (lmap snd Ns) = snd (lhd Ns)\n\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist (lmap snd Ns)", "have labeled_bot_entailed: \"entails_\\<G>_L (snd (lhd Ns)) {(B, active)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. entails_\\<G> (snd (lhd Ns)) {(B, active)}", "using labeled_entailment_lifting bot_entailed"], ["proof (prove)\nusing this:\n  entails_\\<G> ?NL1.0 ?NL2.0 =\n  (fst ` ?NL1.0 \\<Turnstile>\\<inter>\\<G> fst ` ?NL2.0)\n  fst ` snd (lhd Ns) \\<Turnstile>\\<inter>\\<G> {B}\n\ngoal (1 subgoal):\n 1. entails_\\<G> (snd (lhd Ns)) {(B, active)}", "by fastforce"], ["proof (state)\nthis:\n  entails_\\<G> (snd (lhd Ns)) {(B, active)}\n\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist (lmap snd Ns)", "have \"fair (lmap snd Ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. empty_ord.fair (lmap snd Ns)", "using lgc_fair[OF deriv init_state final_state no_prems_init_active final_schedule]"], ["proof (prove)\nusing this:\n  empty_ord.fair (lmap snd Ns)\n\ngoal (1 subgoal):\n 1. empty_ord.fair (lmap snd Ns)", "."], ["proof (state)\nthis:\n  empty_ord.fair (lmap snd Ns)\n\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist (lmap snd Ns)", "then"], ["proof (chain)\npicking this:\n  empty_ord.fair (lmap snd Ns)", "show ?thesis"], ["proof (prove)\nusing this:\n  empty_ord.fair (lmap snd Ns)\n\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist (lmap snd Ns)", "using dynamically_complete_Liminf labeled_b_in lgc_to_red[OF deriv]\n      labeled_bot_entailed simp_snd_lmap std_Red_I_eq"], ["proof (prove)\nusing this:\n  empty_ord.fair (lmap snd Ns)\n  \\<lbrakk>?B \\<in> Bot_FL; chain (\\<rhd>L) ?Ns; empty_ord.fair ?Ns;\n   entails_\\<G> (lhd ?Ns) {?B}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B'\\<in>Bot_FL. B' \\<in> Liminf_llist ?Ns\n  (B, active) \\<in> Bot_FL\n  chain (\\<rhd>L) (lmap snd Ns)\n  entails_\\<G> (snd (lhd Ns)) {(B, active)}\n  lhd (lmap snd Ns) = snd (lhd Ns)\n  std.Red_I = Red_I_\\<G>\n\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist (lmap snd Ns)", "by presburger"], ["proof (state)\nthis:\n  \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist (lmap snd Ns)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* thm:lgc-completeness *)"], ["", "theorem lgc_complete:\n  assumes\n    deriv: \"chain (\\<leadsto>LGC) Ns\" and\n    init_state: \"active_subset (snd (lhd Ns)) = {}\" and\n    final_state: \"passive_subset (Liminf_llist (lmap snd Ns)) = {}\" and\n    no_prems_init_active: \"\\<forall>\\<iota> \\<in> Inf_F. prems_of \\<iota> = [] \\<longrightarrow> \\<iota> \\<in> fst (lhd Ns)\" and\n    final_schedule: \"Liminf_llist (lmap fst Ns) = {}\" and\n    b_in: \"B \\<in> Bot_F\" and\n    bot_entailed: \"no_labels.entails_\\<G> (fst ` snd (lhd Ns)) {B}\"\n  shows \"\\<exists>i. enat i < llength Ns \\<and> (\\<exists>BL \\<in> Bot_FL. BL \\<in> snd (lnth Ns i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength Ns \\<and>\n       (\\<exists>BL\\<in>Bot_FL. BL \\<in> snd (lnth Ns i))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength Ns \\<and>\n       (\\<exists>BL\\<in>Bot_FL. BL \\<in> snd (lnth Ns i))", "have \"\\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist (lmap snd Ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist (lmap snd Ns)", "using assms"], ["proof (prove)\nusing this:\n  chain (\\<leadsto>LGC) Ns\n  active_subset (snd (lhd Ns)) = {}\n  passive_subset (Liminf_llist (lmap snd Ns)) = {}\n  \\<forall>\\<iota>\\<in>Inf_F.\n     prems_of \\<iota> = [] \\<longrightarrow> \\<iota> \\<in> fst (lhd Ns)\n  Liminf_llist (lmap fst Ns) = {}\n  B \\<in> Bot_F\n  fst ` snd (lhd Ns) \\<Turnstile>\\<inter>\\<G> {B}\n\ngoal (1 subgoal):\n 1. \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist (lmap snd Ns)", "by (rule lgc_complete_Liminf)"], ["proof (state)\nthis:\n  \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist (lmap snd Ns)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength Ns \\<and>\n       (\\<exists>BL\\<in>Bot_FL. BL \\<in> snd (lnth Ns i))", "then"], ["proof (chain)\npicking this:\n  \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist (lmap snd Ns)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>BL\\<in>Bot_FL. BL \\<in> Liminf_llist (lmap snd Ns)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength Ns \\<and>\n       (\\<exists>BL\\<in>Bot_FL. BL \\<in> snd (lnth Ns i))", "unfolding Liminf_llist_def"], ["proof (prove)\nusing this:\n  \\<exists>BL\\<in>Bot_FL.\n     BL \\<in> (\\<Union>i\\<in>{i. enat i < llength (lmap snd Ns)}.\n                  \\<Inter>\n                   (lnth (lmap snd Ns) `\n                    {j. i \\<le> j \\<and> enat j < llength (lmap snd Ns)}))\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength Ns \\<and>\n       (\\<exists>BL\\<in>Bot_FL. BL \\<in> snd (lnth Ns i))", "by auto"], ["proof (state)\nthis:\n  \\<exists>i.\n     enat i < llength Ns \\<and>\n     (\\<exists>BL\\<in>Bot_FL. BL \\<in> snd (lnth Ns i))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}