{"file_name": "/home/qj213/afp-2021-10-22/thys/Saturation_Framework/Lifting_to_Non_Ground_Calculi.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Saturation_Framework", "problem_names": ["lemma \\<G>_subset: \\<open>N1 \\<subseteq> N2 \\<Longrightarrow> \\<G>_Fset N1 \\<subseteq> \\<G>_Fset N2\\<close>", "lemma subs_Bot_G_entails:\n  assumes\n    not_empty: \\<open>sB \\<noteq> {}\\<close> and\n    in_bot: \\<open>sB \\<subseteq> Bot_G\\<close>\n  shows \\<open>sB \\<Turnstile>G N\\<close>", "lemma Prec_trans:\n  assumes\n    \\<open>Prec_F_g D A B\\<close> and\n    \\<open>Prec_F_g D B C\\<close>\n  shows\n    \\<open>Prec_F_g D A C\\<close>", "lemma prop_nested_in_set: \"D \\<in> P C \\<Longrightarrow> C \\<in> {C. \\<forall>D \\<in> P C. A D \\<or> B C D} \\<Longrightarrow> A D \\<or> B C D\"", "lemma Red_F_\\<G>_equiv_def:\n  \\<open>Red_F_\\<G> N = {C. \\<forall>Di \\<in> \\<G>_F C. Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n    (\\<exists>E \\<in> (N - Red_F_\\<G> N). Prec_F_g Di E C \\<and> Di \\<in> \\<G>_F E)}\\<close>", "lemma not_red_map_in_map_not_red: \\<open>\\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<subseteq> \\<G>_Fset (N - Red_F_\\<G> N)\\<close>", "lemma Red_F_Bot_F: \\<open>B \\<in> Bot_F \\<Longrightarrow> N \\<Turnstile>\\<G> {B} \\<Longrightarrow> N - Red_F_\\<G> N \\<Turnstile>\\<G> {B}\\<close>", "lemma Red_F_of_subset_F: \\<open>N \\<subseteq> N' \\<Longrightarrow> Red_F_\\<G> N \\<subseteq> Red_F_\\<G> N'\\<close>", "lemma Red_I_of_subset_F: \\<open>N \\<subseteq> N' \\<Longrightarrow> Red_I_\\<G> N \\<subseteq> Red_I_\\<G> N'\\<close>", "lemma Red_F_of_Red_F_subset_F: \\<open>N' \\<subseteq> Red_F_\\<G> N \\<Longrightarrow> Red_F_\\<G> N \\<subseteq> Red_F_\\<G> (N - N')\\<close>", "lemma Red_I_of_Red_F_subset_F: \\<open>N' \\<subseteq> Red_F_\\<G> N \\<Longrightarrow> Red_I_\\<G> N \\<subseteq> Red_I_\\<G> (N - N') \\<close>", "lemma Red_I_of_Inf_to_N_F:\n  assumes\n    i_in: \\<open>\\<iota> \\<in> Inf_F\\<close> and\n    concl_i_in: \\<open>concl_of \\<iota> \\<in> N\\<close>\n  shows\n    \\<open>\\<iota> \\<in> Red_I_\\<G> N \\<close>", "lemma wf_empty_rel: \"minimal_element (\\<lambda>_ _. False) UNIV\"", "lemma standard_empty_tiebreaker_equiv: \"standard_lifting Inf_F Bot_G Inf_G entails_G Red_I_G\n  Red_F_G Bot_F \\<G>_F \\<G>_I = tiebreaker_lifting Bot_F Inf_F Bot_G entails_G Inf_G Red_I_G\n  Red_F_G \\<G>_F \\<G>_I (\\<lambda>g C C'. False)\"", "lemma red_f_equiv: \"empt_ord.Red_F_\\<G> = Red_F_\\<G>\"", "lemma grounded_inf_in_ground_inf: \"\\<iota> \\<in> Inf_F \\<Longrightarrow> \\<G>_I \\<iota> \\<noteq> None \\<Longrightarrow> the (\\<G>_I \\<iota>) \\<subseteq> Inf_G\"", "lemma sat_inf_imp_ground_red:\n    assumes\n      \"saturated N\" and\n      \"\\<iota>' \\<in> Inf_from N\" and\n      \"\\<G>_I \\<iota>' \\<noteq> None \\<and> \\<iota> \\<in> the (\\<G>_I \\<iota>')\"\n    shows \"\\<iota> \\<in> Red_I_G (\\<G>_Fset N)\"", "lemma sat_imp_ground_sat:\n    \"saturated N \\<Longrightarrow> ground_Inf_overapproximated N \\<Longrightarrow> ground.saturated (\\<G>_Fset N)\"", "theorem stat_ref_comp_to_non_ground:\n    assumes\n      stat_ref_G: \"statically_complete_calculus Bot_G Inf_G entails_G Red_I_G Red_F_G\" and\n      sat_n_imp: \"\\<And>N. saturated N \\<Longrightarrow> ground_Inf_overapproximated N\"\n    shows\n      \"statically_complete_calculus Bot_F Inf_F entails_\\<G> Red_I_\\<G> Red_F_\\<G>\"", "lemma saturated_empty_order_equiv_saturated:\n    \"saturated N = calc.saturated N\"", "lemma static_empty_order_equiv_static:\n    \"statically_complete_calculus Bot_F Inf_F entails_\\<G> Red_I_\\<G> Red_F_\\<G> =\n      statically_complete_calculus Bot_F Inf_F entails_\\<G> Red_I_\\<G> empty_ord.Red_F_\\<G>\"", "theorem static_to_dynamic:\n    \"statically_complete_calculus Bot_F Inf_F entails_\\<G> Red_I_\\<G> empty_ord.Red_F_\\<G> =\n      dynamically_complete_calculus Bot_F Inf_F entails_\\<G> Red_I_\\<G> Red_F_\\<G>\"", "lemma red_crit_lifting_family:\n  assumes q_in: \"q \\<in> Q\"\n  shows \"calculus Bot_F Inf_F (entails_\\<G>_q q) (Red_I_\\<G>_q q) (Red_F_\\<G>_q q)\"", "lemma red_crit_lifting_family_empty_ord:\n  assumes q_in: \"q \\<in> Q\"\n  shows \"calculus Bot_F Inf_F (entails_\\<G>_q q) (Red_I_\\<G>_q q) (Red_F_\\<G>_empty_q q)\"", "lemmas entails_\\<G>_def = entails_def", "lemmas Red_I_\\<G>_def = Red_I_def", "lemmas Red_F_\\<G>_def = Red_F_def", "lemmas Red_F_\\<G>_empty_def = empty_ord.Red_F_def", "lemma sat_inf_imp_ground_red_fam_inter:\n  assumes\n    sat_n: \"saturated N\" and\n    i'_in: \"\\<iota>' \\<in> Inf_from N\" and\n    q_in: \"q \\<in> Q\" and\n    grounding: \"\\<G>_I_q q \\<iota>' \\<noteq> None \\<and> \\<iota> \\<in> the (\\<G>_I_q q \\<iota>')\"\n  shows \"\\<iota> \\<in> Red_I_q q (\\<G>_Fset_q q N)\"", "lemma sat_imp_ground_sat_fam_inter:\n  \"saturated N \\<Longrightarrow> q \\<in> Q \\<Longrightarrow> ground_Inf_overapproximated q N \\<Longrightarrow> ground_saturated q N\"", "theorem stat_ref_comp_to_non_ground_fam_inter:\n  assumes\n    stat_ref_G:\n      \"\\<forall>q \\<in> Q. statically_complete_calculus Bot_G (Inf_G_q q) (entails_q q) (Red_I_q q)\n        (Red_F_q q)\" and\n    sat_n_imp: \"\\<And>N. saturated N \\<Longrightarrow> \\<exists>q \\<in> Q. ground_Inf_overapproximated q N\"\n  shows\n    \"statically_complete_calculus Bot_F Inf_F entails_\\<G> Red_I_\\<G> Red_F_\\<G>_empty\"", "lemma sat_eq_sat_empty_order: \"saturated N = empty_ord.saturated N\"", "lemma static_empty_ord_inter_equiv_static_inter:\n  \"statically_complete_calculus Bot_F Inf_F entails Red_I Red_F =\n  statically_complete_calculus Bot_F Inf_F entails Red_I Red_F_\\<G>_empty\"", "theorem stat_eq_dyn_ref_comp_fam_inter: \"statically_complete_calculus Bot_F Inf_F\n    entails Red_I Red_F_\\<G>_empty =\n  dynamically_complete_calculus Bot_F Inf_F entails Red_I Red_F\""], "translations": [["", "lemma \\<G>_subset: \\<open>N1 \\<subseteq> N2 \\<Longrightarrow> \\<G>_Fset N1 \\<subseteq> \\<G>_Fset N2\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. N1 \\<subseteq> N2 \\<Longrightarrow>\n    \\<G>_Fset N1 \\<subseteq> \\<G>_Fset N2", "by auto"], ["", "abbreviation entails_\\<G>  :: \\<open>'f set \\<Rightarrow> 'f set \\<Rightarrow> bool\\<close> (infix \"\\<Turnstile>\\<G>\" 50) where\n  \\<open>N1 \\<Turnstile>\\<G> N2 \\<equiv> \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\\<close>"], ["", "lemma subs_Bot_G_entails:\n  assumes\n    not_empty: \\<open>sB \\<noteq> {}\\<close> and\n    in_bot: \\<open>sB \\<subseteq> Bot_G\\<close>\n  shows \\<open>sB \\<Turnstile>G N\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. sB \\<Turnstile>G N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sB \\<Turnstile>G N", "have \\<open>\\<exists>B. B \\<in> sB\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B. B \\<in> sB", "using not_empty"], ["proof (prove)\nusing this:\n  sB \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>B. B \\<in> sB", "by auto"], ["proof (state)\nthis:\n  \\<exists>B. B \\<in> sB\n\ngoal (1 subgoal):\n 1. sB \\<Turnstile>G N", "then"], ["proof (chain)\npicking this:\n  \\<exists>B. B \\<in> sB", "obtain B where B_in: \\<open>B \\<in> sB\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>B. B \\<in> sB\n\ngoal (1 subgoal):\n 1. (\\<And>B. B \\<in> sB \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  B \\<in> sB\n\ngoal (1 subgoal):\n 1. sB \\<Turnstile>G N", "then"], ["proof (chain)\npicking this:\n  B \\<in> sB", "have r_trans: \\<open>{B} \\<Turnstile>G N\\<close>"], ["proof (prove)\nusing this:\n  B \\<in> sB\n\ngoal (1 subgoal):\n 1. {B} \\<Turnstile>G N", "using ground.bot_entails_all in_bot"], ["proof (prove)\nusing this:\n  B \\<in> sB\n  ?B \\<in> Bot_G \\<Longrightarrow> {?B} \\<Turnstile>G ?N1.0\n  sB \\<subseteq> Bot_G\n\ngoal (1 subgoal):\n 1. {B} \\<Turnstile>G N", "by auto"], ["proof (state)\nthis:\n  {B} \\<Turnstile>G N\n\ngoal (1 subgoal):\n 1. sB \\<Turnstile>G N", "have l_trans: \\<open>sB \\<Turnstile>G {B}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. sB \\<Turnstile>G {B}", "using B_in ground.subset_entailed"], ["proof (prove)\nusing this:\n  B \\<in> sB\n  ?N2.0 \\<subseteq> ?N1.0 \\<Longrightarrow> ?N1.0 \\<Turnstile>G ?N2.0\n\ngoal (1 subgoal):\n 1. sB \\<Turnstile>G {B}", "by auto"], ["proof (state)\nthis:\n  sB \\<Turnstile>G {B}\n\ngoal (1 subgoal):\n 1. sB \\<Turnstile>G N", "then"], ["proof (chain)\npicking this:\n  sB \\<Turnstile>G {B}", "show ?thesis"], ["proof (prove)\nusing this:\n  sB \\<Turnstile>G {B}\n\ngoal (1 subgoal):\n 1. sB \\<Turnstile>G N", "using r_trans ground.entails_trans[of sB \"{B}\"]"], ["proof (prove)\nusing this:\n  sB \\<Turnstile>G {B}\n  {B} \\<Turnstile>G N\n  \\<lbrakk>sB \\<Turnstile>G {B}; {B} \\<Turnstile>G ?N3.0\\<rbrakk>\n  \\<Longrightarrow> sB \\<Turnstile>G ?N3.0\n\ngoal (1 subgoal):\n 1. sB \\<Turnstile>G N", "by auto"], ["proof (state)\nthis:\n  sB \\<Turnstile>G N\n\ngoal:\nNo subgoals!", "qed"], ["", "(* lem:derived-consequence-relation *)"], ["", "sublocale consequence_relation Bot_F entails_\\<G>"], ["proof (prove)\ngoal (1 subgoal):\n 1. consequence_relation Bot_F\n     (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2)", "proof"], ["proof (state)\ngoal (5 subgoals):\n 1. Bot_F \\<noteq> {}\n 2. \\<And>B N1.\n       B \\<in> Bot_F \\<Longrightarrow>\n       \\<G>_Fset {B} \\<Turnstile>G \\<G>_Fset N1\n 3. \\<And>N2 N1.\n       N2 \\<subseteq> N1 \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 4. \\<And>N2 N1.\n       \\<forall>C\\<in>N2.\n          \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset {C} \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 5. \\<And>N1 N2 N3.\n       \\<lbrakk>\\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2;\n        \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3", "show \"Bot_F \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Bot_F \\<noteq> {}", "using Bot_F_not_empty"], ["proof (prove)\nusing this:\n  Bot_F \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Bot_F \\<noteq> {}", "."], ["proof (state)\nthis:\n  Bot_F \\<noteq> {}\n\ngoal (4 subgoals):\n 1. \\<And>B N1.\n       B \\<in> Bot_F \\<Longrightarrow>\n       \\<G>_Fset {B} \\<Turnstile>G \\<G>_Fset N1\n 2. \\<And>N2 N1.\n       N2 \\<subseteq> N1 \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 3. \\<And>N2 N1.\n       \\<forall>C\\<in>N2.\n          \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset {C} \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 4. \\<And>N1 N2 N3.\n       \\<lbrakk>\\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2;\n        \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>B N1.\n       B \\<in> Bot_F \\<Longrightarrow>\n       \\<G>_Fset {B} \\<Turnstile>G \\<G>_Fset N1\n 2. \\<And>N2 N1.\n       N2 \\<subseteq> N1 \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 3. \\<And>N2 N1.\n       \\<forall>C\\<in>N2.\n          \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset {C} \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 4. \\<And>N1 N2 N3.\n       \\<lbrakk>\\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2;\n        \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3", "show \\<open>B\\<in>Bot_F \\<Longrightarrow> {B} \\<Turnstile>\\<G> N\\<close> for B N"], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> Bot_F \\<Longrightarrow> \\<G>_Fset {B} \\<Turnstile>G \\<G>_Fset N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<in> Bot_F \\<Longrightarrow> \\<G>_Fset {B} \\<Turnstile>G \\<G>_Fset N", "assume \\<open>B \\<in> Bot_F\\<close>"], ["proof (state)\nthis:\n  B \\<in> Bot_F\n\ngoal (1 subgoal):\n 1. B \\<in> Bot_F \\<Longrightarrow> \\<G>_Fset {B} \\<Turnstile>G \\<G>_Fset N", "then"], ["proof (chain)\npicking this:\n  B \\<in> Bot_F", "show \\<open>{B} \\<Turnstile>\\<G> N\\<close>"], ["proof (prove)\nusing this:\n  B \\<in> Bot_F\n\ngoal (1 subgoal):\n 1. \\<G>_Fset {B} \\<Turnstile>G \\<G>_Fset N", "using Bot_map ground.bot_entails_all[of _ \"\\<G>_Fset N\"] subs_Bot_G_entails Bot_map_not_empty"], ["proof (prove)\nusing this:\n  B \\<in> Bot_F\n  ?B \\<in> Bot_F \\<Longrightarrow> \\<G>_F ?B \\<subseteq> Bot_G\n  ?B \\<in> Bot_G \\<Longrightarrow> {?B} \\<Turnstile>G \\<G>_Fset N\n  \\<lbrakk>?sB \\<noteq> {}; ?sB \\<subseteq> Bot_G\\<rbrakk>\n  \\<Longrightarrow> ?sB \\<Turnstile>G ?N\n  ?B \\<in> Bot_F \\<Longrightarrow> \\<G>_F ?B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<G>_Fset {B} \\<Turnstile>G \\<G>_Fset N", "by auto"], ["proof (state)\nthis:\n  \\<G>_Fset {B} \\<Turnstile>G \\<G>_Fset N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?B \\<in> Bot_F \\<Longrightarrow> \\<G>_Fset {?B} \\<Turnstile>G \\<G>_Fset ?N\n\ngoal (3 subgoals):\n 1. \\<And>N2 N1.\n       N2 \\<subseteq> N1 \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 2. \\<And>N2 N1.\n       \\<forall>C\\<in>N2.\n          \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset {C} \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 3. \\<And>N1 N2 N3.\n       \\<lbrakk>\\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2;\n        \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>N2 N1.\n       N2 \\<subseteq> N1 \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 2. \\<And>N2 N1.\n       \\<forall>C\\<in>N2.\n          \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset {C} \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 3. \\<And>N1 N2 N3.\n       \\<lbrakk>\\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2;\n        \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3", "fix N1 N2 :: \\<open>'f set\\<close>"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>N2 N1.\n       N2 \\<subseteq> N1 \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 2. \\<And>N2 N1.\n       \\<forall>C\\<in>N2.\n          \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset {C} \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 3. \\<And>N1 N2 N3.\n       \\<lbrakk>\\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2;\n        \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3", "assume\n    \\<open>N2 \\<subseteq> N1\\<close>"], ["proof (state)\nthis:\n  N2 \\<subseteq> N1\n\ngoal (3 subgoals):\n 1. \\<And>N2 N1.\n       N2 \\<subseteq> N1 \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 2. \\<And>N2 N1.\n       \\<forall>C\\<in>N2.\n          \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset {C} \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 3. \\<And>N1 N2 N3.\n       \\<lbrakk>\\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2;\n        \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3", "then"], ["proof (chain)\npicking this:\n  N2 \\<subseteq> N1", "show \\<open>N1 \\<Turnstile>\\<G> N2\\<close>"], ["proof (prove)\nusing this:\n  N2 \\<subseteq> N1\n\ngoal (1 subgoal):\n 1. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2", "using \\<G>_subset ground.subset_entailed"], ["proof (prove)\nusing this:\n  N2 \\<subseteq> N1\n  ?N1.0 \\<subseteq> ?N2.0 \\<Longrightarrow>\n  \\<G>_Fset ?N1.0 \\<subseteq> \\<G>_Fset ?N2.0\n  ?N2.0 \\<subseteq> ?N1.0 \\<Longrightarrow> ?N1.0 \\<Turnstile>G ?N2.0\n\ngoal (1 subgoal):\n 1. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2", "by auto"], ["proof (state)\nthis:\n  \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n\ngoal (2 subgoals):\n 1. \\<And>N2 N1.\n       \\<forall>C\\<in>N2.\n          \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset {C} \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 2. \\<And>N1 N2 N3.\n       \\<lbrakk>\\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2;\n        \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>N2 N1.\n       \\<forall>C\\<in>N2.\n          \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset {C} \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 2. \\<And>N1 N2 N3.\n       \\<lbrakk>\\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2;\n        \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3", "fix N1 N2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>N2 N1.\n       \\<forall>C\\<in>N2.\n          \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset {C} \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 2. \\<And>N1 N2 N3.\n       \\<lbrakk>\\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2;\n        \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3", "assume\n    N1_entails_C: \\<open>\\<forall>C \\<in> N2. N1 \\<Turnstile>\\<G> {C}\\<close>"], ["proof (state)\nthis:\n  \\<forall>C\\<in>N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset {C}\n\ngoal (2 subgoals):\n 1. \\<And>N2 N1.\n       \\<forall>C\\<in>N2.\n          \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset {C} \\<Longrightarrow>\n       \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n 2. \\<And>N1 N2 N3.\n       \\<lbrakk>\\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2;\n        \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3", "show \\<open>N1 \\<Turnstile>\\<G> N2\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2", "using ground.all_formulas_entailed N1_entails_C"], ["proof (prove)\nusing this:\n  \\<forall>C\\<in>?N2.0. ?N1.0 \\<Turnstile>G {C} \\<Longrightarrow>\n  ?N1.0 \\<Turnstile>G ?N2.0\n  \\<forall>C\\<in>N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset {C}\n\ngoal (1 subgoal):\n 1. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2", "by (smt UN_E UN_I ground.entail_set_all_formulas singletonI)"], ["proof (state)\nthis:\n  \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n\ngoal (1 subgoal):\n 1. \\<And>N1 N2 N3.\n       \\<lbrakk>\\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2;\n        \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>N1 N2 N3.\n       \\<lbrakk>\\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2;\n        \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3", "fix N1 N2 N3"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>N1 N2 N3.\n       \\<lbrakk>\\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2;\n        \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3", "assume\n    \\<open>N1 \\<Turnstile>\\<G> N2\\<close> and \\<open>N2 \\<Turnstile>\\<G> N3\\<close>"], ["proof (state)\nthis:\n  \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n  \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\n\ngoal (1 subgoal):\n 1. \\<And>N1 N2 N3.\n       \\<lbrakk>\\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2;\n        \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3", "then"], ["proof (chain)\npicking this:\n  \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n  \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3", "show \\<open>N1 \\<Turnstile>\\<G> N3\\<close>"], ["proof (prove)\nusing this:\n  \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n  \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\n\ngoal (1 subgoal):\n 1. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3", "using ground.entails_trans"], ["proof (prove)\nusing this:\n  \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2\n  \\<G>_Fset N2 \\<Turnstile>G \\<G>_Fset N3\n  \\<lbrakk>?N1.0 \\<Turnstile>G ?N2.0; ?N2.0 \\<Turnstile>G ?N3.0\\<rbrakk>\n  \\<Longrightarrow> ?N1.0 \\<Turnstile>G ?N3.0\n\ngoal (1 subgoal):\n 1. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3", "by blast"], ["proof (state)\nthis:\n  \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N3\n\ngoal:\nNo subgoals!", "qed"], ["", "definition Red_I_\\<G> :: \"'f set \\<Rightarrow> 'f inference set\" where\n  \\<open>Red_I_\\<G> N = {\\<iota> \\<in> Inf_F. (\\<G>_I \\<iota> \\<noteq> None \\<and> the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset N))\n  \\<or> (\\<G>_I \\<iota> = None \\<and> \\<G>_F (concl_of \\<iota>) \\<subseteq> \\<G>_Fset N \\<union> Red_F_G (\\<G>_Fset N))}\\<close>"], ["", "definition Red_F_\\<G> :: \"'f set \\<Rightarrow> 'f set\" where\n  \\<open>Red_F_\\<G> N = {C. \\<forall>D \\<in> \\<G>_F C. D \\<in> Red_F_G (\\<G>_Fset N)}\\<close>"], ["", "end"], ["", "subsection \\<open>Strong Standard Lifting\\<close>"], ["", "(* rmk:strong-standard-lifting *)"], ["", "locale strong_standard_lifting = inference_system Inf_F +\n  ground: calculus Bot_G Inf_G entails_G Red_I_G Red_F_G\n  for\n    Inf_F :: \\<open>'f inference set\\<close> and\n    Bot_G :: \\<open>'g set\\<close> and\n    Inf_G ::  \\<open>'g inference set\\<close> and\n    entails_G ::  \\<open>'g set  \\<Rightarrow> 'g set  \\<Rightarrow> bool\\<close> (infix \"\\<Turnstile>G\" 50) and\n    Red_I_G :: \\<open>'g set \\<Rightarrow> 'g inference set\\<close> and\n    Red_F_G :: \\<open>'g set \\<Rightarrow> 'g set\\<close>\n  + fixes\n    Bot_F :: \\<open>'f set\\<close> and\n    \\<G>_F :: \\<open>'f \\<Rightarrow> 'g set\\<close> and\n    \\<G>_I :: \\<open>'f inference \\<Rightarrow> 'g inference set option\\<close>\n  assumes\n    Bot_F_not_empty: \"Bot_F \\<noteq> {}\" and\n    Bot_map_not_empty: \\<open>B \\<in> Bot_F \\<Longrightarrow> \\<G>_F B \\<noteq> {}\\<close> and\n    Bot_map: \\<open>B \\<in> Bot_F \\<Longrightarrow> \\<G>_F B \\<subseteq> Bot_G\\<close> and\n    Bot_cond: \\<open>\\<G>_F C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> C \\<in> Bot_F\\<close> and\n    strong_inf_map: \\<open>\\<iota> \\<in> Inf_F \\<Longrightarrow> \\<G>_I \\<iota> \\<noteq> None \\<Longrightarrow> concl_of ` (the (\\<G>_I \\<iota>)) \\<subseteq> (\\<G>_F (concl_of \\<iota>))\\<close> and\n    inf_map_in_Inf: \\<open>\\<iota> \\<in> Inf_F \\<Longrightarrow> \\<G>_I \\<iota> \\<noteq> None \\<Longrightarrow> the (\\<G>_I \\<iota>) \\<subseteq> Inf_G\\<close>\nbegin"], ["", "sublocale standard_lifting Inf_F Bot_G Inf_G \"(\\<Turnstile>G)\" Red_I_G Red_F_G Bot_F \\<G>_F \\<G>_I"], ["proof (prove)\ngoal (1 subgoal):\n 1. standard_lifting Inf_F Bot_G Inf_G (\\<Turnstile>G) Red_I_G Red_F_G Bot_F\n     \\<G>_F \\<G>_I", "proof"], ["proof (state)\ngoal (5 subgoals):\n 1. Bot_F \\<noteq> {}\n 2. \\<And>B. B \\<in> Bot_F \\<Longrightarrow> \\<G>_F B \\<noteq> {}\n 3. \\<And>B. B \\<in> Bot_F \\<Longrightarrow> \\<G>_F B \\<subseteq> Bot_G\n 4. \\<And>C.\n       \\<G>_F C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> C \\<in> Bot_F\n 5. \\<And>\\<iota>.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                         \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "show \"Bot_F \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Bot_F \\<noteq> {}", "using Bot_F_not_empty"], ["proof (prove)\nusing this:\n  Bot_F \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Bot_F \\<noteq> {}", "."], ["proof (state)\nthis:\n  Bot_F \\<noteq> {}\n\ngoal (4 subgoals):\n 1. \\<And>B. B \\<in> Bot_F \\<Longrightarrow> \\<G>_F B \\<noteq> {}\n 2. \\<And>B. B \\<in> Bot_F \\<Longrightarrow> \\<G>_F B \\<subseteq> Bot_G\n 3. \\<And>C.\n       \\<G>_F C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> C \\<in> Bot_F\n 4. \\<And>\\<iota>.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                         \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>B. B \\<in> Bot_F \\<Longrightarrow> \\<G>_F B \\<noteq> {}\n 2. \\<And>B. B \\<in> Bot_F \\<Longrightarrow> \\<G>_F B \\<subseteq> Bot_G\n 3. \\<And>C.\n       \\<G>_F C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> C \\<in> Bot_F\n 4. \\<And>\\<iota>.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                         \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "fix B"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>B. B \\<in> Bot_F \\<Longrightarrow> \\<G>_F B \\<noteq> {}\n 2. \\<And>B. B \\<in> Bot_F \\<Longrightarrow> \\<G>_F B \\<subseteq> Bot_G\n 3. \\<And>C.\n       \\<G>_F C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> C \\<in> Bot_F\n 4. \\<And>\\<iota>.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                         \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "assume b_in: \"B \\<in> Bot_F\""], ["proof (state)\nthis:\n  B \\<in> Bot_F\n\ngoal (4 subgoals):\n 1. \\<And>B. B \\<in> Bot_F \\<Longrightarrow> \\<G>_F B \\<noteq> {}\n 2. \\<And>B. B \\<in> Bot_F \\<Longrightarrow> \\<G>_F B \\<subseteq> Bot_G\n 3. \\<And>C.\n       \\<G>_F C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> C \\<in> Bot_F\n 4. \\<And>\\<iota>.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                         \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "show \"\\<G>_F B \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G>_F B \\<noteq> {}", "using Bot_map_not_empty[OF b_in]"], ["proof (prove)\nusing this:\n  \\<G>_F B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<G>_F B \\<noteq> {}", "."], ["proof (state)\nthis:\n  \\<G>_F B \\<noteq> {}\n\ngoal (3 subgoals):\n 1. \\<And>B. B \\<in> Bot_F \\<Longrightarrow> \\<G>_F B \\<subseteq> Bot_G\n 2. \\<And>C.\n       \\<G>_F C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> C \\<in> Bot_F\n 3. \\<And>\\<iota>.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                         \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>B. B \\<in> Bot_F \\<Longrightarrow> \\<G>_F B \\<subseteq> Bot_G\n 2. \\<And>C.\n       \\<G>_F C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> C \\<in> Bot_F\n 3. \\<And>\\<iota>.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                         \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "fix B"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>B. B \\<in> Bot_F \\<Longrightarrow> \\<G>_F B \\<subseteq> Bot_G\n 2. \\<And>C.\n       \\<G>_F C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> C \\<in> Bot_F\n 3. \\<And>\\<iota>.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                         \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "assume b_in: \"B \\<in> Bot_F\""], ["proof (state)\nthis:\n  B \\<in> Bot_F\n\ngoal (3 subgoals):\n 1. \\<And>B. B \\<in> Bot_F \\<Longrightarrow> \\<G>_F B \\<subseteq> Bot_G\n 2. \\<And>C.\n       \\<G>_F C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> C \\<in> Bot_F\n 3. \\<And>\\<iota>.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                         \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "show \"\\<G>_F B \\<subseteq> Bot_G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G>_F B \\<subseteq> Bot_G", "using Bot_map[OF b_in]"], ["proof (prove)\nusing this:\n  \\<G>_F B \\<subseteq> Bot_G\n\ngoal (1 subgoal):\n 1. \\<G>_F B \\<subseteq> Bot_G", "."], ["proof (state)\nthis:\n  \\<G>_F B \\<subseteq> Bot_G\n\ngoal (2 subgoals):\n 1. \\<And>C.\n       \\<G>_F C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> C \\<in> Bot_F\n 2. \\<And>\\<iota>.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                         \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C.\n       \\<G>_F C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> C \\<in> Bot_F\n 2. \\<And>\\<iota>.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                         \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "show \"\\<And>C. \\<G>_F C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> C \\<in> Bot_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>C.\n       \\<G>_F C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> C \\<in> Bot_F", "using Bot_cond"], ["proof (prove)\nusing this:\n  \\<G>_F ?C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> ?C \\<in> Bot_F\n\ngoal (1 subgoal):\n 1. \\<And>C.\n       \\<G>_F C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> C \\<in> Bot_F", "."], ["proof (state)\nthis:\n  \\<G>_F ?C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> ?C \\<in> Bot_F\n\ngoal (1 subgoal):\n 1. \\<And>\\<iota>.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                         \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<iota>.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                         \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "fix \\<iota>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<iota>.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                         \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "assume i_in: \"\\<iota> \\<in> Inf_F\" and\n    some_g: \"\\<G>_I \\<iota> \\<noteq> None\""], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_F\n  \\<G>_I \\<iota> \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<And>\\<iota>.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                         \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "show \"the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> the (\\<G>_I \\<iota>) \\<Longrightarrow>\n       x \\<in> Red_I_G (\\<G>_F (concl_of \\<iota>))", "fix \\<iota>G"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> the (\\<G>_I \\<iota>) \\<Longrightarrow>\n       x \\<in> Red_I_G (\\<G>_F (concl_of \\<iota>))", "assume ig_in1: \"\\<iota>G \\<in> the (\\<G>_I \\<iota>)\""], ["proof (state)\nthis:\n  \\<iota>G \\<in> the (\\<G>_I \\<iota>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> the (\\<G>_I \\<iota>) \\<Longrightarrow>\n       x \\<in> Red_I_G (\\<G>_F (concl_of \\<iota>))", "then"], ["proof (chain)\npicking this:\n  \\<iota>G \\<in> the (\\<G>_I \\<iota>)", "have ig_in2: \"\\<iota>G \\<in> Inf_G\""], ["proof (prove)\nusing this:\n  \\<iota>G \\<in> the (\\<G>_I \\<iota>)\n\ngoal (1 subgoal):\n 1. \\<iota>G \\<in> Inf_G", "using inf_map_in_Inf[OF i_in some_g]"], ["proof (prove)\nusing this:\n  \\<iota>G \\<in> the (\\<G>_I \\<iota>)\n  the (\\<G>_I \\<iota>) \\<subseteq> Inf_G\n\ngoal (1 subgoal):\n 1. \\<iota>G \\<in> Inf_G", "by blast"], ["proof (state)\nthis:\n  \\<iota>G \\<in> Inf_G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> the (\\<G>_I \\<iota>) \\<Longrightarrow>\n       x \\<in> Red_I_G (\\<G>_F (concl_of \\<iota>))", "show \"\\<iota>G \\<in> Red_I_G (\\<G>_F (concl_of \\<iota>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota>G \\<in> Red_I_G (\\<G>_F (concl_of \\<iota>))", "using strong_inf_map[OF i_in some_g] ground.Red_I_of_Inf_to_N[OF ig_in2]\n        ig_in1"], ["proof (prove)\nusing this:\n  concl_of ` the (\\<G>_I \\<iota>) \\<subseteq> \\<G>_F (concl_of \\<iota>)\n  concl_of \\<iota>G \\<in> ?N \\<Longrightarrow> \\<iota>G \\<in> Red_I_G ?N\n  \\<iota>G \\<in> the (\\<G>_I \\<iota>)\n\ngoal (1 subgoal):\n 1. \\<iota>G \\<in> Red_I_G (\\<G>_F (concl_of \\<iota>))", "by blast"], ["proof (state)\nthis:\n  \\<iota>G \\<in> Red_I_G (\\<G>_F (concl_of \\<iota>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Lifting with a Family of Tiebreaker Orderings\\<close>"], ["", "locale tiebreaker_lifting =\n  empty_ord?: standard_lifting Inf_F Bot_G Inf_G entails_G Red_I_G Red_F_G Bot_F \\<G>_F \\<G>_I\n  for\n    Bot_F :: \\<open>'f set\\<close> and\n    Inf_F :: \\<open>'f inference set\\<close> and\n    Bot_G :: \\<open>'g set\\<close> and\n    entails_G :: \\<open>'g set \\<Rightarrow> 'g set \\<Rightarrow> bool\\<close> (infix \"\\<Turnstile>G\" 50) and\n    Inf_G :: \\<open>'g inference set\\<close> and\n    Red_I_G :: \\<open>'g set \\<Rightarrow> 'g inference set\\<close> and\n    Red_F_G :: \\<open>'g set \\<Rightarrow> 'g set\\<close> and\n    \\<G>_F :: \"'f \\<Rightarrow> 'g set\" and\n    \\<G>_I :: \"'f inference \\<Rightarrow> 'g inference set option\"\n  + fixes\n    Prec_F_g :: \\<open>'g \\<Rightarrow> 'f \\<Rightarrow> 'f \\<Rightarrow> bool\\<close>\n  assumes\n    all_wf: \"minimal_element (Prec_F_g g) UNIV\"\nbegin"], ["", "definition Red_F_\\<G> :: \"'f set \\<Rightarrow> 'f set\" where\n  \\<open>Red_F_\\<G> N = {C. \\<forall>D \\<in> \\<G>_F C. D \\<in> Red_F_G (\\<G>_Fset N) \\<or> (\\<exists>E \\<in> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)}\\<close>"], ["", "lemma Prec_trans:\n  assumes\n    \\<open>Prec_F_g D A B\\<close> and\n    \\<open>Prec_F_g D B C\\<close>\n  shows\n    \\<open>Prec_F_g D A C\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. Prec_F_g D A C", "using minimal_element.po assms"], ["proof (prove)\nusing this:\n  minimal_element ?P ?A \\<Longrightarrow> po_on ?P ?A\n  Prec_F_g D A B\n  Prec_F_g D B C\n\ngoal (1 subgoal):\n 1. Prec_F_g D A C", "unfolding po_on_def transp_on_def"], ["proof (prove)\nusing this:\n  minimal_element ?P ?A \\<Longrightarrow>\n  irreflp_on ?P ?A \\<and>\n  (\\<forall>x\\<in>?A.\n      \\<forall>y\\<in>?A.\n         \\<forall>z\\<in>?A. ?P x y \\<and> ?P y z \\<longrightarrow> ?P x z)\n  Prec_F_g D A B\n  Prec_F_g D B C\n\ngoal (1 subgoal):\n 1. Prec_F_g D A C", "by (smt UNIV_I all_wf)"], ["", "lemma prop_nested_in_set: \"D \\<in> P C \\<Longrightarrow> C \\<in> {C. \\<forall>D \\<in> P C. A D \\<or> B C D} \\<Longrightarrow> A D \\<or> B C D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D \\<in> P C;\n     C \\<in> {C. \\<forall>D\\<in>P C. A D \\<or> B C D}\\<rbrakk>\n    \\<Longrightarrow> A D \\<or> B C D", "by blast"], ["", "(* lem:wolog-C'-nonredundant *)"], ["", "lemma Red_F_\\<G>_equiv_def:\n  \\<open>Red_F_\\<G> N = {C. \\<forall>Di \\<in> \\<G>_F C. Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n    (\\<exists>E \\<in> (N - Red_F_\\<G> N). Prec_F_g Di E C \\<and> Di \\<in> \\<G>_F E)}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.Red_F_\\<G> N =\n    {C. \\<forall>Di\\<in>\\<G>_F C.\n           Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n           (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n               Prec_F_g Di E C \\<and> Di \\<in> \\<G>_F E)}", "proof (rule; clarsimp)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x Di.\n       \\<lbrakk>x \\<in> local.Red_F_\\<G> N; Di \\<in> \\<G>_F x;\n        \\<forall>E\\<in>N - local.Red_F_\\<G> N.\n           Prec_F_g Di E x \\<longrightarrow> Di \\<notin> \\<G>_F E\\<rbrakk>\n       \\<Longrightarrow> Di \\<in> Red_F_G (\\<G>_Fset N)\n 2. \\<And>x.\n       \\<forall>Di\\<in>\\<G>_F x.\n          Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n          (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n              Prec_F_g Di E x \\<and> Di \\<in> \\<G>_F E) \\<Longrightarrow>\n       x \\<in> local.Red_F_\\<G> N", "fix C D"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x Di.\n       \\<lbrakk>x \\<in> local.Red_F_\\<G> N; Di \\<in> \\<G>_F x;\n        \\<forall>E\\<in>N - local.Red_F_\\<G> N.\n           Prec_F_g Di E x \\<longrightarrow> Di \\<notin> \\<G>_F E\\<rbrakk>\n       \\<Longrightarrow> Di \\<in> Red_F_G (\\<G>_Fset N)\n 2. \\<And>x.\n       \\<forall>Di\\<in>\\<G>_F x.\n          Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n          (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n              Prec_F_g Di E x \\<and> Di \\<in> \\<G>_F E) \\<Longrightarrow>\n       x \\<in> local.Red_F_\\<G> N", "assume\n    C_in: \\<open>C \\<in> Red_F_\\<G> N\\<close> and\n    D_in: \\<open>D \\<in> \\<G>_F C\\<close> and\n    not_sec_case: \\<open>\\<forall>E \\<in> N - Red_F_\\<G> N. Prec_F_g D E C \\<longrightarrow> D \\<notin> \\<G>_F E\\<close>"], ["proof (state)\nthis:\n  C \\<in> local.Red_F_\\<G> N\n  D \\<in> \\<G>_F C\n  \\<forall>E\\<in>N - local.Red_F_\\<G> N.\n     Prec_F_g D E C \\<longrightarrow> D \\<notin> \\<G>_F E\n\ngoal (2 subgoals):\n 1. \\<And>x Di.\n       \\<lbrakk>x \\<in> local.Red_F_\\<G> N; Di \\<in> \\<G>_F x;\n        \\<forall>E\\<in>N - local.Red_F_\\<G> N.\n           Prec_F_g Di E x \\<longrightarrow> Di \\<notin> \\<G>_F E\\<rbrakk>\n       \\<Longrightarrow> Di \\<in> Red_F_G (\\<G>_Fset N)\n 2. \\<And>x.\n       \\<forall>Di\\<in>\\<G>_F x.\n          Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n          (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n              Prec_F_g Di E x \\<and> Di \\<in> \\<G>_F E) \\<Longrightarrow>\n       x \\<in> local.Red_F_\\<G> N", "have C_in_unfolded: \"C \\<in> {C. \\<forall>Di \\<in> \\<G>_F C. Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n    (\\<exists>E\\<in>N. Prec_F_g Di E C \\<and> Di \\<in> \\<G>_F E)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<in> {C. \\<forall>Di\\<in>\\<G>_F C.\n                   Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n                   (\\<exists>E\\<in>N.\n                       Prec_F_g Di E C \\<and> Di \\<in> \\<G>_F E)}", "using C_in"], ["proof (prove)\nusing this:\n  C \\<in> local.Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. C \\<in> {C. \\<forall>Di\\<in>\\<G>_F C.\n                   Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n                   (\\<exists>E\\<in>N.\n                       Prec_F_g Di E C \\<and> Di \\<in> \\<G>_F E)}", "unfolding Red_F_\\<G>_def"], ["proof (prove)\nusing this:\n  C \\<in> {C. \\<forall>D\\<in>\\<G>_F C.\n                 D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n                 (\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)}\n\ngoal (1 subgoal):\n 1. C \\<in> {C. \\<forall>Di\\<in>\\<G>_F C.\n                   Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n                   (\\<exists>E\\<in>N.\n                       Prec_F_g Di E C \\<and> Di \\<in> \\<G>_F E)}", "."], ["proof (state)\nthis:\n  C \\<in> {C. \\<forall>Di\\<in>\\<G>_F C.\n                 Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n                 (\\<exists>E\\<in>N.\n                     Prec_F_g Di E C \\<and> Di \\<in> \\<G>_F E)}\n\ngoal (2 subgoals):\n 1. \\<And>x Di.\n       \\<lbrakk>x \\<in> local.Red_F_\\<G> N; Di \\<in> \\<G>_F x;\n        \\<forall>E\\<in>N - local.Red_F_\\<G> N.\n           Prec_F_g Di E x \\<longrightarrow> Di \\<notin> \\<G>_F E\\<rbrakk>\n       \\<Longrightarrow> Di \\<in> Red_F_G (\\<G>_Fset N)\n 2. \\<And>x.\n       \\<forall>Di\\<in>\\<G>_F x.\n          Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n          (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n              Prec_F_g Di E x \\<and> Di \\<in> \\<G>_F E) \\<Longrightarrow>\n       x \\<in> local.Red_F_\\<G> N", "have neg_not_sec_case: \\<open>\\<not> (\\<exists>E\\<in>N - Red_F_\\<G> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n               Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "using not_sec_case"], ["proof (prove)\nusing this:\n  \\<forall>E\\<in>N - local.Red_F_\\<G> N.\n     Prec_F_g D E C \\<longrightarrow> D \\<notin> \\<G>_F E\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n               Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "by clarsimp"], ["proof (state)\nthis:\n  \\<not> (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n             Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n\ngoal (2 subgoals):\n 1. \\<And>x Di.\n       \\<lbrakk>x \\<in> local.Red_F_\\<G> N; Di \\<in> \\<G>_F x;\n        \\<forall>E\\<in>N - local.Red_F_\\<G> N.\n           Prec_F_g Di E x \\<longrightarrow> Di \\<notin> \\<G>_F E\\<rbrakk>\n       \\<Longrightarrow> Di \\<in> Red_F_G (\\<G>_Fset N)\n 2. \\<And>x.\n       \\<forall>Di\\<in>\\<G>_F x.\n          Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n          (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n              Prec_F_g Di E x \\<and> Di \\<in> \\<G>_F E) \\<Longrightarrow>\n       x \\<in> local.Red_F_\\<G> N", "have unfol_C_D: \\<open>D \\<in> Red_F_G (\\<G>_Fset N) \\<or> (\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n    (\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "using prop_nested_in_set[of D \\<G>_F C \"\\<lambda>x. x \\<in> Red_F_G (\\<Union> (\\<G>_F ` N))\"\n      \"\\<lambda>x y. \\<exists>E \\<in> N. Prec_F_g y E x \\<and> y \\<in> \\<G>_F E\", OF D_in C_in_unfolded]"], ["proof (prove)\nusing this:\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n  (\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n    (\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "by blast"], ["proof (state)\nthis:\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n  (\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n\ngoal (2 subgoals):\n 1. \\<And>x Di.\n       \\<lbrakk>x \\<in> local.Red_F_\\<G> N; Di \\<in> \\<G>_F x;\n        \\<forall>E\\<in>N - local.Red_F_\\<G> N.\n           Prec_F_g Di E x \\<longrightarrow> Di \\<notin> \\<G>_F E\\<rbrakk>\n       \\<Longrightarrow> Di \\<in> Red_F_G (\\<G>_Fset N)\n 2. \\<And>x.\n       \\<forall>Di\\<in>\\<G>_F x.\n          Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n          (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n              Prec_F_g Di E x \\<and> Di \\<in> \\<G>_F E) \\<Longrightarrow>\n       x \\<in> local.Red_F_\\<G> N", "show \\<open>D \\<in> Red_F_G (\\<G>_Fset N)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset N)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. D \\<notin> Red_F_G (\\<G>_Fset N) \\<Longrightarrow> False", "assume contrad: \\<open>D \\<notin> Red_F_G (\\<G>_Fset N)\\<close>"], ["proof (state)\nthis:\n  D \\<notin> Red_F_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. D \\<notin> Red_F_G (\\<G>_Fset N) \\<Longrightarrow> False", "have non_empty: \\<open>\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E", "using contrad unfol_C_D"], ["proof (prove)\nusing this:\n  D \\<notin> Red_F_G (\\<G>_Fset N)\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n  (\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n\ngoal (1 subgoal):\n 1. \\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E", "by auto"], ["proof (state)\nthis:\n  \\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E\n\ngoal (1 subgoal):\n 1. D \\<notin> Red_F_G (\\<G>_Fset N) \\<Longrightarrow> False", "define B where \\<open>B = {E \\<in> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E}\\<close>"], ["proof (state)\nthis:\n  B = {E \\<in> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E}\n\ngoal (1 subgoal):\n 1. D \\<notin> Red_F_G (\\<G>_Fset N) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  B = {E \\<in> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E}", "have B_non_empty: \\<open>B \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  B = {E \\<in> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E}\n\ngoal (1 subgoal):\n 1. B \\<noteq> {}", "using non_empty"], ["proof (prove)\nusing this:\n  B = {E \\<in> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E}\n  \\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E\n\ngoal (1 subgoal):\n 1. B \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. D \\<notin> Red_F_G (\\<G>_Fset N) \\<Longrightarrow> False", "interpret minimal_element \"Prec_F_g D\" UNIV"], ["proof (prove)\ngoal (1 subgoal):\n 1. minimal_element (Prec_F_g D) UNIV", "using all_wf[of D]"], ["proof (prove)\nusing this:\n  minimal_element (Prec_F_g D) UNIV\n\ngoal (1 subgoal):\n 1. minimal_element (Prec_F_g D) UNIV", "."], ["proof (state)\ngoal (1 subgoal):\n 1. D \\<notin> Red_F_G (\\<G>_Fset N) \\<Longrightarrow> False", "obtain F :: 'f where F: \\<open>F = min_elt B\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>F. F = min_elt B \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  F = min_elt B\n\ngoal (1 subgoal):\n 1. D \\<notin> Red_F_G (\\<G>_Fset N) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  F = min_elt B", "have D_in_F: \\<open>D \\<in> \\<G>_F F\\<close>"], ["proof (prove)\nusing this:\n  F = min_elt B\n\ngoal (1 subgoal):\n 1. D \\<in> \\<G>_F F", "unfolding B_def"], ["proof (prove)\nusing this:\n  F = min_elt {E \\<in> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E}\n\ngoal (1 subgoal):\n 1. D \\<in> \\<G>_F F", "using non_empty"], ["proof (prove)\nusing this:\n  F = min_elt {E \\<in> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E}\n  \\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E\n\ngoal (1 subgoal):\n 1. D \\<in> \\<G>_F F", "by (smt Sup_UNIV Sup_upper UNIV_I contra_subsetD empty_iff empty_subsetI mem_Collect_eq\n        min_elt_mem unfol_C_D)"], ["proof (state)\nthis:\n  D \\<in> \\<G>_F F\n\ngoal (1 subgoal):\n 1. D \\<notin> Red_F_G (\\<G>_Fset N) \\<Longrightarrow> False", "have F_prec: \\<open>Prec_F_g D F C\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. Prec_F_g D F C", "using F min_elt_mem[of B, OF _ B_non_empty]"], ["proof (prove)\nusing this:\n  F = min_elt B\n  B \\<subseteq> UNIV \\<Longrightarrow> min_elt B \\<in> B\n\ngoal (1 subgoal):\n 1. Prec_F_g D F C", "unfolding B_def"], ["proof (prove)\nusing this:\n  F = min_elt {E \\<in> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E}\n  {E \\<in> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E}\n  \\<subseteq> UNIV \\<Longrightarrow>\n  min_elt {E \\<in> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E}\n  \\<in> {E \\<in> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E}\n\ngoal (1 subgoal):\n 1. Prec_F_g D F C", "by auto"], ["proof (state)\nthis:\n  Prec_F_g D F C\n\ngoal (1 subgoal):\n 1. D \\<notin> Red_F_G (\\<G>_Fset N) \\<Longrightarrow> False", "have F_not_in: \\<open>F \\<notin> Red_F_\\<G> N\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<notin> local.Red_F_\\<G> N", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. F \\<in> local.Red_F_\\<G> N \\<Longrightarrow> False", "assume F_in: \\<open>F \\<in> Red_F_\\<G> N\\<close>"], ["proof (state)\nthis:\n  F \\<in> local.Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. F \\<in> local.Red_F_\\<G> N \\<Longrightarrow> False", "have unfol_F_D: \\<open>D \\<in> Red_F_G (\\<G>_Fset N) \\<or> (\\<exists>G\\<in>N. Prec_F_g D G F \\<and> D \\<in> \\<G>_F G)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n    (\\<exists>G\\<in>N. Prec_F_g D G F \\<and> D \\<in> \\<G>_F G)", "using F_in D_in_F"], ["proof (prove)\nusing this:\n  F \\<in> local.Red_F_\\<G> N\n  D \\<in> \\<G>_F F\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n    (\\<exists>G\\<in>N. Prec_F_g D G F \\<and> D \\<in> \\<G>_F G)", "unfolding Red_F_\\<G>_def"], ["proof (prove)\nusing this:\n  F \\<in> {C. \\<forall>D\\<in>\\<G>_F C.\n                 D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n                 (\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)}\n  D \\<in> \\<G>_F F\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n    (\\<exists>G\\<in>N. Prec_F_g D G F \\<and> D \\<in> \\<G>_F G)", "by auto"], ["proof (state)\nthis:\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n  (\\<exists>G\\<in>N. Prec_F_g D G F \\<and> D \\<in> \\<G>_F G)\n\ngoal (1 subgoal):\n 1. F \\<in> local.Red_F_\\<G> N \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n  (\\<exists>G\\<in>N. Prec_F_g D G F \\<and> D \\<in> \\<G>_F G)", "have \\<open>\\<exists>G\\<in>N. Prec_F_g D G F \\<and> D \\<in> \\<G>_F G\\<close>"], ["proof (prove)\nusing this:\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n  (\\<exists>G\\<in>N. Prec_F_g D G F \\<and> D \\<in> \\<G>_F G)\n\ngoal (1 subgoal):\n 1. \\<exists>G\\<in>N. Prec_F_g D G F \\<and> D \\<in> \\<G>_F G", "using contrad D_in"], ["proof (prove)\nusing this:\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n  (\\<exists>G\\<in>N. Prec_F_g D G F \\<and> D \\<in> \\<G>_F G)\n  D \\<notin> Red_F_G (\\<G>_Fset N)\n  D \\<in> \\<G>_F C\n\ngoal (1 subgoal):\n 1. \\<exists>G\\<in>N. Prec_F_g D G F \\<and> D \\<in> \\<G>_F G", "unfolding Red_F_\\<G>_def"], ["proof (prove)\nusing this:\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n  (\\<exists>G\\<in>N. Prec_F_g D G F \\<and> D \\<in> \\<G>_F G)\n  D \\<notin> Red_F_G (\\<G>_Fset N)\n  D \\<in> \\<G>_F C\n\ngoal (1 subgoal):\n 1. \\<exists>G\\<in>N. Prec_F_g D G F \\<and> D \\<in> \\<G>_F G", "by auto"], ["proof (state)\nthis:\n  \\<exists>G\\<in>N. Prec_F_g D G F \\<and> D \\<in> \\<G>_F G\n\ngoal (1 subgoal):\n 1. F \\<in> local.Red_F_\\<G> N \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>G\\<in>N. Prec_F_g D G F \\<and> D \\<in> \\<G>_F G", "obtain G where G_in: \\<open>G \\<in> N\\<close> and G_prec: \\<open>Prec_F_g D G F\\<close> and G_map: \\<open>D \\<in> \\<G>_F G\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>G\\<in>N. Prec_F_g D G F \\<and> D \\<in> \\<G>_F G\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<in> N; Prec_F_g D G F; D \\<in> \\<G>_F G\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  G \\<in> N\n  Prec_F_g D G F\n  D \\<in> \\<G>_F G\n\ngoal (1 subgoal):\n 1. F \\<in> local.Red_F_\\<G> N \\<Longrightarrow> False", "have \\<open>Prec_F_g D G C\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. Prec_F_g D G C", "using G_prec F_prec Prec_trans"], ["proof (prove)\nusing this:\n  Prec_F_g D G F\n  Prec_F_g D F C\n  \\<lbrakk>Prec_F_g ?D ?A ?B; Prec_F_g ?D ?B ?C\\<rbrakk>\n  \\<Longrightarrow> Prec_F_g ?D ?A ?C\n\ngoal (1 subgoal):\n 1. Prec_F_g D G C", "by blast"], ["proof (state)\nthis:\n  Prec_F_g D G C\n\ngoal (1 subgoal):\n 1. F \\<in> local.Red_F_\\<G> N \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Prec_F_g D G C", "have \\<open>G \\<in> B\\<close>"], ["proof (prove)\nusing this:\n  Prec_F_g D G C\n\ngoal (1 subgoal):\n 1. G \\<in> B", "unfolding B_def"], ["proof (prove)\nusing this:\n  Prec_F_g D G C\n\ngoal (1 subgoal):\n 1. G \\<in> {E \\<in> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E}", "using G_in G_map"], ["proof (prove)\nusing this:\n  Prec_F_g D G C\n  G \\<in> N\n  D \\<in> \\<G>_F G\n\ngoal (1 subgoal):\n 1. G \\<in> {E \\<in> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E}", "by auto"], ["proof (state)\nthis:\n  G \\<in> B\n\ngoal (1 subgoal):\n 1. F \\<in> local.Red_F_\\<G> N \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  G \\<in> B", "show \\<open>False\\<close>"], ["proof (prove)\nusing this:\n  G \\<in> B\n\ngoal (1 subgoal):\n 1. False", "using F G_prec min_elt_minimal[of B G, OF _ B_non_empty]"], ["proof (prove)\nusing this:\n  G \\<in> B\n  F = min_elt B\n  Prec_F_g D G F\n  \\<lbrakk>B \\<subseteq> UNIV; G \\<in> UNIV;\n   Prec_F_g D G (min_elt B)\\<rbrakk>\n  \\<Longrightarrow> G \\<notin> B\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F \\<notin> local.Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. D \\<notin> Red_F_G (\\<G>_Fset N) \\<Longrightarrow> False", "have \\<open>F \\<in> N\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> N", "using F"], ["proof (prove)\nusing this:\n  F = min_elt B\n\ngoal (1 subgoal):\n 1. F \\<in> N", "by (metis B_def B_non_empty mem_Collect_eq min_elt_mem top_greatest)"], ["proof (state)\nthis:\n  F \\<in> N\n\ngoal (1 subgoal):\n 1. D \\<notin> Red_F_G (\\<G>_Fset N) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  F \\<in> N", "have \\<open>F \\<in> N - Red_F_\\<G> N\\<close>"], ["proof (prove)\nusing this:\n  F \\<in> N\n\ngoal (1 subgoal):\n 1. F \\<in> N - local.Red_F_\\<G> N", "using F_not_in"], ["proof (prove)\nusing this:\n  F \\<in> N\n  F \\<notin> local.Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. F \\<in> N - local.Red_F_\\<G> N", "by auto"], ["proof (state)\nthis:\n  F \\<in> N - local.Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. D \\<notin> Red_F_G (\\<G>_Fset N) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  F \\<in> N - local.Red_F_\\<G> N", "show \\<open>False\\<close>"], ["proof (prove)\nusing this:\n  F \\<in> N - local.Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. False", "using D_in_F neg_not_sec_case F_prec"], ["proof (prove)\nusing this:\n  F \\<in> N - local.Red_F_\\<G> N\n  D \\<in> \\<G>_F F\n  \\<not> (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n             Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n  Prec_F_g D F C\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  D \\<in> Red_F_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>Di\\<in>\\<G>_F x.\n          Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n          (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n              Prec_F_g Di E x \\<and> Di \\<in> \\<G>_F E) \\<Longrightarrow>\n       x \\<in> local.Red_F_\\<G> N", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>Di\\<in>\\<G>_F x.\n          Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n          (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n              Prec_F_g Di E x \\<and> Di \\<in> \\<G>_F E) \\<Longrightarrow>\n       x \\<in> local.Red_F_\\<G> N", "fix C"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>Di\\<in>\\<G>_F x.\n          Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n          (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n              Prec_F_g Di E x \\<and> Di \\<in> \\<G>_F E) \\<Longrightarrow>\n       x \\<in> local.Red_F_\\<G> N", "assume only_if: \\<open>\\<forall>D\\<in>\\<G>_F C. D \\<in> Red_F_G (\\<G>_Fset N) \\<or> (\\<exists>E\\<in>N - Red_F_\\<G> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\\<close>"], ["proof (state)\nthis:\n  \\<forall>D\\<in>\\<G>_F C.\n     D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n     (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n         Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>Di\\<in>\\<G>_F x.\n          Di \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n          (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n              Prec_F_g Di E x \\<and> Di \\<in> \\<G>_F E) \\<Longrightarrow>\n       x \\<in> local.Red_F_\\<G> N", "show \\<open>C \\<in> Red_F_\\<G> N\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<in> local.Red_F_\\<G> N", "unfolding Red_F_\\<G>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<in> {C. \\<forall>D\\<in>\\<G>_F C.\n                   D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n                   (\\<exists>E\\<in>N.\n                       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)}", "using only_if"], ["proof (prove)\nusing this:\n  \\<forall>D\\<in>\\<G>_F C.\n     D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n     (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n         Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n\ngoal (1 subgoal):\n 1. C \\<in> {C. \\<forall>D\\<in>\\<G>_F C.\n                   D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n                   (\\<exists>E\\<in>N.\n                       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)}", "by auto"], ["proof (state)\nthis:\n  C \\<in> local.Red_F_\\<G> N\n\ngoal:\nNo subgoals!", "qed"], ["", "(* lem:lifting-main-technical *)"], ["", "lemma not_red_map_in_map_not_red: \\<open>\\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<subseteq> \\<G>_Fset (N - Red_F_\\<G> N)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G>_Fset N - Red_F_G (\\<G>_Fset N)\n    \\<subseteq> \\<G>_Fset (N - local.Red_F_\\<G> N)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n       x \\<in> \\<G>_Fset (N - local.Red_F_\\<G> N)", "fix D"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n       x \\<in> \\<G>_Fset (N - local.Red_F_\\<G> N)", "assume\n    D_hyp: \\<open>D \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N)\\<close>"], ["proof (state)\nthis:\n  D \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n       x \\<in> \\<G>_Fset (N - local.Red_F_\\<G> N)", "interpret minimal_element \"Prec_F_g D\" UNIV"], ["proof (prove)\ngoal (1 subgoal):\n 1. minimal_element (Prec_F_g D) UNIV", "using all_wf[of D]"], ["proof (prove)\nusing this:\n  minimal_element (Prec_F_g D) UNIV\n\ngoal (1 subgoal):\n 1. minimal_element (Prec_F_g D) UNIV", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n       x \\<in> \\<G>_Fset (N - local.Red_F_\\<G> N)", "have D_in: \\<open>D \\<in> \\<G>_Fset N\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<in> \\<G>_Fset N", "using D_hyp"], ["proof (prove)\nusing this:\n  D \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. D \\<in> \\<G>_Fset N", "by blast"], ["proof (state)\nthis:\n  D \\<in> \\<G>_Fset N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n       x \\<in> \\<G>_Fset (N - local.Red_F_\\<G> N)", "have  D_not_in: \\<open>D \\<notin> Red_F_G (\\<G>_Fset N)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<notin> Red_F_G (\\<G>_Fset N)", "using D_hyp"], ["proof (prove)\nusing this:\n  D \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. D \\<notin> Red_F_G (\\<G>_Fset N)", "by blast"], ["proof (state)\nthis:\n  D \\<notin> Red_F_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n       x \\<in> \\<G>_Fset (N - local.Red_F_\\<G> N)", "have exist_C: \\<open>\\<exists>C. C \\<in> N \\<and> D \\<in> \\<G>_F C\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C. C \\<in> N \\<and> D \\<in> \\<G>_F C", "using D_in"], ["proof (prove)\nusing this:\n  D \\<in> \\<G>_Fset N\n\ngoal (1 subgoal):\n 1. \\<exists>C. C \\<in> N \\<and> D \\<in> \\<G>_F C", "by auto"], ["proof (state)\nthis:\n  \\<exists>C. C \\<in> N \\<and> D \\<in> \\<G>_F C\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n       x \\<in> \\<G>_Fset (N - local.Red_F_\\<G> N)", "define B where \\<open>B = {C \\<in> N. D \\<in> \\<G>_F C}\\<close>"], ["proof (state)\nthis:\n  B = {C \\<in> N. D \\<in> \\<G>_F C}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n       x \\<in> \\<G>_Fset (N - local.Red_F_\\<G> N)", "obtain C where C: \\<open>C = min_elt B\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>C. C = min_elt B \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C = min_elt B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n       x \\<in> \\<G>_Fset (N - local.Red_F_\\<G> N)", "have C_in_N: \\<open>C \\<in> N\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<in> N", "using exist_C"], ["proof (prove)\nusing this:\n  \\<exists>C. C \\<in> N \\<and> D \\<in> \\<G>_F C\n\ngoal (1 subgoal):\n 1. C \\<in> N", "by (metis B_def C empty_iff mem_Collect_eq min_elt_mem top_greatest)"], ["proof (state)\nthis:\n  C \\<in> N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n       x \\<in> \\<G>_Fset (N - local.Red_F_\\<G> N)", "have D_in_C: \\<open>D \\<in> \\<G>_F C\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<in> \\<G>_F C", "using exist_C"], ["proof (prove)\nusing this:\n  \\<exists>C. C \\<in> N \\<and> D \\<in> \\<G>_F C\n\ngoal (1 subgoal):\n 1. D \\<in> \\<G>_F C", "by (metis B_def C empty_iff mem_Collect_eq min_elt_mem top_greatest)"], ["proof (state)\nthis:\n  D \\<in> \\<G>_F C\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n       x \\<in> \\<G>_Fset (N - local.Red_F_\\<G> N)", "have C_not_in: \\<open>C \\<notin> Red_F_\\<G> N\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<notin> local.Red_F_\\<G> N", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. C \\<in> local.Red_F_\\<G> N \\<Longrightarrow> False", "assume C_in: \\<open>C \\<in> Red_F_\\<G> N\\<close>"], ["proof (state)\nthis:\n  C \\<in> local.Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. C \\<in> local.Red_F_\\<G> N \\<Longrightarrow> False", "have \\<open>D \\<in> Red_F_G (\\<G>_Fset N) \\<or> (\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n    (\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "using C_in D_in_C"], ["proof (prove)\nusing this:\n  C \\<in> local.Red_F_\\<G> N\n  D \\<in> \\<G>_F C\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n    (\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "unfolding Red_F_\\<G>_def"], ["proof (prove)\nusing this:\n  C \\<in> {C. \\<forall>D\\<in>\\<G>_F C.\n                 D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n                 (\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)}\n  D \\<in> \\<G>_F C\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n    (\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "by auto"], ["proof (state)\nthis:\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n  (\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n\ngoal (1 subgoal):\n 1. C \\<in> local.Red_F_\\<G> N \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n  (\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "show \\<open>False\\<close>"], ["proof (prove)\nusing this:\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n  (\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<Longrightarrow> False\n 2. \\<exists>E\\<in>N.\n       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E \\<Longrightarrow>\n    False", "assume \\<open>D \\<in> Red_F_G (\\<G>_Fset N)\\<close>"], ["proof (state)\nthis:\n  D \\<in> Red_F_G (\\<G>_Fset N)\n\ngoal (2 subgoals):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<Longrightarrow> False\n 2. \\<exists>E\\<in>N.\n       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  D \\<in> Red_F_G (\\<G>_Fset N)", "show \\<open>False\\<close>"], ["proof (prove)\nusing this:\n  D \\<in> Red_F_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. False", "using D_not_in"], ["proof (prove)\nusing this:\n  D \\<in> Red_F_G (\\<G>_Fset N)\n  D \\<notin> Red_F_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>E\\<in>N.\n       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E \\<Longrightarrow>\n    False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>E\\<in>N.\n       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E \\<Longrightarrow>\n    False", "assume \\<open>\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E\\<close>"], ["proof (state)\nthis:\n  \\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E\n\ngoal (1 subgoal):\n 1. \\<exists>E\\<in>N.\n       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E", "show \\<open>False\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E\n\ngoal (1 subgoal):\n 1. False", "using C"], ["proof (prove)\nusing this:\n  \\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E\n  C = min_elt B\n\ngoal (1 subgoal):\n 1. False", "by (metis (no_types, lifting) B_def UNIV_I empty_iff mem_Collect_eq\n              min_elt_minimal top_greatest)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  C \\<notin> local.Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n       x \\<in> \\<G>_Fset (N - local.Red_F_\\<G> N)", "show \\<open>D \\<in> \\<G>_Fset (N - Red_F_\\<G> N)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<in> \\<G>_Fset (N - local.Red_F_\\<G> N)", "using D_in_C C_not_in C_in_N"], ["proof (prove)\nusing this:\n  D \\<in> \\<G>_F C\n  C \\<notin> local.Red_F_\\<G> N\n  C \\<in> N\n\ngoal (1 subgoal):\n 1. D \\<in> \\<G>_Fset (N - local.Red_F_\\<G> N)", "by blast"], ["proof (state)\nthis:\n  D \\<in> \\<G>_Fset (N - local.Red_F_\\<G> N)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* lem:nonredundant-entails-redundant *)"], ["", "lemma Red_F_Bot_F: \\<open>B \\<in> Bot_F \\<Longrightarrow> N \\<Turnstile>\\<G> {B} \\<Longrightarrow> N - Red_F_\\<G> N \\<Turnstile>\\<G> {B}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> Bot_F; \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n    \\<Longrightarrow> \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n                      \\<G>_Fset {B}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> Bot_F; \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n    \\<Longrightarrow> \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n                      \\<G>_Fset {B}", "fix B N"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> Bot_F; \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n    \\<Longrightarrow> \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n                      \\<G>_Fset {B}", "assume\n    B_in: \\<open>B \\<in> Bot_F\\<close> and\n    N_entails: \\<open>N \\<Turnstile>\\<G> {B}\\<close>"], ["proof (state)\nthis:\n  B \\<in> Bot_F\n  \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> Bot_F; \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n    \\<Longrightarrow> \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n                      \\<G>_Fset {B}", "then"], ["proof (chain)\npicking this:\n  B \\<in> Bot_F\n  \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}", "have to_bot: \\<open>\\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Turnstile>G \\<G>_F B\\<close>"], ["proof (prove)\nusing this:\n  B \\<in> Bot_F\n  \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\n\ngoal (1 subgoal):\n 1. \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Turnstile>G \\<G>_F B", "using ground.Red_F_Bot Bot_map"], ["proof (prove)\nusing this:\n  B \\<in> Bot_F\n  \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\n  \\<lbrakk>?B \\<in> Bot_G; ?N \\<Turnstile>G {?B}\\<rbrakk>\n  \\<Longrightarrow> ?N - Red_F_G ?N \\<Turnstile>G {?B}\n  ?B \\<in> Bot_F \\<Longrightarrow> \\<G>_F ?B \\<subseteq> Bot_G\n\ngoal (1 subgoal):\n 1. \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Turnstile>G \\<G>_F B", "by (smt cSup_singleton ground.entail_set_all_formulas image_insert image_is_empty subsetCE)"], ["proof (state)\nthis:\n  \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Turnstile>G \\<G>_F B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> Bot_F; \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n    \\<Longrightarrow> \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n                      \\<G>_Fset {B}", "have from_f: \\<open>\\<G>_Fset (N - Red_F_\\<G> N) \\<Turnstile>G \\<G>_Fset N - Red_F_G (\\<G>_Fset N)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n    \\<G>_Fset N - Red_F_G (\\<G>_Fset N)", "using ground.subset_entailed[OF not_red_map_in_map_not_red]"], ["proof (prove)\nusing this:\n  \\<G>_Fset (?N1 - local.Red_F_\\<G> ?N1) \\<Turnstile>G\n  \\<G>_Fset ?N1 - Red_F_G (\\<G>_Fset ?N1)\n\ngoal (1 subgoal):\n 1. \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n    \\<G>_Fset N - Red_F_G (\\<G>_Fset N)", "by blast"], ["proof (state)\nthis:\n  \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n  \\<G>_Fset N - Red_F_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> Bot_F; \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n    \\<Longrightarrow> \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n                      \\<G>_Fset {B}", "then"], ["proof (chain)\npicking this:\n  \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n  \\<G>_Fset N - Red_F_G (\\<G>_Fset N)", "have \\<open>\\<G>_Fset (N - Red_F_\\<G> N) \\<Turnstile>G \\<G>_F B\\<close>"], ["proof (prove)\nusing this:\n  \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n  \\<G>_Fset N - Red_F_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G \\<G>_F B", "using to_bot ground.entails_trans"], ["proof (prove)\nusing this:\n  \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n  \\<G>_Fset N - Red_F_G (\\<G>_Fset N)\n  \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Turnstile>G \\<G>_F B\n  \\<lbrakk>?N1.0 \\<Turnstile>G ?N2.0; ?N2.0 \\<Turnstile>G ?N3.0\\<rbrakk>\n  \\<Longrightarrow> ?N1.0 \\<Turnstile>G ?N3.0\n\ngoal (1 subgoal):\n 1. \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G \\<G>_F B", "by blast"], ["proof (state)\nthis:\n  \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G \\<G>_F B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> Bot_F; \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n    \\<Longrightarrow> \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n                      \\<G>_Fset {B}", "then"], ["proof (chain)\npicking this:\n  \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G \\<G>_F B", "show \\<open>N - Red_F_\\<G> N \\<Turnstile>\\<G> {B}\\<close>"], ["proof (prove)\nusing this:\n  \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G \\<G>_F B\n\ngoal (1 subgoal):\n 1. \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G \\<G>_Fset {B}", "using Bot_map"], ["proof (prove)\nusing this:\n  \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G \\<G>_F B\n  ?B \\<in> Bot_F \\<Longrightarrow> \\<G>_F ?B \\<subseteq> Bot_G\n\ngoal (1 subgoal):\n 1. \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G \\<G>_Fset {B}", "by simp"], ["proof (state)\nthis:\n  \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G \\<G>_Fset {B}\n\ngoal:\nNo subgoals!", "qed"], ["", "(* lem:redundancy-monotonic-addition 1/2 *)"], ["", "lemma Red_F_of_subset_F: \\<open>N \\<subseteq> N' \\<Longrightarrow> Red_F_\\<G> N \\<subseteq> Red_F_\\<G> N'\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<subseteq> N' \\<Longrightarrow>\n    local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> N'", "using ground.Red_F_of_subset"], ["proof (prove)\nusing this:\n  ?N \\<subseteq> ?N' \\<Longrightarrow> Red_F_G ?N \\<subseteq> Red_F_G ?N'\n\ngoal (1 subgoal):\n 1. N \\<subseteq> N' \\<Longrightarrow>\n    local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> N'", "unfolding Red_F_\\<G>_def"], ["proof (prove)\nusing this:\n  ?N \\<subseteq> ?N' \\<Longrightarrow> Red_F_G ?N \\<subseteq> Red_F_G ?N'\n\ngoal (1 subgoal):\n 1. N \\<subseteq> N' \\<Longrightarrow>\n    {C. \\<forall>D\\<in>\\<G>_F C.\n           D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n           (\\<exists>E\\<in>N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)}\n    \\<subseteq> {C. \\<forall>D\\<in>\\<G>_F C.\n                       D \\<in> Red_F_G (\\<G>_Fset N') \\<or>\n                       (\\<exists>E\\<in>N'.\n                           Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)}", "by clarsimp (meson \\<G>_subset subsetD)"], ["", "(* lem:redundancy-monotonic-addition 2/2 *)"], ["", "lemma Red_I_of_subset_F: \\<open>N \\<subseteq> N' \\<Longrightarrow> Red_I_\\<G> N \\<subseteq> Red_I_\\<G> N'\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<subseteq> N' \\<Longrightarrow>\n    Red_I_\\<G> N \\<subseteq> Red_I_\\<G> N'", "using Collect_mono \\<G>_subset subset_iff ground.Red_I_of_subset"], ["proof (prove)\nusing this:\n  (\\<And>x. ?P x \\<longrightarrow> ?Q x) \\<Longrightarrow>\n  Collect ?P \\<subseteq> Collect ?Q\n  ?N1.0 \\<subseteq> ?N2.0 \\<Longrightarrow>\n  \\<G>_Fset ?N1.0 \\<subseteq> \\<G>_Fset ?N2.0\n  (?A \\<subseteq> ?B) =\n  (\\<forall>t. t \\<in> ?A \\<longrightarrow> t \\<in> ?B)\n  ?N \\<subseteq> ?N' \\<Longrightarrow> Red_I_G ?N \\<subseteq> Red_I_G ?N'\n\ngoal (1 subgoal):\n 1. N \\<subseteq> N' \\<Longrightarrow>\n    Red_I_\\<G> N \\<subseteq> Red_I_\\<G> N'", "unfolding Red_I_\\<G>_def"], ["proof (prove)\nusing this:\n  (\\<And>x. ?P x \\<longrightarrow> ?Q x) \\<Longrightarrow>\n  Collect ?P \\<subseteq> Collect ?Q\n  ?N1.0 \\<subseteq> ?N2.0 \\<Longrightarrow>\n  \\<G>_Fset ?N1.0 \\<subseteq> \\<G>_Fset ?N2.0\n  (?A \\<subseteq> ?B) =\n  (\\<forall>t. t \\<in> ?A \\<longrightarrow> t \\<in> ?B)\n  ?N \\<subseteq> ?N' \\<Longrightarrow> Red_I_G ?N \\<subseteq> Red_I_G ?N'\n\ngoal (1 subgoal):\n 1. N \\<subseteq> N' \\<Longrightarrow>\n    {\\<iota> \\<in> Inf_F.\n     \\<G>_I \\<iota> \\<noteq> None \\<and>\n     the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset N) \\<or>\n     \\<G>_I \\<iota> = None \\<and>\n     \\<G>_F (concl_of \\<iota>)\n     \\<subseteq> \\<G>_Fset N \\<union> Red_F_G (\\<G>_Fset N)}\n    \\<subseteq> {\\<iota> \\<in> Inf_F.\n                 \\<G>_I \\<iota> \\<noteq> None \\<and>\n                 the (\\<G>_I \\<iota>)\n                 \\<subseteq> Red_I_G (\\<G>_Fset N') \\<or>\n                 \\<G>_I \\<iota> = None \\<and>\n                 \\<G>_F (concl_of \\<iota>)\n                 \\<subseteq> \\<G>_Fset N' \\<union> Red_F_G (\\<G>_Fset N')}", "by (smt ground.Red_F_of_subset Un_iff)"], ["", "(* lem:redundancy-monotonic-deletion-forms *)"], ["", "lemma Red_F_of_Red_F_subset_F: \\<open>N' \\<subseteq> Red_F_\\<G> N \\<Longrightarrow> Red_F_\\<G> N \\<subseteq> Red_F_\\<G> (N - N')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n    local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> (N - N')", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> local.Red_F_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> local.Red_F_\\<G> (N - N')", "fix N N' C"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> local.Red_F_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> local.Red_F_\\<G> (N - N')", "assume\n    N'_in_Red_F_N: \\<open>N' \\<subseteq> Red_F_\\<G> N\\<close> and\n    C_in_red_F_N: \\<open>C \\<in> Red_F_\\<G> N\\<close>"], ["proof (state)\nthis:\n  N' \\<subseteq> local.Red_F_\\<G> N\n  C \\<in> local.Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> local.Red_F_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> local.Red_F_\\<G> (N - N')", "have lem8: \\<open>\\<forall>D \\<in> \\<G>_F C. D \\<in> Red_F_G (\\<G>_Fset N) \\<or> (\\<exists>E \\<in> (N - Red_F_\\<G> N). Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>D\\<in>\\<G>_F C.\n       D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n       (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n           Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "using Red_F_\\<G>_equiv_def C_in_red_F_N"], ["proof (prove)\nusing this:\n  local.Red_F_\\<G> ?N =\n  {C. \\<forall>Di\\<in>\\<G>_F C.\n         Di \\<in> Red_F_G (\\<G>_Fset ?N) \\<or>\n         (\\<exists>E\\<in>?N - local.Red_F_\\<G> ?N.\n             Prec_F_g Di E C \\<and> Di \\<in> \\<G>_F E)}\n  C \\<in> local.Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. \\<forall>D\\<in>\\<G>_F C.\n       D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n       (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n           Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "by blast"], ["proof (state)\nthis:\n  \\<forall>D\\<in>\\<G>_F C.\n     D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n     (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n         Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> local.Red_F_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> local.Red_F_\\<G> (N - N')", "show \\<open>C \\<in> Red_F_\\<G> (N - N')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<in> local.Red_F_\\<G> (N - N')", "unfolding Red_F_\\<G>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<in> {C. \\<forall>D\\<in>\\<G>_F C.\n                   D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n                   (\\<exists>E\\<in>N - N'.\n                       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)}", "proof (rule,rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>D.\n       D \\<in> \\<G>_F C \\<Longrightarrow>\n       D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n       (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "fix D"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>D.\n       D \\<in> \\<G>_F C \\<Longrightarrow>\n       D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n       (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "assume \\<open>D \\<in> \\<G>_F C\\<close>"], ["proof (state)\nthis:\n  D \\<in> \\<G>_F C\n\ngoal (1 subgoal):\n 1. \\<And>D.\n       D \\<in> \\<G>_F C \\<Longrightarrow>\n       D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n       (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "then"], ["proof (chain)\npicking this:\n  D \\<in> \\<G>_F C", "have \\<open>D \\<in> Red_F_G (\\<G>_Fset N) \\<or> (\\<exists>E \\<in> (N - Red_F_\\<G> N). Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\\<close>"], ["proof (prove)\nusing this:\n  D \\<in> \\<G>_F C\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n    (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n        Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "using lem8"], ["proof (prove)\nusing this:\n  D \\<in> \\<G>_F C\n  \\<forall>D\\<in>\\<G>_F C.\n     D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n     (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n         Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n    (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n        Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "by auto"], ["proof (state)\nthis:\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n  (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n      Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n\ngoal (1 subgoal):\n 1. \\<And>D.\n       D \\<in> \\<G>_F C \\<Longrightarrow>\n       D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n       (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "then"], ["proof (chain)\npicking this:\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n  (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n      Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "show \\<open>D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or> (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\\<close>"], ["proof (prove)\nusing this:\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n  (\\<exists>E\\<in>N - local.Red_F_\\<G> N.\n      Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n 2. \\<exists>E\\<in>N - local.Red_F_\\<G> N.\n       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "assume \\<open>D \\<in> Red_F_G (\\<G>_Fset N)\\<close>"], ["proof (state)\nthis:\n  D \\<in> Red_F_G (\\<G>_Fset N)\n\ngoal (2 subgoals):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n 2. \\<exists>E\\<in>N - local.Red_F_\\<G> N.\n       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "then"], ["proof (chain)\npicking this:\n  D \\<in> Red_F_G (\\<G>_Fset N)", "have \\<open>D \\<in> Red_F_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))\\<close>"], ["proof (prove)\nusing this:\n  D \\<in> Red_F_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))", "using ground.Red_F_of_Red_F_subset[of \"Red_F_G (\\<G>_Fset N)\" \"\\<G>_Fset N\"]"], ["proof (prove)\nusing this:\n  D \\<in> Red_F_G (\\<G>_Fset N)\n  Red_F_G (\\<G>_Fset N) \\<subseteq> Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n  Red_F_G (\\<G>_Fset N)\n  \\<subseteq> Red_F_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))", "by auto"], ["proof (state)\nthis:\n  D \\<in> Red_F_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))\n\ngoal (2 subgoals):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n 2. \\<exists>E\\<in>N - local.Red_F_\\<G> N.\n       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "then"], ["proof (chain)\npicking this:\n  D \\<in> Red_F_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))", "have \\<open>D \\<in> Red_F_G (\\<G>_Fset (N - Red_F_\\<G> N))\\<close>"], ["proof (prove)\nusing this:\n  D \\<in> Red_F_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset (N - local.Red_F_\\<G> N))", "using ground.Red_F_of_subset[OF not_red_map_in_map_not_red[of N]]"], ["proof (prove)\nusing this:\n  D \\<in> Red_F_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))\n  Red_F_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))\n  \\<subseteq> Red_F_G (\\<G>_Fset (N - local.Red_F_\\<G> N))\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset (N - local.Red_F_\\<G> N))", "by auto"], ["proof (state)\nthis:\n  D \\<in> Red_F_G (\\<G>_Fset (N - local.Red_F_\\<G> N))\n\ngoal (2 subgoals):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n 2. \\<exists>E\\<in>N - local.Red_F_\\<G> N.\n       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "then"], ["proof (chain)\npicking this:\n  D \\<in> Red_F_G (\\<G>_Fset (N - local.Red_F_\\<G> N))", "have \\<open>D \\<in> Red_F_G (\\<G>_Fset (N - N'))\\<close>"], ["proof (prove)\nusing this:\n  D \\<in> Red_F_G (\\<G>_Fset (N - local.Red_F_\\<G> N))\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset (N - N'))", "using N'_in_Red_F_N \\<G>_subset[of \"N - Red_F_\\<G> N\" \"N - N'\"]"], ["proof (prove)\nusing this:\n  D \\<in> Red_F_G (\\<G>_Fset (N - local.Red_F_\\<G> N))\n  N' \\<subseteq> local.Red_F_\\<G> N\n  N - local.Red_F_\\<G> N \\<subseteq> N - N' \\<Longrightarrow>\n  \\<G>_Fset (N - local.Red_F_\\<G> N) \\<subseteq> \\<G>_Fset (N - N')\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset (N - N'))", "by (smt DiffE DiffI ground.Red_F_of_subset subsetCE subsetI)"], ["proof (state)\nthis:\n  D \\<in> Red_F_G (\\<G>_Fset (N - N'))\n\ngoal (2 subgoals):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n 2. \\<exists>E\\<in>N - local.Red_F_\\<G> N.\n       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "then"], ["proof (chain)\npicking this:\n  D \\<in> Red_F_G (\\<G>_Fset (N - N'))", "show ?thesis"], ["proof (prove)\nusing this:\n  D \\<in> Red_F_G (\\<G>_Fset (N - N'))\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "by blast"], ["proof (state)\nthis:\n  D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n  (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n\ngoal (1 subgoal):\n 1. \\<exists>E\\<in>N - local.Red_F_\\<G> N.\n       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>E\\<in>N - local.Red_F_\\<G> N.\n       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "assume \\<open>\\<exists>E\\<in>N - Red_F_\\<G> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E\\<close>"], ["proof (state)\nthis:\n  \\<exists>E\\<in>N - local.Red_F_\\<G> N.\n     Prec_F_g D E C \\<and> D \\<in> \\<G>_F E\n\ngoal (1 subgoal):\n 1. \\<exists>E\\<in>N - local.Red_F_\\<G> N.\n       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "then"], ["proof (chain)\npicking this:\n  \\<exists>E\\<in>N - local.Red_F_\\<G> N.\n     Prec_F_g D E C \\<and> D \\<in> \\<G>_F E", "obtain E where\n        E_in: \\<open>E\\<in>N - Red_F_\\<G> N\\<close> and\n        E_prec_C: \\<open>Prec_F_g D E C\\<close> and\n        D_in: \\<open>D \\<in> \\<G>_F E\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>E\\<in>N - local.Red_F_\\<G> N.\n     Prec_F_g D E C \\<and> D \\<in> \\<G>_F E\n\ngoal (1 subgoal):\n 1. (\\<And>E.\n        \\<lbrakk>E \\<in> N - local.Red_F_\\<G> N; Prec_F_g D E C;\n         D \\<in> \\<G>_F E\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  E \\<in> N - local.Red_F_\\<G> N\n  Prec_F_g D E C\n  D \\<in> \\<G>_F E\n\ngoal (1 subgoal):\n 1. \\<exists>E\\<in>N - local.Red_F_\\<G> N.\n       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "have \\<open>E \\<in> N - N'\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. E \\<in> N - N'", "using E_in N'_in_Red_F_N"], ["proof (prove)\nusing this:\n  E \\<in> N - local.Red_F_\\<G> N\n  N' \\<subseteq> local.Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. E \\<in> N - N'", "by blast"], ["proof (state)\nthis:\n  E \\<in> N - N'\n\ngoal (1 subgoal):\n 1. \\<exists>E\\<in>N - local.Red_F_\\<G> N.\n       Prec_F_g D E C \\<and> D \\<in> \\<G>_F E \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "then"], ["proof (chain)\npicking this:\n  E \\<in> N - N'", "show ?thesis"], ["proof (prove)\nusing this:\n  E \\<in> N - N'\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "using E_prec_C D_in"], ["proof (prove)\nusing this:\n  E \\<in> N - N'\n  Prec_F_g D E C\n  D \\<in> \\<G>_F E\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n    (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)", "by blast"], ["proof (state)\nthis:\n  D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n  (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  D \\<in> Red_F_G (\\<G>_Fset (N - N')) \\<or>\n  (\\<exists>E\\<in>N - N'. Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  C \\<in> local.Red_F_\\<G> (N - N')\n\ngoal:\nNo subgoals!", "qed"], ["", "(* lem:redundancy-monotonic-deletion-infs *)"], ["", "lemma Red_I_of_Red_F_subset_F: \\<open>N' \\<subseteq> Red_F_\\<G> N \\<Longrightarrow> Red_I_\\<G> N \\<subseteq> Red_I_\\<G> (N - N') \\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n    Red_I_\\<G> N \\<subseteq> Red_I_\\<G> (N - N')", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "fix N N' \\<iota>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "assume\n    N'_in_Red_F_N: \\<open>N' \\<subseteq> Red_F_\\<G> N\\<close> and\n    i_in_Red_I_N: \\<open>\\<iota> \\<in> Red_I_\\<G> N\\<close>"], ["proof (state)\nthis:\n  N' \\<subseteq> local.Red_F_\\<G> N\n  \\<iota> \\<in> Red_I_\\<G> N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "have i_in: \\<open>\\<iota> \\<in> Inf_F\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_F", "using i_in_Red_I_N"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Red_I_\\<G> N\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_F", "unfolding Red_I_\\<G>_def"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_F.\n         \\<G>_I \\<iota> \\<noteq> None \\<and>\n         the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset N) \\<or>\n         \\<G>_I \\<iota> = None \\<and>\n         \\<G>_F (concl_of \\<iota>)\n         \\<subseteq> \\<G>_Fset N \\<union> Red_F_G (\\<G>_Fset N)}\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_F", "by blast"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "{"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "assume not_none: \"\\<G>_I \\<iota> \\<noteq> None\""], ["proof (state)\nthis:\n  \\<G>_I \\<iota> \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "have \\<open>\\<forall>\\<iota>' \\<in> the (\\<G>_I \\<iota>). \\<iota>' \\<in> Red_I_G (\\<G>_Fset N)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n       \\<iota>' \\<in> Red_I_G (\\<G>_Fset N)", "using not_none i_in_Red_I_N"], ["proof (prove)\nusing this:\n  \\<G>_I \\<iota> \\<noteq> None\n  \\<iota> \\<in> Red_I_\\<G> N\n\ngoal (1 subgoal):\n 1. \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n       \\<iota>' \\<in> Red_I_G (\\<G>_Fset N)", "unfolding Red_I_\\<G>_def"], ["proof (prove)\nusing this:\n  \\<G>_I \\<iota> \\<noteq> None\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_F.\n         \\<G>_I \\<iota> \\<noteq> None \\<and>\n         the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset N) \\<or>\n         \\<G>_I \\<iota> = None \\<and>\n         \\<G>_F (concl_of \\<iota>)\n         \\<subseteq> \\<G>_Fset N \\<union> Red_F_G (\\<G>_Fset N)}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n       \\<iota>' \\<in> Red_I_G (\\<G>_Fset N)", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n     \\<iota>' \\<in> Red_I_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n     \\<iota>' \\<in> Red_I_G (\\<G>_Fset N)", "have \\<open>\\<forall>\\<iota>' \\<in> the (\\<G>_I \\<iota>). \\<iota>' \\<in> Red_I_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n     \\<iota>' \\<in> Red_I_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n       \\<iota>' \\<in> Red_I_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))", "using not_none ground.Red_I_of_Red_F_subset"], ["proof (prove)\nusing this:\n  \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n     \\<iota>' \\<in> Red_I_G (\\<G>_Fset N)\n  \\<G>_I \\<iota> \\<noteq> None\n  ?N' \\<subseteq> Red_F_G ?N \\<Longrightarrow>\n  Red_I_G ?N \\<subseteq> Red_I_G (?N - ?N')\n\ngoal (1 subgoal):\n 1. \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n       \\<iota>' \\<in> Red_I_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))", "by blast"], ["proof (state)\nthis:\n  \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n     \\<iota>' \\<in> Red_I_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n     \\<iota>' \\<in> Red_I_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))", "have ip_in_Red_I_G: \\<open>\\<forall>\\<iota>' \\<in> the (\\<G>_I \\<iota>). \\<iota>' \\<in> Red_I_G (\\<G>_Fset (N - Red_F_\\<G> N))\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n     \\<iota>' \\<in> Red_I_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n       \\<iota>' \\<in> Red_I_G (\\<G>_Fset (N - local.Red_F_\\<G> N))", "using not_none ground.Red_I_of_subset[OF not_red_map_in_map_not_red[of N]]"], ["proof (prove)\nusing this:\n  \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n     \\<iota>' \\<in> Red_I_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))\n  \\<G>_I \\<iota> \\<noteq> None\n  Red_I_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))\n  \\<subseteq> Red_I_G (\\<G>_Fset (N - local.Red_F_\\<G> N))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n       \\<iota>' \\<in> Red_I_G (\\<G>_Fset (N - local.Red_F_\\<G> N))", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n     \\<iota>' \\<in> Red_I_G (\\<G>_Fset (N - local.Red_F_\\<G> N))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n     \\<iota>' \\<in> Red_I_G (\\<G>_Fset (N - local.Red_F_\\<G> N))", "have not_none_in: \\<open>\\<forall>\\<iota>' \\<in> the (\\<G>_I \\<iota>). \\<iota>' \\<in> Red_I_G (\\<G>_Fset (N - N'))\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n     \\<iota>' \\<in> Red_I_G (\\<G>_Fset (N - local.Red_F_\\<G> N))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n       \\<iota>' \\<in> Red_I_G (\\<G>_Fset (N - N'))", "using not_none N'_in_Red_F_N"], ["proof (prove)\nusing this:\n  \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n     \\<iota>' \\<in> Red_I_G (\\<G>_Fset (N - local.Red_F_\\<G> N))\n  \\<G>_I \\<iota> \\<noteq> None\n  N' \\<subseteq> local.Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n       \\<iota>' \\<in> Red_I_G (\\<G>_Fset (N - N'))", "by (meson Diff_mono ground.Red_I_of_subset \\<G>_subset subset_iff subset_refl)"], ["proof (state)\nthis:\n  \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n     \\<iota>' \\<in> Red_I_G (\\<G>_Fset (N - N'))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n     \\<iota>' \\<in> Red_I_G (\\<G>_Fset (N - N'))", "have \"the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset (N - N'))\""], ["proof (prove)\nusing this:\n  \\<forall>\\<iota>'\\<in>the (\\<G>_I \\<iota>).\n     \\<iota>' \\<in> Red_I_G (\\<G>_Fset (N - N'))\n\ngoal (1 subgoal):\n 1. the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset (N - N'))", "by blast"], ["proof (state)\nthis:\n  the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset (N - N'))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "}"], ["proof (state)\nthis:\n  \\<G>_I \\<iota> \\<noteq> None \\<Longrightarrow>\n  the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset (N - N'))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "moreover"], ["proof (state)\nthis:\n  \\<G>_I \\<iota> \\<noteq> None \\<Longrightarrow>\n  the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset (N - N'))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "{"], ["proof (state)\nthis:\n  \\<G>_I \\<iota> \\<noteq> None \\<Longrightarrow>\n  the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset (N - N'))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "assume none: \"\\<G>_I \\<iota> = None\""], ["proof (state)\nthis:\n  \\<G>_I \\<iota> = None\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "have ground_concl_subs: \"\\<G>_F (concl_of \\<iota>) \\<subseteq> (\\<G>_Fset N \\<union> Red_F_G (\\<G>_Fset N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G>_F (concl_of \\<iota>)\n    \\<subseteq> \\<G>_Fset N \\<union> Red_F_G (\\<G>_Fset N)", "using none i_in_Red_I_N"], ["proof (prove)\nusing this:\n  \\<G>_I \\<iota> = None\n  \\<iota> \\<in> Red_I_\\<G> N\n\ngoal (1 subgoal):\n 1. \\<G>_F (concl_of \\<iota>)\n    \\<subseteq> \\<G>_Fset N \\<union> Red_F_G (\\<G>_Fset N)", "unfolding Red_I_\\<G>_def"], ["proof (prove)\nusing this:\n  \\<G>_I \\<iota> = None\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_F.\n         \\<G>_I \\<iota> \\<noteq> None \\<and>\n         the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset N) \\<or>\n         \\<G>_I \\<iota> = None \\<and>\n         \\<G>_F (concl_of \\<iota>)\n         \\<subseteq> \\<G>_Fset N \\<union> Red_F_G (\\<G>_Fset N)}\n\ngoal (1 subgoal):\n 1. \\<G>_F (concl_of \\<iota>)\n    \\<subseteq> \\<G>_Fset N \\<union> Red_F_G (\\<G>_Fset N)", "by blast"], ["proof (state)\nthis:\n  \\<G>_F (concl_of \\<iota>)\n  \\<subseteq> \\<G>_Fset N \\<union> Red_F_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "then"], ["proof (chain)\npicking this:\n  \\<G>_F (concl_of \\<iota>)\n  \\<subseteq> \\<G>_Fset N \\<union> Red_F_G (\\<G>_Fset N)", "have d_in_imp12: \"D \\<in> \\<G>_F (concl_of \\<iota>) \\<Longrightarrow> D \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<or> D \\<in> Red_F_G (\\<G>_Fset N)\""], ["proof (prove)\nusing this:\n  \\<G>_F (concl_of \\<iota>)\n  \\<subseteq> \\<G>_Fset N \\<union> Red_F_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. D \\<in> \\<G>_F (concl_of \\<iota>) \\<Longrightarrow>\n    D \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<or>\n    D \\<in> Red_F_G (\\<G>_Fset N)", "by blast"], ["proof (state)\nthis:\n  D \\<in> \\<G>_F (concl_of \\<iota>) \\<Longrightarrow>\n  D \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<or>\n  D \\<in> Red_F_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "have d_in_imp1: \"D \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Longrightarrow> D \\<in> \\<G>_Fset (N - N')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n    D \\<in> \\<G>_Fset (N - N')", "using not_red_map_in_map_not_red N'_in_Red_F_N"], ["proof (prove)\nusing this:\n  \\<G>_Fset ?N - Red_F_G (\\<G>_Fset ?N)\n  \\<subseteq> \\<G>_Fset (?N - local.Red_F_\\<G> ?N)\n  N' \\<subseteq> local.Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. D \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n    D \\<in> \\<G>_Fset (N - N')", "by blast"], ["proof (state)\nthis:\n  D \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n  D \\<in> \\<G>_Fset (N - N')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "have d_in_imp_d_in: \"D \\<in> Red_F_G (\\<G>_Fset N) \\<Longrightarrow> D \\<in> Red_F_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))", "using ground.Red_F_of_Red_F_subset[of \"Red_F_G (\\<G>_Fset N)\" \"\\<G>_Fset N\"]"], ["proof (prove)\nusing this:\n  Red_F_G (\\<G>_Fset N) \\<subseteq> Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n  Red_F_G (\\<G>_Fset N)\n  \\<subseteq> Red_F_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))", "by blast"], ["proof (state)\nthis:\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n  D \\<in> Red_F_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "have g_subs1: \"\\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<subseteq> \\<G>_Fset (N - Red_F_\\<G> N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G>_Fset N - Red_F_G (\\<G>_Fset N)\n    \\<subseteq> \\<G>_Fset (N - local.Red_F_\\<G> N)", "using not_red_map_in_map_not_red"], ["proof (prove)\nusing this:\n  \\<G>_Fset ?N - Red_F_G (\\<G>_Fset ?N)\n  \\<subseteq> \\<G>_Fset (?N - local.Red_F_\\<G> ?N)\n\ngoal (1 subgoal):\n 1. \\<G>_Fset N - Red_F_G (\\<G>_Fset N)\n    \\<subseteq> \\<G>_Fset (N - local.Red_F_\\<G> N)", "unfolding Red_F_\\<G>_def"], ["proof (prove)\nusing this:\n  \\<G>_Fset ?N - Red_F_G (\\<G>_Fset ?N)\n  \\<subseteq> \\<G>_Fset\n               (?N -\n                {C. \\<forall>D\\<in>\\<G>_F C.\n                       D \\<in> Red_F_G (\\<G>_Fset ?N) \\<or>\n                       (\\<exists>E\\<in>?N.\n                           Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)})\n\ngoal (1 subgoal):\n 1. \\<G>_Fset N - Red_F_G (\\<G>_Fset N)\n    \\<subseteq> \\<G>_Fset\n                 (N -\n                  {C. \\<forall>D\\<in>\\<G>_F C.\n                         D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n                         (\\<exists>E\\<in>N.\n                             Prec_F_g D E C \\<and> D \\<in> \\<G>_F E)})", "by auto"], ["proof (state)\nthis:\n  \\<G>_Fset N - Red_F_G (\\<G>_Fset N)\n  \\<subseteq> \\<G>_Fset (N - local.Red_F_\\<G> N)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "have g_subs2: \"\\<G>_Fset (N - Red_F_\\<G> N) \\<subseteq> \\<G>_Fset (N - N')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G>_Fset (N - local.Red_F_\\<G> N) \\<subseteq> \\<G>_Fset (N - N')", "using N'_in_Red_F_N"], ["proof (prove)\nusing this:\n  N' \\<subseteq> local.Red_F_\\<G> N\n\ngoal (1 subgoal):\n 1. \\<G>_Fset (N - local.Red_F_\\<G> N) \\<subseteq> \\<G>_Fset (N - N')", "by blast"], ["proof (state)\nthis:\n  \\<G>_Fset (N - local.Red_F_\\<G> N) \\<subseteq> \\<G>_Fset (N - N')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "have d_in_imp2: \"D \\<in> Red_F_G (\\<G>_Fset N) \\<Longrightarrow> D \\<in> Red_F_G (\\<G>_Fset (N - N'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset (N - N'))", "using ground.Red_F_of_subset ground.Red_F_of_subset[OF g_subs1]\n        ground.Red_F_of_subset[OF g_subs2] d_in_imp_d_in"], ["proof (prove)\nusing this:\n  ?N \\<subseteq> ?N' \\<Longrightarrow> Red_F_G ?N \\<subseteq> Red_F_G ?N'\n  Red_F_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))\n  \\<subseteq> Red_F_G (\\<G>_Fset (N - local.Red_F_\\<G> N))\n  Red_F_G (\\<G>_Fset (N - local.Red_F_\\<G> N))\n  \\<subseteq> Red_F_G (\\<G>_Fset (N - N'))\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n  D \\<in> Red_F_G (\\<G>_Fset N - Red_F_G (\\<G>_Fset N))\n\ngoal (1 subgoal):\n 1. D \\<in> Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n    D \\<in> Red_F_G (\\<G>_Fset (N - N'))", "by blast"], ["proof (state)\nthis:\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n  D \\<in> Red_F_G (\\<G>_Fset (N - N'))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "have \"\\<G>_F (concl_of \\<iota>) \\<subseteq> (\\<G>_Fset (N - N') \\<union> Red_F_G (\\<G>_Fset (N - N')))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G>_F (concl_of \\<iota>)\n    \\<subseteq> \\<G>_Fset (N - N') \\<union> Red_F_G (\\<G>_Fset (N - N'))", "using d_in_imp12 d_in_imp1 d_in_imp2"], ["proof (prove)\nusing this:\n  D \\<in> \\<G>_F (concl_of \\<iota>) \\<Longrightarrow>\n  D \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<or>\n  D \\<in> Red_F_G (\\<G>_Fset N)\n  D \\<in> \\<G>_Fset N - Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n  D \\<in> \\<G>_Fset (N - N')\n  D \\<in> Red_F_G (\\<G>_Fset N) \\<Longrightarrow>\n  D \\<in> Red_F_G (\\<G>_Fset (N - N'))\n\ngoal (1 subgoal):\n 1. \\<G>_F (concl_of \\<iota>)\n    \\<subseteq> \\<G>_Fset (N - N') \\<union> Red_F_G (\\<G>_Fset (N - N'))", "by (smt ground.Red_F_of_Red_F_subset ground.Red_F_of_subset UnCI UnE Un_Diff_cancel2\n        ground_concl_subs g_subs1 g_subs2 subset_iff)"], ["proof (state)\nthis:\n  \\<G>_F (concl_of \\<iota>)\n  \\<subseteq> \\<G>_Fset (N - N') \\<union> Red_F_G (\\<G>_Fset (N - N'))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "}"], ["proof (state)\nthis:\n  \\<G>_I \\<iota> = None \\<Longrightarrow>\n  \\<G>_F (concl_of \\<iota>)\n  \\<subseteq> \\<G>_Fset (N - N') \\<union> Red_F_G (\\<G>_Fset (N - N'))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N' \\<subseteq> local.Red_F_\\<G> N;\n        x \\<in> Red_I_\\<G> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I_\\<G> (N - N')", "ultimately"], ["proof (chain)\npicking this:\n  \\<G>_I \\<iota> \\<noteq> None \\<Longrightarrow>\n  the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset (N - N'))\n  \\<G>_I \\<iota> = None \\<Longrightarrow>\n  \\<G>_F (concl_of \\<iota>)\n  \\<subseteq> \\<G>_Fset (N - N') \\<union> Red_F_G (\\<G>_Fset (N - N'))", "show \\<open>\\<iota> \\<in> Red_I_\\<G> (N - N')\\<close>"], ["proof (prove)\nusing this:\n  \\<G>_I \\<iota> \\<noteq> None \\<Longrightarrow>\n  the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset (N - N'))\n  \\<G>_I \\<iota> = None \\<Longrightarrow>\n  \\<G>_F (concl_of \\<iota>)\n  \\<subseteq> \\<G>_Fset (N - N') \\<union> Red_F_G (\\<G>_Fset (N - N'))\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> (N - N')", "using i_in"], ["proof (prove)\nusing this:\n  \\<G>_I \\<iota> \\<noteq> None \\<Longrightarrow>\n  the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset (N - N'))\n  \\<G>_I \\<iota> = None \\<Longrightarrow>\n  \\<G>_F (concl_of \\<iota>)\n  \\<subseteq> \\<G>_Fset (N - N') \\<union> Red_F_G (\\<G>_Fset (N - N'))\n  \\<iota> \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> (N - N')", "unfolding Red_I_\\<G>_def"], ["proof (prove)\nusing this:\n  \\<G>_I \\<iota> \\<noteq> None \\<Longrightarrow>\n  the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset (N - N'))\n  \\<G>_I \\<iota> = None \\<Longrightarrow>\n  \\<G>_F (concl_of \\<iota>)\n  \\<subseteq> \\<G>_Fset (N - N') \\<union> Red_F_G (\\<G>_Fset (N - N'))\n  \\<iota> \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> {\\<iota> \\<in> Inf_F.\n           \\<G>_I \\<iota> \\<noteq> None \\<and>\n           the (\\<G>_I \\<iota>)\n           \\<subseteq> Red_I_G (\\<G>_Fset (N - N')) \\<or>\n           \\<G>_I \\<iota> = None \\<and>\n           \\<G>_F (concl_of \\<iota>)\n           \\<subseteq> \\<G>_Fset (N - N') \\<union>\n                       Red_F_G (\\<G>_Fset (N - N'))}", "by auto"], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_I_\\<G> (N - N')\n\ngoal:\nNo subgoals!", "qed"], ["", "(* lem:concl-contained-implies-red-inf *)"], ["", "lemma Red_I_of_Inf_to_N_F:\n  assumes\n    i_in: \\<open>\\<iota> \\<in> Inf_F\\<close> and\n    concl_i_in: \\<open>concl_of \\<iota> \\<in> N\\<close>\n  shows\n    \\<open>\\<iota> \\<in> Red_I_\\<G> N \\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> N", "have \\<open>\\<iota> \\<in> Inf_F \\<Longrightarrow> \\<G>_I \\<iota> \\<noteq> None \\<Longrightarrow> the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                      \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "using inf_map"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<iota> \\<in> Inf_F; \\<G>_I ?\\<iota> \\<noteq> None\\<rbrakk>\n  \\<Longrightarrow> the (\\<G>_I ?\\<iota>)\n                    \\<subseteq> Red_I_G (\\<G>_F (concl_of ?\\<iota>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                      \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n  \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                    \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> N", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n  \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                    \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> N", "have \\<open>Red_I_G (\\<G>_F (concl_of \\<iota>)) \\<subseteq> Red_I_G (\\<G>_Fset N)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_I_G (\\<G>_F (concl_of \\<iota>)) \\<subseteq> Red_I_G (\\<G>_Fset N)", "using concl_i_in ground.Red_I_of_subset"], ["proof (prove)\nusing this:\n  concl_of \\<iota> \\<in> N\n  ?N \\<subseteq> ?N' \\<Longrightarrow> Red_I_G ?N \\<subseteq> Red_I_G ?N'\n\ngoal (1 subgoal):\n 1. Red_I_G (\\<G>_F (concl_of \\<iota>)) \\<subseteq> Red_I_G (\\<G>_Fset N)", "by blast"], ["proof (state)\nthis:\n  Red_I_G (\\<G>_F (concl_of \\<iota>)) \\<subseteq> Red_I_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> N", "moreover"], ["proof (state)\nthis:\n  Red_I_G (\\<G>_F (concl_of \\<iota>)) \\<subseteq> Red_I_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> N", "have \"\\<iota> \\<in> Inf_F \\<Longrightarrow> \\<G>_I \\<iota> = None \\<Longrightarrow> concl_of \\<iota> \\<in> N \\<Longrightarrow> \\<G>_F (concl_of \\<iota>) \\<subseteq> \\<G>_Fset N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> = None;\n     concl_of \\<iota> \\<in> N\\<rbrakk>\n    \\<Longrightarrow> \\<G>_F (concl_of \\<iota>) \\<subseteq> \\<G>_Fset N", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> = None;\n   concl_of \\<iota> \\<in> N\\<rbrakk>\n  \\<Longrightarrow> \\<G>_F (concl_of \\<iota>) \\<subseteq> \\<G>_Fset N\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> N", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n  \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                    \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))\n  Red_I_G (\\<G>_F (concl_of \\<iota>)) \\<subseteq> Red_I_G (\\<G>_Fset N)\n  \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> = None;\n   concl_of \\<iota> \\<in> N\\<rbrakk>\n  \\<Longrightarrow> \\<G>_F (concl_of \\<iota>) \\<subseteq> \\<G>_Fset N", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n  \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                    \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))\n  Red_I_G (\\<G>_F (concl_of \\<iota>)) \\<subseteq> Red_I_G (\\<G>_Fset N)\n  \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> = None;\n   concl_of \\<iota> \\<in> N\\<rbrakk>\n  \\<Longrightarrow> \\<G>_F (concl_of \\<iota>) \\<subseteq> \\<G>_Fset N\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> N", "using i_in concl_i_in"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n  \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                    \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))\n  Red_I_G (\\<G>_F (concl_of \\<iota>)) \\<subseteq> Red_I_G (\\<G>_Fset N)\n  \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> = None;\n   concl_of \\<iota> \\<in> N\\<rbrakk>\n  \\<Longrightarrow> \\<G>_F (concl_of \\<iota>) \\<subseteq> \\<G>_Fset N\n  \\<iota> \\<in> Inf_F\n  concl_of \\<iota> \\<in> N\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> N", "unfolding Red_I_\\<G>_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n  \\<Longrightarrow> the (\\<G>_I \\<iota>)\n                    \\<subseteq> Red_I_G (\\<G>_F (concl_of \\<iota>))\n  Red_I_G (\\<G>_F (concl_of \\<iota>)) \\<subseteq> Red_I_G (\\<G>_Fset N)\n  \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> = None;\n   concl_of \\<iota> \\<in> N\\<rbrakk>\n  \\<Longrightarrow> \\<G>_F (concl_of \\<iota>) \\<subseteq> \\<G>_Fset N\n  \\<iota> \\<in> Inf_F\n  concl_of \\<iota> \\<in> N\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> {\\<iota> \\<in> Inf_F.\n           \\<G>_I \\<iota> \\<noteq> None \\<and>\n           the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset N) \\<or>\n           \\<G>_I \\<iota> = None \\<and>\n           \\<G>_F (concl_of \\<iota>)\n           \\<subseteq> \\<G>_Fset N \\<union> Red_F_G (\\<G>_Fset N)}", "by auto"], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_I_\\<G> N\n\ngoal:\nNo subgoals!", "qed"], ["", "(* thm:FRedsqsubset-is-red-crit and also thm:lifted-red-crit if ordering empty *)"], ["", "sublocale calculus Bot_F Inf_F entails_\\<G> Red_I_\\<G> Red_F_\\<G>"], ["proof (prove)\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>\n     local.Red_F_\\<G>", "proof"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>N. Red_I_\\<G> N \\<subseteq> Inf_F\n 2. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot_F;\n        \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n                         \\<G>_Fset {B}\n 3. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> N'\n 4. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_I_\\<G> N \\<subseteq> Red_I_\\<G> N'\n 5. \\<And>N' N.\n       N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n       local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> (N - N')\n 6. \\<And>N' N.\n       N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n       Red_I_\\<G> N \\<subseteq> Red_I_\\<G> (N - N')\n 7. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_I_\\<G> N", "fix B N N' \\<iota>"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>N. Red_I_\\<G> N \\<subseteq> Inf_F\n 2. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot_F;\n        \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n                         \\<G>_Fset {B}\n 3. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> N'\n 4. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_I_\\<G> N \\<subseteq> Red_I_\\<G> N'\n 5. \\<And>N' N.\n       N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n       local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> (N - N')\n 6. \\<And>N' N.\n       N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n       Red_I_\\<G> N \\<subseteq> Red_I_\\<G> (N - N')\n 7. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_I_\\<G> N", "show \\<open>Red_I_\\<G> N \\<subseteq> Inf_F\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_I_\\<G> N \\<subseteq> Inf_F", "unfolding Red_I_\\<G>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<iota> \\<in> Inf_F.\n     \\<G>_I \\<iota> \\<noteq> None \\<and>\n     the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset N) \\<or>\n     \\<G>_I \\<iota> = None \\<and>\n     \\<G>_F (concl_of \\<iota>)\n     \\<subseteq> \\<G>_Fset N \\<union> Red_F_G (\\<G>_Fset N)}\n    \\<subseteq> Inf_F", "by blast"], ["proof (state)\nthis:\n  Red_I_\\<G> N \\<subseteq> Inf_F\n\ngoal (6 subgoals):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot_F;\n        \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n       \\<Longrightarrow> \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n                         \\<G>_Fset {B}\n 2. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> N'\n 3. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_I_\\<G> N \\<subseteq> Red_I_\\<G> N'\n 4. \\<And>N' N.\n       N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n       local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> (N - N')\n 5. \\<And>N' N.\n       N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n       Red_I_\\<G> N \\<subseteq> Red_I_\\<G> (N - N')\n 6. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_I_\\<G> N", "show \\<open>B \\<in> Bot_F \\<Longrightarrow> N \\<Turnstile>\\<G> {B} \\<Longrightarrow> N - Red_F_\\<G> N \\<Turnstile>\\<G> {B}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> Bot_F; \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n    \\<Longrightarrow> \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n                      \\<G>_Fset {B}", "using Red_F_Bot_F"], ["proof (prove)\nusing this:\n  \\<lbrakk>?B \\<in> Bot_F;\n   \\<G>_Fset ?N \\<Turnstile>G \\<G>_Fset {?B}\\<rbrakk>\n  \\<Longrightarrow> \\<G>_Fset (?N - local.Red_F_\\<G> ?N) \\<Turnstile>G\n                    \\<G>_Fset {?B}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> Bot_F; \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n    \\<Longrightarrow> \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n                      \\<G>_Fset {B}", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>B \\<in> Bot_F; \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n  \\<Longrightarrow> \\<G>_Fset (N - local.Red_F_\\<G> N) \\<Turnstile>G\n                    \\<G>_Fset {B}\n\ngoal (5 subgoals):\n 1. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> N'\n 2. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_I_\\<G> N \\<subseteq> Red_I_\\<G> N'\n 3. \\<And>N' N.\n       N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n       local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> (N - N')\n 4. \\<And>N' N.\n       N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n       Red_I_\\<G> N \\<subseteq> Red_I_\\<G> (N - N')\n 5. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_I_\\<G> N", "show \\<open>N \\<subseteq> N' \\<Longrightarrow> Red_F_\\<G> N \\<subseteq> Red_F_\\<G> N'\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<subseteq> N' \\<Longrightarrow>\n    local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> N'", "using Red_F_of_subset_F"], ["proof (prove)\nusing this:\n  ?N \\<subseteq> ?N' \\<Longrightarrow>\n  local.Red_F_\\<G> ?N \\<subseteq> local.Red_F_\\<G> ?N'\n\ngoal (1 subgoal):\n 1. N \\<subseteq> N' \\<Longrightarrow>\n    local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> N'", "by simp"], ["proof (state)\nthis:\n  N \\<subseteq> N' \\<Longrightarrow>\n  local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> N'\n\ngoal (4 subgoals):\n 1. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_I_\\<G> N \\<subseteq> Red_I_\\<G> N'\n 2. \\<And>N' N.\n       N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n       local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> (N - N')\n 3. \\<And>N' N.\n       N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n       Red_I_\\<G> N \\<subseteq> Red_I_\\<G> (N - N')\n 4. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_I_\\<G> N", "show \\<open>N \\<subseteq> N' \\<Longrightarrow> Red_I_\\<G> N \\<subseteq> Red_I_\\<G> N'\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<subseteq> N' \\<Longrightarrow>\n    Red_I_\\<G> N \\<subseteq> Red_I_\\<G> N'", "using Red_I_of_subset_F"], ["proof (prove)\nusing this:\n  ?N \\<subseteq> ?N' \\<Longrightarrow>\n  Red_I_\\<G> ?N \\<subseteq> Red_I_\\<G> ?N'\n\ngoal (1 subgoal):\n 1. N \\<subseteq> N' \\<Longrightarrow>\n    Red_I_\\<G> N \\<subseteq> Red_I_\\<G> N'", "by simp"], ["proof (state)\nthis:\n  N \\<subseteq> N' \\<Longrightarrow> Red_I_\\<G> N \\<subseteq> Red_I_\\<G> N'\n\ngoal (3 subgoals):\n 1. \\<And>N' N.\n       N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n       local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> (N - N')\n 2. \\<And>N' N.\n       N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n       Red_I_\\<G> N \\<subseteq> Red_I_\\<G> (N - N')\n 3. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_I_\\<G> N", "show \\<open>N' \\<subseteq> Red_F_\\<G> N \\<Longrightarrow> Red_F_\\<G> N \\<subseteq> Red_F_\\<G> (N - N')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n    local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> (N - N')", "using Red_F_of_Red_F_subset_F"], ["proof (prove)\nusing this:\n  ?N' \\<subseteq> local.Red_F_\\<G> ?N \\<Longrightarrow>\n  local.Red_F_\\<G> ?N \\<subseteq> local.Red_F_\\<G> (?N - ?N')\n\ngoal (1 subgoal):\n 1. N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n    local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> (N - N')", "by simp"], ["proof (state)\nthis:\n  N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n  local.Red_F_\\<G> N \\<subseteq> local.Red_F_\\<G> (N - N')\n\ngoal (2 subgoals):\n 1. \\<And>N' N.\n       N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n       Red_I_\\<G> N \\<subseteq> Red_I_\\<G> (N - N')\n 2. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_I_\\<G> N", "show \\<open>N' \\<subseteq> Red_F_\\<G> N \\<Longrightarrow> Red_I_\\<G> N \\<subseteq> Red_I_\\<G> (N - N')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n    Red_I_\\<G> N \\<subseteq> Red_I_\\<G> (N - N')", "using Red_I_of_Red_F_subset_F"], ["proof (prove)\nusing this:\n  ?N' \\<subseteq> local.Red_F_\\<G> ?N \\<Longrightarrow>\n  Red_I_\\<G> ?N \\<subseteq> Red_I_\\<G> (?N - ?N')\n\ngoal (1 subgoal):\n 1. N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n    Red_I_\\<G> N \\<subseteq> Red_I_\\<G> (N - N')", "by simp"], ["proof (state)\nthis:\n  N' \\<subseteq> local.Red_F_\\<G> N \\<Longrightarrow>\n  Red_I_\\<G> N \\<subseteq> Red_I_\\<G> (N - N')\n\ngoal (1 subgoal):\n 1. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf_F; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_I_\\<G> N", "show \\<open>\\<iota> \\<in> Inf_F \\<Longrightarrow> concl_of \\<iota> \\<in> N \\<Longrightarrow> \\<iota> \\<in> Red_I_\\<G> N\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<iota> \\<in> Inf_F; concl_of \\<iota> \\<in> N\\<rbrakk>\n    \\<Longrightarrow> \\<iota> \\<in> Red_I_\\<G> N", "using Red_I_of_Inf_to_N_F"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<iota> \\<in> Inf_F; concl_of ?\\<iota> \\<in> ?N\\<rbrakk>\n  \\<Longrightarrow> ?\\<iota> \\<in> Red_I_\\<G> ?N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<iota> \\<in> Inf_F; concl_of \\<iota> \\<in> N\\<rbrakk>\n    \\<Longrightarrow> \\<iota> \\<in> Red_I_\\<G> N", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>\\<iota> \\<in> Inf_F; concl_of \\<iota> \\<in> N\\<rbrakk>\n  \\<Longrightarrow> \\<iota> \\<in> Red_I_\\<G> N\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma wf_empty_rel: \"minimal_element (\\<lambda>_ _. False) UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. minimal_element (\\<lambda>_ _. False) UNIV", "by (simp add: minimal_element.intro po_on_def transp_onI wfp_on_imp_irreflp_on)"], ["", "lemma standard_empty_tiebreaker_equiv: \"standard_lifting Inf_F Bot_G Inf_G entails_G Red_I_G\n  Red_F_G Bot_F \\<G>_F \\<G>_I = tiebreaker_lifting Bot_F Inf_F Bot_G entails_G Inf_G Red_I_G\n  Red_F_G \\<G>_F \\<G>_I (\\<lambda>g C C'. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. standard_lifting Inf_F Bot_G Inf_G entails_G Red_I_G Red_F_G Bot_F\n     \\<G>_F \\<G>_I =\n    tiebreaker_lifting Bot_F Inf_F Bot_G entails_G Inf_G Red_I_G Red_F_G\n     \\<G>_F \\<G>_I (\\<lambda>g C C'. False)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. standard_lifting Inf_F Bot_G Inf_G entails_G Red_I_G Red_F_G Bot_F\n     \\<G>_F \\<G>_I =\n    tiebreaker_lifting Bot_F Inf_F Bot_G entails_G Inf_G Red_I_G Red_F_G\n     \\<G>_F \\<G>_I (\\<lambda>g C C'. False)", "have \"tiebreaker_lifting_axioms (\\<lambda>g C C'. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiebreaker_lifting_axioms (\\<lambda>g C C'. False)", "unfolding tiebreaker_lifting_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>g. minimal_element (\\<lambda>C C'. False) UNIV", "using wf_empty_rel"], ["proof (prove)\nusing this:\n  minimal_element (\\<lambda>_ _. False) UNIV\n\ngoal (1 subgoal):\n 1. \\<forall>g. minimal_element (\\<lambda>C C'. False) UNIV", "by simp"], ["proof (state)\nthis:\n  tiebreaker_lifting_axioms (\\<lambda>g C C'. False)\n\ngoal (1 subgoal):\n 1. standard_lifting Inf_F Bot_G Inf_G entails_G Red_I_G Red_F_G Bot_F\n     \\<G>_F \\<G>_I =\n    tiebreaker_lifting Bot_F Inf_F Bot_G entails_G Inf_G Red_I_G Red_F_G\n     \\<G>_F \\<G>_I (\\<lambda>g C C'. False)", "then"], ["proof (chain)\npicking this:\n  tiebreaker_lifting_axioms (\\<lambda>g C C'. False)", "show ?thesis"], ["proof (prove)\nusing this:\n  tiebreaker_lifting_axioms (\\<lambda>g C C'. False)\n\ngoal (1 subgoal):\n 1. standard_lifting Inf_F Bot_G Inf_G entails_G Red_I_G Red_F_G Bot_F\n     \\<G>_F \\<G>_I =\n    tiebreaker_lifting Bot_F Inf_F Bot_G entails_G Inf_G Red_I_G Red_F_G\n     \\<G>_F \\<G>_I (\\<lambda>g C C'. False)", "unfolding standard_lifting_def tiebreaker_lifting_def"], ["proof (prove)\nusing this:\n  tiebreaker_lifting_axioms (\\<lambda>g C C'. False)\n\ngoal (1 subgoal):\n 1. (calculus Bot_G Inf_G entails_G Red_I_G Red_F_G \\<and>\n     standard_lifting_axioms Inf_F Bot_G Red_I_G Bot_F \\<G>_F \\<G>_I) =\n    ((calculus Bot_G Inf_G entails_G Red_I_G Red_F_G \\<and>\n      standard_lifting_axioms Inf_F Bot_G Red_I_G Bot_F \\<G>_F\n       \\<G>_I) \\<and>\n     tiebreaker_lifting_axioms (\\<lambda>g C C'. False))", "by blast"], ["proof (state)\nthis:\n  standard_lifting Inf_F Bot_G Inf_G entails_G Red_I_G Red_F_G Bot_F \\<G>_F\n   \\<G>_I =\n  tiebreaker_lifting Bot_F Inf_F Bot_G entails_G Inf_G Red_I_G Red_F_G\n   \\<G>_F \\<G>_I (\\<lambda>g C C'. False)\n\ngoal:\nNo subgoals!", "qed"], ["", "context standard_lifting\nbegin"], ["", "interpretation empt_ord: tiebreaker_lifting Bot_F Inf_F Bot_G entails_G Inf_G Red_I_G\n    Red_F_G \\<G>_F \\<G>_I \"\\<lambda>g C C'. False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_F Inf_F Bot_G (\\<Turnstile>G) Inf_G Red_I_G\n     Red_F_G \\<G>_F \\<G>_I (\\<lambda>g C C'. False)", "using standard_empty_tiebreaker_equiv"], ["proof (prove)\nusing this:\n  standard_lifting ?Inf_F ?Bot_G ?Inf_G ?entails_G ?Red_I_G ?Red_F_G ?Bot_F\n   ?\\<G>_F ?\\<G>_I =\n  tiebreaker_lifting ?Bot_F ?Inf_F ?Bot_G ?entails_G ?Inf_G ?Red_I_G\n   ?Red_F_G ?\\<G>_F ?\\<G>_I (\\<lambda>g C C'. False)\n\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_F Inf_F Bot_G (\\<Turnstile>G) Inf_G Red_I_G\n     Red_F_G \\<G>_F \\<G>_I (\\<lambda>g C C'. False)", "using standard_lifting_axioms"], ["proof (prove)\nusing this:\n  standard_lifting ?Inf_F ?Bot_G ?Inf_G ?entails_G ?Red_I_G ?Red_F_G ?Bot_F\n   ?\\<G>_F ?\\<G>_I =\n  tiebreaker_lifting ?Bot_F ?Inf_F ?Bot_G ?entails_G ?Inf_G ?Red_I_G\n   ?Red_F_G ?\\<G>_F ?\\<G>_I (\\<lambda>g C C'. False)\n  standard_lifting Inf_F Bot_G Inf_G (\\<Turnstile>G) Red_I_G Red_F_G Bot_F\n   \\<G>_F \\<G>_I\n\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_F Inf_F Bot_G (\\<Turnstile>G) Inf_G Red_I_G\n     Red_F_G \\<G>_F \\<G>_I (\\<lambda>g C C'. False)", "by blast"], ["", "lemma red_f_equiv: \"empt_ord.Red_F_\\<G> = Red_F_\\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. empt_ord.Red_F_\\<G> = Red_F_\\<G>", "unfolding Red_F_\\<G>_def empt_ord.Red_F_\\<G>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        {C. \\<forall>D\\<in>\\<G>_F C.\n               D \\<in> Red_F_G (\\<G>_Fset N) \\<or>\n               (\\<exists>E\\<in>N. False \\<and> D \\<in> \\<G>_F E)}) =\n    (\\<lambda>N.\n        {C. \\<forall>D\\<in>\\<G>_F C. D \\<in> Red_F_G (\\<G>_Fset N)})", "by simp"], ["", "sublocale calc?: calculus Bot_F Inf_F entails_\\<G> Red_I_\\<G> Red_F_\\<G>"], ["proof (prove)\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>\n     Red_F_\\<G>", "using empt_ord.calculus_axioms red_f_equiv"], ["proof (prove)\nusing this:\n  calculus Bot_F Inf_F\n   (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>\n   empt_ord.Red_F_\\<G>\n  empt_ord.Red_F_\\<G> = Red_F_\\<G>\n\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>\n     Red_F_\\<G>", "by fastforce"], ["", "lemma grounded_inf_in_ground_inf: \"\\<iota> \\<in> Inf_F \\<Longrightarrow> \\<G>_I \\<iota> \\<noteq> None \\<Longrightarrow> the (\\<G>_I \\<iota>) \\<subseteq> Inf_G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> the (\\<G>_I \\<iota>) \\<subseteq> Inf_G", "using inf_map ground.Red_I_to_Inf"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<iota> \\<in> Inf_F; \\<G>_I ?\\<iota> \\<noteq> None\\<rbrakk>\n  \\<Longrightarrow> the (\\<G>_I ?\\<iota>)\n                    \\<subseteq> Red_I_G (\\<G>_F (concl_of ?\\<iota>))\n  Red_I_G ?N \\<subseteq> Inf_G\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<iota> \\<in> Inf_F; \\<G>_I \\<iota> \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> the (\\<G>_I \\<iota>) \\<subseteq> Inf_G", "by blast"], ["", "abbreviation ground_Inf_overapproximated :: \"'f set \\<Rightarrow> bool\" where\n    \"ground_Inf_overapproximated N \\<equiv> ground.Inf_from (\\<G>_Fset N)\n      \\<subseteq> {\\<iota>. \\<exists>\\<iota>'\\<in> Inf_from N. \\<G>_I \\<iota>' \\<noteq> None \\<and> \\<iota> \\<in> the (\\<G>_I \\<iota>')} \\<union> Red_I_G (\\<G>_Fset N)\""], ["", "(* abbreviation \"saturated \\<equiv> calc.saturated\" *)"], ["", "lemma sat_inf_imp_ground_red:\n    assumes\n      \"saturated N\" and\n      \"\\<iota>' \\<in> Inf_from N\" and\n      \"\\<G>_I \\<iota>' \\<noteq> None \\<and> \\<iota> \\<in> the (\\<G>_I \\<iota>')\"\n    shows \"\\<iota> \\<in> Red_I_G (\\<G>_Fset N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_G (\\<G>_Fset N)", "using assms Red_I_\\<G>_def"], ["proof (prove)\nusing this:\n  saturated N\n  \\<iota>' \\<in> Inf_from N\n  \\<G>_I \\<iota>' \\<noteq> None \\<and> \\<iota> \\<in> the (\\<G>_I \\<iota>')\n  Red_I_\\<G> ?N =\n  {\\<iota> \\<in> Inf_F.\n   \\<G>_I \\<iota> \\<noteq> None \\<and>\n   the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset ?N) \\<or>\n   \\<G>_I \\<iota> = None \\<and>\n   \\<G>_F (concl_of \\<iota>)\n   \\<subseteq> \\<G>_Fset ?N \\<union> Red_F_G (\\<G>_Fset ?N)}\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_G (\\<G>_Fset N)", "unfolding saturated_def"], ["proof (prove)\nusing this:\n  Inf_from N \\<subseteq> Red_I_\\<G> N\n  \\<iota>' \\<in> Inf_from N\n  \\<G>_I \\<iota>' \\<noteq> None \\<and> \\<iota> \\<in> the (\\<G>_I \\<iota>')\n  Red_I_\\<G> ?N =\n  {\\<iota> \\<in> Inf_F.\n   \\<G>_I \\<iota> \\<noteq> None \\<and>\n   the (\\<G>_I \\<iota>) \\<subseteq> Red_I_G (\\<G>_Fset ?N) \\<or>\n   \\<G>_I \\<iota> = None \\<and>\n   \\<G>_F (concl_of \\<iota>)\n   \\<subseteq> \\<G>_Fset ?N \\<union> Red_F_G (\\<G>_Fset ?N)}\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_G (\\<G>_Fset N)", "by auto"], ["", "(* lem:sat-wrt-finf *)"], ["", "lemma sat_imp_ground_sat:\n    \"saturated N \\<Longrightarrow> ground_Inf_overapproximated N \\<Longrightarrow> ground.saturated (\\<G>_Fset N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>saturated N;\n     ground.Inf_from (\\<G>_Fset N)\n     \\<subseteq> {\\<iota>.\n                  \\<exists>\\<iota>'\\<in>Inf_from N.\n                     \\<G>_I \\<iota>' \\<noteq> None \\<and>\n                     \\<iota> \\<in> the (\\<G>_I \\<iota>')} \\<union>\n                 Red_I_G (\\<G>_Fset N)\\<rbrakk>\n    \\<Longrightarrow> ground.saturated (\\<G>_Fset N)", "unfolding ground.saturated_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>saturated N;\n     ground.Inf_from (\\<G>_Fset N)\n     \\<subseteq> {\\<iota>.\n                  \\<exists>\\<iota>'\\<in>Inf_from N.\n                     \\<G>_I \\<iota>' \\<noteq> None \\<and>\n                     \\<iota> \\<in> the (\\<G>_I \\<iota>')} \\<union>\n                 Red_I_G (\\<G>_Fset N)\\<rbrakk>\n    \\<Longrightarrow> ground.Inf_from (\\<G>_Fset N)\n                      \\<subseteq> Red_I_G (\\<G>_Fset N)", "using sat_inf_imp_ground_red"], ["proof (prove)\nusing this:\n  \\<lbrakk>saturated ?N; ?\\<iota>' \\<in> Inf_from ?N;\n   \\<G>_I ?\\<iota>' \\<noteq> None \\<and>\n   ?\\<iota> \\<in> the (\\<G>_I ?\\<iota>')\\<rbrakk>\n  \\<Longrightarrow> ?\\<iota> \\<in> Red_I_G (\\<G>_Fset ?N)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>saturated N;\n     ground.Inf_from (\\<G>_Fset N)\n     \\<subseteq> {\\<iota>.\n                  \\<exists>\\<iota>'\\<in>Inf_from N.\n                     \\<G>_I \\<iota>' \\<noteq> None \\<and>\n                     \\<iota> \\<in> the (\\<G>_I \\<iota>')} \\<union>\n                 Red_I_G (\\<G>_Fset N)\\<rbrakk>\n    \\<Longrightarrow> ground.Inf_from (\\<G>_Fset N)\n                      \\<subseteq> Red_I_G (\\<G>_Fset N)", "by auto"], ["", "(* thm:finf-complete *)"], ["", "theorem stat_ref_comp_to_non_ground:\n    assumes\n      stat_ref_G: \"statically_complete_calculus Bot_G Inf_G entails_G Red_I_G Red_F_G\" and\n      sat_n_imp: \"\\<And>N. saturated N \\<Longrightarrow> ground_Inf_overapproximated N\"\n    shows\n      \"statically_complete_calculus Bot_F Inf_F entails_\\<G> Red_I_\\<G> Red_F_\\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot_F Inf_F\n     (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>\n     Red_F_\\<G>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot_F; saturated N;\n        \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "fix B N"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot_F; saturated N;\n        \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "assume\n      b_in: \"B \\<in> Bot_F\" and\n      sat_n: \"saturated N\" and\n      n_entails_bot: \"N \\<Turnstile>\\<G> {B}\""], ["proof (state)\nthis:\n  B \\<in> Bot_F\n  saturated N\n  \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot_F; saturated N;\n        \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "have ground_n_entails: \"\\<G>_Fset N \\<Turnstile>G \\<G>_F B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G>_Fset N \\<Turnstile>G \\<G>_F B", "using n_entails_bot"], ["proof (prove)\nusing this:\n  \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\n\ngoal (1 subgoal):\n 1. \\<G>_Fset N \\<Turnstile>G \\<G>_F B", "by simp"], ["proof (state)\nthis:\n  \\<G>_Fset N \\<Turnstile>G \\<G>_F B\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot_F; saturated N;\n        \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "then"], ["proof (chain)\npicking this:\n  \\<G>_Fset N \\<Turnstile>G \\<G>_F B", "obtain BG where bg_in1: \"BG \\<in> \\<G>_F B\""], ["proof (prove)\nusing this:\n  \\<G>_Fset N \\<Turnstile>G \\<G>_F B\n\ngoal (1 subgoal):\n 1. (\\<And>BG. BG \\<in> \\<G>_F B \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Bot_map_not_empty[OF b_in]"], ["proof (prove)\nusing this:\n  \\<G>_Fset N \\<Turnstile>G \\<G>_F B\n  \\<G>_F B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>BG. BG \\<in> \\<G>_F B \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  BG \\<in> \\<G>_F B\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot_F; saturated N;\n        \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "then"], ["proof (chain)\npicking this:\n  BG \\<in> \\<G>_F B", "have bg_in: \"BG \\<in> Bot_G\""], ["proof (prove)\nusing this:\n  BG \\<in> \\<G>_F B\n\ngoal (1 subgoal):\n 1. BG \\<in> Bot_G", "using Bot_map[OF b_in]"], ["proof (prove)\nusing this:\n  BG \\<in> \\<G>_F B\n  \\<G>_F B \\<subseteq> Bot_G\n\ngoal (1 subgoal):\n 1. BG \\<in> Bot_G", "by blast"], ["proof (state)\nthis:\n  BG \\<in> Bot_G\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot_F; saturated N;\n        \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "have ground_n_entails_bot: \"\\<G>_Fset N \\<Turnstile>G {BG}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G>_Fset N \\<Turnstile>G {BG}", "using ground_n_entails bg_in1 ground.entail_set_all_formulas"], ["proof (prove)\nusing this:\n  \\<G>_Fset N \\<Turnstile>G \\<G>_F B\n  BG \\<in> \\<G>_F B\n  (?N1.0 \\<Turnstile>G ?N2.0) =\n  (\\<forall>C\\<in>?N2.0. ?N1.0 \\<Turnstile>G {C})\n\ngoal (1 subgoal):\n 1. \\<G>_Fset N \\<Turnstile>G {BG}", "by blast"], ["proof (state)\nthis:\n  \\<G>_Fset N \\<Turnstile>G {BG}\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot_F; saturated N;\n        \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "have \"ground.Inf_from (\\<G>_Fset N) \\<subseteq>\n      {\\<iota>. \\<exists>\\<iota>'\\<in> Inf_from N. \\<G>_I \\<iota>' \\<noteq> None \\<and> \\<iota> \\<in> the (\\<G>_I \\<iota>')} \\<union> Red_I_G (\\<G>_Fset N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground.Inf_from (\\<G>_Fset N)\n    \\<subseteq> {\\<iota>.\n                 \\<exists>\\<iota>'\\<in>Inf_from N.\n                    \\<G>_I \\<iota>' \\<noteq> None \\<and>\n                    \\<iota> \\<in> the (\\<G>_I \\<iota>')} \\<union>\n                Red_I_G (\\<G>_Fset N)", "using sat_n_imp[OF sat_n]"], ["proof (prove)\nusing this:\n  ground.Inf_from (\\<G>_Fset N)\n  \\<subseteq> {\\<iota>.\n               \\<exists>\\<iota>'\\<in>Inf_from N.\n                  \\<G>_I \\<iota>' \\<noteq> None \\<and>\n                  \\<iota> \\<in> the (\\<G>_I \\<iota>')} \\<union>\n              Red_I_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. ground.Inf_from (\\<G>_Fset N)\n    \\<subseteq> {\\<iota>.\n                 \\<exists>\\<iota>'\\<in>Inf_from N.\n                    \\<G>_I \\<iota>' \\<noteq> None \\<and>\n                    \\<iota> \\<in> the (\\<G>_I \\<iota>')} \\<union>\n                Red_I_G (\\<G>_Fset N)", "."], ["proof (state)\nthis:\n  ground.Inf_from (\\<G>_Fset N)\n  \\<subseteq> {\\<iota>.\n               \\<exists>\\<iota>'\\<in>Inf_from N.\n                  \\<G>_I \\<iota>' \\<noteq> None \\<and>\n                  \\<iota> \\<in> the (\\<G>_I \\<iota>')} \\<union>\n              Red_I_G (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot_F; saturated N;\n        \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "have \"ground.saturated (\\<G>_Fset N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground.saturated (\\<G>_Fset N)", "using sat_imp_ground_sat[OF sat_n sat_n_imp[OF sat_n]]"], ["proof (prove)\nusing this:\n  ground.saturated (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. ground.saturated (\\<G>_Fset N)", "."], ["proof (state)\nthis:\n  ground.saturated (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot_F; saturated N;\n        \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "then"], ["proof (chain)\npicking this:\n  ground.saturated (\\<G>_Fset N)", "have \"\\<exists>BG'\\<in>Bot_G. BG' \\<in> (\\<G>_Fset N)\""], ["proof (prove)\nusing this:\n  ground.saturated (\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. \\<exists>BG'\\<in>Bot_G. BG' \\<in> \\<G>_Fset N", "using stat_ref_G ground.calculus_axioms bg_in ground_n_entails_bot"], ["proof (prove)\nusing this:\n  ground.saturated (\\<G>_Fset N)\n  statically_complete_calculus Bot_G Inf_G (\\<Turnstile>G) Red_I_G Red_F_G\n  calculus Bot_G Inf_G (\\<Turnstile>G) Red_I_G Red_F_G\n  BG \\<in> Bot_G\n  \\<G>_Fset N \\<Turnstile>G {BG}\n\ngoal (1 subgoal):\n 1. \\<exists>BG'\\<in>Bot_G. BG' \\<in> \\<G>_Fset N", "unfolding statically_complete_calculus_def statically_complete_calculus_axioms_def"], ["proof (prove)\nusing this:\n  ground.saturated (\\<G>_Fset N)\n  calculus Bot_G Inf_G (\\<Turnstile>G) Red_I_G Red_F_G \\<and>\n  (\\<forall>B N.\n      B \\<in> Bot_G \\<longrightarrow>\n      ground.saturated N \\<longrightarrow>\n      N \\<Turnstile>G {B} \\<longrightarrow>\n      (\\<exists>B'\\<in>Bot_G. B' \\<in> N))\n  calculus Bot_G Inf_G (\\<Turnstile>G) Red_I_G Red_F_G\n  BG \\<in> Bot_G\n  \\<G>_Fset N \\<Turnstile>G {BG}\n\ngoal (1 subgoal):\n 1. \\<exists>BG'\\<in>Bot_G. BG' \\<in> \\<G>_Fset N", "by blast"], ["proof (state)\nthis:\n  \\<exists>BG'\\<in>Bot_G. BG' \\<in> \\<G>_Fset N\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot_F; saturated N;\n        \\<G>_Fset N \\<Turnstile>G \\<G>_Fset {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "then"], ["proof (chain)\npicking this:\n  \\<exists>BG'\\<in>Bot_G. BG' \\<in> \\<G>_Fset N", "show \"\\<exists>B'\\<in> Bot_F. B' \\<in> N\""], ["proof (prove)\nusing this:\n  \\<exists>BG'\\<in>Bot_G. BG' \\<in> \\<G>_Fset N\n\ngoal (1 subgoal):\n 1. \\<exists>B'\\<in>Bot_F. B' \\<in> N", "using bg_in Bot_cond Bot_map_not_empty Bot_cond"], ["proof (prove)\nusing this:\n  \\<exists>BG'\\<in>Bot_G. BG' \\<in> \\<G>_Fset N\n  BG \\<in> Bot_G\n  \\<G>_F ?C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> ?C \\<in> Bot_F\n  ?B \\<in> Bot_F \\<Longrightarrow> \\<G>_F ?B \\<noteq> {}\n  \\<G>_F ?C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> ?C \\<in> Bot_F\n\ngoal (1 subgoal):\n 1. \\<exists>B'\\<in>Bot_F. B' \\<in> N", "by blast"], ["proof (state)\nthis:\n  \\<exists>B'\\<in>Bot_F. B' \\<in> N\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context tiebreaker_lifting \nbegin"], ["", "(* lem:saturation-indep-of-sqsubset *)"], ["", "lemma saturated_empty_order_equiv_saturated:\n    \"saturated N = calc.saturated N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.saturated N = local.saturated N", "by (rule refl)"], ["", "(* lem:static-ref-compl-indep-of-sqsubset *)"], ["", "lemma static_empty_order_equiv_static:\n    \"statically_complete_calculus Bot_F Inf_F entails_\\<G> Red_I_\\<G> Red_F_\\<G> =\n      statically_complete_calculus Bot_F Inf_F entails_\\<G> Red_I_\\<G> empty_ord.Red_F_\\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot_F Inf_F\n     (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>\n     local.Red_F_\\<G> =\n    statically_complete_calculus Bot_F Inf_F\n     (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>\n     empty_ord.Red_F_\\<G>", "unfolding statically_complete_calculus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (calculus Bot_F Inf_F\n      (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>\n      local.Red_F_\\<G> \\<and>\n     statically_complete_calculus_axioms Bot_F Inf_F\n      (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2)\n      Red_I_\\<G>) =\n    (calculus Bot_F Inf_F\n      (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>\n      empty_ord.Red_F_\\<G> \\<and>\n     statically_complete_calculus_axioms Bot_F Inf_F\n      (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>)", "by (rule iffI) (standard,(standard)[],simp)+"], ["", "(* thm:FRedsqsubset-is-dyn-ref-compl *)"], ["", "theorem static_to_dynamic:\n    \"statically_complete_calculus Bot_F Inf_F entails_\\<G> Red_I_\\<G> empty_ord.Red_F_\\<G> =\n      dynamically_complete_calculus Bot_F Inf_F entails_\\<G> Red_I_\\<G> Red_F_\\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot_F Inf_F\n     (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>\n     empty_ord.Red_F_\\<G> =\n    dynamically_complete_calculus Bot_F Inf_F\n     (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>\n     local.Red_F_\\<G>", "using dyn_equiv_stat static_empty_order_equiv_static"], ["proof (prove)\nusing this:\n  dynamically_complete_calculus Bot_F Inf_F\n   (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>\n   local.Red_F_\\<G> =\n  statically_complete_calculus Bot_F Inf_F\n   (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>\n   local.Red_F_\\<G>\n  statically_complete_calculus Bot_F Inf_F\n   (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>\n   local.Red_F_\\<G> =\n  statically_complete_calculus Bot_F Inf_F\n   (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>\n   empty_ord.Red_F_\\<G>\n\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot_F Inf_F\n     (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>\n     empty_ord.Red_F_\\<G> =\n    dynamically_complete_calculus Bot_F Inf_F\n     (\\<lambda>N1 N2. \\<G>_Fset N1 \\<Turnstile>G \\<G>_Fset N2) Red_I_\\<G>\n     local.Red_F_\\<G>", "by blast"], ["", "end"], ["", "subsection \\<open>Lifting with a Family of Redundancy Criteria\\<close>"], ["", "locale lifting_intersection = inference_system Inf_F +\n  ground: inference_system_family Q Inf_G_q +\n  ground: consequence_relation_family Bot_G Q entails_q\n  for\n    Inf_F :: \"'f inference set\" and\n    Bot_G :: \"'g set\" and\n    Q :: \"'q set\" and\n    Inf_G_q :: \\<open>'q \\<Rightarrow> 'g inference set\\<close> and\n    entails_q :: \"'q \\<Rightarrow> 'g set \\<Rightarrow> 'g set \\<Rightarrow> bool\" and\n    Red_I_q :: \"'q \\<Rightarrow> 'g set \\<Rightarrow> 'g inference set\" and\n    Red_F_q :: \"'q \\<Rightarrow> 'g set \\<Rightarrow> 'g set\"\n  + fixes\n    Bot_F :: \"'f set\" and\n    \\<G>_F_q :: \"'q \\<Rightarrow> 'f \\<Rightarrow> 'g set\" and\n    \\<G>_I_q :: \"'q \\<Rightarrow> 'f inference \\<Rightarrow> 'g inference set option\" and\n    Prec_F_g :: \"'g \\<Rightarrow> 'f \\<Rightarrow> 'f \\<Rightarrow> bool\"\n  assumes\n    standard_lifting_family:\n      \"\\<forall>q \\<in> Q. tiebreaker_lifting Bot_F Inf_F Bot_G (entails_q q) (Inf_G_q q) (Red_I_q q)\n         (Red_F_q q) (\\<G>_F_q q) (\\<G>_I_q q) Prec_F_g\"\nbegin"], ["", "abbreviation \\<G>_Fset_q :: \"'q \\<Rightarrow> 'f set \\<Rightarrow> 'g set\" where\n  \"\\<G>_Fset_q q N \\<equiv> \\<Union> (\\<G>_F_q q ` N)\""], ["", "definition Red_I_\\<G>_q :: \"'q \\<Rightarrow> 'f set \\<Rightarrow> 'f inference set\" where\n  \"Red_I_\\<G>_q q N = {\\<iota> \\<in> Inf_F. (\\<G>_I_q q \\<iota> \\<noteq> None \\<and> the (\\<G>_I_q q \\<iota>) \\<subseteq> Red_I_q q (\\<G>_Fset_q q N))\n   \\<or> (\\<G>_I_q q \\<iota> = None \\<and> \\<G>_F_q q (concl_of \\<iota>) \\<subseteq> (\\<G>_Fset_q q N \\<union> Red_F_q q (\\<G>_Fset_q q N)))}\""], ["", "definition Red_F_\\<G>_empty_q :: \"'q \\<Rightarrow> 'f set \\<Rightarrow> 'f set\" where\n  \"Red_F_\\<G>_empty_q q N = {C. \\<forall>D \\<in> \\<G>_F_q q C. D \\<in> Red_F_q q (\\<G>_Fset_q q N)}\""], ["", "definition Red_F_\\<G>_q :: \"'q \\<Rightarrow> 'f set \\<Rightarrow> 'f set\" where\n  \"Red_F_\\<G>_q q N =\n   {C. \\<forall>D \\<in> \\<G>_F_q q C. D \\<in> Red_F_q q (\\<G>_Fset_q q N) \\<or> (\\<exists>E \\<in> N. Prec_F_g D E C \\<and> D \\<in> \\<G>_F_q q E)}\""], ["", "abbreviation entails_\\<G>_q :: \"'q \\<Rightarrow> 'f set \\<Rightarrow> 'f set \\<Rightarrow> bool\" where\n  \"entails_\\<G>_q q N1 N2 \\<equiv> entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2)\""], ["", "lemma red_crit_lifting_family:\n  assumes q_in: \"q \\<in> Q\"\n  shows \"calculus Bot_F Inf_F (entails_\\<G>_q q) (Red_I_\\<G>_q q) (Red_F_\\<G>_q q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2. entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_q q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2. entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_q q)", "interpret wf_lift:\n    tiebreaker_lifting Bot_F Inf_F Bot_G \"entails_q q\" \"Inf_G_q q\" \"Red_I_q q\"\n      \"Red_F_q q\" \"\\<G>_F_q q\" \"\\<G>_I_q q\" Prec_F_g"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_F Inf_F Bot_G (entails_q q) (Inf_G_q q)\n     (Red_I_q q) (Red_F_q q) (\\<G>_F_q q) (\\<G>_I_q q) Prec_F_g", "using standard_lifting_family q_in"], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>Q.\n     tiebreaker_lifting Bot_F Inf_F Bot_G (entails_q q) (Inf_G_q q)\n      (Red_I_q q) (Red_F_q q) (\\<G>_F_q q) (\\<G>_I_q q) Prec_F_g\n  q \\<in> Q\n\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_F Inf_F Bot_G (entails_q q) (Inf_G_q q)\n     (Red_I_q q) (Red_F_q q) (\\<G>_F_q q) (\\<G>_I_q q) Prec_F_g", "by metis"], ["proof (state)\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2.\n         entails_q q (wf_lift.\\<G>_Fset N1) (wf_lift.\\<G>_Fset N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_q q)", "have \"Red_I_\\<G>_q q = wf_lift.Red_I_\\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_I_\\<G>_q q = wf_lift.Red_I_\\<G>", "unfolding Red_I_\\<G>_q_def wf_lift.Red_I_\\<G>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        {\\<iota> \\<in> Inf_F.\n         \\<G>_I_q q \\<iota> \\<noteq> None \\<and>\n         the (\\<G>_I_q q \\<iota>)\n         \\<subseteq> Red_I_q q (wf_lift.\\<G>_Fset N) \\<or>\n         \\<G>_I_q q \\<iota> = None \\<and>\n         \\<G>_F_q q (concl_of \\<iota>)\n         \\<subseteq> wf_lift.\\<G>_Fset N \\<union>\n                     Red_F_q q (wf_lift.\\<G>_Fset N)}) =\n    (\\<lambda>N.\n        {\\<iota> \\<in> Inf_F.\n         \\<G>_I_q q \\<iota> \\<noteq> None \\<and>\n         the (\\<G>_I_q q \\<iota>)\n         \\<subseteq> Red_I_q q (wf_lift.\\<G>_Fset N) \\<or>\n         \\<G>_I_q q \\<iota> = None \\<and>\n         \\<G>_F_q q (concl_of \\<iota>)\n         \\<subseteq> wf_lift.\\<G>_Fset N \\<union>\n                     Red_F_q q (wf_lift.\\<G>_Fset N)})", "by blast"], ["proof (state)\nthis:\n  Red_I_\\<G>_q q = wf_lift.Red_I_\\<G>\n\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2.\n         entails_q q (wf_lift.\\<G>_Fset N1) (wf_lift.\\<G>_Fset N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_q q)", "moreover"], ["proof (state)\nthis:\n  Red_I_\\<G>_q q = wf_lift.Red_I_\\<G>\n\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2.\n         entails_q q (wf_lift.\\<G>_Fset N1) (wf_lift.\\<G>_Fset N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_q q)", "have \"Red_F_\\<G>_q q = wf_lift.Red_F_\\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_F_\\<G>_q q = local.wf_lift.Red_F_\\<G>", "unfolding Red_F_\\<G>_q_def wf_lift.Red_F_\\<G>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        {C. \\<forall>D\\<in>\\<G>_F_q q C.\n               D \\<in> Red_F_q q (wf_lift.\\<G>_Fset N) \\<or>\n               (\\<exists>E\\<in>N.\n                   Prec_F_g D E C \\<and> D \\<in> \\<G>_F_q q E)}) =\n    (\\<lambda>N.\n        {C. \\<forall>D\\<in>\\<G>_F_q q C.\n               D \\<in> Red_F_q q (wf_lift.\\<G>_Fset N) \\<or>\n               (\\<exists>E\\<in>N.\n                   Prec_F_g D E C \\<and> D \\<in> \\<G>_F_q q E)})", "by blast"], ["proof (state)\nthis:\n  Red_F_\\<G>_q q = local.wf_lift.Red_F_\\<G>\n\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2.\n         entails_q q (wf_lift.\\<G>_Fset N1) (wf_lift.\\<G>_Fset N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_q q)", "ultimately"], ["proof (chain)\npicking this:\n  Red_I_\\<G>_q q = wf_lift.Red_I_\\<G>\n  Red_F_\\<G>_q q = local.wf_lift.Red_F_\\<G>", "show ?thesis"], ["proof (prove)\nusing this:\n  Red_I_\\<G>_q q = wf_lift.Red_I_\\<G>\n  Red_F_\\<G>_q q = local.wf_lift.Red_F_\\<G>\n\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2.\n         entails_q q (wf_lift.\\<G>_Fset N1) (wf_lift.\\<G>_Fset N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_q q)", "using wf_lift.calculus_axioms"], ["proof (prove)\nusing this:\n  Red_I_\\<G>_q q = wf_lift.Red_I_\\<G>\n  Red_F_\\<G>_q q = local.wf_lift.Red_F_\\<G>\n  calculus Bot_F Inf_F\n   (\\<lambda>N1 N2.\n       entails_q q (wf_lift.\\<G>_Fset N1) (wf_lift.\\<G>_Fset N2))\n   wf_lift.Red_I_\\<G> local.wf_lift.Red_F_\\<G>\n\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2.\n         entails_q q (wf_lift.\\<G>_Fset N1) (wf_lift.\\<G>_Fset N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_q q)", "by simp"], ["proof (state)\nthis:\n  calculus Bot_F Inf_F\n   (\\<lambda>N1 N2.\n       entails_q q (wf_lift.\\<G>_Fset N1) (wf_lift.\\<G>_Fset N2))\n   (Red_I_\\<G>_q q) (Red_F_\\<G>_q q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma red_crit_lifting_family_empty_ord:\n  assumes q_in: \"q \\<in> Q\"\n  shows \"calculus Bot_F Inf_F (entails_\\<G>_q q) (Red_I_\\<G>_q q) (Red_F_\\<G>_empty_q q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2. entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_empty_q q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2. entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_empty_q q)", "interpret wf_lift:\n    tiebreaker_lifting Bot_F Inf_F Bot_G \"entails_q q\" \"Inf_G_q q\" \"Red_I_q q\"\n      \"Red_F_q q\" \"\\<G>_F_q q\" \"\\<G>_I_q q\" Prec_F_g"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_F Inf_F Bot_G (entails_q q) (Inf_G_q q)\n     (Red_I_q q) (Red_F_q q) (\\<G>_F_q q) (\\<G>_I_q q) Prec_F_g", "using standard_lifting_family q_in"], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>Q.\n     tiebreaker_lifting Bot_F Inf_F Bot_G (entails_q q) (Inf_G_q q)\n      (Red_I_q q) (Red_F_q q) (\\<G>_F_q q) (\\<G>_I_q q) Prec_F_g\n  q \\<in> Q\n\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_F Inf_F Bot_G (entails_q q) (Inf_G_q q)\n     (Red_I_q q) (Red_F_q q) (\\<G>_F_q q) (\\<G>_I_q q) Prec_F_g", "by metis"], ["proof (state)\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2.\n         entails_q q (wf_lift.\\<G>_Fset N1) (wf_lift.\\<G>_Fset N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_empty_q q)", "have \"Red_I_\\<G>_q q = wf_lift.Red_I_\\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_I_\\<G>_q q = wf_lift.Red_I_\\<G>", "unfolding Red_I_\\<G>_q_def wf_lift.Red_I_\\<G>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        {\\<iota> \\<in> Inf_F.\n         \\<G>_I_q q \\<iota> \\<noteq> None \\<and>\n         the (\\<G>_I_q q \\<iota>)\n         \\<subseteq> Red_I_q q (wf_lift.\\<G>_Fset N) \\<or>\n         \\<G>_I_q q \\<iota> = None \\<and>\n         \\<G>_F_q q (concl_of \\<iota>)\n         \\<subseteq> wf_lift.\\<G>_Fset N \\<union>\n                     Red_F_q q (wf_lift.\\<G>_Fset N)}) =\n    (\\<lambda>N.\n        {\\<iota> \\<in> Inf_F.\n         \\<G>_I_q q \\<iota> \\<noteq> None \\<and>\n         the (\\<G>_I_q q \\<iota>)\n         \\<subseteq> Red_I_q q (wf_lift.\\<G>_Fset N) \\<or>\n         \\<G>_I_q q \\<iota> = None \\<and>\n         \\<G>_F_q q (concl_of \\<iota>)\n         \\<subseteq> wf_lift.\\<G>_Fset N \\<union>\n                     Red_F_q q (wf_lift.\\<G>_Fset N)})", "by blast"], ["proof (state)\nthis:\n  Red_I_\\<G>_q q = wf_lift.Red_I_\\<G>\n\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2.\n         entails_q q (wf_lift.\\<G>_Fset N1) (wf_lift.\\<G>_Fset N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_empty_q q)", "moreover"], ["proof (state)\nthis:\n  Red_I_\\<G>_q q = wf_lift.Red_I_\\<G>\n\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2.\n         entails_q q (wf_lift.\\<G>_Fset N1) (wf_lift.\\<G>_Fset N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_empty_q q)", "have \"Red_F_\\<G>_empty_q q = wf_lift.empty_ord.Red_F_\\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_F_\\<G>_empty_q q = wf_lift.empty_ord.Red_F_\\<G>", "unfolding Red_F_\\<G>_empty_q_def wf_lift.empty_ord.Red_F_\\<G>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        {C. \\<forall>D\\<in>\\<G>_F_q q C.\n               D \\<in> Red_F_q q (wf_lift.\\<G>_Fset N)}) =\n    (\\<lambda>N.\n        {C. \\<forall>D\\<in>\\<G>_F_q q C.\n               D \\<in> Red_F_q q (wf_lift.\\<G>_Fset N)})", "by blast"], ["proof (state)\nthis:\n  Red_F_\\<G>_empty_q q = wf_lift.empty_ord.Red_F_\\<G>\n\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2.\n         entails_q q (wf_lift.\\<G>_Fset N1) (wf_lift.\\<G>_Fset N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_empty_q q)", "ultimately"], ["proof (chain)\npicking this:\n  Red_I_\\<G>_q q = wf_lift.Red_I_\\<G>\n  Red_F_\\<G>_empty_q q = wf_lift.empty_ord.Red_F_\\<G>", "show ?thesis"], ["proof (prove)\nusing this:\n  Red_I_\\<G>_q q = wf_lift.Red_I_\\<G>\n  Red_F_\\<G>_empty_q q = wf_lift.empty_ord.Red_F_\\<G>\n\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2.\n         entails_q q (wf_lift.\\<G>_Fset N1) (wf_lift.\\<G>_Fset N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_empty_q q)", "using wf_lift.calc.calculus_axioms"], ["proof (prove)\nusing this:\n  Red_I_\\<G>_q q = wf_lift.Red_I_\\<G>\n  Red_F_\\<G>_empty_q q = wf_lift.empty_ord.Red_F_\\<G>\n  calculus Bot_F Inf_F\n   (\\<lambda>N1 N2.\n       entails_q q (wf_lift.\\<G>_Fset N1) (wf_lift.\\<G>_Fset N2))\n   wf_lift.Red_I_\\<G> wf_lift.empty_ord.Red_F_\\<G>\n\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2.\n         entails_q q (wf_lift.\\<G>_Fset N1) (wf_lift.\\<G>_Fset N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_empty_q q)", "by simp"], ["proof (state)\nthis:\n  calculus Bot_F Inf_F\n   (\\<lambda>N1 N2.\n       entails_q q (wf_lift.\\<G>_Fset N1) (wf_lift.\\<G>_Fset N2))\n   (Red_I_\\<G>_q q) (Red_F_\\<G>_empty_q q)\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale consequence_relation_family Bot_F Q entails_\\<G>_q"], ["proof (prove)\ngoal (1 subgoal):\n 1. consequence_relation_family Bot_F Q\n     (\\<lambda>q N1 N2. entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2))", "proof (unfold_locales; (intro ballI)?)"], ["proof (state)\ngoal (2 subgoals):\n 1. Q \\<noteq> {}\n 2. \\<And>q.\n       q \\<in> Q \\<Longrightarrow>\n       consequence_relation Bot_F\n        (\\<lambda>N1 N2. entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2))", "show \"Q \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<noteq> {}", "by (rule ground.Q_nonempty)"], ["proof (state)\nthis:\n  Q \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       q \\<in> Q \\<Longrightarrow>\n       consequence_relation Bot_F\n        (\\<lambda>N1 N2. entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       q \\<in> Q \\<Longrightarrow>\n       consequence_relation Bot_F\n        (\\<lambda>N1 N2. entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2))", "fix qi"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       q \\<in> Q \\<Longrightarrow>\n       consequence_relation Bot_F\n        (\\<lambda>N1 N2. entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2))", "assume qi_in: \"qi \\<in> Q\""], ["proof (state)\nthis:\n  qi \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       q \\<in> Q \\<Longrightarrow>\n       consequence_relation Bot_F\n        (\\<lambda>N1 N2. entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2))", "interpret lift: tiebreaker_lifting Bot_F Inf_F Bot_G \"entails_q qi\" \"Inf_G_q qi\"\n    \"Red_I_q qi\" \"Red_F_q qi\" \"\\<G>_F_q qi\" \"\\<G>_I_q qi\" Prec_F_g"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_F Inf_F Bot_G (entails_q qi) (Inf_G_q qi)\n     (Red_I_q qi) (Red_F_q qi) (\\<G>_F_q qi) (\\<G>_I_q qi) Prec_F_g", "using qi_in"], ["proof (prove)\nusing this:\n  qi \\<in> Q\n\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_F Inf_F Bot_G (entails_q qi) (Inf_G_q qi)\n     (Red_I_q qi) (Red_F_q qi) (\\<G>_F_q qi) (\\<G>_I_q qi) Prec_F_g", "by (metis standard_lifting_family)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       q \\<in> Q \\<Longrightarrow>\n       consequence_relation Bot_F\n        (\\<lambda>N1 N2. entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2))", "show \"consequence_relation Bot_F (entails_\\<G>_q qi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. consequence_relation Bot_F\n     (\\<lambda>N1 N2. entails_q qi (lift.\\<G>_Fset N1) (lift.\\<G>_Fset N2))", "by unfold_locales"], ["proof (state)\nthis:\n  consequence_relation Bot_F\n   (\\<lambda>N1 N2. entails_q qi (lift.\\<G>_Fset N1) (lift.\\<G>_Fset N2))\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale intersection_calculus Bot_F Inf_F Q entails_\\<G>_q Red_I_\\<G>_q Red_F_\\<G>_q"], ["proof (prove)\ngoal (1 subgoal):\n 1. intersection_calculus Bot_F Inf_F Q\n     (\\<lambda>q N1 N2. entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2))\n     Red_I_\\<G>_q Red_F_\\<G>_q", "by unfold_locales (auto simp: Q_nonempty red_crit_lifting_family)"], ["", "abbreviation entails_\\<G> :: \"'f set \\<Rightarrow> 'f set \\<Rightarrow> bool\" (infix \"\\<Turnstile>\\<inter>\\<G>\" 50) where\n  \"(\\<Turnstile>\\<inter>\\<G>) \\<equiv> entails\""], ["", "abbreviation Red_I_\\<G> :: \"'f set \\<Rightarrow> 'f inference set\" where\n  \"Red_I_\\<G> \\<equiv> Red_I\""], ["", "abbreviation Red_F_\\<G> :: \"'f set \\<Rightarrow> 'f set\" where\n  \"Red_F_\\<G> \\<equiv> Red_F\""], ["", "lemmas entails_\\<G>_def = entails_def"], ["", "lemmas Red_I_\\<G>_def = Red_I_def"], ["", "lemmas Red_F_\\<G>_def = Red_F_def"], ["", "sublocale empty_ord: intersection_calculus Bot_F Inf_F Q entails_\\<G>_q Red_I_\\<G>_q Red_F_\\<G>_empty_q"], ["proof (prove)\ngoal (1 subgoal):\n 1. intersection_calculus Bot_F Inf_F Q\n     (\\<lambda>q N1 N2. entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2))\n     Red_I_\\<G>_q Red_F_\\<G>_empty_q", "by unfold_locales (auto simp: Q_nonempty red_crit_lifting_family_empty_ord)"], ["", "abbreviation Red_F_\\<G>_empty :: \"'f set \\<Rightarrow> 'f set\" where\n  \"Red_F_\\<G>_empty \\<equiv> empty_ord.Red_F\""], ["", "lemmas Red_F_\\<G>_empty_def = empty_ord.Red_F_def"], ["", "lemma sat_inf_imp_ground_red_fam_inter:\n  assumes\n    sat_n: \"saturated N\" and\n    i'_in: \"\\<iota>' \\<in> Inf_from N\" and\n    q_in: \"q \\<in> Q\" and\n    grounding: \"\\<G>_I_q q \\<iota>' \\<noteq> None \\<and> \\<iota> \\<in> the (\\<G>_I_q q \\<iota>')\"\n  shows \"\\<iota> \\<in> Red_I_q q (\\<G>_Fset_q q N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_q q (\\<G>_Fset_q q N)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_q q (\\<G>_Fset_q q N)", "have \"\\<iota>' \\<in> Red_I_\\<G>_q q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota>' \\<in> Red_I_\\<G>_q q N", "using sat_n i'_in q_in all_red_crit calculus.saturated_def sat_int_to_sat_q"], ["proof (prove)\nusing this:\n  empty_ord.saturated N\n  \\<iota>' \\<in> Inf_from N\n  q \\<in> Q\n  \\<forall>q\\<in>Q.\n     calculus Bot_F Inf_F\n      (\\<lambda>N1 N2. entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2))\n      (Red_I_\\<G>_q q) (Red_F_\\<G>_q q)\n  calculus ?Bot ?Inf ?entails ?Red_I ?Red_F \\<Longrightarrow>\n  calculus.saturated ?Inf ?Red_I ?N =\n  (inference_system.Inf_from ?Inf ?N \\<subseteq> ?Red_I ?N)\n  empty_ord.saturated ?N =\n  (\\<forall>qi\\<in>Q. calculus.saturated Inf_F (Red_I_\\<G>_q qi) ?N)\n\ngoal (1 subgoal):\n 1. \\<iota>' \\<in> Red_I_\\<G>_q q N", "by blast"], ["proof (state)\nthis:\n  \\<iota>' \\<in> Red_I_\\<G>_q q N\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_q q (\\<G>_Fset_q q N)", "then"], ["proof (chain)\npicking this:\n  \\<iota>' \\<in> Red_I_\\<G>_q q N", "have \"the (\\<G>_I_q q \\<iota>') \\<subseteq> Red_I_q q (\\<G>_Fset_q q N)\""], ["proof (prove)\nusing this:\n  \\<iota>' \\<in> Red_I_\\<G>_q q N\n\ngoal (1 subgoal):\n 1. the (\\<G>_I_q q \\<iota>') \\<subseteq> Red_I_q q (\\<G>_Fset_q q N)", "by (simp add: Red_I_\\<G>_q_def grounding)"], ["proof (state)\nthis:\n  the (\\<G>_I_q q \\<iota>') \\<subseteq> Red_I_q q (\\<G>_Fset_q q N)\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_q q (\\<G>_Fset_q q N)", "then"], ["proof (chain)\npicking this:\n  the (\\<G>_I_q q \\<iota>') \\<subseteq> Red_I_q q (\\<G>_Fset_q q N)", "show ?thesis"], ["proof (prove)\nusing this:\n  the (\\<G>_I_q q \\<iota>') \\<subseteq> Red_I_q q (\\<G>_Fset_q q N)\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_q q (\\<G>_Fset_q q N)", "using grounding"], ["proof (prove)\nusing this:\n  the (\\<G>_I_q q \\<iota>') \\<subseteq> Red_I_q q (\\<G>_Fset_q q N)\n  \\<G>_I_q q \\<iota>' \\<noteq> None \\<and>\n  \\<iota> \\<in> the (\\<G>_I_q q \\<iota>')\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_q q (\\<G>_Fset_q q N)", "by blast"], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_I_q q (\\<G>_Fset_q q N)\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation ground_Inf_overapproximated :: \"'q \\<Rightarrow> 'f set \\<Rightarrow> bool\" where\n  \"ground_Inf_overapproximated q N \\<equiv>\n   ground.Inf_from_q q (\\<G>_Fset_q q N)\n   \\<subseteq> {\\<iota>. \\<exists>\\<iota>'\\<in> Inf_from N. \\<G>_I_q q \\<iota>' \\<noteq> None \\<and> \\<iota> \\<in> the (\\<G>_I_q q \\<iota>')} \\<union> Red_I_q q (\\<G>_Fset_q q N)\""], ["", "abbreviation ground_saturated :: \"'q \\<Rightarrow> 'f set \\<Rightarrow> bool\" where\n  \"ground_saturated q N \\<equiv> ground.Inf_from_q q (\\<G>_Fset_q q N) \\<subseteq> Red_I_q q (\\<G>_Fset_q q N)\""], ["", "lemma sat_imp_ground_sat_fam_inter:\n  \"saturated N \\<Longrightarrow> q \\<in> Q \\<Longrightarrow> ground_Inf_overapproximated q N \\<Longrightarrow> ground_saturated q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>empty_ord.saturated N; q \\<in> Q;\n     ground.Inf_from_q q (\\<G>_Fset_q q N)\n     \\<subseteq> {\\<iota>.\n                  \\<exists>\\<iota>'\\<in>Inf_from N.\n                     \\<G>_I_q q \\<iota>' \\<noteq> None \\<and>\n                     \\<iota> \\<in> the (\\<G>_I_q q \\<iota>')} \\<union>\n                 Red_I_q q (\\<G>_Fset_q q N)\\<rbrakk>\n    \\<Longrightarrow> ground.Inf_from_q q (\\<G>_Fset_q q N)\n                      \\<subseteq> Red_I_q q (\\<G>_Fset_q q N)", "using sat_inf_imp_ground_red_fam_inter"], ["proof (prove)\nusing this:\n  \\<lbrakk>empty_ord.saturated ?N; ?\\<iota>' \\<in> Inf_from ?N; ?q \\<in> Q;\n   \\<G>_I_q ?q ?\\<iota>' \\<noteq> None \\<and>\n   ?\\<iota> \\<in> the (\\<G>_I_q ?q ?\\<iota>')\\<rbrakk>\n  \\<Longrightarrow> ?\\<iota> \\<in> Red_I_q ?q (\\<G>_Fset_q ?q ?N)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>empty_ord.saturated N; q \\<in> Q;\n     ground.Inf_from_q q (\\<G>_Fset_q q N)\n     \\<subseteq> {\\<iota>.\n                  \\<exists>\\<iota>'\\<in>Inf_from N.\n                     \\<G>_I_q q \\<iota>' \\<noteq> None \\<and>\n                     \\<iota> \\<in> the (\\<G>_I_q q \\<iota>')} \\<union>\n                 Red_I_q q (\\<G>_Fset_q q N)\\<rbrakk>\n    \\<Longrightarrow> ground.Inf_from_q q (\\<G>_Fset_q q N)\n                      \\<subseteq> Red_I_q q (\\<G>_Fset_q q N)", "by auto"], ["", "(* thm:intersect-finf-complete *)"], ["", "theorem stat_ref_comp_to_non_ground_fam_inter:\n  assumes\n    stat_ref_G:\n      \"\\<forall>q \\<in> Q. statically_complete_calculus Bot_G (Inf_G_q q) (entails_q q) (Red_I_q q)\n        (Red_F_q q)\" and\n    sat_n_imp: \"\\<And>N. saturated N \\<Longrightarrow> \\<exists>q \\<in> Q. ground_Inf_overapproximated q N\"\n  shows\n    \"statically_complete_calculus Bot_F Inf_F entails_\\<G> Red_I_\\<G> Red_F_\\<G>_empty\""], ["proof (prove)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n     empty_ord.Red_I Red_F_\\<G>_empty", "using empty_ord.calculus_axioms"], ["proof (prove)\nusing this:\n  calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>) empty_ord.Red_I\n   Red_F_\\<G>_empty\n\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n     empty_ord.Red_I Red_F_\\<G>_empty", "unfolding statically_complete_calculus_def\n      statically_complete_calculus_axioms_def"], ["proof (prove)\nusing this:\n  calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>) empty_ord.Red_I\n   Red_F_\\<G>_empty\n\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>) empty_ord.Red_I\n     Red_F_\\<G>_empty \\<and>\n    (\\<forall>B N.\n        B \\<in> Bot_F \\<longrightarrow>\n        empty_ord.saturated N \\<longrightarrow>\n        N \\<Turnstile>\\<inter>\\<G> {B} \\<longrightarrow>\n        (\\<exists>B'\\<in>Bot_F. B' \\<in> N))", "proof (standard, clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n                 empty_ord.Red_I Red_F_\\<G>_empty;\n        B \\<in> Bot_F; empty_ord.saturated N;\n        N \\<Turnstile>\\<inter>\\<G> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "fix B N"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n                 empty_ord.Red_I Red_F_\\<G>_empty;\n        B \\<in> Bot_F; empty_ord.saturated N;\n        N \\<Turnstile>\\<inter>\\<G> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "assume\n    b_in: \"B \\<in> Bot_F\" and\n    sat_n: \"saturated N\" and\n    entails_bot: \"N \\<Turnstile>\\<inter>\\<G> {B}\""], ["proof (state)\nthis:\n  B \\<in> Bot_F\n  empty_ord.saturated N\n  N \\<Turnstile>\\<inter>\\<G> {B}\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n                 empty_ord.Red_I Red_F_\\<G>_empty;\n        B \\<in> Bot_F; empty_ord.saturated N;\n        N \\<Turnstile>\\<inter>\\<G> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "then"], ["proof (chain)\npicking this:\n  B \\<in> Bot_F\n  empty_ord.saturated N\n  N \\<Turnstile>\\<inter>\\<G> {B}", "obtain q where\n    q_in: \"q \\<in> Q\" and\n    inf_subs: \"ground.Inf_from_q q (\\<G>_Fset_q q N) \\<subseteq>\n      {\\<iota>. \\<exists>\\<iota>'\\<in> Inf_from N. \\<G>_I_q q \\<iota>' \\<noteq> None \\<and> \\<iota> \\<in> the (\\<G>_I_q q \\<iota>')}\n      \\<union> Red_I_q q (\\<G>_Fset_q q N)\""], ["proof (prove)\nusing this:\n  B \\<in> Bot_F\n  empty_ord.saturated N\n  N \\<Turnstile>\\<inter>\\<G> {B}\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> Q;\n         ground.Inf_from_q q (\\<G>_Fset_q q N)\n         \\<subseteq> {\\<iota>.\n                      \\<exists>\\<iota>'\\<in>Inf_from N.\n                         \\<G>_I_q q \\<iota>' \\<noteq> None \\<and>\n                         \\<iota> \\<in> the (\\<G>_I_q q \\<iota>')} \\<union>\n                     Red_I_q q (\\<G>_Fset_q q N)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using sat_n_imp[of N]"], ["proof (prove)\nusing this:\n  B \\<in> Bot_F\n  empty_ord.saturated N\n  N \\<Turnstile>\\<inter>\\<G> {B}\n  empty_ord.saturated N \\<Longrightarrow>\n  \\<exists>q\\<in>Q.\n     ground.Inf_from_q q (\\<G>_Fset_q q N)\n     \\<subseteq> {\\<iota>.\n                  \\<exists>\\<iota>'\\<in>Inf_from N.\n                     \\<G>_I_q q \\<iota>' \\<noteq> None \\<and>\n                     \\<iota> \\<in> the (\\<G>_I_q q \\<iota>')} \\<union>\n                 Red_I_q q (\\<G>_Fset_q q N)\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> Q;\n         ground.Inf_from_q q (\\<G>_Fset_q q N)\n         \\<subseteq> {\\<iota>.\n                      \\<exists>\\<iota>'\\<in>Inf_from N.\n                         \\<G>_I_q q \\<iota>' \\<noteq> None \\<and>\n                         \\<iota> \\<in> the (\\<G>_I_q q \\<iota>')} \\<union>\n                     Red_I_q q (\\<G>_Fset_q q N)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  q \\<in> Q\n  ground.Inf_from_q q (\\<G>_Fset_q q N)\n  \\<subseteq> {\\<iota>.\n               \\<exists>\\<iota>'\\<in>Inf_from N.\n                  \\<G>_I_q q \\<iota>' \\<noteq> None \\<and>\n                  \\<iota> \\<in> the (\\<G>_I_q q \\<iota>')} \\<union>\n              Red_I_q q (\\<G>_Fset_q q N)\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n                 empty_ord.Red_I Red_F_\\<G>_empty;\n        B \\<in> Bot_F; empty_ord.saturated N;\n        N \\<Turnstile>\\<inter>\\<G> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "interpret q_calc: calculus Bot_F Inf_F \"entails_\\<G>_q q\" \"Red_I_\\<G>_q q\" \"Red_F_\\<G>_q q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2. entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_q q)", "using all_red_crit[rule_format, OF q_in]"], ["proof (prove)\nusing this:\n  calculus Bot_F Inf_F\n   (\\<lambda>N1 N2. entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2))\n   (Red_I_\\<G>_q q) (Red_F_\\<G>_q q)\n\ngoal (1 subgoal):\n 1. calculus Bot_F Inf_F\n     (\\<lambda>N1 N2. entails_q q (\\<G>_Fset_q q N1) (\\<G>_Fset_q q N2))\n     (Red_I_\\<G>_q q) (Red_F_\\<G>_q q)", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n                 empty_ord.Red_I Red_F_\\<G>_empty;\n        B \\<in> Bot_F; empty_ord.saturated N;\n        N \\<Turnstile>\\<inter>\\<G> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "have n_q_sat: \"q_calc.saturated N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q_calc.saturated N", "using q_in sat_int_to_sat_q sat_n"], ["proof (prove)\nusing this:\n  q \\<in> Q\n  empty_ord.saturated ?N =\n  (\\<forall>qi\\<in>Q. calculus.saturated Inf_F (Red_I_\\<G>_q qi) ?N)\n  empty_ord.saturated N\n\ngoal (1 subgoal):\n 1. q_calc.saturated N", "by simp"], ["proof (state)\nthis:\n  q_calc.saturated N\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n                 empty_ord.Red_I Red_F_\\<G>_empty;\n        B \\<in> Bot_F; empty_ord.saturated N;\n        N \\<Turnstile>\\<inter>\\<G> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "interpret lifted_q_calc:\n    tiebreaker_lifting Bot_F Inf_F Bot_G \"entails_q q\" \"Inf_G_q q\" \"Red_I_q q\"\n      \"Red_F_q q\" \"\\<G>_F_q q\" \"\\<G>_I_q q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_F Inf_F Bot_G (entails_q q) (Inf_G_q q)\n     (Red_I_q q) (Red_F_q q) (\\<G>_F_q q) (\\<G>_I_q q) Prec_F_g", "using q_in"], ["proof (prove)\nusing this:\n  q \\<in> Q\n\ngoal (1 subgoal):\n 1. tiebreaker_lifting Bot_F Inf_F Bot_G (entails_q q) (Inf_G_q q)\n     (Red_I_q q) (Red_F_q q) (\\<G>_F_q q) (\\<G>_I_q q) Prec_F_g", "by (simp add: standard_lifting_family)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n                 empty_ord.Red_I Red_F_\\<G>_empty;\n        B \\<in> Bot_F; empty_ord.saturated N;\n        N \\<Turnstile>\\<inter>\\<G> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "have n_lift_sat: \"lifted_q_calc.calc.saturated N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.lifted_q_calc.saturated N", "using n_q_sat"], ["proof (prove)\nusing this:\n  q_calc.saturated N\n\ngoal (1 subgoal):\n 1. local.lifted_q_calc.saturated N", "unfolding Red_I_\\<G>_q_def lifted_q_calc.Red_I_\\<G>_def\n      lifted_q_calc.saturated_def q_calc.saturated_def"], ["proof (prove)\nusing this:\n  Inf_from N\n  \\<subseteq> {\\<iota> \\<in> Inf_F.\n               \\<G>_I_q q \\<iota> \\<noteq> None \\<and>\n               the (\\<G>_I_q q \\<iota>)\n               \\<subseteq> Red_I_q q (lifted_q_calc.\\<G>_Fset N) \\<or>\n               \\<G>_I_q q \\<iota> = None \\<and>\n               \\<G>_F_q q (concl_of \\<iota>)\n               \\<subseteq> lifted_q_calc.\\<G>_Fset N \\<union>\n                           Red_F_q q (lifted_q_calc.\\<G>_Fset N)}\n\ngoal (1 subgoal):\n 1. Inf_from N\n    \\<subseteq> {\\<iota> \\<in> Inf_F.\n                 \\<G>_I_q q \\<iota> \\<noteq> None \\<and>\n                 the (\\<G>_I_q q \\<iota>)\n                 \\<subseteq> Red_I_q q (lifted_q_calc.\\<G>_Fset N) \\<or>\n                 \\<G>_I_q q \\<iota> = None \\<and>\n                 \\<G>_F_q q (concl_of \\<iota>)\n                 \\<subseteq> lifted_q_calc.\\<G>_Fset N \\<union>\n                             Red_F_q q (lifted_q_calc.\\<G>_Fset N)}", "by auto"], ["proof (state)\nthis:\n  local.lifted_q_calc.saturated N\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n                 empty_ord.Red_I Red_F_\\<G>_empty;\n        B \\<in> Bot_F; empty_ord.saturated N;\n        N \\<Turnstile>\\<inter>\\<G> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "have ground_sat_n: \"lifted_q_calc.ground.saturated (\\<G>_Fset_q q N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lifted_q_calc.ground.saturated (lifted_q_calc.\\<G>_Fset N)", "by (rule lifted_q_calc.sat_imp_ground_sat[OF n_lift_sat])\n      (use n_lift_sat inf_subs ground.Inf_from_q_def in auto)"], ["proof (state)\nthis:\n  lifted_q_calc.ground.saturated (lifted_q_calc.\\<G>_Fset N)\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n                 empty_ord.Red_I Red_F_\\<G>_empty;\n        B \\<in> Bot_F; empty_ord.saturated N;\n        N \\<Turnstile>\\<inter>\\<G> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "have ground_n_entails_bot: \"entails_\\<G>_q q N {B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. entails_q q (lifted_q_calc.\\<G>_Fset N) (lifted_q_calc.\\<G>_Fset {B})", "using q_in entails_bot"], ["proof (prove)\nusing this:\n  q \\<in> Q\n  N \\<Turnstile>\\<inter>\\<G> {B}\n\ngoal (1 subgoal):\n 1. entails_q q (lifted_q_calc.\\<G>_Fset N) (lifted_q_calc.\\<G>_Fset {B})", "unfolding entails_\\<G>_def"], ["proof (prove)\nusing this:\n  q \\<in> Q\n  \\<forall>q\\<in>Q. entails_q q (\\<G>_Fset_q q N) (\\<G>_Fset_q q {B})\n\ngoal (1 subgoal):\n 1. entails_q q (lifted_q_calc.\\<G>_Fset N) (lifted_q_calc.\\<G>_Fset {B})", "by simp"], ["proof (state)\nthis:\n  entails_q q (lifted_q_calc.\\<G>_Fset N) (lifted_q_calc.\\<G>_Fset {B})\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n                 empty_ord.Red_I Red_F_\\<G>_empty;\n        B \\<in> Bot_F; empty_ord.saturated N;\n        N \\<Turnstile>\\<inter>\\<G> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "interpret statically_complete_calculus Bot_G \"Inf_G_q q\" \"entails_q q\" \"Red_I_q q\"\n    \"Red_F_q q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot_G (Inf_G_q q) (entails_q q) (Red_I_q q)\n     (Red_F_q q)", "using stat_ref_G[rule_format, OF q_in]"], ["proof (prove)\nusing this:\n  statically_complete_calculus Bot_G (Inf_G_q q) (entails_q q) (Red_I_q q)\n   (Red_F_q q)\n\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot_G (Inf_G_q q) (entails_q q) (Red_I_q q)\n     (Red_F_q q)", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n                 empty_ord.Red_I Red_F_\\<G>_empty;\n        B \\<in> Bot_F; empty_ord.saturated N;\n        N \\<Turnstile>\\<inter>\\<G> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "obtain BG where bg_in: \"BG \\<in> \\<G>_F_q q B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>BG.\n        BG \\<in> \\<G>_F_q q B \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using lifted_q_calc.Bot_map_not_empty[OF b_in]"], ["proof (prove)\nusing this:\n  \\<G>_F_q q B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>BG.\n        BG \\<in> \\<G>_F_q q B \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  BG \\<in> \\<G>_F_q q B\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n                 empty_ord.Red_I Red_F_\\<G>_empty;\n        B \\<in> Bot_F; empty_ord.saturated N;\n        N \\<Turnstile>\\<inter>\\<G> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "then"], ["proof (chain)\npicking this:\n  BG \\<in> \\<G>_F_q q B", "have \"BG \\<in> Bot_G\""], ["proof (prove)\nusing this:\n  BG \\<in> \\<G>_F_q q B\n\ngoal (1 subgoal):\n 1. BG \\<in> Bot_G", "using lifted_q_calc.Bot_map[OF b_in]"], ["proof (prove)\nusing this:\n  BG \\<in> \\<G>_F_q q B\n  \\<G>_F_q q B \\<subseteq> Bot_G\n\ngoal (1 subgoal):\n 1. BG \\<in> Bot_G", "by blast"], ["proof (state)\nthis:\n  BG \\<in> Bot_G\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n                 empty_ord.Red_I Red_F_\\<G>_empty;\n        B \\<in> Bot_F; empty_ord.saturated N;\n        N \\<Turnstile>\\<inter>\\<G> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "then"], ["proof (chain)\npicking this:\n  BG \\<in> Bot_G", "have \"\\<exists>BG'\\<in>Bot_G. BG' \\<in> \\<G>_Fset_q q N\""], ["proof (prove)\nusing this:\n  BG \\<in> Bot_G\n\ngoal (1 subgoal):\n 1. \\<exists>BG'\\<in>Bot_G. BG' \\<in> lifted_q_calc.\\<G>_Fset N", "using ground_sat_n ground_n_entails_bot statically_complete[of BG, OF _ ground_sat_n]\n      bg_in lifted_q_calc.ground.entail_set_all_formulas[of \"\\<G>_Fset_q q N\" \"\\<G>_Fset_q q {B}\"]"], ["proof (prove)\nusing this:\n  BG \\<in> Bot_G\n  lifted_q_calc.ground.saturated (lifted_q_calc.\\<G>_Fset N)\n  entails_q q (lifted_q_calc.\\<G>_Fset N) (lifted_q_calc.\\<G>_Fset {B})\n  \\<lbrakk>BG \\<in> Bot_G;\n   entails_q q (lifted_q_calc.\\<G>_Fset N) {BG}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B'\\<in>Bot_G.\n                       B' \\<in> lifted_q_calc.\\<G>_Fset N\n  BG \\<in> \\<G>_F_q q B\n  entails_q q (lifted_q_calc.\\<G>_Fset N) (lifted_q_calc.\\<G>_Fset {B}) =\n  (\\<forall>C\\<in>lifted_q_calc.\\<G>_Fset {B}.\n      entails_q q (lifted_q_calc.\\<G>_Fset N) {C})\n\ngoal (1 subgoal):\n 1. \\<exists>BG'\\<in>Bot_G. BG' \\<in> lifted_q_calc.\\<G>_Fset N", "by simp"], ["proof (state)\nthis:\n  \\<exists>BG'\\<in>Bot_G. BG' \\<in> lifted_q_calc.\\<G>_Fset N\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n                 empty_ord.Red_I Red_F_\\<G>_empty;\n        B \\<in> Bot_F; empty_ord.saturated N;\n        N \\<Turnstile>\\<inter>\\<G> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot_F. B' \\<in> N", "then"], ["proof (chain)\npicking this:\n  \\<exists>BG'\\<in>Bot_G. BG' \\<in> lifted_q_calc.\\<G>_Fset N", "show \"\\<exists>B'\\<in> Bot_F. B' \\<in> N\""], ["proof (prove)\nusing this:\n  \\<exists>BG'\\<in>Bot_G. BG' \\<in> lifted_q_calc.\\<G>_Fset N\n\ngoal (1 subgoal):\n 1. \\<exists>B'\\<in>Bot_F. B' \\<in> N", "using lifted_q_calc.Bot_cond"], ["proof (prove)\nusing this:\n  \\<exists>BG'\\<in>Bot_G. BG' \\<in> lifted_q_calc.\\<G>_Fset N\n  \\<G>_F_q q ?C \\<inter> Bot_G \\<noteq> {} \\<longrightarrow> ?C \\<in> Bot_F\n\ngoal (1 subgoal):\n 1. \\<exists>B'\\<in>Bot_F. B' \\<in> N", "by blast"], ["proof (state)\nthis:\n  \\<exists>B'\\<in>Bot_F. B' \\<in> N\n\ngoal:\nNo subgoals!", "qed"], ["", "(* lem:intersect-saturation-indep-of-sqsubset *)"], ["", "lemma sat_eq_sat_empty_order: \"saturated N = empty_ord.saturated N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. empty_ord.saturated N = empty_ord.saturated N", "by (rule refl)"], ["", "(* lem:intersect-static-ref-compl-indep-of-sqsubset *)"], ["", "lemma static_empty_ord_inter_equiv_static_inter:\n  \"statically_complete_calculus Bot_F Inf_F entails Red_I Red_F =\n  statically_complete_calculus Bot_F Inf_F entails Red_I Red_F_\\<G>_empty\""], ["proof (prove)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n     empty_ord.Red_I Red_F_\\<G> =\n    statically_complete_calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n     empty_ord.Red_I Red_F_\\<G>_empty", "unfolding statically_complete_calculus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>) empty_ord.Red_I\n      Red_F_\\<G> \\<and>\n     statically_complete_calculus_axioms Bot_F Inf_F\n      (\\<Turnstile>\\<inter>\\<G>) empty_ord.Red_I) =\n    (calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>) empty_ord.Red_I\n      Red_F_\\<G>_empty \\<and>\n     statically_complete_calculus_axioms Bot_F Inf_F\n      (\\<Turnstile>\\<inter>\\<G>) empty_ord.Red_I)", "by (simp add: empty_ord.calculus_axioms calculus_axioms)"], ["", "(* thm:intersect-static-ref-compl-is-dyn-ref-compl-with-order *)"], ["", "theorem stat_eq_dyn_ref_comp_fam_inter: \"statically_complete_calculus Bot_F Inf_F\n    entails Red_I Red_F_\\<G>_empty =\n  dynamically_complete_calculus Bot_F Inf_F entails Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n     empty_ord.Red_I Red_F_\\<G>_empty =\n    dynamically_complete_calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n     empty_ord.Red_I Red_F_\\<G>", "using dyn_equiv_stat static_empty_ord_inter_equiv_static_inter"], ["proof (prove)\nusing this:\n  dynamically_complete_calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n   empty_ord.Red_I Red_F_\\<G> =\n  statically_complete_calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n   empty_ord.Red_I Red_F_\\<G>\n  statically_complete_calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n   empty_ord.Red_I Red_F_\\<G> =\n  statically_complete_calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n   empty_ord.Red_I Red_F_\\<G>_empty\n\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n     empty_ord.Red_I Red_F_\\<G>_empty =\n    dynamically_complete_calculus Bot_F Inf_F (\\<Turnstile>\\<inter>\\<G>)\n     empty_ord.Red_I Red_F_\\<G>", "by blast"], ["", "end"], ["", "end"]]}