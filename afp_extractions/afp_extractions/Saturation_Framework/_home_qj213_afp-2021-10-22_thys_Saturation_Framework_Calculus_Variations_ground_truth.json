{"file_name": "/home/qj213/afp-2021-10-22/thys/Saturation_Framework/Calculus_Variations.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Saturation_Framework", "problem_names": ["lemma sat_eq_reduc_sat: \"saturated N \\<longleftrightarrow> reduc_saturated N\"", "lemma stat_ref_comp_imp_red_stat_ref_comp:\n  \"statically_complete_calculus Bot Inf entails Red_I Red_F \\<Longrightarrow>\n   reducedly_statically_complete_calculus Bot Inf entails Red_I Red_F\"", "lemma reduced_calc_is_calc: \"calculus Bot Inf entails Red_Red_I Red_F\"", "lemma inf_subs_reduced_red_inf: \"Inf_between UNIV (Red_F N) \\<subseteq> Red_Red_I N\"", "lemma reduc_calc: \"reduced_calculus Bot Inf entails Red_Red_I Red_F\"", "lemma sat_imp_red_calc_sat: \"saturated N \\<Longrightarrow> reduc_calc.saturated N\"", "lemma red_sat_eq_red_calc_sat: \"reduc_saturated N \\<longleftrightarrow> reduc_calc.saturated N\"", "lemma red_sat_eq_sat: \"reduc_saturated N \\<longleftrightarrow> saturated (N - Red_F N)\"", "theorem stat_is_stat_red: \"statically_complete_calculus Bot Inf entails Red_I Red_F \\<longleftrightarrow>\n  statically_complete_calculus Bot Inf entails Red_Red_I Red_F\"", "theorem red_stat_red_is_stat_red:\n  \"reducedly_statically_complete_calculus Bot Inf entails Red_Red_I Red_F \\<longleftrightarrow>\n   statically_complete_calculus Bot Inf entails Red_Red_I Red_F\"", "theorem red_stat_is_stat_red:\n  \"reducedly_statically_complete_calculus Bot Inf entails Red_I Red_F \\<longleftrightarrow>\n   statically_complete_calculus Bot Inf entails Red_Red_I Red_F\"", "lemma sup_red_f_in_red_liminf:\n  \"chain derive Ns \\<Longrightarrow> Sup_llist (lmap Red_F Ns) \\<subseteq> Red_F (Liminf_llist Ns)\"", "lemma sup_red_inf_in_red_liminf:\n  \"chain derive Ns \\<Longrightarrow> Sup_llist (lmap Red_I Ns) \\<subseteq> Red_I (Liminf_llist Ns)\"", "lemma reduc_fair_imp_Liminf_reduc_sat:\n  \"chain derive Ns \\<Longrightarrow> reduc_fair Ns \\<Longrightarrow> reduc_saturated (Liminf_llist Ns)\"", "lemma dyn_equiv_stat: \"dynamically_complete_calculus Bot Inf entails Red_I Red_F =\n  statically_complete_calculus Bot Inf entails Red_I Red_F\"", "lemma red_dyn_equiv_red_stat:\n  \"reducedly_dynamically_complete_calculus Bot Inf entails Red_I Red_F =\n   reducedly_statically_complete_calculus Bot Inf entails Red_I Red_F\"", "theorem dyn_ref_eq_dyn_ref_red:\n  \"dynamically_complete_calculus Bot Inf entails Red_I Red_F \\<longleftrightarrow>\n   dynamically_complete_calculus Bot Inf entails Red_Red_I Red_F\"", "theorem red_dyn_ref_red_eq_dyn_ref_red:\n  \"reducedly_dynamically_complete_calculus Bot Inf entails Red_Red_I Red_F \\<longleftrightarrow>\n   dynamically_complete_calculus Bot Inf entails Red_Red_I Red_F\"", "theorem red_dyn_ref_eq_dyn_ref_red:\n  \"reducedly_dynamically_complete_calculus Bot Inf entails Red_I Red_F \\<longleftrightarrow>\n   dynamically_complete_calculus Bot Inf entails Red_Red_I Red_F\""], "translations": [["", "lemma sat_eq_reduc_sat: \"saturated N \\<longleftrightarrow> reduc_saturated N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. saturated N = reduc_saturated N", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. saturated N \\<Longrightarrow> reduc_saturated N\n 2. reduc_saturated N \\<Longrightarrow> saturated N", "fix N"], ["proof (state)\ngoal (2 subgoals):\n 1. saturated N \\<Longrightarrow> reduc_saturated N\n 2. reduc_saturated N \\<Longrightarrow> saturated N", "assume \"saturated N\""], ["proof (state)\nthis:\n  saturated N\n\ngoal (2 subgoals):\n 1. saturated N \\<Longrightarrow> reduc_saturated N\n 2. reduc_saturated N \\<Longrightarrow> saturated N", "then"], ["proof (chain)\npicking this:\n  saturated N", "show \"reduc_saturated N\""], ["proof (prove)\nusing this:\n  saturated N\n\ngoal (1 subgoal):\n 1. reduc_saturated N", "using Red_I_without_red_F saturated_without_red_F"], ["proof (prove)\nusing this:\n  saturated N\n  Red_I (?N - Red_F ?N) = Red_I ?N\n  saturated ?N \\<Longrightarrow> saturated (?N - Red_F ?N)\n\ngoal (1 subgoal):\n 1. reduc_saturated N", "unfolding saturated_def reduc_saturated_def"], ["proof (prove)\nusing this:\n  Inf_from N \\<subseteq> Red_I N\n  Red_I (?N - Red_F ?N) = Red_I ?N\n  Inf_from ?N \\<subseteq> Red_I ?N \\<Longrightarrow>\n  Inf_from (?N - Red_F ?N) \\<subseteq> Red_I (?N - Red_F ?N)\n\ngoal (1 subgoal):\n 1. Inf_from (N - Red_F N) \\<subseteq> Red_I N", "by blast"], ["proof (state)\nthis:\n  reduc_saturated N\n\ngoal (1 subgoal):\n 1. reduc_saturated N \\<Longrightarrow> saturated N", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. reduc_saturated N \\<Longrightarrow> saturated N", "fix N"], ["proof (state)\ngoal (1 subgoal):\n 1. reduc_saturated N \\<Longrightarrow> saturated N", "assume red_sat_n: \"reduc_saturated N\""], ["proof (state)\nthis:\n  reduc_saturated N\n\ngoal (1 subgoal):\n 1. reduc_saturated N \\<Longrightarrow> saturated N", "show \"saturated N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. saturated N", "unfolding saturated_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from N \\<subseteq> Red_I N", "using red_sat_n inf_in_red_inf"], ["proof (prove)\nusing this:\n  reduc_saturated N\n  Inf_between UNIV (Red_F ?N) \\<subseteq> Red_I ?N\n\ngoal (1 subgoal):\n 1. Inf_from N \\<subseteq> Red_I N", "unfolding reduc_saturated_def Inf_from_def Inf_between_def"], ["proof (prove)\nusing this:\n  {\\<iota> \\<in> Inf. set (prems_of \\<iota>) \\<subseteq> N - Red_F N}\n  \\<subseteq> Red_I N\n  {\\<iota> \\<in> Inf.\n   set (prems_of \\<iota>) \\<subseteq> UNIV \\<union> Red_F ?N} -\n  {\\<iota> \\<in> Inf. set (prems_of \\<iota>) \\<subseteq> UNIV - Red_F ?N}\n  \\<subseteq> Red_I ?N\n\ngoal (1 subgoal):\n 1. {\\<iota> \\<in> Inf. set (prems_of \\<iota>) \\<subseteq> N}\n    \\<subseteq> Red_I N", "by blast"], ["proof (state)\nthis:\n  saturated N\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "locale reducedly_statically_complete_calculus = calculus +\n  assumes reducedly_statically_complete:\n    \"B \\<in> Bot \\<Longrightarrow> reduc_saturated N \\<Longrightarrow> N \\<Turnstile> {B} \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N\""], ["", "locale reducedly_statically_complete_reduced_calculus = reduced_calculus +\n  assumes reducedly_statically_complete:\n    \"B \\<in> Bot \\<Longrightarrow> reduc_saturated N \\<Longrightarrow> N \\<Turnstile> {B} \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N\"\nbegin"], ["", "sublocale reducedly_statically_complete_calculus"], ["proof (prove)\ngoal (1 subgoal):\n 1. reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F", "by (simp add: calculus_axioms reducedly_statically_complete\n    reducedly_statically_complete_calculus_axioms.intro\n    reducedly_statically_complete_calculus_def)"], ["", "(* cor:reduced-rc-implies-st-ref-comp-equiv-reduced-st-ref-comp 1/2 *)"], ["", "sublocale statically_complete_calculus"], ["proof (prove)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "fix B N"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "assume\n    bot_elem: \\<open>B \\<in> Bot\\<close> and\n    saturated_N: \"saturated N\" and\n    refut_N: \"N \\<Turnstile> {B}\""], ["proof (state)\nthis:\n  B \\<in> Bot\n  saturated N\n  N \\<Turnstile> {B}\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "have reduc_saturated_N: \"reduc_saturated N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reduc_saturated N", "using saturated_N sat_eq_reduc_sat"], ["proof (prove)\nusing this:\n  saturated N\n  saturated ?N = reduc_saturated ?N\n\ngoal (1 subgoal):\n 1. reduc_saturated N", "by blast"], ["proof (state)\nthis:\n  reduc_saturated N\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "show \"\\<exists>B'\\<in>Bot. B' \\<in> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B'\\<in>Bot. B' \\<in> N", "using reducedly_statically_complete[OF bot_elem reduc_saturated_N refut_N]"], ["proof (prove)\nusing this:\n  \\<exists>B'\\<in>Bot. B' \\<in> N\n\ngoal (1 subgoal):\n 1. \\<exists>B'\\<in>Bot. B' \\<in> N", "."], ["proof (state)\nthis:\n  \\<exists>B'\\<in>Bot. B' \\<in> N\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context reduced_calculus\nbegin"], ["", "(* cor:reduced-rc-implies-st-ref-comp-equiv-reduced-st-ref-comp 2/2 *)"], ["", "lemma stat_ref_comp_imp_red_stat_ref_comp:\n  \"statically_complete_calculus Bot Inf entails Red_I Red_F \\<Longrightarrow>\n   reducedly_statically_complete_calculus Bot Inf entails Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n                 Red_F;\n        B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "fix B N"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n                 Red_F;\n        B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "assume\n    stat_ref_comp: \"statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\" and\n    bot_elem: \\<open>B \\<in> Bot\\<close> and\n    saturated_N: \"reduc_saturated N\" and\n    refut_N: \"N \\<Turnstile> {B}\""], ["proof (state)\nthis:\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n  B \\<in> Bot\n  reduc_saturated N\n  N \\<Turnstile> {B}\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n                 Red_F;\n        B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "have reduc_saturated_N: \"saturated N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. saturated N", "using saturated_N sat_eq_reduc_sat"], ["proof (prove)\nusing this:\n  reduc_saturated N\n  saturated ?N = reduc_saturated ?N\n\ngoal (1 subgoal):\n 1. saturated N", "by blast"], ["proof (state)\nthis:\n  saturated N\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n                 Red_F;\n        B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "show \"\\<exists>B'\\<in>Bot. B' \\<in> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B'\\<in>Bot. B' \\<in> N", "using statically_complete_calculus.statically_complete[OF stat_ref_comp\n      bot_elem reduc_saturated_N refut_N]"], ["proof (prove)\nusing this:\n  \\<exists>B'\\<in>Bot. B' \\<in> N\n\ngoal (1 subgoal):\n 1. \\<exists>B'\\<in>Bot. B' \\<in> N", "."], ["proof (state)\nthis:\n  \\<exists>B'\\<in>Bot. B' \\<in> N\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context calculus\nbegin"], ["", "definition Red_Red_I :: \"'f set \\<Rightarrow> 'f inference set\" where\n  \"Red_Red_I N = Red_I N \\<union> Inf_between UNIV (Red_F N)\""], ["", "lemma reduced_calc_is_calc: \"calculus Bot Inf entails Red_Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "proof"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>N. Red_Red_I N \\<subseteq> Inf\n 2. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> N - Red_F N \\<Turnstile> {B}\n 3. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow> Red_F N \\<subseteq> Red_F N'\n 4. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I N'\n 5. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 6. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 7. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "fix N"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>N. Red_Red_I N \\<subseteq> Inf\n 2. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> N - Red_F N \\<Turnstile> {B}\n 3. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow> Red_F N \\<subseteq> Red_F N'\n 4. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I N'\n 5. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 6. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 7. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "show \"Red_Red_I N \\<subseteq> Inf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_Red_I N \\<subseteq> Inf", "unfolding Red_Red_I_def Inf_between_def Inf_from_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_I N \\<union>\n    ({\\<iota> \\<in> Inf.\n      set (prems_of \\<iota>) \\<subseteq> UNIV \\<union> Red_F N} -\n     {\\<iota> \\<in> Inf. set (prems_of \\<iota>) \\<subseteq> UNIV - Red_F N})\n    \\<subseteq> Inf", "using Red_I_to_Inf"], ["proof (prove)\nusing this:\n  Red_I ?N \\<subseteq> Inf\n\ngoal (1 subgoal):\n 1. Red_I N \\<union>\n    ({\\<iota> \\<in> Inf.\n      set (prems_of \\<iota>) \\<subseteq> UNIV \\<union> Red_F N} -\n     {\\<iota> \\<in> Inf. set (prems_of \\<iota>) \\<subseteq> UNIV - Red_F N})\n    \\<subseteq> Inf", "by auto"], ["proof (state)\nthis:\n  Red_Red_I N \\<subseteq> Inf\n\ngoal (6 subgoals):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> N - Red_F N \\<Turnstile> {B}\n 2. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow> Red_F N \\<subseteq> Red_F N'\n 3. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I N'\n 4. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 5. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 6. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> N - Red_F N \\<Turnstile> {B}\n 2. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow> Red_F N \\<subseteq> Red_F N'\n 3. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I N'\n 4. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 5. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 6. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "fix B N"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> N - Red_F N \\<Turnstile> {B}\n 2. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow> Red_F N \\<subseteq> Red_F N'\n 3. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I N'\n 4. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 5. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 6. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "assume\n    b_in: \"B \\<in> Bot\" and\n    n_entails: \"N \\<Turnstile> {B}\""], ["proof (state)\nthis:\n  B \\<in> Bot\n  N \\<Turnstile> {B}\n\ngoal (6 subgoals):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> N - Red_F N \\<Turnstile> {B}\n 2. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow> Red_F N \\<subseteq> Red_F N'\n 3. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I N'\n 4. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 5. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 6. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "show \"N - Red_F N \\<Turnstile> {B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N - Red_F N \\<Turnstile> {B}", "by (simp add: Red_F_Bot b_in n_entails)"], ["proof (state)\nthis:\n  N - Red_F N \\<Turnstile> {B}\n\ngoal (5 subgoals):\n 1. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow> Red_F N \\<subseteq> Red_F N'\n 2. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I N'\n 3. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 4. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 5. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow> Red_F N \\<subseteq> Red_F N'\n 2. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I N'\n 3. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 4. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 5. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "fix N N' :: \"'f set\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow> Red_F N \\<subseteq> Red_F N'\n 2. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I N'\n 3. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 4. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 5. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "assume \"N \\<subseteq> N'\""], ["proof (state)\nthis:\n  N \\<subseteq> N'\n\ngoal (5 subgoals):\n 1. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow> Red_F N \\<subseteq> Red_F N'\n 2. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I N'\n 3. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 4. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 5. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "then"], ["proof (chain)\npicking this:\n  N \\<subseteq> N'", "show \"Red_F N \\<subseteq> Red_F N'\""], ["proof (prove)\nusing this:\n  N \\<subseteq> N'\n\ngoal (1 subgoal):\n 1. Red_F N \\<subseteq> Red_F N'", "by (simp add: Red_F_of_subset)"], ["proof (state)\nthis:\n  Red_F N \\<subseteq> Red_F N'\n\ngoal (4 subgoals):\n 1. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I N'\n 2. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 3. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 4. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I N'\n 2. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 3. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 4. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "fix N N' :: \"'f set\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I N'\n 2. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 3. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 4. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "assume n_in: \"N \\<subseteq> N'\""], ["proof (state)\nthis:\n  N \\<subseteq> N'\n\ngoal (4 subgoals):\n 1. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I N'\n 2. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 3. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 4. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "then"], ["proof (chain)\npicking this:\n  N \\<subseteq> N'", "have \"Inf_from (UNIV - (Red_F N')) \\<subseteq> Inf_from (UNIV - (Red_F N))\""], ["proof (prove)\nusing this:\n  N \\<subseteq> N'\n\ngoal (1 subgoal):\n 1. Inf_from (UNIV - Red_F N') \\<subseteq> Inf_from (UNIV - Red_F N)", "using Red_F_of_subset[OF n_in]"], ["proof (prove)\nusing this:\n  N \\<subseteq> N'\n  Red_F N \\<subseteq> Red_F N'\n\ngoal (1 subgoal):\n 1. Inf_from (UNIV - Red_F N') \\<subseteq> Inf_from (UNIV - Red_F N)", "unfolding Inf_from_def"], ["proof (prove)\nusing this:\n  N \\<subseteq> N'\n  Red_F N \\<subseteq> Red_F N'\n\ngoal (1 subgoal):\n 1. {\\<iota> \\<in> Inf. set (prems_of \\<iota>) \\<subseteq> UNIV - Red_F N'}\n    \\<subseteq> {\\<iota> \\<in> Inf.\n                 set (prems_of \\<iota>) \\<subseteq> UNIV - Red_F N}", "by auto"], ["proof (state)\nthis:\n  Inf_from (UNIV - Red_F N') \\<subseteq> Inf_from (UNIV - Red_F N)\n\ngoal (4 subgoals):\n 1. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I N'\n 2. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 3. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 4. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "then"], ["proof (chain)\npicking this:\n  Inf_from (UNIV - Red_F N') \\<subseteq> Inf_from (UNIV - Red_F N)", "have \"Inf_between UNIV (Red_F N) \\<subseteq> Inf_between UNIV (Red_F N')\""], ["proof (prove)\nusing this:\n  Inf_from (UNIV - Red_F N') \\<subseteq> Inf_from (UNIV - Red_F N)\n\ngoal (1 subgoal):\n 1. Inf_between UNIV (Red_F N) \\<subseteq> Inf_between UNIV (Red_F N')", "unfolding Inf_between_def"], ["proof (prove)\nusing this:\n  Inf_from (UNIV - Red_F N') \\<subseteq> Inf_from (UNIV - Red_F N)\n\ngoal (1 subgoal):\n 1. Inf_from (UNIV \\<union> Red_F N) - Inf_from (UNIV - Red_F N)\n    \\<subseteq> Inf_from (UNIV \\<union> Red_F N') -\n                Inf_from (UNIV - Red_F N')", "by auto"], ["proof (state)\nthis:\n  Inf_between UNIV (Red_F N) \\<subseteq> Inf_between UNIV (Red_F N')\n\ngoal (4 subgoals):\n 1. \\<And>N N'.\n       N \\<subseteq> N' \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I N'\n 2. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 3. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 4. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "then"], ["proof (chain)\npicking this:\n  Inf_between UNIV (Red_F N) \\<subseteq> Inf_between UNIV (Red_F N')", "show \"Red_Red_I N \\<subseteq> Red_Red_I N'\""], ["proof (prove)\nusing this:\n  Inf_between UNIV (Red_F N) \\<subseteq> Inf_between UNIV (Red_F N')\n\ngoal (1 subgoal):\n 1. Red_Red_I N \\<subseteq> Red_Red_I N'", "unfolding Red_Red_I_def"], ["proof (prove)\nusing this:\n  Inf_between UNIV (Red_F N) \\<subseteq> Inf_between UNIV (Red_F N')\n\ngoal (1 subgoal):\n 1. Red_I N \\<union> Inf_between UNIV (Red_F N)\n    \\<subseteq> Red_I N' \\<union> Inf_between UNIV (Red_F N')", "using Red_I_of_subset[OF n_in]"], ["proof (prove)\nusing this:\n  Inf_between UNIV (Red_F N) \\<subseteq> Inf_between UNIV (Red_F N')\n  Red_I N \\<subseteq> Red_I N'\n\ngoal (1 subgoal):\n 1. Red_I N \\<union> Inf_between UNIV (Red_F N)\n    \\<subseteq> Red_I N' \\<union> Inf_between UNIV (Red_F N')", "by blast"], ["proof (state)\nthis:\n  Red_Red_I N \\<subseteq> Red_Red_I N'\n\ngoal (3 subgoals):\n 1. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 2. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 3. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 2. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 3. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "fix N N' :: \"'f set\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 2. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 3. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "assume \"N' \\<subseteq> Red_F N\""], ["proof (state)\nthis:\n  N' \\<subseteq> Red_F N\n\ngoal (3 subgoals):\n 1. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_F N \\<subseteq> Red_F (N - N')\n 2. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 3. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "then"], ["proof (chain)\npicking this:\n  N' \\<subseteq> Red_F N", "show \"Red_F N \\<subseteq> Red_F (N - N')\""], ["proof (prove)\nusing this:\n  N' \\<subseteq> Red_F N\n\ngoal (1 subgoal):\n 1. Red_F N \\<subseteq> Red_F (N - N')", "by (simp add: Red_F_of_Red_F_subset)"], ["proof (state)\nthis:\n  Red_F N \\<subseteq> Red_F (N - N')\n\ngoal (2 subgoals):\n 1. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 2. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 2. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "fix N N' :: \"'f set\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 2. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "assume np_subs: \"N' \\<subseteq> Red_F N\""], ["proof (state)\nthis:\n  N' \\<subseteq> Red_F N\n\ngoal (2 subgoals):\n 1. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 2. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "have \"Red_F N \\<subseteq> Red_F (N - N')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_F N \\<subseteq> Red_F (N - N')", "by (simp add: Red_F_of_Red_F_subset np_subs)"], ["proof (state)\nthis:\n  Red_F N \\<subseteq> Red_F (N - N')\n\ngoal (2 subgoals):\n 1. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 2. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "then"], ["proof (chain)\npicking this:\n  Red_F N \\<subseteq> Red_F (N - N')", "have \"Inf_from (UNIV - (Red_F (N - N'))) \\<subseteq> Inf_from (UNIV - (Red_F N))\""], ["proof (prove)\nusing this:\n  Red_F N \\<subseteq> Red_F (N - N')\n\ngoal (1 subgoal):\n 1. Inf_from (UNIV - Red_F (N - N')) \\<subseteq> Inf_from (UNIV - Red_F N)", "by (metis Diff_subset Red_F_of_subset eq_iff)"], ["proof (state)\nthis:\n  Inf_from (UNIV - Red_F (N - N')) \\<subseteq> Inf_from (UNIV - Red_F N)\n\ngoal (2 subgoals):\n 1. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 2. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "then"], ["proof (chain)\npicking this:\n  Inf_from (UNIV - Red_F (N - N')) \\<subseteq> Inf_from (UNIV - Red_F N)", "have \"Inf_between UNIV (Red_F N) \\<subseteq> Inf_between UNIV (Red_F (N - N'))\""], ["proof (prove)\nusing this:\n  Inf_from (UNIV - Red_F (N - N')) \\<subseteq> Inf_from (UNIV - Red_F N)\n\ngoal (1 subgoal):\n 1. Inf_between UNIV (Red_F N) \\<subseteq> Inf_between UNIV (Red_F (N - N'))", "unfolding Inf_between_def"], ["proof (prove)\nusing this:\n  Inf_from (UNIV - Red_F (N - N')) \\<subseteq> Inf_from (UNIV - Red_F N)\n\ngoal (1 subgoal):\n 1. Inf_from (UNIV \\<union> Red_F N) - Inf_from (UNIV - Red_F N)\n    \\<subseteq> Inf_from (UNIV \\<union> Red_F (N - N')) -\n                Inf_from (UNIV - Red_F (N - N'))", "by auto"], ["proof (state)\nthis:\n  Inf_between UNIV (Red_F N) \\<subseteq> Inf_between UNIV (Red_F (N - N'))\n\ngoal (2 subgoals):\n 1. \\<And>N' N.\n       N' \\<subseteq> Red_F N \\<Longrightarrow>\n       Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n 2. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "then"], ["proof (chain)\npicking this:\n  Inf_between UNIV (Red_F N) \\<subseteq> Inf_between UNIV (Red_F (N - N'))", "show \"Red_Red_I N \\<subseteq> Red_Red_I (N - N')\""], ["proof (prove)\nusing this:\n  Inf_between UNIV (Red_F N) \\<subseteq> Inf_between UNIV (Red_F (N - N'))\n\ngoal (1 subgoal):\n 1. Red_Red_I N \\<subseteq> Red_Red_I (N - N')", "unfolding Red_Red_I_def"], ["proof (prove)\nusing this:\n  Inf_between UNIV (Red_F N) \\<subseteq> Inf_between UNIV (Red_F (N - N'))\n\ngoal (1 subgoal):\n 1. Red_I N \\<union> Inf_between UNIV (Red_F N)\n    \\<subseteq> Red_I (N - N') \\<union> Inf_between UNIV (Red_F (N - N'))", "using Red_I_of_Red_F_subset[OF np_subs]"], ["proof (prove)\nusing this:\n  Inf_between UNIV (Red_F N) \\<subseteq> Inf_between UNIV (Red_F (N - N'))\n  Red_I N \\<subseteq> Red_I (N - N')\n\ngoal (1 subgoal):\n 1. Red_I N \\<union> Inf_between UNIV (Red_F N)\n    \\<subseteq> Red_I (N - N') \\<union> Inf_between UNIV (Red_F (N - N'))", "by blast"], ["proof (state)\nthis:\n  Red_Red_I N \\<subseteq> Red_Red_I (N - N')\n\ngoal (1 subgoal):\n 1. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "fix \\<iota> N"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "assume \"\\<iota> \\<in> Inf\"\n    \"concl_of \\<iota> \\<in> N\""], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf\n  concl_of \\<iota> \\<in> N\n\ngoal (1 subgoal):\n 1. \\<And>\\<iota> N.\n       \\<lbrakk>\\<iota> \\<in> Inf; concl_of \\<iota> \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<iota> \\<in> Red_Red_I N", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Inf\n  concl_of \\<iota> \\<in> N", "show \"\\<iota> \\<in> Red_Red_I N\""], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf\n  concl_of \\<iota> \\<in> N\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_Red_I N", "by (simp add: Red_I_of_Inf_to_N Red_Red_I_def)"], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_Red_I N\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inf_subs_reduced_red_inf: \"Inf_between UNIV (Red_F N) \\<subseteq> Red_Red_I N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_between UNIV (Red_F N) \\<subseteq> Red_Red_I N", "unfolding Red_Red_I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_between UNIV (Red_F N)\n    \\<subseteq> Red_I N \\<union> Inf_between UNIV (Red_F N)", "by simp"], ["", "(* lem:red'-is-reduced-redcrit *)"], ["", "text \\<open>The following is a lemma and not a sublocale as was previously used in similar cases.\n  Here, a sublocale cannot be used because it would create an infinitely descending\n  chain of sublocales. \\<close>"], ["", "lemma reduc_calc: \"reduced_calculus Bot Inf entails Red_Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reduced_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "using inf_subs_reduced_red_inf reduced_calc_is_calc"], ["proof (prove)\nusing this:\n  Inf_between UNIV (Red_F ?N) \\<subseteq> Red_Red_I ?N\n  calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F\n\ngoal (1 subgoal):\n 1. reduced_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "by (simp add: reduced_calculus.intro reduced_calculus_axioms_def)"], ["", "interpretation reduc_calc: reduced_calculus Bot Inf entails Red_Red_I Red_F"], ["proof (prove)\ngoal (1 subgoal):\n 1. reduced_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "by (fact reduc_calc)"], ["", "(* lem:saturation-red-vs-red'-1 *)"], ["", "lemma sat_imp_red_calc_sat: \"saturated N \\<Longrightarrow> reduc_calc.saturated N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. saturated N \\<Longrightarrow> reduc_calc.saturated N", "unfolding saturated_def reduc_calc.saturated_def Red_Red_I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from N \\<subseteq> Red_I N \\<Longrightarrow>\n    Inf_from N \\<subseteq> Red_I N \\<union> Inf_between UNIV (Red_F N)", "by blast"], ["", "(* lem:saturation-red-vs-red'-2 1/2 (i) \\<longleftrightarrow> (ii) *)"], ["", "lemma red_sat_eq_red_calc_sat: \"reduc_saturated N \\<longleftrightarrow> reduc_calc.saturated N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reduc_saturated N = reduc_calc.saturated N", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. reduc_saturated N \\<Longrightarrow> reduc_calc.saturated N\n 2. reduc_calc.saturated N \\<Longrightarrow> reduc_saturated N", "assume red_sat_n: \"reduc_saturated N\""], ["proof (state)\nthis:\n  reduc_saturated N\n\ngoal (2 subgoals):\n 1. reduc_saturated N \\<Longrightarrow> reduc_calc.saturated N\n 2. reduc_calc.saturated N \\<Longrightarrow> reduc_saturated N", "show \"reduc_calc.saturated N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reduc_calc.saturated N", "unfolding reduc_calc.saturated_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from N \\<subseteq> Red_Red_I N", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Inf_from N \\<Longrightarrow> x \\<in> Red_Red_I N", "fix \\<iota>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Inf_from N \\<Longrightarrow> x \\<in> Red_Red_I N", "assume i_in: \"\\<iota> \\<in> Inf_from N\""], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from N\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Inf_from N \\<Longrightarrow> x \\<in> Red_Red_I N", "show \"\\<iota> \\<in> Red_Red_I N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_Red_I N", "using i_in red_sat_n"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from N\n  reduc_saturated N\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_Red_I N", "unfolding reduc_saturated_def Inf_between_def Inf_from_def Red_Red_I_def"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> {\\<iota> \\<in> Inf. set (prems_of \\<iota>) \\<subseteq> N}\n  {\\<iota> \\<in> Inf. set (prems_of \\<iota>) \\<subseteq> N - Red_F N}\n  \\<subseteq> Red_I N\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> Red_I N \\<union>\n          ({\\<iota> \\<in> Inf.\n            set (prems_of \\<iota>) \\<subseteq> UNIV \\<union> Red_F N} -\n           {\\<iota> \\<in> Inf.\n            set (prems_of \\<iota>) \\<subseteq> UNIV - Red_F N})", "by blast"], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_Red_I N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  reduc_calc.saturated N\n\ngoal (1 subgoal):\n 1. reduc_calc.saturated N \\<Longrightarrow> reduc_saturated N", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. reduc_calc.saturated N \\<Longrightarrow> reduc_saturated N", "assume red_sat_n: \"reduc_calc.saturated N\""], ["proof (state)\nthis:\n  reduc_calc.saturated N\n\ngoal (1 subgoal):\n 1. reduc_calc.saturated N \\<Longrightarrow> reduc_saturated N", "show \"reduc_saturated N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reduc_saturated N", "unfolding reduc_saturated_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (N - Red_F N) \\<subseteq> Red_I N", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (N - Red_F N) \\<Longrightarrow> x \\<in> Red_I N", "fix \\<iota>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (N - Red_F N) \\<Longrightarrow> x \\<in> Red_I N", "assume i_in: \"\\<iota> \\<in> Inf_from (N - Red_F N)\""], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from (N - Red_F N)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (N - Red_F N) \\<Longrightarrow> x \\<in> Red_I N", "show \"\\<iota> \\<in> Red_I N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I N", "using i_in red_sat_n"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (N - Red_F N)\n  reduc_calc.saturated N\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I N", "unfolding Inf_from_def reduc_calc.saturated_def Red_Red_I_def Inf_between_def"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf. set (prems_of \\<iota>) \\<subseteq> N - Red_F N}\n  {\\<iota> \\<in> Inf. set (prems_of \\<iota>) \\<subseteq> N}\n  \\<subseteq> Red_I N \\<union>\n              ({\\<iota> \\<in> Inf.\n                set (prems_of \\<iota>) \\<subseteq> UNIV \\<union> Red_F N} -\n               {\\<iota> \\<in> Inf.\n                set (prems_of \\<iota>) \\<subseteq> UNIV - Red_F N})\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I N", "by blast"], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_I N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  reduc_saturated N\n\ngoal:\nNo subgoals!", "qed"], ["", "(* lem:saturation-red-vs-red'-2 2/2 (i) \\<longleftrightarrow> (iii) *)"], ["", "lemma red_sat_eq_sat: \"reduc_saturated N \\<longleftrightarrow> saturated (N - Red_F N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reduc_saturated N = saturated (N - Red_F N)", "unfolding reduc_saturated_def saturated_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Inf_from (N - Red_F N) \\<subseteq> Red_I N) =\n    (Inf_from (N - Red_F N) \\<subseteq> Red_I (N - Red_F N))", "by (simp add: Red_I_without_red_F)"], ["", "(* thm:reduced-stat-ref-compl 1/3 (i) \\<longleftrightarrow> (iii) *)"], ["", "theorem stat_is_stat_red: \"statically_complete_calculus Bot Inf entails Red_I Red_F \\<longleftrightarrow>\n  statically_complete_calculus Bot Inf entails Red_Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F =\n    statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F\n 2. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I\n     Red_F \\<Longrightarrow>\n    statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "assume\n    stat_ref1: \"statically_complete_calculus Bot Inf entails Red_I Red_F\""], ["proof (state)\nthis:\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n\ngoal (2 subgoals):\n 1. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F\n 2. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I\n     Red_F \\<Longrightarrow>\n    statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "show \"statically_complete_calculus Bot Inf entails Red_Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "using reduc_calc.calculus_axioms"], ["proof (prove)\nusing this:\n  calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F\n\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "unfolding statically_complete_calculus_def statically_complete_calculus_axioms_def"], ["proof (prove)\nusing this:\n  calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F\n\ngoal (1 subgoal):\n 1. calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F \\<and>\n    (\\<forall>B N.\n        B \\<in> Bot \\<longrightarrow>\n        reduc_calc.saturated N \\<longrightarrow>\n        N \\<Turnstile> {B} \\<longrightarrow>\n        (\\<exists>B'\\<in>Bot. B' \\<in> N))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>B N.\n       B \\<in> Bot \\<longrightarrow>\n       reduc_calc.saturated N \\<longrightarrow>\n       N \\<Turnstile> {B} \\<longrightarrow>\n       (\\<exists>B'\\<in>Bot. B' \\<in> N)", "show \"\\<forall>B N. B \\<in> Bot \\<longrightarrow> reduc_calc.saturated N \\<longrightarrow> N \\<Turnstile> {B} \\<longrightarrow> (\\<exists>B'\\<in>Bot. B' \\<in> N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>B N.\n       B \\<in> Bot \\<longrightarrow>\n       reduc_calc.saturated N \\<longrightarrow>\n       N \\<Turnstile> {B} \\<longrightarrow>\n       (\\<exists>B'\\<in>Bot. B' \\<in> N)", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_calc.saturated N;\n        N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "fix B N"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_calc.saturated N;\n        N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "assume\n        b_in: \"B \\<in> Bot\" and\n        n_sat: \"reduc_calc.saturated N\" and\n        n_imp_b: \"N \\<Turnstile> {B}\""], ["proof (state)\nthis:\n  B \\<in> Bot\n  reduc_calc.saturated N\n  N \\<Turnstile> {B}\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_calc.saturated N;\n        N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "have \"saturated (N - Red_F N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. saturated (N - Red_F N)", "using red_sat_eq_red_calc_sat[of N] red_sat_eq_sat[of N] n_sat"], ["proof (prove)\nusing this:\n  reduc_saturated N = reduc_calc.saturated N\n  reduc_saturated N = saturated (N - Red_F N)\n  reduc_calc.saturated N\n\ngoal (1 subgoal):\n 1. saturated (N - Red_F N)", "by blast"], ["proof (state)\nthis:\n  saturated (N - Red_F N)\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_calc.saturated N;\n        N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "moreover"], ["proof (state)\nthis:\n  saturated (N - Red_F N)\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_calc.saturated N;\n        N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "have \"(N - Red_F N) \\<Turnstile> {B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N - Red_F N \\<Turnstile> {B}", "using n_imp_b b_in"], ["proof (prove)\nusing this:\n  N \\<Turnstile> {B}\n  B \\<in> Bot\n\ngoal (1 subgoal):\n 1. N - Red_F N \\<Turnstile> {B}", "by (simp add: reduc_calc.Red_F_Bot)"], ["proof (state)\nthis:\n  N - Red_F N \\<Turnstile> {B}\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_calc.saturated N;\n        N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "ultimately"], ["proof (chain)\npicking this:\n  saturated (N - Red_F N)\n  N - Red_F N \\<Turnstile> {B}", "show \"\\<exists>B'\\<in>Bot. B'\\<in> N\""], ["proof (prove)\nusing this:\n  saturated (N - Red_F N)\n  N - Red_F N \\<Turnstile> {B}\n\ngoal (1 subgoal):\n 1. \\<exists>B'\\<in>Bot. B' \\<in> N", "using stat_ref1"], ["proof (prove)\nusing this:\n  saturated (N - Red_F N)\n  N - Red_F N \\<Turnstile> {B}\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n\ngoal (1 subgoal):\n 1. \\<exists>B'\\<in>Bot. B' \\<in> N", "by (meson DiffD1 b_in statically_complete_calculus.statically_complete)"], ["proof (state)\nthis:\n  \\<exists>B'\\<in>Bot. B' \\<in> N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>B N.\n     B \\<in> Bot \\<longrightarrow>\n     reduc_calc.saturated N \\<longrightarrow>\n     N \\<Turnstile> {B} \\<longrightarrow> (\\<exists>B'\\<in>Bot. B' \\<in> N)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F\n\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I\n     Red_F \\<Longrightarrow>\n    statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I\n     Red_F \\<Longrightarrow>\n    statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "assume\n    stat_ref3: \"statically_complete_calculus Bot Inf entails Red_Red_I Red_F\""], ["proof (state)\nthis:\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F\n\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I\n     Red_F \\<Longrightarrow>\n    statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "show \"statically_complete_calculus Bot Inf entails Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "unfolding statically_complete_calculus_def statically_complete_calculus_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. calculus Bot Inf (\\<Turnstile>) Red_I Red_F \\<and>\n    (\\<forall>B N.\n        B \\<in> Bot \\<longrightarrow>\n        saturated N \\<longrightarrow>\n        N \\<Turnstile> {B} \\<longrightarrow>\n        (\\<exists>B'\\<in>Bot. B' \\<in> N))", "using calculus_axioms"], ["proof (prove)\nusing this:\n  calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n\ngoal (1 subgoal):\n 1. calculus Bot Inf (\\<Turnstile>) Red_I Red_F \\<and>\n    (\\<forall>B N.\n        B \\<in> Bot \\<longrightarrow>\n        saturated N \\<longrightarrow>\n        N \\<Turnstile> {B} \\<longrightarrow>\n        (\\<exists>B'\\<in>Bot. B' \\<in> N))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>B N.\n       B \\<in> Bot \\<longrightarrow>\n       saturated N \\<longrightarrow>\n       N \\<Turnstile> {B} \\<longrightarrow>\n       (\\<exists>B'\\<in>Bot. B' \\<in> N)", "show \"\\<forall>B N. B \\<in> Bot \\<longrightarrow> saturated N \\<longrightarrow> N \\<Turnstile> {B} \\<longrightarrow> (\\<exists>B'\\<in>Bot. B' \\<in> N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>B N.\n       B \\<in> Bot \\<longrightarrow>\n       saturated N \\<longrightarrow>\n       N \\<Turnstile> {B} \\<longrightarrow>\n       (\\<exists>B'\\<in>Bot. B' \\<in> N)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "fix B N"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "assume\n        b_in: \"B \\<in> Bot\" and\n        n_sat: \"saturated N\" and\n        n_imp_b: \"N \\<Turnstile> {B}\""], ["proof (state)\nthis:\n  B \\<in> Bot\n  saturated N\n  N \\<Turnstile> {B}\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "then"], ["proof (chain)\npicking this:\n  B \\<in> Bot\n  saturated N\n  N \\<Turnstile> {B}", "show \"\\<exists>B'\\<in> Bot. B' \\<in> N\""], ["proof (prove)\nusing this:\n  B \\<in> Bot\n  saturated N\n  N \\<Turnstile> {B}\n\ngoal (1 subgoal):\n 1. \\<exists>B'\\<in>Bot. B' \\<in> N", "using stat_ref3 sat_imp_red_calc_sat[OF n_sat]"], ["proof (prove)\nusing this:\n  B \\<in> Bot\n  saturated N\n  N \\<Turnstile> {B}\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F\n  reduc_calc.saturated N\n\ngoal (1 subgoal):\n 1. \\<exists>B'\\<in>Bot. B' \\<in> N", "by (meson statically_complete_calculus.statically_complete)"], ["proof (state)\nthis:\n  \\<exists>B'\\<in>Bot. B' \\<in> N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>B N.\n     B \\<in> Bot \\<longrightarrow>\n     saturated N \\<longrightarrow>\n     N \\<Turnstile> {B} \\<longrightarrow> (\\<exists>B'\\<in>Bot. B' \\<in> N)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n\ngoal:\nNo subgoals!", "qed"], ["", "(* thm:reduced-stat-ref-compl 2/3 (iv) \\<longleftrightarrow> (iii) *)"], ["", "theorem red_stat_red_is_stat_red:\n  \"reducedly_statically_complete_calculus Bot Inf entails Red_Red_I Red_F \\<longleftrightarrow>\n   statically_complete_calculus Bot Inf entails Red_Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I\n     Red_F =\n    statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "using reduc_calc.stat_ref_comp_imp_red_stat_ref_comp"], ["proof (prove)\nusing this:\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I\n   Red_F \\<Longrightarrow>\n  reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I\n   Red_F\n\ngoal (1 subgoal):\n 1. reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I\n     Red_F =\n    statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "by (metis reduc_calc.sat_eq_reduc_sat reducedly_statically_complete_calculus.axioms(2)\n    reducedly_statically_complete_calculus_axioms_def reduced_calc_is_calc\n    statically_complete_calculus.intro statically_complete_calculus_axioms.intro)"], ["", "(* thm:reduced-stat-ref-compl 3/3 (ii) \\<longleftrightarrow> (iii) *)"], ["", "theorem red_stat_is_stat_red:\n  \"reducedly_statically_complete_calculus Bot Inf entails Red_I Red_F \\<longleftrightarrow>\n   statically_complete_calculus Bot Inf entails Red_Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F =\n    statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "using reduc_calc.calculus_axioms calculus_axioms red_sat_eq_red_calc_sat"], ["proof (prove)\nusing this:\n  calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F\n  calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n  reduc_saturated ?N = reduc_calc.saturated ?N\n\ngoal (1 subgoal):\n 1. reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F =\n    statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "unfolding statically_complete_calculus_def statically_complete_calculus_axioms_def\n    reducedly_statically_complete_calculus_def reducedly_statically_complete_calculus_axioms_def"], ["proof (prove)\nusing this:\n  calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F\n  calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n  reduc_saturated ?N = reduc_calc.saturated ?N\n\ngoal (1 subgoal):\n 1. (calculus Bot Inf (\\<Turnstile>) Red_I Red_F \\<and>\n     (\\<forall>B N.\n         B \\<in> Bot \\<longrightarrow>\n         reduc_saturated N \\<longrightarrow>\n         N \\<Turnstile> {B} \\<longrightarrow>\n         (\\<exists>B'\\<in>Bot. B' \\<in> N))) =\n    (calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F \\<and>\n     (\\<forall>B N.\n         B \\<in> Bot \\<longrightarrow>\n         reduc_calc.saturated N \\<longrightarrow>\n         N \\<Turnstile> {B} \\<longrightarrow>\n         (\\<exists>B'\\<in>Bot. B' \\<in> N)))", "by blast"], ["", "lemma sup_red_f_in_red_liminf:\n  \"chain derive Ns \\<Longrightarrow> Sup_llist (lmap Red_F Ns) \\<subseteq> Red_F (Liminf_llist Ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain (\\<rhd>) Ns \\<Longrightarrow>\n    Sup_llist (lmap Red_F Ns) \\<subseteq> Red_F (Liminf_llist Ns)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>chain (\\<rhd>) Ns;\n        x \\<in> Sup_llist (lmap Red_F Ns)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_F (Liminf_llist Ns)", "fix N"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>chain (\\<rhd>) Ns;\n        x \\<in> Sup_llist (lmap Red_F Ns)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_F (Liminf_llist Ns)", "assume\n    deriv: \"chain derive Ns\" and\n    n_in_sup: \"N \\<in> Sup_llist (lmap Red_F Ns)\""], ["proof (state)\nthis:\n  chain (\\<rhd>) Ns\n  N \\<in> Sup_llist (lmap Red_F Ns)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>chain (\\<rhd>) Ns;\n        x \\<in> Sup_llist (lmap Red_F Ns)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_F (Liminf_llist Ns)", "obtain i0 where i_smaller: \"enat i0 < llength Ns\" and n_in: \"N \\<in> Red_F (lnth Ns i0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i0.\n        \\<lbrakk>enat i0 < llength Ns; N \\<in> Red_F (lnth Ns i0)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using n_in_sup"], ["proof (prove)\nusing this:\n  N \\<in> Sup_llist (lmap Red_F Ns)\n\ngoal (1 subgoal):\n 1. (\\<And>i0.\n        \\<lbrakk>enat i0 < llength Ns; N \\<in> Red_F (lnth Ns i0)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Sup_llist_imp_exists_index llength_lmap lnth_lmap)"], ["proof (state)\nthis:\n  enat i0 < llength Ns\n  N \\<in> Red_F (lnth Ns i0)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>chain (\\<rhd>) Ns;\n        x \\<in> Sup_llist (lmap Red_F Ns)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_F (Liminf_llist Ns)", "have \"Red_F (lnth Ns i0) \\<subseteq> Red_F (Liminf_llist Ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_F (lnth Ns i0) \\<subseteq> Red_F (Liminf_llist Ns)", "using i_smaller"], ["proof (prove)\nusing this:\n  enat i0 < llength Ns\n\ngoal (1 subgoal):\n 1. Red_F (lnth Ns i0) \\<subseteq> Red_F (Liminf_llist Ns)", "by (simp add: deriv Red_F_subset_Liminf)"], ["proof (state)\nthis:\n  Red_F (lnth Ns i0) \\<subseteq> Red_F (Liminf_llist Ns)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>chain (\\<rhd>) Ns;\n        x \\<in> Sup_llist (lmap Red_F Ns)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_F (Liminf_llist Ns)", "then"], ["proof (chain)\npicking this:\n  Red_F (lnth Ns i0) \\<subseteq> Red_F (Liminf_llist Ns)", "show \"N \\<in> Red_F (Liminf_llist Ns)\""], ["proof (prove)\nusing this:\n  Red_F (lnth Ns i0) \\<subseteq> Red_F (Liminf_llist Ns)\n\ngoal (1 subgoal):\n 1. N \\<in> Red_F (Liminf_llist Ns)", "using n_in"], ["proof (prove)\nusing this:\n  Red_F (lnth Ns i0) \\<subseteq> Red_F (Liminf_llist Ns)\n  N \\<in> Red_F (lnth Ns i0)\n\ngoal (1 subgoal):\n 1. N \\<in> Red_F (Liminf_llist Ns)", "by fast"], ["proof (state)\nthis:\n  N \\<in> Red_F (Liminf_llist Ns)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sup_red_inf_in_red_liminf:\n  \"chain derive Ns \\<Longrightarrow> Sup_llist (lmap Red_I Ns) \\<subseteq> Red_I (Liminf_llist Ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain (\\<rhd>) Ns \\<Longrightarrow>\n    Sup_llist (lmap Red_I Ns) \\<subseteq> Red_I (Liminf_llist Ns)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>chain (\\<rhd>) Ns;\n        x \\<in> Sup_llist (lmap Red_I Ns)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I (Liminf_llist Ns)", "fix \\<iota>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>chain (\\<rhd>) Ns;\n        x \\<in> Sup_llist (lmap Red_I Ns)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I (Liminf_llist Ns)", "assume\n    deriv: \"chain derive Ns\" and\n    i_in_sup: \"\\<iota> \\<in> Sup_llist (lmap Red_I Ns)\""], ["proof (state)\nthis:\n  chain (\\<rhd>) Ns\n  \\<iota> \\<in> Sup_llist (lmap Red_I Ns)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>chain (\\<rhd>) Ns;\n        x \\<in> Sup_llist (lmap Red_I Ns)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I (Liminf_llist Ns)", "obtain i0 where i_smaller: \"enat i0 < llength Ns\" and n_in: \"\\<iota> \\<in> Red_I (lnth Ns i0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i0.\n        \\<lbrakk>enat i0 < llength Ns;\n         \\<iota> \\<in> Red_I (lnth Ns i0)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using i_in_sup"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Sup_llist (lmap Red_I Ns)\n\ngoal (1 subgoal):\n 1. (\\<And>i0.\n        \\<lbrakk>enat i0 < llength Ns;\n         \\<iota> \\<in> Red_I (lnth Ns i0)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Sup_llist_def"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> \\<Union>\n         (lnth (lmap Red_I Ns) ` {i. enat i < llength (lmap Red_I Ns)})\n\ngoal (1 subgoal):\n 1. (\\<And>i0.\n        \\<lbrakk>enat i0 < llength Ns;\n         \\<iota> \\<in> Red_I (lnth Ns i0)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  enat i0 < llength Ns\n  \\<iota> \\<in> Red_I (lnth Ns i0)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>chain (\\<rhd>) Ns;\n        x \\<in> Sup_llist (lmap Red_I Ns)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I (Liminf_llist Ns)", "have \"Red_I (lnth Ns i0) \\<subseteq> Red_I (Liminf_llist Ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_I (lnth Ns i0) \\<subseteq> Red_I (Liminf_llist Ns)", "using i_smaller"], ["proof (prove)\nusing this:\n  enat i0 < llength Ns\n\ngoal (1 subgoal):\n 1. Red_I (lnth Ns i0) \\<subseteq> Red_I (Liminf_llist Ns)", "by (simp add: deriv Red_I_subset_Liminf)"], ["proof (state)\nthis:\n  Red_I (lnth Ns i0) \\<subseteq> Red_I (Liminf_llist Ns)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>chain (\\<rhd>) Ns;\n        x \\<in> Sup_llist (lmap Red_I Ns)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Red_I (Liminf_llist Ns)", "then"], ["proof (chain)\npicking this:\n  Red_I (lnth Ns i0) \\<subseteq> Red_I (Liminf_llist Ns)", "show \"\\<iota> \\<in> Red_I (Liminf_llist Ns)\""], ["proof (prove)\nusing this:\n  Red_I (lnth Ns i0) \\<subseteq> Red_I (Liminf_llist Ns)\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I (Liminf_llist Ns)", "using n_in"], ["proof (prove)\nusing this:\n  Red_I (lnth Ns i0) \\<subseteq> Red_I (Liminf_llist Ns)\n  \\<iota> \\<in> Red_I (lnth Ns i0)\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I (Liminf_llist Ns)", "by fast"], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_I (Liminf_llist Ns)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition reduc_fair :: \"'f set llist \\<Rightarrow> bool\" where\n  \"reduc_fair Ns \\<longleftrightarrow>\n   Inf_from (Liminf_llist Ns - Sup_llist (lmap Red_F Ns)) \\<subseteq> Sup_llist (lmap Red_I Ns)\""], ["", "(* lem:red-fairness-implies-red-saturation *)"], ["", "lemma reduc_fair_imp_Liminf_reduc_sat:\n  \"chain derive Ns \\<Longrightarrow> reduc_fair Ns \\<Longrightarrow> reduc_saturated (Liminf_llist Ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>chain (\\<rhd>) Ns; reduc_fair Ns\\<rbrakk>\n    \\<Longrightarrow> reduc_saturated (Liminf_llist Ns)", "unfolding reduc_saturated_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>chain (\\<rhd>) Ns; reduc_fair Ns\\<rbrakk>\n    \\<Longrightarrow> Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n                      \\<subseteq> Red_I (Liminf_llist Ns)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>chain (\\<rhd>) Ns; reduc_fair Ns\\<rbrakk>\n    \\<Longrightarrow> Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n                      \\<subseteq> Red_I (Liminf_llist Ns)", "fix Ns"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>chain (\\<rhd>) Ns; reduc_fair Ns\\<rbrakk>\n    \\<Longrightarrow> Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n                      \\<subseteq> Red_I (Liminf_llist Ns)", "assume\n    deriv: \"chain derive Ns\" and\n    red_fair: \"reduc_fair Ns\""], ["proof (state)\nthis:\n  chain (\\<rhd>) Ns\n  reduc_fair Ns\n\ngoal (1 subgoal):\n 1. \\<lbrakk>chain (\\<rhd>) Ns; reduc_fair Ns\\<rbrakk>\n    \\<Longrightarrow> Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n                      \\<subseteq> Red_I (Liminf_llist Ns)", "have \"Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n    \\<subseteq> Inf_from (Liminf_llist Ns - Sup_llist (lmap Red_F Ns))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n    \\<subseteq> Inf_from (Liminf_llist Ns - Sup_llist (lmap Red_F Ns))", "using sup_red_f_in_red_liminf[OF deriv]"], ["proof (prove)\nusing this:\n  Sup_llist (lmap Red_F Ns) \\<subseteq> Red_F (Liminf_llist Ns)\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n    \\<subseteq> Inf_from (Liminf_llist Ns - Sup_llist (lmap Red_F Ns))", "unfolding Inf_from_def"], ["proof (prove)\nusing this:\n  Sup_llist (lmap Red_F Ns) \\<subseteq> Red_F (Liminf_llist Ns)\n\ngoal (1 subgoal):\n 1. {\\<iota> \\<in> Inf.\n     set (prems_of \\<iota>)\n     \\<subseteq> Liminf_llist Ns - Red_F (Liminf_llist Ns)}\n    \\<subseteq> {\\<iota> \\<in> Inf.\n                 set (prems_of \\<iota>)\n                 \\<subseteq> Liminf_llist Ns - Sup_llist (lmap Red_F Ns)}", "by blast"], ["proof (state)\nthis:\n  Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n  \\<subseteq> Inf_from (Liminf_llist Ns - Sup_llist (lmap Red_F Ns))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>chain (\\<rhd>) Ns; reduc_fair Ns\\<rbrakk>\n    \\<Longrightarrow> Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n                      \\<subseteq> Red_I (Liminf_llist Ns)", "then"], ["proof (chain)\npicking this:\n  Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n  \\<subseteq> Inf_from (Liminf_llist Ns - Sup_llist (lmap Red_F Ns))", "have \"Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns)) \\<subseteq> Sup_llist (lmap Red_I Ns)\""], ["proof (prove)\nusing this:\n  Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n  \\<subseteq> Inf_from (Liminf_llist Ns - Sup_llist (lmap Red_F Ns))\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n    \\<subseteq> Sup_llist (lmap Red_I Ns)", "using red_fair"], ["proof (prove)\nusing this:\n  Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n  \\<subseteq> Inf_from (Liminf_llist Ns - Sup_llist (lmap Red_F Ns))\n  reduc_fair Ns\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n    \\<subseteq> Sup_llist (lmap Red_I Ns)", "unfolding reduc_fair_def"], ["proof (prove)\nusing this:\n  Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n  \\<subseteq> Inf_from (Liminf_llist Ns - Sup_llist (lmap Red_F Ns))\n  Inf_from (Liminf_llist Ns - Sup_llist (lmap Red_F Ns))\n  \\<subseteq> Sup_llist (lmap Red_I Ns)\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n    \\<subseteq> Sup_llist (lmap Red_I Ns)", "by simp"], ["proof (state)\nthis:\n  Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n  \\<subseteq> Sup_llist (lmap Red_I Ns)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>chain (\\<rhd>) Ns; reduc_fair Ns\\<rbrakk>\n    \\<Longrightarrow> Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n                      \\<subseteq> Red_I (Liminf_llist Ns)", "then"], ["proof (chain)\npicking this:\n  Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n  \\<subseteq> Sup_llist (lmap Red_I Ns)", "show \"Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns)) \\<subseteq> Red_I (Liminf_llist Ns)\""], ["proof (prove)\nusing this:\n  Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n  \\<subseteq> Sup_llist (lmap Red_I Ns)\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n    \\<subseteq> Red_I (Liminf_llist Ns)", "using sup_red_inf_in_red_liminf[OF deriv]"], ["proof (prove)\nusing this:\n  Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n  \\<subseteq> Sup_llist (lmap Red_I Ns)\n  Sup_llist (lmap Red_I Ns) \\<subseteq> Red_I (Liminf_llist Ns)\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n    \\<subseteq> Red_I (Liminf_llist Ns)", "by fast"], ["proof (state)\nthis:\n  Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n  \\<subseteq> Red_I (Liminf_llist Ns)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "locale reducedly_dynamically_complete_calculus = calculus +\n  assumes\n    reducedly_dynamically_complete: \"B \\<in> Bot \\<Longrightarrow> chain derive Ns \\<Longrightarrow> reduc_fair Ns \\<Longrightarrow>\n      lhd Ns \\<Turnstile> {B} \\<Longrightarrow> \\<exists>i \\<in> {i. enat i < llength Ns}. \\<exists> B'\\<in>Bot. B' \\<in> lnth Ns i\"\nbegin"], ["", "sublocale reducedly_statically_complete_calculus"], ["proof (prove)\ngoal (1 subgoal):\n 1. reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "fix B N"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "assume\n    bot_elem: \\<open>B \\<in> Bot\\<close> and\n    saturated_N: \"reduc_saturated N\" and\n    refut_N: \"N \\<Turnstile> {B}\""], ["proof (state)\nthis:\n  B \\<in> Bot\n  reduc_saturated N\n  N \\<Turnstile> {B}\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "define Ns where \"Ns = LCons N LNil\""], ["proof (state)\nthis:\n  Ns = LCons N LNil\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "have[simp]: \\<open>\\<not> lnull Ns\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> lnull Ns", "by (auto simp: Ns_def)"], ["proof (state)\nthis:\n  \\<not> lnull Ns\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "have deriv_D: \\<open>chain (\\<rhd>) Ns\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. chain (\\<rhd>) Ns", "by (simp add: chain.chain_singleton Ns_def)"], ["proof (state)\nthis:\n  chain (\\<rhd>) Ns\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "have liminf_is_N: \"Liminf_llist Ns = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Liminf_llist Ns = N", "by (simp add: Ns_def Liminf_llist_LCons)"], ["proof (state)\nthis:\n  Liminf_llist Ns = N\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "have head_D: \"N = lhd Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = lhd Ns", "by (simp add: Ns_def)"], ["proof (state)\nthis:\n  N = lhd Ns\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "have \"Sup_llist (lmap Red_F Ns) = Red_F N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_llist (lmap Red_F Ns) = Red_F N", "by (simp add: Ns_def)"], ["proof (state)\nthis:\n  Sup_llist (lmap Red_F Ns) = Red_F N\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "moreover"], ["proof (state)\nthis:\n  Sup_llist (lmap Red_F Ns) = Red_F N\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "have \"Sup_llist (lmap Red_I Ns) = Red_I N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_llist (lmap Red_I Ns) = Red_I N", "by (simp add: Ns_def)"], ["proof (state)\nthis:\n  Sup_llist (lmap Red_I Ns) = Red_I N\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "ultimately"], ["proof (chain)\npicking this:\n  Sup_llist (lmap Red_F Ns) = Red_F N\n  Sup_llist (lmap Red_I Ns) = Red_I N", "have fair_D: \"reduc_fair Ns\""], ["proof (prove)\nusing this:\n  Sup_llist (lmap Red_F Ns) = Red_F N\n  Sup_llist (lmap Red_I Ns) = Red_I N\n\ngoal (1 subgoal):\n 1. reduc_fair Ns", "using saturated_N liminf_is_N"], ["proof (prove)\nusing this:\n  Sup_llist (lmap Red_F Ns) = Red_F N\n  Sup_llist (lmap Red_I Ns) = Red_I N\n  reduc_saturated N\n  Liminf_llist Ns = N\n\ngoal (1 subgoal):\n 1. reduc_fair Ns", "unfolding reduc_fair_def reduc_saturated_def"], ["proof (prove)\nusing this:\n  Sup_llist (lmap Red_F Ns) = Red_F N\n  Sup_llist (lmap Red_I Ns) = Red_I N\n  Inf_from (N - Red_F N) \\<subseteq> Red_I N\n  Liminf_llist Ns = N\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns - Sup_llist (lmap Red_F Ns))\n    \\<subseteq> Sup_llist (lmap Red_I Ns)", "by (simp add: reduc_fair_def reduc_saturated_def liminf_is_N)"], ["proof (state)\nthis:\n  reduc_fair Ns\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "obtain i B' where B'_is_bot: \\<open>B' \\<in> Bot\\<close> and B'_in: \"B' \\<in> lnth Ns i\" and \\<open>i < llength Ns\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B' i.\n        \\<lbrakk>B' \\<in> Bot; B' \\<in> lnth Ns i;\n         enat i < llength Ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using reducedly_dynamically_complete[of B Ns] bot_elem fair_D head_D saturated_N deriv_D refut_N"], ["proof (prove)\nusing this:\n  \\<lbrakk>B \\<in> Bot; chain (\\<rhd>) Ns; reduc_fair Ns;\n   lhd Ns \\<Turnstile> {B}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<in>{i. enat i < llength Ns}.\n                       \\<exists>B'\\<in>Bot. B' \\<in> lnth Ns i\n  B \\<in> Bot\n  reduc_fair Ns\n  N = lhd Ns\n  reduc_saturated N\n  chain (\\<rhd>) Ns\n  N \\<Turnstile> {B}\n\ngoal (1 subgoal):\n 1. (\\<And>B' i.\n        \\<lbrakk>B' \\<in> Bot; B' \\<in> lnth Ns i;\n         enat i < llength Ns\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B' \\<in> Bot\n  B' \\<in> lnth Ns i\n  enat i < llength Ns\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "then"], ["proof (chain)\npicking this:\n  B' \\<in> Bot\n  B' \\<in> lnth Ns i\n  enat i < llength Ns", "have \"i = 0\""], ["proof (prove)\nusing this:\n  B' \\<in> Bot\n  B' \\<in> lnth Ns i\n  enat i < llength Ns\n\ngoal (1 subgoal):\n 1. i = 0", "by (auto simp: Ns_def enat_0_iff)"], ["proof (state)\nthis:\n  i = 0\n\ngoal (1 subgoal):\n 1. \\<And>B N.\n       \\<lbrakk>B \\<in> Bot; reduc_saturated N; N \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> N", "show \\<open>\\<exists>B'\\<in>Bot. B' \\<in> N\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B'\\<in>Bot. B' \\<in> N", "using B'_is_bot B'_in"], ["proof (prove)\nusing this:\n  B' \\<in> Bot\n  B' \\<in> lnth Ns i\n\ngoal (1 subgoal):\n 1. \\<exists>B'\\<in>Bot. B' \\<in> N", "unfolding \\<open>i = 0\\<close> head_D[symmetric] Ns_def"], ["proof (prove)\nusing this:\n  B' \\<in> Bot\n  B' \\<in> lnth (LCons N LNil) 0\n\ngoal (1 subgoal):\n 1. \\<exists>B'\\<in>Bot. B' \\<in> N", "by auto"], ["proof (state)\nthis:\n  \\<exists>B'\\<in>Bot. B' \\<in> N\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "sublocale reducedly_statically_complete_calculus \\<subseteq> reducedly_dynamically_complete_calculus"], ["proof (prove)\ngoal (1 subgoal):\n 1. reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B Ns.\n       \\<lbrakk>B \\<in> Bot; chain (\\<rhd>) Ns; reduc_fair Ns;\n        lhd Ns \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<in>{i. enat i < llength Ns}.\n                            \\<exists>B'\\<in>Bot. B' \\<in> lnth Ns i", "fix B Ns"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B Ns.\n       \\<lbrakk>B \\<in> Bot; chain (\\<rhd>) Ns; reduc_fair Ns;\n        lhd Ns \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<in>{i. enat i < llength Ns}.\n                            \\<exists>B'\\<in>Bot. B' \\<in> lnth Ns i", "assume\n    bot_elem: \\<open>B \\<in> Bot\\<close> and\n    deriv: \\<open>chain (\\<rhd>) Ns\\<close> and\n    fair: \\<open>reduc_fair Ns\\<close> and\n    unsat: \\<open>lhd Ns \\<Turnstile> {B}\\<close>"], ["proof (state)\nthis:\n  B \\<in> Bot\n  chain (\\<rhd>) Ns\n  reduc_fair Ns\n  lhd Ns \\<Turnstile> {B}\n\ngoal (1 subgoal):\n 1. \\<And>B Ns.\n       \\<lbrakk>B \\<in> Bot; chain (\\<rhd>) Ns; reduc_fair Ns;\n        lhd Ns \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<in>{i. enat i < llength Ns}.\n                            \\<exists>B'\\<in>Bot. B' \\<in> lnth Ns i", "have non_empty: \\<open>\\<not> lnull Ns\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> lnull Ns", "using chain_not_lnull[OF deriv]"], ["proof (prove)\nusing this:\n  \\<not> lnull Ns\n\ngoal (1 subgoal):\n 1. \\<not> lnull Ns", "."], ["proof (state)\nthis:\n  \\<not> lnull Ns\n\ngoal (1 subgoal):\n 1. \\<And>B Ns.\n       \\<lbrakk>B \\<in> Bot; chain (\\<rhd>) Ns; reduc_fair Ns;\n        lhd Ns \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<in>{i. enat i < llength Ns}.\n                            \\<exists>B'\\<in>Bot. B' \\<in> lnth Ns i", "have subs: \\<open>lhd Ns \\<subseteq> Sup_llist Ns\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. lhd Ns \\<subseteq> Sup_llist Ns", "using lhd_subset_Sup_llist[of Ns] non_empty"], ["proof (prove)\nusing this:\n  \\<not> lnull Ns \\<Longrightarrow> lhd Ns \\<subseteq> Sup_llist Ns\n  \\<not> lnull Ns\n\ngoal (1 subgoal):\n 1. lhd Ns \\<subseteq> Sup_llist Ns", "by (simp add: lhd_conv_lnth)"], ["proof (state)\nthis:\n  lhd Ns \\<subseteq> Sup_llist Ns\n\ngoal (1 subgoal):\n 1. \\<And>B Ns.\n       \\<lbrakk>B \\<in> Bot; chain (\\<rhd>) Ns; reduc_fair Ns;\n        lhd Ns \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<in>{i. enat i < llength Ns}.\n                            \\<exists>B'\\<in>Bot. B' \\<in> lnth Ns i", "have \\<open>Sup_llist Ns \\<Turnstile> {B}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_llist Ns \\<Turnstile> {B}", "using unsat subset_entailed[OF subs] entails_trans[of \"Sup_llist Ns\" \"lhd Ns\"]"], ["proof (prove)\nusing this:\n  lhd Ns \\<Turnstile> {B}\n  Sup_llist Ns \\<Turnstile> lhd Ns\n  \\<lbrakk>Sup_llist Ns \\<Turnstile> lhd Ns;\n   lhd Ns \\<Turnstile> ?N3.0\\<rbrakk>\n  \\<Longrightarrow> Sup_llist Ns \\<Turnstile> ?N3.0\n\ngoal (1 subgoal):\n 1. Sup_llist Ns \\<Turnstile> {B}", "by auto"], ["proof (state)\nthis:\n  Sup_llist Ns \\<Turnstile> {B}\n\ngoal (1 subgoal):\n 1. \\<And>B Ns.\n       \\<lbrakk>B \\<in> Bot; chain (\\<rhd>) Ns; reduc_fair Ns;\n        lhd Ns \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<in>{i. enat i < llength Ns}.\n                            \\<exists>B'\\<in>Bot. B' \\<in> lnth Ns i", "then"], ["proof (chain)\npicking this:\n  Sup_llist Ns \\<Turnstile> {B}", "have Sup_no_Red: \\<open>Sup_llist Ns - Red_F (Sup_llist Ns) \\<Turnstile> {B}\\<close>"], ["proof (prove)\nusing this:\n  Sup_llist Ns \\<Turnstile> {B}\n\ngoal (1 subgoal):\n 1. Sup_llist Ns - Red_F (Sup_llist Ns) \\<Turnstile> {B}", "using bot_elem Red_F_Bot"], ["proof (prove)\nusing this:\n  Sup_llist Ns \\<Turnstile> {B}\n  B \\<in> Bot\n  \\<lbrakk>?B \\<in> Bot; ?N \\<Turnstile> {?B}\\<rbrakk>\n  \\<Longrightarrow> ?N - Red_F ?N \\<Turnstile> {?B}\n\ngoal (1 subgoal):\n 1. Sup_llist Ns - Red_F (Sup_llist Ns) \\<Turnstile> {B}", "by auto"], ["proof (state)\nthis:\n  Sup_llist Ns - Red_F (Sup_llist Ns) \\<Turnstile> {B}\n\ngoal (1 subgoal):\n 1. \\<And>B Ns.\n       \\<lbrakk>B \\<in> Bot; chain (\\<rhd>) Ns; reduc_fair Ns;\n        lhd Ns \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<in>{i. enat i < llength Ns}.\n                            \\<exists>B'\\<in>Bot. B' \\<in> lnth Ns i", "have Sup_no_Red_in_Liminf: \\<open>Sup_llist Ns - Red_F (Sup_llist Ns) \\<subseteq> Liminf_llist Ns\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_llist Ns - Red_F (Sup_llist Ns) \\<subseteq> Liminf_llist Ns", "using deriv Red_in_Sup"], ["proof (prove)\nusing this:\n  chain (\\<rhd>) Ns\n  chain (\\<rhd>) ?Ns \\<Longrightarrow>\n  Sup_llist ?Ns - Liminf_llist ?Ns \\<subseteq> Red_F (Sup_llist ?Ns)\n\ngoal (1 subgoal):\n 1. Sup_llist Ns - Red_F (Sup_llist Ns) \\<subseteq> Liminf_llist Ns", "by auto"], ["proof (state)\nthis:\n  Sup_llist Ns - Red_F (Sup_llist Ns) \\<subseteq> Liminf_llist Ns\n\ngoal (1 subgoal):\n 1. \\<And>B Ns.\n       \\<lbrakk>B \\<in> Bot; chain (\\<rhd>) Ns; reduc_fair Ns;\n        lhd Ns \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<in>{i. enat i < llength Ns}.\n                            \\<exists>B'\\<in>Bot. B' \\<in> lnth Ns i", "have Liminf_entails_Bot: \\<open>Liminf_llist Ns \\<Turnstile> {B}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. Liminf_llist Ns \\<Turnstile> {B}", "using Sup_no_Red subset_entailed[OF Sup_no_Red_in_Liminf] entails_trans"], ["proof (prove)\nusing this:\n  Sup_llist Ns - Red_F (Sup_llist Ns) \\<Turnstile> {B}\n  Liminf_llist Ns \\<Turnstile> Sup_llist Ns - Red_F (Sup_llist Ns)\n  \\<lbrakk>?N1.0 \\<Turnstile> ?N2.0; ?N2.0 \\<Turnstile> ?N3.0\\<rbrakk>\n  \\<Longrightarrow> ?N1.0 \\<Turnstile> ?N3.0\n\ngoal (1 subgoal):\n 1. Liminf_llist Ns \\<Turnstile> {B}", "by blast"], ["proof (state)\nthis:\n  Liminf_llist Ns \\<Turnstile> {B}\n\ngoal (1 subgoal):\n 1. \\<And>B Ns.\n       \\<lbrakk>B \\<in> Bot; chain (\\<rhd>) Ns; reduc_fair Ns;\n        lhd Ns \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<in>{i. enat i < llength Ns}.\n                            \\<exists>B'\\<in>Bot. B' \\<in> lnth Ns i", "have \\<open>reduc_saturated (Liminf_llist Ns)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. reduc_saturated (Liminf_llist Ns)", "using deriv fair reduc_fair_imp_Liminf_reduc_sat"], ["proof (prove)\nusing this:\n  chain (\\<rhd>) Ns\n  reduc_fair Ns\n  \\<lbrakk>chain (\\<rhd>) ?Ns; reduc_fair ?Ns\\<rbrakk>\n  \\<Longrightarrow> reduc_saturated (Liminf_llist ?Ns)\n\ngoal (1 subgoal):\n 1. reduc_saturated (Liminf_llist Ns)", "unfolding reduc_saturated_def"], ["proof (prove)\nusing this:\n  chain (\\<rhd>) Ns\n  reduc_fair Ns\n  \\<lbrakk>chain (\\<rhd>) ?Ns; reduc_fair ?Ns\\<rbrakk>\n  \\<Longrightarrow> Inf_from (Liminf_llist ?Ns - Red_F (Liminf_llist ?Ns))\n                    \\<subseteq> Red_I (Liminf_llist ?Ns)\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns - Red_F (Liminf_llist Ns))\n    \\<subseteq> Red_I (Liminf_llist Ns)", "by auto"], ["proof (state)\nthis:\n  reduc_saturated (Liminf_llist Ns)\n\ngoal (1 subgoal):\n 1. \\<And>B Ns.\n       \\<lbrakk>B \\<in> Bot; chain (\\<rhd>) Ns; reduc_fair Ns;\n        lhd Ns \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<in>{i. enat i < llength Ns}.\n                            \\<exists>B'\\<in>Bot. B' \\<in> lnth Ns i", "then"], ["proof (chain)\npicking this:\n  reduc_saturated (Liminf_llist Ns)", "have \\<open>\\<exists>B'\\<in>Bot. B' \\<in> Liminf_llist Ns\\<close>"], ["proof (prove)\nusing this:\n  reduc_saturated (Liminf_llist Ns)\n\ngoal (1 subgoal):\n 1. \\<exists>B'\\<in>Bot. B' \\<in> Liminf_llist Ns", "using bot_elem reducedly_statically_complete Liminf_entails_Bot"], ["proof (prove)\nusing this:\n  reduc_saturated (Liminf_llist Ns)\n  B \\<in> Bot\n  \\<lbrakk>?B \\<in> Bot; reduc_saturated ?N; ?N \\<Turnstile> {?B}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B'\\<in>Bot. B' \\<in> ?N\n  Liminf_llist Ns \\<Turnstile> {B}\n\ngoal (1 subgoal):\n 1. \\<exists>B'\\<in>Bot. B' \\<in> Liminf_llist Ns", "by auto"], ["proof (state)\nthis:\n  \\<exists>B'\\<in>Bot. B' \\<in> Liminf_llist Ns\n\ngoal (1 subgoal):\n 1. \\<And>B Ns.\n       \\<lbrakk>B \\<in> Bot; chain (\\<rhd>) Ns; reduc_fair Ns;\n        lhd Ns \\<Turnstile> {B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<in>{i. enat i < llength Ns}.\n                            \\<exists>B'\\<in>Bot. B' \\<in> lnth Ns i", "then"], ["proof (chain)\npicking this:\n  \\<exists>B'\\<in>Bot. B' \\<in> Liminf_llist Ns", "show \\<open>\\<exists>i\\<in>{i. enat i < llength Ns}. \\<exists>B'\\<in>Bot. B' \\<in> lnth Ns i\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>B'\\<in>Bot. B' \\<in> Liminf_llist Ns\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>{i. enat i < llength Ns}.\n       \\<exists>B'\\<in>Bot. B' \\<in> lnth Ns i", "unfolding Liminf_llist_def"], ["proof (prove)\nusing this:\n  \\<exists>B'\\<in>Bot.\n     B' \\<in> (\\<Union>i\\<in>{i. enat i < llength Ns}.\n                  \\<Inter>\n                   (lnth Ns ` {j. i \\<le> j \\<and> enat j < llength Ns}))\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>{i. enat i < llength Ns}.\n       \\<exists>B'\\<in>Bot. B' \\<in> lnth Ns i", "by auto"], ["proof (state)\nthis:\n  \\<exists>i\\<in>{i. enat i < llength Ns}.\n     \\<exists>B'\\<in>Bot. B' \\<in> lnth Ns i\n\ngoal:\nNo subgoals!", "qed"], ["", "context calculus\nbegin"], ["", "lemma dyn_equiv_stat: \"dynamically_complete_calculus Bot Inf entails Red_I Red_F =\n  statically_complete_calculus Bot Inf entails Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F =\n    statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n 2. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "assume \"dynamically_complete_calculus Bot Inf entails Red_I Red_F\""], ["proof (state)\nthis:\n  dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n\ngoal (2 subgoals):\n 1. dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n 2. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "then"], ["proof (chain)\npicking this:\n  dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "interpret dynamically_complete_calculus Bot Inf entails Red_I Red_F"], ["proof (prove)\nusing this:\n  dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n\ngoal (1 subgoal):\n 1. dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "by simp"], ["proof (state)\ngoal (2 subgoals):\n 1. dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n 2. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "show \"statically_complete_calculus Bot Inf entails Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "by (simp add: statically_complete_calculus_axioms)"], ["proof (state)\nthis:\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "assume \"statically_complete_calculus Bot Inf entails Red_I Red_F\""], ["proof (state)\nthis:\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "then"], ["proof (chain)\npicking this:\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "interpret statically_complete_calculus Bot Inf entails Red_I Red_F"], ["proof (prove)\nusing this:\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "show \"dynamically_complete_calculus Bot Inf entails Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "by (simp add: dynamically_complete_calculus_axioms)"], ["proof (state)\nthis:\n  dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma red_dyn_equiv_red_stat:\n  \"reducedly_dynamically_complete_calculus Bot Inf entails Red_I Red_F =\n   reducedly_statically_complete_calculus Bot Inf entails Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F =\n    reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F\n 2. reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F", "assume \"reducedly_dynamically_complete_calculus Bot Inf entails Red_I Red_F\""], ["proof (state)\nthis:\n  reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n\ngoal (2 subgoals):\n 1. reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F\n 2. reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F", "then"], ["proof (chain)\npicking this:\n  reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "interpret reducedly_dynamically_complete_calculus Bot Inf entails Red_I Red_F"], ["proof (prove)\nusing this:\n  reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n\ngoal (1 subgoal):\n 1. reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F", "by simp"], ["proof (state)\ngoal (2 subgoals):\n 1. reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F\n 2. reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F", "show \"reducedly_statically_complete_calculus Bot Inf entails Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F", "by (simp add: reducedly_statically_complete_calculus_axioms)"], ["proof (state)\nthis:\n  reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n\ngoal (1 subgoal):\n 1. reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F", "assume \"reducedly_statically_complete_calculus Bot Inf entails Red_I Red_F\""], ["proof (state)\nthis:\n  reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n\ngoal (1 subgoal):\n 1. reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F", "then"], ["proof (chain)\npicking this:\n  reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "interpret reducedly_statically_complete_calculus Bot Inf entails Red_I Red_F"], ["proof (prove)\nusing this:\n  reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n\ngoal (1 subgoal):\n 1. reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F \\<Longrightarrow>\n    reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F", "show \"reducedly_dynamically_complete_calculus Bot Inf entails Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F", "by (simp add: reducedly_dynamically_complete_calculus_axioms)"], ["proof (state)\nthis:\n  reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation reduc_calc: reduced_calculus Bot Inf entails Red_Red_I Red_F"], ["proof (prove)\ngoal (1 subgoal):\n 1. reduced_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "by (fact reduc_calc)"], ["", "(* thm:reduced-dyn-ref-compl 1/3 (v) \\<longleftrightarrow> (vii) *)"], ["", "theorem dyn_ref_eq_dyn_ref_red:\n  \"dynamically_complete_calculus Bot Inf entails Red_I Red_F \\<longleftrightarrow>\n   dynamically_complete_calculus Bot Inf entails Red_Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F =\n    dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "using dyn_equiv_stat stat_is_stat_red reduc_calc.dyn_equiv_stat"], ["proof (prove)\nusing this:\n  dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F =\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F =\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F\n  dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F =\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F\n\ngoal (1 subgoal):\n 1. dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F =\n    dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "by meson"], ["", "(* thm:reduced-dyn-ref-compl 2/3 (viii) \\<longleftrightarrow> (vii) *)"], ["", "theorem red_dyn_ref_red_eq_dyn_ref_red:\n  \"reducedly_dynamically_complete_calculus Bot Inf entails Red_Red_I Red_F \\<longleftrightarrow>\n   dynamically_complete_calculus Bot Inf entails Red_Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I\n     Red_F =\n    dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "using red_dyn_equiv_red_stat dyn_equiv_stat red_stat_red_is_stat_red"], ["proof (prove)\nusing this:\n  reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n   Red_F =\n  reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n  dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F =\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n  reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I\n   Red_F =\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F\n\ngoal (1 subgoal):\n 1. reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I\n     Red_F =\n    dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "by (simp add: reduc_calc.dyn_equiv_stat reduc_calc.red_dyn_equiv_red_stat)"], ["", "(* thm:reduced-dyn-ref-compl 3/3 (vi) \\<longleftrightarrow> (vii) *)"], ["", "theorem red_dyn_ref_eq_dyn_ref_red:\n  \"reducedly_dynamically_complete_calculus Bot Inf entails Red_I Red_F \\<longleftrightarrow>\n   dynamically_complete_calculus Bot Inf entails Red_Red_I Red_F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F =\n    dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "using red_dyn_equiv_red_stat dyn_equiv_stat red_stat_is_stat_red\n    reduc_calc.dyn_equiv_stat reduc_calc.red_dyn_equiv_red_stat"], ["proof (prove)\nusing this:\n  reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n   Red_F =\n  reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n  dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F =\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I Red_F\n  reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n   Red_F =\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F\n  dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F =\n  statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F\n  reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I\n   Red_F =\n  reducedly_statically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I\n   Red_F\n\ngoal (1 subgoal):\n 1. reducedly_dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_I\n     Red_F =\n    dynamically_complete_calculus Bot Inf (\\<Turnstile>) Red_Red_I Red_F", "by blast"], ["", "end"], ["", "end"]]}