{"file_name": "/home/qj213/afp-2021-10-22/thys/LTL_Master_Theorem/LTL_to_DRA/Transition_Functions.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LTL_Master_Theorem", "problem_names": ["lemma af\\<^sub>F_step:\n  \"af\\<^sub>F \\<phi> \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> (w @ [\\<nu>]) = F\\<^sub>n \\<phi>\"", "lemma af\\<^sub>G_step:\n  \"af\\<^sub>G \\<phi> \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> (w @ [\\<nu>]) = G\\<^sub>n \\<phi>\"", "lemma af\\<^sub>F_segments:\n  \"af\\<^sub>F \\<phi> \\<psi> w = F\\<^sub>n \\<phi> \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> (w @ w') = af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) w'\"", "lemma af\\<^sub>G_segments:\n  \"af\\<^sub>G \\<phi> \\<psi> w = G\\<^sub>n \\<phi> \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> (w @ w') = af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) w'\"", "lemma af_not_true_implies_af_equals_af\\<^sub>F:\n  \"(\\<And>xs ys. w = xs @ ys \\<Longrightarrow> \\<not> af \\<psi> xs \\<sim> true\\<^sub>n) \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> w = af \\<psi> w\"", "lemma af_not_false_implies_af_equals_af\\<^sub>G:\n  \"(\\<And>xs ys. w = xs @ ys \\<Longrightarrow> \\<not> af \\<psi> xs \\<sim> false\\<^sub>n) \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> w = af \\<psi> w\"", "lemma af\\<^sub>F_not_true_implies_af_equals_af\\<^sub>F:\n  \"(\\<And>xs ys. w = xs @ ys \\<Longrightarrow> \\<not> af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n) \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> w = af \\<psi> w\"", "lemma af\\<^sub>G_not_false_implies_af_equals_af\\<^sub>G:\n  \"(\\<And>xs ys. w = xs @ ys \\<Longrightarrow> \\<not> af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n) \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> w = af \\<psi> w\"", "lemma af\\<^sub>F_true_implies_af_true:\n  \"af\\<^sub>F \\<phi> \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow> af \\<psi> w \\<sim> true\\<^sub>n\"", "lemma af\\<^sub>G_false_implies_af_false:\n  \"af\\<^sub>G \\<phi> \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow> af \\<psi> w \\<sim> false\\<^sub>n\"", "lemma af_equiv_true_af\\<^sub>F_prefix_true:\n  \"af \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow> \\<exists>xs ys. w = xs @ ys \\<and> af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n\"", "lemma af_equiv_false_af\\<^sub>G_prefix_false:\n  \"af \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow> \\<exists>xs ys. w = xs @ ys \\<and> af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n\"", "lemma append_take_drop:\n  \"w = xs @ ys \\<longleftrightarrow> xs = take (length xs) w \\<and> ys = drop (length xs) w\"", "lemma subsequence_split:\n  \"(w [i \\<rightarrow> j]) = xs @ ys \\<Longrightarrow> xs = (w [i \\<rightarrow> i + length xs])\"", "lemma subsequence_append_general:\n  \"i \\<le> k \\<Longrightarrow> k \\<le> j \\<Longrightarrow> (w [i \\<rightarrow> j]) = (w [i \\<rightarrow> k]) @ (w [k \\<rightarrow> j])\"", "lemma af\\<^sub>F_semantics_rtl:\n  assumes\n    \"\\<forall>i. \\<exists>j>i. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [0 \\<rightarrow> j]) \\<sim> true\\<^sub>n\"\n  shows\n    \"\\<forall>i. \\<exists>j. af (F\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim>\\<^sub>L true\\<^sub>n\"", "lemma af\\<^sub>F_semantics_ltr:\n  assumes\n    \"\\<forall>i. \\<exists>j. af (F\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim> true\\<^sub>n\"\n  shows\n    \"\\<forall>i. \\<exists>j>i. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [0 \\<rightarrow> j]) \\<sim> true\\<^sub>n\"", "lemma af\\<^sub>G_semantics_rtl:\n  assumes\n    \"\\<exists>i. \\<forall>j>i. \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [0 \\<rightarrow> j]) \\<sim> false\\<^sub>n\"\n  shows\n    \"\\<exists>i. \\<forall>j. \\<not> af (G\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim> false\\<^sub>n\"", "lemma af\\<^sub>G_semantics_ltr:\n  assumes\n    \"\\<exists>i. \\<forall>j. \\<not> af (G\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim>\\<^sub>L false\\<^sub>n\"\n  shows\n    \"\\<exists>i. \\<forall>j>i. \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [0 \\<rightarrow> j]) \\<sim> false\\<^sub>n\"", "lemma af_letter\\<^sub>\\<nu>_fst[simp]:\n  \"fst (af_letter\\<^sub>\\<nu> X p \\<nu>) = af_letter (fst p) \\<nu>\"", "lemma af_letter\\<^sub>\\<nu>_snd[simp]:\n  \"snd p \\<sim> false\\<^sub>n \\<Longrightarrow> snd (af_letter\\<^sub>\\<nu> X p \\<nu>) = (normalise (af_letter (fst p) \\<nu>))[X]\\<^sub>\\<nu>\"\n  \"\\<not> (snd p) \\<sim> false\\<^sub>n \\<Longrightarrow> snd (af_letter\\<^sub>\\<nu> X p \\<nu>) = af_letter (snd p) \\<nu>\"", "lemma af\\<^sub>\\<nu>_fst:\n  \"fst (af\\<^sub>\\<nu> X p w) = af (fst p) w\"", "lemma af\\<^sub>\\<nu>_snd:\n  \"\\<not> af (snd p) w \\<sim> false\\<^sub>n \\<Longrightarrow> snd (af\\<^sub>\\<nu> X p w) = af (snd p) w\"", "lemma af\\<^sub>\\<nu>_snd':\n  \"\\<forall>i. \\<not> snd (af\\<^sub>\\<nu> X p (take i w)) \\<sim> false\\<^sub>n \\<Longrightarrow> snd (af\\<^sub>\\<nu> X p w) = af (snd p) w\"", "lemma af\\<^sub>\\<nu>_step:\n  \"snd (af\\<^sub>\\<nu> X (\\<xi>, \\<zeta>) w) \\<sim> false\\<^sub>n \\<Longrightarrow> snd (af\\<^sub>\\<nu> X (\\<xi>, \\<zeta>) (w @ [\\<nu>])) = (normalise (af \\<xi> (w @ [\\<nu>])))[X]\\<^sub>\\<nu>\"", "lemma af\\<^sub>\\<nu>_segments:\n  \"af\\<^sub>\\<nu> X (\\<xi>, \\<zeta>) w = (af \\<xi> w, (af \\<xi> w)[X]\\<^sub>\\<nu>) \\<Longrightarrow> af\\<^sub>\\<nu> X (\\<xi>, \\<zeta>) (w @ w') = af\\<^sub>\\<nu> X (af \\<xi> w, (af \\<xi> w)[X]\\<^sub>\\<nu>) w'\"", "lemma af\\<^sub>\\<nu>_semantics_ltr:\n  assumes\n    \"\\<exists>i. suffix i w \\<Turnstile>\\<^sub>n (af \\<phi> (prefix i w))[X]\\<^sub>\\<nu>\"\n  shows\n    \"\\<exists>m. \\<forall>k\\<ge>m. \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix (Suc k) w)) \\<sim> false\\<^sub>n\"", "lemma af\\<^sub>\\<nu>_semantics_rtl:\n  assumes\n    \"\\<exists>n. \\<forall>k\\<ge>n. \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix (Suc k) w)) \\<sim> false\\<^sub>n\"\n  shows\n    \"\\<exists>i. suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>\"", "lemma af_letter\\<^sub>F_nested_prop_atoms:\n  \"nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>) \\<Longrightarrow> nested_prop_atoms (af_letter\\<^sub>F \\<phi> \\<psi> \\<nu>) \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>)\"", "lemma af\\<^sub>F_nested_prop_atoms:\n  \"nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>) \\<Longrightarrow> nested_prop_atoms (af\\<^sub>F \\<phi> \\<psi> w) \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>)\"", "lemma af_letter\\<^sub>F_range:\n  \"nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>) \\<Longrightarrow> range (af_letter\\<^sub>F \\<phi> \\<psi>) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>)}\"", "lemma af\\<^sub>F_range:\n  \"nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>) \\<Longrightarrow> range (af\\<^sub>F \\<phi> \\<psi>) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>)}\"", "lemma af_letter\\<^sub>G_nested_prop_atoms:\n  \"nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>) \\<Longrightarrow> nested_prop_atoms (af_letter\\<^sub>G \\<phi> \\<psi> \\<nu>) \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>)\"", "lemma af\\<^sub>G_nested_prop_atoms:\n  \"nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>) \\<Longrightarrow> nested_prop_atoms (af\\<^sub>G \\<phi> \\<psi> w) \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>)\"", "lemma af_letter\\<^sub>G_range:\n  \"nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>) \\<Longrightarrow> range (af_letter\\<^sub>G \\<phi> \\<psi>) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>)}\"", "lemma af\\<^sub>G_range:\n  \"nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>) \\<Longrightarrow> range (af\\<^sub>G \\<phi> \\<psi>) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>)}\"", "lemma af_letter\\<^sub>\\<nu>_snd_nested_prop_atoms_helper:\n  \"snd p \\<sim> false\\<^sub>n \\<Longrightarrow> nested_prop_atoms (snd (af_letter\\<^sub>\\<nu> X p \\<nu>)) \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X\"\n  \"\\<not> snd p \\<sim> false\\<^sub>n \\<Longrightarrow> nested_prop_atoms (snd (af_letter\\<^sub>\\<nu> X p \\<nu>)) \\<subseteq> nested_prop_atoms (snd p)\"", "lemma af_letter\\<^sub>\\<nu>_fst_nested_prop_atoms:\n  \"nested_prop_atoms (fst (af_letter\\<^sub>\\<nu> X p \\<nu>)) \\<subseteq> nested_prop_atoms (fst p)\"", "lemma af_letter\\<^sub>\\<nu>_snd_nested_prop_atoms:\n  \"nested_prop_atoms (snd (af_letter\\<^sub>\\<nu> X p \\<nu>)) \\<subseteq> (nested_prop_atoms\\<^sub>\\<nu> (fst p) X) \\<union> (nested_prop_atoms (snd p))\"", "lemma af_letter\\<^sub>\\<nu>_fst_range:\n  \"range (fst \\<circ> af_letter\\<^sub>\\<nu> X p) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (fst p)}\"", "lemma af_letter\\<^sub>\\<nu>_snd_range:\n  \"range (snd \\<circ> af_letter\\<^sub>\\<nu> X p) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> (nested_prop_atoms\\<^sub>\\<nu> (fst p) X) \\<union> nested_prop_atoms (snd p)}\"", "lemma af_letter\\<^sub>\\<nu>_range:\n  \"range (af_letter\\<^sub>\\<nu> X p) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (fst p)} \\<times> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> (nested_prop_atoms\\<^sub>\\<nu> (fst p) X) \\<union> nested_prop_atoms (snd p)}\"", "lemma af\\<^sub>\\<nu>_fst_nested_prop_atoms:\n  \"nested_prop_atoms (fst (af\\<^sub>\\<nu> X p w)) \\<subseteq> nested_prop_atoms (fst p)\"", "lemma af_letter_nested_prop_atoms\\<^sub>\\<nu>:\n  \"nested_prop_atoms\\<^sub>\\<nu> (af_letter \\<phi> \\<nu>) X \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> \\<phi> X\"", "lemma af\\<^sub>\\<nu>_fst_nested_prop_atoms\\<^sub>\\<nu>:\n  \"nested_prop_atoms\\<^sub>\\<nu> (fst (af\\<^sub>\\<nu> X p w)) X \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X\"", "lemma af\\<^sub>\\<nu>_fst_range:\n  \"range (fst \\<circ> af\\<^sub>\\<nu> X p) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (fst p)}\"", "lemma af\\<^sub>\\<nu>_snd_nested_prop_atoms:\n  \"nested_prop_atoms (snd (af\\<^sub>\\<nu> X p w)) \\<subseteq> (nested_prop_atoms\\<^sub>\\<nu> (fst p) X) \\<union> (nested_prop_atoms (snd p))\"", "lemma af\\<^sub>\\<nu>_snd_range:\n  \"range (snd \\<circ> af\\<^sub>\\<nu> X p) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> (nested_prop_atoms\\<^sub>\\<nu> (fst p) X) \\<union> nested_prop_atoms (snd p)}\"", "lemma af\\<^sub>\\<nu>_range:\n  \"range (af\\<^sub>\\<nu> X p) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (fst p)} \\<times> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> (nested_prop_atoms\\<^sub>\\<nu> (fst p) X) \\<union> nested_prop_atoms (snd p)}\""], "translations": [["", "lemma af\\<^sub>F_step:\n  \"af\\<^sub>F \\<phi> \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> (w @ [\\<nu>]) = F\\<^sub>n \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. af\\<^sub>F \\<phi> \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow>\n    af\\<^sub>F \\<phi> \\<psi> (w @ [\\<nu>]) = F\\<^sub>n \\<phi>", "by (induction w rule: rev_induct) (auto simp: af_letter\\<^sub>F_def)"], ["", "lemma af\\<^sub>G_step:\n  \"af\\<^sub>G \\<phi> \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> (w @ [\\<nu>]) = G\\<^sub>n \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. af\\<^sub>G \\<phi> \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow>\n    af\\<^sub>G \\<phi> \\<psi> (w @ [\\<nu>]) = G\\<^sub>n \\<phi>", "by (induction w rule: rev_induct) (auto simp: af_letter\\<^sub>G_def)"], ["", "lemma af\\<^sub>F_segments:\n  \"af\\<^sub>F \\<phi> \\<psi> w = F\\<^sub>n \\<phi> \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> (w @ w') = af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) w'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. af\\<^sub>F \\<phi> \\<psi> w = F\\<^sub>n \\<phi> \\<Longrightarrow>\n    af\\<^sub>F \\<phi> \\<psi> (w @ w') =\n    af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) w'", "by simp"], ["", "lemma af\\<^sub>G_segments:\n  \"af\\<^sub>G \\<phi> \\<psi> w = G\\<^sub>n \\<phi> \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> (w @ w') = af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) w'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. af\\<^sub>G \\<phi> \\<psi> w = G\\<^sub>n \\<phi> \\<Longrightarrow>\n    af\\<^sub>G \\<phi> \\<psi> (w @ w') =\n    af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) w'", "by simp"], ["", "lemma af_not_true_implies_af_equals_af\\<^sub>F:\n  \"(\\<And>xs ys. w = xs @ ys \\<Longrightarrow> \\<not> af \\<psi> xs \\<sim> true\\<^sub>n) \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> w = af \\<psi> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xs ys.\n        w = xs @ ys \\<Longrightarrow>\n        \\<not> af \\<psi> xs \\<sim> true\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>F \\<phi> \\<psi> w = af \\<psi> w", "proof (induction w rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af \\<psi> xs \\<sim> true\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>F \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af \\<psi> xsa \\<sim>\n                           true\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af \\<psi> xsa \\<sim> true\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "case (snoc x xs)"], ["proof (state)\nthis:\n  (\\<And>xsa ys.\n      xs = xsa @ ys \\<Longrightarrow>\n      \\<not> af \\<psi> xsa \\<sim> true\\<^sub>n) \\<Longrightarrow>\n  af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs\n  xs @ [x] = ?xs @ ?ys \\<Longrightarrow>\n  \\<not> af \\<psi> ?xs \\<sim> true\\<^sub>n\n\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af \\<psi> xs \\<sim> true\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>F \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af \\<psi> xsa \\<sim>\n                           true\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af \\<psi> xsa \\<sim> true\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "then"], ["proof (chain)\npicking this:\n  (\\<And>xsa ys.\n      xs = xsa @ ys \\<Longrightarrow>\n      \\<not> af \\<psi> xsa \\<sim> true\\<^sub>n) \\<Longrightarrow>\n  af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs\n  xs @ [x] = ?xs @ ?ys \\<Longrightarrow>\n  \\<not> af \\<psi> ?xs \\<sim> true\\<^sub>n", "have \"af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs\""], ["proof (prove)\nusing this:\n  (\\<And>xsa ys.\n      xs = xsa @ ys \\<Longrightarrow>\n      \\<not> af \\<psi> xsa \\<sim> true\\<^sub>n) \\<Longrightarrow>\n  af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs\n  xs @ [x] = ?xs @ ?ys \\<Longrightarrow>\n  \\<not> af \\<psi> ?xs \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs", "by simp"], ["proof (state)\nthis:\n  af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs\n\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af \\<psi> xs \\<sim> true\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>F \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af \\<psi> xsa \\<sim>\n                           true\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af \\<psi> xsa \\<sim> true\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "moreover"], ["proof (state)\nthis:\n  af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs\n\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af \\<psi> xs \\<sim> true\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>F \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af \\<psi> xsa \\<sim>\n                           true\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af \\<psi> xsa \\<sim> true\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "have \"\\<not> af \\<psi> xs \\<sim> true\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> af \\<psi> xs \\<sim> true\\<^sub>n", "using snoc.prems"], ["proof (prove)\nusing this:\n  xs @ [x] = ?xs @ ?ys \\<Longrightarrow>\n  \\<not> af \\<psi> ?xs \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<not> af \\<psi> xs \\<sim> true\\<^sub>n", "by blast"], ["proof (state)\nthis:\n  \\<not> af \\<psi> xs \\<sim> true\\<^sub>n\n\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af \\<psi> xs \\<sim> true\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>F \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af \\<psi> xsa \\<sim>\n                           true\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af \\<psi> xsa \\<sim> true\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "ultimately"], ["proof (chain)\npicking this:\n  af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs\n  \\<not> af \\<psi> xs \\<sim> true\\<^sub>n", "show ?case"], ["proof (prove)\nusing this:\n  af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs\n  \\<not> af \\<psi> xs \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>F \\<phi> \\<psi> (xs @ [x]) = af \\<psi> (xs @ [x])", "by (metis af_letter\\<^sub>F_def foldl_Cons foldl_Nil foldl_append)"], ["proof (state)\nthis:\n  af\\<^sub>F \\<phi> \\<psi> (xs @ [x]) = af \\<psi> (xs @ [x])\n\ngoal (1 subgoal):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af \\<psi> xs \\<sim> true\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>F \\<phi> \\<psi> [] = af \\<psi> []", "qed simp"], ["", "lemma af_not_false_implies_af_equals_af\\<^sub>G:\n  \"(\\<And>xs ys. w = xs @ ys \\<Longrightarrow> \\<not> af \\<psi> xs \\<sim> false\\<^sub>n) \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> w = af \\<psi> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xs ys.\n        w = xs @ ys \\<Longrightarrow>\n        \\<not> af \\<psi> xs \\<sim> false\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>G \\<phi> \\<psi> w = af \\<psi> w", "proof (induction w rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af \\<psi> xs \\<sim> false\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>G \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af \\<psi> xsa \\<sim>\n                           false\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af \\<psi> xsa \\<sim> false\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "case (snoc x xs)"], ["proof (state)\nthis:\n  (\\<And>xsa ys.\n      xs = xsa @ ys \\<Longrightarrow>\n      \\<not> af \\<psi> xsa \\<sim> false\\<^sub>n) \\<Longrightarrow>\n  af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs\n  xs @ [x] = ?xs @ ?ys \\<Longrightarrow>\n  \\<not> af \\<psi> ?xs \\<sim> false\\<^sub>n\n\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af \\<psi> xs \\<sim> false\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>G \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af \\<psi> xsa \\<sim>\n                           false\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af \\<psi> xsa \\<sim> false\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "then"], ["proof (chain)\npicking this:\n  (\\<And>xsa ys.\n      xs = xsa @ ys \\<Longrightarrow>\n      \\<not> af \\<psi> xsa \\<sim> false\\<^sub>n) \\<Longrightarrow>\n  af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs\n  xs @ [x] = ?xs @ ?ys \\<Longrightarrow>\n  \\<not> af \\<psi> ?xs \\<sim> false\\<^sub>n", "have \"af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs\""], ["proof (prove)\nusing this:\n  (\\<And>xsa ys.\n      xs = xsa @ ys \\<Longrightarrow>\n      \\<not> af \\<psi> xsa \\<sim> false\\<^sub>n) \\<Longrightarrow>\n  af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs\n  xs @ [x] = ?xs @ ?ys \\<Longrightarrow>\n  \\<not> af \\<psi> ?xs \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs", "by simp"], ["proof (state)\nthis:\n  af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs\n\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af \\<psi> xs \\<sim> false\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>G \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af \\<psi> xsa \\<sim>\n                           false\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af \\<psi> xsa \\<sim> false\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "moreover"], ["proof (state)\nthis:\n  af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs\n\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af \\<psi> xs \\<sim> false\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>G \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af \\<psi> xsa \\<sim>\n                           false\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af \\<psi> xsa \\<sim> false\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "have \"\\<not> af \\<psi> xs \\<sim> false\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> af \\<psi> xs \\<sim> false\\<^sub>n", "using snoc.prems"], ["proof (prove)\nusing this:\n  xs @ [x] = ?xs @ ?ys \\<Longrightarrow>\n  \\<not> af \\<psi> ?xs \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<not> af \\<psi> xs \\<sim> false\\<^sub>n", "by blast"], ["proof (state)\nthis:\n  \\<not> af \\<psi> xs \\<sim> false\\<^sub>n\n\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af \\<psi> xs \\<sim> false\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>G \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af \\<psi> xsa \\<sim>\n                           false\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af \\<psi> xsa \\<sim> false\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "ultimately"], ["proof (chain)\npicking this:\n  af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs\n  \\<not> af \\<psi> xs \\<sim> false\\<^sub>n", "show ?case"], ["proof (prove)\nusing this:\n  af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs\n  \\<not> af \\<psi> xs \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>G \\<phi> \\<psi> (xs @ [x]) = af \\<psi> (xs @ [x])", "by (metis af_letter\\<^sub>G_def foldl_Cons foldl_Nil foldl_append)"], ["proof (state)\nthis:\n  af\\<^sub>G \\<phi> \\<psi> (xs @ [x]) = af \\<psi> (xs @ [x])\n\ngoal (1 subgoal):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af \\<psi> xs \\<sim> false\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>G \\<phi> \\<psi> [] = af \\<psi> []", "qed simp"], ["", "lemma af\\<^sub>F_not_true_implies_af_equals_af\\<^sub>F:\n  \"(\\<And>xs ys. w = xs @ ys \\<Longrightarrow> \\<not> af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n) \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> w = af \\<psi> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xs ys.\n        w = xs @ ys \\<Longrightarrow>\n        \\<not> af\\<^sub>F \\<phi> \\<psi> xs \\<sim>\n               true\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>F \\<phi> \\<psi> w = af \\<psi> w", "proof (induction w rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af\\<^sub>F \\<phi> \\<psi> xs \\<sim>\n               true\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>F \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af\\<^sub>F \\<phi> \\<psi> xsa \\<sim>\n                           true\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af\\<^sub>F \\<phi> \\<psi> xsa \\<sim> true\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "case (snoc x xs)"], ["proof (state)\nthis:\n  (\\<And>xsa ys.\n      xs = xsa @ ys \\<Longrightarrow>\n      \\<not> af\\<^sub>F \\<phi> \\<psi> xsa \\<sim>\n             true\\<^sub>n) \\<Longrightarrow>\n  af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs\n  xs @ [x] = ?xs @ ?ys \\<Longrightarrow>\n  \\<not> af\\<^sub>F \\<phi> \\<psi> ?xs \\<sim> true\\<^sub>n\n\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af\\<^sub>F \\<phi> \\<psi> xs \\<sim>\n               true\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>F \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af\\<^sub>F \\<phi> \\<psi> xsa \\<sim>\n                           true\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af\\<^sub>F \\<phi> \\<psi> xsa \\<sim> true\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "then"], ["proof (chain)\npicking this:\n  (\\<And>xsa ys.\n      xs = xsa @ ys \\<Longrightarrow>\n      \\<not> af\\<^sub>F \\<phi> \\<psi> xsa \\<sim>\n             true\\<^sub>n) \\<Longrightarrow>\n  af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs\n  xs @ [x] = ?xs @ ?ys \\<Longrightarrow>\n  \\<not> af\\<^sub>F \\<phi> \\<psi> ?xs \\<sim> true\\<^sub>n", "have \"af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs\""], ["proof (prove)\nusing this:\n  (\\<And>xsa ys.\n      xs = xsa @ ys \\<Longrightarrow>\n      \\<not> af\\<^sub>F \\<phi> \\<psi> xsa \\<sim>\n             true\\<^sub>n) \\<Longrightarrow>\n  af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs\n  xs @ [x] = ?xs @ ?ys \\<Longrightarrow>\n  \\<not> af\\<^sub>F \\<phi> \\<psi> ?xs \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs", "by simp"], ["proof (state)\nthis:\n  af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs\n\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af\\<^sub>F \\<phi> \\<psi> xs \\<sim>\n               true\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>F \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af\\<^sub>F \\<phi> \\<psi> xsa \\<sim>\n                           true\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af\\<^sub>F \\<phi> \\<psi> xsa \\<sim> true\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "moreover"], ["proof (state)\nthis:\n  af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs\n\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af\\<^sub>F \\<phi> \\<psi> xs \\<sim>\n               true\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>F \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af\\<^sub>F \\<phi> \\<psi> xsa \\<sim>\n                           true\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af\\<^sub>F \\<phi> \\<psi> xsa \\<sim> true\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "have \"\\<not> af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n", "using snoc.prems"], ["proof (prove)\nusing this:\n  xs @ [x] = ?xs @ ?ys \\<Longrightarrow>\n  \\<not> af\\<^sub>F \\<phi> \\<psi> ?xs \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<not> af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n", "by blast"], ["proof (state)\nthis:\n  \\<not> af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n\n\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af\\<^sub>F \\<phi> \\<psi> xs \\<sim>\n               true\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>F \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af\\<^sub>F \\<phi> \\<psi> xsa \\<sim>\n                           true\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af\\<^sub>F \\<phi> \\<psi> xsa \\<sim> true\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>F \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "ultimately"], ["proof (chain)\npicking this:\n  af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs\n  \\<not> af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n", "show ?case"], ["proof (prove)\nusing this:\n  af\\<^sub>F \\<phi> \\<psi> xs = af \\<psi> xs\n  \\<not> af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>F \\<phi> \\<psi> (xs @ [x]) = af \\<psi> (xs @ [x])", "by (metis af_letter\\<^sub>F_def foldl_Cons foldl_Nil foldl_append)"], ["proof (state)\nthis:\n  af\\<^sub>F \\<phi> \\<psi> (xs @ [x]) = af \\<psi> (xs @ [x])\n\ngoal (1 subgoal):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af\\<^sub>F \\<phi> \\<psi> xs \\<sim>\n               true\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>F \\<phi> \\<psi> [] = af \\<psi> []", "qed simp"], ["", "lemma af\\<^sub>G_not_false_implies_af_equals_af\\<^sub>G:\n  \"(\\<And>xs ys. w = xs @ ys \\<Longrightarrow> \\<not> af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n) \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> w = af \\<psi> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xs ys.\n        w = xs @ ys \\<Longrightarrow>\n        \\<not> af\\<^sub>G \\<phi> \\<psi> xs \\<sim>\n               false\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>G \\<phi> \\<psi> w = af \\<psi> w", "proof (induction w rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af\\<^sub>G \\<phi> \\<psi> xs \\<sim>\n               false\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>G \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af\\<^sub>G \\<phi> \\<psi> xsa \\<sim>\n                           false\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af\\<^sub>G \\<phi> \\<psi> xsa \\<sim> false\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "case (snoc x xs)"], ["proof (state)\nthis:\n  (\\<And>xsa ys.\n      xs = xsa @ ys \\<Longrightarrow>\n      \\<not> af\\<^sub>G \\<phi> \\<psi> xsa \\<sim>\n             false\\<^sub>n) \\<Longrightarrow>\n  af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs\n  xs @ [x] = ?xs @ ?ys \\<Longrightarrow>\n  \\<not> af\\<^sub>G \\<phi> \\<psi> ?xs \\<sim> false\\<^sub>n\n\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af\\<^sub>G \\<phi> \\<psi> xs \\<sim>\n               false\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>G \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af\\<^sub>G \\<phi> \\<psi> xsa \\<sim>\n                           false\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af\\<^sub>G \\<phi> \\<psi> xsa \\<sim> false\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "then"], ["proof (chain)\npicking this:\n  (\\<And>xsa ys.\n      xs = xsa @ ys \\<Longrightarrow>\n      \\<not> af\\<^sub>G \\<phi> \\<psi> xsa \\<sim>\n             false\\<^sub>n) \\<Longrightarrow>\n  af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs\n  xs @ [x] = ?xs @ ?ys \\<Longrightarrow>\n  \\<not> af\\<^sub>G \\<phi> \\<psi> ?xs \\<sim> false\\<^sub>n", "have \"af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs\""], ["proof (prove)\nusing this:\n  (\\<And>xsa ys.\n      xs = xsa @ ys \\<Longrightarrow>\n      \\<not> af\\<^sub>G \\<phi> \\<psi> xsa \\<sim>\n             false\\<^sub>n) \\<Longrightarrow>\n  af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs\n  xs @ [x] = ?xs @ ?ys \\<Longrightarrow>\n  \\<not> af\\<^sub>G \\<phi> \\<psi> ?xs \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs", "by simp"], ["proof (state)\nthis:\n  af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs\n\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af\\<^sub>G \\<phi> \\<psi> xs \\<sim>\n               false\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>G \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af\\<^sub>G \\<phi> \\<psi> xsa \\<sim>\n                           false\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af\\<^sub>G \\<phi> \\<psi> xsa \\<sim> false\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "moreover"], ["proof (state)\nthis:\n  af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs\n\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af\\<^sub>G \\<phi> \\<psi> xs \\<sim>\n               false\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>G \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af\\<^sub>G \\<phi> \\<psi> xsa \\<sim>\n                           false\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af\\<^sub>G \\<phi> \\<psi> xsa \\<sim> false\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "have \"\\<not> af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n", "using snoc.prems"], ["proof (prove)\nusing this:\n  xs @ [x] = ?xs @ ?ys \\<Longrightarrow>\n  \\<not> af\\<^sub>G \\<phi> \\<psi> ?xs \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<not> af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n", "by blast"], ["proof (state)\nthis:\n  \\<not> af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n\n\ngoal (2 subgoals):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af\\<^sub>G \\<phi> \\<psi> xs \\<sim>\n               false\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>G \\<phi> \\<psi> [] = af \\<psi> []\n 2. \\<And>x xs.\n       \\<lbrakk>(\\<And>xsa ys.\n                    xs = xsa @ ys \\<Longrightarrow>\n                    \\<not> af\\<^sub>G \\<phi> \\<psi> xsa \\<sim>\n                           false\\<^sub>n) \\<Longrightarrow>\n                af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs;\n        \\<And>xsa ys.\n           xs @ [x] = xsa @ ys \\<Longrightarrow>\n           \\<not> af\\<^sub>G \\<phi> \\<psi> xsa \\<sim> false\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> af\\<^sub>G \\<phi> \\<psi> (xs @ [x]) =\n                         af \\<psi> (xs @ [x])", "ultimately"], ["proof (chain)\npicking this:\n  af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs\n  \\<not> af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n", "show ?case"], ["proof (prove)\nusing this:\n  af\\<^sub>G \\<phi> \\<psi> xs = af \\<psi> xs\n  \\<not> af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>G \\<phi> \\<psi> (xs @ [x]) = af \\<psi> (xs @ [x])", "by (metis af_letter\\<^sub>G_def foldl_Cons foldl_Nil foldl_append)"], ["proof (state)\nthis:\n  af\\<^sub>G \\<phi> \\<psi> (xs @ [x]) = af \\<psi> (xs @ [x])\n\ngoal (1 subgoal):\n 1. (\\<And>xs ys.\n        [] = xs @ ys \\<Longrightarrow>\n        \\<not> af\\<^sub>G \\<phi> \\<psi> xs \\<sim>\n               false\\<^sub>n) \\<Longrightarrow>\n    af\\<^sub>G \\<phi> \\<psi> [] = af \\<psi> []", "qed simp"], ["", "lemma af\\<^sub>F_true_implies_af_true:\n  \"af\\<^sub>F \\<phi> \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow> af \\<psi> w \\<sim> true\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. af\\<^sub>F \\<phi> \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow>\n    af \\<psi> w \\<sim> true\\<^sub>n", "by (metis af_append_true af_not_true_implies_af_equals_af\\<^sub>F)"], ["", "lemma af\\<^sub>G_false_implies_af_false:\n  \"af\\<^sub>G \\<phi> \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow> af \\<psi> w \\<sim> false\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. af\\<^sub>G \\<phi> \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow>\n    af \\<psi> w \\<sim> false\\<^sub>n", "by (metis af_append_false af_not_false_implies_af_equals_af\\<^sub>G)"], ["", "lemma af_equiv_true_af\\<^sub>F_prefix_true:\n  \"af \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow> \\<exists>xs ys. w = xs @ ys \\<and> af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. af \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow>\n    \\<exists>xs ys.\n       w = xs @ ys \\<and> af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n", "proof (induction w rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. af \\<psi> [] \\<sim> true\\<^sub>n \\<Longrightarrow>\n    \\<exists>xs ys.\n       [] = xs @ ys \\<and> af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n\n 2. \\<And>x xs.\n       \\<lbrakk>af \\<psi> xs \\<sim> true\\<^sub>n \\<Longrightarrow>\n                \\<exists>xsa ys.\n                   xs = xsa @ ys \\<and>\n                   af\\<^sub>F \\<phi> \\<psi> xsa \\<sim> true\\<^sub>n;\n        af \\<psi> (xs @ [x]) \\<sim> true\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xsa ys.\n                            xs @ [x] = xsa @ ys \\<and>\n                            af\\<^sub>F \\<phi> \\<psi> xsa \\<sim> true\\<^sub>n", "case (snoc a w)"], ["proof (state)\nthis:\n  af \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow>\n  \\<exists>xs ys.\n     w = xs @ ys \\<and> af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n\n  af \\<psi> (w @ [a]) \\<sim> true\\<^sub>n\n\ngoal (2 subgoals):\n 1. af \\<psi> [] \\<sim> true\\<^sub>n \\<Longrightarrow>\n    \\<exists>xs ys.\n       [] = xs @ ys \\<and> af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n\n 2. \\<And>x xs.\n       \\<lbrakk>af \\<psi> xs \\<sim> true\\<^sub>n \\<Longrightarrow>\n                \\<exists>xsa ys.\n                   xs = xsa @ ys \\<and>\n                   af\\<^sub>F \\<phi> \\<psi> xsa \\<sim> true\\<^sub>n;\n        af \\<psi> (xs @ [x]) \\<sim> true\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xsa ys.\n                            xs @ [x] = xsa @ ys \\<and>\n                            af\\<^sub>F \\<phi> \\<psi> xsa \\<sim> true\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  af \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow>\n  \\<exists>xs ys.\n     w = xs @ ys \\<and> af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n\n  af \\<psi> (w @ [a]) \\<sim> true\\<^sub>n", "show ?case"], ["proof (prove)\nusing this:\n  af \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow>\n  \\<exists>xs ys.\n     w = xs @ ys \\<and> af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n\n  af \\<psi> (w @ [a]) \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<exists>xs ys.\n       w @ [a] = xs @ ys \\<and>\n       af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n", "proof (cases \"af \\<psi> w \\<sim> true\\<^sub>n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>af \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> true\\<^sub>n;\n     af \\<psi> w \\<sim> true\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n\n 2. \\<lbrakk>af \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> true\\<^sub>n;\n     \\<not> af \\<psi> w \\<sim> true\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n", "case False"], ["proof (state)\nthis:\n  \\<not> af \\<psi> w \\<sim> true\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>af \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> true\\<^sub>n;\n     af \\<psi> w \\<sim> true\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n\n 2. \\<lbrakk>af \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> true\\<^sub>n;\n     \\<not> af \\<psi> w \\<sim> true\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  \\<not> af \\<psi> w \\<sim> true\\<^sub>n", "have \"\\<And>xs ys. w = xs @ ys \\<Longrightarrow> \\<not> af \\<psi> xs \\<sim> true\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<not> af \\<psi> w \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<And>xs ys.\n       w = xs @ ys \\<Longrightarrow> \\<not> af \\<psi> xs \\<sim> true\\<^sub>n", "using af_append_true"], ["proof (prove)\nusing this:\n  \\<not> af \\<psi> w \\<sim> true\\<^sub>n\n  af ?\\<phi> ?w \\<sim> true\\<^sub>n \\<Longrightarrow>\n  af ?\\<phi> (?w @ ?w') \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<And>xs ys.\n       w = xs @ ys \\<Longrightarrow> \\<not> af \\<psi> xs \\<sim> true\\<^sub>n", "by blast"], ["proof (state)\nthis:\n  w = ?xs @ ?ys \\<Longrightarrow> \\<not> af \\<psi> ?xs \\<sim> true\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>af \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> true\\<^sub>n;\n     af \\<psi> w \\<sim> true\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n\n 2. \\<lbrakk>af \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> true\\<^sub>n;\n     \\<not> af \\<psi> w \\<sim> true\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  w = ?xs @ ?ys \\<Longrightarrow> \\<not> af \\<psi> ?xs \\<sim> true\\<^sub>n", "have \"af\\<^sub>F \\<phi> \\<psi> w = af \\<psi> w\""], ["proof (prove)\nusing this:\n  w = ?xs @ ?ys \\<Longrightarrow> \\<not> af \\<psi> ?xs \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>F \\<phi> \\<psi> w = af \\<psi> w", "using af_not_true_implies_af_equals_af\\<^sub>F"], ["proof (prove)\nusing this:\n  w = ?xs @ ?ys \\<Longrightarrow> \\<not> af \\<psi> ?xs \\<sim> true\\<^sub>n\n  (\\<And>xs ys.\n      ?w = xs @ ys \\<Longrightarrow>\n      \\<not> af ?\\<psi> xs \\<sim> true\\<^sub>n) \\<Longrightarrow>\n  af\\<^sub>F ?\\<phi> ?\\<psi> ?w = af ?\\<psi> ?w\n\ngoal (1 subgoal):\n 1. af\\<^sub>F \\<phi> \\<psi> w = af \\<psi> w", "by auto"], ["proof (state)\nthis:\n  af\\<^sub>F \\<phi> \\<psi> w = af \\<psi> w\n\ngoal (2 subgoals):\n 1. \\<lbrakk>af \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> true\\<^sub>n;\n     af \\<psi> w \\<sim> true\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n\n 2. \\<lbrakk>af \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> true\\<^sub>n;\n     \\<not> af \\<psi> w \\<sim> true\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  af\\<^sub>F \\<phi> \\<psi> w = af \\<psi> w", "have \"af\\<^sub>F \\<phi> \\<psi> (w @ [a]) = af \\<psi> (w @ [a])\""], ["proof (prove)\nusing this:\n  af\\<^sub>F \\<phi> \\<psi> w = af \\<psi> w\n\ngoal (1 subgoal):\n 1. af\\<^sub>F \\<phi> \\<psi> (w @ [a]) = af \\<psi> (w @ [a])", "by (simp add: False af_letter\\<^sub>F_def)"], ["proof (state)\nthis:\n  af\\<^sub>F \\<phi> \\<psi> (w @ [a]) = af \\<psi> (w @ [a])\n\ngoal (2 subgoals):\n 1. \\<lbrakk>af \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> true\\<^sub>n;\n     af \\<psi> w \\<sim> true\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n\n 2. \\<lbrakk>af \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> true\\<^sub>n;\n     \\<not> af \\<psi> w \\<sim> true\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  af\\<^sub>F \\<phi> \\<psi> (w @ [a]) = af \\<psi> (w @ [a])", "show ?thesis"], ["proof (prove)\nusing this:\n  af\\<^sub>F \\<phi> \\<psi> (w @ [a]) = af \\<psi> (w @ [a])\n\ngoal (1 subgoal):\n 1. \\<exists>xs ys.\n       w @ [a] = xs @ ys \\<and>\n       af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n", "by (metis append_Nil2 snoc.prems)"], ["proof (state)\nthis:\n  \\<exists>xs ys.\n     w @ [a] = xs @ ys \\<and>\n     af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>af \\<psi> w \\<sim> true\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> true\\<^sub>n;\n     af \\<psi> w \\<sim> true\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n", "qed (insert snoc, force)"], ["proof (state)\nthis:\n  \\<exists>xs ys.\n     w @ [a] = xs @ ys \\<and>\n     af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. af \\<psi> [] \\<sim> true\\<^sub>n \\<Longrightarrow>\n    \\<exists>xs ys.\n       [] = xs @ ys \\<and> af\\<^sub>F \\<phi> \\<psi> xs \\<sim> true\\<^sub>n", "qed (simp add: const_implies_eq)"], ["", "lemma af_equiv_false_af\\<^sub>G_prefix_false:\n  \"af \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow> \\<exists>xs ys. w = xs @ ys \\<and> af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. af \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow>\n    \\<exists>xs ys.\n       w = xs @ ys \\<and> af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n", "proof (induction w rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. af \\<psi> [] \\<sim> false\\<^sub>n \\<Longrightarrow>\n    \\<exists>xs ys.\n       [] = xs @ ys \\<and> af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n\n 2. \\<And>x xs.\n       \\<lbrakk>af \\<psi> xs \\<sim> false\\<^sub>n \\<Longrightarrow>\n                \\<exists>xsa ys.\n                   xs = xsa @ ys \\<and>\n                   af\\<^sub>G \\<phi> \\<psi> xsa \\<sim> false\\<^sub>n;\n        af \\<psi> (xs @ [x]) \\<sim> false\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xsa ys.\n                            xs @ [x] = xsa @ ys \\<and>\n                            af\\<^sub>G \\<phi> \\<psi> xsa \\<sim>\n                            false\\<^sub>n", "case (snoc a w)"], ["proof (state)\nthis:\n  af \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow>\n  \\<exists>xs ys.\n     w = xs @ ys \\<and> af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n\n  af \\<psi> (w @ [a]) \\<sim> false\\<^sub>n\n\ngoal (2 subgoals):\n 1. af \\<psi> [] \\<sim> false\\<^sub>n \\<Longrightarrow>\n    \\<exists>xs ys.\n       [] = xs @ ys \\<and> af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n\n 2. \\<And>x xs.\n       \\<lbrakk>af \\<psi> xs \\<sim> false\\<^sub>n \\<Longrightarrow>\n                \\<exists>xsa ys.\n                   xs = xsa @ ys \\<and>\n                   af\\<^sub>G \\<phi> \\<psi> xsa \\<sim> false\\<^sub>n;\n        af \\<psi> (xs @ [x]) \\<sim> false\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xsa ys.\n                            xs @ [x] = xsa @ ys \\<and>\n                            af\\<^sub>G \\<phi> \\<psi> xsa \\<sim>\n                            false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  af \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow>\n  \\<exists>xs ys.\n     w = xs @ ys \\<and> af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n\n  af \\<psi> (w @ [a]) \\<sim> false\\<^sub>n", "show ?case"], ["proof (prove)\nusing this:\n  af \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow>\n  \\<exists>xs ys.\n     w = xs @ ys \\<and> af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n\n  af \\<psi> (w @ [a]) \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<exists>xs ys.\n       w @ [a] = xs @ ys \\<and>\n       af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n", "proof (cases \"af \\<psi> w \\<sim> false\\<^sub>n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>af \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> false\\<^sub>n;\n     af \\<psi> w \\<sim> false\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n\n 2. \\<lbrakk>af \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> false\\<^sub>n;\n     \\<not> af \\<psi> w \\<sim> false\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n", "case False"], ["proof (state)\nthis:\n  \\<not> af \\<psi> w \\<sim> false\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>af \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> false\\<^sub>n;\n     af \\<psi> w \\<sim> false\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n\n 2. \\<lbrakk>af \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> false\\<^sub>n;\n     \\<not> af \\<psi> w \\<sim> false\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  \\<not> af \\<psi> w \\<sim> false\\<^sub>n", "have \"\\<And>xs ys. w = xs @ ys \\<Longrightarrow> \\<not> af \\<psi> xs \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<not> af \\<psi> w \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<And>xs ys.\n       w = xs @ ys \\<Longrightarrow>\n       \\<not> af \\<psi> xs \\<sim> false\\<^sub>n", "using af_append_false"], ["proof (prove)\nusing this:\n  \\<not> af \\<psi> w \\<sim> false\\<^sub>n\n  af ?\\<phi> ?w \\<sim> false\\<^sub>n \\<Longrightarrow>\n  af ?\\<phi> (?w @ ?w') \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<And>xs ys.\n       w = xs @ ys \\<Longrightarrow>\n       \\<not> af \\<psi> xs \\<sim> false\\<^sub>n", "by blast"], ["proof (state)\nthis:\n  w = ?xs @ ?ys \\<Longrightarrow> \\<not> af \\<psi> ?xs \\<sim> false\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>af \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> false\\<^sub>n;\n     af \\<psi> w \\<sim> false\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n\n 2. \\<lbrakk>af \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> false\\<^sub>n;\n     \\<not> af \\<psi> w \\<sim> false\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  w = ?xs @ ?ys \\<Longrightarrow> \\<not> af \\<psi> ?xs \\<sim> false\\<^sub>n", "have \"af\\<^sub>G \\<phi> \\<psi> w = af \\<psi> w\""], ["proof (prove)\nusing this:\n  w = ?xs @ ?ys \\<Longrightarrow> \\<not> af \\<psi> ?xs \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>G \\<phi> \\<psi> w = af \\<psi> w", "using af_not_false_implies_af_equals_af\\<^sub>G"], ["proof (prove)\nusing this:\n  w = ?xs @ ?ys \\<Longrightarrow> \\<not> af \\<psi> ?xs \\<sim> false\\<^sub>n\n  (\\<And>xs ys.\n      ?w = xs @ ys \\<Longrightarrow>\n      \\<not> af ?\\<psi> xs \\<sim> false\\<^sub>n) \\<Longrightarrow>\n  af\\<^sub>G ?\\<phi> ?\\<psi> ?w = af ?\\<psi> ?w\n\ngoal (1 subgoal):\n 1. af\\<^sub>G \\<phi> \\<psi> w = af \\<psi> w", "by auto"], ["proof (state)\nthis:\n  af\\<^sub>G \\<phi> \\<psi> w = af \\<psi> w\n\ngoal (2 subgoals):\n 1. \\<lbrakk>af \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> false\\<^sub>n;\n     af \\<psi> w \\<sim> false\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n\n 2. \\<lbrakk>af \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> false\\<^sub>n;\n     \\<not> af \\<psi> w \\<sim> false\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  af\\<^sub>G \\<phi> \\<psi> w = af \\<psi> w", "have \"af\\<^sub>G \\<phi> \\<psi> (w @ [a]) = af \\<psi> (w @ [a])\""], ["proof (prove)\nusing this:\n  af\\<^sub>G \\<phi> \\<psi> w = af \\<psi> w\n\ngoal (1 subgoal):\n 1. af\\<^sub>G \\<phi> \\<psi> (w @ [a]) = af \\<psi> (w @ [a])", "by (simp add: False af_letter\\<^sub>G_def)"], ["proof (state)\nthis:\n  af\\<^sub>G \\<phi> \\<psi> (w @ [a]) = af \\<psi> (w @ [a])\n\ngoal (2 subgoals):\n 1. \\<lbrakk>af \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> false\\<^sub>n;\n     af \\<psi> w \\<sim> false\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n\n 2. \\<lbrakk>af \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> false\\<^sub>n;\n     \\<not> af \\<psi> w \\<sim> false\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  af\\<^sub>G \\<phi> \\<psi> (w @ [a]) = af \\<psi> (w @ [a])", "show ?thesis"], ["proof (prove)\nusing this:\n  af\\<^sub>G \\<phi> \\<psi> (w @ [a]) = af \\<psi> (w @ [a])\n\ngoal (1 subgoal):\n 1. \\<exists>xs ys.\n       w @ [a] = xs @ ys \\<and>\n       af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n", "by (metis append_Nil2 snoc.prems)"], ["proof (state)\nthis:\n  \\<exists>xs ys.\n     w @ [a] = xs @ ys \\<and>\n     af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>af \\<psi> w \\<sim> false\\<^sub>n \\<Longrightarrow>\n             \\<exists>xs ys.\n                w = xs @ ys \\<and>\n                af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n;\n     af \\<psi> (w @ [a]) \\<sim> false\\<^sub>n;\n     af \\<psi> w \\<sim> false\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs ys.\n                         w @ [a] = xs @ ys \\<and>\n                         af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n", "qed (insert snoc, force)"], ["proof (state)\nthis:\n  \\<exists>xs ys.\n     w @ [a] = xs @ ys \\<and>\n     af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. af \\<psi> [] \\<sim> false\\<^sub>n \\<Longrightarrow>\n    \\<exists>xs ys.\n       [] = xs @ ys \\<and> af\\<^sub>G \\<phi> \\<psi> xs \\<sim> false\\<^sub>n", "qed (simp add: const_implies_eq)"], ["", "lemma append_take_drop:\n  \"w = xs @ ys \\<longleftrightarrow> xs = take (length xs) w \\<and> ys = drop (length xs) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w = xs @ ys) = (xs = take (length xs) w \\<and> ys = drop (length xs) w)", "by (metis append_eq_conv_conj)"], ["", "lemma subsequence_split:\n  \"(w [i \\<rightarrow> j]) = xs @ ys \\<Longrightarrow> xs = (w [i \\<rightarrow> i + length xs])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w [i \\<rightarrow> j] = xs @ ys \\<Longrightarrow>\n    xs = w [i \\<rightarrow> i + length xs]", "by (simp add: append_take_drop) (metis add_diff_cancel_left' subsequence_length subsequence_prefix_suffix)"], ["", "lemma subsequence_append_general:\n  \"i \\<le> k \\<Longrightarrow> k \\<le> j \\<Longrightarrow> (w [i \\<rightarrow> j]) = (w [i \\<rightarrow> k]) @ (w [k \\<rightarrow> j])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> k; k \\<le> j\\<rbrakk>\n    \\<Longrightarrow> w [i \\<rightarrow> j] =\n                      w [i \\<rightarrow> k] @ w [k \\<rightarrow> j]", "by (metis le_Suc_ex map_append subsequence_def upt_add_eq_append)"], ["", "lemma af\\<^sub>F_semantics_rtl:\n  assumes\n    \"\\<forall>i. \\<exists>j>i. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [0 \\<rightarrow> j]) \\<sim> true\\<^sub>n\"\n  shows\n    \"\\<forall>i. \\<exists>j. af (F\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim>\\<^sub>L true\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>j.\n          af (F\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim>\\<^sub>L\n          true\\<^sub>n", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<exists>j.\n          af (F\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim>\\<^sub>L\n          true\\<^sub>n", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<exists>j.\n          af (F\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim>\\<^sub>L\n          true\\<^sub>n", "from assms"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     \\<exists>j>i.\n        af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n        true\\<^sub>n", "obtain j where \"j > i\" and \"af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [0 \\<rightarrow> j]) \\<sim> true\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     \\<exists>j>i.\n        af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n        true\\<^sub>n\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>i < j;\n         af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n         true\\<^sub>n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i < j\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<exists>j.\n          af (F\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim>\\<^sub>L\n          true\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  i < j\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim> true\\<^sub>n", "have X: \"af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [0 \\<rightarrow> Suc j]) = F\\<^sub>n \\<phi>\""], ["proof (prove)\nusing this:\n  i < j\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix (Suc j) w) =\n    F\\<^sub>n \\<phi>", "using af\\<^sub>F_step"], ["proof (prove)\nusing this:\n  i < j\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim> true\\<^sub>n\n  af\\<^sub>F ?\\<phi> ?\\<psi> ?w \\<sim> true\\<^sub>n \\<Longrightarrow>\n  af\\<^sub>F ?\\<phi> ?\\<psi> (?w @ [?\\<nu>]) = F\\<^sub>n ?\\<phi>\n\ngoal (1 subgoal):\n 1. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix (Suc j) w) =\n    F\\<^sub>n \\<phi>", "by auto"], ["proof (state)\nthis:\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix (Suc j) w) = F\\<^sub>n \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<exists>j.\n          af (F\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim>\\<^sub>L\n          true\\<^sub>n", "obtain k where \"k > j\" and \"af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [0 \\<rightarrow> k]) \\<sim> true\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>j < k;\n         af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix k w) \\<sim>\n         true\\<^sub>n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     \\<exists>j>i.\n        af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n        true\\<^sub>n\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>j < k;\n         af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix k w) \\<sim>\n         true\\<^sub>n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Suc_le_eq"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     \\<exists>j>i.\n        af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n        true\\<^sub>n\n  (Suc ?m \\<le> ?n) = (?m < ?n)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>j < k;\n         af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix k w) \\<sim>\n         true\\<^sub>n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  j < k\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix k w) \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<exists>j.\n          af (F\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim>\\<^sub>L\n          true\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  j < k\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix k w) \\<sim> true\\<^sub>n", "have \"af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim> true\\<^sub>n\""], ["proof (prove)\nusing this:\n  j < k\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix k w) \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\n    true\\<^sub>n", "using af\\<^sub>F_segments[OF X]"], ["proof (prove)\nusing this:\n  j < k\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix k w) \\<sim> true\\<^sub>n\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix (Suc j) w @ ?w') =\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) ?w'\n\ngoal (1 subgoal):\n 1. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\n    true\\<^sub>n", "by (metis le_Suc_ex le_simps(3) subsequence_append)"], ["proof (state)\nthis:\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\n  true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<exists>j.\n          af (F\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim>\\<^sub>L\n          true\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\n  true\\<^sub>n", "have \"af (F\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim> true\\<^sub>n\""], ["proof (prove)\nusing this:\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\n  true\\<^sub>n\n\ngoal (1 subgoal):\n 1. af (F\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim> true\\<^sub>n", "using af\\<^sub>F_true_implies_af_true"], ["proof (prove)\nusing this:\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\n  true\\<^sub>n\n  af\\<^sub>F ?\\<phi> ?\\<psi> ?w \\<sim> true\\<^sub>n \\<Longrightarrow>\n  af ?\\<psi> ?w \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. af (F\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim> true\\<^sub>n", "by blast"], ["proof (state)\nthis:\n  af (F\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<exists>j.\n          af (F\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim>\\<^sub>L\n          true\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  af (F\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim> true\\<^sub>n", "show \"\\<exists>k. af (F\\<^sub>n \\<phi>) (w [i \\<rightarrow> k]) \\<sim>\\<^sub>L true\\<^sub>n\""], ["proof (prove)\nusing this:\n  af (F\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       af (F\\<^sub>n \\<phi>) (w [i \\<rightarrow> k]) \\<sim>\\<^sub>L\n       true\\<^sub>n", "by (metis (full_types) af_F_prefix_lang_equiv_true eq_implies_lang subsequence_append_general Suc_le_eq \\<open>i < j\\<close> \\<open>j < k\\<close> less_SucI order.order_iff_strict)"], ["proof (state)\nthis:\n  \\<exists>k.\n     af (F\\<^sub>n \\<phi>) (w [i \\<rightarrow> k]) \\<sim>\\<^sub>L\n     true\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma af\\<^sub>F_semantics_ltr:\n  assumes\n    \"\\<forall>i. \\<exists>j. af (F\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim> true\\<^sub>n\"\n  shows\n    \"\\<forall>i. \\<exists>j>i. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [0 \\<rightarrow> j]) \\<sim> true\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>j>i.\n          af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n          true\\<^sub>n", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               \\<exists>j>i.\n                  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                  true\\<^sub>n) \\<Longrightarrow>\n    False", "define resets where \"resets = {i. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [0 \\<rightarrow> i]) \\<sim> true\\<^sub>n}\""], ["proof (state)\nthis:\n  resets =\n  {i. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix i w) \\<sim> true\\<^sub>n}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               \\<exists>j>i.\n                  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                  true\\<^sub>n) \\<Longrightarrow>\n    False", "define m where \"m = (if resets = {} then 0 else Suc (Max resets))\""], ["proof (state)\nthis:\n  m = (if resets = {} then 0 else Suc (Max resets))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               \\<exists>j>i.\n                  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                  true\\<^sub>n) \\<Longrightarrow>\n    False", "assume \"\\<not> (\\<forall>i. \\<exists>j>i. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [0 \\<rightarrow> j]) \\<sim> true\\<^sub>n)\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>i.\n             \\<exists>j>i.\n                af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                true\\<^sub>n)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               \\<exists>j>i.\n                  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                  true\\<^sub>n) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>i.\n             \\<exists>j>i.\n                af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                true\\<^sub>n)", "have \"finite resets\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>i.\n             \\<exists>j>i.\n                af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                true\\<^sub>n)\n\ngoal (1 subgoal):\n 1. finite resets", "using infinite_nat_iff_unbounded resets_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>i.\n             \\<exists>j>i.\n                af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                true\\<^sub>n)\n  infinite ?S = (\\<forall>m. \\<exists>n>m. n \\<in> ?S)\n  resets =\n  {i. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix i w) \\<sim> true\\<^sub>n}\n\ngoal (1 subgoal):\n 1. finite resets", "by force"], ["proof (state)\nthis:\n  finite resets\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               \\<exists>j>i.\n                  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                  true\\<^sub>n) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  finite resets", "have \"resets \\<noteq> {} \\<Longrightarrow> af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [0 \\<rightarrow> Max resets]) \\<sim> true\\<^sub>n\""], ["proof (prove)\nusing this:\n  finite resets\n\ngoal (1 subgoal):\n 1. resets \\<noteq> {} \\<Longrightarrow>\n    af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix (Max resets) w) \\<sim>\n    true\\<^sub>n", "unfolding resets_def"], ["proof (prove)\nusing this:\n  finite\n   {i. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n       true\\<^sub>n}\n\ngoal (1 subgoal):\n 1. {i. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n        true\\<^sub>n} \\<noteq>\n    {} \\<Longrightarrow>\n    af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>)\n     (prefix\n       (Max {i. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n                true\\<^sub>n})\n       w) \\<sim>\n    true\\<^sub>n", "using Max_in"], ["proof (prove)\nusing this:\n  finite\n   {i. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n       true\\<^sub>n}\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max ?A \\<in> ?A\n\ngoal (1 subgoal):\n 1. {i. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n        true\\<^sub>n} \\<noteq>\n    {} \\<Longrightarrow>\n    af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>)\n     (prefix\n       (Max {i. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n                true\\<^sub>n})\n       w) \\<sim>\n    true\\<^sub>n", "by blast"], ["proof (state)\nthis:\n  resets \\<noteq> {} \\<Longrightarrow>\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix (Max resets) w) \\<sim>\n  true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               \\<exists>j>i.\n                  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                  true\\<^sub>n) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  resets \\<noteq> {} \\<Longrightarrow>\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix (Max resets) w) \\<sim>\n  true\\<^sub>n", "have m_reset: \"af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [0 \\<rightarrow> m]) = F\\<^sub>n \\<phi>\""], ["proof (prove)\nusing this:\n  resets \\<noteq> {} \\<Longrightarrow>\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix (Max resets) w) \\<sim>\n  true\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix m w) = F\\<^sub>n \\<phi>", "unfolding m_def"], ["proof (prove)\nusing this:\n  resets \\<noteq> {} \\<Longrightarrow>\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix (Max resets) w) \\<sim>\n  true\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>)\n     (prefix (if resets = {} then 0 else Suc (Max resets)) w) =\n    F\\<^sub>n \\<phi>", "using af\\<^sub>F_step"], ["proof (prove)\nusing this:\n  resets \\<noteq> {} \\<Longrightarrow>\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix (Max resets) w) \\<sim>\n  true\\<^sub>n\n  af\\<^sub>F ?\\<phi> ?\\<psi> ?w \\<sim> true\\<^sub>n \\<Longrightarrow>\n  af\\<^sub>F ?\\<phi> ?\\<psi> (?w @ [?\\<nu>]) = F\\<^sub>n ?\\<phi>\n\ngoal (1 subgoal):\n 1. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>)\n     (prefix (if resets = {} then 0 else Suc (Max resets)) w) =\n    F\\<^sub>n \\<phi>", "by auto"], ["proof (state)\nthis:\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix m w) = F\\<^sub>n \\<phi>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               \\<exists>j>i.\n                  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                  true\\<^sub>n) \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix m w) = F\\<^sub>n \\<phi>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               \\<exists>j>i.\n                  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                  true\\<^sub>n) \\<Longrightarrow>\n    False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               \\<exists>j>i.\n                  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                  true\\<^sub>n) \\<Longrightarrow>\n    False", "assume \"i \\<ge> m\""], ["proof (state)\nthis:\n  m \\<le> i\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               \\<exists>j>i.\n                  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                  true\\<^sub>n) \\<Longrightarrow>\n    False", "with m_reset"], ["proof (chain)\npicking this:\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix m w) = F\\<^sub>n \\<phi>\n  m \\<le> i", "have \"\\<not> af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [0 \\<rightarrow> i]) \\<sim> true\\<^sub>n\""], ["proof (prove)\nusing this:\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix m w) = F\\<^sub>n \\<phi>\n  m \\<le> i\n\ngoal (1 subgoal):\n 1. \\<not> af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n           true\\<^sub>n", "by (metis (mono_tags, lifting) Max_ge_iff Suc_n_not_le_n \\<open>finite resets\\<close> empty_Collect_eq m_def mem_Collect_eq resets_def)"], ["proof (state)\nthis:\n  \\<not> af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n         true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               \\<exists>j>i.\n                  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                  true\\<^sub>n) \\<Longrightarrow>\n    False", "with m_reset"], ["proof (chain)\npicking this:\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix m w) = F\\<^sub>n \\<phi>\n  \\<not> af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n         true\\<^sub>n", "have \"\\<not> af\\<^sub>F \\<phi>  (F\\<^sub>n \\<phi>)(w [m \\<rightarrow> i]) \\<sim> true\\<^sub>n\""], ["proof (prove)\nusing this:\n  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix m w) = F\\<^sub>n \\<phi>\n  \\<not> af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n         true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<not> af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>)\n            (w [m \\<rightarrow> i]) \\<sim>\n           true\\<^sub>n", "by (metis (mono_tags, hide_lams) \\<open>m \\<le> i\\<close> af\\<^sub>F_segments bot_nat_def le0 subsequence_append_general)"], ["proof (state)\nthis:\n  \\<not> af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [m \\<rightarrow> i]) \\<sim>\n         true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               \\<exists>j>i.\n                  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                  true\\<^sub>n) \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  m \\<le> ?i2 \\<Longrightarrow>\n  \\<not> af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>)\n          (w [m \\<rightarrow> ?i2]) \\<sim>\n         true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               \\<exists>j>i.\n                  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                  true\\<^sub>n) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  m \\<le> ?i2 \\<Longrightarrow>\n  \\<not> af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>)\n          (w [m \\<rightarrow> ?i2]) \\<sim>\n         true\\<^sub>n", "have \"\\<nexists>j. af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [m \\<rightarrow> j]) \\<sim> true\\<^sub>n\""], ["proof (prove)\nusing this:\n  m \\<le> ?i2 \\<Longrightarrow>\n  \\<not> af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>)\n          (w [m \\<rightarrow> ?i2]) \\<sim>\n         true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<nexists>j.\n       af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [m \\<rightarrow> j]) \\<sim>\n       true\\<^sub>n", "by (metis le_cases subseq_to_smaller)"], ["proof (state)\nthis:\n  \\<nexists>j.\n     af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [m \\<rightarrow> j]) \\<sim>\n     true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               \\<exists>j>i.\n                  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                  true\\<^sub>n) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<nexists>j.\n     af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [m \\<rightarrow> j]) \\<sim>\n     true\\<^sub>n", "have \"\\<nexists>j. af (F\\<^sub>n \\<phi>) (w [m \\<rightarrow> j]) \\<sim> true\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<nexists>j.\n     af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (w [m \\<rightarrow> j]) \\<sim>\n     true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<nexists>j.\n       af (F\\<^sub>n \\<phi>) (w [m \\<rightarrow> j]) \\<sim> true\\<^sub>n", "by (metis af_equiv_true_af\\<^sub>F_prefix_true subsequence_split)"], ["proof (state)\nthis:\n  \\<nexists>j.\n     af (F\\<^sub>n \\<phi>) (w [m \\<rightarrow> j]) \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i.\n               \\<exists>j>i.\n                  af\\<^sub>F \\<phi> (F\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                  true\\<^sub>n) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<nexists>j.\n     af (F\\<^sub>n \\<phi>) (w [m \\<rightarrow> j]) \\<sim> true\\<^sub>n", "show False"], ["proof (prove)\nusing this:\n  \\<nexists>j.\n     af (F\\<^sub>n \\<phi>) (w [m \\<rightarrow> j]) \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  \\<nexists>j.\n     af (F\\<^sub>n \\<phi>) (w [m \\<rightarrow> j]) \\<sim> true\\<^sub>n\n  \\<forall>i.\n     \\<exists>j.\n        af (F\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim> true\\<^sub>n\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma af\\<^sub>G_semantics_rtl:\n  assumes\n    \"\\<exists>i. \\<forall>j>i. \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [0 \\<rightarrow> j]) \\<sim> false\\<^sub>n\"\n  shows\n    \"\\<exists>i. \\<forall>j. \\<not> af (G\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim> false\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<forall>j.\n          \\<not> af (G\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim>\n                 false\\<^sub>n", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>j.\n       \\<not> af (G\\<^sub>n \\<phi>) (w [?i \\<rightarrow> j]) \\<sim>\n              false\\<^sub>n", "define resets where \"resets = {i. af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [0 \\<rightarrow> i]) \\<sim> false\\<^sub>n}\""], ["proof (state)\nthis:\n  resets =\n  {i. af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n      false\\<^sub>n}\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       \\<not> af (G\\<^sub>n \\<phi>) (w [?i \\<rightarrow> j]) \\<sim>\n              false\\<^sub>n", "define m where \"m = (if resets = {} then 0 else Suc (Max resets))\""], ["proof (state)\nthis:\n  m = (if resets = {} then 0 else Suc (Max resets))\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       \\<not> af (G\\<^sub>n \\<phi>) (w [?i \\<rightarrow> j]) \\<sim>\n              false\\<^sub>n", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>i.\n     \\<forall>j>i.\n        \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n               false\\<^sub>n", "have \"finite resets\""], ["proof (prove)\nusing this:\n  \\<exists>i.\n     \\<forall>j>i.\n        \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n               false\\<^sub>n\n\ngoal (1 subgoal):\n 1. finite resets", "by (metis (mono_tags, lifting) infinite_nat_iff_unbounded mem_Collect_eq resets_def)"], ["proof (state)\nthis:\n  finite resets\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       \\<not> af (G\\<^sub>n \\<phi>) (w [?i \\<rightarrow> j]) \\<sim>\n              false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  finite resets", "have \"resets \\<noteq> {} \\<Longrightarrow> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [0 \\<rightarrow> Max resets]) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  finite resets\n\ngoal (1 subgoal):\n 1. resets \\<noteq> {} \\<Longrightarrow>\n    af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix (Max resets) w) \\<sim>\n    false\\<^sub>n", "unfolding resets_def"], ["proof (prove)\nusing this:\n  finite\n   {i. af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n       false\\<^sub>n}\n\ngoal (1 subgoal):\n 1. {i. af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n        false\\<^sub>n} \\<noteq>\n    {} \\<Longrightarrow>\n    af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>)\n     (prefix\n       (Max {i. af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n                false\\<^sub>n})\n       w) \\<sim>\n    false\\<^sub>n", "using Max_in"], ["proof (prove)\nusing this:\n  finite\n   {i. af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n       false\\<^sub>n}\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max ?A \\<in> ?A\n\ngoal (1 subgoal):\n 1. {i. af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n        false\\<^sub>n} \\<noteq>\n    {} \\<Longrightarrow>\n    af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>)\n     (prefix\n       (Max {i. af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n                false\\<^sub>n})\n       w) \\<sim>\n    false\\<^sub>n", "by blast"], ["proof (state)\nthis:\n  resets \\<noteq> {} \\<Longrightarrow>\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix (Max resets) w) \\<sim>\n  false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       \\<not> af (G\\<^sub>n \\<phi>) (w [?i \\<rightarrow> j]) \\<sim>\n              false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  resets \\<noteq> {} \\<Longrightarrow>\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix (Max resets) w) \\<sim>\n  false\\<^sub>n", "have m_reset: \"af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [0 \\<rightarrow> m]) = G\\<^sub>n \\<phi>\""], ["proof (prove)\nusing this:\n  resets \\<noteq> {} \\<Longrightarrow>\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix (Max resets) w) \\<sim>\n  false\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix m w) = G\\<^sub>n \\<phi>", "unfolding m_def"], ["proof (prove)\nusing this:\n  resets \\<noteq> {} \\<Longrightarrow>\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix (Max resets) w) \\<sim>\n  false\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>)\n     (prefix (if resets = {} then 0 else Suc (Max resets)) w) =\n    G\\<^sub>n \\<phi>", "using af\\<^sub>G_step"], ["proof (prove)\nusing this:\n  resets \\<noteq> {} \\<Longrightarrow>\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix (Max resets) w) \\<sim>\n  false\\<^sub>n\n  af\\<^sub>G ?\\<phi> ?\\<psi> ?w \\<sim> false\\<^sub>n \\<Longrightarrow>\n  af\\<^sub>G ?\\<phi> ?\\<psi> (?w @ [?\\<nu>]) = G\\<^sub>n ?\\<phi>\n\ngoal (1 subgoal):\n 1. af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>)\n     (prefix (if resets = {} then 0 else Suc (Max resets)) w) =\n    G\\<^sub>n \\<phi>", "by auto"], ["proof (state)\nthis:\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix m w) = G\\<^sub>n \\<phi>\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       \\<not> af (G\\<^sub>n \\<phi>) (w [?i \\<rightarrow> j]) \\<sim>\n              false\\<^sub>n", "{"], ["proof (state)\nthis:\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix m w) = G\\<^sub>n \\<phi>\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       \\<not> af (G\\<^sub>n \\<phi>) (w [?i \\<rightarrow> j]) \\<sim>\n              false\\<^sub>n", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>j.\n       \\<not> af (G\\<^sub>n \\<phi>) (w [?i \\<rightarrow> j]) \\<sim>\n              false\\<^sub>n", "assume \"i \\<ge> m\""], ["proof (state)\nthis:\n  m \\<le> i\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       \\<not> af (G\\<^sub>n \\<phi>) (w [?i \\<rightarrow> j]) \\<sim>\n              false\\<^sub>n", "with m_reset"], ["proof (chain)\npicking this:\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix m w) = G\\<^sub>n \\<phi>\n  m \\<le> i", "have \"\\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [0 \\<rightarrow> i]) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix m w) = G\\<^sub>n \\<phi>\n  m \\<le> i\n\ngoal (1 subgoal):\n 1. \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n           false\\<^sub>n", "by (metis (mono_tags, lifting) Max_ge_iff Suc_n_not_le_n \\<open>finite resets\\<close> empty_Collect_eq m_def mem_Collect_eq resets_def)"], ["proof (state)\nthis:\n  \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n         false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       \\<not> af (G\\<^sub>n \\<phi>) (w [?i \\<rightarrow> j]) \\<sim>\n              false\\<^sub>n", "with m_reset"], ["proof (chain)\npicking this:\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix m w) = G\\<^sub>n \\<phi>\n  \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n         false\\<^sub>n", "have \"\\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [m \\<rightarrow> i]) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix m w) = G\\<^sub>n \\<phi>\n  \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix i w) \\<sim>\n         false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>)\n            (w [m \\<rightarrow> i]) \\<sim>\n           false\\<^sub>n", "by (metis (mono_tags, hide_lams) \\<open>m \\<le> i\\<close> af\\<^sub>G_segments bot_nat_def le0 subsequence_append_general)"], ["proof (state)\nthis:\n  \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [m \\<rightarrow> i]) \\<sim>\n         false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       \\<not> af (G\\<^sub>n \\<phi>) (w [?i \\<rightarrow> j]) \\<sim>\n              false\\<^sub>n", "}"], ["proof (state)\nthis:\n  m \\<le> ?i2 \\<Longrightarrow>\n  \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>)\n          (w [m \\<rightarrow> ?i2]) \\<sim>\n         false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       \\<not> af (G\\<^sub>n \\<phi>) (w [?i \\<rightarrow> j]) \\<sim>\n              false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  m \\<le> ?i2 \\<Longrightarrow>\n  \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>)\n          (w [m \\<rightarrow> ?i2]) \\<sim>\n         false\\<^sub>n", "have \"\\<forall>j. \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [m \\<rightarrow> j]) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  m \\<le> ?i2 \\<Longrightarrow>\n  \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>)\n          (w [m \\<rightarrow> ?i2]) \\<sim>\n         false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>)\n               (w [m \\<rightarrow> j]) \\<sim>\n              false\\<^sub>n", "by (metis le_cases subseq_to_smaller)"], ["proof (state)\nthis:\n  \\<forall>j.\n     \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>)\n             (w [m \\<rightarrow> j]) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       \\<not> af (G\\<^sub>n \\<phi>) (w [?i \\<rightarrow> j]) \\<sim>\n              false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  \\<forall>j.\n     \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>)\n             (w [m \\<rightarrow> j]) \\<sim>\n            false\\<^sub>n", "show \"\\<forall>j. \\<not> af (G\\<^sub>n \\<phi>) (w [m \\<rightarrow> j]) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<forall>j.\n     \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>)\n             (w [m \\<rightarrow> j]) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       \\<not> af (G\\<^sub>n \\<phi>) (w [m \\<rightarrow> j]) \\<sim>\n              false\\<^sub>n", "by (metis af_equiv_false_af\\<^sub>G_prefix_false subsequence_split)"], ["proof (state)\nthis:\n  \\<forall>j.\n     \\<not> af (G\\<^sub>n \\<phi>) (w [m \\<rightarrow> j]) \\<sim>\n            false\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma af\\<^sub>G_semantics_ltr:\n  assumes\n    \"\\<exists>i. \\<forall>j. \\<not> af (G\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim>\\<^sub>L false\\<^sub>n\"\n  shows\n    \"\\<exists>i. \\<forall>j>i. \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [0 \\<rightarrow> j]) \\<sim> false\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<forall>j>i.\n          \\<not> af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n                 false\\<^sub>n", "proof (rule ccontr, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>j>i.\n          af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n          false\\<^sub>n \\<Longrightarrow>\n    False", "assume 1: \"\\<forall>i. \\<exists>j>i. af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [0 \\<rightarrow> j]) \\<sim> false\\<^sub>n\""], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>j>i.\n        af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n        false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>j>i.\n          af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n          false\\<^sub>n \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>j>i.\n        af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n        false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>j>i.\n          af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n          false\\<^sub>n \\<Longrightarrow>\n    False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>j>i.\n          af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n          false\\<^sub>n \\<Longrightarrow>\n    False", "obtain j where \"j > i\" and \"af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [0 \\<rightarrow> j]) \\<sim> false\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>i < j;\n         af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n         false\\<^sub>n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     \\<exists>j>i.\n        af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n        false\\<^sub>n\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>i < j;\n         af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n         false\\<^sub>n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i < j\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>j>i.\n          af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n          false\\<^sub>n \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  i < j\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim> false\\<^sub>n", "have X: \"af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [0 \\<rightarrow> Suc j]) = G\\<^sub>n \\<phi>\""], ["proof (prove)\nusing this:\n  i < j\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix (Suc j) w) =\n    G\\<^sub>n \\<phi>", "using af\\<^sub>G_step"], ["proof (prove)\nusing this:\n  i < j\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim> false\\<^sub>n\n  af\\<^sub>G ?\\<phi> ?\\<psi> ?w \\<sim> false\\<^sub>n \\<Longrightarrow>\n  af\\<^sub>G ?\\<phi> ?\\<psi> (?w @ [?\\<nu>]) = G\\<^sub>n ?\\<phi>\n\ngoal (1 subgoal):\n 1. af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix (Suc j) w) =\n    G\\<^sub>n \\<phi>", "by auto"], ["proof (state)\nthis:\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix (Suc j) w) = G\\<^sub>n \\<phi>\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>j>i.\n          af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n          false\\<^sub>n \\<Longrightarrow>\n    False", "obtain k where \"k > j\" and \"af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [0 \\<rightarrow> k]) \\<sim> false\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>j < k;\n         af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix k w) \\<sim>\n         false\\<^sub>n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     \\<exists>j>i.\n        af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n        false\\<^sub>n\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>j < k;\n         af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix k w) \\<sim>\n         false\\<^sub>n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Suc_le_eq"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     \\<exists>j>i.\n        af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n        false\\<^sub>n\n  (Suc ?m \\<le> ?n) = (?m < ?n)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>j < k;\n         af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix k w) \\<sim>\n         false\\<^sub>n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  j < k\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix k w) \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>j>i.\n          af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n          false\\<^sub>n \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  j < k\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix k w) \\<sim> false\\<^sub>n", "have \"af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  j < k\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix k w) \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\n    false\\<^sub>n", "using af\\<^sub>G_segments[OF X]"], ["proof (prove)\nusing this:\n  j < k\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix k w) \\<sim> false\\<^sub>n\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix (Suc j) w @ ?w') =\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) ?w'\n\ngoal (1 subgoal):\n 1. af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\n    false\\<^sub>n", "by (metis le_Suc_ex le_simps(3) subsequence_append)"], ["proof (state)\nthis:\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\n  false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>j>i.\n          af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n          false\\<^sub>n \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\n  false\\<^sub>n", "have \"af (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\n  false\\<^sub>n\n\ngoal (1 subgoal):\n 1. af (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim> false\\<^sub>n", "using af\\<^sub>G_false_implies_af_false"], ["proof (prove)\nusing this:\n  af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\n  false\\<^sub>n\n  af\\<^sub>G ?\\<phi> ?\\<psi> ?w \\<sim> false\\<^sub>n \\<Longrightarrow>\n  af ?\\<psi> ?w \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. af (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim> false\\<^sub>n", "by fastforce"], ["proof (state)\nthis:\n  af (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>j>i.\n          af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n          false\\<^sub>n \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  af (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim> false\\<^sub>n", "have \"af (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\\<^sub>L false\\<^sub>n\""], ["proof (prove)\nusing this:\n  af (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim> false\\<^sub>n\n\ngoal (1 subgoal):\n 1. af (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\\<^sub>L\n    false\\<^sub>n", "using eq_implies_lang"], ["proof (prove)\nusing this:\n  af (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim> false\\<^sub>n\n  ?\\<phi> \\<sim> ?\\<psi> \\<Longrightarrow> ?\\<phi> \\<sim>\\<^sub>L ?\\<psi>\n\ngoal (1 subgoal):\n 1. af (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\\<^sub>L\n    false\\<^sub>n", "by fastforce"], ["proof (state)\nthis:\n  af (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\\<^sub>L\n  false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>j>i.\n          af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n          false\\<^sub>n \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  af (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\\<^sub>L\n  false\\<^sub>n", "have \"af (G\\<^sub>n \\<phi>) (w [i \\<rightarrow> k]) \\<sim>\\<^sub>L false\\<^sub>n\""], ["proof (prove)\nusing this:\n  af (G\\<^sub>n \\<phi>) (w [Suc j \\<rightarrow> k]) \\<sim>\\<^sub>L\n  false\\<^sub>n\n\ngoal (1 subgoal):\n 1. af (G\\<^sub>n \\<phi>) (w [i \\<rightarrow> k]) \\<sim>\\<^sub>L\n    false\\<^sub>n", "by (metis (full_types) af_G_prefix_lang_equiv_false subsequence_append_general Suc_le_eq \\<open>i < j\\<close> \\<open>j < k\\<close> less_SucI order.order_iff_strict)"], ["proof (state)\nthis:\n  af (G\\<^sub>n \\<phi>) (w [i \\<rightarrow> k]) \\<sim>\\<^sub>L false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>j>i.\n          af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n          false\\<^sub>n \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  af (G\\<^sub>n \\<phi>) (w [i \\<rightarrow> k]) \\<sim>\\<^sub>L false\\<^sub>n", "have \"\\<exists>j. af (G\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim>\\<^sub>L false\\<^sub>n\""], ["proof (prove)\nusing this:\n  af (G\\<^sub>n \\<phi>) (w [i \\<rightarrow> k]) \\<sim>\\<^sub>L false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<exists>j.\n       af (G\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim>\\<^sub>L\n       false\\<^sub>n", "by fast"], ["proof (state)\nthis:\n  \\<exists>j.\n     af (G\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim>\\<^sub>L\n     false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>j>i.\n          af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n          false\\<^sub>n \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  \\<exists>j.\n     af (G\\<^sub>n \\<phi>) (w [?i2 \\<rightarrow> j]) \\<sim>\\<^sub>L\n     false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>j>i.\n          af\\<^sub>G \\<phi> (G\\<^sub>n \\<phi>) (prefix j w) \\<sim>\n          false\\<^sub>n \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>j.\n     af (G\\<^sub>n \\<phi>) (w [?i2 \\<rightarrow> j]) \\<sim>\\<^sub>L\n     false\\<^sub>n", "show False"], ["proof (prove)\nusing this:\n  \\<exists>j.\n     af (G\\<^sub>n \\<phi>) (w [?i2 \\<rightarrow> j]) \\<sim>\\<^sub>L\n     false\\<^sub>n\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  \\<exists>j.\n     af (G\\<^sub>n \\<phi>) (w [?i2 \\<rightarrow> j]) \\<sim>\\<^sub>L\n     false\\<^sub>n\n  \\<exists>i.\n     \\<forall>j.\n        \\<not> af (G\\<^sub>n \\<phi>) (w [i \\<rightarrow> j]) \\<sim>\\<^sub>L\n               false\\<^sub>n\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>After Function using GF-advice\\<close>"], ["", "definition af_letter\\<^sub>\\<nu> :: \"'a ltln set \\<Rightarrow> 'a ltln \\<times> 'a ltln \\<Rightarrow> 'a set \\<Rightarrow> 'a ltln \\<times> 'a ltln\"\nwhere\n  \"af_letter\\<^sub>\\<nu> X p \\<nu> = (if snd p \\<sim> false\\<^sub>n\n    then (af_letter (fst p) \\<nu>, (normalise (af_letter (fst p) \\<nu>))[X]\\<^sub>\\<nu>)\n    else (af_letter (fst p) \\<nu>, af_letter (snd p) \\<nu>))\""], ["", "abbreviation af\\<^sub>\\<nu> :: \"'a ltln set \\<Rightarrow> 'a ltln \\<times> 'a ltln \\<Rightarrow> 'a set list \\<Rightarrow> 'a ltln \\<times> 'a ltln\"\nwhere\n  \"af\\<^sub>\\<nu> X p w \\<equiv> foldl (af_letter\\<^sub>\\<nu> X) p w\""], ["", "lemma af_letter\\<^sub>\\<nu>_fst[simp]:\n  \"fst (af_letter\\<^sub>\\<nu> X p \\<nu>) = af_letter (fst p) \\<nu>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (af_letter\\<^sub>\\<nu> X p \\<nu>) = af_letter (fst p) \\<nu>", "by (simp add: af_letter\\<^sub>\\<nu>_def)"], ["", "lemma af_letter\\<^sub>\\<nu>_snd[simp]:\n  \"snd p \\<sim> false\\<^sub>n \\<Longrightarrow> snd (af_letter\\<^sub>\\<nu> X p \\<nu>) = (normalise (af_letter (fst p) \\<nu>))[X]\\<^sub>\\<nu>\"\n  \"\\<not> (snd p) \\<sim> false\\<^sub>n \\<Longrightarrow> snd (af_letter\\<^sub>\\<nu> X p \\<nu>) = af_letter (snd p) \\<nu>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (snd p \\<sim> false\\<^sub>n \\<Longrightarrow>\n     snd (af_letter\\<^sub>\\<nu> X p \\<nu>) =\n     normalise (af_letter (fst p) \\<nu>)[X]\\<^sub>\\<nu>) &&&\n    (\\<not> snd p \\<sim> false\\<^sub>n \\<Longrightarrow>\n     snd (af_letter\\<^sub>\\<nu> X p \\<nu>) = af_letter (snd p) \\<nu>)", "by (simp_all add: af_letter\\<^sub>\\<nu>_def)"], ["", "lemma af\\<^sub>\\<nu>_fst:\n  \"fst (af\\<^sub>\\<nu> X p w) = af (fst p) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (af\\<^sub>\\<nu> X p w) = af (fst p) w", "by (induction w rule: rev_induct) simp+"], ["", "lemma af\\<^sub>\\<nu>_snd:\n  \"\\<not> af (snd p) w \\<sim> false\\<^sub>n \\<Longrightarrow> snd (af\\<^sub>\\<nu> X p w) = af (snd p) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> af (snd p) w \\<sim> false\\<^sub>n \\<Longrightarrow>\n    snd (af\\<^sub>\\<nu> X p w) = af (snd p) w", "by (induction w rule: rev_induct) (simp_all, metis af_letter\\<^sub>\\<nu>_snd(2) af_letter.simps(2) af_letter_congruent)"], ["", "lemma af\\<^sub>\\<nu>_snd':\n  \"\\<forall>i. \\<not> snd (af\\<^sub>\\<nu> X p (take i w)) \\<sim> false\\<^sub>n \\<Longrightarrow> snd (af\\<^sub>\\<nu> X p w) = af (snd p) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<not> snd (af\\<^sub>\\<nu> X p (take i w)) \\<sim>\n              false\\<^sub>n \\<Longrightarrow>\n    snd (af\\<^sub>\\<nu> X p w) = af (snd p) w", "by (induction w rule: rev_induct) (simp_all, metis af_letter\\<^sub>\\<nu>_snd(2) diff_is_0_eq foldl_Nil le_cases take_all take_eq_Nil)"], ["", "lemma af\\<^sub>\\<nu>_step:\n  \"snd (af\\<^sub>\\<nu> X (\\<xi>, \\<zeta>) w) \\<sim> false\\<^sub>n \\<Longrightarrow> snd (af\\<^sub>\\<nu> X (\\<xi>, \\<zeta>) (w @ [\\<nu>])) = (normalise (af \\<xi> (w @ [\\<nu>])))[X]\\<^sub>\\<nu>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (af\\<^sub>\\<nu> X (\\<xi>, \\<zeta>) w) \\<sim>\n    false\\<^sub>n \\<Longrightarrow>\n    snd (af\\<^sub>\\<nu> X (\\<xi>, \\<zeta>) (w @ [\\<nu>])) =\n    normalise (af \\<xi> (w @ [\\<nu>]))[X]\\<^sub>\\<nu>", "by (simp add: af\\<^sub>\\<nu>_fst)"], ["", "lemma af\\<^sub>\\<nu>_segments:\n  \"af\\<^sub>\\<nu> X (\\<xi>, \\<zeta>) w = (af \\<xi> w, (af \\<xi> w)[X]\\<^sub>\\<nu>) \\<Longrightarrow> af\\<^sub>\\<nu> X (\\<xi>, \\<zeta>) (w @ w') = af\\<^sub>\\<nu> X (af \\<xi> w, (af \\<xi> w)[X]\\<^sub>\\<nu>) w'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. af\\<^sub>\\<nu> X (\\<xi>, \\<zeta>) w =\n    (af \\<xi> w, af \\<xi> w[X]\\<^sub>\\<nu>) \\<Longrightarrow>\n    af\\<^sub>\\<nu> X (\\<xi>, \\<zeta>) (w @ w') =\n    af\\<^sub>\\<nu> X (af \\<xi> w, af \\<xi> w[X]\\<^sub>\\<nu>) w'", "by (induction w' rule: rev_induct) fastforce+"], ["", "lemma af\\<^sub>\\<nu>_semantics_ltr:\n  assumes\n    \"\\<exists>i. suffix i w \\<Turnstile>\\<^sub>n (af \\<phi> (prefix i w))[X]\\<^sub>\\<nu>\"\n  shows\n    \"\\<exists>m. \\<forall>k\\<ge>m. \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix (Suc k) w)) \\<sim> false\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m.\n       \\<forall>k\\<ge>m.\n          \\<not> snd (af\\<^sub>\\<nu> X\n                       (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                       (prefix (Suc k) w)) \\<sim>\n                 false\\<^sub>n", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "define resets where \"resets = {i. snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix i w)) \\<sim> false\\<^sub>n}\""], ["proof (state)\nthis:\n  resets =\n  {i. snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n            (prefix i w)) \\<sim>\n      false\\<^sub>n}\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "define m where \"m = (if resets = {} then 0 else Suc (Max resets))\""], ["proof (state)\nthis:\n  m = (if resets = {} then 0 else Suc (Max resets))\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>i.\n     suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "obtain i where 1: \"suffix i w \\<Turnstile>\\<^sub>n (af \\<phi> (prefix i w))[X]\\<^sub>\\<nu>\""], ["proof (prove)\nusing this:\n  \\<exists>i.\n     suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        suffix i\n         w \\<Turnstile>\\<^sub>n af \\<phi>\n                                 (prefix i\n                                   w)[X]\\<^sub>\\<nu> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "{"], ["proof (state)\nthis:\n  suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "assume \"i \\<le> j\" and \"j \\<in> resets\""], ["proof (state)\nthis:\n  i \\<le> j\n  j \\<in> resets\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "let ?\\<phi> = \"af \\<phi> (prefix (Suc j) w)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "from 1"], ["proof (chain)\npicking this:\n  suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "have \"\\<forall>n. suffix n (suffix i w) \\<Turnstile>\\<^sub>n (normalise (af \\<phi> (prefix i w @ prefix n (suffix i w))))[X]\\<^sub>\\<nu>\""], ["proof (prove)\nusing this:\n  suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       suffix n\n        (suffix i\n          w) \\<Turnstile>\\<^sub>n normalise\n                                   (af \\<phi>\n                                     (prefix i w @\nprefix n (suffix i w)))[X]\\<^sub>\\<nu>", "using normalise_monotonic"], ["proof (prove)\nusing this:\n  suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>\n  ?w \\<Turnstile>\\<^sub>n ?\\<phi>[?X]\\<^sub>\\<nu> \\<Longrightarrow>\n  ?w \\<Turnstile>\\<^sub>n normalise ?\\<phi>[?X]\\<^sub>\\<nu>\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       suffix n\n        (suffix i\n          w) \\<Turnstile>\\<^sub>n normalise\n                                   (af \\<phi>\n                                     (prefix i w @\nprefix n (suffix i w)))[X]\\<^sub>\\<nu>", "by (simp add: GF_advice_af)"], ["proof (state)\nthis:\n  \\<forall>n.\n     suffix n\n      (suffix i\n        w) \\<Turnstile>\\<^sub>n normalise\n                                 (af \\<phi>\n                                   (prefix i w @\n                                    prefix n (suffix i w)))[X]\\<^sub>\\<nu>\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  \\<forall>n.\n     suffix n\n      (suffix i\n        w) \\<Turnstile>\\<^sub>n normalise\n                                 (af \\<phi>\n                                   (prefix i w @\n                                    prefix n (suffix i w)))[X]\\<^sub>\\<nu>", "have \"suffix (Suc j) w \\<Turnstile>\\<^sub>n (normalise (af \\<phi> (prefix (Suc j) w)))[X]\\<^sub>\\<nu>\""], ["proof (prove)\nusing this:\n  \\<forall>n.\n     suffix n\n      (suffix i\n        w) \\<Turnstile>\\<^sub>n normalise\n                                 (af \\<phi>\n                                   (prefix i w @\n                                    prefix n (suffix i w)))[X]\\<^sub>\\<nu>\n\ngoal (1 subgoal):\n 1. suffix (Suc j)\n     w \\<Turnstile>\\<^sub>n normalise\n                             (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>", "by (metis (no_types) \\<open>i \\<le> j\\<close> add.right_neutral le_SucI le_Suc_ex subsequence_append subsequence_shift suffix_suffix)"], ["proof (state)\nthis:\n  suffix (Suc j)\n   w \\<Turnstile>\\<^sub>n normalise\n                           (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  suffix (Suc j)\n   w \\<Turnstile>\\<^sub>n normalise\n                           (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>", "have \"\\<forall>k>j. \\<not> af ((normalise (af \\<phi> (prefix (Suc j) w)))[X]\\<^sub>\\<nu>) (w [Suc j \\<rightarrow> k]) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  suffix (Suc j)\n   w \\<Turnstile>\\<^sub>n normalise\n                           (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>\n\ngoal (1 subgoal):\n 1. \\<forall>k>j.\n       \\<not> af (normalise (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>)\n               (w [Suc j \\<rightarrow> k]) \\<sim>\n              false\\<^sub>n", "by (metis ltl_implies_satisfiable_prefix subsequence_prefix_suffix)"], ["proof (state)\nthis:\n  \\<forall>k>j.\n     \\<not> af (normalise (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>)\n             (w [Suc j \\<rightarrow> k]) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  \\<forall>k>j.\n     \\<not> af (normalise (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>)\n             (w [Suc j \\<rightarrow> k]) \\<sim>\n            false\\<^sub>n", "have \"\\<forall>k>j. \\<not> snd (af\\<^sub>\\<nu> X (?\\<phi>, (normalise ?\\<phi>)[X]\\<^sub>\\<nu>) (w [Suc j \\<rightarrow> k])) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<forall>k>j.\n     \\<not> af (normalise (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>)\n             (w [Suc j \\<rightarrow> k]) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>k>j.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (af \\<phi> (prefix (Suc j) w),\n                     normalise\n                      (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>)\n                    (w [Suc j \\<rightarrow> k])) \\<sim>\n              false\\<^sub>n", "by (metis af\\<^sub>\\<nu>_snd snd_eqD)"], ["proof (state)\nthis:\n  \\<forall>k>j.\n     \\<not> snd (af\\<^sub>\\<nu> X\n                  (af \\<phi> (prefix (Suc j) w),\n                   normalise (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>)\n                  (w [Suc j \\<rightarrow> k])) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "moreover"], ["proof (state)\nthis:\n  \\<forall>k>j.\n     \\<not> snd (af\\<^sub>\\<nu> X\n                  (af \\<phi> (prefix (Suc j) w),\n                   normalise (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>)\n                  (w [Suc j \\<rightarrow> k])) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "{"], ["proof (state)\nthis:\n  \\<forall>k>j.\n     \\<not> snd (af\\<^sub>\\<nu> X\n                  (af \\<phi> (prefix (Suc j) w),\n                   normalise (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>)\n                  (w [Suc j \\<rightarrow> k])) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "have \"fst (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix (Suc j) w)) = ?\\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n          (prefix (Suc j) w)) =\n    af \\<phi> (prefix (Suc j) w)", "by (simp add: af\\<^sub>\\<nu>_fst)"], ["proof (state)\nthis:\n  fst (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n        (prefix (Suc j) w)) =\n  af \\<phi> (prefix (Suc j) w)\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "moreover"], ["proof (state)\nthis:\n  fst (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n        (prefix (Suc j) w)) =\n  af \\<phi> (prefix (Suc j) w)\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "have \"snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix j w)) \\<sim> false\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n          (prefix j w)) \\<sim>\n    false\\<^sub>n", "using \\<open>j \\<in> resets\\<close> resets_def"], ["proof (prove)\nusing this:\n  j \\<in> resets\n  resets =\n  {i. snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n            (prefix i w)) \\<sim>\n      false\\<^sub>n}\n\ngoal (1 subgoal):\n 1. snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n          (prefix j w)) \\<sim>\n    false\\<^sub>n", "by blast"], ["proof (state)\nthis:\n  snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n        (prefix j w)) \\<sim>\n  false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "ultimately"], ["proof (chain)\npicking this:\n  fst (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n        (prefix (Suc j) w)) =\n  af \\<phi> (prefix (Suc j) w)\n  snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n        (prefix j w)) \\<sim>\n  false\\<^sub>n", "have \"af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix (Suc j) w) = (?\\<phi>, (normalise ?\\<phi>)[X]\\<^sub>\\<nu>)\""], ["proof (prove)\nusing this:\n  fst (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n        (prefix (Suc j) w)) =\n  af \\<phi> (prefix (Suc j) w)\n  snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n        (prefix j w)) \\<sim>\n  false\\<^sub>n\n\ngoal (1 subgoal):\n 1. af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n     (prefix (Suc j) w) =\n    (af \\<phi> (prefix (Suc j) w),\n     normalise (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>)", "by (metis (no_types) af\\<^sub>\\<nu>_step prod.collapse subseq_to_Suc zero_le)"], ["proof (state)\nthis:\n  af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n   (prefix (Suc j) w) =\n  (af \\<phi> (prefix (Suc j) w),\n   normalise (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>)\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "}"], ["proof (state)\nthis:\n  af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n   (prefix (Suc j) w) =\n  (af \\<phi> (prefix (Suc j) w),\n   normalise (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>)\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>k>j.\n     \\<not> snd (af\\<^sub>\\<nu> X\n                  (af \\<phi> (prefix (Suc j) w),\n                   normalise (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>)\n                  (w [Suc j \\<rightarrow> k])) \\<sim>\n            false\\<^sub>n\n  af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n   (prefix (Suc j) w) =\n  (af \\<phi> (prefix (Suc j) w),\n   normalise (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>)", "have \"\\<forall>k>j. \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) ((w [0 \\<rightarrow> Suc j]) @ (w [Suc j \\<rightarrow> k]))) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<forall>k>j.\n     \\<not> snd (af\\<^sub>\\<nu> X\n                  (af \\<phi> (prefix (Suc j) w),\n                   normalise (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>)\n                  (w [Suc j \\<rightarrow> k])) \\<sim>\n            false\\<^sub>n\n  af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n   (prefix (Suc j) w) =\n  (af \\<phi> (prefix (Suc j) w),\n   normalise (af \\<phi> (prefix (Suc j) w))[X]\\<^sub>\\<nu>)\n\ngoal (1 subgoal):\n 1. \\<forall>k>j.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc j) w @ w [Suc j \\<rightarrow> k])) \\<sim>\n              false\\<^sub>n", "by (simp add: af\\<^sub>\\<nu>_segments)"], ["proof (state)\nthis:\n  \\<forall>k>j.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix (Suc j) w @ w [Suc j \\<rightarrow> k])) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  \\<forall>k>j.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix (Suc j) w @ w [Suc j \\<rightarrow> k])) \\<sim>\n            false\\<^sub>n", "have \"\\<forall>k>j. \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix k w)) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<forall>k>j.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix (Suc j) w @ w [Suc j \\<rightarrow> k])) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>k>j.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix k w)) \\<sim>\n              false\\<^sub>n", "by (metis Suc_leI le0 subsequence_append_general)"], ["proof (state)\nthis:\n  \\<forall>k>j.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix k w)) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  \\<forall>k>j.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix k w)) \\<sim>\n            false\\<^sub>n", "have \"\\<forall>k \\<in> resets. k \\<le> j\""], ["proof (prove)\nusing this:\n  \\<forall>k>j.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix k w)) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>resets. k \\<le> j", "using \\<open>j \\<in> resets\\<close> resets_def le_less_linear"], ["proof (prove)\nusing this:\n  \\<forall>k>j.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix k w)) \\<sim>\n            false\\<^sub>n\n  j \\<in> resets\n  resets =\n  {i. snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n            (prefix i w)) \\<sim>\n      false\\<^sub>n}\n  ?x \\<le> ?y \\<or> ?y < ?x\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>resets. k \\<le> j", "by blast"], ["proof (state)\nthis:\n  \\<forall>k\\<in>resets. k \\<le> j\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "}"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<le> ?j2; ?j2 \\<in> resets\\<rbrakk>\n  \\<Longrightarrow> \\<forall>k\\<in>resets. k \\<le> ?j2\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>i \\<le> ?j2; ?j2 \\<in> resets\\<rbrakk>\n  \\<Longrightarrow> \\<forall>k\\<in>resets. k \\<le> ?j2", "have \"finite resets\""], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> ?j2; ?j2 \\<in> resets\\<rbrakk>\n  \\<Longrightarrow> \\<forall>k\\<in>resets. k \\<le> ?j2\n\ngoal (1 subgoal):\n 1. finite resets", "by (meson finite_nat_set_iff_bounded_le infinite_nat_iff_unbounded_le)"], ["proof (state)\nthis:\n  finite resets\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  finite resets", "have \"resets \\<noteq> {} \\<Longrightarrow> snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix (Max resets) w)) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  finite resets\n\ngoal (1 subgoal):\n 1. resets \\<noteq> {} \\<Longrightarrow>\n    snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n          (prefix (Max resets) w)) \\<sim>\n    false\\<^sub>n", "using Max_in resets_def"], ["proof (prove)\nusing this:\n  finite resets\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max ?A \\<in> ?A\n  resets =\n  {i. snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n            (prefix i w)) \\<sim>\n      false\\<^sub>n}\n\ngoal (1 subgoal):\n 1. resets \\<noteq> {} \\<Longrightarrow>\n    snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n          (prefix (Max resets) w)) \\<sim>\n    false\\<^sub>n", "by blast"], ["proof (state)\nthis:\n  resets \\<noteq> {} \\<Longrightarrow>\n  snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n        (prefix (Max resets) w)) \\<sim>\n  false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  resets \\<noteq> {} \\<Longrightarrow>\n  snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n        (prefix (Max resets) w)) \\<sim>\n  false\\<^sub>n", "have \"\\<forall>k\\<ge>m. \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix k w)) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  resets \\<noteq> {} \\<Longrightarrow>\n  snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n        (prefix (Max resets) w)) \\<sim>\n  false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix k w)) \\<sim>\n              false\\<^sub>n", "by (metis (mono_tags, lifting) Max_ge Suc_n_not_le_n \\<open>finite resets\\<close> empty_Collect_eq m_def mem_Collect_eq order.trans resets_def)"], ["proof (state)\nthis:\n  \\<forall>k\\<ge>m.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix k w)) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>?m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  \\<forall>k\\<ge>m.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix k w)) \\<sim>\n            false\\<^sub>n", "show \"\\<forall>k\\<ge>m. \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix (Suc k) w)) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<ge>m.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix k w)) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "using le_SucI"], ["proof (prove)\nusing this:\n  \\<forall>k\\<ge>m.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix k w)) \\<sim>\n            false\\<^sub>n\n  ?m \\<le> ?n \\<Longrightarrow> ?m \\<le> Suc ?n\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix (Suc k) w)) \\<sim>\n              false\\<^sub>n", "by blast"], ["proof (state)\nthis:\n  \\<forall>k\\<ge>m.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix (Suc k) w)) \\<sim>\n            false\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma af\\<^sub>\\<nu>_semantics_rtl:\n  assumes\n    \"\\<exists>n. \\<forall>k\\<ge>n. \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix (Suc k) w)) \\<sim> false\\<^sub>n\"\n  shows\n    \"\\<exists>i. suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "define resets where \"resets = {i. snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix i w)) \\<sim> false\\<^sub>n}\""], ["proof (state)\nthis:\n  resets =\n  {i. snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n            (prefix i w)) \\<sim>\n      false\\<^sub>n}\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "define m where \"m = (if resets = {} then 0 else Suc (Max resets))\""], ["proof (state)\nthis:\n  m = (if resets = {} then 0 else Suc (Max resets))\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>n.\n     \\<forall>k\\<ge>n.\n        \\<not> snd (af\\<^sub>\\<nu> X\n                     (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                     (prefix (Suc k) w)) \\<sim>\n               false\\<^sub>n", "obtain n where \"\\<forall>k\\<ge>n. \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix (Suc k) w)) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<exists>n.\n     \\<forall>k\\<ge>n.\n        \\<not> snd (af\\<^sub>\\<nu> X\n                     (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                     (prefix (Suc k) w)) \\<sim>\n               false\\<^sub>n\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<forall>k\\<ge>n.\n           \\<not> snd (af\\<^sub>\\<nu> X\n                        (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                        (prefix (Suc k) w)) \\<sim>\n                  false\\<^sub>n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>k\\<ge>n.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix (Suc k) w)) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "then"], ["proof (chain)\npicking this:\n  \\<forall>k\\<ge>n.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix (Suc k) w)) \\<sim>\n            false\\<^sub>n", "have \"\\<forall>k>n. \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix k w)) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<ge>n.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix (Suc k) w)) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>k>n.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix k w)) \\<sim>\n              false\\<^sub>n", "by (metis le_SucE lessE less_imp_le_nat)"], ["proof (state)\nthis:\n  \\<forall>k>n.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix k w)) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "then"], ["proof (chain)\npicking this:\n  \\<forall>k>n.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix k w)) \\<sim>\n            false\\<^sub>n", "have \"finite resets\""], ["proof (prove)\nusing this:\n  \\<forall>k>n.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix k w)) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. finite resets", "by (metis (mono_tags, lifting) infinite_nat_iff_unbounded mem_Collect_eq resets_def)"], ["proof (state)\nthis:\n  finite resets\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "then"], ["proof (chain)\npicking this:\n  finite resets", "have \"\\<forall>i\\<ge>m. \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix i w)) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  finite resets\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<ge>m.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix i w)) \\<sim>\n              false\\<^sub>n", "unfolding resets_def m_def"], ["proof (prove)\nusing this:\n  finite\n   {i. snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n             (prefix i w)) \\<sim>\n       false\\<^sub>n}\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<ge>if {i. snd (af\\<^sub>\\<nu> X\n                                (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                                (prefix i w)) \\<sim>\n                          false\\<^sub>n} =\n                      {}\n                   then 0\n                   else Suc (Max {i. snd\n(af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n  (prefix i w)) \\<sim>\n                                     false\\<^sub>n}).\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix i w)) \\<sim>\n              false\\<^sub>n", "using Max_ge not_less_eq_eq"], ["proof (prove)\nusing this:\n  finite\n   {i. snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n             (prefix i w)) \\<sim>\n       false\\<^sub>n}\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk> \\<Longrightarrow> ?x \\<le> Max ?A\n  (\\<not> ?m \\<le> ?n) = (Suc ?n \\<le> ?m)\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<ge>if {i. snd (af\\<^sub>\\<nu> X\n                                (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                                (prefix i w)) \\<sim>\n                          false\\<^sub>n} =\n                      {}\n                   then 0\n                   else Suc (Max {i. snd\n(af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n  (prefix i w)) \\<sim>\n                                     false\\<^sub>n}).\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix i w)) \\<sim>\n              false\\<^sub>n", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<ge>m.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix i w)) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "then"], ["proof (chain)\npicking this:\n  \\<forall>i\\<ge>m.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix i w)) \\<sim>\n            false\\<^sub>n", "have \"\\<forall>i. \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) ((w [0 \\<rightarrow> m]) @ (w [m \\<rightarrow> i]))) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<ge>m.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix i w)) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                    (prefix m w @ w [m \\<rightarrow> i])) \\<sim>\n              false\\<^sub>n", "by (metis le0 nat_le_linear subseq_to_smaller subsequence_append_general)"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix m w @ w [m \\<rightarrow> i])) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "moreover"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix m w @ w [m \\<rightarrow> i])) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "let ?\\<phi> = \"af \\<phi> (prefix m w)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "have \"resets \\<noteq> {} \\<Longrightarrow> snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix (Max resets) w)) \\<sim> false\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. resets \\<noteq> {} \\<Longrightarrow>\n    snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n          (prefix (Max resets) w)) \\<sim>\n    false\\<^sub>n", "using Max_in \\<open>finite resets\\<close> resets_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max ?A \\<in> ?A\n  finite resets\n  resets =\n  {i. snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n            (prefix i w)) \\<sim>\n      false\\<^sub>n}\n\ngoal (1 subgoal):\n 1. resets \\<noteq> {} \\<Longrightarrow>\n    snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n          (prefix (Max resets) w)) \\<sim>\n    false\\<^sub>n", "by blast"], ["proof (state)\nthis:\n  resets \\<noteq> {} \\<Longrightarrow>\n  snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n        (prefix (Max resets) w)) \\<sim>\n  false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "then"], ["proof (chain)\npicking this:\n  resets \\<noteq> {} \\<Longrightarrow>\n  snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n        (prefix (Max resets) w)) \\<sim>\n  false\\<^sub>n", "have prefix_\\<phi>': \"snd (af\\<^sub>\\<nu> X (\\<phi>, (normalise \\<phi>)[X]\\<^sub>\\<nu>) (prefix m w)) = (normalise ?\\<phi>)[X]\\<^sub>\\<nu>\""], ["proof (prove)\nusing this:\n  resets \\<noteq> {} \\<Longrightarrow>\n  snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n        (prefix (Max resets) w)) \\<sim>\n  false\\<^sub>n\n\ngoal (1 subgoal):\n 1. snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n          (prefix m w)) =\n    normalise (af \\<phi> (prefix m w))[X]\\<^sub>\\<nu>", "by (auto simp: GF_advice_congruent m_def af\\<^sub>\\<nu>_fst)"], ["proof (state)\nthis:\n  snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n        (prefix m w)) =\n  normalise (af \\<phi> (prefix m w))[X]\\<^sub>\\<nu>\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix m w @ w [m \\<rightarrow> i])) \\<sim>\n            false\\<^sub>n\n  snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n        (prefix m w)) =\n  normalise (af \\<phi> (prefix m w))[X]\\<^sub>\\<nu>", "have \"\\<forall>i. \\<not> snd (af\\<^sub>\\<nu> X (?\\<phi>, (normalise ?\\<phi>)[X]\\<^sub>\\<nu>) (w [m \\<rightarrow> i])) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     \\<not> snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n                  (prefix m w @ w [m \\<rightarrow> i])) \\<sim>\n            false\\<^sub>n\n  snd (af\\<^sub>\\<nu> X (\\<phi>, normalise \\<phi>[X]\\<^sub>\\<nu>)\n        (prefix m w)) =\n  normalise (af \\<phi> (prefix m w))[X]\\<^sub>\\<nu>\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<not> snd (af\\<^sub>\\<nu> X\n                    (af \\<phi> (prefix m w),\n                     normalise (af \\<phi> (prefix m w))[X]\\<^sub>\\<nu>)\n                    (w [m \\<rightarrow> i])) \\<sim>\n              false\\<^sub>n", "by (metis af\\<^sub>\\<nu>_fst foldl_append fst_conv prod.collapse)"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<not> snd (af\\<^sub>\\<nu> X\n                  (af \\<phi> (prefix m w),\n                   normalise (af \\<phi> (prefix m w))[X]\\<^sub>\\<nu>)\n                  (w [m \\<rightarrow> i])) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "then"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     \\<not> snd (af\\<^sub>\\<nu> X\n                  (af \\<phi> (prefix m w),\n                   normalise (af \\<phi> (prefix m w))[X]\\<^sub>\\<nu>)\n                  (w [m \\<rightarrow> i])) \\<sim>\n            false\\<^sub>n", "have \"\\<forall>i. \\<not> af ((normalise ?\\<phi>)[X]\\<^sub>\\<nu>) (w [m \\<rightarrow> i]) \\<sim> false\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     \\<not> snd (af\\<^sub>\\<nu> X\n                  (af \\<phi> (prefix m w),\n                   normalise (af \\<phi> (prefix m w))[X]\\<^sub>\\<nu>)\n                  (w [m \\<rightarrow> i])) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<not> af (normalise (af \\<phi> (prefix m w))[X]\\<^sub>\\<nu>)\n               (w [m \\<rightarrow> i]) \\<sim>\n              false\\<^sub>n", "by (metis prefix_\\<phi>' af\\<^sub>\\<nu>_fst af\\<^sub>\\<nu>_snd' fst_conv prod.collapse subsequence_take)"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<not> af (normalise (af \\<phi> (prefix m w))[X]\\<^sub>\\<nu>)\n             (w [m \\<rightarrow> i]) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "then"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     \\<not> af (normalise (af \\<phi> (prefix m w))[X]\\<^sub>\\<nu>)\n             (w [m \\<rightarrow> i]) \\<sim>\n            false\\<^sub>n", "have \"suffix m w \\<Turnstile>\\<^sub>n (normalise (af \\<phi> (prefix m w)))[X]\\<^sub>\\<nu>\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     \\<not> af (normalise (af \\<phi> (prefix m w))[X]\\<^sub>\\<nu>)\n             (w [m \\<rightarrow> i]) \\<sim>\n            false\\<^sub>n\n\ngoal (1 subgoal):\n 1. suffix m\n     w \\<Turnstile>\\<^sub>n normalise\n                             (af \\<phi> (prefix m w))[X]\\<^sub>\\<nu>", "by (metis GF_advice_\\<nu>LTL(1) satisfiable_prefix_implies_\\<nu>LTL add.right_neutral subsequence_shift)"], ["proof (state)\nthis:\n  suffix m\n   w \\<Turnstile>\\<^sub>n normalise (af \\<phi> (prefix m w))[X]\\<^sub>\\<nu>\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "from this[THEN normalise_eventually_equivalent]"], ["proof (chain)\npicking this:\n  \\<exists>i.\n     suffix i\n      (suffix m\n        w) \\<Turnstile>\\<^sub>n af (af \\<phi> (prefix m w))\n                                 (prefix i (suffix m w))[X]\\<^sub>\\<nu>", "show \"\\<exists>i. suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>\""], ["proof (prove)\nusing this:\n  \\<exists>i.\n     suffix i\n      (suffix m\n        w) \\<Turnstile>\\<^sub>n af (af \\<phi> (prefix m w))\n                                 (prefix i (suffix m w))[X]\\<^sub>\\<nu>\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>", "by (metis add.commute af_subsequence_append le_add1 le_add_same_cancel1 prefix_suffix_subsequence suffix_suffix)"], ["proof (state)\nthis:\n  \\<exists>i.\n     suffix i w \\<Turnstile>\\<^sub>n af \\<phi> (prefix i w)[X]\\<^sub>\\<nu>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Reachability Bounds\\<close>"], ["", "text \\<open>\n  We show that the reach of each after-function is bounded by the atomic\n  propositions of the input formula.\n\\<close>"], ["", "locale transition_functions_size = transition_functions +\n  assumes\n    normalise_nested_propos: \"nested_prop_atoms \\<phi> \\<supseteq> nested_prop_atoms (normalise \\<phi>)\"\nbegin"], ["", "lemma af_letter\\<^sub>F_nested_prop_atoms:\n  \"nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>) \\<Longrightarrow> nested_prop_atoms (af_letter\\<^sub>F \\<phi> \\<psi> \\<nu>) \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nested_prop_atoms \\<psi>\n    \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>) \\<Longrightarrow>\n    nested_prop_atoms (af_letter\\<^sub>F \\<phi> \\<psi> \\<nu>)\n    \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>)", "by (induction \\<psi>) (auto simp: af_letter\\<^sub>F_def, insert af_letter_nested_prop_atoms, blast+)"], ["", "lemma af\\<^sub>F_nested_prop_atoms:\n  \"nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>) \\<Longrightarrow> nested_prop_atoms (af\\<^sub>F \\<phi> \\<psi> w) \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nested_prop_atoms \\<psi>\n    \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>) \\<Longrightarrow>\n    nested_prop_atoms (af\\<^sub>F \\<phi> \\<psi> w)\n    \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>)", "by (induction w rule: rev_induct) (insert af_letter\\<^sub>F_nested_prop_atoms, auto)"], ["", "lemma af_letter\\<^sub>F_range:\n  \"nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>) \\<Longrightarrow> range (af_letter\\<^sub>F \\<phi> \\<psi>) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nested_prop_atoms \\<psi>\n    \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>) \\<Longrightarrow>\n    range (af_letter\\<^sub>F \\<phi> \\<psi>)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>)}", "using af_letter\\<^sub>F_nested_prop_atoms"], ["proof (prove)\nusing this:\n  nested_prop_atoms ?\\<psi>\n  \\<subseteq> nested_prop_atoms (F\\<^sub>n ?\\<phi>) \\<Longrightarrow>\n  nested_prop_atoms (af_letter\\<^sub>F ?\\<phi> ?\\<psi> ?\\<nu>)\n  \\<subseteq> nested_prop_atoms (F\\<^sub>n ?\\<phi>)\n\ngoal (1 subgoal):\n 1. nested_prop_atoms \\<psi>\n    \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>) \\<Longrightarrow>\n    range (af_letter\\<^sub>F \\<phi> \\<psi>)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>)}", "by blast"], ["", "lemma af\\<^sub>F_range:\n  \"nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>) \\<Longrightarrow> range (af\\<^sub>F \\<phi> \\<psi>) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nested_prop_atoms \\<psi>\n    \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>) \\<Longrightarrow>\n    range (af\\<^sub>F \\<phi> \\<psi>)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>)}", "using af\\<^sub>F_nested_prop_atoms"], ["proof (prove)\nusing this:\n  nested_prop_atoms ?\\<psi>\n  \\<subseteq> nested_prop_atoms (F\\<^sub>n ?\\<phi>) \\<Longrightarrow>\n  nested_prop_atoms (af\\<^sub>F ?\\<phi> ?\\<psi> ?w)\n  \\<subseteq> nested_prop_atoms (F\\<^sub>n ?\\<phi>)\n\ngoal (1 subgoal):\n 1. nested_prop_atoms \\<psi>\n    \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>) \\<Longrightarrow>\n    range (af\\<^sub>F \\<phi> \\<psi>)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (F\\<^sub>n \\<phi>)}", "by blast"], ["", "lemma af_letter\\<^sub>G_nested_prop_atoms:\n  \"nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>) \\<Longrightarrow> nested_prop_atoms (af_letter\\<^sub>G \\<phi> \\<psi> \\<nu>) \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nested_prop_atoms \\<psi>\n    \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>) \\<Longrightarrow>\n    nested_prop_atoms (af_letter\\<^sub>G \\<phi> \\<psi> \\<nu>)\n    \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>)", "by (induction \\<psi>) (auto simp: af_letter\\<^sub>G_def, insert af_letter_nested_prop_atoms, blast+)"], ["", "lemma af\\<^sub>G_nested_prop_atoms:\n  \"nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>) \\<Longrightarrow> nested_prop_atoms (af\\<^sub>G \\<phi> \\<psi> w) \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nested_prop_atoms \\<psi>\n    \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>) \\<Longrightarrow>\n    nested_prop_atoms (af\\<^sub>G \\<phi> \\<psi> w)\n    \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>)", "by (induction w rule: rev_induct) (insert af_letter\\<^sub>G_nested_prop_atoms, auto)"], ["", "lemma af_letter\\<^sub>G_range:\n  \"nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>) \\<Longrightarrow> range (af_letter\\<^sub>G \\<phi> \\<psi>) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nested_prop_atoms \\<psi>\n    \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>) \\<Longrightarrow>\n    range (af_letter\\<^sub>G \\<phi> \\<psi>)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>)}", "using af_letter\\<^sub>G_nested_prop_atoms"], ["proof (prove)\nusing this:\n  nested_prop_atoms ?\\<psi>\n  \\<subseteq> nested_prop_atoms (G\\<^sub>n ?\\<phi>) \\<Longrightarrow>\n  nested_prop_atoms (af_letter\\<^sub>G ?\\<phi> ?\\<psi> ?\\<nu>)\n  \\<subseteq> nested_prop_atoms (G\\<^sub>n ?\\<phi>)\n\ngoal (1 subgoal):\n 1. nested_prop_atoms \\<psi>\n    \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>) \\<Longrightarrow>\n    range (af_letter\\<^sub>G \\<phi> \\<psi>)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>)}", "by blast"], ["", "lemma af\\<^sub>G_range:\n  \"nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>) \\<Longrightarrow> range (af\\<^sub>G \\<phi> \\<psi>) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nested_prop_atoms \\<psi>\n    \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>) \\<Longrightarrow>\n    range (af\\<^sub>G \\<phi> \\<psi>)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>)}", "using af\\<^sub>G_nested_prop_atoms"], ["proof (prove)\nusing this:\n  nested_prop_atoms ?\\<psi>\n  \\<subseteq> nested_prop_atoms (G\\<^sub>n ?\\<phi>) \\<Longrightarrow>\n  nested_prop_atoms (af\\<^sub>G ?\\<phi> ?\\<psi> ?w)\n  \\<subseteq> nested_prop_atoms (G\\<^sub>n ?\\<phi>)\n\ngoal (1 subgoal):\n 1. nested_prop_atoms \\<psi>\n    \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>) \\<Longrightarrow>\n    range (af\\<^sub>G \\<phi> \\<psi>)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (G\\<^sub>n \\<phi>)}", "by blast"], ["", "lemma af_letter\\<^sub>\\<nu>_snd_nested_prop_atoms_helper:\n  \"snd p \\<sim> false\\<^sub>n \\<Longrightarrow> nested_prop_atoms (snd (af_letter\\<^sub>\\<nu> X p \\<nu>)) \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X\"\n  \"\\<not> snd p \\<sim> false\\<^sub>n \\<Longrightarrow> nested_prop_atoms (snd (af_letter\\<^sub>\\<nu> X p \\<nu>)) \\<subseteq> nested_prop_atoms (snd p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (snd p \\<sim> false\\<^sub>n \\<Longrightarrow>\n     nested_prop_atoms (snd (af_letter\\<^sub>\\<nu> X p \\<nu>))\n     \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X) &&&\n    (\\<not> snd p \\<sim> false\\<^sub>n \\<Longrightarrow>\n     nested_prop_atoms (snd (af_letter\\<^sub>\\<nu> X p \\<nu>))\n     \\<subseteq> nested_prop_atoms (snd p))", "by (simp_all add: af_letter_nested_prop_atoms nested_prop_atoms\\<^sub>\\<nu>_def)\n     (metis GF_advice_nested_prop_atoms\\<^sub>\\<nu> af_letter_nested_prop_atoms nested_prop_atoms\\<^sub>\\<nu>_subset dual_order.trans nested_prop_atoms\\<^sub>\\<nu>_def normalise_nested_propos)"], ["", "lemma af_letter\\<^sub>\\<nu>_fst_nested_prop_atoms:\n  \"nested_prop_atoms (fst (af_letter\\<^sub>\\<nu> X p \\<nu>)) \\<subseteq> nested_prop_atoms (fst p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nested_prop_atoms (fst (af_letter\\<^sub>\\<nu> X p \\<nu>))\n    \\<subseteq> nested_prop_atoms (fst p)", "by (simp add: af_letter_nested_prop_atoms)"], ["", "lemma af_letter\\<^sub>\\<nu>_snd_nested_prop_atoms:\n  \"nested_prop_atoms (snd (af_letter\\<^sub>\\<nu> X p \\<nu>)) \\<subseteq> (nested_prop_atoms\\<^sub>\\<nu> (fst p) X) \\<union> (nested_prop_atoms (snd p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nested_prop_atoms (snd (af_letter\\<^sub>\\<nu> X p \\<nu>))\n    \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                nested_prop_atoms (snd p)", "using af_letter\\<^sub>\\<nu>_snd_nested_prop_atoms_helper"], ["proof (prove)\nusing this:\n  snd ?p \\<sim> false\\<^sub>n \\<Longrightarrow>\n  nested_prop_atoms (snd (af_letter\\<^sub>\\<nu> ?X ?p ?\\<nu>))\n  \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst ?p) ?X\n  \\<not> snd ?p \\<sim> false\\<^sub>n \\<Longrightarrow>\n  nested_prop_atoms (snd (af_letter\\<^sub>\\<nu> ?X ?p ?\\<nu>))\n  \\<subseteq> nested_prop_atoms (snd ?p)\n\ngoal (1 subgoal):\n 1. nested_prop_atoms (snd (af_letter\\<^sub>\\<nu> X p \\<nu>))\n    \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                nested_prop_atoms (snd p)", "by blast"], ["", "lemma af_letter\\<^sub>\\<nu>_fst_range:\n  \"range (fst \\<circ> af_letter\\<^sub>\\<nu> X p) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (fst p)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (fst \\<circ> af_letter\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)}", "using af_letter\\<^sub>\\<nu>_fst_nested_prop_atoms"], ["proof (prove)\nusing this:\n  nested_prop_atoms (fst (af_letter\\<^sub>\\<nu> ?X ?p ?\\<nu>))\n  \\<subseteq> nested_prop_atoms (fst ?p)\n\ngoal (1 subgoal):\n 1. range (fst \\<circ> af_letter\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)}", "by force"], ["", "lemma af_letter\\<^sub>\\<nu>_snd_range:\n  \"range (snd \\<circ> af_letter\\<^sub>\\<nu> X p) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> (nested_prop_atoms\\<^sub>\\<nu> (fst p) X) \\<union> nested_prop_atoms (snd p)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (snd \\<circ> af_letter\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "using af_letter\\<^sub>\\<nu>_snd_nested_prop_atoms"], ["proof (prove)\nusing this:\n  nested_prop_atoms (snd (af_letter\\<^sub>\\<nu> ?X ?p ?\\<nu>))\n  \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst ?p) ?X \\<union>\n              nested_prop_atoms (snd ?p)\n\ngoal (1 subgoal):\n 1. range (snd \\<circ> af_letter\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "by force"], ["", "lemma af_letter\\<^sub>\\<nu>_range:\n  \"range (af_letter\\<^sub>\\<nu> X p) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (fst p)} \\<times> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> (nested_prop_atoms\\<^sub>\\<nu> (fst p) X) \\<union> nested_prop_atoms (snd p)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (af_letter\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n                {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. range (af_letter\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n                {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "have \"range (af_letter\\<^sub>\\<nu> X p) \\<subseteq> range (fst \\<circ> af_letter\\<^sub>\\<nu> X p) \\<times> range (snd \\<circ> af_letter\\<^sub>\\<nu> X p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (af_letter\\<^sub>\\<nu> X p)\n    \\<subseteq> range (fst \\<circ> af_letter\\<^sub>\\<nu> X p) \\<times>\n                range (snd \\<circ> af_letter\\<^sub>\\<nu> X p)", "by (simp add: image_subset_iff mem_Times_iff)"], ["proof (state)\nthis:\n  range (af_letter\\<^sub>\\<nu> X p)\n  \\<subseteq> range (fst \\<circ> af_letter\\<^sub>\\<nu> X p) \\<times>\n              range (snd \\<circ> af_letter\\<^sub>\\<nu> X p)\n\ngoal (1 subgoal):\n 1. range (af_letter\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n                {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "also"], ["proof (state)\nthis:\n  range (af_letter\\<^sub>\\<nu> X p)\n  \\<subseteq> range (fst \\<circ> af_letter\\<^sub>\\<nu> X p) \\<times>\n              range (snd \\<circ> af_letter\\<^sub>\\<nu> X p)\n\ngoal (1 subgoal):\n 1. range (af_letter\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n                {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "have \"\\<dots> \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (fst p)} \\<times> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> (nested_prop_atoms\\<^sub>\\<nu> (fst p) X) \\<union> nested_prop_atoms (snd p)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (fst \\<circ> af_letter\\<^sub>\\<nu> X p) \\<times>\n    range (snd \\<circ> af_letter\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n                {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "using af_letter\\<^sub>\\<nu>_fst_range af_letter\\<^sub>\\<nu>_snd_range"], ["proof (prove)\nusing this:\n  range (fst \\<circ> af_letter\\<^sub>\\<nu> ?X ?p)\n  \\<subseteq> {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms (fst ?p)}\n  range (snd \\<circ> af_letter\\<^sub>\\<nu> ?X ?p)\n  \\<subseteq> {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst ?p)\n                            ?X \\<union>\n                           nested_prop_atoms (snd ?p)}\n\ngoal (1 subgoal):\n 1. range (fst \\<circ> af_letter\\<^sub>\\<nu> X p) \\<times>\n    range (snd \\<circ> af_letter\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n                {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "by blast"], ["proof (state)\nthis:\n  range (fst \\<circ> af_letter\\<^sub>\\<nu> X p) \\<times>\n  range (snd \\<circ> af_letter\\<^sub>\\<nu> X p)\n  \\<subseteq> {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n              {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                           nested_prop_atoms (snd p)}\n\ngoal (1 subgoal):\n 1. range (af_letter\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n                {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "finally"], ["proof (chain)\npicking this:\n  range (af_letter\\<^sub>\\<nu> X p)\n  \\<subseteq> {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n              {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                           nested_prop_atoms (snd p)}", "show ?thesis"], ["proof (prove)\nusing this:\n  range (af_letter\\<^sub>\\<nu> X p)\n  \\<subseteq> {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n              {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                           nested_prop_atoms (snd p)}\n\ngoal (1 subgoal):\n 1. range (af_letter\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n                {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "."], ["proof (state)\nthis:\n  range (af_letter\\<^sub>\\<nu> X p)\n  \\<subseteq> {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n              {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                           nested_prop_atoms (snd p)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma af\\<^sub>\\<nu>_fst_nested_prop_atoms:\n  \"nested_prop_atoms (fst (af\\<^sub>\\<nu> X p w)) \\<subseteq> nested_prop_atoms (fst p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nested_prop_atoms (fst (af\\<^sub>\\<nu> X p w))\n    \\<subseteq> nested_prop_atoms (fst p)", "by (induction w rule: rev_induct) (auto, insert af_letter_nested_prop_atoms, blast)"], ["", "lemma af_letter_nested_prop_atoms\\<^sub>\\<nu>:\n  \"nested_prop_atoms\\<^sub>\\<nu> (af_letter \\<phi> \\<nu>) X \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> \\<phi> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nested_prop_atoms\\<^sub>\\<nu> (af_letter \\<phi> \\<nu>) X\n    \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> \\<phi> X", "by (induction \\<phi>) (simp_all add: nested_prop_atoms\\<^sub>\\<nu>_def, blast+)"], ["", "lemma af\\<^sub>\\<nu>_fst_nested_prop_atoms\\<^sub>\\<nu>:\n  \"nested_prop_atoms\\<^sub>\\<nu> (fst (af\\<^sub>\\<nu> X p w)) X \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nested_prop_atoms\\<^sub>\\<nu> (fst (af\\<^sub>\\<nu> X p w)) X\n    \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X", "by (induction w rule: rev_induct) (auto, insert af_letter_nested_prop_atoms\\<^sub>\\<nu>, blast)"], ["", "lemma af\\<^sub>\\<nu>_fst_range:\n  \"range (fst \\<circ> af\\<^sub>\\<nu> X p) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (fst p)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (fst \\<circ> af\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)}", "using af\\<^sub>\\<nu>_fst_nested_prop_atoms"], ["proof (prove)\nusing this:\n  nested_prop_atoms (fst (af\\<^sub>\\<nu> ?X ?p ?w))\n  \\<subseteq> nested_prop_atoms (fst ?p)\n\ngoal (1 subgoal):\n 1. range (fst \\<circ> af\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)}", "by fastforce"], ["", "lemma af\\<^sub>\\<nu>_snd_nested_prop_atoms:\n  \"nested_prop_atoms (snd (af\\<^sub>\\<nu> X p w)) \\<subseteq> (nested_prop_atoms\\<^sub>\\<nu> (fst p) X) \\<union> (nested_prop_atoms (snd p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nested_prop_atoms (snd (af\\<^sub>\\<nu> X p w))\n    \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                nested_prop_atoms (snd p)", "proof (induction w arbitrary: p rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       nested_prop_atoms (snd (af\\<^sub>\\<nu> X p []))\n       \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                   nested_prop_atoms (snd p)\n 2. \\<And>x xs p.\n       (\\<And>p.\n           nested_prop_atoms (snd (af\\<^sub>\\<nu> X p xs))\n           \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                       nested_prop_atoms (snd p)) \\<Longrightarrow>\n       nested_prop_atoms (snd (af\\<^sub>\\<nu> X p (xs @ [x])))\n       \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                   nested_prop_atoms (snd p)", "case (snoc x xs)"], ["proof (state)\nthis:\n  nested_prop_atoms (snd (af\\<^sub>\\<nu> X ?p xs))\n  \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst ?p) X \\<union>\n              nested_prop_atoms (snd ?p)\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       nested_prop_atoms (snd (af\\<^sub>\\<nu> X p []))\n       \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                   nested_prop_atoms (snd p)\n 2. \\<And>x xs p.\n       (\\<And>p.\n           nested_prop_atoms (snd (af\\<^sub>\\<nu> X p xs))\n           \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                       nested_prop_atoms (snd p)) \\<Longrightarrow>\n       nested_prop_atoms (snd (af\\<^sub>\\<nu> X p (xs @ [x])))\n       \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                   nested_prop_atoms (snd p)", "let ?p = \"af\\<^sub>\\<nu> X p xs\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       nested_prop_atoms (snd (af\\<^sub>\\<nu> X p []))\n       \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                   nested_prop_atoms (snd p)\n 2. \\<And>x xs p.\n       (\\<And>p.\n           nested_prop_atoms (snd (af\\<^sub>\\<nu> X p xs))\n           \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                       nested_prop_atoms (snd p)) \\<Longrightarrow>\n       nested_prop_atoms (snd (af\\<^sub>\\<nu> X p (xs @ [x])))\n       \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                   nested_prop_atoms (snd p)", "have \"nested_prop_atoms (snd (af\\<^sub>\\<nu> X p (xs @ [x]))) \\<subseteq> (nested_prop_atoms\\<^sub>\\<nu> (fst ?p) X) \\<union> (nested_prop_atoms (snd ?p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nested_prop_atoms (snd (af\\<^sub>\\<nu> X p (xs @ [x])))\n    \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst (af\\<^sub>\\<nu> X p xs))\n                 X \\<union>\n                nested_prop_atoms (snd (af\\<^sub>\\<nu> X p xs))", "by (simp add: af_letter\\<^sub>\\<nu>_snd_nested_prop_atoms)"], ["proof (state)\nthis:\n  nested_prop_atoms (snd (af\\<^sub>\\<nu> X p (xs @ [x])))\n  \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst (af\\<^sub>\\<nu> X p xs))\n               X \\<union>\n              nested_prop_atoms (snd (af\\<^sub>\\<nu> X p xs))\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       nested_prop_atoms (snd (af\\<^sub>\\<nu> X p []))\n       \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                   nested_prop_atoms (snd p)\n 2. \\<And>x xs p.\n       (\\<And>p.\n           nested_prop_atoms (snd (af\\<^sub>\\<nu> X p xs))\n           \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                       nested_prop_atoms (snd p)) \\<Longrightarrow>\n       nested_prop_atoms (snd (af\\<^sub>\\<nu> X p (xs @ [x])))\n       \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                   nested_prop_atoms (snd p)", "then"], ["proof (chain)\npicking this:\n  nested_prop_atoms (snd (af\\<^sub>\\<nu> X p (xs @ [x])))\n  \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst (af\\<^sub>\\<nu> X p xs))\n               X \\<union>\n              nested_prop_atoms (snd (af\\<^sub>\\<nu> X p xs))", "show ?case"], ["proof (prove)\nusing this:\n  nested_prop_atoms (snd (af\\<^sub>\\<nu> X p (xs @ [x])))\n  \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst (af\\<^sub>\\<nu> X p xs))\n               X \\<union>\n              nested_prop_atoms (snd (af\\<^sub>\\<nu> X p xs))\n\ngoal (1 subgoal):\n 1. nested_prop_atoms (snd (af\\<^sub>\\<nu> X p (xs @ [x])))\n    \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                nested_prop_atoms (snd p)", "using snoc af\\<^sub>\\<nu>_fst_nested_prop_atoms\\<^sub>\\<nu>"], ["proof (prove)\nusing this:\n  nested_prop_atoms (snd (af\\<^sub>\\<nu> X p (xs @ [x])))\n  \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst (af\\<^sub>\\<nu> X p xs))\n               X \\<union>\n              nested_prop_atoms (snd (af\\<^sub>\\<nu> X p xs))\n  nested_prop_atoms (snd (af\\<^sub>\\<nu> X ?p xs))\n  \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst ?p) X \\<union>\n              nested_prop_atoms (snd ?p)\n  nested_prop_atoms\\<^sub>\\<nu> (fst (af\\<^sub>\\<nu> ?X ?p ?w)) ?X\n  \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst ?p) ?X\n\ngoal (1 subgoal):\n 1. nested_prop_atoms (snd (af\\<^sub>\\<nu> X p (xs @ [x])))\n    \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                nested_prop_atoms (snd p)", "by blast"], ["proof (state)\nthis:\n  nested_prop_atoms (snd (af\\<^sub>\\<nu> X p (xs @ [x])))\n  \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n              nested_prop_atoms (snd p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       nested_prop_atoms (snd (af\\<^sub>\\<nu> X p []))\n       \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                   nested_prop_atoms (snd p)", "qed (simp add: nested_prop_atoms\\<^sub>\\<nu>_def)"], ["", "lemma af\\<^sub>\\<nu>_snd_range:\n  \"range (snd \\<circ> af\\<^sub>\\<nu> X p) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> (nested_prop_atoms\\<^sub>\\<nu> (fst p) X) \\<union> nested_prop_atoms (snd p)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (snd \\<circ> af\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "using af\\<^sub>\\<nu>_snd_nested_prop_atoms"], ["proof (prove)\nusing this:\n  nested_prop_atoms (snd (af\\<^sub>\\<nu> ?X ?p ?w))\n  \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst ?p) ?X \\<union>\n              nested_prop_atoms (snd ?p)\n\ngoal (1 subgoal):\n 1. range (snd \\<circ> af\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "by fastforce"], ["", "lemma af\\<^sub>\\<nu>_range:\n  \"range (af\\<^sub>\\<nu> X p) \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (fst p)} \\<times> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> (nested_prop_atoms\\<^sub>\\<nu> (fst p) X) \\<union> nested_prop_atoms (snd p)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (af\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n                {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. range (af\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n                {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "have \"range (af\\<^sub>\\<nu> X p) \\<subseteq> range (fst \\<circ> af\\<^sub>\\<nu> X p) \\<times> range (snd \\<circ> af\\<^sub>\\<nu> X p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (af\\<^sub>\\<nu> X p)\n    \\<subseteq> range (fst \\<circ> af\\<^sub>\\<nu> X p) \\<times>\n                range (snd \\<circ> af\\<^sub>\\<nu> X p)", "by (simp add: image_subset_iff mem_Times_iff)"], ["proof (state)\nthis:\n  range (af\\<^sub>\\<nu> X p)\n  \\<subseteq> range (fst \\<circ> af\\<^sub>\\<nu> X p) \\<times>\n              range (snd \\<circ> af\\<^sub>\\<nu> X p)\n\ngoal (1 subgoal):\n 1. range (af\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n                {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "also"], ["proof (state)\nthis:\n  range (af\\<^sub>\\<nu> X p)\n  \\<subseteq> range (fst \\<circ> af\\<^sub>\\<nu> X p) \\<times>\n              range (snd \\<circ> af\\<^sub>\\<nu> X p)\n\ngoal (1 subgoal):\n 1. range (af\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n                {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "have \"\\<dots> \\<subseteq> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> nested_prop_atoms (fst p)} \\<times> {\\<psi>. nested_prop_atoms \\<psi> \\<subseteq> (nested_prop_atoms\\<^sub>\\<nu> (fst p) X) \\<union> nested_prop_atoms (snd p)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (fst \\<circ> af\\<^sub>\\<nu> X p) \\<times>\n    range (snd \\<circ> af\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n                {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "using af\\<^sub>\\<nu>_fst_range af\\<^sub>\\<nu>_snd_range"], ["proof (prove)\nusing this:\n  range (fst \\<circ> af\\<^sub>\\<nu> ?X ?p)\n  \\<subseteq> {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms (fst ?p)}\n  range (snd \\<circ> af\\<^sub>\\<nu> ?X ?p)\n  \\<subseteq> {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst ?p)\n                            ?X \\<union>\n                           nested_prop_atoms (snd ?p)}\n\ngoal (1 subgoal):\n 1. range (fst \\<circ> af\\<^sub>\\<nu> X p) \\<times>\n    range (snd \\<circ> af\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n                {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "by blast"], ["proof (state)\nthis:\n  range (fst \\<circ> af\\<^sub>\\<nu> X p) \\<times>\n  range (snd \\<circ> af\\<^sub>\\<nu> X p)\n  \\<subseteq> {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n              {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                           nested_prop_atoms (snd p)}\n\ngoal (1 subgoal):\n 1. range (af\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n                {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "finally"], ["proof (chain)\npicking this:\n  range (af\\<^sub>\\<nu> X p)\n  \\<subseteq> {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n              {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                           nested_prop_atoms (snd p)}", "show ?thesis"], ["proof (prove)\nusing this:\n  range (af\\<^sub>\\<nu> X p)\n  \\<subseteq> {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n              {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                           nested_prop_atoms (snd p)}\n\ngoal (1 subgoal):\n 1. range (af\\<^sub>\\<nu> X p)\n    \\<subseteq> {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n                {\\<psi>.\n                 nested_prop_atoms \\<psi>\n                 \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p)\n                              X \\<union>\n                             nested_prop_atoms (snd p)}", "."], ["proof (state)\nthis:\n  range (af\\<^sub>\\<nu> X p)\n  \\<subseteq> {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms (fst p)} \\<times>\n              {\\<psi>.\n               nested_prop_atoms \\<psi>\n               \\<subseteq> nested_prop_atoms\\<^sub>\\<nu> (fst p) X \\<union>\n                           nested_prop_atoms (snd p)}\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}