{"file_name": "/home/qj213/afp-2021-10-22/thys/LTL_Master_Theorem/Omega_Words_Fun_Stream.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LTL_Master_Theorem", "problem_names": ["lemma to_omega_to_stream[simp]:\n  \"to_omega (to_stream w) = w\"", "lemma to_stream_to_omega[simp]:\n  \"to_stream (to_omega s) = s\"", "lemma bij_to_omega:\n  \"bij to_omega\"", "lemma bij_to_stream:\n  \"bij to_stream\"", "lemma image_intersection[simp]:\n  \"to_omega ` (A \\<inter> B) = to_omega ` A \\<inter> to_omega ` B\"\n  \"to_stream ` (C \\<inter> D) = to_stream ` C \\<inter> to_stream ` D\"", "lemma to_stream_snth[simp]:\n  \"(to_stream w) !! k = w k\"", "lemma to_omega_index[simp]:\n  \"(to_omega s) k = s !! k\"", "lemma to_stream_stake[simp]:\n  \"stake k (to_stream w) = prefix k w\"", "lemma to_omega_prefix[simp]:\n  \"prefix k (to_omega s) = stake k s\"", "lemma in_image[simp]:\n  \"x \\<in> to_omega ` X \\<longleftrightarrow> to_stream x \\<in> X\"\n  \"y \\<in> to_stream ` Y \\<longleftrightarrow> to_omega y \\<in> Y\""], "translations": [["", "lemma to_omega_to_stream[simp]:\n  \"to_omega (to_stream w) = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_omega (to_stream w) = w", "unfolding to_omega_def to_stream_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (!!) (smap w nats) = w", "by auto"], ["", "lemma to_stream_to_omega[simp]:\n  \"to_stream (to_omega s) = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_stream (to_omega s) = s", "unfolding to_omega_def to_stream_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. smap ((!!) s) nats = s", "by (metis stream_smap_nats)"], ["", "lemma bij_to_omega:\n  \"bij to_omega\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij to_omega", "by (metis bijI' to_omega_to_stream to_stream_to_omega)"], ["", "lemma bij_to_stream:\n  \"bij to_stream\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij to_stream", "by (metis bijI' to_omega_to_stream to_stream_to_omega)"], ["", "lemma image_intersection[simp]:\n  \"to_omega ` (A \\<inter> B) = to_omega ` A \\<inter> to_omega ` B\"\n  \"to_stream ` (C \\<inter> D) = to_stream ` C \\<inter> to_stream ` D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_omega ` (A \\<inter> B) = to_omega ` A \\<inter> to_omega ` B &&&\n    to_stream ` (C \\<inter> D) = to_stream ` C \\<inter> to_stream ` D", "by (simp_all add: bij_is_inj bij_to_omega bij_to_stream image_Int)"], ["", "lemma to_stream_snth[simp]:\n  \"(to_stream w) !! k = w k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_stream w !! k = w k", "by (simp add: to_stream_def)"], ["", "lemma to_omega_index[simp]:\n  \"(to_omega s) k = s !! k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_omega s k = s !! k", "by (metis to_stream_snth to_stream_to_omega)"], ["", "lemma to_stream_stake[simp]:\n  \"stake k (to_stream w) = prefix k w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake k (to_stream w) = prefix k w", "by (induction k) (simp add: to_stream_def)+"], ["", "lemma to_omega_prefix[simp]:\n  \"prefix k (to_omega s) = stake k s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix k (to_omega s) = stake k s", "by (metis to_stream_stake to_stream_to_omega)"], ["", "lemma in_image[simp]:\n  \"x \\<in> to_omega ` X \\<longleftrightarrow> to_stream x \\<in> X\"\n  \"y \\<in> to_stream ` Y \\<longleftrightarrow> to_omega y \\<in> Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> to_omega ` X) = (to_stream x \\<in> X) &&&\n    (y \\<in> to_stream ` Y) = (to_omega y \\<in> Y)", "by force+"], ["", "end"]]}